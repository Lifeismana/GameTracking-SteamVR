 D __bss_start
 D _edata
 D _end
 T xrAcquireSwapchainImage
 T xrApplyHapticFeedback
 T xrAttachSessionActionSets
 T xrBeginFrame
 T xrBeginSession
 T xrCreateAction
 T xrCreateActionSet
 T xrCreateActionSpace
 T xrCreateInstance
 T xrCreateReferenceSpace
 T xrCreateSession
 T xrCreateSwapchain
 T xrDestroyAction
 T xrDestroyActionSet
 T xrDestroyInstance
 T xrDestroySession
 T xrDestroySpace
 T xrDestroySwapchain
 T xrEndFrame
 T xrEndSession
 T xrEnumerateApiLayerProperties
 T xrEnumerateBoundSourcesForAction
 T xrEnumerateEnvironmentBlendModes
 T xrEnumerateInstanceExtensionProperties
 T xrEnumerateReferenceSpaces
 T xrEnumerateSwapchainFormats
 T xrEnumerateSwapchainImages
 T xrEnumerateViewConfigurationViews
 T xrEnumerateViewConfigurations
 T xrGetActionStateBoolean
 T xrGetActionStateFloat
 T xrGetActionStatePose
 T xrGetActionStateVector2f
 T xrGetCurrentInteractionProfile
 T xrGetInputSourceLocalizedName
 T xrGetInstanceProcAddr
 T xrGetInstanceProperties
 T xrGetReferenceSpaceBoundsRect
 T xrGetSystem
 T xrGetSystemProperties
 T xrGetViewConfigurationProperties
 T xrLocateSpace
 T xrLocateViews
 T xrPathToString
 T xrPollEvent
 T xrReleaseSwapchainImage
 T xrRequestExitSession
 T xrResultToString
 T xrStopHapticFeedback
 T xrStringToPath
 T xrStructureTypeToString
 T xrSuggestInteractionProfileBindings
 T xrSyncActions
 T xrWaitFrame
 T xrWaitSwapchainImage
 VTT for std::basic_ifstream<char, std::char_traits<char> >
 VTT for std::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >
 VTT for std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >
 _ITM_deregisterTMCloneTable
 _ITM_registerTMCloneTable
 __cxa_atexit
 __cxa_begin_catch
 __cxa_end_catch
 __cxa_finalize
 __cxa_guard_abort
 __cxa_guard_acquire
 __cxa_guard_release
 __cxa_pure_virtual
 __cxa_rethrow
 __cxa_throw_bad_array_new_length
 __gmon_start__
 __gxx_personality_v0
 __isoc99_sscanf
 __pthread_key_create
 __xstat
 abort
 access
 b (anonymous namespace)::GetSetCurrentLoaderInstance()::current_loader_instance
 b GetGlobalLoaderMutex()::loader_mutex
 b Json::OurReader::decodeNumber(Json::OurReader::Token&, Json::Value&)::negative_last_digit
 b Json::OurReader::decodeNumber(Json::OurReader::Token&, Json::Value&)::negative_threshold
 b Json::OurReader::decodeNumber(Json::OurReader::Token&, Json::Value&)::positive_last_digit
 b Json::OurReader::decodeNumber(Json::OurReader::Token&, Json::Value&)::positive_threshold
 b Json::Value::null
 b Json::Value::nullRef
 b Json::Value::nullSingleton()::nullStatic
 b LoaderLogger::GetInstance()::instance
 b RuntimeInterface::GetInstance()::instance
 b any_objects_registered
 b completed.0
 b dwarf_reg_size_table
 b frame_hdr_cache
 b frame_hdr_cache_head
 b guard variable for (anonymous namespace)::GetSetCurrentLoaderInstance()::current_loader_instance
 b guard variable for Json::OurReader::decodeNumber(Json::OurReader::Token&, Json::Value&)::negative_last_digit
 b guard variable for Json::OurReader::decodeNumber(Json::OurReader::Token&, Json::Value&)::negative_threshold
 b guard variable for Json::OurReader::decodeNumber(Json::OurReader::Token&, Json::Value&)::positive_last_digit
 b guard variable for Json::OurReader::decodeNumber(Json::OurReader::Token&, Json::Value&)::positive_threshold
 b guard variable for Json::Value::nullSingleton()::nullStatic
 b guard variable for LoaderLogger::GetInstance()::instance
 b guard variable for RuntimeInterface::GetInstance()::instance
 b marker.4
 b object_mutex
 b once_regsizes.0
 b seen_objects
 b std::__ioinit
 b subs.2
 b unseen_objects
 closedir
 d DW.ref._ZTISt9bad_alloc
 d DW.ref._ZTISt9exception
 d DW.ref.__gxx_personality_v0
 d Json::(anonymous namespace)::valueToString(double, bool, unsigned int, Json::PrecisionType)::reps
 d _DYNAMIC
 d _GLOBAL_OFFSET_TABLE_
 d __TMC_END__
 d __TMC_LIST__
 d __do_global_dtors_aux_fini_array_entry
 d __dso_handle
 d __frame_dummy_init_array_entry
 d adds.1
 d to_hex(unsigned char const*, unsigned long)::hex
 d typeinfo for (anonymous namespace)::DebugUtilsLogRecorder
 d typeinfo for (anonymous namespace)::OstreamLoaderLogRecorder
 d typeinfo for ApiLayerInterface
 d typeinfo for Json::BuiltStyledStreamWriter
 d typeinfo for Json::CharReader
 d typeinfo for Json::CharReader::Factory
 d typeinfo for Json::CharReaderBuilder
 d typeinfo for Json::FastWriter
 d typeinfo for Json::OurCharReader
 d typeinfo for Json::StreamWriter
 d typeinfo for Json::StreamWriter::Factory
 d typeinfo for Json::StreamWriterBuilder
 d typeinfo for Json::StyledWriter
 d typeinfo for Json::Writer
 d typeinfo for LoaderInstance
 d typeinfo for LoaderLogRecorder
 d typeinfo for RuntimeInterface
 d vtable for (anonymous namespace)::DebugUtilsLogRecorder
 d vtable for (anonymous namespace)::OstreamLoaderLogRecorder
 d vtable for ApiLayerInterface
 d vtable for Json::BuiltStyledStreamWriter
 d vtable for Json::CharReaderBuilder
 d vtable for Json::FastWriter
 d vtable for Json::OurCharReader
 d vtable for Json::StreamWriter
 d vtable for Json::StreamWriter::Factory
 d vtable for Json::StreamWriterBuilder
 d vtable for Json::StyledWriter
 d vtable for Json::Writer
 d vtable for LoaderInstance
 d vtable for LoaderLogRecorder
 d vtable for RuntimeInterface
 dl_iterate_phdr
 dlclose
 dlerror
 dlopen
 dlsym
 free
 getcwd
 getegid
 getenv
 geteuid
 getgid
 getuid
 localeconv
 malloc
 memcmp
 memcpy
 memmove
 memset
 modf
 opendir
 operator delete(void*, unsigned long)
 operator delete[](void*)
 operator new(unsigned long)
 operator new[](unsigned long)
 pthread_mutex_lock
 pthread_mutex_unlock
 pthread_once
 pthread_rwlock_rdlock
 pthread_rwlock_unlock
 pthread_rwlock_wrlock
 r Json::Value::Value(Json::ValueType)::emptyString
 r Json::Value::defaultRealPrecision
 r Json::Value::maxInt
 r Json::Value::maxInt64
 r Json::Value::maxLargestInt
 r Json::Value::maxLargestUInt
 r Json::Value::maxUInt
 r Json::Value::maxUInt64
 r Json::Value::minInt
 r Json::Value::minInt64
 r Json::Value::minLargestInt
 r Json::hex2
 r LoaderInstance::LoaderSpecificExtensions()::extensions
 r __FRAME_END__
 r std::__detail::__to_chars_10_impl<unsigned int>(char*, unsigned int, unsigned int)::__digits
 r terminator.3
 r typeinfo name for (anonymous namespace)::DebugUtilsLogRecorder
 r typeinfo name for (anonymous namespace)::OstreamLoaderLogRecorder
 r typeinfo name for ApiLayerInterface
 r typeinfo name for Json::BuiltStyledStreamWriter
 r typeinfo name for Json::CharReader
 r typeinfo name for Json::CharReader::Factory
 r typeinfo name for Json::CharReaderBuilder
 r typeinfo name for Json::FastWriter
 r typeinfo name for Json::OurCharReader
 r typeinfo name for Json::StreamWriter
 r typeinfo name for Json::StreamWriter::Factory
 r typeinfo name for Json::StreamWriterBuilder
 r typeinfo name for Json::StyledWriter
 r typeinfo name for Json::Writer
 r typeinfo name for LoaderInstance
 r typeinfo name for LoaderLogRecorder
 r typeinfo name for RuntimeInterface
 readdir
 realpath
 snprintf
 std::_Hash_bytes(void const*, unsigned long, unsigned long)
 std::_Rb_tree_decrement(std::_Rb_tree_node_base const*)
 std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
 std::_Rb_tree_increment(std::_Rb_tree_node_base const*)
 std::_Rb_tree_increment(std::_Rb_tree_node_base*)
 std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
 std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
 std::__basic_file<char>::is_open() const
 std::__basic_file<char>::~__basic_file()
 std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned long, unsigned long, unsigned long) const
 std::__throw_bad_alloc()
 std::__throw_bad_cast()
 std::__throw_length_error(char const*)
 std::__throw_logic_error(char const*)
 std::__throw_out_of_range_fmt(char const*, ...)
 std::__throw_system_error(int)
 std::basic_filebuf<char, std::char_traits<char> >::basic_filebuf()
 std::basic_filebuf<char, std::char_traits<char> >::close()
 std::basic_filebuf<char, std::char_traits<char> >::open(char const*, std::_Ios_Openmode)
 std::basic_filebuf<char, std::char_traits<char> >::~basic_filebuf()
 std::basic_ifstream<char, std::char_traits<char> >::~basic_ifstream()
 std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)
 std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*)
 std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char)
 std::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_istringstream()
 std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)
 std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)
 std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_ostringstream()
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, unsigned long, std::allocator<char> const&)
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::allocator<char> const&)
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&)
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long)
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(unsigned long, char, std::allocator<char> const&)
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
 std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::_M_sync(char*, unsigned long, unsigned long)
 std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const
 std::cerr
 std::cout
 std::ctype<char>::_M_widen_init() const
 std::ios_base::Init::Init()
 std::ios_base::Init::~Init()
 std::ios_base::ios_base()
 std::ios_base::~ios_base()
 std::istream& std::istream::_M_extract<double>(double&)
 std::locale::locale()
 std::locale::~locale()
 std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)
 std::ostream::flush()
 std::ostream::operator<<(int)
 std::ostream::operator<<(std::basic_streambuf<char, std::char_traits<char> >*)
 std::ostream::put(char)
 std::string::_M_leak_hard()
 std::string::_M_mutate(unsigned long, unsigned long, unsigned long)
 std::string::_Rep::_M_destroy(std::allocator<char> const&)
 std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&)
 std::string::_Rep::_S_empty_rep_storage
 std::string::append(char const*, unsigned long)
 std::string::append(std::string const&)
 std::string::append(unsigned long, char)
 std::string::assign(char const*, unsigned long)
 std::string::assign(std::string const&)
 std::string::compare(char const*) const
 std::string::erase(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>)
 std::string::find(char, unsigned long) const
 std::string::insert(unsigned long, char const*, unsigned long)
 std::string::replace(unsigned long, unsigned long, char const*, unsigned long)
 std::string::reserve(unsigned long)
 std::string::resize(unsigned long, char)
 std::string::rfind(char, unsigned long) const
 std::string::swap(std::string&)
 std::terminate()
 strchr
 strcmp
 strlen
 strncpy
 strtol
 t (anonymous namespace)::DebugUtilsLogRecorder::LogDebugUtilsMessage(unsigned long, unsigned long, XrDebugUtilsMessengerCallbackDataEXT const*)
 t (anonymous namespace)::DebugUtilsLogRecorder::LogMessage(unsigned long, unsigned long, XrLoaderLogMessengerCallbackData const*)
 t (anonymous namespace)::DebugUtilsLogRecorder::LogMessage(unsigned long, unsigned long, XrLoaderLogMessengerCallbackData const*) [clone .cold]
 t (anonymous namespace)::DebugUtilsLogRecorder::~DebugUtilsLogRecorder()
 t (anonymous namespace)::GetSetCurrentLoaderInstance()
 t (anonymous namespace)::OstreamLoaderLogRecorder::LogMessage(unsigned long, unsigned long, XrLoaderLogMessengerCallbackData const*)
 t (anonymous namespace)::OstreamLoaderLogRecorder::LogMessage(unsigned long, unsigned long, XrLoaderLogMessengerCallbackData const*) [clone .cold]
 t (anonymous namespace)::OstreamLoaderLogRecorder::~OstreamLoaderLogRecorder()
 t ActiveLoaderInstance::Get(LoaderInstance**, char const*)
 t ActiveLoaderInstance::Get(LoaderInstance**, char const*) [clone .cold]
 t ActiveLoaderInstance::IsAvailable()
 t ActiveLoaderInstance::Remove()
 t ActiveLoaderInstance::Set(std::unique_ptr<LoaderInstance, std::default_delete<LoaderInstance> >, char const*)
 t ActiveLoaderInstance::Set(std::unique_ptr<LoaderInstance, std::default_delete<LoaderInstance> >, char const*) [clone .cold]
 t AddEnvironmentApiLayers(std::vector<std::string, std::allocator<std::string> >&) [clone .constprop.0]
 t AddEnvironmentApiLayers(std::vector<std::string, std::allocator<std::string> >&) [clone .constprop.0] [clone .cold]
 t AddIfJson(std::string const&, std::vector<std::string, std::allocator<std::string> >&)
 t ApiLayerInterface::ApiLayerInterface(std::string const&, void*, std::vector<std::string, std::allocator<std::string> >&, XrResult (*)(XrInstance_T*, char const*, void (**)()), XrResult (*)(XrInstanceCreateInfo const*, XrApiLayerCreateInfo const*, XrInstance_T**))
 t ApiLayerInterface::ApiLayerInterface(std::string const&, void*, std::vector<std::string, std::allocator<std::string> >&, XrResult (*)(XrInstance_T*, char const*, void (**)()), XrResult (*)(XrInstanceCreateInfo const*, XrApiLayerCreateInfo const*, XrInstance_T**)) [clone .cold]
 t ApiLayerInterface::GetApiLayerProperties(std::string const&, unsigned int, unsigned int*, XrApiLayerProperties*)
 t ApiLayerInterface::GetApiLayerProperties(std::string const&, unsigned int, unsigned int*, XrApiLayerProperties*) [clone .cold]
 t ApiLayerInterface::GetInstanceExtensionProperties(std::string const&, char const*, std::vector<XrExtensionProperties, std::allocator<XrExtensionProperties> >&)
 t ApiLayerInterface::GetInstanceExtensionProperties(std::string const&, char const*, std::vector<XrExtensionProperties, std::allocator<XrExtensionProperties> >&) [clone .cold]
 t ApiLayerInterface::LoadApiLayers(std::string const&, unsigned int, char const* const*, std::vector<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> >, std::allocator<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> > > >&)
 t ApiLayerInterface::LoadApiLayers(std::string const&, unsigned int, char const* const*, std::vector<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> >, std::allocator<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> > > >&) [clone .cold]
 t ApiLayerInterface::SupportsExtension(std::string const&) const
 t ApiLayerInterface::~ApiLayerInterface()
 t ApiLayerInterface::~ApiLayerInterface() [clone .cold]
 t ApiLayerManifestFile::ApiLayerManifestFile(ManifestFileType, std::string const&, std::string const&, std::string const&, JsonVersion const&, unsigned int const&, std::string const&)
 t ApiLayerManifestFile::ApiLayerManifestFile(ManifestFileType, std::string const&, std::string const&, std::string const&, JsonVersion const&, unsigned int const&, std::string const&) [clone .cold]
 t ApiLayerManifestFile::CreateIfValid(ManifestFileType, std::string const&, std::vector<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> >, std::allocator<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> > > >&)
 t ApiLayerManifestFile::CreateIfValid(ManifestFileType, std::string const&, std::vector<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> >, std::allocator<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> > > >&) [clone .cold]
 t ApiLayerManifestFile::FindManifestFiles(ManifestFileType, std::vector<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> >, std::allocator<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> > > >&)
 t ApiLayerManifestFile::FindManifestFiles(ManifestFileType, std::vector<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> >, std::allocator<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> > > >&) [clone .cold]
 t ApiLayerManifestFile::PopulateApiLayerProperties(XrApiLayerProperties&) const
 t CheckAllFilesInThePath(std::string const&, bool, std::vector<std::string, std::allocator<std::string> >&)
 t CheckAllFilesInThePath(std::string const&, bool, std::vector<std::string, std::allocator<std::string> >&) [clone .cold]
 t CopyIncludedPaths(bool, std::string const&, std::string const&, std::string&) [clone .constprop.0]
 t CopyIncludedPaths(bool, std::string const&, std::string const&, std::string&) [clone .constprop.0] [clone .cold]
 t DebugUtilsData::AddObjectName(unsigned long, XrObjectType, std::string const&)
 t DebugUtilsData::BeginLabelRegion(XrSession_T*, XrDebugUtilsLabelEXT const&)
 t DebugUtilsData::BeginLabelRegion(XrSession_T*, XrDebugUtilsLabelEXT const&) [clone .cold]
 t DebugUtilsData::DeleteObject(unsigned long, XrObjectType)
 t DebugUtilsData::DeleteSessionLabels(XrSession_T*)
 t DebugUtilsData::EndLabelRegion(XrSession_T*)
 t DebugUtilsData::GetOrCreateSessionLabelList(XrSession_T*)
 t DebugUtilsData::GetOrCreateSessionLabelList(XrSession_T*) [clone .cold]
 t DebugUtilsData::GetSessionLabelList(XrSession_T*)
 t DebugUtilsData::InsertLabel(XrSession_T*, XrDebugUtilsLabelEXT const&)
 t DebugUtilsData::InsertLabel(XrSession_T*, XrDebugUtilsLabelEXT const&) [clone .cold]
 t DebugUtilsData::LookUpSessionLabels(XrSession_T*, std::vector<XrDebugUtilsLabelEXT, std::allocator<XrDebugUtilsLabelEXT> >&) const
 t DebugUtilsData::PopulateNamesAndLabels(std::vector<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> >) const
 t DebugUtilsData::PopulateNamesAndLabels(std::vector<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> >) const [clone .cold]
 t DebugUtilsData::RemoveIndividualLabel(std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > >&)
 t DebugUtilsData::WrapCallbackData(AugmentedCallbackData*, XrDebugUtilsMessengerCallbackDataEXT const*) const
 t DebugUtilsData::~DebugUtilsData()
 t DebugUtilsMessageTypesToLoaderLogMessageTypes(unsigned long)
 t DebugUtilsSeveritiesToLoaderLogMessageSeverities(unsigned long)
 t FileSysUtilsCombinePaths(std::string const&, std::string const&, std::string&)
 t FileSysUtilsCombinePaths(std::string const&, std::string const&, std::string&) [clone .cold]
 t FileSysUtilsFindFilesInPath(std::string const&, std::vector<std::string, std::allocator<std::string> >&)
 t FileSysUtilsGetAbsolutePath(std::string const&, std::string&)
 t FileSysUtilsGetCanonicalPath(std::string const&, std::string&)
 t FileSysUtilsGetCurrentPath(std::string&)
 t FileSysUtilsGetParentPath(std::string const&, std::string&)
 t FileSysUtilsGetParentPath(std::string const&, std::string&) [clone .cold]
 t FileSysUtilsIsAbsolutePath(std::string const&)
 t FileSysUtilsIsDirectory(std::string const&)
 t FileSysUtilsIsRegularFile(std::string const&)
 t FileSysUtilsParsePathList(std::string&, std::vector<std::string, std::allocator<std::string> >&)
 t FileSysUtilsParsePathList(std::string&, std::vector<std::string, std::allocator<std::string> >&) [clone .cold]
 t FileSysUtilsPathExists(std::string const&)
 t GeneratedXrPopulateDispatchTable
 t GetGlobalLoaderMutex()
 t Json::(anonymous namespace)::valueToString(double, bool, unsigned int, Json::PrecisionType)
 t Json::(anonymous namespace)::valueToString(double, bool, unsigned int, Json::PrecisionType) [clone .cold]
 t Json::BuiltStyledStreamWriter::BuiltStyledStreamWriter(std::string, Json::CommentStyle::Enum, std::string, std::string, std::string, bool, unsigned int, Json::PrecisionType)
 t Json::BuiltStyledStreamWriter::hasCommentForValue(Json::Value const&)
 t Json::BuiltStyledStreamWriter::indent()
 t Json::BuiltStyledStreamWriter::isMultilineArray(Json::Value const&)
 t Json::BuiltStyledStreamWriter::pushValue(std::string const&)
 t Json::BuiltStyledStreamWriter::unindent()
 t Json::BuiltStyledStreamWriter::write(Json::Value const&, std::ostream*)
 t Json::BuiltStyledStreamWriter::writeArrayValue(Json::Value const&)
 t Json::BuiltStyledStreamWriter::writeArrayValue(Json::Value const&) [clone .cold]
 t Json::BuiltStyledStreamWriter::writeCommentAfterValueOnSameLine(Json::Value const&)
 t Json::BuiltStyledStreamWriter::writeCommentAfterValueOnSameLine(Json::Value const&) [clone .cold]
 t Json::BuiltStyledStreamWriter::writeCommentBeforeValue(Json::Value const&)
 t Json::BuiltStyledStreamWriter::writeCommentBeforeValue(Json::Value const&) [clone .cold]
 t Json::BuiltStyledStreamWriter::writeIndent()
 t Json::BuiltStyledStreamWriter::writeValue(Json::Value const&)
 t Json::BuiltStyledStreamWriter::writeValue(Json::Value const&) [clone .cold]
 t Json::BuiltStyledStreamWriter::writeWithIndent(std::string const&)
 t Json::BuiltStyledStreamWriter::~BuiltStyledStreamWriter()
 t Json::CharReaderBuilder::CharReaderBuilder()
 t Json::CharReaderBuilder::CharReaderBuilder() [clone .cold]
 t Json::CharReaderBuilder::newCharReader() const
 t Json::CharReaderBuilder::newCharReader() const [clone .cold]
 t Json::CharReaderBuilder::operator[](std::string const&)
 t Json::CharReaderBuilder::setDefaults(Json::Value*)
 t Json::CharReaderBuilder::setDefaults(Json::Value*) [clone .cold]
 t Json::CharReaderBuilder::strictMode(Json::Value*)
 t Json::CharReaderBuilder::strictMode(Json::Value*) [clone .cold]
 t Json::CharReaderBuilder::validate(Json::Value*) const
 t Json::CharReaderBuilder::validate(Json::Value*) const [clone .cold]
 t Json::CharReaderBuilder::~CharReaderBuilder()
 t Json::FastWriter::FastWriter()
 t Json::FastWriter::dropNullPlaceholders()
 t Json::FastWriter::enableYAMLCompatibility()
 t Json::FastWriter::omitEndingLineFeed()
 t Json::FastWriter::write(Json::Value const&)
 t Json::FastWriter::writeValue(Json::Value const&)
 t Json::FastWriter::writeValue(Json::Value const&) [clone .cold]
 t Json::FastWriter::~FastWriter()
 t Json::Features::Features()
 t Json::Features::all()
 t Json::Features::strictMode()
 t Json::OurCharReader::parse(char const*, char const*, Json::Value*, std::string*)
 t Json::OurCharReader::~OurCharReader()
 t Json::OurFeatures::all()
 t Json::OurReader::OurReader(Json::OurFeatures const&)
 t Json::OurReader::OurReader(Json::OurFeatures const&) [clone .cold]
 t Json::OurReader::addComment(char const*, char const*, Json::CommentPlacement)
 t Json::OurReader::addComment(char const*, char const*, Json::CommentPlacement) [clone .cold]
 t Json::OurReader::addError(std::string const&, Json::OurReader::Token&, char const*)
 t Json::OurReader::addError(std::string const&, Json::OurReader::Token&, char const*) [clone .cold]
 t Json::OurReader::addErrorAndRecover(std::string const&, Json::OurReader::Token&, Json::OurReader::TokenType)
 t Json::OurReader::containsNewLine(char const*, char const*)
 t Json::OurReader::currentValue()
 t Json::OurReader::decodeDouble(Json::OurReader::Token&)
 t Json::OurReader::decodeDouble(Json::OurReader::Token&) [clone .cold]
 t Json::OurReader::decodeDouble(Json::OurReader::Token&, Json::Value&)
 t Json::OurReader::decodeDouble(Json::OurReader::Token&, Json::Value&) [clone .cold]
 t Json::OurReader::decodeNumber(Json::OurReader::Token&)
 t Json::OurReader::decodeNumber(Json::OurReader::Token&) [clone .cold]
 t Json::OurReader::decodeNumber(Json::OurReader::Token&, Json::Value&)
 t Json::OurReader::decodeNumber(Json::OurReader::Token&, Json::Value&) [clone .cold]
 t Json::OurReader::decodeString(Json::OurReader::Token&)
 t Json::OurReader::decodeString(Json::OurReader::Token&) [clone .cold]
 t Json::OurReader::decodeString(Json::OurReader::Token&, std::string&)
 t Json::OurReader::decodeString(Json::OurReader::Token&, std::string&) [clone .cold]
 t Json::OurReader::decodeUnicodeCodePoint(Json::OurReader::Token&, char const*&, char const*, unsigned int&)
 t Json::OurReader::decodeUnicodeCodePoint(Json::OurReader::Token&, char const*&, char const*, unsigned int&) [clone .cold]
 t Json::OurReader::decodeUnicodeEscapeSequence(Json::OurReader::Token&, char const*&, char const*, unsigned int&)
 t Json::OurReader::decodeUnicodeEscapeSequence(Json::OurReader::Token&, char const*&, char const*, unsigned int&) [clone .cold]
 t Json::OurReader::getFormattedErrorMessages() const
 t Json::OurReader::getFormattedErrorMessages() const [clone .cold]
 t Json::OurReader::getLocationLineAndColumn(char const*) const
 t Json::OurReader::getLocationLineAndColumn(char const*, int&, int&) const
 t Json::OurReader::getNextChar()
 t Json::OurReader::getStructuredErrors() const
 t Json::OurReader::getStructuredErrors() const [clone .cold]
 t Json::OurReader::good() const
 t Json::OurReader::match(char const*, int)
 t Json::OurReader::normalizeEOL(char const*, char const*)
 t Json::OurReader::parse(char const*, char const*, Json::Value&, bool)
 t Json::OurReader::parse(char const*, char const*, Json::Value&, bool) [clone .cold]
 t Json::OurReader::pushError(Json::Value const&, std::string const&)
 t Json::OurReader::pushError(Json::Value const&, std::string const&) [clone .cold]
 t Json::OurReader::pushError(Json::Value const&, std::string const&, Json::Value const&)
 t Json::OurReader::pushError(Json::Value const&, std::string const&, Json::Value const&) [clone .cold]
 t Json::OurReader::readArray(Json::OurReader::Token&)
 t Json::OurReader::readArray(Json::OurReader::Token&) [clone .cold]
 t Json::OurReader::readCStyleComment()
 t Json::OurReader::readComment()
 t Json::OurReader::readCppStyleComment()
 t Json::OurReader::readNumber(bool)
 t Json::OurReader::readObject(Json::OurReader::Token&)
 t Json::OurReader::readObject(Json::OurReader::Token&) [clone .cold]
 t Json::OurReader::readString()
 t Json::OurReader::readStringSingleQuote()
 t Json::OurReader::readToken(Json::OurReader::Token&)
 t Json::OurReader::readValue()
 t Json::OurReader::readValue() [clone .cold]
 t Json::OurReader::recoverFromError(Json::OurReader::TokenType)
 t Json::OurReader::skipCommentTokens(Json::OurReader::Token&)
 t Json::OurReader::skipSpaces()
 t Json::Path::Path(std::string const&, Json::PathArgument const&, Json::PathArgument const&, Json::PathArgument const&, Json::PathArgument const&, Json::PathArgument const&)
 t Json::Path::Path(std::string const&, Json::PathArgument const&, Json::PathArgument const&, Json::PathArgument const&, Json::PathArgument const&, Json::PathArgument const&) [clone .cold]
 t Json::Path::addPathInArg(std::string const&, std::vector<Json::PathArgument const*, std::allocator<Json::PathArgument const*> > const&, __gnu_cxx::__normal_iterator<Json::PathArgument const* const*, std::vector<Json::PathArgument const*, std::allocator<Json::PathArgument const*> > >&, Json::PathArgument::Kind)
 t Json::Path::invalidPath(std::string const&, int)
 t Json::Path::make(Json::Value&) const
 t Json::Path::makePath(std::string const&, std::vector<Json::PathArgument const*, std::allocator<Json::PathArgument const*> > const&)
 t Json::Path::makePath(std::string const&, std::vector<Json::PathArgument const*, std::allocator<Json::PathArgument const*> > const&) [clone .cold]
 t Json::Path::resolve(Json::Value const&) const
 t Json::Path::resolve(Json::Value const&, Json::Value const&) const
 t Json::Path::resolve(Json::Value const&, Json::Value const&) const [clone .cold]
 t Json::PathArgument::PathArgument()
 t Json::PathArgument::PathArgument(char const*)
 t Json::PathArgument::PathArgument(std::string const&)
 t Json::PathArgument::PathArgument(unsigned int)
 t Json::Reader::Reader()
 t Json::Reader::Reader() [clone .cold]
 t Json::Reader::Reader(Json::Features const&)
 t Json::Reader::Reader(Json::Features const&) [clone .cold]
 t Json::Reader::addComment(char const*, char const*, Json::CommentPlacement)
 t Json::Reader::addComment(char const*, char const*, Json::CommentPlacement) [clone .cold]
 t Json::Reader::addError(std::string const&, Json::Reader::Token&, char const*)
 t Json::Reader::addError(std::string const&, Json::Reader::Token&, char const*) [clone .cold]
 t Json::Reader::addErrorAndRecover(std::string const&, Json::Reader::Token&, Json::Reader::TokenType)
 t Json::Reader::containsNewLine(char const*, char const*)
 t Json::Reader::currentValue()
 t Json::Reader::decodeDouble(Json::Reader::Token&)
 t Json::Reader::decodeDouble(Json::Reader::Token&) [clone .cold]
 t Json::Reader::decodeDouble(Json::Reader::Token&, Json::Value&)
 t Json::Reader::decodeDouble(Json::Reader::Token&, Json::Value&) [clone .cold]
 t Json::Reader::decodeNumber(Json::Reader::Token&)
 t Json::Reader::decodeNumber(Json::Reader::Token&) [clone .cold]
 t Json::Reader::decodeNumber(Json::Reader::Token&, Json::Value&)
 t Json::Reader::decodeNumber(Json::Reader::Token&, Json::Value&) [clone .cold]
 t Json::Reader::decodeString(Json::Reader::Token&)
 t Json::Reader::decodeString(Json::Reader::Token&) [clone .cold]
 t Json::Reader::decodeString(Json::Reader::Token&, std::string&)
 t Json::Reader::decodeString(Json::Reader::Token&, std::string&) [clone .cold]
 t Json::Reader::decodeUnicodeCodePoint(Json::Reader::Token&, char const*&, char const*, unsigned int&)
 t Json::Reader::decodeUnicodeCodePoint(Json::Reader::Token&, char const*&, char const*, unsigned int&) [clone .cold]
 t Json::Reader::decodeUnicodeEscapeSequence(Json::Reader::Token&, char const*&, char const*, unsigned int&)
 t Json::Reader::decodeUnicodeEscapeSequence(Json::Reader::Token&, char const*&, char const*, unsigned int&) [clone .cold]
 t Json::Reader::getFormatedErrorMessages() const
 t Json::Reader::getFormattedErrorMessages() const
 t Json::Reader::getFormattedErrorMessages() const [clone .cold]
 t Json::Reader::getLocationLineAndColumn(char const*) const
 t Json::Reader::getLocationLineAndColumn(char const*, int&, int&) const
 t Json::Reader::getNextChar()
 t Json::Reader::getStructuredErrors() const
 t Json::Reader::getStructuredErrors() const [clone .cold]
 t Json::Reader::good() const
 t Json::Reader::match(char const*, int)
 t Json::Reader::normalizeEOL(char const*, char const*)
 t Json::Reader::normalizeEOL(char const*, char const*) [clone .cold]
 t Json::Reader::parse(char const*, char const*, Json::Value&, bool)
 t Json::Reader::parse(char const*, char const*, Json::Value&, bool) [clone .cold]
 t Json::Reader::parse(std::istream&, Json::Value&, bool)
 t Json::Reader::parse(std::istream&, Json::Value&, bool) [clone .cold]
 t Json::Reader::parse(std::string const&, Json::Value&, bool)
 t Json::Reader::pushError(Json::Value const&, std::string const&)
 t Json::Reader::pushError(Json::Value const&, std::string const&) [clone .cold]
 t Json::Reader::pushError(Json::Value const&, std::string const&, Json::Value const&)
 t Json::Reader::pushError(Json::Value const&, std::string const&, Json::Value const&) [clone .cold]
 t Json::Reader::readArray(Json::Reader::Token&)
 t Json::Reader::readArray(Json::Reader::Token&) [clone .cold]
 t Json::Reader::readCStyleComment()
 t Json::Reader::readComment()
 t Json::Reader::readCppStyleComment()
 t Json::Reader::readNumber()
 t Json::Reader::readObject(Json::Reader::Token&)
 t Json::Reader::readObject(Json::Reader::Token&) [clone .cold]
 t Json::Reader::readString()
 t Json::Reader::readToken(Json::Reader::Token&)
 t Json::Reader::readValue()
 t Json::Reader::readValue() [clone .cold]
 t Json::Reader::recoverFromError(Json::Reader::TokenType)
 t Json::Reader::skipCommentTokens(Json::Reader::Token&)
 t Json::Reader::skipSpaces()
 t Json::StreamWriter::Factory::~Factory()
 t Json::StreamWriter::StreamWriter()
 t Json::StreamWriter::~StreamWriter()
 t Json::StreamWriterBuilder::StreamWriterBuilder()
 t Json::StreamWriterBuilder::StreamWriterBuilder() [clone .cold]
 t Json::StreamWriterBuilder::newStreamWriter() const
 t Json::StreamWriterBuilder::newStreamWriter() const [clone .cold]
 t Json::StreamWriterBuilder::operator[](std::string const&)
 t Json::StreamWriterBuilder::setDefaults(Json::Value*)
 t Json::StreamWriterBuilder::setDefaults(Json::Value*) [clone .cold]
 t Json::StreamWriterBuilder::validate(Json::Value*) const
 t Json::StreamWriterBuilder::validate(Json::Value*) const [clone .cold]
 t Json::StreamWriterBuilder::~StreamWriterBuilder()
 t Json::StyledStreamWriter::StyledStreamWriter(std::string)
 t Json::StyledStreamWriter::hasCommentForValue(Json::Value const&)
 t Json::StyledStreamWriter::indent()
 t Json::StyledStreamWriter::isMultilineArray(Json::Value const&)
 t Json::StyledStreamWriter::pushValue(std::string const&)
 t Json::StyledStreamWriter::unindent()
 t Json::StyledStreamWriter::write(std::ostream&, Json::Value const&)
 t Json::StyledStreamWriter::writeArrayValue(Json::Value const&)
 t Json::StyledStreamWriter::writeArrayValue(Json::Value const&) [clone .cold]
 t Json::StyledStreamWriter::writeCommentAfterValueOnSameLine(Json::Value const&)
 t Json::StyledStreamWriter::writeCommentAfterValueOnSameLine(Json::Value const&) [clone .cold]
 t Json::StyledStreamWriter::writeCommentBeforeValue(Json::Value const&)
 t Json::StyledStreamWriter::writeCommentBeforeValue(Json::Value const&) [clone .cold]
 t Json::StyledStreamWriter::writeIndent()
 t Json::StyledStreamWriter::writeValue(Json::Value const&)
 t Json::StyledStreamWriter::writeValue(Json::Value const&) [clone .cold]
 t Json::StyledStreamWriter::writeWithIndent(std::string const&)
 t Json::StyledWriter::StyledWriter()
 t Json::StyledWriter::hasCommentForValue(Json::Value const&)
 t Json::StyledWriter::indent()
 t Json::StyledWriter::indent() [clone .cold]
 t Json::StyledWriter::isMultilineArray(Json::Value const&)
 t Json::StyledWriter::pushValue(std::string const&)
 t Json::StyledWriter::unindent()
 t Json::StyledWriter::write(Json::Value const&)
 t Json::StyledWriter::writeArrayValue(Json::Value const&)
 t Json::StyledWriter::writeArrayValue(Json::Value const&) [clone .cold]
 t Json::StyledWriter::writeCommentAfterValueOnSameLine(Json::Value const&)
 t Json::StyledWriter::writeCommentAfterValueOnSameLine(Json::Value const&) [clone .cold]
 t Json::StyledWriter::writeCommentBeforeValue(Json::Value const&)
 t Json::StyledWriter::writeCommentBeforeValue(Json::Value const&) [clone .cold]
 t Json::StyledWriter::writeIndent()
 t Json::StyledWriter::writeValue(Json::Value const&)
 t Json::StyledWriter::writeValue(Json::Value const&) [clone .cold]
 t Json::StyledWriter::writeWithIndent(std::string const&)
 t Json::StyledWriter::~StyledWriter()
 t Json::Value*& std::deque<Json::Value*, std::allocator<Json::Value*> >::emplace_back<Json::Value*>(Json::Value*&&) [clone .isra.0]
 t Json::Value::CZString::CZString(Json::Value::CZString const&)
 t Json::Value::CZString::CZString(Json::Value::CZString const&) [clone .cold]
 t Json::Value::CZString::CZString(Json::Value::CZString&&)
 t Json::Value::CZString::CZString(char const*, unsigned int, Json::Value::CZString::DuplicationPolicy)
 t Json::Value::CZString::CZString(unsigned int)
 t Json::Value::CZString::data() const
 t Json::Value::CZString::index() const
 t Json::Value::CZString::isStaticString() const
 t Json::Value::CZString::length() const
 t Json::Value::CZString::operator<(Json::Value::CZString const&) const
 t Json::Value::CZString::operator=(Json::Value::CZString const&)
 t Json::Value::CZString::operator=(Json::Value::CZString&&)
 t Json::Value::CZString::operator==(Json::Value::CZString const&) const
 t Json::Value::CZString::swap(Json::Value::CZString&)
 t Json::Value::CZString::~CZString()
 t Json::Value::Comments::Comments(Json::Value::Comments const&)
 t Json::Value::Comments::Comments(Json::Value::Comments&&)
 t Json::Value::Comments::get(Json::CommentPlacement) const
 t Json::Value::Comments::has(Json::CommentPlacement) const
 t Json::Value::Comments::operator=(Json::Value::Comments const&)
 t Json::Value::Comments::operator=(Json::Value::Comments&&)
 t Json::Value::Comments::set(Json::CommentPlacement, std::string)
 t Json::Value::Value(Json::StaticString const&)
 t Json::Value::Value(Json::Value const&)
 t Json::Value::Value(Json::Value const&) [clone .cold]
 t Json::Value::Value(Json::Value&&)
 t Json::Value::Value(Json::ValueType)
 t Json::Value::Value(Json::ValueType) [clone .cold]
 t Json::Value::Value(bool)
 t Json::Value::Value(char const*)
 t Json::Value::Value(char const*) [clone .cold]
 t Json::Value::Value(char const*, char const*)
 t Json::Value::Value(char const*, char const*) [clone .cold]
 t Json::Value::Value(double)
 t Json::Value::Value(int)
 t Json::Value::Value(long)
 t Json::Value::Value(std::string const&)
 t Json::Value::Value(std::string const&) [clone .cold]
 t Json::Value::Value(unsigned int)
 t Json::Value::Value(unsigned long)
 t Json::Value::append(Json::Value const&)
 t Json::Value::append(Json::Value const&) [clone .cold]
 t Json::Value::append(Json::Value&&)
 t Json::Value::asBool() const
 t Json::Value::asBool() const [clone .cold]
 t Json::Value::asCString() const
 t Json::Value::asCString() const [clone .cold]
 t Json::Value::asDouble() const
 t Json::Value::asDouble() const [clone .cold]
 t Json::Value::asFloat() const
 t Json::Value::asFloat() const [clone .cold]
 t Json::Value::asInt() const
 t Json::Value::asInt() const [clone .cold]
 t Json::Value::asInt64() const
 t Json::Value::asInt64() const [clone .cold]
 t Json::Value::asLargestInt() const
 t Json::Value::asLargestUInt() const
 t Json::Value::asString() const
 t Json::Value::asString() const [clone .cold]
 t Json::Value::asUInt() const
 t Json::Value::asUInt() const [clone .cold]
 t Json::Value::asUInt64() const
 t Json::Value::asUInt64() const [clone .cold]
 t Json::Value::begin()
 t Json::Value::begin() const
 t Json::Value::clear()
 t Json::Value::clear() [clone .cold]
 t Json::Value::compare(Json::Value const&) const
 t Json::Value::copy(Json::Value const&)
 t Json::Value::copyPayload(Json::Value const&)
 t Json::Value::demand(char const*, char const*)
 t Json::Value::demand(char const*, char const*) [clone .cold]
 t Json::Value::dupMeta(Json::Value const&)
 t Json::Value::dupPayload(Json::Value const&)
 t Json::Value::dupPayload(Json::Value const&) [clone .cold]
 t Json::Value::empty() const
 t Json::Value::end()
 t Json::Value::end() const
 t Json::Value::find(char const*, char const*) const
 t Json::Value::find(char const*, char const*) const [clone .cold]
 t Json::Value::get(char const*, Json::Value const&) const
 t Json::Value::get(char const*, Json::Value const&) const [clone .cold]
 t Json::Value::get(char const*, char const*, Json::Value const&) const
 t Json::Value::get(char const*, char const*, Json::Value const&) const [clone .cold]
 t Json::Value::get(std::string const&, Json::Value const&) const
 t Json::Value::get(std::string const&, Json::Value const&) const [clone .cold]
 t Json::Value::get(unsigned int, Json::Value const&) const
 t Json::Value::get(unsigned int, Json::Value const&) const [clone .cold]
 t Json::Value::getComment(Json::CommentPlacement) const
 t Json::Value::getMemberNames() const
 t Json::Value::getMemberNames() const [clone .cold]
 t Json::Value::getOffsetLimit() const
 t Json::Value::getOffsetStart() const
 t Json::Value::getString(char const**, char const**) const
 t Json::Value::hasComment(Json::CommentPlacement) const
 t Json::Value::initBasic(Json::ValueType, bool)
 t Json::Value::isArray() const
 t Json::Value::isBool() const
 t Json::Value::isConvertibleTo(Json::ValueType) const
 t Json::Value::isConvertibleTo(Json::ValueType) const [clone .cold]
 t Json::Value::isDouble() const
 t Json::Value::isInt() const
 t Json::Value::isInt64() const
 t Json::Value::isIntegral() const
 t Json::Value::isMember(char const*) const
 t Json::Value::isMember(char const*, char const*) const
 t Json::Value::isMember(std::string const&) const
 t Json::Value::isNull() const
 t Json::Value::isNumeric() const
 t Json::Value::isObject() const
 t Json::Value::isString() const
 t Json::Value::isUInt() const
 t Json::Value::isUInt64() const
 t Json::Value::isValidIndex(unsigned int) const
 t Json::Value::nullSingleton()
 t Json::Value::operator bool() const
 t Json::Value::operator!=(Json::Value const&) const
 t Json::Value::operator<(Json::Value const&) const
 t Json::Value::operator<=(Json::Value const&) const
 t Json::Value::operator=(Json::Value const&)
 t Json::Value::operator=(Json::Value const&) [clone .cold]
 t Json::Value::operator=(Json::Value&&)
 t Json::Value::operator==(Json::Value const&) const
 t Json::Value::operator>(Json::Value const&) const
 t Json::Value::operator>=(Json::Value const&) const
 t Json::Value::operator[](Json::StaticString const&)
 t Json::Value::operator[](char const*)
 t Json::Value::operator[](char const*) const
 t Json::Value::operator[](int)
 t Json::Value::operator[](int) [clone .cold]
 t Json::Value::operator[](int) const
 t Json::Value::operator[](int) const [clone .cold]
 t Json::Value::operator[](std::string const&)
 t Json::Value::operator[](std::string const&) const
 t Json::Value::operator[](unsigned int)
 t Json::Value::operator[](unsigned int) [clone .cold]
 t Json::Value::operator[](unsigned int) const
 t Json::Value::operator[](unsigned int) const [clone .cold]
 t Json::Value::releasePayload()
 t Json::Value::removeIndex(unsigned int, Json::Value*)
 t Json::Value::removeIndex(unsigned int, Json::Value*) [clone .cold]
 t Json::Value::removeMember(char const*)
 t Json::Value::removeMember(char const*) [clone .cold]
 t Json::Value::removeMember(char const*, Json::Value*)
 t Json::Value::removeMember(char const*, char const*, Json::Value*)
 t Json::Value::removeMember(char const*, char const*, Json::Value*) [clone .part.0]
 t Json::Value::removeMember(std::string const&)
 t Json::Value::removeMember(std::string const&, Json::Value*)
 t Json::Value::resize(unsigned int)
 t Json::Value::resize(unsigned int) [clone .cold]
 t Json::Value::resolveReference(char const*)
 t Json::Value::resolveReference(char const*) [clone .cold]
 t Json::Value::resolveReference(char const*, char const*)
 t Json::Value::resolveReference(char const*, char const*) [clone .cold]
 t Json::Value::setComment(std::string, Json::CommentPlacement)
 t Json::Value::setComment(std::string, Json::CommentPlacement) [clone .cold]
 t Json::Value::setOffsetLimit(long)
 t Json::Value::setOffsetStart(long)
 t Json::Value::size() const
 t Json::Value::swap(Json::Value&)
 t Json::Value::swapPayload(Json::Value&)
 t Json::Value::toStyledString() const
 t Json::Value::toStyledString() const [clone .cold]
 t Json::Value::type() const
 t Json::Value::~Value()
 t Json::ValueConstIterator::ValueConstIterator()
 t Json::ValueConstIterator::ValueConstIterator(Json::ValueIterator const&)
 t Json::ValueConstIterator::ValueConstIterator(std::_Rb_tree_iterator<std::pair<Json::Value::CZString const, Json::Value> > const&)
 t Json::ValueConstIterator::operator=(Json::ValueIteratorBase const&)
 t Json::ValueIterator::ValueIterator()
 t Json::ValueIterator::ValueIterator(Json::ValueConstIterator const&)
 t Json::ValueIterator::ValueIterator(Json::ValueIterator const&)
 t Json::ValueIterator::ValueIterator(std::_Rb_tree_iterator<std::pair<Json::Value::CZString const, Json::Value> > const&)
 t Json::ValueIterator::operator=(Json::ValueIterator const&)
 t Json::ValueIteratorBase::ValueIteratorBase()
 t Json::ValueIteratorBase::ValueIteratorBase(std::_Rb_tree_iterator<std::pair<Json::Value::CZString const, Json::Value> > const&)
 t Json::ValueIteratorBase::computeDistance(Json::ValueIteratorBase const&) const
 t Json::ValueIteratorBase::copy(Json::ValueIteratorBase const&)
 t Json::ValueIteratorBase::decrement()
 t Json::ValueIteratorBase::deref() const
 t Json::ValueIteratorBase::increment()
 t Json::ValueIteratorBase::index() const
 t Json::ValueIteratorBase::isEqual(Json::ValueIteratorBase const&) const
 t Json::ValueIteratorBase::key() const
 t Json::ValueIteratorBase::key() const [clone .cold]
 t Json::ValueIteratorBase::memberName() const
 t Json::ValueIteratorBase::memberName(char const**) const
 t Json::ValueIteratorBase::name() const
 t Json::Writer::~Writer()
 t Json::codePointToUTF8(unsigned int)
 t Json::codePointToUTF8(unsigned int) [clone .cold]
 t Json::duplicateAndPrefixStringValue(char const*, unsigned int)
 t Json::duplicateAndPrefixStringValue(char const*, unsigned int) [clone .cold]
 t Json::duplicateAndPrefixStringValue(char const*, unsigned int) [clone .part.0]
 t Json::operator<<(std::ostream&, Json::Value const&)
 t Json::operator<<(std::ostream&, Json::Value const&) [clone .cold]
 t Json::operator>>(std::istream&, Json::Value&)
 t Json::operator>>(std::istream&, Json::Value&) [clone .cold]
 t Json::parseFromStream(Json::CharReader::Factory const&, std::istream&, Json::Value*, std::string*)
 t Json::parseFromStream(Json::CharReader::Factory const&, std::istream&, Json::Value*, std::string*) [clone .cold]
 t Json::throwLogicError(std::string const&)
 t Json::throwRuntimeError(std::string const&)
 t Json::toHex16Bit(unsigned int)
 t Json::toHex16Bit(unsigned int) [clone .cold]
 t Json::valueToQuotedString(char const*)
 t Json::valueToQuotedStringN(char const*, unsigned int)
 t Json::valueToQuotedStringN(char const*, unsigned int) [clone .cold]
 t Json::valueToString(bool)
 t Json::valueToString(double, unsigned int, Json::PrecisionType)
 t Json::valueToString(int)
 t Json::valueToString(long)
 t Json::valueToString(unsigned int)
 t Json::valueToString(unsigned long)
 t Json::writeString(Json::StreamWriter::Factory const&, Json::Value const&)
 t Json::writeString(Json::StreamWriter::Factory const&, Json::Value const&) [clone .cold]
 t LoaderInstance::CreateInstance(XrResult (*)(XrInstance_T*, char const*, void (**)()), XrResult (*)(XrInstanceCreateInfo const*, XrInstance_T**), XrResult (*)(XrInstanceCreateInfo const*, XrApiLayerCreateInfo const*, XrInstance_T**), std::vector<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> >, std::allocator<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> > > >, XrInstanceCreateInfo const*, std::unique_ptr<LoaderInstance, std::default_delete<LoaderInstance> >*)
 t LoaderInstance::CreateInstance(XrResult (*)(XrInstance_T*, char const*, void (**)()), XrResult (*)(XrInstanceCreateInfo const*, XrInstance_T**), XrResult (*)(XrInstanceCreateInfo const*, XrApiLayerCreateInfo const*, XrInstance_T**), std::vector<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> >, std::allocator<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> > > >, XrInstanceCreateInfo const*, std::unique_ptr<LoaderInstance, std::default_delete<LoaderInstance> >*) [clone .cold]
 t LoaderInstance::ExtensionIsEnabled(std::string const&)
 t LoaderInstance::GetInstanceProcAddr(char const*, void (**)())
 t LoaderInstance::LoaderInstance(XrInstance_T*, XrInstanceCreateInfo const*, XrResult (*)(XrInstance_T*, char const*, void (**)()), std::vector<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> >, std::allocator<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> > > >)
 t LoaderInstance::LoaderInstance(XrInstance_T*, XrInstanceCreateInfo const*, XrResult (*)(XrInstance_T*, char const*, void (**)()), std::vector<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> >, std::allocator<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> > > >) [clone .cold]
 t LoaderInstance::LoaderSpecificExtensions()
 t LoaderInstance::~LoaderInstance()
 t LoaderInstance::~LoaderInstance() [clone .cold]
 t LoaderLogMessageSeveritiesToDebugUtilsMessageSeverities(unsigned long)
 t LoaderLogMessageTypesToDebugUtilsMessageTypes(unsigned long)
 t LoaderLogRecorder::LogDebugUtilsMessage(unsigned long, unsigned long, XrDebugUtilsMessengerCallbackDataEXT const*)
 t LoaderLogRecorder::Pause()
 t LoaderLogRecorder::Resume()
 t LoaderLogRecorder::Start()
 t LoaderLogRecorder::Stop()
 t LoaderLogger::AddLogRecorder(std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> >&&)
 t LoaderLogger::AddLogRecorder(std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> >&&) [clone .cold]
 t LoaderLogger::AddLogRecorderForXrInstance(XrInstance_T*, std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> >&&)
 t LoaderLogger::AddLogRecorderForXrInstance(XrInstance_T*, std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> >&&) [clone .cold]
 t LoaderLogger::AddObjectName(unsigned long, XrObjectType, std::string const&)
 t LoaderLogger::BeginLabelRegion(XrSession_T*, XrDebugUtilsLabelEXT const*)
 t LoaderLogger::DeleteSessionLabels(XrSession_T*)
 t LoaderLogger::EndLabelRegion(XrSession_T*)
 t LoaderLogger::InsertLabel(XrSession_T*, XrDebugUtilsLabelEXT const*)
 t LoaderLogger::LoaderLogger()
 t LoaderLogger::LoaderLogger() [clone .cold]
 t LoaderLogger::LogDebugUtilsMessage(unsigned long, unsigned long, XrDebugUtilsMessengerCallbackDataEXT const*)
 t LoaderLogger::LogDebugUtilsMessage(unsigned long, unsigned long, XrDebugUtilsMessengerCallbackDataEXT const*) [clone .cold]
 t LoaderLogger::LogErrorMessage(std::string const&, std::string const&, std::vector<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> > const&) [clone .isra.0]
 t LoaderLogger::LogErrorMessage(std::string const&, std::string const&, std::vector<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> > const&) [clone .isra.0] [clone .cold]
 t LoaderLogger::LogInfoMessage(std::string const&, std::string const&, std::vector<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> > const&) [clone .isra.0]
 t LoaderLogger::LogInfoMessage(std::string const&, std::string const&, std::vector<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> > const&) [clone .isra.0] [clone .cold]
 t LoaderLogger::LogMessage(unsigned long, unsigned long, std::string const&, std::string const&, std::string const&, std::vector<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> > const&)
 t LoaderLogger::LogMessage(unsigned long, unsigned long, std::string const&, std::string const&, std::string const&, std::vector<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> > const&) [clone .cold]
 t LoaderLogger::LogVerboseMessage(std::string const&, std::string const&, std::vector<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> > const&) [clone .isra.0]
 t LoaderLogger::LogVerboseMessage(std::string const&, std::string const&, std::vector<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> > const&) [clone .isra.0] [clone .cold]
 t LoaderLogger::RemoveLogRecorder(unsigned long)
 t LoaderLogger::RemoveLogRecordersForXrInstance(XrInstance_T*)
 t LoaderLogger::RemoveLogRecordersForXrInstance(XrInstance_T*) [clone .cold]
 t LoaderLogger::~LoaderLogger()
 t LoaderTrampolineCreateDebugUtilsMessengerEXT(XrInstance_T*, XrDebugUtilsMessengerCreateInfoEXT const*, XrDebugUtilsMessengerEXT_T**)
 t LoaderTrampolineCreateDebugUtilsMessengerEXT(XrInstance_T*, XrDebugUtilsMessengerCreateInfoEXT const*, XrDebugUtilsMessengerEXT_T**) [clone .cold]
 t LoaderTrampolineDestroyDebugUtilsMessengerEXT(XrDebugUtilsMessengerEXT_T*)
 t LoaderTrampolineDestroyDebugUtilsMessengerEXT(XrDebugUtilsMessengerEXT_T*) [clone .cold]
 t LoaderTrampolineSessionBeginDebugUtilsLabelRegionEXT(XrSession_T*, XrDebugUtilsLabelEXT const*)
 t LoaderTrampolineSessionBeginDebugUtilsLabelRegionEXT(XrSession_T*, XrDebugUtilsLabelEXT const*) [clone .cold]
 t LoaderTrampolineSessionEndDebugUtilsLabelRegionEXT(XrSession_T*)
 t LoaderTrampolineSessionEndDebugUtilsLabelRegionEXT(XrSession_T*) [clone .cold]
 t LoaderTrampolineSessionInsertDebugUtilsLabelEXT(XrSession_T*, XrDebugUtilsLabelEXT const*)
 t LoaderTrampolineSessionInsertDebugUtilsLabelEXT(XrSession_T*, XrDebugUtilsLabelEXT const*) [clone .cold]
 t LoaderTrampolineSetDebugUtilsObjectNameEXT(XrInstance_T*, XrDebugUtilsObjectNameInfoEXT const*)
 t LoaderTrampolineSetDebugUtilsObjectNameEXT(XrInstance_T*, XrDebugUtilsObjectNameInfoEXT const*) [clone .cold]
 t LoaderTrampolineSubmitDebugUtilsMessageEXT(XrInstance_T*, unsigned long, unsigned long, XrDebugUtilsMessengerCallbackDataEXT const*)
 t LoaderTrampolineSubmitDebugUtilsMessageEXT(XrInstance_T*, unsigned long, unsigned long, XrDebugUtilsMessengerCallbackDataEXT const*) [clone .cold]
 t LoaderXrCreateInstance(XrInstanceCreateInfo const*, XrInstance_T**)
 t LoaderXrCreateInstance(XrInstanceCreateInfo const*, XrInstance_T**) [clone .cold]
 t LoaderXrDestroyInstance(XrInstance_T*)
 t LoaderXrDestroyInstance(XrInstance_T*) [clone .cold]
 t LoaderXrEnumerateApiLayerProperties(unsigned int, unsigned int*, XrApiLayerProperties*)
 t LoaderXrEnumerateApiLayerProperties(unsigned int, unsigned int*, XrApiLayerProperties*) [clone .cold]
 t LoaderXrEnumerateInstanceExtensionProperties(char const*, unsigned int, unsigned int*, XrExtensionProperties*)
 t LoaderXrEnumerateInstanceExtensionProperties(char const*, unsigned int, unsigned int*, XrExtensionProperties*) [clone .cold]
 t LoaderXrGetInstanceProcAddr(XrInstance_T*, char const*, void (**)())
 t LoaderXrGetInstanceProcAddr(XrInstance_T*, char const*, void (**)()) [clone .cold]
 t LoaderXrTermCreateApiLayerInstance(XrInstanceCreateInfo const*, XrApiLayerCreateInfo const*, XrInstance_T**)
 t LoaderXrTermCreateDebugUtilsMessengerEXT(XrInstance_T*, XrDebugUtilsMessengerCreateInfoEXT const*, XrDebugUtilsMessengerEXT_T**)
 t LoaderXrTermCreateDebugUtilsMessengerEXT(XrInstance_T*, XrDebugUtilsMessengerCreateInfoEXT const*, XrDebugUtilsMessengerEXT_T**) [clone .cold]
 t LoaderXrTermCreateInstance(XrInstanceCreateInfo const*, XrInstance_T**)
 t LoaderXrTermCreateInstance(XrInstanceCreateInfo const*, XrInstance_T**) [clone .cold]
 t LoaderXrTermDestroyDebugUtilsMessengerEXT(XrDebugUtilsMessengerEXT_T*)
 t LoaderXrTermDestroyDebugUtilsMessengerEXT(XrDebugUtilsMessengerEXT_T*) [clone .cold]
 t LoaderXrTermDestroyInstance(XrInstance_T*)
 t LoaderXrTermDestroyInstance(XrInstance_T*) [clone .cold]
 t LoaderXrTermGetInstanceProcAddr(XrInstance_T*, char const*, void (**)())
 t LoaderXrTermGetInstanceProcAddr(XrInstance_T*, char const*, void (**)()) [clone .cold]
 t LoaderXrTermSetDebugUtilsObjectNameEXT(XrInstance_T*, XrDebugUtilsObjectNameInfoEXT const*)
 t LoaderXrTermSetDebugUtilsObjectNameEXT(XrInstance_T*, XrDebugUtilsObjectNameInfoEXT const*) [clone .cold]
 t LoaderXrTermSubmitDebugUtilsMessageEXT(XrInstance_T*, unsigned long, unsigned long, XrDebugUtilsMessengerCallbackDataEXT const*)
 t LoaderXrTermSubmitDebugUtilsMessageEXT(XrInstance_T*, unsigned long, unsigned long, XrDebugUtilsMessengerCallbackDataEXT const*) [clone .cold]
 t MakeDebugUtilsLoaderLogRecorder(XrDebugUtilsMessengerCreateInfoEXT const*, XrDebugUtilsMessengerEXT_T*)
 t MakeDebugUtilsLoaderLogRecorder(XrDebugUtilsMessengerCreateInfoEXT const*, XrDebugUtilsMessengerEXT_T*) [clone .cold]
 t MakeStdErrLoaderLogRecorder(void*)
 t MakeStdOutLoaderLogRecorder(void*, unsigned long)
 t ManifestFile::GetFunctionName(std::string const&) const
 t ManifestFile::GetInstanceExtensionProperties(std::vector<XrExtensionProperties, std::allocator<XrExtensionProperties> >&)
 t ManifestFile::IsValidJson(Json::Value const&, JsonVersion&)
 t ManifestFile::IsValidJson(Json::Value const&, JsonVersion&) [clone .cold]
 t ManifestFile::ManifestFile(ManifestFileType, std::string const&, std::string const&)
 t ManifestFile::ManifestFile(ManifestFileType, std::string const&, std::string const&) [clone .cold]
 t ManifestFile::ParseCommon(Json::Value const&)
 t ManifestFile::ParseCommon(Json::Value const&) [clone .cold]
 t ManifestFile::~ManifestFile()
 t NamesAndLabels::NamesAndLabels(std::vector<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> >, std::vector<XrDebugUtilsLabelEXT, std::allocator<XrDebugUtilsLabelEXT> >)
 t NamesAndLabels::NamesAndLabels(std::vector<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> >, std::vector<XrDebugUtilsLabelEXT, std::allocator<XrDebugUtilsLabelEXT> >) [clone .cold]
 t NamesAndLabels::PopulateCallbackData(XrDebugUtilsMessengerCallbackDataEXT&) const
 t NamesAndLabels::~NamesAndLabels()
 t ObjectInfoCollection::AddObjectName(unsigned long, XrObjectType, std::string const&)
 t ObjectInfoCollection::AddObjectName(unsigned long, XrObjectType, std::string const&) [clone .cold]
 t ObjectInfoCollection::LookUpObjectName(XrDebugUtilsObjectNameInfoEXT&) const
 t ObjectInfoCollection::LookUpObjectName(XrSdkLogObjectInfo&) const
 t ObjectInfoCollection::LookUpStoredObjectInfo(XrSdkLogObjectInfo const&)
 t ObjectInfoCollection::LookUpStoredObjectInfo(XrSdkLogObjectInfo const&) const
 t ObjectInfoCollection::RemoveObject(unsigned long, XrObjectType)
 t RuntimeInterface::CreateInstance(XrInstanceCreateInfo const*, XrInstance_T**)
 t RuntimeInterface::CreateInstance(XrInstanceCreateInfo const*, XrInstance_T**) [clone .cold]
 t RuntimeInterface::DestroyInstance(XrInstance_T*)
 t RuntimeInterface::ForgetDebugMessenger(XrDebugUtilsMessengerEXT_T*)
 t RuntimeInterface::GetDebugUtilsMessengerDispatchTable(XrDebugUtilsMessengerEXT_T*)
 t RuntimeInterface::GetDispatchTable(XrInstance_T*)
 t RuntimeInterface::GetInstanceExtensionProperties(std::vector<XrExtensionProperties, std::allocator<XrExtensionProperties> >&)
 t RuntimeInterface::GetInstanceExtensionProperties(std::vector<XrExtensionProperties, std::allocator<XrExtensionProperties> >&) [clone .cold]
 t RuntimeInterface::GetInstanceProcAddr(XrInstance_T*, char const*, void (**)())
 t RuntimeInterface::LoadRuntime(std::string const&)
 t RuntimeInterface::LoadRuntime(std::string const&) [clone .cold]
 t RuntimeInterface::RuntimeInterface(void*, XrResult (*)(XrInstance_T*, char const*, void (**)()))
 t RuntimeInterface::SetSupportedExtensions(std::vector<std::string, std::allocator<std::string> >&)
 t RuntimeInterface::SupportsExtension(std::string const&)
 t RuntimeInterface::TrackDebugMessenger(XrInstance_T*, XrDebugUtilsMessengerEXT_T*)
 t RuntimeInterface::TrackDebugMessenger(XrInstance_T*, XrDebugUtilsMessengerEXT_T*) [clone .cold]
 t RuntimeInterface::TryLoadingSingleRuntime(std::string const&, std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> >&)
 t RuntimeInterface::TryLoadingSingleRuntime(std::string const&, std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> >&) [clone .cold]
 t RuntimeInterface::UnloadRuntime(std::string const&)
 t RuntimeInterface::UnloadRuntime(std::string const&) [clone .cold]
 t RuntimeInterface::~RuntimeInterface()
 t RuntimeInterface::~RuntimeInterface() [clone .cold]
 t RuntimeManifestFile::CreateIfValid(std::string const&, std::vector<std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> >, std::allocator<std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> > > >&)
 t RuntimeManifestFile::CreateIfValid(std::string const&, std::vector<std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> >, std::allocator<std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> > > >&) [clone .cold]
 t RuntimeManifestFile::FindManifestFiles(std::vector<std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> >, std::allocator<std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> > > >&)
 t RuntimeManifestFile::FindManifestFiles(std::vector<std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> >, std::allocator<std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> > > >&) [clone .cold]
 t RuntimeManifestFile::RuntimeManifestFile(std::string const&, std::string const&)
 t RuntimeManifestFile::RuntimeManifestFile(std::string const&, std::string const&) [clone .cold]
 t XrSdkLogObjectInfo::ToString() const
 t XrSdkLogObjectInfo::ToString() const [clone .cold]
 t XrSdkSessionLabel::XrSdkSessionLabel(XrDebugUtilsLabelEXT const&, bool)
 t XrSdkSessionLabel::make(XrDebugUtilsLabelEXT const&, bool)
 t XrSdkSessionLabel::make(XrDebugUtilsLabelEXT const&, bool) [clone .cold]
 t _GLOBAL__sub_I_api_layer_interface.cpp
 t _GLOBAL__sub_I_filesystem_utils.cpp
 t _GLOBAL__sub_I_json_value.cpp
 t _GLOBAL__sub_I_loader_core.cpp
 t _GLOBAL__sub_I_loader_instance.cpp
 t _GLOBAL__sub_I_loader_logger.cpp
 t _GLOBAL__sub_I_loader_logger_recorders.cpp
 t _GLOBAL__sub_I_manifest_file.cpp
 t _GLOBAL__sub_I_runtime_interface.cpp
 t _GLOBAL__sub_I_xr_generated_loader.cpp
 t _Unwind_Backtrace
 t _Unwind_Backtrace.cold
 t _Unwind_DebugHook
 t _Unwind_DeleteException
 t _Unwind_FindEnclosingFunction
 t _Unwind_Find_FDE
 t _Unwind_Find_FDE.cold
 t _Unwind_ForcedUnwind
 t _Unwind_ForcedUnwind_Phase2
 t _Unwind_ForcedUnwind_Phase2.cold
 t _Unwind_GetCFA
 t _Unwind_GetDataRelBase
 t _Unwind_GetGR
 t _Unwind_GetGR.cold
 t _Unwind_GetIP
 t _Unwind_GetIPInfo
 t _Unwind_GetLanguageSpecificData
 t _Unwind_GetRegionStart
 t _Unwind_GetTextRelBase
 t _Unwind_IteratePhdrCallback
 t _Unwind_IteratePhdrCallback.cold
 t _Unwind_RaiseException
 t _Unwind_RaiseException.cold
 t _Unwind_RaiseException_Phase2
 t _Unwind_RaiseException_Phase2.cold
 t _Unwind_Resume
 t _Unwind_Resume.cold
 t _Unwind_Resume_or_Rethrow
 t _Unwind_Resume_or_Rethrow.cold
 t _Unwind_SetGR
 t _Unwind_SetGR.cold
 t _Unwind_SetIP
 t __deregister_frame
 t __deregister_frame_info
 t __deregister_frame_info_bases
 t __do_global_dtors_aux
 t __frame_state_for
 t __register_frame
 t __register_frame_info
 t __register_frame_info_bases
 t __register_frame_info_table
 t __register_frame_info_table_bases
 t __register_frame_table
 t _fini
 t _init
 t add_fdes
 t add_fdes.cold
 t char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .isra.0]
 t char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.0]
 t classify_object_over_fdes
 t classify_object_over_fdes.cold
 t deregister_tm_clones
 t execute_cfa_program
 t execute_cfa_program.cold
 t execute_stack_op
 t execute_stack_op.cold
 t fde_mixed_encoding_compare
 t fde_mixed_encoding_compare.cold
 t fde_single_encoding_compare
 t fde_single_encoding_compare.cold
 t fde_unencoded_compare
 t frame_downheap
 t frame_dummy
 t frame_heapsort
 t get_cie_encoding
 t init_dwarf_reg_size_table
 t linear_search_fdes
 t linear_search_fdes.cold
 t read_encoded_value
 t read_encoded_value.cold
 t read_encoded_value_with_base
 t read_encoded_value_with_base.cold
 t register_tm_clones
 t search_object
 t search_object.cold
 t std::_Deque_base<Json::Reader::ErrorInfo, std::allocator<Json::Reader::ErrorInfo> >::_M_initialize_map(unsigned long)
 t std::_Deque_base<Json::Value*, std::allocator<Json::Value*> >::_M_initialize_map(unsigned long)
 t std::_Deque_base<Json::Value*, std::allocator<Json::Value*> >::~_Deque_base()
 t std::_Hashtable<XrInstance_T*, std::pair<XrInstance_T* const, std::unique_ptr<XrGeneratedDispatchTable, std::default_delete<XrGeneratedDispatchTable> > >, std::allocator<std::pair<XrInstance_T* const, std::unique_ptr<XrGeneratedDispatchTable, std::default_delete<XrGeneratedDispatchTable> > > >, std::__detail::_Select1st, std::equal_to<XrInstance_T*>, std::hash<XrInstance_T*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear()
 t std::_Hashtable<XrInstance_T*, std::pair<XrInstance_T* const, std::unique_ptr<XrGeneratedDispatchTable, std::default_delete<XrGeneratedDispatchTable> > >, std::allocator<std::pair<XrInstance_T* const, std::unique_ptr<XrGeneratedDispatchTable, std::default_delete<XrGeneratedDispatchTable> > > >, std::__detail::_Select1st, std::equal_to<XrInstance_T*>, std::hash<XrInstance_T*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::erase(std::__detail::_Node_const_iterator<std::pair<XrInstance_T* const, std::unique_ptr<XrGeneratedDispatchTable, std::default_delete<XrGeneratedDispatchTable> > >, false, false>)
 t std::_Hashtable<XrInstance_T*, std::pair<XrInstance_T* const, std::unique_ptr<XrGeneratedDispatchTable, std::default_delete<XrGeneratedDispatchTable> > >, std::allocator<std::pair<XrInstance_T* const, std::unique_ptr<XrGeneratedDispatchTable, std::default_delete<XrGeneratedDispatchTable> > > >, std::__detail::_Select1st, std::equal_to<XrInstance_T*>, std::hash<XrInstance_T*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(XrInstance_T* const&)
 t std::_Hashtable<XrSession_T*, std::pair<XrSession_T* const, std::unique_ptr<std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > >, std::default_delete<std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > > > > >, std::allocator<std::pair<XrSession_T* const, std::unique_ptr<std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > >, std::default_delete<std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > > > > > >, std::__detail::_Select1st, std::equal_to<XrSession_T*>, std::hash<XrSession_T*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<std::pair<XrSession_T* const, std::unique_ptr<std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > >, std::default_delete<std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > > > > >, false>*)
 t std::_Hashtable<XrSession_T*, std::pair<XrSession_T* const, std::unique_ptr<std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > >, std::default_delete<std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > > > > >, std::allocator<std::pair<XrSession_T* const, std::unique_ptr<std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > >, std::default_delete<std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > > > > > >, std::__detail::_Select1st, std::equal_to<XrSession_T*>, std::hash<XrSession_T*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::~_Scoped_node()
 t std::_Hashtable<XrSession_T*, std::pair<XrSession_T* const, std::unique_ptr<std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > >, std::default_delete<std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > > > > >, std::allocator<std::pair<XrSession_T* const, std::unique_ptr<std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > >, std::default_delete<std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > > > > > >, std::__detail::_Select1st, std::equal_to<XrSession_T*>, std::hash<XrSession_T*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear()
 t std::_Hashtable<std::string, std::pair<std::string const, std::string>, std::allocator<std::pair<std::string const, std::string> >, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::string const&, unsigned long) const
 t std::_Hashtable<std::string, std::pair<std::string const, std::string>, std::allocator<std::pair<std::string const, std::string> >, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::clear()
 t std::_Hashtable<std::string, std::string, std::allocator<std::string>, std::__detail::_Identity, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&)
 t std::_Hashtable<std::string, std::string, std::allocator<std::string>, std::__detail::_Identity, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear()
 t std::_Hashtable<std::string, std::string, std::allocator<std::string>, std::__detail::_Identity, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::count(std::string const&) const
 t std::_Hashtable<unsigned long, unsigned long, std::allocator<unsigned long>, std::__detail::_Identity, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable(std::_Hashtable<unsigned long, unsigned long, std::allocator<unsigned long>, std::__detail::_Identity, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >&&, std::allocator<std::__detail::_Hash_node<unsigned long, false> >&&, std::integral_constant<bool, true>)
 t std::_Hashtable<unsigned long, unsigned long, std::allocator<unsigned long>, std::__detail::_Identity, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets()
 t std::_Hashtable<unsigned long, unsigned long, std::allocator<unsigned long>, std::__detail::_Identity, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&)
 t std::_Hashtable<unsigned long, unsigned long, std::allocator<unsigned long>, std::__detail::_Identity, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::clear()
 t std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::_M_erase(std::_Rb_tree_node<std::pair<Json::Value::CZString const, Json::Value> >*) [clone .isra.0]
 t std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<Json::Value::CZString const, Json::Value> >, Json::Value::CZString const&)
 t std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::_M_get_insert_unique_pos(Json::Value::CZString const&)
 t std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::equal_range(Json::Value::CZString const&)
 t std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::erase(Json::Value::CZString const&) [clone .isra.0]
 t std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::find(Json::Value::CZString const&)
 t std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_erase(std::_Rb_tree_node<std::string>*) [clone .isra.0]
 t std::_Rb_tree_iterator<std::pair<Json::Value::CZString const, Json::Value> > std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::_M_emplace_hint_unique<std::pair<Json::Value::CZString const, Json::Value>&>(std::_Rb_tree_const_iterator<std::pair<Json::Value::CZString const, Json::Value> >, std::pair<Json::Value::CZString const, Json::Value>&)
 t std::_Rb_tree_node<std::pair<Json::Value::CZString const, Json::Value> >* std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::_M_copy<std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<Json::Value::CZString const, Json::Value> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::_Alloc_node&) [clone .isra.0]
 t std::_Rb_tree_node<std::pair<Json::Value::CZString const, Json::Value> >* std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::_M_copy<std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<Json::Value::CZString const, Json::Value> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::_Alloc_node&) [clone .isra.0] [clone .cold]
 t std::_Vector_base<XrDebugUtilsLabelEXT, std::allocator<XrDebugUtilsLabelEXT> >::~_Vector_base()
 t std::_Vector_base<XrExtensionProperties, std::allocator<XrExtensionProperties> >::~_Vector_base()
 t std::_Vector_base<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> >::~_Vector_base()
 t std::_Vector_base<char const*, std::allocator<char const*> >::~_Vector_base()
 t std::__detail::_Map_base<XrInstance_T*, std::pair<XrInstance_T* const, std::unique_ptr<XrGeneratedDispatchTable, std::default_delete<XrGeneratedDispatchTable> > >, std::allocator<std::pair<XrInstance_T* const, std::unique_ptr<XrGeneratedDispatchTable, std::default_delete<XrGeneratedDispatchTable> > > >, std::__detail::_Select1st, std::equal_to<XrInstance_T*>, std::hash<XrInstance_T*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](XrInstance_T* const&)
 t std::__detail::_Map_base<XrInstance_T*, std::pair<XrInstance_T* const, std::unordered_set<unsigned long, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<unsigned long> > >, std::allocator<std::pair<XrInstance_T* const, std::unordered_set<unsigned long, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<unsigned long> > > >, std::__detail::_Select1st, std::equal_to<XrInstance_T*>, std::hash<XrInstance_T*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](XrInstance_T* const&)
 t std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
 t std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
 t std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::~basic_stringbuf()
 t std::ctype<char>::do_widen(char) const
 t std::default_delete<XrSdkSessionLabel>::operator()(XrSdkSessionLabel*) const [clone .part.0]
 t std::deque<Json::OurReader::ErrorInfo, std::allocator<Json::OurReader::ErrorInfo> >::_M_default_append(unsigned long)
 t std::deque<Json::OurReader::ErrorInfo, std::allocator<Json::OurReader::ErrorInfo> >::_M_destroy_data_aux(std::_Deque_iterator<Json::OurReader::ErrorInfo, Json::OurReader::ErrorInfo&, Json::OurReader::ErrorInfo*>, std::_Deque_iterator<Json::OurReader::ErrorInfo, Json::OurReader::ErrorInfo&, Json::OurReader::ErrorInfo*>) [clone .isra.0]
 t std::deque<Json::OurReader::ErrorInfo, std::allocator<Json::OurReader::ErrorInfo> >::_M_new_elements_at_back(unsigned long)
 t std::deque<Json::OurReader::ErrorInfo, std::allocator<Json::OurReader::ErrorInfo> >::_M_reallocate_map(unsigned long, bool)
 t std::deque<Json::Reader::ErrorInfo, std::allocator<Json::Reader::ErrorInfo> >::_M_default_append(unsigned long)
 t std::deque<Json::Reader::ErrorInfo, std::allocator<Json::Reader::ErrorInfo> >::_M_erase_at_end(std::_Deque_iterator<Json::Reader::ErrorInfo, Json::Reader::ErrorInfo&, Json::Reader::ErrorInfo*>)
 t std::deque<Json::Reader::ErrorInfo, std::allocator<Json::Reader::ErrorInfo> >::_M_new_elements_at_back(unsigned long)
 t std::deque<Json::Reader::ErrorInfo, std::allocator<Json::Reader::ErrorInfo> >::_M_reallocate_map(unsigned long, bool)
 t std::pair<std::__detail::_Node_iterator<std::string, true, true>, bool> std::_Hashtable<std::string, std::string, std::allocator<std::string>, std::__detail::_Identity, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::string const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::string, true> > > >(std::string const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::string, true> > > const&, std::integral_constant<bool, true>, unsigned long) [clone .isra.0]
 t std::pair<std::__detail::_Node_iterator<std::string, true, true>, bool> std::_Hashtable<std::string, std::string, std::allocator<std::string>, std::__detail::_Identity, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::string const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::string, true> > > >(std::string const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::string, true> > > const&, std::integral_constant<bool, true>, unsigned long) [clone .isra.0] [clone .cold]
 t std::set<std::string, std::less<std::string>, std::allocator<std::string> >::insert(std::string&&)
 t std::string& std::string::assign<char*>(char*, char*) [clone .isra.0]
 t std::string::_Rep::_M_dispose(std::allocator<char> const&) [clone .part.0]
 t std::unique_lock<std::mutex>::unlock()
 t std::unique_lock<std::shared_timed_mutex>::unlock()
 t std::unique_ptr<Json::StreamWriter, std::default_delete<Json::StreamWriter> >::~unique_ptr()
 t std::unique_ptr<LoaderInstance, std::default_delete<LoaderInstance> >::~unique_ptr()
 t std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> >::~unique_ptr()
 t std::unique_ptr<RuntimeInterface, std::default_delete<RuntimeInterface> >::~unique_ptr()
 t std::unique_ptr<std::array<std::string, 3ul>, std::default_delete<std::array<std::string, 3ul> > > Json::cloneUnique<std::array<std::string, 3ul> >(std::unique_ptr<std::array<std::string, 3ul>, std::default_delete<std::array<std::string, 3ul> > > const&)
 t std::unique_ptr<std::array<std::string, 3ul>, std::default_delete<std::array<std::string, 3ul> > > Json::cloneUnique<std::array<std::string, 3ul> >(std::unique_ptr<std::array<std::string, 3ul>, std::default_delete<std::array<std::string, 3ul> > > const&) [clone .cold]
 t std::unique_ptr<std::array<std::string, 3ul>, std::default_delete<std::array<std::string, 3ul> > >::~unique_ptr()
 t std::vector<XrExtensionProperties, std::allocator<XrExtensionProperties> >::_M_default_append(unsigned long)
 t std::vector<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> >::~vector()
 t std::vector<std::string, std::allocator<std::string> >::operator=(std::vector<std::string, std::allocator<std::string> > const&) [clone .isra.0]
 t std::vector<std::string, std::allocator<std::string> >::operator=(std::vector<std::string, std::allocator<std::string> > const&) [clone .isra.0] [clone .cold]
 t std::vector<std::string, std::allocator<std::string> >::reserve(unsigned long)
 t std::vector<std::string, std::allocator<std::string> >::~vector()
 t std::vector<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> >, std::allocator<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> > > >::~vector()
 t std::vector<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> >, std::allocator<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> > > >::_M_erase(__gnu_cxx::__normal_iterator<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> >*, std::vector<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> >, std::allocator<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> > > > >)
 t std::vector<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> >, std::allocator<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> > > >::~vector()
 t std::vector<std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> >, std::allocator<std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> > > >::_M_erase(__gnu_cxx::__normal_iterator<std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> >*, std::vector<std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> >, std::allocator<std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> > > > >, __gnu_cxx::__normal_iterator<std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> >*, std::vector<std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> >, std::allocator<std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> > > > >)
 t std::vector<std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> >, std::allocator<std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> > > >::~vector()
 t uw_frame_state_for
 t uw_frame_state_for.cold
 t uw_init_context_1
 t uw_init_context_1.cold
 t uw_install_context_1
 t uw_install_context_1.cold
 t uw_update_context_1
 t uw_update_context_1.cold
 t void std::_Hashtable<unsigned long, unsigned long, std::allocator<unsigned long>, std::__detail::_Identity, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_assign<std::_Hashtable<unsigned long, unsigned long, std::allocator<unsigned long>, std::__detail::_Identity, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long, false> > > >(std::_Hashtable<unsigned long, unsigned long, std::allocator<unsigned long>, std::__detail::_Identity, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long, false> > > const&) [clone .isra.0]
 t void std::_Hashtable<unsigned long, unsigned long, std::allocator<unsigned long>, std::__detail::_Identity, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_assign<std::_Hashtable<unsigned long, unsigned long, std::allocator<unsigned long>, std::__detail::_Identity, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long, false> > > >(std::_Hashtable<unsigned long, unsigned long, std::allocator<unsigned long>, std::__detail::_Identity, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long, false> > > const&) [clone .isra.0] [clone .cold]
 t void std::__detail::__to_chars_10_impl<unsigned int>(char*, unsigned int, unsigned int)
 t void std::deque<Json::OurReader::ErrorInfo, std::allocator<Json::OurReader::ErrorInfo> >::_M_push_back_aux<Json::OurReader::ErrorInfo const&>(Json::OurReader::ErrorInfo const&)
 t void std::deque<Json::Reader::ErrorInfo, std::allocator<Json::Reader::ErrorInfo> >::_M_push_back_aux<Json::Reader::ErrorInfo const&>(Json::Reader::ErrorInfo const&)
 t void std::vector<ExtensionListing, std::allocator<ExtensionListing> >::_M_realloc_insert<ExtensionListing const&>(__gnu_cxx::__normal_iterator<ExtensionListing*, std::vector<ExtensionListing, std::allocator<ExtensionListing> > >, ExtensionListing const&)
 t void std::vector<Json::OurReader::StructuredError, std::allocator<Json::OurReader::StructuredError> >::_M_realloc_insert<Json::OurReader::StructuredError const&>(__gnu_cxx::__normal_iterator<Json::OurReader::StructuredError*, std::vector<Json::OurReader::StructuredError, std::allocator<Json::OurReader::StructuredError> > >, Json::OurReader::StructuredError const&)
 t void std::vector<Json::PathArgument const*, std::allocator<Json::PathArgument const*> >::_M_realloc_insert<Json::PathArgument const*>(__gnu_cxx::__normal_iterator<Json::PathArgument const**, std::vector<Json::PathArgument const*, std::allocator<Json::PathArgument const*> > >, Json::PathArgument const*&&)
 t void std::vector<Json::PathArgument, std::allocator<Json::PathArgument> >::_M_realloc_insert<Json::PathArgument const&>(__gnu_cxx::__normal_iterator<Json::PathArgument*, std::vector<Json::PathArgument, std::allocator<Json::PathArgument> > >, Json::PathArgument const&)
 t void std::vector<Json::PathArgument, std::allocator<Json::PathArgument> >::_M_realloc_insert<Json::PathArgument>(__gnu_cxx::__normal_iterator<Json::PathArgument*, std::vector<Json::PathArgument, std::allocator<Json::PathArgument> > >, Json::PathArgument&&)
 t void std::vector<Json::Reader::StructuredError, std::allocator<Json::Reader::StructuredError> >::_M_realloc_insert<Json::Reader::StructuredError const&>(__gnu_cxx::__normal_iterator<Json::Reader::StructuredError*, std::vector<Json::Reader::StructuredError, std::allocator<Json::Reader::StructuredError> > >, Json::Reader::StructuredError const&)
 t void std::vector<XrDebugUtilsLabelEXT, std::allocator<XrDebugUtilsLabelEXT> >::_M_realloc_insert<XrDebugUtilsLabelEXT>(__gnu_cxx::__normal_iterator<XrDebugUtilsLabelEXT*, std::vector<XrDebugUtilsLabelEXT, std::allocator<XrDebugUtilsLabelEXT> > >, XrDebugUtilsLabelEXT&&)
 t void std::vector<XrDebugUtilsObjectNameInfoEXT, std::allocator<XrDebugUtilsObjectNameInfoEXT> >::_M_realloc_insert<XrDebugUtilsObjectNameInfoEXT>(__gnu_cxx::__normal_iterator<XrDebugUtilsObjectNameInfoEXT*, std::vector<XrDebugUtilsObjectNameInfoEXT, std::allocator<XrDebugUtilsObjectNameInfoEXT> > >, XrDebugUtilsObjectNameInfoEXT&&)
 t void std::vector<XrExtensionProperties, std::allocator<XrExtensionProperties> >::_M_realloc_insert<XrExtensionProperties const&>(__gnu_cxx::__normal_iterator<XrExtensionProperties*, std::vector<XrExtensionProperties, std::allocator<XrExtensionProperties> > >, XrExtensionProperties const&)
 t void std::vector<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> >::_M_realloc_insert<XrSdkLogObjectInfo const&>(__gnu_cxx::__normal_iterator<XrSdkLogObjectInfo*, std::vector<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> > >, XrSdkLogObjectInfo const&)
 t void std::vector<char const*, std::allocator<char const*> >::_M_realloc_insert<char const (&) [128]>(__gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >, char const (&) [128])
 t void std::vector<char const*, std::allocator<char const*> >::_M_realloc_insert<char const* const&>(__gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >, char const* const&)
 t void std::vector<std::string, std::allocator<std::string> >::_M_realloc_insert<char (&) [128]>(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, char (&) [128])
 t void std::vector<std::string, std::allocator<std::string> >::_M_realloc_insert<char (&) [256]>(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, char (&) [256])
 t void std::vector<std::string, std::allocator<std::string> >::_M_realloc_insert<std::string const&>(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&)
 t void std::vector<std::string, std::allocator<std::string> >::_M_realloc_insert<std::string>(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string&&)
 t void std::vector<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> >, std::allocator<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> > > >::_M_realloc_insert<ApiLayerInterface*>(__gnu_cxx::__normal_iterator<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> >*, std::vector<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> >, std::allocator<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> > > > >, ApiLayerInterface*&&)
 t void std::vector<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> >, std::allocator<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> > > >::_M_realloc_insert<ApiLayerManifestFile*>(__gnu_cxx::__normal_iterator<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> >*, std::vector<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> >, std::allocator<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> > > > >, ApiLayerManifestFile*&&)
 t void std::vector<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> >, std::allocator<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> > > >::_M_realloc_insert<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> >*, std::vector<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> >, std::allocator<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> > > > >, std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> >&&)
 t void std::vector<std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> >, std::allocator<std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> > > >::_M_realloc_insert<std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> >*, std::vector<std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> >, std::allocator<std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> > > > >, std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> >&&)
 t void std::vector<std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> >, std::allocator<std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> > > >::_M_realloc_insert<RuntimeManifestFile*>(__gnu_cxx::__normal_iterator<std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> >*, std::vector<std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> >, std::allocator<std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> > > > >, RuntimeManifestFile*&&)
 t void std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > >::_M_realloc_insert<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >*, std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > > >, std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >&&)
 t void vector_remove_if_and_erase<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo>, ObjectInfoCollection::RemoveObject(unsigned long, XrObjectType)::{lambda(XrSdkLogObjectInfo const&)#1}>(std::vector<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> >&, ObjectInfoCollection::RemoveObject(unsigned long, XrObjectType)::{lambda(XrSdkLogObjectInfo const&)#1}&&)
 t xrAcquireSwapchainImage.cold
 t xrApplyHapticFeedback.cold
 t xrAttachSessionActionSets.cold
 t xrBeginFrame.cold
 t xrBeginSession.cold
 t xrCreateAction.cold
 t xrCreateActionSet.cold
 t xrCreateActionSpace.cold
 t xrCreateReferenceSpace.cold
 t xrCreateSession.cold
 t xrCreateSwapchain.cold
 t xrDestroyAction.cold
 t xrDestroyActionSet.cold
 t xrDestroySession.cold
 t xrDestroySpace.cold
 t xrDestroySwapchain.cold
 t xrEndFrame.cold
 t xrEndSession.cold
 t xrEnumerateBoundSourcesForAction.cold
 t xrEnumerateEnvironmentBlendModes.cold
 t xrEnumerateReferenceSpaces.cold
 t xrEnumerateSwapchainFormats.cold
 t xrEnumerateSwapchainImages.cold
 t xrEnumerateViewConfigurationViews.cold
 t xrEnumerateViewConfigurations.cold
 t xrGetActionStateBoolean.cold
 t xrGetActionStateFloat.cold
 t xrGetActionStatePose.cold
 t xrGetActionStateVector2f.cold
 t xrGetCurrentInteractionProfile.cold
 t xrGetInputSourceLocalizedName.cold
 t xrGetInstanceProperties.cold
 t xrGetReferenceSpaceBoundsRect.cold
 t xrGetSystem.cold
 t xrGetSystemProperties.cold
 t xrGetViewConfigurationProperties.cold
 t xrLocateSpace.cold
 t xrLocateViews.cold
 t xrPathToString.cold
 t xrPollEvent.cold
 t xrReleaseSwapchainImage.cold
 t xrRequestExitSession.cold
 t xrResultToString.cold
 t xrStopHapticFeedback.cold
 t xrStringToPath.cold
 t xrStructureTypeToString.cold
 t xrSuggestInteractionProfileBindings.cold
 t xrSyncActions.cold
 t xrWaitFrame.cold
 t xrWaitSwapchainImage.cold
 typeinfo for std::bad_alloc
 typeinfo for std::exception
 vtable for __cxxabiv1::__class_type_info
 vtable for __cxxabiv1::__si_class_type_info
 vtable for std::basic_filebuf<char, std::char_traits<char> >
 vtable for std::basic_ifstream<char, std::char_traits<char> >
 vtable for std::basic_ios<char, std::char_traits<char> >
 vtable for std::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >
 vtable for std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >
 vtable for std::basic_streambuf<char, std::char_traits<char> >
 vtable for std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >
