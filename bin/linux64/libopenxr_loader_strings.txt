"functions" section contains non-string values.
%s: __pos (which is %zu) > this->size() (which is %zu)
%u.%u
%u.%u.%u
' is not a number.
(Error message:
(anonymous namespace)::DebugUtilsLogRecorder::LogDebugUtilsMessage(unsigned long, unsigned long, XrDebugUtilsMessengerCallbackDataEXT const*)
(anonymous namespace)::DebugUtilsLogRecorder::LogMessage(unsigned long, unsigned long, XrLoaderLogMessengerCallbackData const*)
(anonymous namespace)::DebugUtilsLogRecorder::LogMessage(unsigned long, unsigned long, XrLoaderLogMessengerCallbackData const*) [clone .cold]
(anonymous namespace)::DebugUtilsLogRecorder::~DebugUtilsLogRecorder()
(anonymous namespace)::GetSetCurrentLoaderInstance()
(anonymous namespace)::GetSetCurrentLoaderInstance()::current_loader_instance
(anonymous namespace)::OstreamLoaderLogRecorder::LogMessage(unsigned long, unsigned long, XrLoaderLogMessengerCallbackData const*)
(anonymous namespace)::OstreamLoaderLogRecorder::LogMessage(unsigned long, unsigned long, XrLoaderLogMessengerCallbackData const*) [clone .cold]
(anonymous namespace)::OstreamLoaderLogRecorder::~OstreamLoaderLogRecorder()
*N12_GLOBAL__N_121DebugUtilsLogRecorderE
*N12_GLOBAL__N_124OstreamLoaderLogRecorderE
, OpenXR version returned not compatible with this loader
, failed to load with message "
, negotiation did not return a valid getInstanceProcAddr
, negotiation failed with error
, negotiation succeeded but returned NULL getInstanceProcAddr
, negotiation succeeded but returned invalid interface version
-1e+9999
-Infinity
.  Does it exist?
.  Max supported version is
./obj_openxr_loader_linux64/release/libopenxr_loader.so
.config
/active_runtime.json
/api_layers/explicit.d
/api_layers/implicit.d
000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfeff
00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899
0123456789abcdef
14LoaderInstance
16RuntimeInterface
17ApiLayerInterface
17LoaderLogRecorder
1e+9999
A valid JSON document must be either an array or an object value.
ActiveLoaderInstance::Get(LoaderInstance**, char const*)
ActiveLoaderInstance::Get(LoaderInstance**, char const*) [clone .cold]
ActiveLoaderInstance::IsAvailable()
ActiveLoaderInstance::Remove()
ActiveLoaderInstance::Set(std::unique_ptr<LoaderInstance, std::default_delete<LoaderInstance> >, char const*)
ActiveLoaderInstance::Set(std::unique_ptr<LoaderInstance, std::default_delete<LoaderInstance> >, char const*) [clone .cold]
AddEnvironmentApiLayers(std::vector<std::string, std::allocator<std::string> >&) [clone .constprop.0]
AddEnvironmentApiLayers(std::vector<std::string, std::allocator<std::string> >&) [clone .constprop.0] [clone .cold]
AddIfJson(std::string const&, std::vector<std::string, std::allocator<std::string> >&)
ApiLayerInterface::ApiLayerInterface(std::string const&, void*, std::vector<std::string, std::allocator<std::string> >&, XrResult (*)(XrInstance_T*, char const*, void (**)()), XrResult (*)(XrInstanceCreateInfo const*, XrApiLayerCreateInfo const*, XrInstance_T**))
ApiLayerInterface::ApiLayerInterface(std::string const&, void*, std::vector<std::string, std::allocator<std::string> >&, XrResult (*)(XrInstance_T*, char const*, void (**)()), XrResult (*)(XrInstanceCreateInfo const*, XrApiLayerCreateInfo const*, XrInstance_T**)) [clone .cold]
ApiLayerInterface::GetApiLayerProperties(std::string const&, unsigned int, unsigned int*, XrApiLayerProperties*)
ApiLayerInterface::GetApiLayerProperties(std::string const&, unsigned int, unsigned int*, XrApiLayerProperties*) [clone .cold]
ApiLayerInterface::GetInstanceExtensionProperties(std::string const&, char const*, std::vector<XrExtensionProperties, std::allocator<XrExtensionProperties> >&)
ApiLayerInterface::GetInstanceExtensionProperties(std::string const&, char const*, std::vector<XrExtensionProperties, std::allocator<XrExtensionProperties> >&) [clone .cold]
ApiLayerInterface::LoadApiLayers skipping layer
ApiLayerInterface::LoadApiLayers succeeded loading layer
ApiLayerInterface::LoadApiLayers(std::string const&, unsigned int, char const* const*, std::vector<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> >, std::allocator<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> > > >&)
ApiLayerInterface::LoadApiLayers(std::string const&, unsigned int, char const* const*, std::vector<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> >, std::allocator<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> > > >&) [clone .cold]
ApiLayerInterface::SupportsExtension(std::string const&) const
ApiLayerInterface::~ApiLayerInterface()
ApiLayerInterface::~ApiLayerInterface() [clone .cold]
ApiLayerManifestFile::ApiLayerManifestFile(ManifestFileType, std::string const&, std::string const&, std::string const&, JsonVersion const&, unsigned int const&, std::string const&)
ApiLayerManifestFile::ApiLayerManifestFile(ManifestFileType, std::string const&, std::string const&, std::string const&, JsonVersion const&, unsigned int const&, std::string const&) [clone .cold]
ApiLayerManifestFile::CreateIfValid(ManifestFileType, std::string const&, std::vector<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> >, std::allocator<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> > > >&)
ApiLayerManifestFile::CreateIfValid(ManifestFileType, std::string const&, std::vector<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> >, std::allocator<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> > > >&) [clone .cold]
ApiLayerManifestFile::FindManifestFiles(ManifestFileType, std::vector<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> >, std::allocator<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> > > >&)
ApiLayerManifestFile::FindManifestFiles(ManifestFileType, std::vector<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> >, std::allocator<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> > > >&) [clone .cold]
ApiLayerManifestFile::PopulateApiLayerProperties(XrApiLayerProperties&) const
Bad escape sequence in string
Bad unicode escape sequence in string: four digits expected.
Bad unicode escape sequence in string: hexadecimal digit expected.
CXXABI_1.3
CXXABI_1.3.5
CXXABI_1.3.8
CXXABI_1.3.9
CheckAllFilesInThePath(std::string const&, bool, std::vector<std::string, std::allocator<std::string> >&)
CheckAllFilesInThePath(std::string const&, bool, std::vector<std::string, std::allocator<std::string> >&) [clone .cold]
ConstIterator to Iterator should never be allowed.
CopyIncludedPaths(bool, std::string const&, std::string const&, std::string&) [clone .constprop.0]
CopyIncludedPaths(bool, std::string const&, std::string const&, std::string&) [clone .constprop.0] [clone .cold]
DW.ref._ZTISt9bad_alloc
DW.ref._ZTISt9exception
DW.ref.__gxx_personality_v0
DebugUtilsData::AddObjectName(unsigned long, XrObjectType, std::string const&)
DebugUtilsData::BeginLabelRegion(XrSession_T*, XrDebugUtilsLabelEXT const&)
DebugUtilsData::BeginLabelRegion(XrSession_T*, XrDebugUtilsLabelEXT const&) [clone .cold]
DebugUtilsData::DeleteObject(unsigned long, XrObjectType)
DebugUtilsData::DeleteSessionLabels(XrSession_T*)
DebugUtilsData::EndLabelRegion(XrSession_T*)
DebugUtilsData::GetOrCreateSessionLabelList(XrSession_T*)
DebugUtilsData::GetOrCreateSessionLabelList(XrSession_T*) [clone .cold]
DebugUtilsData::GetSessionLabelList(XrSession_T*)
DebugUtilsData::InsertLabel(XrSession_T*, XrDebugUtilsLabelEXT const&)
DebugUtilsData::InsertLabel(XrSession_T*, XrDebugUtilsLabelEXT const&) [clone .cold]
DebugUtilsData::LookUpSessionLabels(XrSession_T*, std::vector<XrDebugUtilsLabelEXT, std::allocator<XrDebugUtilsLabelEXT> >&) const
DebugUtilsData::PopulateNamesAndLabels(std::vector<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> >) const
DebugUtilsData::PopulateNamesAndLabels(std::vector<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> >) const [clone .cold]
DebugUtilsData::RemoveIndividualLabel(std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > >&)
DebugUtilsData::WrapCallbackData(AugmentedCallbackData*, XrDebugUtilsMessengerCallbackDataEXT const*) const
DebugUtilsData::~DebugUtilsData()
DebugUtilsMessageTypesToLoaderLogMessageTypes(unsigned long)
DebugUtilsSeveritiesToLoaderLogMessageSeverities(unsigned long)
Destroying LoaderInstance =
Duplicate key: '
Empty escape sequence in string
Error [
Exceeded stackLimit in readValue().
Extra non-whitespace after JSON value.
FileSysUtilsCombinePaths(std::string const&, std::string const&, std::string&)
FileSysUtilsCombinePaths(std::string const&, std::string const&, std::string&) [clone .cold]
FileSysUtilsFindFilesInPath(std::string const&, std::vector<std::string, std::allocator<std::string> >&)
FileSysUtilsGetAbsolutePath(std::string const&, std::string&)
FileSysUtilsGetCanonicalPath(std::string const&, std::string&)
FileSysUtilsGetCurrentPath(std::string&)
FileSysUtilsGetParentPath(std::string const&, std::string&)
FileSysUtilsGetParentPath(std::string const&, std::string&) [clone .cold]
FileSysUtilsIsAbsolutePath(std::string const&)
FileSysUtilsIsDirectory(std::string const&)
FileSysUtilsIsRegularFile(std::string const&)
FileSysUtilsParsePathList(std::string&, std::vector<std::string, std::allocator<std::string> >&)
FileSysUtilsParsePathList(std::string&, std::vector<std::string, std::allocator<std::string> >&) [clone .cold]
FileSysUtilsPathExists(std::string const&)
GCC: (SteamRT 10.3.0-3+steamrt3.1+bsrt3.1) 10.3.0
GENERAL
GLIBCXX_3.4
GLIBCXX_3.4.11
GLIBCXX_3.4.18
GLIBCXX_3.4.20
GLIBCXX_3.4.9
GLIBC_2.14
GLIBC_2.2.5
GLIBC_2.3
GLIBC_2.7
GeneratedXrPopulateDispatchTable
GetGlobalLoaderMutex()
GetGlobalLoaderMutex()::loader_mutex
Implicit layer
Infinity
Info [
Is it a valid layer manifest file?
Is it a valid runtime manifest file?
Json::(anonymous namespace)::valueToString(double, bool, unsigned int, Json::PrecisionType)
Json::(anonymous namespace)::valueToString(double, bool, unsigned int, Json::PrecisionType) [clone .cold]
Json::(anonymous namespace)::valueToString(double, bool, unsigned int, Json::PrecisionType)::reps
Json::BuiltStyledStreamWriter::BuiltStyledStreamWriter(std::string, Json::CommentStyle::Enum, std::string, std::string, std::string, bool, unsigned int, Json::PrecisionType)
Json::BuiltStyledStreamWriter::hasCommentForValue(Json::Value const&)
Json::BuiltStyledStreamWriter::indent()
Json::BuiltStyledStreamWriter::isMultilineArray(Json::Value const&)
Json::BuiltStyledStreamWriter::pushValue(std::string const&)
Json::BuiltStyledStreamWriter::unindent()
Json::BuiltStyledStreamWriter::write(Json::Value const&, std::ostream*)
Json::BuiltStyledStreamWriter::writeArrayValue(Json::Value const&)
Json::BuiltStyledStreamWriter::writeArrayValue(Json::Value const&) [clone .cold]
Json::BuiltStyledStreamWriter::writeCommentAfterValueOnSameLine(Json::Value const&)
Json::BuiltStyledStreamWriter::writeCommentAfterValueOnSameLine(Json::Value const&) [clone .cold]
Json::BuiltStyledStreamWriter::writeCommentBeforeValue(Json::Value const&)
Json::BuiltStyledStreamWriter::writeCommentBeforeValue(Json::Value const&) [clone .cold]
Json::BuiltStyledStreamWriter::writeIndent()
Json::BuiltStyledStreamWriter::writeValue(Json::Value const&)
Json::BuiltStyledStreamWriter::writeValue(Json::Value const&) [clone .cold]
Json::BuiltStyledStreamWriter::writeWithIndent(std::string const&)
Json::BuiltStyledStreamWriter::~BuiltStyledStreamWriter()
Json::CharReaderBuilder::CharReaderBuilder()
Json::CharReaderBuilder::CharReaderBuilder() [clone .cold]
Json::CharReaderBuilder::newCharReader() const
Json::CharReaderBuilder::newCharReader() const [clone .cold]
Json::CharReaderBuilder::operator[](std::string const&)
Json::CharReaderBuilder::setDefaults(Json::Value*)
Json::CharReaderBuilder::setDefaults(Json::Value*) [clone .cold]
Json::CharReaderBuilder::strictMode(Json::Value*)
Json::CharReaderBuilder::strictMode(Json::Value*) [clone .cold]
Json::CharReaderBuilder::validate(Json::Value*) const
Json::CharReaderBuilder::validate(Json::Value*) const [clone .cold]
Json::CharReaderBuilder::~CharReaderBuilder()
Json::FastWriter::FastWriter()
Json::FastWriter::dropNullPlaceholders()
Json::FastWriter::enableYAMLCompatibility()
Json::FastWriter::omitEndingLineFeed()
Json::FastWriter::write(Json::Value const&)
Json::FastWriter::writeValue(Json::Value const&)
Json::FastWriter::writeValue(Json::Value const&) [clone .cold]
Json::FastWriter::~FastWriter()
Json::Features::Features()
Json::Features::all()
Json::Features::strictMode()
Json::OurCharReader::parse(char const*, char const*, Json::Value*, std::string*)
Json::OurCharReader::~OurCharReader()
Json::OurFeatures::all()
Json::OurReader::OurReader(Json::OurFeatures const&)
Json::OurReader::OurReader(Json::OurFeatures const&) [clone .cold]
Json::OurReader::addComment(char const*, char const*, Json::CommentPlacement)
Json::OurReader::addComment(char const*, char const*, Json::CommentPlacement) [clone .cold]
Json::OurReader::addError(std::string const&, Json::OurReader::Token&, char const*)
Json::OurReader::addError(std::string const&, Json::OurReader::Token&, char const*) [clone .cold]
Json::OurReader::addErrorAndRecover(std::string const&, Json::OurReader::Token&, Json::OurReader::TokenType)
Json::OurReader::containsNewLine(char const*, char const*)
Json::OurReader::currentValue()
Json::OurReader::decodeDouble(Json::OurReader::Token&)
Json::OurReader::decodeDouble(Json::OurReader::Token&) [clone .cold]
Json::OurReader::decodeDouble(Json::OurReader::Token&, Json::Value&)
Json::OurReader::decodeDouble(Json::OurReader::Token&, Json::Value&) [clone .cold]
Json::OurReader::decodeNumber(Json::OurReader::Token&)
Json::OurReader::decodeNumber(Json::OurReader::Token&) [clone .cold]
Json::OurReader::decodeNumber(Json::OurReader::Token&, Json::Value&)
Json::OurReader::decodeNumber(Json::OurReader::Token&, Json::Value&) [clone .cold]
Json::OurReader::decodeNumber(Json::OurReader::Token&, Json::Value&)::negative_last_digit
Json::OurReader::decodeNumber(Json::OurReader::Token&, Json::Value&)::negative_threshold
Json::OurReader::decodeNumber(Json::OurReader::Token&, Json::Value&)::positive_last_digit
Json::OurReader::decodeNumber(Json::OurReader::Token&, Json::Value&)::positive_threshold
Json::OurReader::decodeString(Json::OurReader::Token&)
Json::OurReader::decodeString(Json::OurReader::Token&) [clone .cold]
Json::OurReader::decodeString(Json::OurReader::Token&, std::string&)
Json::OurReader::decodeString(Json::OurReader::Token&, std::string&) [clone .cold]
Json::OurReader::decodeUnicodeCodePoint(Json::OurReader::Token&, char const*&, char const*, unsigned int&)
Json::OurReader::decodeUnicodeCodePoint(Json::OurReader::Token&, char const*&, char const*, unsigned int&) [clone .cold]
Json::OurReader::decodeUnicodeEscapeSequence(Json::OurReader::Token&, char const*&, char const*, unsigned int&)
Json::OurReader::decodeUnicodeEscapeSequence(Json::OurReader::Token&, char const*&, char const*, unsigned int&) [clone .cold]
Json::OurReader::getFormattedErrorMessages() const
Json::OurReader::getFormattedErrorMessages() const [clone .cold]
Json::OurReader::getLocationLineAndColumn(char const*) const
Json::OurReader::getLocationLineAndColumn(char const*, int&, int&) const
Json::OurReader::getNextChar()
Json::OurReader::getStructuredErrors() const
Json::OurReader::getStructuredErrors() const [clone .cold]
Json::OurReader::good() const
Json::OurReader::match(char const*, int)
Json::OurReader::normalizeEOL(char const*, char const*)
Json::OurReader::parse(char const*, char const*, Json::Value&, bool)
Json::OurReader::parse(char const*, char const*, Json::Value&, bool) [clone .cold]
Json::OurReader::pushError(Json::Value const&, std::string const&)
Json::OurReader::pushError(Json::Value const&, std::string const&) [clone .cold]
Json::OurReader::pushError(Json::Value const&, std::string const&, Json::Value const&)
Json::OurReader::pushError(Json::Value const&, std::string const&, Json::Value const&) [clone .cold]
Json::OurReader::readArray(Json::OurReader::Token&)
Json::OurReader::readArray(Json::OurReader::Token&) [clone .cold]
Json::OurReader::readCStyleComment()
Json::OurReader::readComment()
Json::OurReader::readCppStyleComment()
Json::OurReader::readNumber(bool)
Json::OurReader::readObject(Json::OurReader::Token&)
Json::OurReader::readObject(Json::OurReader::Token&) [clone .cold]
Json::OurReader::readString()
Json::OurReader::readStringSingleQuote()
Json::OurReader::readToken(Json::OurReader::Token&)
Json::OurReader::readValue()
Json::OurReader::readValue() [clone .cold]
Json::OurReader::recoverFromError(Json::OurReader::TokenType)
Json::OurReader::skipCommentTokens(Json::OurReader::Token&)
Json::OurReader::skipSpaces()
Json::Path::Path(std::string const&, Json::PathArgument const&, Json::PathArgument const&, Json::PathArgument const&, Json::PathArgument const&, Json::PathArgument const&)
Json::Path::Path(std::string const&, Json::PathArgument const&, Json::PathArgument const&, Json::PathArgument const&, Json::PathArgument const&, Json::PathArgument const&) [clone .cold]
Json::Path::addPathInArg(std::string const&, std::vector<Json::PathArgument const*, std::allocator<Json::PathArgument const*> > const&, __gnu_cxx::__normal_iterator<Json::PathArgument const* const*, std::vector<Json::PathArgument const*, std::allocator<Json::PathArgument const*> > >&, Json::PathArgument::Kind)
Json::Path::invalidPath(std::string const&, int)
Json::Path::make(Json::Value&) const
Json::Path::makePath(std::string const&, std::vector<Json::PathArgument const*, std::allocator<Json::PathArgument const*> > const&)
Json::Path::makePath(std::string const&, std::vector<Json::PathArgument const*, std::allocator<Json::PathArgument const*> > const&) [clone .cold]
Json::Path::resolve(Json::Value const&) const
Json::Path::resolve(Json::Value const&, Json::Value const&) const
Json::Path::resolve(Json::Value const&, Json::Value const&) const [clone .cold]
Json::PathArgument::PathArgument()
Json::PathArgument::PathArgument(char const*)
Json::PathArgument::PathArgument(std::string const&)
Json::PathArgument::PathArgument(unsigned int)
Json::Reader::Reader()
Json::Reader::Reader() [clone .cold]
Json::Reader::Reader(Json::Features const&)
Json::Reader::Reader(Json::Features const&) [clone .cold]
Json::Reader::addComment(char const*, char const*, Json::CommentPlacement)
Json::Reader::addComment(char const*, char const*, Json::CommentPlacement) [clone .cold]
Json::Reader::addError(std::string const&, Json::Reader::Token&, char const*)
Json::Reader::addError(std::string const&, Json::Reader::Token&, char const*) [clone .cold]
Json::Reader::addErrorAndRecover(std::string const&, Json::Reader::Token&, Json::Reader::TokenType)
Json::Reader::containsNewLine(char const*, char const*)
Json::Reader::currentValue()
Json::Reader::decodeDouble(Json::Reader::Token&)
Json::Reader::decodeDouble(Json::Reader::Token&) [clone .cold]
Json::Reader::decodeDouble(Json::Reader::Token&, Json::Value&)
Json::Reader::decodeDouble(Json::Reader::Token&, Json::Value&) [clone .cold]
Json::Reader::decodeNumber(Json::Reader::Token&)
Json::Reader::decodeNumber(Json::Reader::Token&) [clone .cold]
Json::Reader::decodeNumber(Json::Reader::Token&, Json::Value&)
Json::Reader::decodeNumber(Json::Reader::Token&, Json::Value&) [clone .cold]
Json::Reader::decodeString(Json::Reader::Token&)
Json::Reader::decodeString(Json::Reader::Token&) [clone .cold]
Json::Reader::decodeString(Json::Reader::Token&, std::string&)
Json::Reader::decodeString(Json::Reader::Token&, std::string&) [clone .cold]
Json::Reader::decodeUnicodeCodePoint(Json::Reader::Token&, char const*&, char const*, unsigned int&)
Json::Reader::decodeUnicodeCodePoint(Json::Reader::Token&, char const*&, char const*, unsigned int&) [clone .cold]
Json::Reader::decodeUnicodeEscapeSequence(Json::Reader::Token&, char const*&, char const*, unsigned int&)
Json::Reader::decodeUnicodeEscapeSequence(Json::Reader::Token&, char const*&, char const*, unsigned int&) [clone .cold]
Json::Reader::getFormatedErrorMessages() const
Json::Reader::getFormattedErrorMessages() const
Json::Reader::getFormattedErrorMessages() const [clone .cold]
Json::Reader::getLocationLineAndColumn(char const*) const
Json::Reader::getLocationLineAndColumn(char const*, int&, int&) const
Json::Reader::getNextChar()
Json::Reader::getStructuredErrors() const
Json::Reader::getStructuredErrors() const [clone .cold]
Json::Reader::good() const
Json::Reader::match(char const*, int)
Json::Reader::normalizeEOL(char const*, char const*)
Json::Reader::normalizeEOL(char const*, char const*) [clone .cold]
Json::Reader::parse(char const*, char const*, Json::Value&, bool)
Json::Reader::parse(char const*, char const*, Json::Value&, bool) [clone .cold]
Json::Reader::parse(std::istream&, Json::Value&, bool)
Json::Reader::parse(std::istream&, Json::Value&, bool) [clone .cold]
Json::Reader::parse(std::string const&, Json::Value&, bool)
Json::Reader::pushError(Json::Value const&, std::string const&)
Json::Reader::pushError(Json::Value const&, std::string const&) [clone .cold]
Json::Reader::pushError(Json::Value const&, std::string const&, Json::Value const&)
Json::Reader::pushError(Json::Value const&, std::string const&, Json::Value const&) [clone .cold]
Json::Reader::readArray(Json::Reader::Token&)
Json::Reader::readArray(Json::Reader::Token&) [clone .cold]
Json::Reader::readCStyleComment()
Json::Reader::readComment()
Json::Reader::readCppStyleComment()
Json::Reader::readNumber()
Json::Reader::readObject(Json::Reader::Token&)
Json::Reader::readObject(Json::Reader::Token&) [clone .cold]
Json::Reader::readString()
Json::Reader::readToken(Json::Reader::Token&)
Json::Reader::readValue()
Json::Reader::readValue() [clone .cold]
Json::Reader::recoverFromError(Json::Reader::TokenType)
Json::Reader::skipCommentTokens(Json::Reader::Token&)
Json::Reader::skipSpaces()
Json::StreamWriter::Factory::~Factory()
Json::StreamWriter::StreamWriter()
Json::StreamWriter::~StreamWriter()
Json::StreamWriterBuilder::StreamWriterBuilder()
Json::StreamWriterBuilder::StreamWriterBuilder() [clone .cold]
Json::StreamWriterBuilder::newStreamWriter() const
Json::StreamWriterBuilder::newStreamWriter() const [clone .cold]
Json::StreamWriterBuilder::operator[](std::string const&)
Json::StreamWriterBuilder::setDefaults(Json::Value*)
Json::StreamWriterBuilder::setDefaults(Json::Value*) [clone .cold]
Json::StreamWriterBuilder::validate(Json::Value*) const
Json::StreamWriterBuilder::validate(Json::Value*) const [clone .cold]
Json::StreamWriterBuilder::~StreamWriterBuilder()
Json::StyledStreamWriter::StyledStreamWriter(std::string)
Json::StyledStreamWriter::hasCommentForValue(Json::Value const&)
Json::StyledStreamWriter::indent()
Json::StyledStreamWriter::isMultilineArray(Json::Value const&)
Json::StyledStreamWriter::pushValue(std::string const&)
Json::StyledStreamWriter::unindent()
Json::StyledStreamWriter::write(std::ostream&, Json::Value const&)
Json::StyledStreamWriter::writeArrayValue(Json::Value const&)
Json::StyledStreamWriter::writeArrayValue(Json::Value const&) [clone .cold]
Json::StyledStreamWriter::writeCommentAfterValueOnSameLine(Json::Value const&)
Json::StyledStreamWriter::writeCommentAfterValueOnSameLine(Json::Value const&) [clone .cold]
Json::StyledStreamWriter::writeCommentBeforeValue(Json::Value const&)
Json::StyledStreamWriter::writeCommentBeforeValue(Json::Value const&) [clone .cold]
Json::StyledStreamWriter::writeIndent()
Json::StyledStreamWriter::writeValue(Json::Value const&)
Json::StyledStreamWriter::writeValue(Json::Value const&) [clone .cold]
Json::StyledStreamWriter::writeWithIndent(std::string const&)
Json::StyledWriter::StyledWriter()
Json::StyledWriter::hasCommentForValue(Json::Value const&)
Json::StyledWriter::indent()
Json::StyledWriter::indent() [clone .cold]
Json::StyledWriter::isMultilineArray(Json::Value const&)
Json::StyledWriter::pushValue(std::string const&)
Json::StyledWriter::unindent()
Json::StyledWriter::write(Json::Value const&)
Json::StyledWriter::writeArrayValue(Json::Value const&)
Json::StyledWriter::writeArrayValue(Json::Value const&) [clone .cold]
Json::StyledWriter::writeCommentAfterValueOnSameLine(Json::Value const&)
Json::StyledWriter::writeCommentAfterValueOnSameLine(Json::Value const&) [clone .cold]
Json::StyledWriter::writeCommentBeforeValue(Json::Value const&)
Json::StyledWriter::writeCommentBeforeValue(Json::Value const&) [clone .cold]
Json::StyledWriter::writeIndent()
Json::StyledWriter::writeValue(Json::Value const&)
Json::StyledWriter::writeValue(Json::Value const&) [clone .cold]
Json::StyledWriter::writeWithIndent(std::string const&)
Json::StyledWriter::~StyledWriter()
Json::Value*& std::deque<Json::Value*, std::allocator<Json::Value*> >::emplace_back<Json::Value*>(Json::Value*&&) [clone .isra.0]
Json::Value::CZString::CZString(Json::Value::CZString const&)
Json::Value::CZString::CZString(Json::Value::CZString const&) [clone .cold]
Json::Value::CZString::CZString(Json::Value::CZString&&)
Json::Value::CZString::CZString(char const*, unsigned int, Json::Value::CZString::DuplicationPolicy)
Json::Value::CZString::CZString(unsigned int)
Json::Value::CZString::data() const
Json::Value::CZString::index() const
Json::Value::CZString::isStaticString() const
Json::Value::CZString::length() const
Json::Value::CZString::operator<(Json::Value::CZString const&) const
Json::Value::CZString::operator=(Json::Value::CZString const&)
Json::Value::CZString::operator=(Json::Value::CZString&&)
Json::Value::CZString::operator==(Json::Value::CZString const&) const
Json::Value::CZString::swap(Json::Value::CZString&)
Json::Value::CZString::~CZString()
Json::Value::Comments::Comments(Json::Value::Comments const&)
Json::Value::Comments::Comments(Json::Value::Comments&&)
Json::Value::Comments::get(Json::CommentPlacement) const
Json::Value::Comments::has(Json::CommentPlacement) const
Json::Value::Comments::operator=(Json::Value::Comments const&)
Json::Value::Comments::operator=(Json::Value::Comments&&)
Json::Value::Comments::set(Json::CommentPlacement, std::string)
Json::Value::Value(Json::StaticString const&)
Json::Value::Value(Json::Value const&)
Json::Value::Value(Json::Value const&) [clone .cold]
Json::Value::Value(Json::Value&&)
Json::Value::Value(Json::ValueType)
Json::Value::Value(Json::ValueType) [clone .cold]
Json::Value::Value(Json::ValueType)::emptyString
Json::Value::Value(bool)
Json::Value::Value(char const*)
Json::Value::Value(char const*) [clone .cold]
Json::Value::Value(char const*, char const*)
Json::Value::Value(char const*, char const*) [clone .cold]
Json::Value::Value(double)
Json::Value::Value(int)
Json::Value::Value(long)
Json::Value::Value(std::string const&)
Json::Value::Value(std::string const&) [clone .cold]
Json::Value::Value(unsigned int)
Json::Value::Value(unsigned long)
Json::Value::append(Json::Value const&)
Json::Value::append(Json::Value const&) [clone .cold]
Json::Value::append(Json::Value&&)
Json::Value::asBool() const
Json::Value::asBool() const [clone .cold]
Json::Value::asCString() const
Json::Value::asCString() const [clone .cold]
Json::Value::asDouble() const
Json::Value::asDouble() const [clone .cold]
Json::Value::asFloat() const
Json::Value::asFloat() const [clone .cold]
Json::Value::asInt() const
Json::Value::asInt() const [clone .cold]
Json::Value::asInt64() const
Json::Value::asInt64() const [clone .cold]
Json::Value::asLargestInt() const
Json::Value::asLargestUInt() const
Json::Value::asString() const
Json::Value::asString() const [clone .cold]
Json::Value::asUInt() const
Json::Value::asUInt() const [clone .cold]
Json::Value::asUInt64() const
Json::Value::asUInt64() const [clone .cold]
Json::Value::begin()
Json::Value::begin() const
Json::Value::clear()
Json::Value::clear() [clone .cold]
Json::Value::compare(Json::Value const&) const
Json::Value::copy(Json::Value const&)
Json::Value::copyPayload(Json::Value const&)
Json::Value::defaultRealPrecision
Json::Value::demand(char const*, char const*)
Json::Value::demand(char const*, char const*) [clone .cold]
Json::Value::dupMeta(Json::Value const&)
Json::Value::dupPayload(Json::Value const&)
Json::Value::dupPayload(Json::Value const&) [clone .cold]
Json::Value::empty() const
Json::Value::end()
Json::Value::end() const
Json::Value::find(char const*, char const*) const
Json::Value::find(char const*, char const*) const [clone .cold]
Json::Value::get(char const*, Json::Value const&) const
Json::Value::get(char const*, Json::Value const&) const [clone .cold]
Json::Value::get(char const*, char const*, Json::Value const&) const
Json::Value::get(char const*, char const*, Json::Value const&) const [clone .cold]
Json::Value::get(std::string const&, Json::Value const&) const
Json::Value::get(std::string const&, Json::Value const&) const [clone .cold]
Json::Value::get(unsigned int, Json::Value const&) const
Json::Value::get(unsigned int, Json::Value const&) const [clone .cold]
Json::Value::getComment(Json::CommentPlacement) const
Json::Value::getMemberNames() const
Json::Value::getMemberNames() const [clone .cold]
Json::Value::getOffsetLimit() const
Json::Value::getOffsetStart() const
Json::Value::getString(char const**, char const**) const
Json::Value::hasComment(Json::CommentPlacement) const
Json::Value::initBasic(Json::ValueType, bool)
Json::Value::isArray() const
Json::Value::isBool() const
Json::Value::isConvertibleTo(Json::ValueType) const
Json::Value::isConvertibleTo(Json::ValueType) const [clone .cold]
Json::Value::isDouble() const
Json::Value::isInt() const
Json::Value::isInt64() const
Json::Value::isIntegral() const
Json::Value::isMember(char const*) const
Json::Value::isMember(char const*, char const*) const
Json::Value::isMember(std::string const&) const
Json::Value::isNull() const
Json::Value::isNumeric() const
Json::Value::isObject() const
Json::Value::isString() const
Json::Value::isUInt() const
Json::Value::isUInt64() const
Json::Value::isValidIndex(unsigned int) const
Json::Value::maxInt
Json::Value::maxInt64
Json::Value::maxLargestInt
Json::Value::maxLargestUInt
Json::Value::maxUInt
Json::Value::maxUInt64
Json::Value::minInt
Json::Value::minInt64
Json::Value::minLargestInt
Json::Value::null
Json::Value::nullRef
Json::Value::nullSingleton()
Json::Value::nullSingleton()::nullStatic
Json::Value::operator bool() const
Json::Value::operator!=(Json::Value const&) const
Json::Value::operator<(Json::Value const&) const
Json::Value::operator<=(Json::Value const&) const
Json::Value::operator=(Json::Value const&)
Json::Value::operator=(Json::Value const&) [clone .cold]
Json::Value::operator=(Json::Value&&)
Json::Value::operator==(Json::Value const&) const
Json::Value::operator>(Json::Value const&) const
Json::Value::operator>=(Json::Value const&) const
Json::Value::operator[](Json::StaticString const&)
Json::Value::operator[](char const*)
Json::Value::operator[](char const*) const
Json::Value::operator[](int)
Json::Value::operator[](int) [clone .cold]
Json::Value::operator[](int) const
Json::Value::operator[](int) const [clone .cold]
Json::Value::operator[](std::string const&)
Json::Value::operator[](std::string const&) const
Json::Value::operator[](unsigned int)
Json::Value::operator[](unsigned int) [clone .cold]
Json::Value::operator[](unsigned int) const
Json::Value::operator[](unsigned int) const [clone .cold]
Json::Value::releasePayload()
Json::Value::removeIndex(unsigned int, Json::Value*)
Json::Value::removeIndex(unsigned int, Json::Value*) [clone .cold]
Json::Value::removeMember(char const*)
Json::Value::removeMember(char const*) [clone .cold]
Json::Value::removeMember(char const*, Json::Value*)
Json::Value::removeMember(char const*, char const*, Json::Value*)
Json::Value::removeMember(char const*, char const*, Json::Value*) [clone .part.0]
Json::Value::removeMember(std::string const&)
Json::Value::removeMember(std::string const&, Json::Value*)
Json::Value::resize(unsigned int)
Json::Value::resize(unsigned int) [clone .cold]
Json::Value::resolveReference(char const*)
Json::Value::resolveReference(char const*) [clone .cold]
Json::Value::resolveReference(char const*, char const*)
Json::Value::resolveReference(char const*, char const*) [clone .cold]
Json::Value::setComment(std::string, Json::CommentPlacement)
Json::Value::setComment(std::string, Json::CommentPlacement) [clone .cold]
Json::Value::setOffsetLimit(long)
Json::Value::setOffsetStart(long)
Json::Value::size() const
Json::Value::swap(Json::Value&)
Json::Value::swapPayload(Json::Value&)
Json::Value::toStyledString() const
Json::Value::toStyledString() const [clone .cold]
Json::Value::type() const
Json::Value::~Value()
Json::ValueConstIterator::ValueConstIterator()
Json::ValueConstIterator::ValueConstIterator(Json::ValueIterator const&)
Json::ValueConstIterator::ValueConstIterator(std::_Rb_tree_iterator<std::pair<Json::Value::CZString const, Json::Value> > const&)
Json::ValueConstIterator::operator=(Json::ValueIteratorBase const&)
Json::ValueIterator::ValueIterator()
Json::ValueIterator::ValueIterator(Json::ValueConstIterator const&)
Json::ValueIterator::ValueIterator(Json::ValueIterator const&)
Json::ValueIterator::ValueIterator(std::_Rb_tree_iterator<std::pair<Json::Value::CZString const, Json::Value> > const&)
Json::ValueIterator::operator=(Json::ValueIterator const&)
Json::ValueIteratorBase::ValueIteratorBase()
Json::ValueIteratorBase::ValueIteratorBase(std::_Rb_tree_iterator<std::pair<Json::Value::CZString const, Json::Value> > const&)
Json::ValueIteratorBase::computeDistance(Json::ValueIteratorBase const&) const
Json::ValueIteratorBase::copy(Json::ValueIteratorBase const&)
Json::ValueIteratorBase::decrement()
Json::ValueIteratorBase::deref() const
Json::ValueIteratorBase::increment()
Json::ValueIteratorBase::index() const
Json::ValueIteratorBase::isEqual(Json::ValueIteratorBase const&) const
Json::ValueIteratorBase::key() const
Json::ValueIteratorBase::key() const [clone .cold]
Json::ValueIteratorBase::memberName() const
Json::ValueIteratorBase::memberName(char const**) const
Json::ValueIteratorBase::name() const
Json::Writer::~Writer()
Json::codePointToUTF8(unsigned int)
Json::codePointToUTF8(unsigned int) [clone .cold]
Json::duplicateAndPrefixStringValue(char const*, unsigned int)
Json::duplicateAndPrefixStringValue(char const*, unsigned int) [clone .cold]
Json::duplicateAndPrefixStringValue(char const*, unsigned int) [clone .part.0]
Json::hex2
Json::operator<<(std::ostream&, Json::Value const&)
Json::operator<<(std::ostream&, Json::Value const&) [clone .cold]
Json::operator>>(std::istream&, Json::Value&)
Json::operator>>(std::istream&, Json::Value&) [clone .cold]
Json::parseFromStream(Json::CharReader::Factory const&, std::istream&, Json::Value*, std::string*)
Json::parseFromStream(Json::CharReader::Factory const&, std::istream&, Json::Value*, std::string*) [clone .cold]
Json::throwLogicError(std::string const&)
Json::throwRuntimeError(std::string const&)
Json::toHex16Bit(unsigned int)
Json::toHex16Bit(unsigned int) [clone .cold]
Json::valueToQuotedString(char const*)
Json::valueToQuotedStringN(char const*, unsigned int)
Json::valueToQuotedStringN(char const*, unsigned int) [clone .cold]
Json::valueToString(bool)
Json::valueToString(double, unsigned int, Json::PrecisionType)
Json::valueToString(int)
Json::valueToString(long)
Json::valueToString(unsigned int)
Json::valueToString(unsigned long)
Json::writeString(Json::StreamWriter::Factory const&, Json::Value const&)
Json::writeString(Json::StreamWriter::Factory const&, Json::Value const&) [clone .cold]
LargestInt out of Int range
LargestInt out of UInt range
LargestInt out of UInt64 range
LargestUInt out of Int range
LargestUInt out of Int64 range
LargestUInt out of UInt range
Line %d, Column %d
LoaderInstance::CreateInstance succeeded with
LoaderInstance::CreateInstance(XrResult (*)(XrInstance_T*, char const*, void (**)()), XrResult (*)(XrInstanceCreateInfo const*, XrInstance_T**), XrResult (*)(XrInstanceCreateInfo const*, XrApiLayerCreateInfo const*, XrInstance_T**), std::vector<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> >, std::allocator<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> > > >, XrInstanceCreateInfo const*, std::unique_ptr<LoaderInstance, std::default_delete<LoaderInstance> >*)
LoaderInstance::CreateInstance(XrResult (*)(XrInstance_T*, char const*, void (**)()), XrResult (*)(XrInstanceCreateInfo const*, XrInstance_T**), XrResult (*)(XrInstanceCreateInfo const*, XrApiLayerCreateInfo const*, XrInstance_T**), std::vector<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> >, std::allocator<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> > > >, XrInstanceCreateInfo const*, std::unique_ptr<LoaderInstance, std::default_delete<LoaderInstance> >*) [clone .cold]
LoaderInstance::ExtensionIsEnabled(std::string const&)
LoaderInstance::GetInstanceProcAddr(char const*, void (**)())
LoaderInstance::LoaderInstance(XrInstance_T*, XrInstanceCreateInfo const*, XrResult (*)(XrInstance_T*, char const*, void (**)()), std::vector<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> >, std::allocator<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> > > >)
LoaderInstance::LoaderInstance(XrInstance_T*, XrInstanceCreateInfo const*, XrResult (*)(XrInstance_T*, char const*, void (**)()), std::vector<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> >, std::allocator<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> > > >) [clone .cold]
LoaderInstance::LoaderSpecificExtensions()
LoaderInstance::LoaderSpecificExtensions()::extensions
LoaderInstance::~LoaderInstance()
LoaderInstance::~LoaderInstance() [clone .cold]
LoaderLogMessageSeveritiesToDebugUtilsMessageSeverities(unsigned long)
LoaderLogMessageTypesToDebugUtilsMessageTypes(unsigned long)
LoaderLogRecorder::LogDebugUtilsMessage(unsigned long, unsigned long, XrDebugUtilsMessengerCallbackDataEXT const*)
LoaderLogRecorder::Pause()
LoaderLogRecorder::Resume()
LoaderLogRecorder::Start()
LoaderLogRecorder::Stop()
LoaderLogger::AddLogRecorder(std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> >&&)
LoaderLogger::AddLogRecorder(std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> >&&) [clone .cold]
LoaderLogger::AddLogRecorderForXrInstance(XrInstance_T*, std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> >&&)
LoaderLogger::AddLogRecorderForXrInstance(XrInstance_T*, std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> >&&) [clone .cold]
LoaderLogger::AddObjectName(unsigned long, XrObjectType, std::string const&)
LoaderLogger::BeginLabelRegion(XrSession_T*, XrDebugUtilsLabelEXT const*)
LoaderLogger::DeleteSessionLabels(XrSession_T*)
LoaderLogger::EndLabelRegion(XrSession_T*)
LoaderLogger::GetInstance()::instance
LoaderLogger::InsertLabel(XrSession_T*, XrDebugUtilsLabelEXT const*)
LoaderLogger::LoaderLogger()
LoaderLogger::LoaderLogger() [clone .cold]
LoaderLogger::LogDebugUtilsMessage(unsigned long, unsigned long, XrDebugUtilsMessengerCallbackDataEXT const*)
LoaderLogger::LogDebugUtilsMessage(unsigned long, unsigned long, XrDebugUtilsMessengerCallbackDataEXT const*) [clone .cold]
LoaderLogger::LogErrorMessage(std::string const&, std::string const&, std::vector<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> > const&) [clone .isra.0]
LoaderLogger::LogErrorMessage(std::string const&, std::string const&, std::vector<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> > const&) [clone .isra.0] [clone .cold]
LoaderLogger::LogInfoMessage(std::string const&, std::string const&, std::vector<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> > const&) [clone .isra.0]
LoaderLogger::LogInfoMessage(std::string const&, std::string const&, std::vector<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> > const&) [clone .isra.0] [clone .cold]
LoaderLogger::LogMessage(unsigned long, unsigned long, std::string const&, std::string const&, std::string const&, std::vector<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> > const&)
LoaderLogger::LogMessage(unsigned long, unsigned long, std::string const&, std::string const&, std::string const&, std::vector<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> > const&) [clone .cold]
LoaderLogger::LogVerboseMessage(std::string const&, std::string const&, std::vector<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> > const&) [clone .isra.0]
LoaderLogger::LogVerboseMessage(std::string const&, std::string const&, std::vector<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> > const&) [clone .isra.0] [clone .cold]
LoaderLogger::RemoveLogRecorder(unsigned long)
LoaderLogger::RemoveLogRecordersForXrInstance(XrInstance_T*)
LoaderLogger::RemoveLogRecordersForXrInstance(XrInstance_T*) [clone .cold]
LoaderLogger::~LoaderLogger()
LoaderTrampolineCreateDebugUtilsMessengerEXT(XrInstance_T*, XrDebugUtilsMessengerCreateInfoEXT const*, XrDebugUtilsMessengerEXT_T**)
LoaderTrampolineCreateDebugUtilsMessengerEXT(XrInstance_T*, XrDebugUtilsMessengerCreateInfoEXT const*, XrDebugUtilsMessengerEXT_T**) [clone .cold]
LoaderTrampolineDestroyDebugUtilsMessengerEXT(XrDebugUtilsMessengerEXT_T*)
LoaderTrampolineDestroyDebugUtilsMessengerEXT(XrDebugUtilsMessengerEXT_T*) [clone .cold]
LoaderTrampolineSessionBeginDebugUtilsLabelRegionEXT(XrSession_T*, XrDebugUtilsLabelEXT const*)
LoaderTrampolineSessionBeginDebugUtilsLabelRegionEXT(XrSession_T*, XrDebugUtilsLabelEXT const*) [clone .cold]
LoaderTrampolineSessionEndDebugUtilsLabelRegionEXT(XrSession_T*)
LoaderTrampolineSessionEndDebugUtilsLabelRegionEXT(XrSession_T*) [clone .cold]
LoaderTrampolineSessionInsertDebugUtilsLabelEXT(XrSession_T*, XrDebugUtilsLabelEXT const*)
LoaderTrampolineSessionInsertDebugUtilsLabelEXT(XrSession_T*, XrDebugUtilsLabelEXT const*) [clone .cold]
LoaderTrampolineSetDebugUtilsObjectNameEXT(XrInstance_T*, XrDebugUtilsObjectNameInfoEXT const*)
LoaderTrampolineSetDebugUtilsObjectNameEXT(XrInstance_T*, XrDebugUtilsObjectNameInfoEXT const*) [clone .cold]
LoaderTrampolineSubmitDebugUtilsMessageEXT(XrInstance_T*, unsigned long, unsigned long, XrDebugUtilsMessengerCallbackDataEXT const*)
LoaderTrampolineSubmitDebugUtilsMessageEXT(XrInstance_T*, unsigned long, unsigned long, XrDebugUtilsMessengerCallbackDataEXT const*) [clone .cold]
LoaderXrCreateInstance(XrInstanceCreateInfo const*, XrInstance_T**)
LoaderXrCreateInstance(XrInstanceCreateInfo const*, XrInstance_T**) [clone .cold]
LoaderXrDestroyInstance(XrInstance_T*)
LoaderXrDestroyInstance(XrInstance_T*) [clone .cold]
LoaderXrEnumerateApiLayerProperties(unsigned int, unsigned int*, XrApiLayerProperties*)
LoaderXrEnumerateApiLayerProperties(unsigned int, unsigned int*, XrApiLayerProperties*) [clone .cold]
LoaderXrEnumerateInstanceExtensionProperties(char const*, unsigned int, unsigned int*, XrExtensionProperties*)
LoaderXrEnumerateInstanceExtensionProperties(char const*, unsigned int, unsigned int*, XrExtensionProperties*) [clone .cold]
LoaderXrGetInstanceProcAddr(XrInstance_T*, char const*, void (**)())
LoaderXrGetInstanceProcAddr(XrInstance_T*, char const*, void (**)()) [clone .cold]
LoaderXrTermCreateApiLayerInstance(XrInstanceCreateInfo const*, XrApiLayerCreateInfo const*, XrInstance_T**)
LoaderXrTermCreateDebugUtilsMessengerEXT(XrInstance_T*, XrDebugUtilsMessengerCreateInfoEXT const*, XrDebugUtilsMessengerEXT_T**)
LoaderXrTermCreateDebugUtilsMessengerEXT(XrInstance_T*, XrDebugUtilsMessengerCreateInfoEXT const*, XrDebugUtilsMessengerEXT_T**) [clone .cold]
LoaderXrTermCreateInstance(XrInstanceCreateInfo const*, XrInstance_T**)
LoaderXrTermCreateInstance(XrInstanceCreateInfo const*, XrInstance_T**) [clone .cold]
LoaderXrTermDestroyDebugUtilsMessengerEXT(XrDebugUtilsMessengerEXT_T*)
LoaderXrTermDestroyDebugUtilsMessengerEXT(XrDebugUtilsMessengerEXT_T*) [clone .cold]
LoaderXrTermDestroyInstance(XrInstance_T*)
LoaderXrTermDestroyInstance(XrInstance_T*) [clone .cold]
LoaderXrTermGetInstanceProcAddr(XrInstance_T*, char const*, void (**)())
LoaderXrTermGetInstanceProcAddr(XrInstance_T*, char const*, void (**)()) [clone .cold]
LoaderXrTermSetDebugUtilsObjectNameEXT(XrInstance_T*, XrDebugUtilsObjectNameInfoEXT const*)
LoaderXrTermSetDebugUtilsObjectNameEXT(XrInstance_T*, XrDebugUtilsObjectNameInfoEXT const*) [clone .cold]
LoaderXrTermSubmitDebugUtilsMessageEXT(XrInstance_T*, unsigned long, unsigned long, XrDebugUtilsMessengerCallbackDataEXT const*)
LoaderXrTermSubmitDebugUtilsMessageEXT(XrInstance_T*, unsigned long, unsigned long, XrDebugUtilsMessengerCallbackDataEXT const*) [clone .cold]
Looking for
MakeDebugUtilsLoaderLogRecorder(XrDebugUtilsMessengerCreateInfoEXT const*, XrDebugUtilsMessengerEXT_T*)
MakeDebugUtilsLoaderLogRecorder(XrDebugUtilsMessengerCreateInfoEXT const*, XrDebugUtilsMessengerEXT_T*) [clone .cold]
MakeStdErrLoaderLogRecorder(void*)
MakeStdOutLoaderLogRecorder(void*, unsigned long)
ManifestFile::GetFunctionName(std::string const&) const
ManifestFile::GetInstanceExtensionProperties(std::vector<XrExtensionProperties, std::allocator<XrExtensionProperties> >&)
ManifestFile::IsValidJson - JSON "file_format_version"
ManifestFile::IsValidJson(Json::Value const&, JsonVersion&)
ManifestFile::IsValidJson(Json::Value const&, JsonVersion&) [clone .cold]
ManifestFile::ManifestFile(ManifestFileType, std::string const&, std::string const&)
ManifestFile::ManifestFile(ManifestFileType, std::string const&, std::string const&) [clone .cold]
ManifestFile::ParseCommon
ManifestFile::ParseCommon(Json::Value const&)
ManifestFile::ParseCommon(Json::Value const&) [clone .cold]
ManifestFile::~ManifestFile()
Missing ',' or ']' in array declaration
Missing ',' or '}' in object declaration
Missing ':' after object member name
Missing '}' or object member name
N4Json10CharReader7FactoryE
N4Json10CharReaderE
N4Json10FastWriterE
N4Json12StreamWriter7FactoryE
N4Json12StreamWriterE
N4Json12StyledWriterE
N4Json13OurCharReaderE
N4Json17CharReaderBuilderE
N4Json19StreamWriterBuilderE
N4Json23BuiltStyledStreamWriterE
N4Json6WriterE
NamesAndLabels::NamesAndLabels(std::vector<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> >, std::vector<XrDebugUtilsLabelEXT, std::allocator<XrDebugUtilsLabelEXT> >)
NamesAndLabels::NamesAndLabels(std::vector<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> >, std::vector<XrDebugUtilsLabelEXT, std::allocator<XrDebugUtilsLabelEXT> >) [clone .cold]
NamesAndLabels::PopulateCallbackData(XrDebugUtilsMessengerCallbackDataEXT&) const
NamesAndLabels::~NamesAndLabels()
Null Value Passed to Value Constructor
ObjectInfoCollection::AddObjectName(unsigned long, XrObjectType, std::string const&)
ObjectInfoCollection::AddObjectName(unsigned long, XrObjectType, std::string const&) [clone .cold]
ObjectInfoCollection::LookUpObjectName(XrDebugUtilsObjectNameInfoEXT&) const
ObjectInfoCollection::LookUpObjectName(XrSdkLogObjectInfo&) const
ObjectInfoCollection::LookUpStoredObjectInfo(XrSdkLogObjectInfo const&)
ObjectInfoCollection::LookUpStoredObjectInfo(XrSdkLogObjectInfo const&) const
ObjectInfoCollection::RemoveObject(unsigned long, XrObjectType)
Object[
OpenXR-Loader
RuntimeInterface::CreateInstance(XrInstanceCreateInfo const*, XrInstance_T**)
RuntimeInterface::CreateInstance(XrInstanceCreateInfo const*, XrInstance_T**) [clone .cold]
RuntimeInterface::DestroyInstance(XrInstance_T*)
RuntimeInterface::ForgetDebugMessenger(XrDebugUtilsMessengerEXT_T*)
RuntimeInterface::GetDebugUtilsMessengerDispatchTable(XrDebugUtilsMessengerEXT_T*)
RuntimeInterface::GetDispatchTable(XrInstance_T*)
RuntimeInterface::GetInstance()::instance
RuntimeInterface::GetInstanceExtensionProperties(std::vector<XrExtensionProperties, std::allocator<XrExtensionProperties> >&)
RuntimeInterface::GetInstanceExtensionProperties(std::vector<XrExtensionProperties, std::allocator<XrExtensionProperties> >&) [clone .cold]
RuntimeInterface::GetInstanceProcAddr(XrInstance_T*, char const*, void (**)())
RuntimeInterface::LoadRuntime(std::string const&)
RuntimeInterface::LoadRuntime(std::string const&) [clone .cold]
RuntimeInterface::RuntimeInterface(void*, XrResult (*)(XrInstance_T*, char const*, void (**)()))
RuntimeInterface::SetSupportedExtensions(std::vector<std::string, std::allocator<std::string> >&)
RuntimeInterface::SupportsExtension(std::string const&)
RuntimeInterface::TrackDebugMessenger(XrInstance_T*, XrDebugUtilsMessengerEXT_T*)
RuntimeInterface::TrackDebugMessenger(XrInstance_T*, XrDebugUtilsMessengerEXT_T*) [clone .cold]
RuntimeInterface::TryLoadingSingleRuntime(std::string const&, std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> >&)
RuntimeInterface::TryLoadingSingleRuntime(std::string const&, std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> >&) [clone .cold]
RuntimeInterface::UnloadRuntime(std::string const&)
RuntimeInterface::UnloadRuntime(std::string const&) [clone .cold]
RuntimeInterface::~RuntimeInterface()
RuntimeInterface::~RuntimeInterface() [clone .cold]
RuntimeManifestFile::CreateIfValid - attempting to load
RuntimeManifestFile::CreateIfValid(std::string const&, std::vector<std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> >, std::allocator<std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> > > >&)
RuntimeManifestFile::CreateIfValid(std::string const&, std::vector<std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> >, std::allocator<std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> > > >&) [clone .cold]
RuntimeManifestFile::FindManifestFiles - using environment variable override runtime file
RuntimeManifestFile::FindManifestFiles - using global runtime file
RuntimeManifestFile::FindManifestFiles(std::vector<std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> >, std::allocator<std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> > > >&)
RuntimeManifestFile::FindManifestFiles(std::vector<std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> >, std::allocator<std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> > > >&) [clone .cold]
RuntimeManifestFile::RuntimeManifestFile(std::string const&, std::string const&)
RuntimeManifestFile::RuntimeManifestFile(std::string const&, std::string const&) [clone .cold]
SessionLabel[
Syntax error: value, object or array expected.
Type is not convertible to string
UNKNOWN
Unable to parse token length
Unknown failure
Unknown failure:
VTT for std::basic_ifstream<char, std::char_traits<char> >
VTT for std::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >
VTT for std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >
VUID-XrInstanceCreateInfo-enabledApiLayerNames-parameter: enabledApiLayerCount is non-0 but array is NULL
VUID-XrInstanceCreateInfo-enabledExtensionNames-parameter
VUID-xrCreateInstance-info-parameter: something wrong with XrInstanceCreateInfo contents
VUID-xrEnumerateApiLayerProperties-properties-parameter: non-zero capacity but null array
Value is not convertible to Int.
Value is not convertible to Int64.
Value is not convertible to UInt.
Value is not convertible to UInt64.
Value is not convertible to bool.
Value is not convertible to double.
Value is not convertible to float.
Verbose [
Warning [
XDG_CONFIG_DIRS
XDG_CONFIG_HOME
XDG_DATA_DIRS
XDG_DATA_HOME
XR_API_LAYER_PATH
XR_ENABLE_API_LAYERS
XR_EXT_debug_utils
XR_LOADER_DEBUG
XR_RUNTIME_JSON
XrSdkLogObjectInfo::ToString() const
XrSdkLogObjectInfo::ToString() const [clone .cold]
XrSdkSessionLabel::XrSdkSessionLabel(XrDebugUtilsLabelEXT const&, bool)
XrSdkSessionLabel::make(XrDebugUtilsLabelEXT const&, bool)
XrSdkSessionLabel::make(XrDebugUtilsLabelEXT const&, bool) [clone .cold]
_DYNAMIC
_GLOBAL_OFFSET_TABLE_
_GLOBAL__sub_I_api_layer_interface.cpp
_GLOBAL__sub_I_filesystem_utils.cpp
_GLOBAL__sub_I_json_value.cpp
_GLOBAL__sub_I_loader_core.cpp
_GLOBAL__sub_I_loader_instance.cpp
_GLOBAL__sub_I_loader_logger.cpp
_GLOBAL__sub_I_loader_logger_recorders.cpp
_GLOBAL__sub_I_manifest_file.cpp
_GLOBAL__sub_I_runtime_interface.cpp
_GLOBAL__sub_I_xr_generated_loader.cpp
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
_Unwind_Backtrace
_Unwind_Backtrace.cold
_Unwind_DebugHook
_Unwind_DeleteException
_Unwind_FindEnclosingFunction
_Unwind_Find_FDE
_Unwind_Find_FDE.cold
_Unwind_ForcedUnwind
_Unwind_ForcedUnwind_Phase2
_Unwind_ForcedUnwind_Phase2.cold
_Unwind_GetCFA
_Unwind_GetDataRelBase
_Unwind_GetGR
_Unwind_GetGR.cold
_Unwind_GetIP
_Unwind_GetIPInfo
_Unwind_GetLanguageSpecificData
_Unwind_GetRegionStart
_Unwind_GetTextRelBase
_Unwind_IteratePhdrCallback
_Unwind_IteratePhdrCallback.cold
_Unwind_RaiseException
_Unwind_RaiseException.cold
_Unwind_RaiseException_Phase2
_Unwind_RaiseException_Phase2.cold
_Unwind_Resume
_Unwind_Resume.cold
_Unwind_Resume_or_Rethrow
_Unwind_Resume_or_Rethrow.cold
_Unwind_SetGR
_Unwind_SetGR.cold
_Unwind_SetIP
__FRAME_END__
__TMC_END__
__TMC_LIST__
__bss_start
__cxa_atexit
__cxa_begin_catch
__cxa_end_catch
__cxa_finalize
__cxa_guard_abort
__cxa_guard_acquire
__cxa_guard_release
__cxa_pure_virtual
__cxa_rethrow
__cxa_throw_bad_array_new_length
__deregister_frame
__deregister_frame_info
__deregister_frame_info_bases
__do_global_dtors_aux
__do_global_dtors_aux_fini_array_entry
__dso_handle
__frame_dummy_init_array_entry
__frame_state_for
__gmon_start__
__gxx_personality_v0
__isoc99_sscanf
__pthread_key_create
__register_frame
__register_frame_info
__register_frame_info_bases
__register_frame_info_table
__register_frame_info_table_bases
__register_frame_table
__xstat
_edata
_fini
_init
abort
access
add_fdes
add_fdes.cold
additional six characters expected to parse unicode surrogate pair.
adds.1
allowComments
allowDroppedNullPlaceholders
allowNumericKeys
allowSingleQuotes
allowSpecialFloats
and OpenXR API version
any_objects_registered
api_layer
api_version
basic_string::_S_construct null not valid
basic_string::erase
basic_string::substr
because negotiation function
cannot create std::deque larger than max_size()
char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .isra.0]
char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.0]
classify_object_over_fdes
classify_object_over_fdes.cold
closedir
collectComments
commentStyle
commentStyle must be 'All' or 'None'
completed.0
decimal
deque::_M_new_elements_at_back
deregister_tm_clones
description
disable_environment
dl_iterate_phdr
dlclose
dlerror
dlopen
dlsym
does not appear to exist
double out of Int range
double out of Int64 range
double out of UInt range
double out of UInt64 range
dropNullPlaceholders
due to failed negotiation with error
enableYAMLCompatibility
enable_environment
enabledExtensionCount is non-0 but array is NULL
error
execute_cfa_program
execute_cfa_program.cold
execute_stack_op
execute_stack_op.cold
expecting another \u token to begin the second half of a unicode surrogate pair
extension_version
failIfExtra
failed allocating memory
failed to open
failed to parse
false
fde_mixed_encoding_compare
fde_mixed_encoding_compare.cold
fde_single_encoding_compare
fde_single_encoding_compare.cold
fde_unencoded_compare
file_format_version
for detail.
frame_downheap
frame_dummy
frame_hdr_cache
frame_hdr_cache_head
frame_heapsort
functions
get_cie_encoding
getcwd
getegid
getenv
geteuid
getgid
getuid
guard variable for (anonymous namespace)::GetSetCurrentLoaderInstance()::current_loader_instance
guard variable for Json::OurReader::decodeNumber(Json::OurReader::Token&, Json::Value&)::negative_last_digit
guard variable for Json::OurReader::decodeNumber(Json::OurReader::Token&, Json::Value&)::negative_threshold
guard variable for Json::OurReader::decodeNumber(Json::OurReader::Token&, Json::Value&)::positive_last_digit
guard variable for Json::OurReader::decodeNumber(Json::OurReader::Token&, Json::Value&)::positive_threshold
guard variable for Json::Value::nullSingleton()::nullStatic
guard variable for LoaderLogger::GetInstance()::instance
guard variable for RuntimeInterface::GetInstance()::instance
has invalid API Version.  Skipping layer.
implementation_version
in Json::Value::asCString(): requires stringValue
in Json::Value::clear(): requires complex value
in Json::Value::demand(begin, end): requires objectValue or nullValue
in Json::Value::duplicateAndPrefixStringValue(): Failed to allocate string value buffer
in Json::Value::duplicateAndPrefixStringValue(): length too big for prefixing
in Json::Value::duplicateStringValue(): Failed to allocate string value buffer
in Json::Value::find(begin, end): requires objectValue or nullValue
in Json::Value::getMemberNames(), value must be objectValue
in Json::Value::operator[](ArrayIndex): requires arrayValue
in Json::Value::operator[](ArrayIndex)const: requires arrayValue
in Json::Value::operator[](int index) const: index cannot be negative
in Json::Value::operator[](int index): index cannot be negative
in Json::Value::removeMember(): requires objectValue
in Json::Value::resize(): requires arrayValue
in Json::Value::resolveReference(): requires objectValue
in Json::Value::resolveReference(key, end): requires objectValue
in Json::Value::setComment(): Comments must start with /
in XDG_CONFIG_HOME:
in an entry of XDG_CONFIG_DIRS:
in compiled-in SYSCONFDIR:
indentation
init_dwarf_reg_size_table
instance_extensions
is disabled
is missing "disable_environment"
is missing required fields.  Verify all proper fields exist.
is not a valid manifest file.
is not supported
isValidJson indicates
keylength >= 2^30
layer
layers enabled and runtime interface - created instance =
ld-linux-x86-64.so.2
libc.so.6
libdl.so.2
libm.so.6
library
library_path
libstdc++.so.6
linear_search_fdes
linear_search_fdes.cold
localeconv
malloc
marker.4
memcmp
memcpy
memmove
memset
nfinity
object_mutex
once_regsizes.0
opendir
openxr/
operator delete(void*, unsigned long)
operator delete[](void*)
operator new(unsigned long)
operator new[](unsigned long)
precision
precisionType
precisionType must be 'significant' or 'decimal'
pthread_mutex_lock
pthread_mutex_unlock
pthread_once
pthread_rwlock_rdlock
pthread_rwlock_unlock
pthread_rwlock_wrlock
read_encoded_value
read_encoded_value.cold
read_encoded_value_with_base
read_encoded_value_with_base.cold
readdir
realpath
rejectDupKeys
requires a valid instance
runtime
search_object
search_object.cold
significant
snprintf
stackLimit
std::_Deque_base<Json::Reader::ErrorInfo, std::allocator<Json::Reader::ErrorInfo> >::_M_initialize_map(unsigned long)
std::_Deque_base<Json::Value*, std::allocator<Json::Value*> >::_M_initialize_map(unsigned long)
std::_Deque_base<Json::Value*, std::allocator<Json::Value*> >::~_Deque_base()
std::_Hash_bytes(void const*, unsigned long, unsigned long)
std::_Hashtable<XrInstance_T*, std::pair<XrInstance_T* const, std::unique_ptr<XrGeneratedDispatchTable, std::default_delete<XrGeneratedDispatchTable> > >, std::allocator<std::pair<XrInstance_T* const, std::unique_ptr<XrGeneratedDispatchTable, std::default_delete<XrGeneratedDispatchTable> > > >, std::__detail::_Select1st, std::equal_to<XrInstance_T*>, std::hash<XrInstance_T*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear()
std::_Hashtable<XrInstance_T*, std::pair<XrInstance_T* const, std::unique_ptr<XrGeneratedDispatchTable, std::default_delete<XrGeneratedDispatchTable> > >, std::allocator<std::pair<XrInstance_T* const, std::unique_ptr<XrGeneratedDispatchTable, std::default_delete<XrGeneratedDispatchTable> > > >, std::__detail::_Select1st, std::equal_to<XrInstance_T*>, std::hash<XrInstance_T*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::erase(std::__detail::_Node_const_iterator<std::pair<XrInstance_T* const, std::unique_ptr<XrGeneratedDispatchTable, std::default_delete<XrGeneratedDispatchTable> > >, false, false>)
std::_Hashtable<XrInstance_T*, std::pair<XrInstance_T* const, std::unique_ptr<XrGeneratedDispatchTable, std::default_delete<XrGeneratedDispatchTable> > >, std::allocator<std::pair<XrInstance_T* const, std::unique_ptr<XrGeneratedDispatchTable, std::default_delete<XrGeneratedDispatchTable> > > >, std::__detail::_Select1st, std::equal_to<XrInstance_T*>, std::hash<XrInstance_T*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(XrInstance_T* const&)
std::_Hashtable<XrSession_T*, std::pair<XrSession_T* const, std::unique_ptr<std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > >, std::default_delete<std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > > > > >, std::allocator<std::pair<XrSession_T* const, std::unique_ptr<std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > >, std::default_delete<std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > > > > > >, std::__detail::_Select1st, std::equal_to<XrSession_T*>, std::hash<XrSession_T*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<std::pair<XrSession_T* const, std::unique_ptr<std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > >, std::default_delete<std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > > > > >, false>*)
std::_Hashtable<XrSession_T*, std::pair<XrSession_T* const, std::unique_ptr<std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > >, std::default_delete<std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > > > > >, std::allocator<std::pair<XrSession_T* const, std::unique_ptr<std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > >, std::default_delete<std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > > > > > >, std::__detail::_Select1st, std::equal_to<XrSession_T*>, std::hash<XrSession_T*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::~_Scoped_node()
std::_Hashtable<XrSession_T*, std::pair<XrSession_T* const, std::unique_ptr<std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > >, std::default_delete<std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > > > > >, std::allocator<std::pair<XrSession_T* const, std::unique_ptr<std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > >, std::default_delete<std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > > > > > >, std::__detail::_Select1st, std::equal_to<XrSession_T*>, std::hash<XrSession_T*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear()
std::_Hashtable<std::string, std::pair<std::string const, std::string>, std::allocator<std::pair<std::string const, std::string> >, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::string const&, unsigned long) const
std::_Hashtable<std::string, std::pair<std::string const, std::string>, std::allocator<std::pair<std::string const, std::string> >, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::clear()
std::_Hashtable<std::string, std::string, std::allocator<std::string>, std::__detail::_Identity, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&)
std::_Hashtable<std::string, std::string, std::allocator<std::string>, std::__detail::_Identity, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear()
std::_Hashtable<std::string, std::string, std::allocator<std::string>, std::__detail::_Identity, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::count(std::string const&) const
std::_Hashtable<unsigned long, unsigned long, std::allocator<unsigned long>, std::__detail::_Identity, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable(std::_Hashtable<unsigned long, unsigned long, std::allocator<unsigned long>, std::__detail::_Identity, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >&&, std::allocator<std::__detail::_Hash_node<unsigned long, false> >&&, std::integral_constant<bool, true>)
std::_Hashtable<unsigned long, unsigned long, std::allocator<unsigned long>, std::__detail::_Identity, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets()
std::_Hashtable<unsigned long, unsigned long, std::allocator<unsigned long>, std::__detail::_Identity, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&)
std::_Hashtable<unsigned long, unsigned long, std::allocator<unsigned long>, std::__detail::_Identity, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::clear()
std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::_M_erase(std::_Rb_tree_node<std::pair<Json::Value::CZString const, Json::Value> >*) [clone .isra.0]
std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<Json::Value::CZString const, Json::Value> >, Json::Value::CZString const&)
std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::_M_get_insert_unique_pos(Json::Value::CZString const&)
std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::equal_range(Json::Value::CZString const&)
std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::erase(Json::Value::CZString const&) [clone .isra.0]
std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::find(Json::Value::CZString const&)
std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_erase(std::_Rb_tree_node<std::string>*) [clone .isra.0]
std::_Rb_tree_decrement(std::_Rb_tree_node_base const*)
std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
std::_Rb_tree_increment(std::_Rb_tree_node_base const*)
std::_Rb_tree_increment(std::_Rb_tree_node_base*)
std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
std::_Rb_tree_iterator<std::pair<Json::Value::CZString const, Json::Value> > std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::_M_emplace_hint_unique<std::pair<Json::Value::CZString const, Json::Value>&>(std::_Rb_tree_const_iterator<std::pair<Json::Value::CZString const, Json::Value> >, std::pair<Json::Value::CZString const, Json::Value>&)
std::_Rb_tree_node<std::pair<Json::Value::CZString const, Json::Value> >* std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::_M_copy<std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<Json::Value::CZString const, Json::Value> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::_Alloc_node&) [clone .isra.0]
std::_Rb_tree_node<std::pair<Json::Value::CZString const, Json::Value> >* std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::_M_copy<std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<Json::Value::CZString const, Json::Value> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::_Alloc_node&) [clone .isra.0] [clone .cold]
std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
std::_Vector_base<XrDebugUtilsLabelEXT, std::allocator<XrDebugUtilsLabelEXT> >::~_Vector_base()
std::_Vector_base<XrExtensionProperties, std::allocator<XrExtensionProperties> >::~_Vector_base()
std::_Vector_base<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> >::~_Vector_base()
std::_Vector_base<char const*, std::allocator<char const*> >::~_Vector_base()
std::__basic_file<char>::is_open() const
std::__basic_file<char>::~__basic_file()
std::__detail::_Map_base<XrInstance_T*, std::pair<XrInstance_T* const, std::unique_ptr<XrGeneratedDispatchTable, std::default_delete<XrGeneratedDispatchTable> > >, std::allocator<std::pair<XrInstance_T* const, std::unique_ptr<XrGeneratedDispatchTable, std::default_delete<XrGeneratedDispatchTable> > > >, std::__detail::_Select1st, std::equal_to<XrInstance_T*>, std::hash<XrInstance_T*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](XrInstance_T* const&)
std::__detail::_Map_base<XrInstance_T*, std::pair<XrInstance_T* const, std::unordered_set<unsigned long, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<unsigned long> > >, std::allocator<std::pair<XrInstance_T* const, std::unordered_set<unsigned long, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<unsigned long> > > >, std::__detail::_Select1st, std::equal_to<XrInstance_T*>, std::hash<XrInstance_T*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](XrInstance_T* const&)
std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned long, unsigned long, unsigned long) const
std::__detail::__to_chars_10_impl<unsigned int>(char*, unsigned int, unsigned int)::__digits
std::__ioinit
std::__throw_bad_alloc()
std::__throw_bad_cast()
std::__throw_length_error(char const*)
std::__throw_logic_error(char const*)
std::__throw_out_of_range_fmt(char const*, ...)
std::__throw_system_error(int)
std::basic_filebuf<char, std::char_traits<char> >::basic_filebuf()
std::basic_filebuf<char, std::char_traits<char> >::close()
std::basic_filebuf<char, std::char_traits<char> >::open(char const*, std::_Ios_Openmode)
std::basic_filebuf<char, std::char_traits<char> >::~basic_filebuf()
std::basic_ifstream<char, std::char_traits<char> >::~basic_ifstream()
std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)
std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*)
std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char)
std::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_istringstream()
std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)
std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)
std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_ostringstream()
std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, unsigned long, std::allocator<char> const&)
std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::allocator<char> const&)
std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&)
std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long)
std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(unsigned long, char, std::allocator<char> const&)
std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::_M_sync(char*, unsigned long, unsigned long)
std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const
std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::~basic_stringbuf()
std::cerr
std::cout
std::ctype<char>::_M_widen_init() const
std::ctype<char>::do_widen(char) const
std::default_delete<XrSdkSessionLabel>::operator()(XrSdkSessionLabel*) const [clone .part.0]
std::deque<Json::OurReader::ErrorInfo, std::allocator<Json::OurReader::ErrorInfo> >::_M_default_append(unsigned long)
std::deque<Json::OurReader::ErrorInfo, std::allocator<Json::OurReader::ErrorInfo> >::_M_destroy_data_aux(std::_Deque_iterator<Json::OurReader::ErrorInfo, Json::OurReader::ErrorInfo&, Json::OurReader::ErrorInfo*>, std::_Deque_iterator<Json::OurReader::ErrorInfo, Json::OurReader::ErrorInfo&, Json::OurReader::ErrorInfo*>) [clone .isra.0]
std::deque<Json::OurReader::ErrorInfo, std::allocator<Json::OurReader::ErrorInfo> >::_M_new_elements_at_back(unsigned long)
std::deque<Json::OurReader::ErrorInfo, std::allocator<Json::OurReader::ErrorInfo> >::_M_reallocate_map(unsigned long, bool)
std::deque<Json::Reader::ErrorInfo, std::allocator<Json::Reader::ErrorInfo> >::_M_default_append(unsigned long)
std::deque<Json::Reader::ErrorInfo, std::allocator<Json::Reader::ErrorInfo> >::_M_erase_at_end(std::_Deque_iterator<Json::Reader::ErrorInfo, Json::Reader::ErrorInfo&, Json::Reader::ErrorInfo*>)
std::deque<Json::Reader::ErrorInfo, std::allocator<Json::Reader::ErrorInfo> >::_M_new_elements_at_back(unsigned long)
std::deque<Json::Reader::ErrorInfo, std::allocator<Json::Reader::ErrorInfo> >::_M_reallocate_map(unsigned long, bool)
std::ios_base::Init::Init()
std::ios_base::Init::~Init()
std::ios_base::ios_base()
std::ios_base::~ios_base()
std::istream& std::istream::_M_extract<double>(double&)
std::locale::locale()
std::locale::~locale()
std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)
std::ostream::flush()
std::ostream::operator<<(int)
std::ostream::operator<<(std::basic_streambuf<char, std::char_traits<char> >*)
std::ostream::put(char)
std::pair<std::__detail::_Node_iterator<std::string, true, true>, bool> std::_Hashtable<std::string, std::string, std::allocator<std::string>, std::__detail::_Identity, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::string const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::string, true> > > >(std::string const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::string, true> > > const&, std::integral_constant<bool, true>, unsigned long) [clone .isra.0]
std::pair<std::__detail::_Node_iterator<std::string, true, true>, bool> std::_Hashtable<std::string, std::string, std::allocator<std::string>, std::__detail::_Identity, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::string const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::string, true> > > >(std::string const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::string, true> > > const&, std::integral_constant<bool, true>, unsigned long) [clone .isra.0] [clone .cold]
std::set<std::string, std::less<std::string>, std::allocator<std::string> >::insert(std::string&&)
std::string& std::string::assign<char*>(char*, char*) [clone .isra.0]
std::string::_M_leak_hard()
std::string::_M_mutate(unsigned long, unsigned long, unsigned long)
std::string::_Rep::_M_destroy(std::allocator<char> const&)
std::string::_Rep::_M_dispose(std::allocator<char> const&) [clone .part.0]
std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&)
std::string::_Rep::_S_empty_rep_storage
std::string::append(char const*, unsigned long)
std::string::append(std::string const&)
std::string::append(unsigned long, char)
std::string::assign(char const*, unsigned long)
std::string::assign(std::string const&)
std::string::compare(char const*) const
std::string::erase(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>)
std::string::find(char, unsigned long) const
std::string::insert(unsigned long, char const*, unsigned long)
std::string::replace(unsigned long, unsigned long, char const*, unsigned long)
std::string::reserve(unsigned long)
std::string::resize(unsigned long, char)
std::string::rfind(char, unsigned long) const
std::string::swap(std::string&)
std::terminate()
std::unique_lock<std::mutex>::unlock()
std::unique_lock<std::shared_timed_mutex>::unlock()
std::unique_ptr<Json::StreamWriter, std::default_delete<Json::StreamWriter> >::~unique_ptr()
std::unique_ptr<LoaderInstance, std::default_delete<LoaderInstance> >::~unique_ptr()
std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> >::~unique_ptr()
std::unique_ptr<RuntimeInterface, std::default_delete<RuntimeInterface> >::~unique_ptr()
std::unique_ptr<std::array<std::string, 3ul>, std::default_delete<std::array<std::string, 3ul> > > Json::cloneUnique<std::array<std::string, 3ul> >(std::unique_ptr<std::array<std::string, 3ul>, std::default_delete<std::array<std::string, 3ul> > > const&)
std::unique_ptr<std::array<std::string, 3ul>, std::default_delete<std::array<std::string, 3ul> > > Json::cloneUnique<std::array<std::string, 3ul> >(std::unique_ptr<std::array<std::string, 3ul>, std::default_delete<std::array<std::string, 3ul> > > const&) [clone .cold]
std::unique_ptr<std::array<std::string, 3ul>, std::default_delete<std::array<std::string, 3ul> > >::~unique_ptr()
std::vector<XrExtensionProperties, std::allocator<XrExtensionProperties> >::_M_default_append(unsigned long)
std::vector<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> >::~vector()
std::vector<std::string, std::allocator<std::string> >::operator=(std::vector<std::string, std::allocator<std::string> > const&) [clone .isra.0]
std::vector<std::string, std::allocator<std::string> >::operator=(std::vector<std::string, std::allocator<std::string> > const&) [clone .isra.0] [clone .cold]
std::vector<std::string, std::allocator<std::string> >::reserve(unsigned long)
std::vector<std::string, std::allocator<std::string> >::~vector()
std::vector<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> >, std::allocator<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> > > >::~vector()
std::vector<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> >, std::allocator<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> > > >::_M_erase(__gnu_cxx::__normal_iterator<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> >*, std::vector<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> >, std::allocator<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> > > > >)
std::vector<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> >, std::allocator<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> > > >::~vector()
std::vector<std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> >, std::allocator<std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> > > >::_M_erase(__gnu_cxx::__normal_iterator<std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> >*, std::vector<std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> >, std::allocator<std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> > > > >, __gnu_cxx::__normal_iterator<std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> >*, std::vector<std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> >, std::allocator<std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> > > > >)
std::vector<std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> >, std::allocator<std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> > > >::~vector()
strchr
strcmp
strictRoot
strlen
strncpy
strtol
subs.2
terminator.3
to_hex(unsigned char const*, unsigned long)::hex
typeinfo for (anonymous namespace)::DebugUtilsLogRecorder
typeinfo for (anonymous namespace)::OstreamLoaderLogRecorder
typeinfo for ApiLayerInterface
typeinfo for Json::BuiltStyledStreamWriter
typeinfo for Json::CharReader
typeinfo for Json::CharReader::Factory
typeinfo for Json::CharReaderBuilder
typeinfo for Json::FastWriter
typeinfo for Json::OurCharReader
typeinfo for Json::StreamWriter
typeinfo for Json::StreamWriter::Factory
typeinfo for Json::StreamWriterBuilder
typeinfo for Json::StyledWriter
typeinfo for Json::Writer
typeinfo for LoaderInstance
typeinfo for LoaderLogRecorder
typeinfo for RuntimeInterface
typeinfo for std::bad_alloc
typeinfo for std::exception
typeinfo name for (anonymous namespace)::DebugUtilsLogRecorder
typeinfo name for (anonymous namespace)::OstreamLoaderLogRecorder
typeinfo name for ApiLayerInterface
typeinfo name for Json::BuiltStyledStreamWriter
typeinfo name for Json::CharReader
typeinfo name for Json::CharReader::Factory
typeinfo name for Json::CharReaderBuilder
typeinfo name for Json::FastWriter
typeinfo name for Json::OurCharReader
typeinfo name for Json::StreamWriter
typeinfo name for Json::StreamWriter::Factory
typeinfo name for Json::StreamWriterBuilder
typeinfo name for Json::StyledWriter
typeinfo name for Json::Writer
typeinfo name for LoaderInstance
typeinfo name for LoaderLogRecorder
typeinfo name for RuntimeInterface
unseen_objects
useSpecialFloats
using interface version
uw_frame_state_for
uw_frame_state_for.cold
uw_init_context_1
uw_init_context_1.cold
uw_install_context_1
uw_install_context_1.cold
uw_update_context_1
uw_update_context_1.cold
vector::_M_default_append
vector::_M_realloc_insert
vector::reserve
verbose
void std::_Hashtable<unsigned long, unsigned long, std::allocator<unsigned long>, std::__detail::_Identity, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_assign<std::_Hashtable<unsigned long, unsigned long, std::allocator<unsigned long>, std::__detail::_Identity, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long, false> > > >(std::_Hashtable<unsigned long, unsigned long, std::allocator<unsigned long>, std::__detail::_Identity, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long, false> > > const&) [clone .isra.0]
void std::_Hashtable<unsigned long, unsigned long, std::allocator<unsigned long>, std::__detail::_Identity, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_assign<std::_Hashtable<unsigned long, unsigned long, std::allocator<unsigned long>, std::__detail::_Identity, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long, false> > > >(std::_Hashtable<unsigned long, unsigned long, std::allocator<unsigned long>, std::__detail::_Identity, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long, false> > > const&) [clone .isra.0] [clone .cold]
void std::__detail::__to_chars_10_impl<unsigned int>(char*, unsigned int, unsigned int)
void std::deque<Json::OurReader::ErrorInfo, std::allocator<Json::OurReader::ErrorInfo> >::_M_push_back_aux<Json::OurReader::ErrorInfo const&>(Json::OurReader::ErrorInfo const&)
void std::deque<Json::Reader::ErrorInfo, std::allocator<Json::Reader::ErrorInfo> >::_M_push_back_aux<Json::Reader::ErrorInfo const&>(Json::Reader::ErrorInfo const&)
void std::vector<ExtensionListing, std::allocator<ExtensionListing> >::_M_realloc_insert<ExtensionListing const&>(__gnu_cxx::__normal_iterator<ExtensionListing*, std::vector<ExtensionListing, std::allocator<ExtensionListing> > >, ExtensionListing const&)
void std::vector<Json::OurReader::StructuredError, std::allocator<Json::OurReader::StructuredError> >::_M_realloc_insert<Json::OurReader::StructuredError const&>(__gnu_cxx::__normal_iterator<Json::OurReader::StructuredError*, std::vector<Json::OurReader::StructuredError, std::allocator<Json::OurReader::StructuredError> > >, Json::OurReader::StructuredError const&)
void std::vector<Json::PathArgument const*, std::allocator<Json::PathArgument const*> >::_M_realloc_insert<Json::PathArgument const*>(__gnu_cxx::__normal_iterator<Json::PathArgument const**, std::vector<Json::PathArgument const*, std::allocator<Json::PathArgument const*> > >, Json::PathArgument const*&&)
void std::vector<Json::PathArgument, std::allocator<Json::PathArgument> >::_M_realloc_insert<Json::PathArgument const&>(__gnu_cxx::__normal_iterator<Json::PathArgument*, std::vector<Json::PathArgument, std::allocator<Json::PathArgument> > >, Json::PathArgument const&)
void std::vector<Json::PathArgument, std::allocator<Json::PathArgument> >::_M_realloc_insert<Json::PathArgument>(__gnu_cxx::__normal_iterator<Json::PathArgument*, std::vector<Json::PathArgument, std::allocator<Json::PathArgument> > >, Json::PathArgument&&)
void std::vector<Json::Reader::StructuredError, std::allocator<Json::Reader::StructuredError> >::_M_realloc_insert<Json::Reader::StructuredError const&>(__gnu_cxx::__normal_iterator<Json::Reader::StructuredError*, std::vector<Json::Reader::StructuredError, std::allocator<Json::Reader::StructuredError> > >, Json::Reader::StructuredError const&)
void std::vector<XrDebugUtilsLabelEXT, std::allocator<XrDebugUtilsLabelEXT> >::_M_realloc_insert<XrDebugUtilsLabelEXT>(__gnu_cxx::__normal_iterator<XrDebugUtilsLabelEXT*, std::vector<XrDebugUtilsLabelEXT, std::allocator<XrDebugUtilsLabelEXT> > >, XrDebugUtilsLabelEXT&&)
void std::vector<XrDebugUtilsObjectNameInfoEXT, std::allocator<XrDebugUtilsObjectNameInfoEXT> >::_M_realloc_insert<XrDebugUtilsObjectNameInfoEXT>(__gnu_cxx::__normal_iterator<XrDebugUtilsObjectNameInfoEXT*, std::vector<XrDebugUtilsObjectNameInfoEXT, std::allocator<XrDebugUtilsObjectNameInfoEXT> > >, XrDebugUtilsObjectNameInfoEXT&&)
void std::vector<XrExtensionProperties, std::allocator<XrExtensionProperties> >::_M_realloc_insert<XrExtensionProperties const&>(__gnu_cxx::__normal_iterator<XrExtensionProperties*, std::vector<XrExtensionProperties, std::allocator<XrExtensionProperties> > >, XrExtensionProperties const&)
void std::vector<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> >::_M_realloc_insert<XrSdkLogObjectInfo const&>(__gnu_cxx::__normal_iterator<XrSdkLogObjectInfo*, std::vector<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> > >, XrSdkLogObjectInfo const&)
void std::vector<char const*, std::allocator<char const*> >::_M_realloc_insert<char const (&) [128]>(__gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >, char const (&) [128])
void std::vector<char const*, std::allocator<char const*> >::_M_realloc_insert<char const* const&>(__gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >, char const* const&)
void std::vector<std::string, std::allocator<std::string> >::_M_realloc_insert<char (&) [128]>(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, char (&) [128])
void std::vector<std::string, std::allocator<std::string> >::_M_realloc_insert<char (&) [256]>(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, char (&) [256])
void std::vector<std::string, std::allocator<std::string> >::_M_realloc_insert<std::string const&>(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&)
void std::vector<std::string, std::allocator<std::string> >::_M_realloc_insert<std::string>(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string&&)
void std::vector<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> >, std::allocator<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> > > >::_M_realloc_insert<ApiLayerInterface*>(__gnu_cxx::__normal_iterator<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> >*, std::vector<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> >, std::allocator<std::unique_ptr<ApiLayerInterface, std::default_delete<ApiLayerInterface> > > > >, ApiLayerInterface*&&)
void std::vector<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> >, std::allocator<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> > > >::_M_realloc_insert<ApiLayerManifestFile*>(__gnu_cxx::__normal_iterator<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> >*, std::vector<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> >, std::allocator<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> > > > >, ApiLayerManifestFile*&&)
void std::vector<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> >, std::allocator<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> > > >::_M_realloc_insert<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> >*, std::vector<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> >, std::allocator<std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> > > > >, std::unique_ptr<ApiLayerManifestFile, std::default_delete<ApiLayerManifestFile> >&&)
void std::vector<std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> >, std::allocator<std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> > > >::_M_realloc_insert<std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> >*, std::vector<std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> >, std::allocator<std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> > > > >, std::unique_ptr<LoaderLogRecorder, std::default_delete<LoaderLogRecorder> >&&)
void std::vector<std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> >, std::allocator<std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> > > >::_M_realloc_insert<RuntimeManifestFile*>(__gnu_cxx::__normal_iterator<std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> >*, std::vector<std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> >, std::allocator<std::unique_ptr<RuntimeManifestFile, std::default_delete<RuntimeManifestFile> > > > >, RuntimeManifestFile*&&)
void std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > >::_M_realloc_insert<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >*, std::vector<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >, std::allocator<std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> > > > >, std::unique_ptr<XrSdkSessionLabel, std::default_delete<XrSdkSessionLabel> >&&)
void vector_remove_if_and_erase<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo>, ObjectInfoCollection::RemoveObject(unsigned long, XrObjectType)::{lambda(XrSdkLogObjectInfo const&)#1}>(std::vector<XrSdkLogObjectInfo, std::allocator<XrSdkLogObjectInfo> >&, ObjectInfoCollection::RemoveObject(unsigned long, XrObjectType)::{lambda(XrSdkLogObjectInfo const&)#1}&&)
vtable for (anonymous namespace)::DebugUtilsLogRecorder
vtable for (anonymous namespace)::OstreamLoaderLogRecorder
vtable for ApiLayerInterface
vtable for Json::BuiltStyledStreamWriter
vtable for Json::CharReaderBuilder
vtable for Json::FastWriter
vtable for Json::OurCharReader
vtable for Json::StreamWriter
vtable for Json::StreamWriter::Factory
vtable for Json::StreamWriterBuilder
vtable for Json::StyledWriter
vtable for Json::Writer
vtable for LoaderInstance
vtable for LoaderLogRecorder
vtable for RuntimeInterface
vtable for __cxxabiv1::__class_type_info
vtable for __cxxabiv1::__si_class_type_info
vtable for std::basic_filebuf<char, std::char_traits<char> >
vtable for std::basic_ifstream<char, std::char_traits<char> >
vtable for std::basic_ios<char, std::char_traits<char> >
vtable for std::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >
vtable for std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >
vtable for std::basic_streambuf<char, std::char_traits<char> >
vtable for std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >
was not found
xrAcquireSwapchainImage
xrAcquireSwapchainImage.cold
xrApplyHapticFeedback
xrApplyHapticFeedback.cold
xrAttachSessionActionSets
xrAttachSessionActionSets.cold
xrBeginFrame
xrBeginFrame.cold
xrBeginSession
xrBeginSession.cold
xrCreateAction
xrCreateAction.cold
xrCreateActionSet
xrCreateActionSet.cold
xrCreateActionSpace
xrCreateActionSpace.cold
xrCreateApiLayerInstance
xrCreateDebugUtilsMessengerEXT
xrCreateHandMeshSpaceMSFT
xrCreateHandTrackerEXT
xrCreateInstance
xrCreateInstance called with invalid API version
xrCreateReferenceSpace
xrCreateReferenceSpace.cold
xrCreateSession
xrCreateSession.cold
xrCreateSpatialAnchorMSFT
xrCreateSpatialAnchorSpaceMSFT
xrCreateSpatialGraphNodeSpaceMSFT
xrCreateSwapchain
xrCreateSwapchain.cold
xrCreateVulkanDeviceKHR
xrCreateVulkanInstanceKHR
xrDestroyAction
xrDestroyAction.cold
xrDestroyActionSet
xrDestroyActionSet.cold
xrDestroyDebugUtilsMessengerEXT
xrDestroyHandTrackerEXT
xrDestroyInstance
xrDestroySession
xrDestroySession.cold
xrDestroySpace
xrDestroySpace.cold
xrDestroySpatialAnchorMSFT
xrDestroySwapchain
xrDestroySwapchain.cold
xrEndFrame
xrEndFrame.cold
xrEndSession
xrEndSession.cold
xrEnumerateApiLayerProperties
xrEnumerateBoundSourcesForAction
xrEnumerateBoundSourcesForAction.cold
xrEnumerateColorSpacesFB
xrEnumerateDisplayRefreshRatesFB
xrEnumerateEnvironmentBlendModes
xrEnumerateEnvironmentBlendModes.cold
xrEnumerateInstanceExtensionProperties
xrEnumerateReferenceSpaces
xrEnumerateReferenceSpaces.cold
xrEnumerateSwapchainFormats
xrEnumerateSwapchainFormats.cold
xrEnumerateSwapchainImages
xrEnumerateSwapchainImages.cold
xrEnumerateViewConfigurationViews
xrEnumerateViewConfigurationViews.cold
xrEnumerateViewConfigurations
xrEnumerateViewConfigurations.cold
xrGetActionStateBoolean
xrGetActionStateBoolean.cold
xrGetActionStateFloat
xrGetActionStateFloat.cold
xrGetActionStatePose
xrGetActionStatePose.cold
xrGetActionStateVector2f
xrGetActionStateVector2f.cold
xrGetControllerModelKeyMSFT
xrGetControllerModelPropertiesMSFT
xrGetControllerModelStateMSFT
xrGetCurrentInteractionProfile
xrGetCurrentInteractionProfile.cold
xrGetDisplayRefreshRateFB
xrGetInputSourceLocalizedName
xrGetInputSourceLocalizedName.cold
xrGetInstanceProcAddr
xrGetInstanceProperties
xrGetInstanceProperties.cold
xrGetReferenceSpaceBoundsRect
xrGetReferenceSpaceBoundsRect.cold
xrGetSystem
xrGetSystem.cold
xrGetSystemProperties
xrGetSystemProperties.cold
xrGetViewConfigurationProperties
xrGetViewConfigurationProperties.cold
xrGetVisibilityMaskKHR
xrGetVulkanDeviceExtensionsKHR
xrGetVulkanGraphicsDevice2KHR
xrGetVulkanGraphicsDeviceKHR
xrGetVulkanGraphicsRequirements2KHR
xrGetVulkanGraphicsRequirementsKHR
xrGetVulkanInstanceExtensionsKHR
xrInitializeLoaderKHR
xrLoadControllerModelMSFT
xrLocateHandJointsEXT
xrLocateSpace
xrLocateSpace.cold
xrLocateViews
xrLocateViews.cold
xrPathToString
xrPathToString.cold
xrPerfSettingsSetPerformanceLevelEXT
xrPollEvent
xrPollEvent.cold
xrReleaseSwapchainImage
xrReleaseSwapchainImage.cold
xrRequestDisplayRefreshRateFB
xrRequestExitSession
xrRequestExitSession.cold
xrResultToString
xrResultToString.cold
xrSessionBeginDebugUtilsLabelRegionEXT
xrSessionEndDebugUtilsLabelRegionEXT
xrSessionInsertDebugUtilsLabelEXT
xrSetColorSpaceFB
xrSetDebugUtilsObjectNameEXT
xrSetEnvironmentDepthEstimationVARJO
xrSetInputDeviceActiveEXT
xrSetInputDeviceLocationEXT
xrSetInputDeviceStateBoolEXT
xrSetInputDeviceStateFloatEXT
xrSetInputDeviceStateVector2fEXT
xrStopHapticFeedback
xrStopHapticFeedback.cold
xrStringToPath
xrStringToPath.cold
xrStructureTypeToString
xrStructureTypeToString.cold
xrSubmitDebugUtilsMessageEXT
xrSuggestInteractionProfileBindings
xrSuggestInteractionProfileBindings.cold
xrSyncActions
xrSyncActions.cold
xrThermalGetTemperatureTrendEXT
xrUpdateHandMeshMSFT
xrWaitFrame
xrWaitFrame.cold
xrWaitSwapchainImage
xrWaitSwapchainImage.cold
