 B __bss_start
 B _end
 B m_app_user_mem_table
 D NXP_VENDOR_ID
 D SEGGER_VENDOR_ID
 D _edata
 T AdapterInternal::AdapterInternal(SerializationTransport*)
 T AdapterInternal::close()
 T AdapterInternal::eventHandler(ble_evt_t*)
 T AdapterInternal::isInternalError(unsigned int)
 T AdapterInternal::logHandler(sd_rpc_log_severity_t, std::string const&)
 T AdapterInternal::logSeverityFilterSet(sd_rpc_log_severity_t)
 T AdapterInternal::open(void (*)(adapter_t*, sd_rpc_app_status_t, char const*), void (*)(adapter_t*, ble_evt_t*), void (*)(adapter_t*, sd_rpc_log_severity_t, char const*))
 T AdapterInternal::statusHandler(sd_rpc_app_status_t, std::string const&)
 T AdapterInternal::~AdapterInternal()
 T EnumSerialPorts()
 T EventCodecContext::EventCodecContext(void*)
 T EventCodecContext::~EventCodecContext()
 T H5Transport::H5Transport(Transport*, unsigned int)
 T H5Transport::asHex(std::vector<unsigned char, std::allocator<unsigned char> > const&)
 T H5Transport::checkPattern(std::vector<unsigned char, std::allocator<unsigned char> > const&, unsigned char, std::vector<unsigned char, std::allocator<unsigned char> > const&)
 T H5Transport::close()
 T H5Transport::dataHandler(unsigned char const*, unsigned long)
 T H5Transport::getPktPattern(control_pkt_type)
 T H5Transport::h5PktToString(bool, std::vector<unsigned char, std::allocator<unsigned char> > const&) const
 T H5Transport::hciPacketLinkControlToString(std::vector<unsigned char, std::allocator<unsigned char> > const&)
 T H5Transport::incrementAckNum()
 T H5Transport::incrementSeqNum()
 T H5Transport::isResetPacket(std::vector<unsigned char, std::allocator<unsigned char> > const&, unsigned char)
 T H5Transport::isSyncConfigPacket(std::vector<unsigned char, std::allocator<unsigned char> > const&, unsigned char)
 T H5Transport::isSyncConfigResponsePacket(std::vector<unsigned char, std::allocator<unsigned char> > const&, unsigned char)
 T H5Transport::isSyncPacket(std::vector<unsigned char, std::allocator<unsigned char> > const&, unsigned char)
 T H5Transport::isSyncResponsePacket(std::vector<unsigned char, std::allocator<unsigned char> > const&, unsigned char)
 T H5Transport::logPacket(bool, std::vector<unsigned char, std::allocator<unsigned char> > const&)
 T H5Transport::logStateTransition(h5_state_t, h5_state_t) const
 T H5Transport::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (unsigned char const*, unsigned long)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)
 T H5Transport::pktTypeToString(h5_pkt_type_t)
 T H5Transport::processPacket(std::vector<unsigned char, std::allocator<unsigned char> > const&)
 T H5Transport::send(std::vector<unsigned char, std::allocator<unsigned char> > const&)
 T H5Transport::sendControlPacket(control_pkt_type)
 T H5Transport::setupStateMachine()
 T H5Transport::startStateMachine()
 T H5Transport::state() const
 T H5Transport::stateActionActive()
 T H5Transport::stateActionClosed()
 T H5Transport::stateActionFailed()
 T H5Transport::stateActionInitialized()
 T H5Transport::stateActionNoResponse()
 T H5Transport::stateActionReset()
 T H5Transport::stateActionStart()
 T H5Transport::stateActionUninitialized()
 T H5Transport::stateMachineWorker()
 T H5Transport::stateToString(h5_state_t)
 T H5Transport::statusHandler(sd_rpc_app_status_t, std::string const&)
 T H5Transport::stopStateMachine()
 T H5Transport::waitForState(h5_state_t, std::chrono::duration<long, std::ratio<1l, 1000l> >)
 T H5Transport::~H5Transport()
 T RequestReplyCodecContext::RequestReplyCodecContext(void*)
 T RequestReplyCodecContext::~RequestReplyCodecContext()
 T SerializationTransport::SerializationTransport(Transport*, unsigned int)
 T SerializationTransport::close()
 T SerializationTransport::eventHandlingRunner()
 T SerializationTransport::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (ble_evt_t*)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)
 T SerializationTransport::readHandler(unsigned char const*, unsigned long)
 T SerializationTransport::send(std::vector<unsigned char, std::allocator<unsigned char> > const&, std::shared_ptr<std::vector<unsigned char, std::allocator<unsigned char> > >, serialization_pkt_type_t)
 T Transport::Transport()
 T Transport::log(sd_rpc_log_severity_t, std::string const&) const
 T Transport::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (unsigned char const*, unsigned long)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)
 T Transport::status(sd_rpc_app_status_t, std::string const&) const
 T Transport::~Transport()
 T UartBoost::UartBoost(UartCommunicationParameters const&)
 T UartBoost::asyncRead()
 T UartBoost::asyncWrite()
 T UartBoost::close()
 T UartBoost::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (unsigned char const*, unsigned long)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)
 T UartBoost::readHandler(std::error_code const&, unsigned long)
 T UartBoost::send(std::vector<unsigned char, std::allocator<unsigned char> > const&)
 T UartBoost::startRead()
 T UartBoost::writeHandler(std::error_code const&, unsigned long)
 T UartBoost::~UartBoost()
 T UartSettings::UartSettings()
 T UartSettings::UartSettings(UartCommunicationParameters const&)
 T UartSettings::getBaudRate() const
 T UartSettings::getDataBits() const
 T UartSettings::getFlowControl() const
 T UartSettings::getParity() const
 T UartSettings::getPortName()
 T UartSettings::getStopBits() const
 T UartSettings::setBaudRate(unsigned int)
 T UartSettings::setDataBits(UartDataBits)
 T UartSettings::setFlowControl(UartFlowControl)
 T UartSettings::setParity(UartParity)
 T UartSettings::setPortName(std::string)
 T UartSettings::setStopBits(UartStopBits)
 T UartSettings::~UartSettings()
 T UartSettingsBoost::UartSettingsBoost()
 T UartSettingsBoost::UartSettingsBoost(UartCommunicationParameters const&)
 T UartSettingsBoost::getBoostBaudRate() const
 T UartSettingsBoost::getBoostCharacterSize() const
 T UartSettingsBoost::getBoostFlowControl() const
 T UartSettingsBoost::getBoostParity() const
 T UartSettingsBoost::getBoostStopBits() const
 T _fini
 T _init
 T add_crc16(std::vector<unsigned char, std::allocator<unsigned char> >&)
 T add_h5_header(std::vector<unsigned char, std::allocator<unsigned char> >&, unsigned char, unsigned char, bool, bool, unsigned char, unsigned short)
 T app_ble_gap_adv_buf_register
 T app_ble_gap_adv_buf_unregister
 T app_ble_gap_adv_set_register
 T app_ble_gap_adv_set_unregister
 T app_ble_gap_check_current_adapter_set
 T app_ble_gap_scan_data_fetch_clear
 T app_ble_gap_scan_data_set
 T app_ble_gap_scan_data_set(ble_data_t const*)
 T app_ble_gap_scan_data_unset
 T app_ble_gap_sec_keys_find
 T app_ble_gap_sec_keys_get
 T app_ble_gap_sec_keys_storage_create
 T app_ble_gap_sec_keys_storage_destroy
 T app_ble_gap_sec_keys_update
 T app_ble_gap_set_current_adapter_id
 T app_ble_gap_state_create
 T app_ble_gap_state_delete
 T app_ble_gap_state_reset
 T app_ble_gap_unset_current_adapter_id
 T app_ble_user_mem_context_create
 T app_ble_user_mem_context_destroy
 T app_ble_user_mem_context_find
 T ble_cfg_set_req_enc
 T ble_cfg_set_rsp_dec
 T ble_common_cfg_vs_uuid_t_dec
 T ble_common_cfg_vs_uuid_t_enc
 T ble_common_opt_conn_evt_ext_t_dec
 T ble_common_opt_conn_evt_ext_t_enc
 T ble_common_opt_pa_lna_t_dec
 T ble_common_opt_pa_lna_t_enc
 T ble_data_t_dec
 T ble_data_t_enc
 T ble_enable_req_enc
 T ble_enable_rsp_dec
 T ble_event_dec
 T ble_evt_user_mem_release_dec
 T ble_evt_user_mem_request_dec
 T ble_gap_addr_get_req_enc
 T ble_gap_addr_get_rsp_dec
 T ble_gap_addr_set_req_enc
 T ble_gap_addr_set_rsp_dec
 T ble_gap_addr_t_dec
 T ble_gap_addr_t_enc
 T ble_gap_adv_data_t_dec
 T ble_gap_adv_data_t_enc
 T ble_gap_adv_params_t_dec
 T ble_gap_adv_params_t_enc
 T ble_gap_adv_properties_t_dec
 T ble_gap_adv_properties_t_enc
 T ble_gap_adv_report_type_t_dec
 T ble_gap_adv_report_type_t_enc
 T ble_gap_adv_set_configure_req_enc
 T ble_gap_adv_set_configure_rsp_dec
 T ble_gap_adv_start_req_enc
 T ble_gap_adv_start_rsp_dec
 T ble_gap_adv_stop_req_enc
 T ble_gap_adv_stop_rsp_dec
 T ble_gap_appearance_get_req_enc
 T ble_gap_appearance_get_rsp_dec
 T ble_gap_appearance_set_req_enc
 T ble_gap_appearance_set_rsp_dec
 T ble_gap_auth_key_reply_req_enc
 T ble_gap_auth_key_reply_rsp_dec
 T ble_gap_authenticate_req_enc
 T ble_gap_authenticate_rsp_dec
 T ble_gap_aux_pointer_t_dec
 T ble_gap_aux_pointer_t_enc
 T ble_gap_cfg_device_name_t_dec
 T ble_gap_cfg_device_name_t_enc
 T ble_gap_cfg_role_count_t_dec
 T ble_gap_cfg_role_count_t_enc
 T ble_gap_conn_cfg_t_dec
 T ble_gap_conn_cfg_t_enc
 T ble_gap_conn_param_update_req_enc
 T ble_gap_conn_param_update_rsp_dec
 T ble_gap_conn_params_t_dec
 T ble_gap_conn_params_t_enc
 T ble_gap_conn_sec_get_req_enc
 T ble_gap_conn_sec_get_rsp_dec
 T ble_gap_conn_sec_mode_t_dec
 T ble_gap_conn_sec_mode_t_enc
 T ble_gap_conn_sec_t_dec
 T ble_gap_conn_sec_t_enc
 T ble_gap_connect_cancel_req_enc
 T ble_gap_connect_cancel_rsp_dec
 T ble_gap_connect_req_enc
 T ble_gap_connect_rsp_dec
 T ble_gap_data_length_limitation_t_dec
 T ble_gap_data_length_limitation_t_enc
 T ble_gap_data_length_params_t_dec
 T ble_gap_data_length_params_t_enc
 T ble_gap_data_length_update_req_enc
 T ble_gap_data_length_update_rsp_dec
 T ble_gap_device_identities_set_req_enc
 T ble_gap_device_identities_set_rsp_dec
 T ble_gap_device_name_get_req_enc
 T ble_gap_device_name_get_rsp_dec
 T ble_gap_device_name_set_req_enc
 T ble_gap_device_name_set_rsp_dec
 T ble_gap_disconnect_req_enc
 T ble_gap_disconnect_rsp_dec
 T ble_gap_enc_info_t_dec
 T ble_gap_enc_info_t_enc
 T ble_gap_enc_key_t_dec
 T ble_gap_enc_key_t_enc
 T ble_gap_encrypt_req_enc
 T ble_gap_encrypt_rsp_dec
 T ble_gap_evt_adv_report_dec
 T ble_gap_evt_adv_report_t_dec
 T ble_gap_evt_adv_report_t_enc
 T ble_gap_evt_adv_set_terminated_dec
 T ble_gap_evt_adv_set_terminated_t_dec
 T ble_gap_evt_adv_set_terminated_t_enc
 T ble_gap_evt_auth_key_request_dec
 T ble_gap_evt_auth_status_dec
 T ble_gap_evt_auth_status_t_dec
 T ble_gap_evt_auth_status_t_enc
 T ble_gap_evt_conn_param_update_dec
 T ble_gap_evt_conn_param_update_request_dec
 T ble_gap_evt_conn_param_update_request_t_dec
 T ble_gap_evt_conn_param_update_request_t_enc
 T ble_gap_evt_conn_param_update_t_dec
 T ble_gap_evt_conn_param_update_t_enc
 T ble_gap_evt_conn_sec_update_dec
 T ble_gap_evt_conn_sec_update_t_dec
 T ble_gap_evt_conn_sec_update_t_enc
 T ble_gap_evt_connected_dec
 T ble_gap_evt_connected_t_dec
 T ble_gap_evt_connected_t_enc
 T ble_gap_evt_data_length_update_dec
 T ble_gap_evt_data_length_update_request_dec
 T ble_gap_evt_disconnected_dec
 T ble_gap_evt_disconnected_t_dec
 T ble_gap_evt_disconnected_t_enc
 T ble_gap_evt_key_pressed_dec
 T ble_gap_evt_lesc_dhkey_request_dec
 T ble_gap_evt_passkey_display_dec
 T ble_gap_evt_phy_update_dec
 T ble_gap_evt_phy_update_request_dec
 T ble_gap_evt_qos_channel_survey_report_dec
 T ble_gap_evt_rssi_changed_dec
 T ble_gap_evt_scan_req_report_dec
 T ble_gap_evt_sec_info_request_dec
 T ble_gap_evt_sec_info_request_t_dec
 T ble_gap_evt_sec_info_request_t_enc
 T ble_gap_evt_sec_params_request_dec
 T ble_gap_evt_sec_params_request_t_dec
 T ble_gap_evt_sec_params_request_t_enc
 T ble_gap_evt_sec_request_dec
 T ble_gap_evt_sec_request_t_dec
 T ble_gap_evt_sec_request_t_enc
 T ble_gap_evt_timeout_dec
 T ble_gap_id_key_t_dec
 T ble_gap_id_key_t_enc
 T ble_gap_irk_t_dec
 T ble_gap_irk_t_enc
 T ble_gap_keypress_notify_req_enc
 T ble_gap_keypress_notify_rsp_dec
 T ble_gap_lesc_dhkey_reply_req_enc
 T ble_gap_lesc_dhkey_reply_rsp_dec
 T ble_gap_lesc_dhkey_t_dec
 T ble_gap_lesc_dhkey_t_enc
 T ble_gap_lesc_oob_data_get_req_enc
 T ble_gap_lesc_oob_data_get_rsp_dec
 T ble_gap_lesc_oob_data_set_req_enc
 T ble_gap_lesc_oob_data_set_rsp_dec
 T ble_gap_lesc_oob_data_t_dec
 T ble_gap_lesc_oob_data_t_enc
 T ble_gap_lesc_p256_pk_t_dec
 T ble_gap_lesc_p256_pk_t_enc
 T ble_gap_master_id_t_dec
 T ble_gap_master_id_t_enc
 T ble_gap_opt_auth_payload_timeout_t_dec
 T ble_gap_opt_auth_payload_timeout_t_enc
 T ble_gap_opt_ch_map_t_dec
 T ble_gap_opt_ch_map_t_enc
 T ble_gap_opt_compat_mode_1_t_dec
 T ble_gap_opt_compat_mode_1_t_enc
 T ble_gap_opt_local_conn_latency_t_dec
 T ble_gap_opt_local_conn_latency_t_enc
 T ble_gap_opt_passkey_t_dec
 T ble_gap_opt_passkey_t_enc
 T ble_gap_opt_slave_latency_disable_t_dec
 T ble_gap_opt_slave_latency_disable_t_enc
 T ble_gap_phy_update_req_enc
 T ble_gap_phy_update_rsp_dec
 T ble_gap_phys_t_dec
 T ble_gap_phys_t_enc
 T ble_gap_ppcp_get_req_enc
 T ble_gap_ppcp_get_rsp_dec
 T ble_gap_ppcp_set_req_enc
 T ble_gap_ppcp_set_rsp_dec
 T ble_gap_privacy_get_req_enc
 T ble_gap_privacy_get_rsp_dec
 T ble_gap_privacy_params_t_dec
 T ble_gap_privacy_params_t_enc
 T ble_gap_privacy_set_req_enc
 T ble_gap_privacy_set_rsp_dec
 T ble_gap_qos_channel_survey_start_req_enc
 T ble_gap_qos_channel_survey_start_rsp_dec
 T ble_gap_qos_channel_survey_stop_req_enc
 T ble_gap_qos_channel_survey_stop_rsp_dec
 T ble_gap_rssi_get_req_enc
 T ble_gap_rssi_get_rsp_dec
 T ble_gap_rssi_start_req_enc
 T ble_gap_rssi_start_rsp_dec
 T ble_gap_rssi_stop_req_enc
 T ble_gap_rssi_stop_rsp_dec
 T ble_gap_scan_params_t_dec
 T ble_gap_scan_params_t_enc
 T ble_gap_scan_start_req_enc
 T ble_gap_scan_start_rsp_dec
 T ble_gap_scan_stop_req_enc
 T ble_gap_scan_stop_rsp_dec
 T ble_gap_sec_info_reply_req_enc
 T ble_gap_sec_info_reply_rsp_dec
 T ble_gap_sec_kdist_t_dec
 T ble_gap_sec_kdist_t_enc
 T ble_gap_sec_keys_t_dec
 T ble_gap_sec_keys_t_enc
 T ble_gap_sec_keyset_t_dec
 T ble_gap_sec_keyset_t_enc
 T ble_gap_sec_levels_t_dec
 T ble_gap_sec_levels_t_enc
 T ble_gap_sec_params_reply_req_enc
 T ble_gap_sec_params_reply_rsp_dec
 T ble_gap_sec_params_t_dec
 T ble_gap_sec_params_t_enc
 T ble_gap_sign_info_t_dec
 T ble_gap_sign_info_t_enc
 T ble_gap_tx_power_set_req_enc
 T ble_gap_tx_power_set_rsp_dec
 T ble_gap_whitelist_set_req_enc
 T ble_gap_whitelist_set_rsp_dec
 T ble_gatt_char_ext_props_t_dec
 T ble_gatt_char_ext_props_t_enc
 T ble_gatt_char_props_t_dec
 T ble_gatt_char_props_t_enc
 T ble_gatt_conn_cfg_t_dec
 T ble_gatt_conn_cfg_t_enc
 T ble_gattc_attr_info128_t_dec
 T ble_gattc_attr_info128_t_enc
 T ble_gattc_attr_info16_t_dec
 T ble_gattc_attr_info16_t_enc
 T ble_gattc_attr_info_discover_req_enc
 T ble_gattc_attr_info_discover_rsp_dec
 T ble_gattc_char_t_dec
 T ble_gattc_char_t_enc
 T ble_gattc_char_value_by_uuid_read_req_enc
 T ble_gattc_char_value_by_uuid_read_rsp_dec
 T ble_gattc_char_values_read_req_enc
 T ble_gattc_char_values_read_rsp_dec
 T ble_gattc_characteristics_discover_req_enc
 T ble_gattc_characteristics_discover_rsp_dec
 T ble_gattc_conn_cfg_t_dec
 T ble_gattc_conn_cfg_t_enc
 T ble_gattc_desc_t_dec
 T ble_gattc_desc_t_enc
 T ble_gattc_descriptors_discover_req_enc
 T ble_gattc_descriptors_discover_rsp_dec
 T ble_gattc_evt_attr_info_disc_rsp_dec
 T ble_gattc_evt_attr_info_disc_rsp_t_dec
 T ble_gattc_evt_attr_info_disc_rsp_t_enc
 T ble_gattc_evt_char_disc_rsp_dec
 T ble_gattc_evt_char_disc_rsp_t_dec
 T ble_gattc_evt_char_disc_rsp_t_enc
 T ble_gattc_evt_char_val_by_uuid_read_rsp_dec
 T ble_gattc_evt_char_val_by_uuid_read_rsp_t_dec
 T ble_gattc_evt_char_val_by_uuid_read_rsp_t_enc
 T ble_gattc_evt_char_vals_read_rsp_dec
 T ble_gattc_evt_char_vals_read_rsp_t_dec
 T ble_gattc_evt_char_vals_read_rsp_t_enc
 T ble_gattc_evt_desc_disc_rsp_dec
 T ble_gattc_evt_desc_disc_rsp_t_dec
 T ble_gattc_evt_desc_disc_rsp_t_enc
 T ble_gattc_evt_exchange_mtu_rsp_dec
 T ble_gattc_evt_exchange_mtu_rsp_t_dec
 T ble_gattc_evt_exchange_mtu_rsp_t_enc
 T ble_gattc_evt_hvx_dec
 T ble_gattc_evt_hvx_t_dec
 T ble_gattc_evt_hvx_t_enc
 T ble_gattc_evt_prim_srvc_disc_rsp_dec
 T ble_gattc_evt_prim_srvc_disc_rsp_t_dec
 T ble_gattc_evt_prim_srvc_disc_rsp_t_enc
 T ble_gattc_evt_read_rsp_dec
 T ble_gattc_evt_read_rsp_t_dec
 T ble_gattc_evt_read_rsp_t_enc
 T ble_gattc_evt_rel_disc_rsp_dec
 T ble_gattc_evt_rel_disc_rsp_t_dec
 T ble_gattc_evt_rel_disc_rsp_t_enc
 T ble_gattc_evt_timeout_dec
 T ble_gattc_evt_timeout_t_dec
 T ble_gattc_evt_timeout_t_enc
 T ble_gattc_evt_write_cmd_tx_complete_dec
 T ble_gattc_evt_write_rsp_dec
 T ble_gattc_evt_write_rsp_t_dec
 T ble_gattc_evt_write_rsp_t_enc
 T ble_gattc_exchange_mtu_request_req_enc
 T ble_gattc_exchange_mtu_request_rsp_dec
 T ble_gattc_handle_range_t_dec
 T ble_gattc_handle_range_t_enc
 T ble_gattc_hv_confirm_req_enc
 T ble_gattc_hv_confirm_rsp_dec
 T ble_gattc_include_t_dec
 T ble_gattc_include_t_enc
 T ble_gattc_primary_services_discover_req_enc
 T ble_gattc_primary_services_discover_rsp_dec
 T ble_gattc_read_req_enc
 T ble_gattc_read_rsp_dec
 T ble_gattc_relationships_discover_req_enc
 T ble_gattc_relationships_discover_rsp_dec
 T ble_gattc_service_t_dec
 T ble_gattc_service_t_enc
 T ble_gattc_write_params_t_dec
 T ble_gattc_write_params_t_enc
 T ble_gattc_write_req_enc
 T ble_gattc_write_rsp_dec
 T ble_gatts_attr_get_req_enc
 T ble_gatts_attr_get_rsp_dec
 T ble_gatts_attr_md_t_dec
 T ble_gatts_attr_md_t_enc
 T ble_gatts_attr_t_dec
 T ble_gatts_attr_t_enc
 T ble_gatts_authorize_params_t_dec
 T ble_gatts_authorize_params_t_enc
 T ble_gatts_cfg_attr_tab_size_t_dec
 T ble_gatts_cfg_attr_tab_size_t_enc
 T ble_gatts_cfg_service_changed_t_dec
 T ble_gatts_cfg_service_changed_t_enc
 T ble_gatts_char_handles_t_dec
 T ble_gatts_char_handles_t_enc
 T ble_gatts_char_md_t_dec
 T ble_gatts_char_md_t_enc
 T ble_gatts_char_pf_t_dec
 T ble_gatts_char_pf_t_enc
 T ble_gatts_characteristic_add_req_enc
 T ble_gatts_characteristic_add_rsp_dec
 T ble_gatts_conn_cfg_t_dec
 T ble_gatts_conn_cfg_t_enc
 T ble_gatts_descriptor_add_req_enc
 T ble_gatts_descriptor_add_rsp_dec
 T ble_gatts_evt_exchange_mtu_request_dec
 T ble_gatts_evt_exchange_mtu_request_t_dec
 T ble_gatts_evt_exchange_mtu_request_t_enc
 T ble_gatts_evt_hvc_dec
 T ble_gatts_evt_hvc_t_dec
 T ble_gatts_evt_hvc_t_enc
 T ble_gatts_evt_hvn_tx_complete_dec
 T ble_gatts_evt_read_t_dec
 T ble_gatts_evt_read_t_enc
 T ble_gatts_evt_rw_authorize_request_dec
 T ble_gatts_evt_rw_authorize_request_t_dec
 T ble_gatts_evt_rw_authorize_request_t_enc
 T ble_gatts_evt_sc_confirm_dec
 T ble_gatts_evt_sys_attr_missing_dec
 T ble_gatts_evt_sys_attr_missing_t_dec
 T ble_gatts_evt_sys_attr_missing_t_enc
 T ble_gatts_evt_timeout_dec
 T ble_gatts_evt_timeout_t_dec
 T ble_gatts_evt_timeout_t_enc
 T ble_gatts_evt_write_dec
 T ble_gatts_evt_write_t_dec
 T ble_gatts_evt_write_t_enc
 T ble_gatts_exchange_mtu_reply_req_enc
 T ble_gatts_exchange_mtu_reply_rsp_dec
 T ble_gatts_hvx_params_t_dec
 T ble_gatts_hvx_params_t_enc
 T ble_gatts_hvx_req_enc
 T ble_gatts_hvx_rsp_dec
 T ble_gatts_include_add_req_enc
 T ble_gatts_include_add_rsp_dec
 T ble_gatts_initial_user_handle_get_req_enc
 T ble_gatts_initial_user_handle_get_rsp_dec
 T ble_gatts_rw_authorize_reply_params_t_dec
 T ble_gatts_rw_authorize_reply_params_t_enc
 T ble_gatts_rw_authorize_reply_req_enc
 T ble_gatts_rw_authorize_reply_rsp_dec
 T ble_gatts_service_add_req_enc
 T ble_gatts_service_add_rsp_dec
 T ble_gatts_service_changed_req_enc
 T ble_gatts_service_changed_rsp_dec
 T ble_gatts_sys_attr_get_req_enc
 T ble_gatts_sys_attr_get_rsp_dec
 T ble_gatts_sys_attr_set_req_enc
 T ble_gatts_sys_attr_set_rsp_dec
 T ble_gatts_value_get_req_enc
 T ble_gatts_value_get_rsp_dec
 T ble_gatts_value_set_req_enc
 T ble_gatts_value_set_rsp_dec
 T ble_gatts_value_t_dec
 T ble_gatts_value_t_enc
 T ble_l2cap_ch_flow_control_req_enc
 T ble_l2cap_ch_flow_control_rsp_dec
 T ble_l2cap_ch_release_req_enc
 T ble_l2cap_ch_release_rsp_dec
 T ble_l2cap_ch_rx_params_t_dec
 T ble_l2cap_ch_rx_params_t_enc
 T ble_l2cap_ch_rx_req_enc
 T ble_l2cap_ch_rx_rsp_dec
 T ble_l2cap_ch_setup_params_t_dec
 T ble_l2cap_ch_setup_params_t_enc
 T ble_l2cap_ch_setup_req_enc
 T ble_l2cap_ch_setup_rsp_dec
 T ble_l2cap_ch_tx_params_t_dec
 T ble_l2cap_ch_tx_params_t_enc
 T ble_l2cap_ch_tx_req_enc
 T ble_l2cap_ch_tx_rsp_dec
 T ble_l2cap_conn_cfg_t_dec
 T ble_l2cap_conn_cfg_t_enc
 T ble_l2cap_evt_ch_credit_dec
 T ble_l2cap_evt_ch_released_dec
 T ble_l2cap_evt_ch_rx_dec
 T ble_l2cap_evt_ch_sdu_buf_released_dec
 T ble_l2cap_evt_ch_setup_dec
 T ble_l2cap_evt_ch_setup_refused_dec
 T ble_l2cap_evt_ch_setup_request_dec
 T ble_l2cap_evt_ch_tx_dec
 T ble_opt_get_req_enc
 T ble_opt_get_rsp_dec
 T ble_opt_set_req_enc
 T ble_opt_set_rsp_dec
 T ble_pa_lna_cfg_t_dec
 T ble_pa_lna_cfg_t_enc
 T ble_user_mem_block_t_dec
 T ble_user_mem_block_t_enc
 T ble_user_mem_reply_req_enc
 T ble_user_mem_reply_rsp_dec
 T ble_uuid128_t_dec
 T ble_uuid128_t_enc
 T ble_uuid_decode_req_enc
 T ble_uuid_decode_rsp_dec
 T ble_uuid_encode_req_enc
 T ble_uuid_encode_rsp_dec
 T ble_uuid_t_dec
 T ble_uuid_t_enc
 T ble_uuid_vs_add_req_enc
 T ble_uuid_vs_add_rsp_dec
 T ble_version_get_req_enc
 T ble_version_get_rsp_dec
 T ble_version_t_dec
 T ble_version_t_enc
 T buf_dec
 T buf_enc
 T calculate_crc16_checksum(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > > const&, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > > const&)
 T calculate_header_checksum(std::vector<unsigned char, std::allocator<unsigned char> > const&)
 T cond_field_dec
 T cond_field_enc
 T cond_len16_cond_data_dec
 T conn_systemreset_enc
 T count16_cond_data16_dec
 T count16_cond_data16_enc
 T encode_decode(adapter_t*, std::function<unsigned int (unsigned char*, unsigned int*)> const&, std::function<unsigned int (unsigned char*, unsigned int, unsigned int*)> const&)
 T h5_decode(std::vector<unsigned char, std::allocator<unsigned char> > const&, std::vector<unsigned char, std::allocator<unsigned char> >&, unsigned char*, unsigned char*, bool*, unsigned short*, unsigned char*, bool*, h5_pkt_type_t*)
 T h5_encode(std::vector<unsigned char, std::allocator<unsigned char> > const&, std::vector<unsigned char, std::allocator<unsigned char> >&, unsigned char, unsigned char, bool, bool, h5_pkt_type_t)
 T int8_dec
 T len16data_dec
 T len16data_enc
 T len8data_dec
 T len8data_enc
 T op_status_cond_uint16_enc
 T op_status_enc
 T sd_ble_cfg_set
 T sd_ble_enable
 T sd_ble_gap_addr_get
 T sd_ble_gap_addr_set
 T sd_ble_gap_adv_set_configure
 T sd_ble_gap_adv_start
 T sd_ble_gap_adv_stop
 T sd_ble_gap_appearance_get
 T sd_ble_gap_appearance_set
 T sd_ble_gap_auth_key_reply
 T sd_ble_gap_authenticate
 T sd_ble_gap_conn_param_update
 T sd_ble_gap_conn_sec_get
 T sd_ble_gap_connect
 T sd_ble_gap_connect_cancel
 T sd_ble_gap_data_length_update
 T sd_ble_gap_device_identities_set
 T sd_ble_gap_device_name_get
 T sd_ble_gap_device_name_set
 T sd_ble_gap_disconnect
 T sd_ble_gap_encrypt
 T sd_ble_gap_keypress_notify
 T sd_ble_gap_lesc_dhkey_reply
 T sd_ble_gap_lesc_oob_data_get
 T sd_ble_gap_lesc_oob_data_set
 T sd_ble_gap_phy_update
 T sd_ble_gap_ppcp_get
 T sd_ble_gap_ppcp_set
 T sd_ble_gap_privacy_get
 T sd_ble_gap_privacy_set
 T sd_ble_gap_rssi_get
 T sd_ble_gap_rssi_start
 T sd_ble_gap_rssi_stop
 T sd_ble_gap_scan_start
 T sd_ble_gap_scan_stop
 T sd_ble_gap_sec_info_reply
 T sd_ble_gap_sec_params_reply
 T sd_ble_gap_tx_power_set
 T sd_ble_gap_whitelist_set
 T sd_ble_gattc_attr_info_discover
 T sd_ble_gattc_char_value_by_uuid_read
 T sd_ble_gattc_char_values_read
 T sd_ble_gattc_characteristics_discover
 T sd_ble_gattc_descriptors_discover
 T sd_ble_gattc_exchange_mtu_request
 T sd_ble_gattc_hv_confirm
 T sd_ble_gattc_primary_services_discover
 T sd_ble_gattc_read
 T sd_ble_gattc_relationships_discover
 T sd_ble_gattc_write
 T sd_ble_gatts_attr_get
 T sd_ble_gatts_characteristic_add
 T sd_ble_gatts_descriptor_add
 T sd_ble_gatts_exchange_mtu_reply
 T sd_ble_gatts_hvx
 T sd_ble_gatts_include_add
 T sd_ble_gatts_initial_user_handle_get
 T sd_ble_gatts_rw_authorize_reply
 T sd_ble_gatts_service_add
 T sd_ble_gatts_service_changed
 T sd_ble_gatts_sys_attr_get
 T sd_ble_gatts_sys_attr_set
 T sd_ble_gatts_value_get
 T sd_ble_gatts_value_set
 T sd_ble_opt_get
 T sd_ble_opt_set
 T sd_ble_user_mem_reply
 T sd_ble_uuid_decode
 T sd_ble_uuid_encode
 T sd_ble_uuid_vs_add
 T sd_ble_version_get
 T sd_rpc_adapter_create
 T sd_rpc_adapter_delete
 T sd_rpc_close
 T sd_rpc_conn_reset
 T sd_rpc_data_link_layer_create_bt_three_wire
 T sd_rpc_log_handler_severity_filter_set
 T sd_rpc_open
 T sd_rpc_physical_layer_create_uart
 T sd_rpc_serial_port_enum
 T sd_rpc_transport_layer_create
 T ser_ble_cmd_rsp_dec
 T ser_ble_cmd_rsp_result_code_dec
 T ser_ble_cmd_rsp_status_code_enc
 T slip_decode(std::vector<unsigned char, std::allocator<unsigned char> > const&, std::vector<unsigned char, std::allocator<unsigned char> >&)
 T slip_encode(std::vector<unsigned char, std::allocator<unsigned char> > const&, std::vector<unsigned char, std::allocator<unsigned char> >&)
 T to_str(char const*)
 T uint16_dec
 T uint16_t_dec
 T uint16_t_enc
 T uint32_t_dec
 T uint32_t_enc
 T uint8_dec
 T uint8_t_dec
 T uint8_t_enc
 T uint8_vector_dec
 T uint8_vector_enc
 V typeinfo for ActiveExitCriterias
 V typeinfo for ExitCriterias
 V typeinfo for H5Transport
 V typeinfo for InitializedExitCriterias
 V typeinfo for ResetExitCriterias
 V typeinfo for StartExitCriterias
 V typeinfo for Transport
 V typeinfo for UartBoost
 V typeinfo for UartSettings
 V typeinfo for UartSettingsBoost
 V typeinfo for UninitializedExitCriterias
 V typeinfo for asio::detail::epoll_reactor
 V typeinfo for asio::detail::execution_context_service_base<asio::detail::epoll_reactor>
 V typeinfo for asio::detail::execution_context_service_base<asio::detail::scheduler>
 V typeinfo for asio::detail::noncopyable
 V typeinfo for asio::detail::reactive_descriptor_service
 V typeinfo for asio::detail::reactive_serial_port_service
 V typeinfo for asio::detail::scheduler
 V typeinfo for asio::detail::service_base<asio::detail::reactive_descriptor_service>
 V typeinfo for asio::detail::service_base<asio::detail::reactive_serial_port_service>
 V typeinfo for asio::detail::system_category
 V typeinfo for asio::detail::thread_context
 V typeinfo for asio::detail::typeid_wrapper<asio::detail::epoll_reactor>
 V typeinfo for asio::detail::typeid_wrapper<asio::detail::reactive_serial_port_service>
 V typeinfo for asio::detail::typeid_wrapper<asio::detail::scheduler>
 V typeinfo for asio::error::detail::addrinfo_category
 V typeinfo for asio::error::detail::misc_category
 V typeinfo for asio::error::detail::netdb_category
 V typeinfo for asio::execution_context::service
 V typeinfo for asio::invalid_service_owner
 V typeinfo for asio::io_context::service
 V typeinfo for asio::service_already_exists
 V typeinfo for std::_Bind<std::_Mem_fn<void (AdapterInternal::*)(ble_evt_t*)> (AdapterInternal*, std::_Placeholder<1>)>
 V typeinfo for std::_Bind<std::_Mem_fn<void (AdapterInternal::*)(sd_rpc_app_status_t, std::string const&)> (AdapterInternal*, std::_Placeholder<1>, std::_Placeholder<2>)>
 V typeinfo for std::_Bind<std::_Mem_fn<void (AdapterInternal::*)(sd_rpc_log_severity_t, std::string const&)> (AdapterInternal*, std::_Placeholder<1>, std::_Placeholder<2>)>
 V typeinfo for std::_Bind<std::_Mem_fn<void (H5Transport::*)(sd_rpc_app_status_t, std::string const&)> (H5Transport*, std::_Placeholder<1>, std::_Placeholder<2>)>
 V typeinfo for std::_Bind<std::_Mem_fn<void (H5Transport::*)(unsigned char const*, unsigned long)> (H5Transport*, std::_Placeholder<1>, std::_Placeholder<2>)>
 V typeinfo for std::_Bind<std::_Mem_fn<void (SerializationTransport::*)(unsigned char const*, unsigned long)> (SerializationTransport*, std::_Placeholder<1>, std::_Placeholder<2>)>
 V typeinfo for std::_Bind<std::_Mem_fn<void (UartBoost::*)(std::error_code const&, unsigned long)> (UartBoost*, std::_Placeholder<1>, std::_Placeholder<2>)>
 V typeinfo for std::_Maybe_get_result_type<std::_Mem_fn<void (AdapterInternal::*)(ble_evt_t*)>, void>
 V typeinfo for std::_Maybe_get_result_type<std::_Mem_fn<void (AdapterInternal::*)(sd_rpc_app_status_t, std::string const&)>, void>
 V typeinfo for std::_Maybe_get_result_type<std::_Mem_fn<void (AdapterInternal::*)(sd_rpc_log_severity_t, std::string const&)>, void>
 V typeinfo for std::_Maybe_get_result_type<std::_Mem_fn<void (H5Transport::*)(sd_rpc_app_status_t, std::string const&)>, void>
 V typeinfo for std::_Maybe_get_result_type<std::_Mem_fn<void (H5Transport::*)(unsigned char const*, unsigned long)>, void>
 V typeinfo for std::_Maybe_get_result_type<std::_Mem_fn<void (SerializationTransport::*)(unsigned char const*, unsigned long)>, void>
 V typeinfo for std::_Maybe_get_result_type<std::_Mem_fn<void (UartBoost::*)(std::error_code const&, unsigned long)>, void>
 V typeinfo for std::_Mutex_base<(__gnu_cxx::_Lock_policy)2>
 V typeinfo for std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>
 V typeinfo for std::_Sp_counted_ptr<ActiveExitCriterias*, (__gnu_cxx::_Lock_policy)2>
 V typeinfo for std::_Sp_counted_ptr<InitializedExitCriterias*, (__gnu_cxx::_Lock_policy)2>
 V typeinfo for std::_Sp_counted_ptr<ResetExitCriterias*, (__gnu_cxx::_Lock_policy)2>
 V typeinfo for std::_Sp_counted_ptr<StartExitCriterias*, (__gnu_cxx::_Lock_policy)2>
 V typeinfo for std::_Sp_counted_ptr<Transport*, (__gnu_cxx::_Lock_policy)2>
 V typeinfo for std::_Sp_counted_ptr<UninitializedExitCriterias*, (__gnu_cxx::_Lock_policy)2>
 V typeinfo for std::_Sp_counted_ptr_inplace<adapter_ble_gap_state_t, std::allocator<adapter_ble_gap_state_t>, (__gnu_cxx::_Lock_policy)2>
 V typeinfo for std::_Sp_counted_ptr_inplace<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > >, (__gnu_cxx::_Lock_policy)2>
 V typeinfo for std::_Sp_make_shared_tag
 V typeinfo for std::_Weak_result_type<std::_Mem_fn<void (AdapterInternal::*)(ble_evt_t*)> >
 V typeinfo for std::_Weak_result_type<std::_Mem_fn<void (AdapterInternal::*)(sd_rpc_app_status_t, std::string const&)> >
 V typeinfo for std::_Weak_result_type<std::_Mem_fn<void (AdapterInternal::*)(sd_rpc_log_severity_t, std::string const&)> >
 V typeinfo for std::_Weak_result_type<std::_Mem_fn<void (H5Transport::*)(sd_rpc_app_status_t, std::string const&)> >
 V typeinfo for std::_Weak_result_type<std::_Mem_fn<void (H5Transport::*)(unsigned char const*, unsigned long)> >
 V typeinfo for std::_Weak_result_type<std::_Mem_fn<void (SerializationTransport::*)(unsigned char const*, unsigned long)> >
 V typeinfo for std::_Weak_result_type<std::_Mem_fn<void (UartBoost::*)(std::error_code const&, unsigned long)> >
 V typeinfo for std::_Weak_result_type_impl<std::_Mem_fn<void (AdapterInternal::*)(ble_evt_t*)> >
 V typeinfo for std::_Weak_result_type_impl<std::_Mem_fn<void (AdapterInternal::*)(sd_rpc_app_status_t, std::string const&)> >
 V typeinfo for std::_Weak_result_type_impl<std::_Mem_fn<void (AdapterInternal::*)(sd_rpc_log_severity_t, std::string const&)> >
 V typeinfo for std::_Weak_result_type_impl<std::_Mem_fn<void (H5Transport::*)(sd_rpc_app_status_t, std::string const&)> >
 V typeinfo for std::_Weak_result_type_impl<std::_Mem_fn<void (H5Transport::*)(unsigned char const*, unsigned long)> >
 V typeinfo for std::_Weak_result_type_impl<std::_Mem_fn<void (SerializationTransport::*)(unsigned char const*, unsigned long)> >
 V typeinfo for std::_Weak_result_type_impl<std::_Mem_fn<void (UartBoost::*)(std::error_code const&, unsigned long)> >
 V typeinfo for std::thread::_Impl_base
 V typeinfo name for ActiveExitCriterias
 V typeinfo name for ExitCriterias
 V typeinfo name for H5Transport
 V typeinfo name for InitializedExitCriterias
 V typeinfo name for ResetExitCriterias
 V typeinfo name for StartExitCriterias
 V typeinfo name for Transport
 V typeinfo name for UartBoost
 V typeinfo name for UartSettings
 V typeinfo name for UartSettingsBoost
 V typeinfo name for UninitializedExitCriterias
 V typeinfo name for asio::detail::epoll_reactor
 V typeinfo name for asio::detail::execution_context_service_base<asio::detail::epoll_reactor>
 V typeinfo name for asio::detail::execution_context_service_base<asio::detail::scheduler>
 V typeinfo name for asio::detail::noncopyable
 V typeinfo name for asio::detail::reactive_descriptor_service
 V typeinfo name for asio::detail::reactive_serial_port_service
 V typeinfo name for asio::detail::scheduler
 V typeinfo name for asio::detail::service_base<asio::detail::reactive_descriptor_service>
 V typeinfo name for asio::detail::service_base<asio::detail::reactive_serial_port_service>
 V typeinfo name for asio::detail::system_category
 V typeinfo name for asio::detail::thread_context
 V typeinfo name for asio::detail::typeid_wrapper<asio::detail::epoll_reactor>
 V typeinfo name for asio::detail::typeid_wrapper<asio::detail::reactive_serial_port_service>
 V typeinfo name for asio::detail::typeid_wrapper<asio::detail::scheduler>
 V typeinfo name for asio::error::detail::addrinfo_category
 V typeinfo name for asio::error::detail::misc_category
 V typeinfo name for asio::error::detail::netdb_category
 V typeinfo name for asio::execution_context::service
 V typeinfo name for asio::invalid_service_owner
 V typeinfo name for asio::io_context::service
 V typeinfo name for asio::service_already_exists
 V typeinfo name for std::_Bind<std::_Mem_fn<void (AdapterInternal::*)(ble_evt_t*)> (AdapterInternal*, std::_Placeholder<1>)>
 V typeinfo name for std::_Bind<std::_Mem_fn<void (AdapterInternal::*)(sd_rpc_app_status_t, std::string const&)> (AdapterInternal*, std::_Placeholder<1>, std::_Placeholder<2>)>
 V typeinfo name for std::_Bind<std::_Mem_fn<void (AdapterInternal::*)(sd_rpc_log_severity_t, std::string const&)> (AdapterInternal*, std::_Placeholder<1>, std::_Placeholder<2>)>
 V typeinfo name for std::_Bind<std::_Mem_fn<void (H5Transport::*)(sd_rpc_app_status_t, std::string const&)> (H5Transport*, std::_Placeholder<1>, std::_Placeholder<2>)>
 V typeinfo name for std::_Bind<std::_Mem_fn<void (H5Transport::*)(unsigned char const*, unsigned long)> (H5Transport*, std::_Placeholder<1>, std::_Placeholder<2>)>
 V typeinfo name for std::_Bind<std::_Mem_fn<void (SerializationTransport::*)(unsigned char const*, unsigned long)> (SerializationTransport*, std::_Placeholder<1>, std::_Placeholder<2>)>
 V typeinfo name for std::_Bind<std::_Mem_fn<void (UartBoost::*)(std::error_code const&, unsigned long)> (UartBoost*, std::_Placeholder<1>, std::_Placeholder<2>)>
 V typeinfo name for std::_Maybe_get_result_type<std::_Mem_fn<void (AdapterInternal::*)(ble_evt_t*)>, void>
 V typeinfo name for std::_Maybe_get_result_type<std::_Mem_fn<void (AdapterInternal::*)(sd_rpc_app_status_t, std::string const&)>, void>
 V typeinfo name for std::_Maybe_get_result_type<std::_Mem_fn<void (AdapterInternal::*)(sd_rpc_log_severity_t, std::string const&)>, void>
 V typeinfo name for std::_Maybe_get_result_type<std::_Mem_fn<void (H5Transport::*)(sd_rpc_app_status_t, std::string const&)>, void>
 V typeinfo name for std::_Maybe_get_result_type<std::_Mem_fn<void (H5Transport::*)(unsigned char const*, unsigned long)>, void>
 V typeinfo name for std::_Maybe_get_result_type<std::_Mem_fn<void (SerializationTransport::*)(unsigned char const*, unsigned long)>, void>
 V typeinfo name for std::_Maybe_get_result_type<std::_Mem_fn<void (UartBoost::*)(std::error_code const&, unsigned long)>, void>
 V typeinfo name for std::_Mutex_base<(__gnu_cxx::_Lock_policy)2>
 V typeinfo name for std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>
 V typeinfo name for std::_Sp_counted_ptr<ActiveExitCriterias*, (__gnu_cxx::_Lock_policy)2>
 V typeinfo name for std::_Sp_counted_ptr<InitializedExitCriterias*, (__gnu_cxx::_Lock_policy)2>
 V typeinfo name for std::_Sp_counted_ptr<ResetExitCriterias*, (__gnu_cxx::_Lock_policy)2>
 V typeinfo name for std::_Sp_counted_ptr<StartExitCriterias*, (__gnu_cxx::_Lock_policy)2>
 V typeinfo name for std::_Sp_counted_ptr<Transport*, (__gnu_cxx::_Lock_policy)2>
 V typeinfo name for std::_Sp_counted_ptr<UninitializedExitCriterias*, (__gnu_cxx::_Lock_policy)2>
 V typeinfo name for std::_Sp_counted_ptr_inplace<adapter_ble_gap_state_t, std::allocator<adapter_ble_gap_state_t>, (__gnu_cxx::_Lock_policy)2>
 V typeinfo name for std::_Sp_counted_ptr_inplace<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > >, (__gnu_cxx::_Lock_policy)2>
 V typeinfo name for std::_Sp_make_shared_tag
 V typeinfo name for std::_Weak_result_type<std::_Mem_fn<void (AdapterInternal::*)(ble_evt_t*)> >
 V typeinfo name for std::_Weak_result_type<std::_Mem_fn<void (AdapterInternal::*)(sd_rpc_app_status_t, std::string const&)> >
 V typeinfo name for std::_Weak_result_type<std::_Mem_fn<void (AdapterInternal::*)(sd_rpc_log_severity_t, std::string const&)> >
 V typeinfo name for std::_Weak_result_type<std::_Mem_fn<void (H5Transport::*)(sd_rpc_app_status_t, std::string const&)> >
 V typeinfo name for std::_Weak_result_type<std::_Mem_fn<void (H5Transport::*)(unsigned char const*, unsigned long)> >
 V typeinfo name for std::_Weak_result_type<std::_Mem_fn<void (SerializationTransport::*)(unsigned char const*, unsigned long)> >
 V typeinfo name for std::_Weak_result_type<std::_Mem_fn<void (UartBoost::*)(std::error_code const&, unsigned long)> >
 V typeinfo name for std::_Weak_result_type_impl<std::_Mem_fn<void (AdapterInternal::*)(ble_evt_t*)> >
 V typeinfo name for std::_Weak_result_type_impl<std::_Mem_fn<void (AdapterInternal::*)(sd_rpc_app_status_t, std::string const&)> >
 V typeinfo name for std::_Weak_result_type_impl<std::_Mem_fn<void (AdapterInternal::*)(sd_rpc_log_severity_t, std::string const&)> >
 V typeinfo name for std::_Weak_result_type_impl<std::_Mem_fn<void (H5Transport::*)(sd_rpc_app_status_t, std::string const&)> >
 V typeinfo name for std::_Weak_result_type_impl<std::_Mem_fn<void (H5Transport::*)(unsigned char const*, unsigned long)> >
 V typeinfo name for std::_Weak_result_type_impl<std::_Mem_fn<void (SerializationTransport::*)(unsigned char const*, unsigned long)> >
 V typeinfo name for std::_Weak_result_type_impl<std::_Mem_fn<void (UartBoost::*)(std::error_code const&, unsigned long)> >
 V typeinfo name for std::thread::_Impl_base
 V vtable for ActiveExitCriterias
 V vtable for H5Transport
 V vtable for InitializedExitCriterias
 V vtable for ResetExitCriterias
 V vtable for StartExitCriterias
 V vtable for Transport
 V vtable for UartBoost
 V vtable for UartSettings
 V vtable for UartSettingsBoost
 V vtable for UninitializedExitCriterias
 V vtable for asio::detail::epoll_reactor
 V vtable for asio::detail::reactive_descriptor_service
 V vtable for asio::detail::reactive_serial_port_service
 V vtable for asio::detail::scheduler
 V vtable for asio::detail::system_category
 V vtable for asio::error::detail::addrinfo_category
 V vtable for asio::error::detail::misc_category
 V vtable for asio::error::detail::netdb_category
 V vtable for asio::invalid_service_owner
 V vtable for asio::service_already_exists
 V vtable for std::_Sp_counted_ptr<ActiveExitCriterias*, (__gnu_cxx::_Lock_policy)2>
 V vtable for std::_Sp_counted_ptr<InitializedExitCriterias*, (__gnu_cxx::_Lock_policy)2>
 V vtable for std::_Sp_counted_ptr<ResetExitCriterias*, (__gnu_cxx::_Lock_policy)2>
 V vtable for std::_Sp_counted_ptr<StartExitCriterias*, (__gnu_cxx::_Lock_policy)2>
 V vtable for std::_Sp_counted_ptr<Transport*, (__gnu_cxx::_Lock_policy)2>
 V vtable for std::_Sp_counted_ptr<UninitializedExitCriterias*, (__gnu_cxx::_Lock_policy)2>
 V vtable for std::_Sp_counted_ptr_inplace<adapter_ble_gap_state_t, std::allocator<adapter_ble_gap_state_t>, (__gnu_cxx::_Lock_policy)2>
 V vtable for std::_Sp_counted_ptr_inplace<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > >, (__gnu_cxx::_Lock_policy)2>
 V vtable for std::thread::_Impl_base
 VTT for std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >@@GLIBCXX_3.4
 W ActiveExitCriterias::isFullfilled() const
 W ActiveExitCriterias::reset()
 W ActiveExitCriterias::toString()
 W ActiveExitCriterias::~ActiveExitCriterias()
 W ExitCriterias::reset()
 W ExitCriterias::toString()
 W InitializedExitCriterias::isFullfilled() const
 W InitializedExitCriterias::reset()
 W InitializedExitCriterias::toString()
 W InitializedExitCriterias::~InitializedExitCriterias()
 W ResetExitCriterias::isFullfilled() const
 W ResetExitCriterias::reset()
 W ResetExitCriterias::toString()
 W ResetExitCriterias::~ResetExitCriterias()
 W SerialPortDesc::~SerialPortDesc()
 W StartExitCriterias::isFullfilled() const
 W StartExitCriterias::reset()
 W StartExitCriterias::toString()
 W StartExitCriterias::~StartExitCriterias()
 W UartSettingsBoost::~UartSettingsBoost()
 W UninitializedExitCriterias::isFullfilled() const
 W UninitializedExitCriterias::reset()
 W UninitializedExitCriterias::toString()
 W UninitializedExitCriterias::~UninitializedExitCriterias()
 W asio::asio_handler_is_continuation(...)
 W asio::detail::descriptor_ops::close(int, unsigned char&, std::error_code&)
 W asio::detail::descriptor_read_op<asio::mutable_buffers_1, std::function<void (std::error_code, unsigned long)> >::do_complete(void*, asio::detail::scheduler_operation*, std::error_code const&, unsigned long)
 W asio::detail::descriptor_read_op_base<asio::mutable_buffers_1>::do_perform(asio::detail::reactor_op*)
 W asio::detail::descriptor_write_op<asio::const_buffers_1, asio::detail::write_op<asio::serial_port, asio::mutable_buffers_1, asio::mutable_buffer const*, asio::detail::transfer_all_t, std::function<void (std::error_code, unsigned long)> > >::do_complete(void*, asio::detail::scheduler_operation*, std::error_code const&, unsigned long)
 W asio::detail::descriptor_write_op_base<asio::const_buffers_1>::do_perform(asio::detail::reactor_op*)
 W asio::detail::do_throw_error(std::error_code const&)
 W asio::detail::do_throw_error(std::error_code const&, char const*)
 W asio::detail::epoll_reactor::deregister_descriptor(int, asio::detail::epoll_reactor::descriptor_state*&, bool)
 W asio::detail::epoll_reactor::descriptor_state::do_complete(void*, asio::detail::scheduler_operation*, std::error_code const&, unsigned long)
 W asio::detail::epoll_reactor::epoll_reactor(asio::execution_context&)
 W asio::detail::epoll_reactor::notify_fork(asio::execution_context::fork_event)
 W asio::detail::epoll_reactor::perform_io_cleanup_on_block_exit::~perform_io_cleanup_on_block_exit()
 W asio::detail::epoll_reactor::shutdown()
 W asio::detail::epoll_reactor::~epoll_reactor()
 W asio::detail::object_pool<asio::detail::epoll_reactor::descriptor_state>::~object_pool()
 W asio::detail::posix_global_impl<asio::system_context>::~posix_global_impl()
 W asio::detail::posix_mutex::posix_mutex()
 W asio::detail::reactive_descriptor_service::shutdown()
 W asio::detail::reactive_descriptor_service::~reactive_descriptor_service()
 W asio::detail::reactive_serial_port_service::do_set_option(asio::detail::reactive_descriptor_service::implementation_type&, std::error_code (*)(void const*, termios&, std::error_code&), void const*, std::error_code&)
 W asio::detail::reactive_serial_port_service::open(asio::detail::reactive_descriptor_service::implementation_type&, std::string const&, std::error_code&)
 W asio::detail::reactive_serial_port_service::shutdown()
 W asio::detail::reactive_serial_port_service::~reactive_serial_port_service()
 W asio::detail::scheduler::post_immediate_completion(asio::detail::scheduler_operation*, bool)
 W asio::detail::scheduler::shutdown()
 W asio::detail::scheduler::stop()
 W asio::detail::scheduler::task_cleanup::~task_cleanup()
 W asio::detail::scheduler::work_cleanup::~work_cleanup()
 W asio::detail::scheduler::~scheduler()
 W asio::detail::scheduler_thread_info::~scheduler_thread_info()
 W asio::detail::service_base<asio::detail::reactive_descriptor_service>::~service_base()
 W asio::detail::service_base<asio::detail::reactive_serial_port_service>::~service_base()
 W asio::detail::service_id<asio::detail::epoll_reactor>::~service_id()
 W asio::detail::service_id<asio::detail::reactive_descriptor_service>::~service_id()
 W asio::detail::service_id<asio::detail::reactive_serial_port_service>::~service_id()
 W asio::detail::service_id<asio::detail::scheduler>::~service_id()
 W asio::detail::service_id<asio::detail::signal_set_service>::~service_id()
 W asio::detail::service_id<asio::detail::strand_service>::~service_id()
 W asio::detail::service_registry::do_use_service(asio::execution_context::service::key const&, asio::execution_context::service* (*)(void*), void*)
 W asio::detail::system_category::message(int) const
 W asio::detail::system_category::name() const
 W asio::detail::system_category::~system_category()
 W asio::detail::tss_ptr<asio::detail::call_stack<asio::detail::strand_executor_service::strand_impl, unsigned char>::context>::~tss_ptr()
 W asio::detail::tss_ptr<asio::detail::call_stack<asio::detail::strand_service::strand_impl, unsigned char>::context>::~tss_ptr()
 W asio::detail::tss_ptr<asio::detail::call_stack<asio::detail::thread_context, asio::detail::thread_info_base>::context>::~tss_ptr()
 W asio::detail::write_op<asio::serial_port, asio::mutable_buffers_1, asio::mutable_buffer const*, asio::detail::transfer_all_t, std::function<void (std::error_code, unsigned long)> >::operator()(std::error_code const&, unsigned long, int)
 W asio::error::detail::addrinfo_category::message(int) const
 W asio::error::detail::addrinfo_category::name() const
 W asio::error::detail::addrinfo_category::~addrinfo_category()
 W asio::error::detail::misc_category::message(int) const
 W asio::error::detail::misc_category::name() const
 W asio::error::detail::misc_category::~misc_category()
 W asio::error::detail::netdb_category::message(int) const
 W asio::error::detail::netdb_category::name() const
 W asio::error::detail::netdb_category::~netdb_category()
 W asio::execution_context::service* asio::detail::service_registry::create<asio::detail::epoll_reactor, asio::execution_context>(void*)
 W asio::execution_context::service* asio::detail::service_registry::create<asio::detail::reactive_serial_port_service, asio::io_context>(void*)
 W asio::execution_context::service* asio::detail::service_registry::create<asio::detail::scheduler, asio::execution_context>(void*)
 W asio::execution_context::service::notify_fork(asio::execution_context::fork_event)
 W asio::execution_context::~execution_context()
 W asio::invalid_service_owner::~invalid_service_owner()
 W asio::io_context::service::fork_service(asio::execution_context::fork_event)
 W asio::io_context::service::notify_fork(asio::execution_context::fork_event)
 W asio::io_context::service::shutdown()
 W asio::io_context::service::shutdown_service()
 W asio::io_context::service::~service()
 W asio::service_already_exists::~service_already_exists()
 W std::_Deque_base<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_initialize_map(unsigned long)
 W std::_Function_base::_Base_manager<std::_Bind<std::_Mem_fn<void (AdapterInternal::*)(ble_evt_t*)> (AdapterInternal*, std::_Placeholder<1>)> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<std::_Bind<std::_Mem_fn<void (AdapterInternal::*)(sd_rpc_app_status_t, std::string const&)> (AdapterInternal*, std::_Placeholder<1>, std::_Placeholder<2>)> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<std::_Bind<std::_Mem_fn<void (AdapterInternal::*)(sd_rpc_log_severity_t, std::string const&)> (AdapterInternal*, std::_Placeholder<1>, std::_Placeholder<2>)> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<std::_Bind<std::_Mem_fn<void (H5Transport::*)(sd_rpc_app_status_t, std::string const&)> (H5Transport*, std::_Placeholder<1>, std::_Placeholder<2>)> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<std::_Bind<std::_Mem_fn<void (H5Transport::*)(unsigned char const*, unsigned long)> (H5Transport*, std::_Placeholder<1>, std::_Placeholder<2>)> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<std::_Bind<std::_Mem_fn<void (SerializationTransport::*)(unsigned char const*, unsigned long)> (SerializationTransport*, std::_Placeholder<1>, std::_Placeholder<2>)> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<std::_Bind<std::_Mem_fn<void (UartBoost::*)(std::error_code const&, unsigned long)> (UartBoost*, std::_Placeholder<1>, std::_Placeholder<2>)> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_handler<void (ble_evt_t*), std::_Bind<std::_Mem_fn<void (AdapterInternal::*)(ble_evt_t*)> (AdapterInternal*, std::_Placeholder<1>)> >::_M_invoke(std::_Any_data const&, ble_evt_t*&&)
 W std::_Function_handler<void (sd_rpc_app_status_t, std::string const&), std::_Bind<std::_Mem_fn<void (AdapterInternal::*)(sd_rpc_app_status_t, std::string const&)> (AdapterInternal*, std::_Placeholder<1>, std::_Placeholder<2>)> >::_M_invoke(std::_Any_data const&, sd_rpc_app_status_t&&, std::string const&)
 W std::_Function_handler<void (sd_rpc_app_status_t, std::string const&), std::_Bind<std::_Mem_fn<void (H5Transport::*)(sd_rpc_app_status_t, std::string const&)> (H5Transport*, std::_Placeholder<1>, std::_Placeholder<2>)> >::_M_invoke(std::_Any_data const&, sd_rpc_app_status_t&&, std::string const&)
 W std::_Function_handler<void (sd_rpc_log_severity_t, std::string const&), std::_Bind<std::_Mem_fn<void (AdapterInternal::*)(sd_rpc_log_severity_t, std::string const&)> (AdapterInternal*, std::_Placeholder<1>, std::_Placeholder<2>)> >::_M_invoke(std::_Any_data const&, sd_rpc_log_severity_t&&, std::string const&)
 W std::_Function_handler<void (std::error_code, unsigned long), std::_Bind<std::_Mem_fn<void (UartBoost::*)(std::error_code const&, unsigned long)> (UartBoost*, std::_Placeholder<1>, std::_Placeholder<2>)> >::_M_invoke(std::_Any_data const&, std::error_code&&, unsigned long&&)
 W std::_Function_handler<void (unsigned char const*, unsigned long), std::_Bind<std::_Mem_fn<void (H5Transport::*)(unsigned char const*, unsigned long)> (H5Transport*, std::_Placeholder<1>, std::_Placeholder<2>)> >::_M_invoke(std::_Any_data const&, unsigned char const*&&, unsigned long&&)
 W std::_Function_handler<void (unsigned char const*, unsigned long), std::_Bind<std::_Mem_fn<void (SerializationTransport::*)(unsigned char const*, unsigned long)> (SerializationTransport*, std::_Placeholder<1>, std::_Placeholder<2>)> >::_M_invoke(std::_Any_data const&, unsigned char const*&&, unsigned long&&)
 W std::_List_base<SerialPortDesc, std::allocator<SerialPortDesc> >::_M_clear()
 W std::_Rb_tree<h5_state_t, std::pair<h5_state_t const, std::function<h5_state_t ()> >, std::_Select1st<std::pair<h5_state_t const, std::function<h5_state_t ()> > >, std::less<h5_state_t>, std::allocator<std::pair<h5_state_t const, std::function<h5_state_t ()> > > >::_M_erase(std::_Rb_tree_node<std::pair<h5_state_t const, std::function<h5_state_t ()> > >*)
 W std::_Rb_tree<h5_state_t, std::pair<h5_state_t const, std::function<h5_state_t ()> >, std::_Select1st<std::pair<h5_state_t const, std::function<h5_state_t ()> > >, std::less<h5_state_t>, std::allocator<std::pair<h5_state_t const, std::function<h5_state_t ()> > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<h5_state_t const, std::function<h5_state_t ()> > >, h5_state_t const&)
 W std::_Rb_tree<h5_state_t, std::pair<h5_state_t const, std::shared_ptr<ExitCriterias> >, std::_Select1st<std::pair<h5_state_t const, std::shared_ptr<ExitCriterias> > >, std::less<h5_state_t>, std::allocator<std::pair<h5_state_t const, std::shared_ptr<ExitCriterias> > > >::_M_erase(std::_Rb_tree_node<std::pair<h5_state_t const, std::shared_ptr<ExitCriterias> > >*)
 W std::_Rb_tree<h5_state_t, std::pair<h5_state_t const, std::shared_ptr<ExitCriterias> >, std::_Select1st<std::pair<h5_state_t const, std::shared_ptr<ExitCriterias> > >, std::less<h5_state_t>, std::allocator<std::pair<h5_state_t const, std::shared_ptr<ExitCriterias> > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<h5_state_t const, std::shared_ptr<ExitCriterias> > >, h5_state_t const&)
 W std::_Rb_tree<void*, std::pair<void* const, std::shared_ptr<adapter_ble_gap_state_t> >, std::_Select1st<std::pair<void* const, std::shared_ptr<adapter_ble_gap_state_t> > >, std::less<void*>, std::allocator<std::pair<void* const, std::shared_ptr<adapter_ble_gap_state_t> > > >::_M_erase(std::_Rb_tree_node<std::pair<void* const, std::shared_ptr<adapter_ble_gap_state_t> > >*)
 W std::_Rb_tree<void*, std::pair<void* const, std::shared_ptr<adapter_ble_gap_state_t> >, std::_Select1st<std::pair<void* const, std::shared_ptr<adapter_ble_gap_state_t> > >, std::less<void*>, std::allocator<std::pair<void* const, std::shared_ptr<adapter_ble_gap_state_t> > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<void* const, std::shared_ptr<adapter_ble_gap_state_t> > >, void* const&)
 W std::_Rb_tree_iterator<std::pair<h5_state_t const, std::shared_ptr<ExitCriterias> > > std::_Rb_tree<h5_state_t, std::pair<h5_state_t const, std::shared_ptr<ExitCriterias> >, std::_Select1st<std::pair<h5_state_t const, std::shared_ptr<ExitCriterias> > >, std::less<h5_state_t>, std::allocator<std::pair<h5_state_t const, std::shared_ptr<ExitCriterias> > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<h5_state_t&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<h5_state_t const, std::shared_ptr<ExitCriterias> > >, std::piecewise_construct_t const&, std::tuple<h5_state_t&&>&&, std::tuple<>&&)
 W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_destroy()
 W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release()
 W std::_Sp_counted_ptr<ActiveExitCriterias*, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
 W std::_Sp_counted_ptr<ActiveExitCriterias*, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
 W std::_Sp_counted_ptr<ActiveExitCriterias*, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
 W std::_Sp_counted_ptr<ActiveExitCriterias*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()
 W std::_Sp_counted_ptr<InitializedExitCriterias*, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
 W std::_Sp_counted_ptr<InitializedExitCriterias*, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
 W std::_Sp_counted_ptr<InitializedExitCriterias*, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
 W std::_Sp_counted_ptr<InitializedExitCriterias*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()
 W std::_Sp_counted_ptr<ResetExitCriterias*, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
 W std::_Sp_counted_ptr<ResetExitCriterias*, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
 W std::_Sp_counted_ptr<ResetExitCriterias*, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
 W std::_Sp_counted_ptr<ResetExitCriterias*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()
 W std::_Sp_counted_ptr<StartExitCriterias*, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
 W std::_Sp_counted_ptr<StartExitCriterias*, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
 W std::_Sp_counted_ptr<StartExitCriterias*, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
 W std::_Sp_counted_ptr<StartExitCriterias*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()
 W std::_Sp_counted_ptr<Transport*, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
 W std::_Sp_counted_ptr<Transport*, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
 W std::_Sp_counted_ptr<Transport*, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
 W std::_Sp_counted_ptr<Transport*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()
 W std::_Sp_counted_ptr<UninitializedExitCriterias*, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
 W std::_Sp_counted_ptr<UninitializedExitCriterias*, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
 W std::_Sp_counted_ptr<UninitializedExitCriterias*, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
 W std::_Sp_counted_ptr<UninitializedExitCriterias*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()
 W std::_Sp_counted_ptr_inplace<adapter_ble_gap_state_t, std::allocator<adapter_ble_gap_state_t>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
 W std::_Sp_counted_ptr_inplace<adapter_ble_gap_state_t, std::allocator<adapter_ble_gap_state_t>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
 W std::_Sp_counted_ptr_inplace<adapter_ble_gap_state_t, std::allocator<adapter_ble_gap_state_t>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
 W std::_Sp_counted_ptr_inplace<adapter_ble_gap_state_t, std::allocator<adapter_ble_gap_state_t>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
 W std::_Sp_counted_ptr_inplace<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > >, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
 W std::_Sp_counted_ptr_inplace<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > >, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
 W std::_Sp_counted_ptr_inplace<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > >, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
 W std::_Sp_counted_ptr_inplace<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
 W std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::~basic_stringbuf()
 W std::ctype<char>::do_widen(char) const
 W std::deque<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::~deque()
 W std::deque<unsigned char, std::allocator<unsigned char> >::_M_new_elements_at_back(unsigned long)
 W std::deque<unsigned char, std::allocator<unsigned char> >::_M_new_elements_at_front(unsigned long)
 W std::deque<unsigned char, std::allocator<unsigned char> >::_M_reallocate_map(unsigned long, bool)
 W std::enable_if<std::function<void (std::error_code, unsigned long)>::_Callable<std::decay<std::_Bind<std::_Mem_fn<void (UartBoost::*)(std::error_code const&, unsigned long)> (UartBoost*, std::_Placeholder<1>, std::_Placeholder<2>)> >::type, std::result_of<std::decay<std::_Bind<std::_Mem_fn<void (UartBoost::*)(std::error_code const&, unsigned long)> (UartBoost*, std::_Placeholder<1>, std::_Placeholder<2>)> >::type& (std::error_code, unsigned long)>::type>::value, std::function<void (std::error_code, unsigned long)>&>::type std::function<void (std::error_code, unsigned long)>::operator=<std::_Bind<std::_Mem_fn<void (UartBoost::*)(std::error_code const&, unsigned long)> (UartBoost*, std::_Placeholder<1>, std::_Placeholder<2>)> >(std::_Bind<std::_Mem_fn<void (UartBoost::*)(std::error_code const&, unsigned long)> (UartBoost*, std::_Placeholder<1>, std::_Placeholder<2>)>&&)
 W std::error_code asio::detail::reactive_serial_port_service::store_option<asio::serial_port_base::character_size>(void const*, termios&, std::error_code&)
 W std::error_code asio::detail::reactive_serial_port_service::store_option<asio::serial_port_base::flow_control>(void const*, termios&, std::error_code&)
 W std::error_code asio::detail::reactive_serial_port_service::store_option<asio::serial_port_base::parity>(void const*, termios&, std::error_code&)
 W std::error_code asio::detail::reactive_serial_port_service::store_option<asio::serial_port_base::stop_bits>(void const*, termios&, std::error_code&)
 W std::map<h5_state_t, std::shared_ptr<ExitCriterias>, std::less<h5_state_t>, std::allocator<std::pair<h5_state_t const, std::shared_ptr<ExitCriterias> > > >::operator[](h5_state_t const&)
 W std::map<void*, std::shared_ptr<adapter_ble_gap_state_t>, std::less<void*>, std::allocator<std::pair<void* const, std::shared_ptr<adapter_ble_gap_state_t> > > >::~map()
 W std::string __gnu_cxx::__to_xstring<std::string, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...)
 W std::system_error::system_error(std::error_code, char const*)
 W std::unique_lock<std::mutex>::unlock()
 W std::vector<unsigned char, std::allocator<unsigned char> >::_M_default_append(unsigned long)
 W void asio::detail::throw_exception<std::system_error>(std::system_error const&)
 W void asio::serial_port::set_option<asio::serial_port_base::baud_rate>(asio::serial_port_base::baud_rate const&)
 W void std::deque<std::vector<unsigned char, std::allocator<unsigned char> >, std::allocator<std::vector<unsigned char, std::allocator<unsigned char> > > >::_M_push_back_aux<std::vector<unsigned char, std::allocator<unsigned char> > >(std::vector<unsigned char, std::allocator<unsigned char> >&&)
 W void std::deque<unsigned char, std::allocator<unsigned char> >::_M_insert_aux<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > > >(std::_Deque_iterator<unsigned char, unsigned char&, unsigned char*>, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned long)
 W void std::deque<unsigned char, std::allocator<unsigned char> >::_M_range_insert_aux<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > > >(std::_Deque_iterator<unsigned char, unsigned char&, unsigned char*>, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, std::forward_iterator_tag)
 W void std::vector<unsigned char, std::allocator<unsigned char> >::_M_range_insert<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > > >(__gnu_cxx::__normal_iterator<unsigned char*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, std::forward_iterator_tag)
 W void std::vector<unsigned char, std::allocator<unsigned char> >::_M_range_insert<__gnu_cxx::__normal_iterator<unsigned char*, std::vector<unsigned char, std::allocator<unsigned char> > > >(__gnu_cxx::__normal_iterator<unsigned char*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char*, std::vector<unsigned char, std::allocator<unsigned char> > >, std::forward_iterator_tag)
 W void std::vector<unsigned char, std::allocator<unsigned char> >::_M_range_insert<std::_Deque_iterator<unsigned char, unsigned char&, unsigned char*> >(__gnu_cxx::__normal_iterator<unsigned char*, std::vector<unsigned char, std::allocator<unsigned char> > >, std::_Deque_iterator<unsigned char, unsigned char&, unsigned char*>, std::_Deque_iterator<unsigned char, unsigned char&, unsigned char*>, std::forward_iterator_tag)
 _ITM_deregisterTMCloneTable
 _ITM_registerTMCloneTable
 _Jv_RegisterClasses
 _Unwind_Resume@@GCC_3.0
 __cxa_allocate_exception@@CXXABI_1.3
 __cxa_atexit@@GLIBC_2.2.5
 __cxa_begin_catch@@CXXABI_1.3
 __cxa_end_catch@@CXXABI_1.3
 __cxa_finalize@@GLIBC_2.2.5
 __cxa_free_exception@@CXXABI_1.3
 __cxa_guard_acquire@@CXXABI_1.3
 __cxa_guard_release@@CXXABI_1.3
 __cxa_pure_virtual@@CXXABI_1.3
 __cxa_rethrow@@CXXABI_1.3
 __cxa_throw@@CXXABI_1.3
 __dynamic_cast@@CXXABI_1.3
 __errno_location@@GLIBC_2.2.5
 __gmon_start__
 __gxx_personality_v0@@CXXABI_1.3
 __pthread_key_create@@GLIBC_2.2.5
 __stack_chk_fail@@GLIBC_2.4
 __tls_get_addr@@GLIBC_2.3
 b adapters_gap_state
 b completed.7545
 b current_event_context
 b current_request_reply_context
 b std::__ioinit
 cfmakeraw@@GLIBC_2.2.5
 cfsetspeed@@GLIBC_2.2.5
 close@@GLIBC_2.2.5
 d DW.ref._ZTISt12out_of_range
 d DW.ref._ZTISt9exception
 d DW.ref.__gxx_personality_v0
 d _DYNAMIC
 d _GLOBAL_OFFSET_TABLE_
 d __JCR_END__
 d __JCR_LIST__
 d __TMC_END__
 d __do_global_dtors_aux_fini_array_entry
 d __dso_handle
 d __frame_dummy_init_array_entry
 d typeinfo for H5Transport::setupStateMachine()::{lambda()#1}
 d typeinfo for H5Transport::setupStateMachine()::{lambda()#2}
 d typeinfo for H5Transport::setupStateMachine()::{lambda()#3}
 d typeinfo for H5Transport::setupStateMachine()::{lambda()#4}
 d typeinfo for H5Transport::setupStateMachine()::{lambda()#5}
 d typeinfo for H5Transport::setupStateMachine()::{lambda()#6}
 d typeinfo for H5Transport::setupStateMachine()::{lambda()#7}
 d typeinfo for H5Transport::setupStateMachine()::{lambda()#8}
 d typeinfo for sd_ble_cfg_set::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_cfg_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_enable::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_enable::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_addr_get::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_addr_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_addr_set::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_addr_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_adv_set_configure::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_adv_set_configure::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_adv_start::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_adv_start::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_adv_stop::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_adv_stop::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_appearance_get::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_appearance_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_appearance_set::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_appearance_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_auth_key_reply::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_auth_key_reply::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_authenticate::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_authenticate::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_conn_param_update::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_conn_param_update::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_conn_sec_get::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_conn_sec_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_connect::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_connect::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_connect_cancel::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_connect_cancel::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_data_length_update::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_data_length_update::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_device_identities_set::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_device_identities_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_device_name_get::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_device_name_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_device_name_set::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_device_name_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_disconnect::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_disconnect::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_encrypt::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_encrypt::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_keypress_notify::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_keypress_notify::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_lesc_dhkey_reply::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_lesc_dhkey_reply::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_lesc_oob_data_get::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_lesc_oob_data_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_lesc_oob_data_set::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_lesc_oob_data_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_phy_update::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_phy_update::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_ppcp_get::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_ppcp_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_ppcp_set::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_ppcp_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_privacy_get::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_privacy_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_privacy_set::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_privacy_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_rssi_get::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_rssi_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_rssi_start::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_rssi_start::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_rssi_stop::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_rssi_stop::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_scan_start::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_scan_start::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_scan_stop::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_scan_stop::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_sec_info_reply::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_sec_info_reply::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_sec_params_reply::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_sec_params_reply::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_tx_power_set::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_tx_power_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gap_whitelist_set::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gap_whitelist_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gattc_attr_info_discover::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gattc_attr_info_discover::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gattc_char_value_by_uuid_read::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gattc_char_value_by_uuid_read::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gattc_char_values_read::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gattc_char_values_read::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gattc_characteristics_discover::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gattc_characteristics_discover::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gattc_descriptors_discover::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gattc_descriptors_discover::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gattc_exchange_mtu_request::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gattc_exchange_mtu_request::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gattc_hv_confirm::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gattc_hv_confirm::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gattc_primary_services_discover::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gattc_primary_services_discover::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gattc_read::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gattc_read::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gattc_relationships_discover::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gattc_relationships_discover::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gattc_write::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gattc_write::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gatts_attr_get::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gatts_attr_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gatts_characteristic_add::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gatts_characteristic_add::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gatts_descriptor_add::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gatts_descriptor_add::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gatts_exchange_mtu_reply::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gatts_exchange_mtu_reply::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gatts_hvx::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gatts_hvx::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gatts_include_add::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gatts_include_add::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gatts_initial_user_handle_get::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gatts_initial_user_handle_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gatts_rw_authorize_reply::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gatts_rw_authorize_reply::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gatts_service_add::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gatts_service_add::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gatts_service_changed::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gatts_service_changed::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gatts_sys_attr_get::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gatts_sys_attr_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gatts_sys_attr_set::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gatts_sys_attr_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gatts_value_get::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gatts_value_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_gatts_value_set::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_gatts_value_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_opt_get::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_opt_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_opt_set::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_opt_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_user_mem_reply::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_user_mem_reply::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_uuid_decode::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_uuid_decode::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_uuid_encode::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_uuid_encode::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_uuid_vs_add::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_uuid_vs_add::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for sd_ble_version_get::{lambda(unsigned char*, unsigned int*)#1}
 d typeinfo for sd_ble_version_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 d typeinfo for std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<H5Transport::startStateMachine()::{lambda()#1} ()> >, std::allocator<std::thread::_Impl<std::_Bind_simple<H5Transport::startStateMachine()::{lambda()#1} ()> > >, (__gnu_cxx::_Lock_policy)2>
 d typeinfo for std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<SerializationTransport::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (ble_evt_t*)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> >, std::allocator<std::thread::_Impl<std::_Bind_simple<SerializationTransport::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (ble_evt_t*)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> > >, (__gnu_cxx::_Lock_policy)2>
 d typeinfo for std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<UartBoost::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (unsigned char const*, unsigned long)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> >, std::allocator<std::thread::_Impl<std::_Bind_simple<UartBoost::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (unsigned char const*, unsigned long)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> > >, (__gnu_cxx::_Lock_policy)2>
 d typeinfo for std::thread::_Impl<std::_Bind_simple<H5Transport::startStateMachine()::{lambda()#1} ()> >
 d typeinfo for std::thread::_Impl<std::_Bind_simple<SerializationTransport::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (ble_evt_t*)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> >
 d typeinfo for std::thread::_Impl<std::_Bind_simple<UartBoost::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (unsigned char const*, unsigned long)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> >
 d vtable for std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<H5Transport::startStateMachine()::{lambda()#1} ()> >, std::allocator<std::thread::_Impl<std::_Bind_simple<H5Transport::startStateMachine()::{lambda()#1} ()> > >, (__gnu_cxx::_Lock_policy)2>
 d vtable for std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<SerializationTransport::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (ble_evt_t*)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> >, std::allocator<std::thread::_Impl<std::_Bind_simple<SerializationTransport::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (ble_evt_t*)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> > >, (__gnu_cxx::_Lock_policy)2>
 d vtable for std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<UartBoost::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (unsigned char const*, unsigned long)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> >, std::allocator<std::thread::_Impl<std::_Bind_simple<UartBoost::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (unsigned char const*, unsigned long)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> > >, (__gnu_cxx::_Lock_policy)2>
 d vtable for std::thread::_Impl<std::_Bind_simple<H5Transport::startStateMachine()::{lambda()#1} ()> >
 d vtable for std::thread::_Impl<std::_Bind_simple<SerializationTransport::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (ble_evt_t*)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> >
 d vtable for std::thread::_Impl<std::_Bind_simple<UartBoost::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (unsigned char const*, unsigned long)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> >
 epoll_create1@@GLIBC_2.9
 epoll_create@@GLIBC_2.3.2
 epoll_ctl@@GLIBC_2.3.2
 epoll_wait@@GLIBC_2.3.2
 eventfd@@GLIBC_2.7
 fcntl@@GLIBC_2.2.5
 ioctl@@GLIBC_2.2.5
 malloc@@GLIBC_2.2.5
 memcpy@@GLIBC_2.14
 memmove@@GLIBC_2.2.5
 memset@@GLIBC_2.2.5
 nanosleep@@GLIBC_2.2.5
 open@@GLIBC_2.2.5
 operator delete(void*)@@GLIBCXX_3.4
 operator delete(void*, unsigned long)@@CXXABI_1.3.9
 operator new(unsigned long)@@GLIBCXX_3.4
 pause@@GLIBC_2.2.5
 pipe@@GLIBC_2.2.5
 pthread_cond_broadcast@@GLIBC_2.3.2
 pthread_cond_destroy@@GLIBC_2.3.2
 pthread_cond_init@@GLIBC_2.3.2
 pthread_cond_signal@@GLIBC_2.3.2
 pthread_cond_timedwait@@GLIBC_2.3.2
 pthread_cond_wait@@GLIBC_2.3.2
 pthread_condattr_init@@GLIBC_2.2.5
 pthread_condattr_setclock@@GLIBC_2.3.3
 pthread_create@@GLIBC_2.2.5
 pthread_detach@@GLIBC_2.2.5
 pthread_join@@GLIBC_2.2.5
 pthread_mutex_destroy@@GLIBC_2.2.5
 pthread_mutex_init@@GLIBC_2.2.5
 pthread_mutex_lock@@GLIBC_2.2.5
 pthread_mutex_unlock@@GLIBC_2.2.5
 pthread_self@@GLIBC_2.2.5
 r ._259
 r ._260
 r ._261
 r ._262
 r ._263
 r ._264
 r ._265
 r ._266
 r CSWTCH.1775
 r OPEN_WAIT_TIMEOUT
 r __FRAME_END__
 r std::piecewise_construct
 r typeinfo name for H5Transport::setupStateMachine()::{lambda()#1}
 r typeinfo name for H5Transport::setupStateMachine()::{lambda()#2}
 r typeinfo name for H5Transport::setupStateMachine()::{lambda()#3}
 r typeinfo name for H5Transport::setupStateMachine()::{lambda()#4}
 r typeinfo name for H5Transport::setupStateMachine()::{lambda()#5}
 r typeinfo name for H5Transport::setupStateMachine()::{lambda()#6}
 r typeinfo name for H5Transport::setupStateMachine()::{lambda()#7}
 r typeinfo name for H5Transport::setupStateMachine()::{lambda()#8}
 r typeinfo name for sd_ble_cfg_set::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_cfg_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_enable::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_enable::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_addr_get::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_addr_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_addr_set::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_addr_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_adv_set_configure::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_adv_set_configure::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_adv_start::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_adv_start::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_adv_stop::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_adv_stop::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_appearance_get::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_appearance_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_appearance_set::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_appearance_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_auth_key_reply::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_auth_key_reply::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_authenticate::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_authenticate::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_conn_param_update::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_conn_param_update::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_conn_sec_get::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_conn_sec_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_connect::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_connect::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_connect_cancel::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_connect_cancel::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_data_length_update::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_data_length_update::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_device_identities_set::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_device_identities_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_device_name_get::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_device_name_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_device_name_set::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_device_name_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_disconnect::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_disconnect::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_encrypt::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_encrypt::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_keypress_notify::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_keypress_notify::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_lesc_dhkey_reply::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_lesc_dhkey_reply::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_lesc_oob_data_get::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_lesc_oob_data_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_lesc_oob_data_set::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_lesc_oob_data_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_phy_update::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_phy_update::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_ppcp_get::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_ppcp_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_ppcp_set::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_ppcp_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_privacy_get::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_privacy_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_privacy_set::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_privacy_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_rssi_get::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_rssi_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_rssi_start::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_rssi_start::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_rssi_stop::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_rssi_stop::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_scan_start::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_scan_start::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_scan_stop::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_scan_stop::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_sec_info_reply::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_sec_info_reply::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_sec_params_reply::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_sec_params_reply::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_tx_power_set::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_tx_power_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gap_whitelist_set::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gap_whitelist_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gattc_attr_info_discover::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gattc_attr_info_discover::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gattc_char_value_by_uuid_read::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gattc_char_value_by_uuid_read::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gattc_char_values_read::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gattc_char_values_read::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gattc_characteristics_discover::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gattc_characteristics_discover::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gattc_descriptors_discover::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gattc_descriptors_discover::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gattc_exchange_mtu_request::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gattc_exchange_mtu_request::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gattc_hv_confirm::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gattc_hv_confirm::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gattc_primary_services_discover::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gattc_primary_services_discover::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gattc_read::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gattc_read::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gattc_relationships_discover::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gattc_relationships_discover::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gattc_write::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gattc_write::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gatts_attr_get::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gatts_attr_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gatts_characteristic_add::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gatts_characteristic_add::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gatts_descriptor_add::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gatts_descriptor_add::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gatts_exchange_mtu_reply::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gatts_exchange_mtu_reply::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gatts_hvx::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gatts_hvx::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gatts_include_add::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gatts_include_add::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gatts_initial_user_handle_get::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gatts_initial_user_handle_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gatts_rw_authorize_reply::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gatts_rw_authorize_reply::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gatts_service_add::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gatts_service_add::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gatts_service_changed::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gatts_service_changed::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gatts_sys_attr_get::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gatts_sys_attr_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gatts_sys_attr_set::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gatts_sys_attr_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gatts_value_get::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gatts_value_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_gatts_value_set::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_gatts_value_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_opt_get::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_opt_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_opt_set::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_opt_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_user_mem_reply::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_user_mem_reply::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_uuid_decode::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_uuid_decode::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_uuid_encode::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_uuid_encode::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_uuid_vs_add::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_uuid_vs_add::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for sd_ble_version_get::{lambda(unsigned char*, unsigned int*)#1}
 r typeinfo name for sd_ble_version_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}
 r typeinfo name for std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<H5Transport::startStateMachine()::{lambda()#1} ()> >, std::allocator<std::thread::_Impl<std::_Bind_simple<H5Transport::startStateMachine()::{lambda()#1} ()> > >, (__gnu_cxx::_Lock_policy)2>
 r typeinfo name for std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<SerializationTransport::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (ble_evt_t*)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> >, std::allocator<std::thread::_Impl<std::_Bind_simple<SerializationTransport::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (ble_evt_t*)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> > >, (__gnu_cxx::_Lock_policy)2>
 r typeinfo name for std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<UartBoost::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (unsigned char const*, unsigned long)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> >, std::allocator<std::thread::_Impl<std::_Bind_simple<UartBoost::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (unsigned char const*, unsigned long)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> > >, (__gnu_cxx::_Lock_policy)2>
 r typeinfo name for std::thread::_Impl<std::_Bind_simple<H5Transport::startStateMachine()::{lambda()#1} ()> >
 r typeinfo name for std::thread::_Impl<std::_Bind_simple<SerializationTransport::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (ble_evt_t*)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> >
 r typeinfo name for std::thread::_Impl<std::_Bind_simple<UartBoost::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (unsigned char const*, unsigned long)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> >
 readv@@GLIBC_2.2.5
 std::_Rb_tree_decrement(std::_Rb_tree_node_base*)@@GLIBCXX_3.4
 std::_Rb_tree_increment(std::_Rb_tree_node_base const*)@@GLIBCXX_3.4
 std::_Rb_tree_increment(std::_Rb_tree_node_base*)@@GLIBCXX_3.4
 std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)@@GLIBCXX_3.4
 std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)@@GLIBCXX_3.4
 std::_V2::error_category::_M_message(int) const@@GLIBCXX_3.4.21
 std::_V2::error_category::default_error_condition(int) const@@GLIBCXX_3.4.21
 std::_V2::error_category::equivalent(int, std::error_condition const&) const@@GLIBCXX_3.4.21
 std::_V2::error_category::equivalent(std::error_code const&, int) const@@GLIBCXX_3.4.21
 std::_V2::error_category::~error_category()@@GLIBCXX_3.4.21
 std::_V2::system_category()@@GLIBCXX_3.4.21
 std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)@@GLIBCXX_3.4.15
 std::__throw_bad_alloc()@@GLIBCXX_3.4
 std::__throw_bad_cast()@@GLIBCXX_3.4
 std::__throw_bad_function_call()@@GLIBCXX_3.4.14
 std::__throw_length_error(char const*)@@GLIBCXX_3.4
 std::__throw_logic_error(char const*)@@GLIBCXX_3.4
 std::__throw_out_of_range(char const*)@@GLIBCXX_3.4
 std::__throw_system_error(int)@@GLIBCXX_3.4.11
 std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*)@@GLIBCXX_3.4
 std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@@GLIBCXX_3.4.9
 std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@@GLIBCXX_3.4
 std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@@GLIBCXX_3.4
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)@@GLIBCXX_3.4
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&)@@GLIBCXX_3.4
 std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const@@GLIBCXX_3.4
 std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::basic_stringstream(std::_Ios_Openmode)@@GLIBCXX_3.4
 std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_stringstream()@@GLIBCXX_3.4
 std::cerr@@GLIBCXX_3.4
 std::chrono::_V2::system_clock::now()@@GLIBCXX_3.4.19
 std::condition_variable::condition_variable()@@GLIBCXX_3.4.11
 std::condition_variable::notify_all()@@GLIBCXX_3.4.11
 std::condition_variable::notify_one()@@GLIBCXX_3.4.11
 std::condition_variable::wait(std::unique_lock<std::mutex>&)@@GLIBCXX_3.4.11
 std::condition_variable::~condition_variable()@@GLIBCXX_3.4.11
 std::ctype<char>::_M_widen_init() const@@GLIBCXX_3.4.11
 std::exception::~exception()@@GLIBCXX_3.4
 std::ios_base::Init::Init()@@GLIBCXX_3.4
 std::ios_base::Init::~Init()@@GLIBCXX_3.4
 std::ios_base::ios_base()@@GLIBCXX_3.4
 std::ios_base::~ios_base()@@GLIBCXX_3.4
 std::locale::locale()@@GLIBCXX_3.4
 std::locale::~locale()@@GLIBCXX_3.4
 std::logic_error::logic_error(char const*)@@GLIBCXX_3.4.21
 std::logic_error::what() const@@GLIBCXX_3.4
 std::logic_error::~logic_error()@@GLIBCXX_3.4
 std::ostream& std::ostream::_M_insert<bool>(bool)@@GLIBCXX_3.4.9
 std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@@GLIBCXX_3.4.9
 std::ostream::flush()@@GLIBCXX_3.4
 std::ostream::operator<<(int)@@GLIBCXX_3.4
 std::ostream::put(char)@@GLIBCXX_3.4
 std::out_of_range::out_of_range(char const*)@@GLIBCXX_3.4.21
 std::out_of_range::out_of_range(std::string const&)@@GLIBCXX_3.4
 std::out_of_range::~out_of_range()@@GLIBCXX_3.4
 std::runtime_error::runtime_error(std::string const&)@@GLIBCXX_3.4
 std::string::_Rep::_M_destroy(std::allocator<char> const&)@@GLIBCXX_3.4
 std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&)@@GLIBCXX_3.4
 std::string::_Rep::_S_empty_rep_storage@@GLIBCXX_3.4
 std::string::assign(std::string const&)@@GLIBCXX_3.4
 std::string::compare(char const*) const@@GLIBCXX_3.4
 std::string::insert(unsigned long, char const*, unsigned long)@@GLIBCXX_3.4
 std::string::swap(std::string&)@@GLIBCXX_3.4
 std::system_error::~system_error()@@GLIBCXX_3.4.11
 std::terminate()@@GLIBCXX_3.4
 std::thread::_M_start_thread(std::shared_ptr<std::thread::_Impl_base>, void (*)())@@GLIBCXX_3.4.21
 std::thread::join()@@GLIBCXX_3.4.11
 strcmp@@GLIBC_2.2.5
 strerror_r@@GLIBC_2.2.5
 strlen@@GLIBC_2.2.5
 strncasecmp@@GLIBC_2.2.5
 strncpy@@GLIBC_2.2.5
 t H5Transport::hciPacketLinkControlToString(std::vector<unsigned char, std::allocator<unsigned char> > const&)::{lambda(unsigned char)#1}::operator()(unsigned char) const
 t H5Transport::~H5Transport() [clone .localalias.197]
 t UartBoost::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (unsigned char const*, unsigned long)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1}::operator()() const [clone .constprop.247]
 t _GLOBAL__sub_I_app_ble_gap.cpp
 t _GLOBAL__sub_I_h5_transport.cpp
 t _GLOBAL__sub_I_sd_rpc_impl.cpp
 t _GLOBAL__sub_I_transport.cpp
 t _GLOBAL__sub_I_uart_boost.cpp
 t _GLOBAL__sub_I_uart_settings_boost.cpp
 t __do_global_dtors_aux
 t asio::detail::descriptor_read_op<asio::mutable_buffers_1, std::function<void (std::error_code, unsigned long)> >::ptr::reset() [clone .isra.191]
 t asio::detail::descriptor_write_op<asio::const_buffers_1, asio::detail::write_op<asio::serial_port, asio::mutable_buffers_1, asio::mutable_buffer const*, asio::detail::transfer_all_t, std::function<void (std::error_code, unsigned long)> > >::ptr::reset() [clone .isra.229]
 t asio::system_category() [clone .part.36]
 t deregister_tm_clones
 t frame_dummy
 t register_tm_clones
 t std::_Deque_iterator<unsigned char, unsigned char&, unsigned char*> std::__uninitialized_move_a<std::_Deque_iterator<unsigned char, unsigned char&, unsigned char*>, std::_Deque_iterator<unsigned char, unsigned char&, unsigned char*>, std::allocator<unsigned char> >(std::_Deque_iterator<unsigned char, unsigned char&, unsigned char*>, std::_Deque_iterator<unsigned char, unsigned char&, unsigned char*>, std::_Deque_iterator<unsigned char, unsigned char&, unsigned char*>, std::allocator<unsigned char>&) [clone .isra.232]
 t std::_Function_base::_Base_manager<H5Transport::setupStateMachine()::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<H5Transport::setupStateMachine()::{lambda()#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<H5Transport::setupStateMachine()::{lambda()#3}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<H5Transport::setupStateMachine()::{lambda()#4}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<H5Transport::setupStateMachine()::{lambda()#5}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<H5Transport::setupStateMachine()::{lambda()#6}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<H5Transport::setupStateMachine()::{lambda()#7}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<H5Transport::setupStateMachine()::{lambda()#8}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_cfg_set::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_cfg_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_enable::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_enable::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_addr_get::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_addr_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_addr_set::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_addr_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_adv_set_configure::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_adv_set_configure::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_adv_start::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_adv_start::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_adv_stop::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_adv_stop::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_appearance_get::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_appearance_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_appearance_set::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_appearance_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_auth_key_reply::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_auth_key_reply::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_authenticate::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_authenticate::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_conn_param_update::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_conn_param_update::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_conn_sec_get::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_conn_sec_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_connect::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_connect::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_connect_cancel::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_connect_cancel::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_data_length_update::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_data_length_update::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_device_identities_set::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_device_identities_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_device_name_get::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_device_name_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_device_name_set::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_device_name_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_disconnect::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_disconnect::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_encrypt::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_encrypt::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_keypress_notify::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_keypress_notify::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_lesc_dhkey_reply::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_lesc_dhkey_reply::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_lesc_oob_data_get::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_lesc_oob_data_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_lesc_oob_data_set::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_lesc_oob_data_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_phy_update::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_phy_update::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_ppcp_get::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_ppcp_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_ppcp_set::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_ppcp_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_privacy_get::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_privacy_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_privacy_set::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_privacy_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_rssi_get::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_rssi_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_rssi_start::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_rssi_start::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_rssi_stop::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_rssi_stop::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_scan_start::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_scan_start::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_scan_stop::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_scan_stop::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_sec_info_reply::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_sec_info_reply::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_sec_params_reply::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_sec_params_reply::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_tx_power_set::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_tx_power_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_whitelist_set::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gap_whitelist_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gattc_attr_info_discover::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gattc_attr_info_discover::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gattc_char_value_by_uuid_read::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gattc_char_value_by_uuid_read::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gattc_char_values_read::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gattc_char_values_read::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gattc_characteristics_discover::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gattc_characteristics_discover::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gattc_descriptors_discover::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gattc_descriptors_discover::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gattc_exchange_mtu_request::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gattc_exchange_mtu_request::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gattc_hv_confirm::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gattc_hv_confirm::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gattc_primary_services_discover::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gattc_primary_services_discover::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gattc_read::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gattc_read::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gattc_relationships_discover::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gattc_relationships_discover::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gattc_write::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gattc_write::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gatts_attr_get::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gatts_attr_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gatts_characteristic_add::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gatts_characteristic_add::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gatts_descriptor_add::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gatts_descriptor_add::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gatts_exchange_mtu_reply::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gatts_exchange_mtu_reply::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gatts_hvx::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gatts_hvx::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gatts_include_add::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gatts_include_add::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gatts_initial_user_handle_get::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gatts_initial_user_handle_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gatts_rw_authorize_reply::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gatts_rw_authorize_reply::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gatts_service_add::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gatts_service_add::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gatts_service_changed::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gatts_service_changed::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gatts_sys_attr_get::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gatts_sys_attr_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gatts_sys_attr_set::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gatts_sys_attr_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gatts_value_get::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gatts_value_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gatts_value_set::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_gatts_value_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_opt_get::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_opt_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_opt_set::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_opt_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_user_mem_reply::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_user_mem_reply::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_uuid_decode::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_uuid_decode::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_uuid_encode::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_uuid_encode::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_uuid_vs_add::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_uuid_vs_add::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_version_get::{lambda(unsigned char*, unsigned int*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<sd_ble_version_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_handler<h5_state_t (), H5Transport::setupStateMachine()::{lambda()#1}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<h5_state_t (), H5Transport::setupStateMachine()::{lambda()#2}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<h5_state_t (), H5Transport::setupStateMachine()::{lambda()#3}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<h5_state_t (), H5Transport::setupStateMachine()::{lambda()#4}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<h5_state_t (), H5Transport::setupStateMachine()::{lambda()#5}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<h5_state_t (), H5Transport::setupStateMachine()::{lambda()#6}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<h5_state_t (), H5Transport::setupStateMachine()::{lambda()#7}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<h5_state_t (), H5Transport::setupStateMachine()::{lambda()#8}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_cfg_set::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_enable::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_addr_get::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_addr_set::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_adv_set_configure::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_adv_start::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_adv_stop::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_appearance_get::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_appearance_set::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_auth_key_reply::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_authenticate::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_conn_param_update::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_conn_sec_get::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_connect::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_connect_cancel::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_data_length_update::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_device_identities_set::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_device_name_get::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_device_name_set::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_disconnect::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_encrypt::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_keypress_notify::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_lesc_dhkey_reply::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_lesc_oob_data_get::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_lesc_oob_data_set::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_phy_update::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_ppcp_get::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_ppcp_set::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_privacy_get::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_privacy_set::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_rssi_get::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_rssi_start::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_rssi_stop::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_scan_start::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_scan_stop::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_sec_info_reply::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_sec_params_reply::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_tx_power_set::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gap_whitelist_set::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gattc_attr_info_discover::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gattc_char_value_by_uuid_read::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gattc_char_values_read::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gattc_characteristics_discover::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gattc_descriptors_discover::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gattc_exchange_mtu_request::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gattc_hv_confirm::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gattc_primary_services_discover::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gattc_read::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gattc_relationships_discover::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gattc_write::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gatts_attr_get::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gatts_characteristic_add::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gatts_descriptor_add::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gatts_exchange_mtu_reply::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gatts_hvx::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gatts_include_add::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gatts_initial_user_handle_get::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gatts_rw_authorize_reply::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gatts_service_add::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gatts_service_changed::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gatts_sys_attr_get::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gatts_sys_attr_set::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gatts_value_get::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_gatts_value_set::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_opt_get::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_opt_set::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_user_mem_reply::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_uuid_decode::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_uuid_encode::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_uuid_vs_add::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int*), sd_ble_version_get::{lambda(unsigned char*, unsigned int*)#1}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_cfg_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_enable::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_addr_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_addr_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_adv_set_configure::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_adv_start::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_adv_stop::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_appearance_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_appearance_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_auth_key_reply::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_authenticate::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_conn_param_update::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_conn_sec_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_connect::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_connect_cancel::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_data_length_update::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_device_identities_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_device_name_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_device_name_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_disconnect::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_encrypt::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_keypress_notify::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_lesc_dhkey_reply::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_lesc_oob_data_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_lesc_oob_data_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_phy_update::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_ppcp_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_ppcp_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_privacy_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_privacy_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_rssi_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_rssi_start::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_rssi_stop::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_scan_start::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_scan_stop::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_sec_info_reply::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_sec_params_reply::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_tx_power_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gap_whitelist_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gattc_attr_info_discover::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gattc_char_value_by_uuid_read::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gattc_char_values_read::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gattc_characteristics_discover::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gattc_descriptors_discover::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gattc_exchange_mtu_request::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gattc_hv_confirm::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gattc_primary_services_discover::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gattc_read::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gattc_relationships_discover::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gattc_write::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gatts_attr_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gatts_characteristic_add::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gatts_descriptor_add::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gatts_exchange_mtu_reply::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gatts_hvx::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gatts_include_add::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gatts_initial_user_handle_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gatts_rw_authorize_reply::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gatts_service_add::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gatts_service_changed::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gatts_sys_attr_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gatts_sys_attr_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gatts_value_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_gatts_value_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_opt_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_opt_set::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_user_mem_reply::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_uuid_decode::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_uuid_encode::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_uuid_vs_add::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Function_handler<unsigned int (unsigned char*, unsigned int, unsigned int*), sd_ble_version_get::{lambda(unsigned char*, unsigned int, unsigned int*)#2}>::_M_invoke(std::_Any_data const&, unsigned char*&&, unsigned int&&, unsigned int*&&)
 t std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<H5Transport::startStateMachine()::{lambda()#1} ()> >, std::allocator<std::thread::_Impl<std::_Bind_simple<H5Transport::startStateMachine()::{lambda()#1} ()> > >, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
 t std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<H5Transport::startStateMachine()::{lambda()#1} ()> >, std::allocator<std::thread::_Impl<std::_Bind_simple<H5Transport::startStateMachine()::{lambda()#1} ()> > >, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
 t std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<H5Transport::startStateMachine()::{lambda()#1} ()> >, std::allocator<std::thread::_Impl<std::_Bind_simple<H5Transport::startStateMachine()::{lambda()#1} ()> > >, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
 t std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<H5Transport::startStateMachine()::{lambda()#1} ()> >, std::allocator<std::thread::_Impl<std::_Bind_simple<H5Transport::startStateMachine()::{lambda()#1} ()> > >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
 t std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<SerializationTransport::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (ble_evt_t*)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> >, std::allocator<std::thread::_Impl<std::_Bind_simple<SerializationTransport::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (ble_evt_t*)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> > >, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
 t std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<SerializationTransport::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (ble_evt_t*)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> >, std::allocator<std::thread::_Impl<std::_Bind_simple<SerializationTransport::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (ble_evt_t*)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> > >, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
 t std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<SerializationTransport::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (ble_evt_t*)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> >, std::allocator<std::thread::_Impl<std::_Bind_simple<SerializationTransport::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (ble_evt_t*)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> > >, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
 t std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<SerializationTransport::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (ble_evt_t*)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> >, std::allocator<std::thread::_Impl<std::_Bind_simple<SerializationTransport::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (ble_evt_t*)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> > >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
 t std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<UartBoost::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (unsigned char const*, unsigned long)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> >, std::allocator<std::thread::_Impl<std::_Bind_simple<UartBoost::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (unsigned char const*, unsigned long)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> > >, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
 t std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<UartBoost::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (unsigned char const*, unsigned long)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> >, std::allocator<std::thread::_Impl<std::_Bind_simple<UartBoost::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (unsigned char const*, unsigned long)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> > >, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
 t std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<UartBoost::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (unsigned char const*, unsigned long)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> >, std::allocator<std::thread::_Impl<std::_Bind_simple<UartBoost::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (unsigned char const*, unsigned long)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> > >, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
 t std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<UartBoost::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (unsigned char const*, unsigned long)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> >, std::allocator<std::thread::_Impl<std::_Bind_simple<UartBoost::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (unsigned char const*, unsigned long)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> > >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
 t std::string::_Rep::_M_dispose(std::allocator<char> const&) [clone .part.0]
 t std::string::_Rep::_M_dispose(std::allocator<char> const&) [clone .part.26]
 t std::string::_Rep::_M_dispose(std::allocator<char> const&) [clone .part.36]
 t std::string::_Rep::_M_dispose(std::allocator<char> const&) [clone .part.6]
 t std::thread::_Impl<std::_Bind_simple<H5Transport::startStateMachine()::{lambda()#1} ()> >::_M_run()
 t std::thread::_Impl<std::_Bind_simple<H5Transport::startStateMachine()::{lambda()#1} ()> >::~_Impl()
 t std::thread::_Impl<std::_Bind_simple<SerializationTransport::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (ble_evt_t*)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> >::_M_run()
 t std::thread::_Impl<std::_Bind_simple<SerializationTransport::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (ble_evt_t*)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> >::~_Impl()
 t std::thread::_Impl<std::_Bind_simple<UartBoost::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (unsigned char const*, unsigned long)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> >::_M_run()
 t std::thread::_Impl<std::_Bind_simple<UartBoost::open(std::function<void (sd_rpc_app_status_t, std::string const&)> const&, std::function<void (unsigned char const*, unsigned long)> const&, std::function<void (sd_rpc_log_severity_t, std::string const&)> const&)::{lambda()#1} ()> >::~_Impl()
 tcgetattr@@GLIBC_2.2.5
 tcsetattr@@GLIBC_2.2.5
 timerfd_create@@GLIBC_2.8
 timerfd_settime@@GLIBC_2.8
 typeinfo for std::_V2::error_category@@GLIBCXX_3.4.21
 typeinfo for std::exception@@GLIBCXX_3.4
 typeinfo for std::logic_error@@GLIBCXX_3.4
 typeinfo for std::out_of_range@@GLIBCXX_3.4
 typeinfo for std::system_error@@GLIBCXX_3.4.11
 u asio::detail::call_stack<asio::detail::strand_executor_service::strand_impl, unsigned char>::top_
 u asio::detail::call_stack<asio::detail::strand_service::strand_impl, unsigned char>::top_
 u asio::detail::call_stack<asio::detail::thread_context, asio::detail::thread_info_base>::top_
 u asio::detail::epoll_reactor::descriptor_state::perform_io(unsigned int)::flag
 u asio::detail::execution_context_service_base<asio::detail::epoll_reactor>::id
 u asio::detail::execution_context_service_base<asio::detail::scheduler>::id
 u asio::detail::keyword_tss_ptr<asio::detail::call_stack<asio::detail::thread_context, asio::detail::thread_info_base>::context>::value_
 u asio::detail::posix_global_impl<asio::system_context>::instance_
 u asio::detail::posix_global_impl<asio::system_context>::static_ptr_
 u asio::detail::service_base<asio::detail::reactive_descriptor_service>::id
 u asio::detail::service_base<asio::detail::reactive_serial_port_service>::id
 u asio::detail::service_base<asio::detail::signal_set_service>::id
 u asio::detail::service_base<asio::detail::strand_service>::id
 u asio::error::get_addrinfo_category()::instance
 u asio::error::get_misc_category()::instance
 u asio::error::get_netdb_category()::instance
 u asio::system_category()::instance
 u guard variable for asio::detail::call_stack<asio::detail::strand_executor_service::strand_impl, unsigned char>::top_
 u guard variable for asio::detail::call_stack<asio::detail::strand_service::strand_impl, unsigned char>::top_
 u guard variable for asio::detail::call_stack<asio::detail::thread_context, asio::detail::thread_info_base>::top_
 u guard variable for asio::detail::execution_context_service_base<asio::detail::epoll_reactor>::id
 u guard variable for asio::detail::execution_context_service_base<asio::detail::scheduler>::id
 u guard variable for asio::detail::posix_global_impl<asio::system_context>::instance_
 u guard variable for asio::detail::service_base<asio::detail::reactive_descriptor_service>::id
 u guard variable for asio::detail::service_base<asio::detail::reactive_serial_port_service>::id
 u guard variable for asio::detail::service_base<asio::detail::signal_set_service>::id
 u guard variable for asio::detail::service_base<asio::detail::strand_service>::id
 u guard variable for asio::error::get_addrinfo_category()::instance
 u guard variable for asio::error::get_misc_category()::instance
 u guard variable for asio::error::get_netdb_category()::instance
 u guard variable for asio::system_category()::instance
 udev_device_get_devnode@@LIBUDEV_183
 udev_device_get_parent_with_subsystem_devtype@@LIBUDEV_183
 udev_device_get_sysattr_value@@LIBUDEV_183
 udev_device_new_from_syspath@@LIBUDEV_183
 udev_device_unref@@LIBUDEV_183
 udev_enumerate_add_match_subsystem@@LIBUDEV_183
 udev_enumerate_get_list_entry@@LIBUDEV_183
 udev_enumerate_new@@LIBUDEV_183
 udev_enumerate_scan_devices@@LIBUDEV_183
 udev_enumerate_unref@@LIBUDEV_183
 udev_list_entry_get_name@@LIBUDEV_183
 udev_list_entry_get_next@@LIBUDEV_183
 udev_new@@LIBUDEV_183
 udev_unref@@LIBUDEV_183
 vsnprintf@@GLIBC_2.2.5
 vtable for __cxxabiv1::__class_type_info@@CXXABI_1.3
 vtable for __cxxabiv1::__si_class_type_info@@CXXABI_1.3
 vtable for __cxxabiv1::__vmi_class_type_info@@CXXABI_1.3
 vtable for std::basic_ios<char, std::char_traits<char> >@@GLIBCXX_3.4
 vtable for std::basic_streambuf<char, std::char_traits<char> >@@GLIBCXX_3.4
 vtable for std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >@@GLIBCXX_3.4
 vtable for std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >@@GLIBCXX_3.4
 vtable for std::logic_error@@GLIBCXX_3.4
 vtable for std::out_of_range@@GLIBCXX_3.4
 vtable for std::runtime_error@@GLIBCXX_3.4
 vtable for std::system_error@@GLIBCXX_3.4.11
 write@@GLIBC_2.2.5
 writev@@GLIBC_2.2.5
