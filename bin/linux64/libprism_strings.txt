
!
!! refusing to trigger minidump with debugger attached
!( pDedicatedBuffer && pDedicatedImage )
!IsDepthFormat( m_eFormat )
!IsInUse()
!bindings.empty()
!g_bTestMode
!g_pSharedResourceNamespaceServer
!m_displayImages.empty()
!m_stackFreeResources.empty()
!std::isnan( flSystemTimeInSeconds )
"
#
$
$+
%
%%.%dg
%F-%H-%M-%S
%Y-%m-%d
%Y-%m-%d %I:%M:%S %p
%a %b %d %H:%M:%S %Y
%a %b %d %Y %H:%M:%S.%%06u
%d.%d.%d.%d
%d.%d.%d.%d:%u
%llu
%p
%s
%s %s
%s begin_ctx=%lu
%s dtime=%d begin_ctx=%lu
%s dtime=%d end_ctx=%lu
%s end_ctx=%lu
%s%c%s
%s%s
%s%s%s%s%s
%s(%s): concurrent batches not allowed
%s-CommandBuffer-%d
%s-Depth
%s-Image
%s-Image %d
%s-ImageView
%s-Memory
%s-ShaderModule
%s: An error occurred while recording command buffer: %s
%s: Applying radv vkGetDisplayPlaneSupportedDisplayKHR workaround
%s: Failed to acquire vulkan display
%s: Failed to allocate command buffer: %d
%s: Failed to allocate memory
%s: Failed to begin command buffer
%s: Failed to create command buffer pool: %d
%s: Failed to create vulkan device: %d
%s: Failed to determine a compatible memory type
%s: Failed to enumerate memory types
%s: Failed to get queue: %u:%u
%s: Failed to import client layers id=%d
%s: Failed to import client swapchain image: %s
%s: Failed to import client timeline id=%d
%s: Failed to initialize compute queue.
%s: Failed to initialize graphics queue.
%s: Failed to query atom number for %s
%s: Failed to reset command buffer: %d
%s: Failed to submit to queue: %u:%u
%s: Insufficient permission to create high priority queue.
%s: Interdependent timelines are not supported
%s: Swapchain has no images
%s: __pos (which is %zu) > this->size() (which is %zu)
%s: allocator not initialized
%s: already created
%s: at least one signal point is required
%s: attempt to block on incomplete query set: %s
%s: attempted to add additional compute stage to compute pipeline
%s: attempted to add stage to already initalized pipeline
%s: attempted to bind a non-initalized pipeline
%s: attempted to bind a pipeline with no valid stages
%s: attempted to dispatch a non-compute pipeline
%s: attempted to draw a compute pipeline
%s: attempted to initialize already initalized pipeline
%s: attempted to initialize pipeline with no valid stages
%s: client resources cleared without leaving clientid intact!
%s: cmdbuf references a resource that has been released: %s
%s: concurrent sharing mode requires queue family indices
%s: device does not support compute shader derivatives group quad.
%s: device does not support host query reset.
%s: device does not support reliable realtime compute queue creation.
%s: device does not support timeline semaphores.
%s: device supports zero extensions
%s: device supports zero instance extensions
%s: failed get device extension count
%s: failed initializing graphics command pool for visible area mask
%s: failed submitting visible area mask rendering
%s: failed to allocate buffer memory
%s: failed to allocate descriptor sets (err=%d)
%s: failed to allocate image memory
%s: failed to allocate memory for query pool
%s: failed to bind buffer memory (%d)
%s: failed to bind image memory (%d)
%s: failed to create a vulkan instance
%s: failed to create attentuation texture
%s: failed to create blank image
%s: failed to create buffer (%d)
%s: failed to create command batch pool %d
%s: failed to create compute command pool
%s: failed to create compute pipeline (err=%d)
%s: failed to create default sampler
%s: failed to create depth image for %s
%s: failed to create descriptor pool (err=%d)
%s: failed to create descriptor set layout (err=%d)
%s: failed to create display surface
%s: failed to create downsample image
%s: failed to create downsample vertex buffer
%s: failed to create framebuffer for %s
%s: failed to create graphics command pool
%s: failed to create graphics pipeline (err=%d)
%s: failed to create history buffer
%s: failed to create image view (%d)
%s: failed to create instance
%s: failed to create mapped memory view
%s: failed to create maskedRgb image
%s: failed to create motion estimation input buffers
%s: failed to create null client layers uniform buffer
%s: failed to create panel mask
%s: failed to create panel mask framebuffer
%s: failed to create panel mask texture
%s: failed to create pipeline layout (err=%d)
%s: failed to create render pass
%s: failed to create reproject index buffer
%s: failed to create reproject vertex buffer
%s: failed to create shader module (err=%d)
%s: failed to create swap chain framebuffer
%s: failed to create swapchain
%s: failed to create swapchain sampler
%s: failed to create timeline
%s: failed to create timestamp query pool
%s: failed to create visible area index buffer
%s: failed to create visible area mask image
%s: failed to create visible area mask sampler
%s: failed to create visible area mask timeline
%s: failed to create visible area vertex buffer
%s: failed to create vulkan image (%d)
%s: failed to create vulkan instance %d
%s: failed to enumerate extensions
%s: failed to enumerate instance extensions
%s: failed to enumerate physical devices
%s: failed to enumerate swapchain images
%s: failed to export memory (%d)
%s: failed to export timeline %s
%s: failed to find a compatible format
%s: failed to find a compatible plane
%s: failed to find swapchain id=%d
%s: failed to find variant for image format %d
%s: failed to generate visible area mesh
%s: failed to get gpu timing for frame %lu
%s: failed to get instance extension count
%s: failed to get number of present modes
%s: failed to get physical device count
%s: failed to get plane properties
%s: failed to get plane property count
%s: failed to get query pool results
%s: failed to import buffer IPC handle
%s: failed to import image IPC handle
%s: failed to import remaining client objects
%s: failed to import timeline %s
%s: failed to import timeline IPC handle
%s: failed to initialize compute timeline
%s: failed to initialize frame hallucination
%s: failed to initialize graphics timeline
%s: failed to initialize motion estimation
%s: failed to initialize motion smoothing
%s: failed to initialize query pool
%s: failed to initialize timeline
%s: failed to initialize vulkan device
%s: failed to load available layers
%s: failed to load instance extensions
%s: failed to map vulkan memory
%s: failed to present HMD image
%s: failed to query display modes
%s: failed to query number of display modes
%s: failed to query number of supported formats
%s: failed to query supported formats
%s: failed to query surface capabilities
%s: failed to register debug callback
%s: failed to set debug name
%s: failed to signal timeline semaphore: %d
%s: failed to submit gpu work
%s: failed to wait for a timeline signal
%s: failed to wait for present
%s: failed to wait for semaphore
%s: failed to wait for swapchain image
%s: failed to wrap swapchain image
%s: failed waiting for visible area mask rendering to complete
%s: feature hostQueryReset missing
%s: high priority compute requested, but %s is missing
%s: incompatible vulkan version requested
%s: invalid device
%s: invalid direction %d
%s: invalid display mode
%s: invalid instance
%s: invalid parameter
%s: invalid projection matrix
%s: invalid swapchain image index: %d
%s: invalid type (%d)
%s: invalid vulkan device
%s: is the Vulkan SDK installed?
%s: mismatched sizes
%s: missing optional device extension %s
%s: missing optional instance extension %s
%s: missing required device extension %s
%s: missing required device extension: %s
%s: missing required instance extension %s
%s: missing required layer: %s
%s: missing validation layer extension %s
%s: multiple vertex stages specified for %s
%s: no compatible vulkan devices detected
%s: no timelines
%s: no valid quads
%s: physical device does not support the requested timeline handle type
%s: physical device does not support timeline export
%s: physical device does not support timeline import
%s: pool contained invalid data
%s: post-submit failed
%s: pre-submit failed
%s: replacing existing client layers uniform buffer id=%d
%s: replacing existing client swapchain id=%d (CurrentPid=%d NewPid=%d)
%s: surface does not support presentation from the compute queue
%s: swapchain data cleared without leaving clientid intact!
%s: timed out while importing client layers uniform buffer, will continue on next frame
%s: timed out while importing client samplers, will continue on next frame
%s: timed out while importing client swapchains, will continue on next frame
%s: too many vertices
%s: unexpected edid size
%s: unknown vulkan message severity
%s: unsupported format
%s: usage must be specified when allocating images
&
'
' is not a number.
(
( nVertexCount % 3 ) == 0
(anonymous namespace)::CDisplayFactoryHandleMap::~CDisplayFactoryHandleMap()
(anonymous namespace)::CDisplayHandleMap::~CDisplayHandleMap()
(anonymous namespace)::CFrameHallucinationPrivate::CDestinationFrameInfo::~CDestinationFrameInfo()
(anonymous namespace)::CHandleMap<void*, (anonymous namespace)::CPrismInstance, (PrismResult_t)-100>::~CHandleMap()
(anonymous namespace)::CMotionEstimatorHandleMap::~CMotionEstimatorHandleMap()
(anonymous namespace)::CPoseProviderHandleMap::~CPoseProviderHandleMap()
(anonymous namespace)::CPrismInstance::LogCallback(ELogLevel, char const*, void*)
(anonymous namespace)::CPrismInstance::s_mutex
(anonymous namespace)::CPrismInstance::s_nInstanceCount
(anonymous namespace)::DisplayFactories()
(anonymous namespace)::DisplayFactories()::s_displayFactories
(anonymous namespace)::Displays()
(anonymous namespace)::Displays()::s_displays
(anonymous namespace)::EnumerateDisplaysVulkan(VkPhysicalDevice_T*)::s_validNames
(anonymous namespace)::GetXcbAtom(xcb_connection_t*, char*)
(anonymous namespace)::GetXcbEdid(xcb_connection_t*, unsigned int)::s_edidAtoms
(anonymous namespace)::Instances()
(anonymous namespace)::Instances()::s_instances
(anonymous namespace)::IsHMDDisplay(std::vector<unsigned char, std::allocator<unsigned char> > const&)::hmdVendorIds
(anonymous namespace)::MotionEstimators()
(anonymous namespace)::MotionEstimators()::s_motionEstimators
(anonymous namespace)::PoseProviders()
(anonymous namespace)::PoseProviders()::s_poseProviders
(anonymous namespace)::ReprojectVertex(glm::mat<4, 4, float, (glm::qualifier)0> const&, glm::mat<4, 4, float, (glm::qualifier)0> const&, vr::HmdVector2_t const&, glm::vec<2, float, (glm::qualifier)0>&) [clone .isra.0]
(anonymous namespace)::ReprojectVertices(glm::mat<4, 4, float, (glm::qualifier)0> const&, glm::mat<4, 4, float, (glm::qualifier)0> const&, unsigned int, vr::HmdVector2_t const*, glm::vec<2, float, (glm::qualifier)0>*, bool)
(anonymous namespace)::k_bindings
(anonymous namespace)::k_debugUtilsLabelColors
(anonymous namespace)::k_displayInfo
(anonymous namespace)::k_nAttenuationBytecode
(anonymous namespace)::k_nCopyBytecode
(anonymous namespace)::k_nCostReduceBytecode
(anonymous namespace)::k_nDownsampleFragBytecode
(anonymous namespace)::k_nDownsampleVertBytecode
(anonymous namespace)::k_nFragBytecode
(anonymous namespace)::k_nLumaFragBytecode
(anonymous namespace)::k_nLumaVertBytecode
(anonymous namespace)::k_nMainBytecode
(anonymous namespace)::k_nMaskFragBytecode
(anonymous namespace)::k_nMaskVertBytecode
(anonymous namespace)::k_nMeanMaxBlurBytecode
(anonymous namespace)::k_nMedian5x5Bytecode
(anonymous namespace)::k_nReprojectFragBytecode
(anonymous namespace)::k_nReprojectVertBytecode
(anonymous namespace)::k_nThresholdBytecode
(anonymous namespace)::k_nVertBytecode
(anonymous namespace)::k_pColors
(anonymous namespace)::k_pType
(anonymous namespace)::rdoc_api
(anonymous namespace)::sg_vulkanDisplays
)
*
********** Blue ( nLoopCount++ > 1000 )!
********** Green ( nLoopCount++ > 1000 )!
********** Red ( nLoopCount++ > 1000 )!
*.*
*N12_GLOBAL__N_126CFrameHallucinationPrivate21CDestinationFrameInfoE
*NSt6thread11_State_implINS_8_InvokerISt5tupleIJZN12_GLOBAL__N_114CPrismInstance5StartEPK20PrismRunParameters_tEUlS5_E_S5_EEEEEE
*NSt6thread11_State_implINS_8_InvokerISt5tupleIJZN22CThreadWatchdogManager13InitWatchdogsEvEUlvE_EEEEEE
*ZN15CPrismPanelMask10InitializeEP12CVkAllocatorP18IPrismPoseProviderfEUlN2vr6EVREyeEffPNS4_23DistortionCoordinates_tEE_
+
,
, last executing in
-
- Root 0x%x
- Vulkan output %d: %ux%u resolution, %ux%u dimensions - %s
-1e+9999
-Infinity
.
./obj_prism_linux64/release/libprism.so
.tmp
/
/data/src/common/vrcore/src/ipcpipe.cpp
/data/src/common/vrcore/src/ipcposix.cpp
/data/src/common/vrcore/src/logbuffer.cpp
/data/src/common/vrcore/src/sharedresourcenamespace.cpp
/data/src/common/vrcore/src/strtools_public.cpp
/data/src/common/vrcore/src/threadtools.cpp
/data/src/common/vrcore/src/threadwatchdog.cpp
/data/src/common/vrcore/src/vrcrash.cpp
/data/src/common/vrcore/src/vripcsharedstate.cpp
/data/src/facet/include/facet/vkalloc.h
/data/src/facet/include/facet/vkcommand.h
/data/src/facet/include/facet/vkquery.h
/data/src/facet/include/facet/vkresource.h
/data/src/facet/include/facet/vkresourcepool.h
/data/src/facet/include/facet/vktimelinepoint.h
/data/src/facet/src/facetutils.cpp
/data/src/facet/src/meshutils.cpp
/data/src/facet/src/panelmask.cpp
/data/src/facet/src/vkalloc.cpp
/data/src/facet/src/vkcommand.cpp
/data/src/facet/src/vkcommandbatch.cpp
/data/src/facet/src/vkdevice.cpp
/data/src/facet/src/vkimagehistory.cpp
/data/src/facet/src/vkresource.cpp
/data/src/facet/src/vkshaderpipeline.cpp
/data/src/facet/src/vksync.cpp
/data/src/facet/src/vkutils.cpp
/data/src/prism/src/clientswapchain.cpp
/data/src/prism/src/framehallucination.cpp
/data/src/prism/src/motionestimation.cpp
/data/src/prism/src/motionsmoothing.cpp
/data/src/prism/src/prism.cpp
/data/src/prism/src/prism_capi.cpp
/data/src/prism/src/prismclient.cpp
/data/src/prism/src/prismdisplay_vulkan.cpp
/data/src/prism/src/prismpanelmask.cpp
/data/src/prism/src/prismposeprovider_null.cpp
/dev/null
/e%s%s
/etc/os-release
/proc
/proc/%u/stat
/proc/self/exe
/proc/self/status
/sys/kernel/debug/tracing/trace_marker
/sys/kernel/tracing/trace_marker
/tmp/.steam-sem-names
/u%d-%s-ValveIPCSharedObj-SteamVR
/u%d-Shm_%x
0
0+
00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899
0123456789ABCDEF
1
11CVkTimeline
12CNonCopyable
15CVkResourcePoolI16CVkCommandBufferE
16CVkCommandBuffer
18:27:34
18CPrismDisplay_Null
18IPrismPoseProvider
19CVkGarbageCollector
19CVkPoolableResourceI20CVkCommandBufferPoolE
1e+9999
2
20CPrismDisplay_Vulkan
20CVkCommandBufferPool
20IPrismDisplayFactory
23CPrismPoseProvider_Null
23CVkPoolGarbageCollectorI16CVkCommandBufferE
3
30CSharedResourceNamespaceServer
33s?+
4
5
6
6CPrism
7
7CThread
8
8CVkImage
9
9CVkBuffer
:
: exception thrown in JSON library
;
<
<non-buildbot build>
<unknown>
=
>
?
?+
?,
@
@6
@;
@D!
A
A valid JSON document must be either an array or an object value.
ASSERT: "%s" at %s:%d.
AbortMessage({ Thread Watchdog Abort - %s /+/ %f second timeout })
AddComputeStage
AddDescriptorSet
AddDescriptorSet and CopyDescriptorSets are mutually exclusive.
AddStage
AddStage and CopyStages are mutually exclusive.
All
AllocSharedMemory failed
AllocateMemory
AllocateMemoryFromType
Apply blur filter
Apply median filter
Attempt to init shared state %s twice
Attempted to write %zd bytes and ended up writing 0. Closing the pipe
Automatically quitting due to idle time > %f seconds.
B
BCreateDirectory(char const*)
BCreateDirectoryRecursive(char const*)
BCreateDirectoryRecursive(char const*) [clone .cold]
BIsCrashReportingDisabled()
BIsCrashReportingDisabled() [clone .cold]
BIsCrashReportingDisabled()::s_bFiguredOutIfDisabled
BIsCrashReportingDisabled()::s_bIsReportingDisabled
BSharedResourceNamespaceAvailable()
BSharedResourceNamespaceAvailable() [clone .cold]
BSharedResourceNamespaceInTestMode()
BSharedResourceNamespaceTryOneInit()
Bad Access flag on shared mem create: %s: %u
Bad escape sequence in string
Bad unicode escape sequence in string: four digits expected.
Bad unicode escape sequence in string: hexadecimal digit expected.
Begin
Blank
BorrowResource
Bucket: size:%zu timeline:%s
Bucket: size:%zu timeline:none
C
CAssert::AddCallback(CAssertCallback*)
CAssert::AddCallback(CAssertCallback*) [clone .cold]
CAssert::AssertMsgImpl(char const*, unsigned int, bool, unsigned int, ...)
CAssert::AssertMsgImpl(char const*, unsigned int, bool, unsigned int, ...) [clone .cold]
CAssert::GetInstance()
CAssert::GetInstance() [clone .cold]
CAssert::RemoveCallback(CAssertCallback*)
CAssert::m_mutex
CAssert::m_pInstance
CAssertCallback::Initialize(std::function<void (char const*, char const*, unsigned int, bool, void*, bool*)>, void*)
CAssertCallback::Initialize(std::function<void (char const*, char const*, unsigned int, bool, void*, bool*)>, void*) [clone .cold]
CAssertCallback::~CAssertCallback()
CAutoLockAndDrainLogOnExit::~CAutoLockAndDrainLogOnExit()
CClientSwapchain::Import(CVkDevice*, CVkAllocator*, SwapchainState_t const&, unsigned int)
CClientSwapchain::Import(CVkDevice*, CVkAllocator*, SwapchainState_t const&, unsigned int) [clone .cold]
CClientSwapchain::ImportSampler(CVkDevice*, VkSamplerCreateInfo const&)
CCountedMutexWithLogCache::Log(char const*, ...)
CCountedMutexWithLogCache::Log(char const*, ...) [clone .cold]
CDirIterator::BCurrentIsDir() const
CDirIterator::BCurrentIsHidden() const
CDirIterator::BCurrentIsMarkedForArchive() const
CDirIterator::BCurrentIsReadOnly() const
CDirIterator::BCurrentIsSystem() const
CDirIterator::BNextFile()
CDirIterator::BValidFilename()
CDirIterator::CDirIterator(char const*, char const*)
CDirIterator::CDirIterator(char const*, char const*) [clone .cold]
CDirIterator::CurrentFileCreateTime() const
CDirIterator::CurrentFileLength() const
CDirIterator::CurrentFileName()
CDirIterator::CurrentFileWriteTime() const
CDirIterator::Init(std::string const&)
CDirIterator::IsValid() const
CDirIterator::~CDirIterator()
CFrameHallucination::CFrameHallucination(CVkDevice*)
CFrameHallucination::CFrameHallucination(CVkDevice*) [clone .cold]
CFrameHallucination::CmdFilterMotionVectors(CVkCommandBuffer*, vr::EVREye, float, unsigned long, CVkImage*, CVkImage*, unsigned long, unsigned long)
CFrameHallucination::CmdFilterMotionVectors(CVkCommandBuffer*, vr::EVREye, float, unsigned long, CVkImage*, CVkImage*, unsigned long, unsigned long) [clone .cold]
CFrameHallucination::CmdGenerateFrame(CVkCommandBuffer*, vr::EVREye, float, unsigned long, CFrameHallucination::IDestinationFrameInfo*, CFrameHallucination::FrameInfo_t const&, VkSampler_T*)
CFrameHallucination::CmdGenerateFrame(CVkCommandBuffer*, vr::EVREye, float, unsigned long, CFrameHallucination::IDestinationFrameInfo*, CFrameHallucination::FrameInfo_t const&, VkSampler_T*) [clone .cold]
CFrameHallucination::CreateDepthImage(CVkAllocator*, CVkImage*)
CFrameHallucination::CreateDepthImage(CVkAllocator*, CVkImage*) [clone .cold]
CFrameHallucination::CreateFilterResources(CVkAllocator*)
CFrameHallucination::CreateFilterResources(CVkAllocator*) [clone .cold]
CFrameHallucination::CreateFramebuffer(CVkImage*, CVkImage*, VkRenderPass_T*)
CFrameHallucination::CreateInputResources(CVkAllocator*)
CFrameHallucination::CreateInputResources(CVkAllocator*) [clone .cold]
CFrameHallucination::CreateRenderPass(VkFormat)
CFrameHallucination::CreateVariant(VkFormat, CFrameHallucination::Variant_t&)
CFrameHallucination::CreateVariant(VkFormat, CFrameHallucination::Variant_t&) [clone .cold]
CFrameHallucination::DestroyVariant(CFrameHallucination::Variant_t&)
CFrameHallucination::FindVariant(VkFormat, CFrameHallucination::Variant_t&)
CFrameHallucination::GetInputBuffer(vr::EVREye)
CFrameHallucination::IDestinationFrameInfo::~IDestinationFrameInfo()
CFrameHallucination::InitAttenuationPipeline()
CFrameHallucination::InitAttenuationPipeline() [clone .cold]
CFrameHallucination::InitCostReducePipeline()
CFrameHallucination::InitCostReducePipeline() [clone .cold]
CFrameHallucination::InitFrameHallucinationPipeline()
CFrameHallucination::InitFrameHallucinationPipeline() [clone .cold]
CFrameHallucination::InitMeanMaxBlurPipeline()
CFrameHallucination::InitMeanMaxBlurPipeline() [clone .cold]
CFrameHallucination::InitMedian5x5Pipeline()
CFrameHallucination::InitMedian5x5Pipeline() [clone .cold]
CFrameHallucination::InitThresholdPipeline()
CFrameHallucination::InitThresholdPipeline() [clone .cold]
CFrameHallucination::Initialize(CMotionEstimation*, CVkAllocator*)
CFrameHallucination::PerEyeData_t::~PerEyeData_t()
CFrameHallucination::RegisterDestinationImage(CFrameHallucination::FrameInfo_t const&, CVkAllocator*)
CFrameHallucination::RegisterDestinationImage(CFrameHallucination::FrameInfo_t const&, CVkAllocator*) [clone .cold]
CFrameHallucination::SetFov(vr::EVREye, glm::mat<4, 4, float, (glm::qualifier)0> const&, CVkAllocator*)
CFrameHallucination::SetFov(vr::EVREye, glm::mat<4, 4, float, (glm::qualifier)0> const&, CVkAllocator*) [clone .cold]
CFrameHallucination::Shutdown()
CFrameHallucination::UpdateBindings(CVkShaderPipeline&, vr::EVREye, std::vector<CVkImage*, std::allocator<CVkImage*> > const&)
CFrameHallucination::UpdateBindings(CVkShaderPipeline&, vr::EVREye, std::vector<CVkImage*, std::allocator<CVkImage*> > const&) [clone .cold]
CFrameHallucination::~CFrameHallucination()
CIPCPipe::CIPCPipe()
CIPCPipe::ClosePipe()
CIPCPipe::ClosePipe() [clone .cold]
CIPCPipe::ConnectPipe(%s) attempting connect to %s
CIPCPipe::ConnectPipe(char const*, bool)
CIPCPipe::ConnectPipe(char const*, bool) [clone .cold]
CIPCPipe::CreatePipe(%s) bound to %s
CIPCPipe::CreatePipe(char const*, bool)
CIPCPipe::CreatePipe(char const*, bool) [clone .cold]
CIPCPipe::CreatePipeInternal()
CIPCPipe::CreatePipeInternal() [clone .cold]
CIPCPipe::GetEndpointProcess() const
CIPCPipe::GetEndpointProcessId() const
CIPCPipe::GetMessagePayload(void*, unsigned int)
CIPCPipe::GetNextMessage(%s) invalid wait status %d
CIPCPipe::GetNextMessage(unsigned int*, unsigned int*, unsigned int*, unsigned int)
CIPCPipe::IsValid() const
CIPCPipe::SendMessageInternal(void*, unsigned int)
CIPCPipe::SendMessageInternal(void*, unsigned int) [clone .cold]
CIPCPipe::SendPackedMessage(unsigned int, unsigned int, void const*, unsigned int)
CIPCPipe::SendPackedMessage(unsigned int, unsigned int, void const*, unsigned int) [clone .cold]
CIPCPipe::SendSimpleMessage(unsigned int, unsigned int)
CIPCPipe::SendSimpleMessage(unsigned int, unsigned int) [clone .cold]
CIPCPipe::UpdatePipeValidity()
CIPCPipe::UpdatePipeValidity() [clone .cold]
CIPCPipe::WaitForConnection(%s): Invalid wait status %d
CIPCPipe::WaitForConnection(%s): accept failed with error %d
CIPCPipe::WaitForConnection(unsigned int, CIPCPipe**)
CIPCPipe::WaitForConnection(unsigned int, CIPCPipe**) [clone .cold]
CIPCPipe::WaitForData(%s): poll failed on listening socket: errno=%d
CIPCPipe::WaitForData(unsigned int)
CIPCPipe::~CIPCPipe()
CLIENT: I:%6dC:%6dS:%6dP:%6d[%d|%d]
CLog::AddCallback(CLogCallback*)
CLog::AddCallback(CLogCallback*) [clone .cold]
CLog::GetInstance()
CLog::GetInstance() [clone .cold]
CLog::Log(ELogLevel, char const*, ...)
CLog::Log(ELogLevel, char const*, __va_list_tag (&) [1])
CLog::Log(ELogLevel, char const*, __va_list_tag (&) [1]) [clone .cold]
CLog::RemoveCallback(CLogCallback*)
CLog::s_mutex
CLog::s_pInstance
CLogBuffer::CLogBuffer()
CLogBuffer::CLogBuffer() [clone .cold]
CLogBuffer::CopyLogBuffer()
CLogBuffer::CopyLogBuffer() [clone .cold]
CLogBuffer::DiscardExcessLogBuffering()
CLogBuffer::DiscardExcessLogBuffering() [clone .cold]
CLogBuffer::DumpLogBufferToBuffer(char*, unsigned long)
CLogBuffer::GetInstance()
CLogBuffer::GetInstance() [clone .cold]
CLogBuffer::SetBufferLimit(unsigned long)
CLogBuffer::SetBufferLimit(unsigned long) [clone .cold]
CLogBuffer::s_pInstance
CLogCallback::Initialize(std::function<void (ELogLevel, char const*, void*)>, void*)
CLogCallback::Initialize(std::function<void (ELogLevel, char const*, void*)>, void*) [clone .cold]
CLogCallback::~CLogCallback()
CMotionEstimation::CMotionEstimation(CVkDevice*)
CMotionEstimation::CMotionEstimation(CVkDevice*) [clone .cold]
CMotionEstimation::CRenderPipeline::CRenderPipeline(CVkDevice*, char const*)
CMotionEstimation::CRenderPipeline::CRenderPipeline(CVkDevice*, char const*) [clone .cold]
CMotionEstimation::CRenderPipeline::CmdBindAndDraw(CVkCommandBuffer*, CMotionEstimation::CRenderPipeline::DrawInfo_t const&)
CMotionEstimation::CRenderPipeline::CreateFramebuffer(CVkImage const*, VkFramebuffer_T**)
CMotionEstimation::CRenderPipeline::CreateRenderPass(VkFormat, VkImageLayout, VkImageLayout, unsigned int, unsigned int, unsigned int, unsigned int, VkRenderPass_T**)
CMotionEstimation::CRenderPipeline::Release()
CMotionEstimation::CRenderPipeline::~CRenderPipeline()
CMotionEstimation::CachedData_t::GetImageIndex(vr::EVREye) const
CMotionEstimation::CachedData_t::IsSameFrame(CMotionEstimation::CachedData_t const&) const
CMotionEstimation::CachedData_t::IsSameSwapchain(CMotionEstimation::CachedData_t const&) const
CMotionEstimation::CopyOutput(double, CMotionEstimation::Output_t*)
CMotionEstimation::CopyOutput(double, CMotionEstimation::Output_t*) [clone .cold]
CMotionEstimation::CreateCachedResources(CVkAllocator*)
CMotionEstimation::CreateCachedResources(CVkAllocator*) [clone .cold]
CMotionEstimation::CreateInputBuffers(CVkAllocator*)
CMotionEstimation::CreateSampler(CVkAllocator*)
CMotionEstimation::CreateVisibleAreaMask(vr::EVREye, CVkAllocator*)
CMotionEstimation::CreateVisibleAreaMask(vr::EVREye, CVkAllocator*) [clone .cold]
CMotionEstimation::GetInputBuffer(vr::EVREye)
CMotionEstimation::InitDownsampler()
CMotionEstimation::InitDownsampler() [clone .cold]
CMotionEstimation::InitLumasampler()
CMotionEstimation::InitLumasampler() [clone .cold]
CMotionEstimation::InitReprojector()
CMotionEstimation::InitReprojector() [clone .cold]
CMotionEstimation::InitVisibleAreaResources(vr::EVREye, CVkAllocator*, facet::ReprojectionData_t const*)
CMotionEstimation::InitVisibleAreaResources(vr::EVREye, CVkAllocator*, facet::ReprojectionData_t const*) [clone .cold]
CMotionEstimation::Initialize(IMotionEstimator*, IPrismPoseProvider*, CVkAllocator*)
CMotionEstimation::PerEyeData_t::~PerEyeData_t()
CMotionEstimation::PrepareInput(vr::EVREye, CVkCommandBuffer*, unsigned int, unsigned int, VkDescriptorImageInfo const*)
CMotionEstimation::PrepareInput(vr::EVREye, CVkCommandBuffer*, unsigned int, unsigned int, VkDescriptorImageInfo const*) [clone .cold]
CMotionEstimation::Shutdown()
CMotionEstimation::SubmitAndWait(CVkCommandBuffer*)
CMotionEstimation::SubmitAndWait(CVkCommandBuffer*) [clone .cold]
CMotionEstimation::Update(CVkAllocator*, OutLayerState_t*, OutLayerState_t*)
CMotionEstimation::Update(CVkAllocator*, OutLayerState_t*, OutLayerState_t*) [clone .cold]
CMotionEstimation::Usage(IMotionEstimator::ImageType_t::Value_t)
CMotionEstimation::~CMotionEstimation()
CMotionSmoothing::CMotionSmoothing(CVkDevice*, CVkAllocator*, ISwapchainImageProvider*)
CMotionSmoothing::CMotionSmoothing(CVkDevice*, CVkAllocator*, ISwapchainImageProvider*) [clone .cold]
CMotionSmoothing::CreateCommandBatchPool(CMotionSmoothing::CommandSet_t const&, char const*)
CMotionSmoothing::CreateCommandBatchPool(CMotionSmoothing::CommandSet_t const&, char const*) [clone .cold]
CMotionSmoothing::CreateCommandBatchPools()
CMotionSmoothing::CreateCommandBatchPools() [clone .cold]
CMotionSmoothing::GetResult(vr::EVREye, SwapchainIndices_t*)
CMotionSmoothing::HallucinateFrame(CMotionSmoothing::HallucinateFrameInfo_t const&)
CMotionSmoothing::HallucinateFrame(CMotionSmoothing::HallucinateFrameInfo_t const&) [clone .cold]
CMotionSmoothing::Initialize(IMotionEstimator*, IPrismPoseProvider*, CMotionSmoothing::CommandSet_t const&, CMotionSmoothing::CommandSet_t const&)
CMotionSmoothing::PostPresent()
CMotionSmoothing::PrepareInput(unsigned long, VkDescriptorImageInfo const*)
CMotionSmoothing::PrepareInput(unsigned long, VkDescriptorImageInfo const*) [clone .cold]
CMotionSmoothing::Results_t::ToCompute(CVkCommandBuffer*, unsigned int, unsigned int)
CMotionSmoothing::Results_t::ToGraphics(CVkCommandBuffer*, unsigned int, unsigned int)
CMotionSmoothing::Shutdown()
CMotionSmoothing::TransitionResultsToCompute(CVkCommandBuffer*)
CMotionSmoothing::TransitionResultsToGraphics(CVkCommandBuffer*)
CMotionSmoothing::UploadMotionVectors(CMotionSmoothing::HallucinateFrameInfo_t const&)
CMotionSmoothing::UploadMotionVectors(CMotionSmoothing::HallucinateFrameInfo_t const&) [clone .cold]
CMotionSmoothing::~CMotionSmoothing()
CPrism
CPrism::CPrism()
CPrism::CPrism() [clone .cold]
CPrism::ClientDisconnected(unsigned int)
CPrism::ClientDisconnected(unsigned int) [clone .cold]
CPrism::CompositeLayers(CVkImage*, VkSemaphore_T*, unsigned long)
CPrism::CompositeLayers(CVkImage*, VkSemaphore_T*, unsigned long) [clone .cold]
CPrism::CopyLayers(unsigned long)
CPrism::CopyLayers(unsigned long) [clone .cold]
CPrism::CreateBlankImage()
CPrism::CreateCommandBatchPools()
CPrism::CreateCommandPools()
CPrism::CreateComputeCommandBatchPool(char const*)
CPrism::CreateComputeCommandBatchPool(char const*) [clone .cold]
CPrism::CreateDefaultSampler()
CPrism::CreateGraphicsCommandBatchPool(char const*)
CPrism::CreateGraphicsCommandBatchPool(char const*) [clone .cold]
CPrism::CreateNullClientUniformBuffer()
CPrism::CreateRenderPass()
CPrism::CreateSwapChainFramebuffers()
CPrism::CreateUniformBuffers()
CPrism::CreateUniformBuffers() [clone .cold]
CPrism::DumpHistory(void (*)(unsigned long, unsigned int, unsigned int, unsigned int, unsigned char const*))
CPrism::FindSwapchainImage(unsigned int, SwapchainIndices_t const&)
CPrism::GetSwapchainId(SwapchainIndices_t const&)
CPrism::GetSwapchainId(SwapchainIndices_t const&) [clone .cold]
CPrism::GetVsyncPeriodInTicks() const
CPrism::HmdActivated()
CPrism::ImportClientObjects(float)
CPrism::ImportClientObjects(float) [clone .cold]
CPrism::Initialize(CPrism::Configuration_t const*)
CPrism::Initialize(CPrism::Configuration_t const*) [clone .cold]
CPrism::InitializeSharedState()
CPrism::InitializeSharedState() [clone .cold]
CPrism::PopulateClientImages()
CPrism::RunFrame()
CPrism::RunFrame() [clone .cold]
CPrism::Shutdown()
CPrism::Shutdown() [clone .cold]
CPrism::SignalClientTimelines(facet::PrismTimeline_t) const
CPrism::UpdateCopyDescriptorSet()
CPrism::UpdateCopyDescriptorSet() [clone .cold]
CPrism::UpdateDevicePoses(double)
CPrism::UpdateDisplayModeTiming()
CPrism::UpdatePanelMask()
CPrism::UpdatePanelMask() [clone .cold]
CPrism::~CPrism()
CPrismClient::Import(CVkDevice*, CVkAllocator*, ClientData_t const&)
CPrismClient::Import(CVkDevice*, CVkAllocator*, ClientData_t const&) [clone .cold]
CPrismDisplayFactoryRegistrar<CPrismDisplay_Null::Factory>::CreateFactory()
CPrismDisplayFactoryRegistrar<CPrismDisplay_Vulkan::Factory>::CreateFactory()
CPrismDisplay_Null::AcquireNextImage(VkSemaphore_T*&)
CPrismDisplay_Null::CPrismDisplay_Null(CPrismDisplay_Null::Factory*)
CPrismDisplay_Null::Factory::AcquireDisplay(PrismDisplayInfo_t const*)
CPrismDisplay_Null::Factory::AcquireDisplay(PrismDisplayInfo_t const*) [clone .cold]
CPrismDisplay_Null::Factory::GetConnectedDisplays(unsigned int*, PrismDisplayInfo_t*)
CPrismDisplay_Null::Factory::Initialize(VkInstance_T*)
CPrismDisplay_Null::Factory::~Factory()
CPrismDisplay_Null::GetDisplayModeTiming(IPrismDisplay::DisplayModeTiming_t*)
CPrismDisplay_Null::GetDisplayModes(unsigned int*, PrismDisplayMode_t*)
CPrismDisplay_Null::GetImages(unsigned int*, std::unique_ptr<CVkImage, CVkResourceDeleter<CVkImage> >*, CVkAllocator*)
CPrismDisplay_Null::GetInstance()
CPrismDisplay_Null::GetInstance()::instance
CPrismDisplay_Null::Present(CVkTimeline*, facet::CVkTimelinePoint const&)
CPrismDisplay_Null::SetDisplayMode(PrismDisplayMode_t const*)
CPrismDisplay_Null::WaitForPresent(unsigned long*, float*)
CPrismDisplay_Null::~CPrismDisplay_Null()
CPrismDisplay_Vulkan
CPrismDisplay_Vulkan::AcquireNextImage(VkSemaphore_T*&)
CPrismDisplay_Vulkan::CPrismDisplay_Vulkan(CPrismDisplay_Vulkan::Factory*, VkDisplayKHR_T*)
CPrismDisplay_Vulkan::CPrismDisplay_Vulkan(CPrismDisplay_Vulkan::Factory*, VkDisplayKHR_T*) [clone .cold]
CPrismDisplay_Vulkan::CreateVulkanSwapchain(CVkAllocator*)
CPrismDisplay_Vulkan::CreateVulkanSwapchain(CVkAllocator*) [clone .cold]
CPrismDisplay_Vulkan::Factory::AcquireDisplay(PrismDisplayInfo_t const*)
CPrismDisplay_Vulkan::Factory::AcquireDisplay(PrismDisplayInfo_t const*) [clone .cold]
CPrismDisplay_Vulkan::Factory::CheckForExtensionSupport()
CPrismDisplay_Vulkan::Factory::ChoosePhysicalDevice()
CPrismDisplay_Vulkan::Factory::ChoosePhysicalDevice() [clone .cold]
CPrismDisplay_Vulkan::Factory::EnumerateDisplays(VkPhysicalDevice_T*)
CPrismDisplay_Vulkan::Factory::EnumerateDisplays(VkPhysicalDevice_T*) [clone .cold]
CPrismDisplay_Vulkan::Factory::GetConnectedDisplays(unsigned int*, PrismDisplayInfo_t*)
CPrismDisplay_Vulkan::Factory::GetConnectedDisplays(unsigned int*, PrismDisplayInfo_t*) [clone .cold]
CPrismDisplay_Vulkan::Factory::Initialize(VkInstance_T*)
CPrismDisplay_Vulkan::Factory::VulkanDisplay_t::VulkanDisplay_t(VkDisplayKHR_T*, std::vector<unsigned char, std::allocator<unsigned char> > const&)
CPrismDisplay_Vulkan::Factory::~Factory()
CPrismDisplay_Vulkan::GetDisplayModeIndex(PrismDisplayMode_t const*, unsigned int&)
CPrismDisplay_Vulkan::GetDisplayModeTiming(IPrismDisplay::DisplayModeTiming_t*)
CPrismDisplay_Vulkan::GetDisplayModes(unsigned int*, PrismDisplayMode_t*)
CPrismDisplay_Vulkan::GetImages(unsigned int*, std::unique_ptr<CVkImage, CVkResourceDeleter<CVkImage> >*, CVkAllocator*)
CPrismDisplay_Vulkan::HasWaitForPresent()
CPrismDisplay_Vulkan::Present(CVkTimeline*, facet::CVkTimelinePoint const&)
CPrismDisplay_Vulkan::SetDevice(CVkDevice*)
CPrismDisplay_Vulkan::SetDisplayMode(PrismDisplayMode_t const*)
CPrismDisplay_Vulkan::SetDisplayMode(PrismDisplayMode_t const*) [clone .cold]
CPrismDisplay_Vulkan::WaitForPresent(unsigned long*, float*)
CPrismDisplay_Vulkan::~CPrismDisplay_Vulkan()
CPrismPanelMask::CPrismPanelMask(CVkDevice*)
CPrismPanelMask::CPrismPanelMask(CVkDevice*) [clone .cold]
CPrismPanelMask::CreateRenderPass()
CPrismPanelMask::GetImage(vr::EVREye) const
CPrismPanelMask::Initialize(CVkAllocator*, IPrismPoseProvider*, float)
CPrismPanelMask::Initialize(CVkAllocator*, IPrismPoseProvider*, float) [clone .cold]
CPrismPanelMask::Initialize(CVkAllocator*, VkExtent2D const&)
CPrismPanelMask::Initialize(CVkAllocator*, VkExtent2D const&) [clone .cold]
CPrismPanelMask::PerEyeData_t::~PerEyeData_t()
CPrismPanelMask::Shutdown()
CPrismPanelMask::Update(vr::EVREye, facet::CPanelMask::ReprojectionInfo_t const*, CVkCommandBuffer*)
CPrismPanelMask::~CPrismPanelMask()
CPrismPoseProvider_Null::ComputeDistortion(vr::EVREye, float, float, vr::DistortionCoordinates_t*)
CPrismPoseProvider_Null::GetFullscreenApplicationProjectionMatrix(vr::EVREye)
CPrismPoseProvider_Null::GetHiddenAreaMesh(vr::EVREye, vr::EHiddenAreaMeshType)
CPrismPoseProvider_Null::GetHmdDetails(IPrismPoseProvider::HmdDetails_t*)
CPrismPoseProvider_Null::GetInstance()
CPrismPoseProvider_Null::GetInstance()::instance
CPrismPoseProvider_Null::GetPoses(glm::mat<4, 4, float, (glm::qualifier)0>*, bool*, unsigned int, unsigned long)
CSWTCH.16
CSWTCH.209
CSWTCH.23
CScopedEventDuration::CScopedEventDuration(char const*, ...)
CScopedEventDuration::~CScopedEventDuration()
CSharedResourceNamespaceClient::Init(): failed connect
CSharedResourceNamespaceClient::Init(): failed to get server response
CSharedResourceNamespaceClient::Init(): failed to retreive payload
CSharedResourceNamespaceClient::Init(): invalid payload size %u
CSharedResourceNamespaceClient::Init(): mismatched reply sequence %u, expected %u
CSharedResourceNamespaceClient::Init(): received namespace data %u
CSharedResourceNamespaceClient::Init(): received unexpected message type %u
CSharedResourceNamespaceClient::Init(): still waiting for vrserver to reply with namespace data
CSharedResourceNamespaceClient::Init(): timed out contacting vrserver for a namespace
CSharedResourceNamespaceClient::Init(): timed out waiting for server reply
CSharedResourceNamespaceClient::Init(bool)
CSharedResourceNamespaceClient::~CSharedResourceNamespaceClient()
CSharedResourceNamespaceServer
CSharedResourceNamespaceServer failed to create pipe
CSharedResourceNamespaceServer failed to reply with namespace data %u
CSharedResourceNamespaceServer received unexpected message type %u
CSharedResourceNamespaceServer sent namespace data: %u
CSharedResourceNamespaceServer shutting down
CSharedResourceNamespaceServer starting up
CSharedResourceNamespaceServer timed out waiting for client message
CSharedResourceNamespaceServer::Run()
CSharedResourceNamespaceServer::~CSharedResourceNamespaceServer()
CStopwatch::CStopwatch()
CStopwatch::GetElapsedMs()
CStopwatch::GetElapsedSeconds()
CStopwatch::Reset()
CStopwatch::Start()
CStopwatch::Stop()
CThread::BHasValidThreadID()
CThread::CThread()
CThread::GetCurrentCThread()
CThread::GetName()
CThread::GetPriority() const
CThread::GetResult() const
CThread::GetThreadProc()
CThread::Init()
CThread::IsAlive()
CThread::IsThreadRunning()
CThread::Join(unsigned int)
CThread::OnExit()
CThread::Resume()
CThread::SetName(char const*)
CThread::SetPriority(int)
CThread::Sleep(unsigned int)
CThread::Start(unsigned int)
CThread::Start(unsigned int) [clone .cold]
CThread::Stop(int)
CThread::Suspend()
CThread::Terminate(int)
CThread::ThreadExceptionWrapper(void*)
CThread::ThreadProc(void*)
CThread::ThreadProc(void*) [clone .cold]
CThread::WaitForCreateComplete(CThreadEvent*)
CThread::Yield()
CThread::~CThread()
CThread::~CThread() [clone .part.0]
CThreadEvent::CThreadEvent(bool)
CThreadEvent::CThreadEvent(char const*, bool, bool)
CThreadEvent::CThreadEvent(char const*, bool, bool) [clone .cold]
CThreadEvent::Check()
CThreadEvent::Reset()
CThreadEvent::Set()
CThreadFullMutex::CThreadFullMutex(bool, char const*, bool, bool)
CThreadFullMutex::CThreadFullMutex(bool, char const*, bool, bool) [clone .cold]
CThreadFullMutex::IsCreator() const
CThreadFullMutex::Release()
CThreadLocalBase::CThreadLocalBase()
CThreadLocalBase::Get() const
CThreadLocalBase::Set(void*)
CThreadLocalBase::~CThreadLocalBase()
CThreadLocalInt<long>::~CThreadLocalInt()
CThreadLocalPtr<CThread>::~CThreadLocalPtr()
CThreadMutex::CThreadMutex()
CThreadMutex::~CThreadMutex()
CThreadRWLock::LockForWrite()
CThreadRWLock::UnlockWrite()
CThreadRWLock::WaitForRead()
CThreadSemaphore::CThreadSemaphore(long, long)
CThreadSemaphore::CThreadSemaphore(long, long) [clone .cold]
CThreadSemaphore::Release(long)
CThreadSpinLock::Lock(unsigned int) volatile
CThreadSpinRWLock::LockForRead()
CThreadSpinRWLock::SpinLockForWrite(unsigned int)
CThreadSpinRWLock::UnlockRead()
CThreadSpinRWLock::UnlockWrite()
CThreadSyncObject::AcquireSemaphoreInternal(unsigned int)
CThreadSyncObject::AssertUseable()
CThreadSyncObject::CThreadSyncObject()
CThreadSyncObject::CloseSemaphoreInternal(int, bool, char const*)
CThreadSyncObject::CreateAnonymousSyncObjectInternal(bool, bool)
CThreadSyncObject::CreateSemaphoreInternal(char const*, long, bool, bool*)
CThreadSyncObject::EnsureSemaphoreClearedInternal(int)
CThreadSyncObject::EnsureSemaphorePostedInternal(int)
CThreadSyncObject::IsSemaphoreOrphanedInternal(int, int)
CThreadSyncObject::OpenSemaphoreInternal(char const*, bool)
CThreadSyncObject::ReleaseSemaphoreInternal(int, long)
CThreadSyncObject::SaveNameToFile(char const*)
CThreadSyncObject::SignalThreadSyncObjectInternal()
CThreadSyncObject::Wait(unsigned int)
CThreadSyncObject::Wait(unsigned int) [clone .part.0]
CThreadSyncObject::operator!() const
CThreadSyncObject::~CThreadSyncObject()
CThreadSyncObject::~CThreadSyncObject() [clone .part.0]
CThreadWatchdog::CThreadWatchdog(std::string const&, float, CThreadWatchdog::EWatchdogTimeoutBehavior)
CThreadWatchdog::CThreadWatchdog(std::string const&, float, CThreadWatchdog::EWatchdogTimeoutBehavior) [clone .cold]
CThreadWatchdog::CleanupWatchdogs()
CThreadWatchdog::GetDetailString()
CThreadWatchdog::GetTimeoutBehavior()
CThreadWatchdog::GetTimeoutDurationInTicks()
CThreadWatchdog::InitWatchdogs()
CThreadWatchdog::SetDetailString(char const*)
CThreadWatchdog::SetExecutionPhaseString(char const*)
CThreadWatchdog::SetTimeoutBehavior(CThreadWatchdog::EWatchdogTimeoutBehavior)
CThreadWatchdog::SetTimeoutDurationSeconds(float)
CThreadWatchdog::SetTimeoutDurationTicks(unsigned long)
CThreadWatchdog::SleepWithWatchdogDisabled(unsigned int)
CThreadWatchdog::SleepWithWatchdogDisabled(unsigned int) [clone .cold]
CThreadWatchdog::Tick()
CThreadWatchdog::TickParent()
CThreadWatchdog::~CThreadWatchdog()
CThreadWatchdogManager::CleanupWatchdogs()
CThreadWatchdogManager::CleanupWatchdogs() [clone .cold]
CThreadWatchdogManager::EvaluateWatchdogs()
CThreadWatchdogManager::EvaluateWatchdogs() [clone .cold]
CThreadWatchdogManager::InitWatchdogs()
CThreadWatchdogManager::InitWatchdogs() [clone .cold]
CThreadWatchdogManager::Register(CThreadWatchdog::Status_s*)
CThreadWatchdogManager::Register(CThreadWatchdog::Status_s*) [clone .cold]
CThreadWatchdogManager::ShouldWatchdog()
CThreadWatchdogManager::Unregister(CThreadWatchdog::Status_s*)
CThreadWatchdogManager::~CThreadWatchdogManager()
CVRPathRegistry_Public::BLoadFromFile(std::string*)
CVRPathRegistry_Public::BLoadFromFile(std::string*) [clone .cold]
CVRPathRegistry_Public::BSaveToFile() const
CVRPathRegistry_Public::BSaveToFile() const [clone .cold]
CVRPathRegistry_Public::CVRPathRegistry_Public()
CVRPathRegistry_Public::GetConfigPath() const
CVRPathRegistry_Public::GetLogPath() const
CVRPathRegistry_Public::GetOpenVRConfigPath()
CVRPathRegistry_Public::GetOpenVRConfigPath() [clone .cold]
CVRPathRegistry_Public::GetPaths(std::string*, std::string*, std::string*, char const*, char const*, std::vector<std::string, std::allocator<std::string> >*)
CVRPathRegistry_Public::GetPaths(std::string*, std::string*, std::string*, char const*, char const*, std::vector<std::string, std::allocator<std::string> >*) [clone .cold]
CVRPathRegistry_Public::GetRuntimePath() const
CVRPathRegistry_Public::GetSteamAppId()
CVRPathRegistry_Public::GetVRPathRegistryFilename()
CVRPathRegistry_Public::GetVRPathRegistryFilename() [clone .cold]
CVRPathRegistry_Public::InitSteamAppId()
CVRPathRegistry_Public::InitSteamAppId() [clone .cold]
CVRPathRegistry_Public::IsChildOfVRServer()
CVRPathRegistry_Public::IsSteamVRMain()
CVRPathRegistry_Public::ToJsonString(std::string&)
CVRPathRegistry_Public::ToJsonString(std::string&) [clone .cold]
CVRPathRegistry_Public::~CVRPathRegistry_Public()
CVRSharedState::BInit(CVRSharedState::SharedStatePermissions, unsigned int, std::string const&, std::string const&, bool)
CVRSharedState::BOpen(CVRSharedState::SharedStatePermissions, unsigned int, std::string const&, IPC::CIPCHandle const (&) [2], bool)
CVRSharedState::Cleanup()
CVRSharedState::GetSharedStatePointer()
CVRSharedState::InitForExport(IPC::CIPCHandle (&) [2], unsigned int)
CVRSharedState::IsValid() const
CVRSharedState::LockSharedMem()
CVRSharedState::UnlockSharedMem()
CVRSharedStatePtrBase::CVRSharedStatePtrBase(CVRSharedState const*)
CVRSharedStatePtrBase::CVRSharedStatePtrBase(CVRSharedState*)
CVRSharedStatePtrBase::DoLock()
CVRSharedStatePtrBase::GetSharedStatePointer()
CVRSharedStatePtrBase::~CVRSharedStatePtrBase()
CVkAllocator::AllocateMemory(VkMemoryRequirements2 const&, VkImage_T*, VkBuffer_T*, char const*, VkAllocationDetails_t const&, CVkMemory&)
CVkAllocator::AllocateMemory(VkMemoryRequirements2 const&, VkImage_T*, VkBuffer_T*, char const*, VkAllocationDetails_t const&, CVkMemory&) [clone .cold]
CVkAllocator::AllocateMemoryFromType(CVkAllocator::MemoryTypeInfo_t const&, VkMemoryRequirements2 const&, VkImage_T*, VkBuffer_T*, char const*, VkAllocationDetails_t const&, CVkMemory&)
CVkAllocator::AllocateMemoryFromType(CVkAllocator::MemoryTypeInfo_t const&, VkMemoryRequirements2 const&, VkImage_T*, VkBuffer_T*, char const*, VkAllocationDetails_t const&, CVkMemory&) [clone .cold]
CVkAllocator::CVkAllocator(CVkDevice*, char const*)
CVkAllocator::CreateBuffer(unsigned int, unsigned int, char const*, VkBufferAllocationDetails_t const&, VkBuffer_T*)
CVkAllocator::CreateBuffer(unsigned int, unsigned int, char const*, VkBufferAllocationDetails_t const&, VkBuffer_T*) [clone .cold]
CVkAllocator::CreateImage(unsigned int, unsigned int, VkFormat, unsigned int, char const*, VkImageAllocationDetails_t const&, VkImage_T*)
CVkAllocator::CreateImage(unsigned int, unsigned int, VkFormat, unsigned int, char const*, VkImageAllocationDetails_t const&, VkImage_T*) [clone .cold]
CVkAllocator::EnumerateMemoryTypes()
CVkAllocator::GetCompatibleMemoryType(VkAllocationDetails_t const&, VkMemoryRequirements2 const&)
CVkAllocator::GetCompatibleMemoryTypes(VkAllocationDetails_t const&, VkMemoryRequirements2 const&)
CVkAllocator::GetCompatibleMemoryTypes(VkAllocationDetails_t const&, VkMemoryRequirements2 const&) [clone .cold]
CVkAllocator::ImportBuffer(VkBufferSharedData_t const&, char const*)
CVkAllocator::ImportImage(VkImageSharedData_t const&, char const*)
CVkAllocator::Initialize()
CVkBuffer::CmdCopyBuffer(CVkCommandBuffer*, CVkBuffer*, unsigned long)
CVkBuffer::CmdCopyImageToBuffer(CVkCommandBuffer*, CVkImage*, unsigned int, VkImageLayout)
CVkBuffer::CmdPipelineBarrier(CVkCommandBuffer*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned long, unsigned long)
CVkBuffer::PrepareForExport(VkBufferSharedData_t&, unsigned int)
CVkBuffer::Release()
CVkBuffer::~CVkBuffer()
CVkCommandBatch::CVkCommandBatch(CVkCommandBatchPool*, char const*)
CVkCommandBatch::CVkCommandBatch(CVkCommandBatchPool*, char const*) [clone .cold]
CVkCommandBatch::Submit(facet::CVkTimelinePoint const&)
CVkCommandBatch::~CVkCommandBatch()
CVkCommandBatchPool::CVkCommandBatchPool(CVkDevice*, CVkCommandBufferPool*, CVkTimeline*, CVkQueue*, char const*)
CVkCommandBatchPool::CVkCommandBatchPool(CVkDevice*, CVkCommandBufferPool*, CVkTimeline*, CVkQueue*, char const*) [clone .cold]
CVkCommandBatchPool::GetDeltaMs(CVkCommandBatchPool*) const
CVkCommandBatchPool::GetDurationMs() const
CVkCommandBatchPool::NewBatch(char const*)
CVkCommandBatchPool::NewBatch(char const*) [clone .cold]
CVkCommandBatchPool::UpdateTimestampResults(facet::CVkTimestampQueryPoolBase::WaitBehavior_t)
CVkCommandBatchPool::UpdateTimestampResults(facet::CVkTimestampQueryPoolBase::WaitBehavior_t) [clone .cold]
CVkCommandBuffer::AcquireMutex(VkDeviceMemory_T*, unsigned long, unsigned int)
CVkCommandBuffer::Begin()
CVkCommandBuffer::CScopedDebugUtilsLabel::~CScopedDebugUtilsLabel()
CVkCommandBuffer::CVkCommandBuffer(CVkDevice*, CVkCommandBufferPool*, char const*)
CVkCommandBuffer::CmdBeginDebugUtilsLabel(char const*, float const*)
CVkCommandBuffer::CmdEndDebugUtilsLabel()
CVkCommandBuffer::CmdInsertDebugLabel(char const*)
CVkCommandBuffer::CmdInsertVRFrameMarker()
CVkCommandBuffer::CmdPipelineBarrier(unsigned int, unsigned int)
CVkCommandBuffer::CmdPipelineBarrier(unsigned int, unsigned int, unsigned int, unsigned int)
CVkCommandBuffer::CmdSetStencil(unsigned int, unsigned int, unsigned int, VkStencilFaceFlagBits)
CVkCommandBuffer::End()
CVkCommandBuffer::Initialize()
CVkCommandBuffer::MarkReferencedResourcesInUse(CVkTimeline*, facet::CVkTimelinePoint const&)
CVkCommandBuffer::MarkReferencedResourcesInUse(CVkTimeline*, facet::CVkTimelinePoint const&) [clone .cold]
CVkCommandBuffer::OnPostSubmit()
CVkCommandBuffer::OnPreSubmit()
CVkCommandBuffer::QueueFamilyIndex() const
CVkCommandBuffer::ReferenceResource(CVkResourceBase*)
CVkCommandBuffer::ReferenceResource(CVkResourceBase*) [clone .cold]
CVkCommandBuffer::Release()
CVkCommandBuffer::ReleaseMutex(VkDeviceMemory_T*, unsigned long)
CVkCommandBuffer::Reset()
CVkCommandBuffer::Signal(CVkTimeline*, facet::CVkTimelinePoint const&)
CVkCommandBuffer::Signal(VkSemaphore_T*)
CVkCommandBuffer::ValidateReferencedResources()
CVkCommandBuffer::Wait(CVkTimeline*, facet::CVkTimelinePoint const&, unsigned int)
CVkCommandBuffer::Wait(VkSemaphore_T*, unsigned int)
CVkCommandBuffer::~CVkCommandBuffer()
CVkCommandBufferPool::BorrowResource(char const*)
CVkCommandBufferPool::BorrowResource(char const*) [clone .cold]
CVkCommandBufferPool::CreateResource()
CVkCommandBufferPool::CreateResource() [clone .cold]
CVkCommandBufferPool::Initialize(CVkDevice*, char const*, unsigned int)
CVkCommandBufferPool::Initialize(CVkDevice*, char const*, unsigned int) [clone .cold]
CVkCommandBufferPool::Release()
CVkCommandBufferPool::~CVkCommandBufferPool()
CVkDevice::CVkDevice(char const*)
CVkDevice::CVkDevice(char const*) [clone .cold]
CVkDevice::ChoosePhysicalDevice()
CVkDevice::ChoosePhysicalDevice() [clone .cold]
CVkDevice::CreateDevice(CreateDeviceDetails_t const&)
CVkDevice::CreateDevice(CreateDeviceDetails_t const&) [clone .cold]
CVkDevice::CreateDevice(CreateDeviceDetails_t const&)::queuePriorities
CVkDevice::CreateInstance(char const*, unsigned int, unsigned int, CreateInstanceDetails_t const&)
CVkDevice::CreateInstance(char const*, unsigned int, unsigned int, CreateInstanceDetails_t const&) [clone .cold]
CVkDevice::EnableDeviceExtension(char const*, bool)
CVkDevice::EnableDeviceExtension(char const*, bool) [clone .cold]
CVkDevice::EnableInstanceExtension(char const*, bool)
CVkDevice::EnableInstanceExtension(char const*, bool) [clone .cold]
CVkDevice::EnableLayer(char const*, bool)
CVkDevice::EnableLayer(char const*, bool) [clone .cold]
CVkDevice::FillPhysicalDeviceInfo(VkPhysicalDevice_T*, PhysicalDeviceInfo_t*)
CVkDevice::GetQueueType(unsigned int)
CVkDevice::Init - failed to get extension count
CVkDevice::Init - no instance extensions supported
CVkDevice::Initialize(void (*(*)(VkInstance_T*, char const*))())
CVkDevice::Initialize(void (*(*)(VkInstance_T*, char const*))()) [clone .cold]
CVkDevice::IsCompatibleVulkanVersion(unsigned int)
CVkDevice::IsDeviceExtensionAvailable(char const*)
CVkDevice::IsDeviceExtensionEnabled(char const*)
CVkDevice::IsDeviceExtensionEnabled(char const*) [clone .cold]
CVkDevice::IsExtensionAvailableLocked(std::vector<VkExtensionProperties, std::allocator<VkExtensionProperties> >&, char const*)
CVkDevice::IsGlobalPriorityQuerySupported(VkPhysicalDevice_T*)
CVkDevice::IsInstanceExtensionAvailable(char const*)
CVkDevice::IsInstanceExtensionEnabled(char const*)
CVkDevice::IsInstanceExtensionEnabled(char const*) [clone .cold]
CVkDevice::IsLayerAvailable(char const*)
CVkDevice::IsLayerAvailableLocked(char const*) const
CVkDevice::IsLayerEnabled(char const*)
CVkDevice::IsLayerEnabled(char const*) [clone .cold]
CVkDevice::IsLayerEnabledLocked(char const*) const
CVkDevice::LoadAvailableLayers()
CVkDevice::LoadAvailableLayers() [clone .cold]
CVkDevice::LoadInstanceExtensions(char const*)
CVkDevice::LoadInstanceExtensions(char const*) [clone .cold]
CVkDevice::SetDebugName(VkBuffer_T*, std::string const&)
CVkDevice::SetDebugName(VkCommandBuffer_T*, std::string const&)
CVkDevice::SetDebugName(VkCommandPool_T*, std::string const&)
CVkDevice::SetDebugName(VkDeviceMemory_T*, std::string const&)
CVkDevice::SetDebugName(VkDevice_T*, std::string const&)
CVkDevice::SetDebugName(VkImageView_T*, std::string const&)
CVkDevice::SetDebugName(VkImage_T*, std::string const&)
CVkDevice::SetDebugName(VkQueryPool_T*, std::string const&)
CVkDevice::SetDebugName(VkSemaphore_T*, std::string const&)
CVkDevice::SetDebugName(VkShaderModule_T*, std::string const&)
CVkDevice::SetDebugName(unsigned long, VkObjectType, std::string const&)
CVkDevice::Shutdown()
CVkDevice::UseDevice(VkDevice_T*)
CVkDevice::UseInstance(VkInstance_T*)
CVkDevice::UsePhysicalDevice(VkPhysicalDevice_T*)
CVkDevice::~CVkDevice()
CVkGarbageCollector: %s
CVkGarbageCollector::Acquire(CVkResourceBase*)
CVkGarbageCollector::Acquire(CVkResourceBase*) [clone .cold]
CVkGarbageCollector::BucketSize(CVkTimeline*)
CVkGarbageCollector::DebugDump()
CVkGarbageCollector::DisposeResource(CVkResourceBase*)
CVkGarbageCollector::DoMaintenance()
CVkGarbageCollector::DoMaintenance() [clone .cold]
CVkGarbageCollector::FlushAllResources()
CVkGarbageCollector::TotalBuckets()
CVkGarbageCollector::TotalSize()
CVkGarbageCollector::WaitForWork()
CVkGarbageCollector::WaitForWork() [clone .cold]
CVkGarbageCollector::~CVkGarbageCollector()
CVkImage::AspectMask() const
CVkImage::BytesRequired() const
CVkImage::CmdClearColorImage(CVkCommandBuffer*, VkClearColorValue const&, VkImageLayout, unsigned int)
CVkImage::CmdCopyBufferToImage(CVkCommandBuffer*, CVkBuffer*, VkImageLayout, unsigned int)
CVkImage::CmdCopyImage(CVkCommandBuffer*, CVkImage*, std::vector<VkImageCopy, std::allocator<VkImageCopy> > const&, VkImageLayout, VkImageLayout)
CVkImage::CmdPipelineBarrier(CVkCommandBuffer*, VkImageLayout, VkImageLayout, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
CVkImage::PrepareForExport(VkImageSharedData_t&, unsigned int)
CVkImage::Release()
CVkImage::~CVkImage()
CVkImageHistory::CmdRecord(CVkImageHistory::Entry_t&, CVkCommandBuffer*, CVkImage*, unsigned long)
CVkImageHistory::DumpHistory(CVkImageHistory::Entry_t*, unsigned long, CVkAllocator*, CVkCommandBufferPool*, CVkQueue*, void (*)(unsigned long, unsigned int, unsigned int, unsigned int, unsigned char const*))
CVkImageHistory::DumpHistory(CVkImageHistory::Entry_t*, unsigned long, CVkAllocator*, CVkCommandBufferPool*, CVkQueue*, void (*)(unsigned long, unsigned int, unsigned int, unsigned int, unsigned char const*)) [clone .cold]
CVkImageHistory::Initialize(CVkImageHistory::Entry_t*, unsigned long, CVkAllocator*, CVkImage*)
CVkImageHistory::Initialize(CVkImageHistory::Entry_t*, unsigned long, CVkAllocator*, CVkImage*) [clone .cold]
CVkMemory::Map()
CVkMemory::Map() [clone .cold]
CVkMemory::Release()
CVkMemory::Unmap()
CVkMemory::Unmap() [clone .cold]
CVkMemory::~CVkMemory()
CVkPoolGarbageCollector<CVkCommandBuffer>::DisposeResource(CVkResourceBase*)
CVkPoolGarbageCollector<CVkCommandBuffer>::~CVkPoolGarbageCollector()
CVkQueue::EmitFullDebugBarrier(CVkCommandBuffer const*)
CVkQueue::Initialize(unsigned int, unsigned int)
CVkQueue::Present(VkSwapchainKHR_T*, unsigned int, VkSemaphore_T*, unsigned long)
CVkQueue::Present(VkSwapchainKHR_T*, unsigned int, VkSemaphore_T*, unsigned long) [clone .cold]
CVkQueue::Submit(CVkCommandBuffer*)
CVkQueue::Submit(CVkCommandBuffer*) [clone .cold]
CVkResourceBase::GC()
CVkResourceBase::IsInUse()
CVkResourceBase::IsTimeline()
CVkResourceBase::MarkInUse(CVkTimeline*, facet::CVkTimelinePoint const&)
CVkResourceBase::WaitForResource(unsigned long)
CVkResourcePool<CVkCommandBuffer>::BorrowResource()
CVkResourcePool<CVkCommandBuffer>::CVkResourcePool()
CVkResourcePool<CVkCommandBuffer>::Grow(unsigned int)
CVkResourcePool<CVkCommandBuffer>::~CVkResourcePool()
CVkShaderPipeline::AddComputeStage(char const*, unsigned int const*, unsigned long, char const*)
CVkShaderPipeline::AddDescriptorSet(std::vector<CVkShaderPipeline::Binding_t, std::allocator<CVkShaderPipeline::Binding_t> > const&, unsigned int)
CVkShaderPipeline::AddDescriptorSet(std::vector<CVkShaderPipeline::Binding_t, std::allocator<CVkShaderPipeline::Binding_t> > const&, unsigned int) [clone .cold]
CVkShaderPipeline::AddFragmentStage(char const*, unsigned int const*, unsigned long, char const*)
CVkShaderPipeline::AddGeometryStage(char const*, unsigned int const*, unsigned long, char const*)
CVkShaderPipeline::AddStage(VkShaderStageFlagBits, char const*, unsigned int const*, unsigned long, char const*)
CVkShaderPipeline::AddStage(VkShaderStageFlagBits, char const*, unsigned int const*, unsigned long, char const*) [clone .cold]
CVkShaderPipeline::AddTessellationControlStage(char const*, unsigned int const*, unsigned long, char const*)
CVkShaderPipeline::AddTessellationEvaluationStage(char const*, unsigned int const*, unsigned long, char const*)
CVkShaderPipeline::AddVertexStage(char const*, std::vector<VkVertexInputBindingDescription, std::allocator<VkVertexInputBindingDescription> > const&, std::vector<VkVertexInputAttributeDescription, std::allocator<VkVertexInputAttributeDescription> > const&, unsigned int const*, unsigned long, char const*)
CVkShaderPipeline::AddViewport(VkExtent2D const&)
CVkShaderPipeline::CVkShaderPipeline(CVkDevice*, char const*)
CVkShaderPipeline::CmdBindAndDispatch(CVkCommandBuffer*, unsigned int, unsigned int, unsigned int, unsigned int) const
CVkShaderPipeline::CmdBindAndDraw(CVkCommandBuffer*, unsigned int, unsigned int, unsigned int) const
CVkShaderPipeline::CmdBindAndDrawIndexed(CVkCommandBuffer*, unsigned int, unsigned int, unsigned int) const
CVkShaderPipeline::CmdBindPipelineAndDescriptorSets(CVkCommandBuffer*, VkPipelineBindPoint, unsigned int) const
CVkShaderPipeline::CmdBindPipelineAndDescriptorSets(CVkCommandBuffer*, VkPipelineBindPoint, unsigned int) const [clone .cold]
CVkShaderPipeline::CopyDescriptorSets(CVkShaderPipeline const&)
CVkShaderPipeline::CopyDescriptorSets(CVkShaderPipeline const&) [clone .cold]
CVkShaderPipeline::CopyStages(CVkShaderPipeline const&)
CVkShaderPipeline::CopyStages(CVkShaderPipeline const&) [clone .cold]
CVkShaderPipeline::Initialize(unsigned int, std::vector<VkPushConstantRange, std::allocator<VkPushConstantRange> > const&, CVkShaderPipeline::RenderInfo_t const*)
CVkShaderPipeline::Initialize(unsigned int, std::vector<VkPushConstantRange, std::allocator<VkPushConstantRange> > const&, CVkShaderPipeline::RenderInfo_t const*) [clone .cold]
CVkShaderPipeline::Shutdown()
CVkShaderPipeline::StageInfo_t::~StageInfo_t()
CVkShaderPipeline::WriteDescriptorSet(unsigned int, unsigned int) const
CVkShaderPipeline::WriteDescriptorSet(unsigned int, unsigned int) const [clone .cold]
CVkShaderPipeline::~CVkShaderPipeline()
CVkTimeline::CheckPhysicalDeviceCapabilities()
CVkTimeline::Create(CVkDevice*, char const*, VkTimelineCreationDetails_t const&)
CVkTimeline::Create(CVkDevice*, char const*, VkTimelineCreationDetails_t const&) [clone .cold]
CVkTimeline::ExportTimeline(VkTimelineCreationDetails_t const&)
CVkTimeline::HasSignaled(facet::CVkTimelinePoint const&)
CVkTimeline::Import(CVkDevice*, char const*, VkTimelineSharedData_t const&)
CVkTimeline::Import(CVkDevice*, char const*, VkTimelineSharedData_t const&) [clone .cold]
CVkTimeline::ImportTimeline(VkTimelineCreationDetails_t const&)
CVkTimeline::Initialize(VkTimelineCreationDetails_t const&)
CVkTimeline::InitializeFromIPC(VkTimelineSharedData_t const&)
CVkTimeline::IsTimeline()
CVkTimeline::PrepareForExport(VkTimelineSharedData_t&, unsigned int)
CVkTimeline::Release()
CVkTimeline::Signal(facet::CVkTimelinePoint const&)
CVkTimeline::Wait(facet::CVkTimelinePoint const&, unsigned long)
CVkTimeline::WaitMultiple(std::vector<CVkTimeline*, std::allocator<CVkTimeline*> > const&, std::vector<facet::CVkTimelinePoint, std::allocator<facet::CVkTimelinePoint> > const&, bool, unsigned long)
CVkTimeline::WaitMultiple(std::vector<CVkTimeline*, std::allocator<CVkTimeline*> > const&, std::vector<facet::CVkTimelinePoint, std::allocator<facet::CVkTimelinePoint> > const&, bool, unsigned long) [clone .cold]
CVkTimeline::~CVkTimeline()
CVkWriteDescriptorSet::Update(VkDevice_T*)
CXXABI_1.3
CXXABI_1.3.5
CXXABI_1.3.9
CalculateMotion
Cannot initialize crash handling in a project without the Steam API available
CharNeedsEscape_Component(char)
CharNeedsEscape_FullPath(char)
CheckPhysicalDeviceCapabilities
ChoosePhysicalDevice
CleanupSharedResourceNamespace()
Client Swapchain: %d
ClientLayers-%d
ClientTimeline-%d
CmdBindAndDispatch
CmdBindAndDraw
CmdBindAndDrawIndexed
CmdBindPipelineAndDescriptorSets
Compairing timestamps across different devices!
Comparing timestamps across different hw queues!
CompositeLayers
Compute Timeline
Connected to RenderDoc.
ConstIterator to Iterator should never be allowed.
CopyLayers
Cost reduction pass
Create
CreateBlankImage
CreateBuffer
CreateCachedResources
CreateCommandBatchPools
CreateCommandPools
CreateDefaultSampler
CreateDepthImage
CreateDevice
CreateFramebuffer
CreateImage
CreateInstance
CreateNullClientUniformBuffer
CreateRenderPass
CreateSampler
CreateSimpleProcess
CreateSimpleThread(unsigned int (*)(void*), void*, unsigned int*, unsigned int)
CreateSwapChainFramebuffers
CreateVisibleAreaMask
CreateVulkanSwapchain
D
DW.ref.__gxx_personality_v0
DebugMessengerCallback
DebugMessengerCallback(VkDebugUtilsMessageSeverityFlagBitsEXT, unsigned int, VkDebugUtilsMessengerCallbackDataEXT const*, void*)
DeclareCurrentThreadIsMainThread
Destroying a held mutex
Downsample Scene Image
Downsample Vertex Buffer-%s
DumpHistory
DumpHistory-Staging
Dumping display history...
Duplicate key: '
E
EDID
EDID_DATA
Empty escape sequence in string
End
Enumerated %zu vulkan displays
Enumerated %zu xlib displays
Error %d getting shared memory size
Error %d growing shared object manager file.
Error %d locking shared memory file
Error from reader: %s
Error on Release(): Not the lock owner(%d) != %d
Error reading from socket
EventWriteString(char const*, EVRTraceEvent)
EventWriteStringBegin(char const*, unsigned long)
EventWriteStringDurationF(int, char const*, ...)
EventWriteStringEnd(char const*, unsigned long)
EventWriteStringF(char const*, ...)
Exceeded stackLimit in readValue().
Executable: %s
ExportTimeline
Extra non-whitespace after JSON value.
F
FACET_VULKAN_VALIDATION
FAILURE:WaitForPresent
Facet
Failed Watchdog timeout in thread %s after %f seconds
Failed Watchdog timeout in thread %s after %f seconds. Aborting.
Failed Watchdog timeout in thread %s after %f seconds. Skipping abort because we're in the debugger.
Failed Watchdog timeout in thread %s after %f seconds. Skipping assert because we're in the debugger.
Failed to AllocMutex
Failed to LockMgrMutex in AllocMutex
Failed to bind client address for shared fd id: 0x%lx
Failed to bind server addres for shared fd: %d
Failed to compute distortion parameters!
Failed to create socket for shared fd id: 0x%lx
Failed to create socket for shared fd: %d
Failed to init scheduler: failed to get rlimit
Failed to init scheduler: failed to get sched params %d
Failed to init scheduler: failed to set rlimit
Failed to initialize client address for shared fd id: 0x%lx
Failed to initialize server address for shared fd id: 0x%lx
Failed to initialize server address for shared fd: %d
Failed to receive shared FD
Failed to receive shared fd from server
Failed to receive shared fd id: 0x%lx
Failed to send FD to client
Failed to send to shared fd client
Failed to set thread %p priority: invalid priority %d
Failed to set thread %p priority: set failed for %d: %d: %s
Failed to set thread priority: foreign thread unsupported
Failed to set thread priority: scheduler init failed
Failed to set thread priority: setschedparam failed %d: %d
Failed to signal shared fd server
Failed to spawn share thread for shared fd: %d
Failed to wait for shared fd client
Failed when reading payload of length %u: errno=%d
FbcE
File path truncated
FileSelect(dirent const*)
FillDataStruct(_finddata_t*)
FillPipeAddr(sockaddr_un&, std::string)
FillPipeAddr(sockaddr_un&, std::string) [clone .cold]
FillPipeAddr(sockaddr_un&, std::string)::sPrefix
FindSwapchainImage
Forced create but already created for SharedObjectEvent
Foreign timelines unsupported. Leaking resource.
Format string parse failure
Format(char const*, ...)
Format(char const*, ...) [clone .cold]
Found candidate direct display as RandR output 0x%x
Frame Hallucination Pipeline
Frame Hallucination Pipeline Variant %d
FrameHallucination-Frag
FrameHallucination-Vert
Fv9ELogLevelPKcPvE
G
GCC: (SteamRT 10.3.0-3+steamrt3.1+bsrt3.1) 10.3.0
GLIBCXX_3.4
GLIBCXX_3.4.11
GLIBCXX_3.4.14
GLIBCXX_3.4.18
GLIBCXX_3.4.19
GLIBCXX_3.4.20
GLIBCXX_3.4.21
GLIBCXX_3.4.22
GLIBCXX_3.4.9
GLIBC_2.12
GLIBC_2.14
GLIBC_2.17
GLIBC_2.2.5
GLIBC_2.3
GLIBC_2.3.2
GLIBC_2.3.4
GLIBC_2.30
GLIBC_2.7
GLSL.std.450
GNU
GenerateVisibleAreaMesh
GetCompatibleMemoryType
GetDisplayModes
GetEnvironmentVariable(char const*)
GetEnvironmentVariableAsBool(%s): Unable to parse value '%s', using default %d
GetEnvironmentVariableAsBool(char const*, bool)
GetEnvironmentVariableAsBool(char const*, bool) [clone .cold]
GetFilenameTimeString()
GetGMUnixTime()
GetGMUnixTimeAtNextLocalTime(unsigned long, int, int, int)
GetImages
GetNamespacingUid()
GetNamespacingUid() [clone .cold]
GetNamespacingUid()::s_cachedNamespaceUid
GetNextEventId()
GetNextEventId()::ulMessageCounter
GetSharedResourceNamespace()
GetSharedResourceNamespace() [clone .cold]
GetSystemBaseTicks()
GetSystemTicksFromTime(double)
GetSystemTime()
GetSystemTimeFrequency()
GetSystemTimeFromTicks(unsigned long)
GetSystemTimeInTicks()
GetTraceMarkerFd()
GetTraceMarkerFd() [clone .cold]
GetTraceMarkerFd()::__executeCount
GetTraceMarkerFd()::s_TraceMarkerMutex
GetTraceMarkerFd()::s_flLastAttemptTime
GetTraceMarkerFd()::s_nTraceFileFD
GetUserDocumentsPath()
GetVRLogTimeString(bool)
GetXcbAtom
Graphics Timeline
H
HMD Image %d
HMD using present mode: %d
HOME
HTC Corporation VIVE
HallucinateFrame
Hallucinated-%s%d
History Timeline
History-Buffer-%d
HmdActivated
I
ID
IPC error: LockMgrMutex failed to acquire SysMgrMutex: %d
IPC: recovering abandoned mutex %p
IPC::CIPCHandle::Import() const
IPC::CIPCHandle::InitForExport(IPC::TSharedHandleBase<int, -1>, unsigned int)
IPC::CreateEvent(char const*, bool, bool, bool*, bool)
IPC::CreateEventWithNamespace(std::string const&, bool, bool, bool*)
IPC::CreateEventWithNamespace(std::string const&, bool, bool, bool*) [clone .cold]
IPC::CreateMutex(char const*, bool, bool*, bool)
IPC::CreateMutexWithNamespace(std::string const&, bool, bool*)
IPC::CreateMutexWithNamespace(std::string const&, bool, bool*) [clone .cold]
IPC::CreateSharedMem(char const*, unsigned int, IPC::ISharedMem::Access, bool*, bool)
IPC::CreateSharedMemWithNamespace(std::string const&, unsigned int, IPC::ISharedMem::Access, bool*)
IPC::CreateSharedMemWithNamespace(std::string const&, unsigned int, IPC::ISharedMem::Access, bool*) [clone .cold]
IPC::ISharedMem::GetOpaque() const
IPC::ISyncObject::GetOpaque() const
IPC::InitializeSharedObjectManager()
IPC::LinuxSharedFd::Init(int)
IPC::LinuxSharedFd::Init(int)::sIncrementingIndex
IPC::LinuxSharedFd::Init(unsigned long)
IPC::LinuxSharedFd::SendTrampoline(void*)
IPC::PosixSharedMemory::Destroy()
IPC::PosixSharedMemory::Init(char const*, unsigned int, IPC::ISharedMem::Access, bool*, bool)
IPC::PosixSharedMemory::IsValid() const
IPC::PosixSharedMemory::Pointer() const
IPC::PosixSharedMemory::~PosixSharedMemory()
IPC::PurgeAllDead()
IPC::PurgeCurrentProcess()
IPC::ReceiveSharedFd(unsigned long, int&)
IPC::SendSharedFd(int, unsigned long&)
IPC::SharedObjMgr()
IPC::SharedObjectEvent::Destroy()
IPC::SharedObjectEvent::ResetEvent()
IPC::SharedObjectEvent::SetEvent()
IPC::SharedObjectEvent::Wait(unsigned int)
IPC::SharedObjectEvent::~SharedObjectEvent()
IPC::SharedObjectManager::GetManagerSharedMemoryName()::s_pszMemName
IPC::SharedObjectManager::Init(bool)
IPC::SharedObjectManager::Purge(int) [clone .isra.0]
IPC::SharedObjectManager::~SharedObjectManager()
IPC::SharedObjectMutex::Destroy()
IPC::SharedObjectMutex::Release()
IPC::SharedObjectMutex::Wait(unsigned int)
IPC::SharedObjectMutex::~SharedObjectMutex()
IPC::WaitMultiple(unsigned int, unsigned int, IPC::ISyncObject*, ...)
IPC::crc32(unsigned int, void const*, unsigned long) [clone .constprop.0]
IPC::crc32(unsigned int, void const*, unsigned long)::s_crc32
IPC::g_SharedObjectManager
IPCPipe(%s): Sending packed message type %u, seq %u, len %u
IPCPipe(%s): Sending simple message type %u, seq %u
Import
ImportBuffer
ImportClientObjects
ImportClients
ImportImage
ImportSampler
ImportTimeline
Infinity
InitIfNeeded
InitMainThread()
InitSharedResourceNamespace called, but already initialized
InitSharedResourceNamespace()
InitSharedResourceNamespace() [clone .cold]
InitSharedResourceNamespaceAsWatchdog()
InitSharedResourceNamespaceAsWatchdog() [clone .cold]
InitSharedResourceNamespaceForTest()
InitSystemBaseTimeTicks(unsigned long)
InitVisibleAreaResources
Initialize
InitializeFromIPC
Initializing display history...
Input
Invalid queue family index
Invalid socket name parameters for shared fd
IpAndPortToString(unsigned int, unsigned short)
IpToString(unsigned int)
IsOnLaptop()
IsPosix()
IsRunningAsService()
IsRunningInAppContainer()
IsRunningInAppContainer() [clone .cold]
IsRunningInAppContainer()::s_bDeterminedAppContainerStatus
IsRunningInAppContainer()::s_bIsRunningInAppContainer
IsWorkstationLocked()
J
Json::BuiltStyledStreamWriter::BuiltStyledStreamWriter(std::string const&, Json::CommentStyle::Enum, std::string const&, std::string const&, std::string const&, bool, unsigned int)
Json::BuiltStyledStreamWriter::BuiltStyledStreamWriter(std::string const&, Json::CommentStyle::Enum, std::string const&, std::string const&, std::string const&, bool, unsigned int) [clone .cold]
Json::BuiltStyledStreamWriter::hasCommentForValue(Json::Value const&)
Json::BuiltStyledStreamWriter::indent()
Json::BuiltStyledStreamWriter::isMultineArray(Json::Value const&)
Json::BuiltStyledStreamWriter::pushValue(std::string const&)
Json::BuiltStyledStreamWriter::unindent()
Json::BuiltStyledStreamWriter::write(Json::Value const&, std::ostream*)
Json::BuiltStyledStreamWriter::writeArrayValue(Json::Value const&)
Json::BuiltStyledStreamWriter::writeArrayValue(Json::Value const&) [clone .cold]
Json::BuiltStyledStreamWriter::writeCommentAfterValueOnSameLine(Json::Value const&)
Json::BuiltStyledStreamWriter::writeCommentAfterValueOnSameLine(Json::Value const&) [clone .cold]
Json::BuiltStyledStreamWriter::writeCommentBeforeValue(Json::Value const&)
Json::BuiltStyledStreamWriter::writeCommentBeforeValue(Json::Value const&) [clone .cold]
Json::BuiltStyledStreamWriter::writeIndent()
Json::BuiltStyledStreamWriter::writeValue(Json::Value const&)
Json::BuiltStyledStreamWriter::writeValue(Json::Value const&) [clone .cold]
Json::BuiltStyledStreamWriter::writeWithIndent(std::string const&)
Json::BuiltStyledStreamWriter::~BuiltStyledStreamWriter()
Json::CharReaderBuilder::CharReaderBuilder()
Json::CharReaderBuilder::CharReaderBuilder() [clone .cold]
Json::CharReaderBuilder::newCharReader() const
Json::CharReaderBuilder::newCharReader() const [clone .cold]
Json::CharReaderBuilder::operator[](std::string)
Json::CharReaderBuilder::setDefaults(Json::Value*)
Json::CharReaderBuilder::setDefaults(Json::Value*) [clone .cold]
Json::CharReaderBuilder::strictMode(Json::Value*)
Json::CharReaderBuilder::strictMode(Json::Value*) [clone .cold]
Json::CharReaderBuilder::validate(Json::Value*) const
Json::CharReaderBuilder::validate(Json::Value*) const [clone .cold]
Json::CharReaderBuilder::~CharReaderBuilder()
Json::Exception::Exception(std::string const&)
Json::Exception::Exception(std::string const&) [clone .cold]
Json::Exception::what() const
Json::Exception::~Exception()
Json::FastWriter::FastWriter()
Json::FastWriter::dropNullPlaceholders()
Json::FastWriter::enableYAMLCompatibility()
Json::FastWriter::omitEndingLineFeed()
Json::FastWriter::write(Json::Value const&)
Json::FastWriter::writeValue(Json::Value const&)
Json::FastWriter::writeValue(Json::Value const&) [clone .cold]
Json::FastWriter::~FastWriter()
Json::Features::Features()
Json::Features::all()
Json::Features::strictMode()
Json::LogicError::LogicError(std::string const&)
Json::LogicError::LogicError(std::string const&) [clone .cold]
Json::LogicError::~LogicError()
Json::OurCharReader::parse(char const*, char const*, Json::Value*, std::string*)
Json::OurCharReader::~OurCharReader()
Json::OurFeatures::all()
Json::OurReader::OurReader(Json::OurFeatures const&)
Json::OurReader::OurReader(Json::OurFeatures const&) [clone .cold]
Json::OurReader::addComment(char const*, char const*, Json::CommentPlacement)
Json::OurReader::addComment(char const*, char const*, Json::CommentPlacement) [clone .cold]
Json::OurReader::addError(std::string const&, Json::OurReader::Token&, char const*)
Json::OurReader::addError(std::string const&, Json::OurReader::Token&, char const*) [clone .cold]
Json::OurReader::addErrorAndRecover(std::string const&, Json::OurReader::Token&, Json::OurReader::TokenType)
Json::OurReader::currentValue()
Json::OurReader::decodeDouble(Json::OurReader::Token&)
Json::OurReader::decodeDouble(Json::OurReader::Token&) [clone .cold]
Json::OurReader::decodeDouble(Json::OurReader::Token&, Json::Value&)
Json::OurReader::decodeDouble(Json::OurReader::Token&, Json::Value&) [clone .cold]
Json::OurReader::decodeNumber(Json::OurReader::Token&)
Json::OurReader::decodeNumber(Json::OurReader::Token&) [clone .cold]
Json::OurReader::decodeNumber(Json::OurReader::Token&, Json::Value&)
Json::OurReader::decodeNumber(Json::OurReader::Token&, Json::Value&) [clone .cold]
Json::OurReader::decodeString(Json::OurReader::Token&)
Json::OurReader::decodeString(Json::OurReader::Token&) [clone .cold]
Json::OurReader::decodeString(Json::OurReader::Token&, std::string&)
Json::OurReader::decodeString(Json::OurReader::Token&, std::string&) [clone .cold]
Json::OurReader::decodeUnicodeCodePoint(Json::OurReader::Token&, char const*&, char const*, unsigned int&)
Json::OurReader::decodeUnicodeCodePoint(Json::OurReader::Token&, char const*&, char const*, unsigned int&) [clone .cold]
Json::OurReader::decodeUnicodeEscapeSequence(Json::OurReader::Token&, char const*&, char const*, unsigned int&)
Json::OurReader::decodeUnicodeEscapeSequence(Json::OurReader::Token&, char const*&, char const*, unsigned int&) [clone .cold]
Json::OurReader::getFormattedErrorMessages() const
Json::OurReader::getFormattedErrorMessages() const [clone .cold]
Json::OurReader::getLocationLineAndColumn(char const*) const
Json::OurReader::getLocationLineAndColumn(char const*, int&, int&) const
Json::OurReader::getNextChar()
Json::OurReader::getStructuredErrors() const
Json::OurReader::getStructuredErrors() const [clone .cold]
Json::OurReader::good() const
Json::OurReader::match(char const*, int)
Json::OurReader::parse(char const*, char const*, Json::Value&, bool)
Json::OurReader::parse(char const*, char const*, Json::Value&, bool) [clone .cold]
Json::OurReader::pushError(Json::Value const&, std::string const&)
Json::OurReader::pushError(Json::Value const&, std::string const&) [clone .cold]
Json::OurReader::pushError(Json::Value const&, std::string const&, Json::Value const&)
Json::OurReader::pushError(Json::Value const&, std::string const&, Json::Value const&) [clone .cold]
Json::OurReader::readArray(Json::OurReader::Token&)
Json::OurReader::readArray(Json::OurReader::Token&) [clone .cold]
Json::OurReader::readCStyleComment()
Json::OurReader::readComment()
Json::OurReader::readCppStyleComment()
Json::OurReader::readNumber(bool)
Json::OurReader::readObject(Json::OurReader::Token&)
Json::OurReader::readObject(Json::OurReader::Token&) [clone .cold]
Json::OurReader::readString()
Json::OurReader::readStringSingleQuote()
Json::OurReader::readToken(Json::OurReader::Token&)
Json::OurReader::readValue()
Json::OurReader::readValue() [clone .cold]
Json::OurReader::recoverFromError(Json::OurReader::TokenType)
Json::OurReader::skipCommentTokens(Json::OurReader::Token&)
Json::OurReader::skipSpaces()
Json::Path::Path(std::string const&, Json::PathArgument const&, Json::PathArgument const&, Json::PathArgument const&, Json::PathArgument const&, Json::PathArgument const&)
Json::Path::Path(std::string const&, Json::PathArgument const&, Json::PathArgument const&, Json::PathArgument const&, Json::PathArgument const&, Json::PathArgument const&) [clone .cold]
Json::Path::addPathInArg(std::string const&, std::vector<Json::PathArgument const*, std::allocator<Json::PathArgument const*> > const&, __gnu_cxx::__normal_iterator<Json::PathArgument const* const*, std::vector<Json::PathArgument const*, std::allocator<Json::PathArgument const*> > >&, Json::PathArgument::Kind)
Json::Path::invalidPath(std::string const&, int)
Json::Path::make(Json::Value&) const
Json::Path::makePath(std::string const&, std::vector<Json::PathArgument const*, std::allocator<Json::PathArgument const*> > const&)
Json::Path::makePath(std::string const&, std::vector<Json::PathArgument const*, std::allocator<Json::PathArgument const*> > const&) [clone .cold]
Json::Path::resolve(Json::Value const&) const
Json::Path::resolve(Json::Value const&, Json::Value const&) const
Json::PathArgument::PathArgument()
Json::PathArgument::PathArgument(char const*)
Json::PathArgument::PathArgument(std::string const&)
Json::PathArgument::PathArgument(unsigned int)
Json::Reader::Reader()
Json::Reader::Reader() [clone .cold]
Json::Reader::Reader(Json::Features const&)
Json::Reader::Reader(Json::Features const&) [clone .cold]
Json::Reader::addComment(char const*, char const*, Json::CommentPlacement)
Json::Reader::addComment(char const*, char const*, Json::CommentPlacement) [clone .cold]
Json::Reader::addError(std::string const&, Json::Reader::Token&, char const*)
Json::Reader::addError(std::string const&, Json::Reader::Token&, char const*) [clone .cold]
Json::Reader::addErrorAndRecover(std::string const&, Json::Reader::Token&, Json::Reader::TokenType)
Json::Reader::currentValue()
Json::Reader::decodeDouble(Json::Reader::Token&)
Json::Reader::decodeDouble(Json::Reader::Token&) [clone .cold]
Json::Reader::decodeDouble(Json::Reader::Token&, Json::Value&)
Json::Reader::decodeDouble(Json::Reader::Token&, Json::Value&) [clone .cold]
Json::Reader::decodeNumber(Json::Reader::Token&)
Json::Reader::decodeNumber(Json::Reader::Token&) [clone .cold]
Json::Reader::decodeNumber(Json::Reader::Token&, Json::Value&)
Json::Reader::decodeNumber(Json::Reader::Token&, Json::Value&) [clone .cold]
Json::Reader::decodeString(Json::Reader::Token&)
Json::Reader::decodeString(Json::Reader::Token&) [clone .cold]
Json::Reader::decodeString(Json::Reader::Token&, std::string&)
Json::Reader::decodeString(Json::Reader::Token&, std::string&) [clone .cold]
Json::Reader::decodeUnicodeCodePoint(Json::Reader::Token&, char const*&, char const*, unsigned int&)
Json::Reader::decodeUnicodeCodePoint(Json::Reader::Token&, char const*&, char const*, unsigned int&) [clone .cold]
Json::Reader::decodeUnicodeEscapeSequence(Json::Reader::Token&, char const*&, char const*, unsigned int&)
Json::Reader::decodeUnicodeEscapeSequence(Json::Reader::Token&, char const*&, char const*, unsigned int&) [clone .cold]
Json::Reader::getFormatedErrorMessages() const
Json::Reader::getFormattedErrorMessages() const
Json::Reader::getFormattedErrorMessages() const [clone .cold]
Json::Reader::getLocationLineAndColumn(char const*) const
Json::Reader::getLocationLineAndColumn(char const*, int&, int&) const
Json::Reader::getLocationSnippet(char const*) const
Json::Reader::getLocationSnippet(char const*) const [clone .cold]
Json::Reader::getNextChar()
Json::Reader::getStructuredErrors() const
Json::Reader::getStructuredErrors() const [clone .cold]
Json::Reader::good() const
Json::Reader::match(char const*, int)
Json::Reader::parse(char const*, char const*, Json::Value&, bool)
Json::Reader::parse(char const*, char const*, Json::Value&, bool) [clone .cold]
Json::Reader::parse(std::istream&, Json::Value&, bool)
Json::Reader::parse(std::istream&, Json::Value&, bool) [clone .cold]
Json::Reader::parse(std::string const&, Json::Value&, bool)
Json::Reader::pushError(Json::Value const&, std::string const&)
Json::Reader::pushError(Json::Value const&, std::string const&) [clone .cold]
Json::Reader::pushError(Json::Value const&, std::string const&, Json::Value const&)
Json::Reader::pushError(Json::Value const&, std::string const&, Json::Value const&) [clone .cold]
Json::Reader::readArray(Json::Reader::Token&)
Json::Reader::readArray(Json::Reader::Token&) [clone .cold]
Json::Reader::readCStyleComment()
Json::Reader::readComment()
Json::Reader::readCppStyleComment()
Json::Reader::readNumber()
Json::Reader::readObject(Json::Reader::Token&)
Json::Reader::readObject(Json::Reader::Token&) [clone .cold]
Json::Reader::readString()
Json::Reader::readToken(Json::Reader::Token&)
Json::Reader::readValue()
Json::Reader::readValue() [clone .cold]
Json::Reader::recoverFromError(Json::Reader::TokenType)
Json::Reader::skipCommentTokens(Json::Reader::Token&)
Json::Reader::skipSpaces()
Json::RuntimeError::RuntimeError(std::string const&)
Json::RuntimeError::RuntimeError(std::string const&) [clone .cold]
Json::RuntimeError::~RuntimeError()
Json::StreamWriter::Factory::~Factory()
Json::StreamWriter::StreamWriter()
Json::StreamWriter::~StreamWriter()
Json::StreamWriterBuilder::StreamWriterBuilder()
Json::StreamWriterBuilder::StreamWriterBuilder() [clone .cold]
Json::StreamWriterBuilder::newStreamWriter() const
Json::StreamWriterBuilder::newStreamWriter() const [clone .cold]
Json::StreamWriterBuilder::operator[](std::string)
Json::StreamWriterBuilder::setDefaults(Json::Value*)
Json::StreamWriterBuilder::setDefaults(Json::Value*) [clone .cold]
Json::StreamWriterBuilder::validate(Json::Value*) const
Json::StreamWriterBuilder::validate(Json::Value*) const [clone .cold]
Json::StreamWriterBuilder::~StreamWriterBuilder()
Json::StyledStreamWriter::StyledStreamWriter(std::string)
Json::StyledStreamWriter::StyledStreamWriter(std::string) [clone .cold]
Json::StyledStreamWriter::hasCommentForValue(Json::Value const&)
Json::StyledStreamWriter::indent()
Json::StyledStreamWriter::isMultineArray(Json::Value const&)
Json::StyledStreamWriter::pushValue(std::string const&)
Json::StyledStreamWriter::unindent()
Json::StyledStreamWriter::write(std::ostream&, Json::Value const&)
Json::StyledStreamWriter::writeArrayValue(Json::Value const&)
Json::StyledStreamWriter::writeArrayValue(Json::Value const&) [clone .cold]
Json::StyledStreamWriter::writeCommentAfterValueOnSameLine(Json::Value const&)
Json::StyledStreamWriter::writeCommentAfterValueOnSameLine(Json::Value const&) [clone .cold]
Json::StyledStreamWriter::writeCommentBeforeValue(Json::Value const&)
Json::StyledStreamWriter::writeCommentBeforeValue(Json::Value const&) [clone .cold]
Json::StyledStreamWriter::writeIndent()
Json::StyledStreamWriter::writeValue(Json::Value const&)
Json::StyledStreamWriter::writeValue(Json::Value const&) [clone .cold]
Json::StyledStreamWriter::writeWithIndent(std::string const&)
Json::StyledWriter::StyledWriter()
Json::StyledWriter::hasCommentForValue(Json::Value const&)
Json::StyledWriter::indent()
Json::StyledWriter::indent() [clone .cold]
Json::StyledWriter::isMultineArray(Json::Value const&)
Json::StyledWriter::pushValue(std::string const&)
Json::StyledWriter::unindent()
Json::StyledWriter::write(Json::Value const&)
Json::StyledWriter::writeArrayValue(Json::Value const&)
Json::StyledWriter::writeArrayValue(Json::Value const&) [clone .cold]
Json::StyledWriter::writeCommentAfterValueOnSameLine(Json::Value const&)
Json::StyledWriter::writeCommentAfterValueOnSameLine(Json::Value const&) [clone .cold]
Json::StyledWriter::writeCommentBeforeValue(Json::Value const&)
Json::StyledWriter::writeCommentBeforeValue(Json::Value const&) [clone .cold]
Json::StyledWriter::writeIndent()
Json::StyledWriter::writeValue(Json::Value const&)
Json::StyledWriter::writeValue(Json::Value const&) [clone .cold]
Json::StyledWriter::writeWithIndent(std::string const&)
Json::StyledWriter::~StyledWriter()
Json::Value*& std::deque<Json::Value*, std::allocator<Json::Value*> >::emplace_back<Json::Value*>(Json::Value*&&) [clone .isra.0]
Json::Value::CZString::CZString(Json::Value::CZString const&)
Json::Value::CZString::CZString(Json::Value::CZString const&) [clone .cold]
Json::Value::CZString::CZString(Json::Value::CZString&&)
Json::Value::CZString::CZString(char const*, unsigned int, Json::Value::CZString::DuplicationPolicy)
Json::Value::CZString::CZString(unsigned int)
Json::Value::CZString::data() const
Json::Value::CZString::index() const
Json::Value::CZString::isStaticString() const
Json::Value::CZString::length() const
Json::Value::CZString::operator<(Json::Value::CZString const&) const
Json::Value::CZString::operator=(Json::Value::CZString)
Json::Value::CZString::operator==(Json::Value::CZString const&) const
Json::Value::CZString::swap(Json::Value::CZString&)
Json::Value::CZString::~CZString()
Json::Value::CommentInfo::CommentInfo()
Json::Value::CommentInfo::setComment(char const*, unsigned long)
Json::Value::CommentInfo::setComment(char const*, unsigned long) [clone .cold]
Json::Value::CommentInfo::~CommentInfo()
Json::Value::Value(Json::StaticString const&)
Json::Value::Value(Json::Value const&)
Json::Value::Value(Json::Value const&) [clone .cold]
Json::Value::Value(Json::Value&&)
Json::Value::Value(Json::ValueType)
Json::Value::Value(bool)
Json::Value::Value(char const*)
Json::Value::Value(char const*, char const*)
Json::Value::Value(double)
Json::Value::Value(float)
Json::Value::Value(int)
Json::Value::Value(long long)
Json::Value::Value(std::string const&)
Json::Value::Value(unsigned int)
Json::Value::Value(unsigned long long)
Json::Value::append(Json::Value const&)
Json::Value::append(Json::Value const&) [clone .cold]
Json::Value::asBool() const
Json::Value::asCString() const
Json::Value::asCString() const [clone .cold]
Json::Value::asDouble() const
Json::Value::asFloat() const
Json::Value::asInt() const
Json::Value::asInt64() const
Json::Value::asLargestInt() const
Json::Value::asLargestUInt() const
Json::Value::asString() const
Json::Value::asUInt() const
Json::Value::asUInt64() const
Json::Value::begin()
Json::Value::begin() const
Json::Value::clear()
Json::Value::clear() [clone .cold]
Json::Value::compare(Json::Value const&) const
Json::Value::empty() const
Json::Value::end()
Json::Value::end() const
Json::Value::find(char const*, char const*) const
Json::Value::find(char const*, char const*) const [clone .cold]
Json::Value::get(char const*, Json::Value const&) const
Json::Value::get(char const*, char const*, Json::Value const&) const
Json::Value::get(char const*, char const*, Json::Value const&) const [clone .cold]
Json::Value::get(std::string const&, Json::Value const&) const
Json::Value::get(unsigned int, Json::Value const&) const
Json::Value::get(unsigned int, Json::Value const&) const [clone .cold]
Json::Value::getComment(Json::CommentPlacement) const
Json::Value::getMemberNames() const
Json::Value::getMemberNames() const [clone .cold]
Json::Value::getOffsetLimit() const
Json::Value::getOffsetStart() const
Json::Value::getString(char const**, char const**) const
Json::Value::hasComment(Json::CommentPlacement) const
Json::Value::initBasic(Json::ValueType, bool)
Json::Value::isArray() const
Json::Value::isBool() const
Json::Value::isConvertibleTo(Json::ValueType) const
Json::Value::isConvertibleTo(Json::ValueType) const [clone .cold]
Json::Value::isDouble() const
Json::Value::isInt() const
Json::Value::isInt64() const
Json::Value::isIntegral() const
Json::Value::isMember(char const*) const
Json::Value::isMember(char const*, char const*) const
Json::Value::isMember(std::string const&) const
Json::Value::isNull() const
Json::Value::isNumeric() const
Json::Value::isObject() const
Json::Value::isString() const
Json::Value::isUInt() const
Json::Value::isUInt64() const
Json::Value::isValidIndex(unsigned int) const
Json::Value::maxInt
Json::Value::maxInt64
Json::Value::maxLargestInt
Json::Value::maxLargestUInt
Json::Value::maxUInt
Json::Value::maxUInt64
Json::Value::minInt
Json::Value::minInt64
Json::Value::minLargestInt
Json::Value::null
Json::Value::nullRef
Json::Value::operator!() const
Json::Value::operator!=(Json::Value const&) const
Json::Value::operator<(Json::Value const&) const
Json::Value::operator<=(Json::Value const&) const
Json::Value::operator=(Json::Value)
Json::Value::operator==(Json::Value const&) const
Json::Value::operator>(Json::Value const&) const
Json::Value::operator>=(Json::Value const&) const
Json::Value::operator[](Json::StaticString const&)
Json::Value::operator[](char const*)
Json::Value::operator[](char const*) const
Json::Value::operator[](int)
Json::Value::operator[](int) [clone .cold]
Json::Value::operator[](int) const
Json::Value::operator[](int) const [clone .cold]
Json::Value::operator[](std::string const&)
Json::Value::operator[](std::string const&) const
Json::Value::operator[](unsigned int)
Json::Value::operator[](unsigned int) [clone .cold]
Json::Value::operator[](unsigned int) const
Json::Value::operator[](unsigned int) const [clone .cold]
Json::Value::removeIndex(unsigned int, Json::Value*)
Json::Value::removeIndex(unsigned int, Json::Value*) [clone .cold]
Json::Value::removeMember(char const*)
Json::Value::removeMember(char const*) [clone .cold]
Json::Value::removeMember(char const*, Json::Value*)
Json::Value::removeMember(char const*, char const*, Json::Value*)
Json::Value::removeMember(char const*, char const*, Json::Value*) [clone .cold]
Json::Value::removeMember(std::string const&)
Json::Value::removeMember(std::string const&, Json::Value*)
Json::Value::resize(unsigned int)
Json::Value::resize(unsigned int) [clone .cold]
Json::Value::resolveReference(char const*)
Json::Value::resolveReference(char const*) [clone .cold]
Json::Value::resolveReference(char const*, char const*)
Json::Value::resolveReference(char const*, char const*) [clone .cold]
Json::Value::setComment(char const*, Json::CommentPlacement)
Json::Value::setComment(char const*, unsigned long, Json::CommentPlacement)
Json::Value::setComment(std::string const&, Json::CommentPlacement)
Json::Value::setOffsetLimit(unsigned long)
Json::Value::setOffsetStart(unsigned long)
Json::Value::size() const
Json::Value::swap(Json::Value&)
Json::Value::swapPayload(Json::Value&)
Json::Value::toStyledString() const
Json::Value::toStyledString() const [clone .cold]
Json::Value::type() const
Json::Value::~Value()
Json::ValueConstIterator::ValueConstIterator()
Json::ValueConstIterator::ValueConstIterator(Json::ValueIterator const&)
Json::ValueConstIterator::ValueConstIterator(std::_Rb_tree_iterator<std::pair<Json::Value::CZString const, Json::Value> > const&)
Json::ValueConstIterator::operator=(Json::ValueIteratorBase const&)
Json::ValueIterator::ValueIterator()
Json::ValueIterator::ValueIterator(Json::ValueConstIterator const&)
Json::ValueIterator::ValueIterator(Json::ValueConstIterator const&) [clone .cold]
Json::ValueIterator::ValueIterator(Json::ValueIterator const&)
Json::ValueIterator::ValueIterator(std::_Rb_tree_iterator<std::pair<Json::Value::CZString const, Json::Value> > const&)
Json::ValueIterator::operator=(Json::ValueIterator const&)
Json::ValueIteratorBase::ValueIteratorBase()
Json::ValueIteratorBase::ValueIteratorBase(std::_Rb_tree_iterator<std::pair<Json::Value::CZString const, Json::Value> > const&)
Json::ValueIteratorBase::computeDistance(Json::ValueIteratorBase const&) const
Json::ValueIteratorBase::copy(Json::ValueIteratorBase const&)
Json::ValueIteratorBase::decrement()
Json::ValueIteratorBase::deref() const
Json::ValueIteratorBase::increment()
Json::ValueIteratorBase::index() const
Json::ValueIteratorBase::isEqual(Json::ValueIteratorBase const&) const
Json::ValueIteratorBase::key() const
Json::ValueIteratorBase::key() const [clone .cold]
Json::ValueIteratorBase::memberName() const
Json::ValueIteratorBase::memberName(char const**) const
Json::ValueIteratorBase::name() const
Json::Writer::~Writer()
Json::codePointToUTF8(unsigned int)
Json::codePointToUTF8(unsigned int) [clone .cold]
Json::duplicateAndPrefixStringValue(char const*, unsigned int)
Json::duplicateAndPrefixStringValue(char const*, unsigned int) [clone .cold]
Json::kNull
Json::kNullRef
Json::normalizeEOL(char const*, char const*)
Json::normalizeEOL(char const*, char const*) [clone .cold]
Json::operator<<(std::ostream&, Json::Value const&)
Json::operator<<(std::ostream&, Json::Value const&) [clone .cold]
Json::operator>>(std::istream&, Json::Value&)
Json::operator>>(std::istream&, Json::Value&) [clone .cold]
Json::parseFromStream(Json::CharReader::Factory const&, std::istream&, Json::Value*, std::string*)
Json::parseFromStream(Json::CharReader::Factory const&, std::istream&, Json::Value*, std::string*) [clone .cold]
Json::throwLogicError(std::string const&)
Json::throwRuntimeError(std::string const&)
Json::valueToQuotedString(char const*)
Json::valueToQuotedString(char const*) [clone .cold]
Json::valueToQuotedStringN(char const*, unsigned int)
Json::valueToQuotedStringN(char const*, unsigned int) [clone .cold]
Json::valueToString(bool)
Json::valueToString(double)
Json::valueToString(double, bool, unsigned int)
Json::valueToString(int)
Json::valueToString(long long)
Json::valueToString(unsigned int)
Json::valueToString(unsigned long long)
Json::writeString(Json::StreamWriter::Factory const&, Json::Value const&)
Json::writeString(Json::StreamWriter::Factory const&, Json::Value const&) [clone .cold]
K
L
LAYER:%2d[%d|%d|%d] [%d|%d|%d]
Left Eye
LfMutexLockRobust(LfMutex*, timespec const*)
LfMutexUnlockRobust(LfMutex*)
Line %d, Column %d
LoadAvailableLayers
LoadInstanceExtensions
Log(ELogLevel, char const*, ...)
Log(char const*, ...)
LogDirect(ELogLevel, char const*, __va_list_tag (&) [1])
Looking for direct display through RandR2
M
ME%d-Downsampled-%s
ME%d-MaskedRgb-%s-%s
ME-CopyOutput
ME-CreateVisibleAreaMask
ME-Downsampler
ME-Downsampler-Frag
ME-Downsampler-Vert
ME-Input
ME-Luma-Frag
ME-Luma-Vert
ME-Lumasampler
ME-Mask-Frag
ME-Mask-Vert
ME-Masker
ME-Reproject-Frag
ME-Reproject-Vert
ME-Reprojector-Align
ME-Reprojector-Mask
ME-VisibleAreaMask-%s
ME-VisibleAreaMask-Graphics Command Pool
ME-VisibleAreaMask-Timeline
MV-Attenuation
MV-Attenuation-%s
MV-CostReduce
MV-Input-%s-Buffer
MV-MeanMaxBlur
MV-Median5x5
MV-PingPong%d-%s
MV-PreviousInput-%s
MV-Threshold
Map
Mar 23 2023
MarkInUse
Mask Input Image
MillisecondsFromNanoseconds(unsigned long)
Minidump comment truncated
Missing ',' or ']' in array declaration
Missing ',' or '}' in object declaration
Missing ':' after object member name
Missing '}' or object member name
Motion Vector Attenuation Pipeline
Motion Vector CostReduce Pipeline
Motion Vector MeanMaxBlur Pipeline
Motion Vector Median5x5 Pipeline
Motion Vector Threshold Pipeline
N
N18CPrismDisplay_Null7FactoryE
N19CFrameHallucination21IDestinationFrameInfoE
N20CPrismDisplay_Vulkan7FactoryE
N3IPC10ISharedMemE
N3IPC11ISyncObjectE
N3IPC17PosixSharedMemoryE
N3IPC17SharedObjectEventE
N3IPC17SharedObjectMutexE
N3IPC6IEventE
N3IPC6IMutexE
N4Json10CharReader7FactoryE
N4Json10CharReaderE
N4Json10FastWriterE
N4Json10LogicErrorE
N4Json12RuntimeErrorE
N4Json12StreamWriter7FactoryE
N4Json12StreamWriterE
N4Json12StyledWriterE
N4Json13OurCharReaderE
N4Json17CharReaderBuilderE
N4Json19StreamWriterBuilderE
N4Json23BuiltStyledStreamWriterE
N4Json6WriterE
N4Json9ExceptionE
N5facet21CVkTimestampQueryPoolILj2EEE
N5facet25CVkTimestampQueryPoolBaseE
NaN
NanosecondsFromSystemTicks(unsigned long)
NewBatch
None
Null
Null Client
O
OnPreSubmit
Out of thread local storage!
Outer
P
PFbcE
PFv9ELogLevelPKcPvE
PRISM_AcquireDisplay
PRISM_AcquireDisplay.cold
PRISM_ClientDisconnected
PRISM_CreateDisplayFactory
PRISM_CreateDisplayFactory.cold
PRISM_CreateInstance
PRISM_CreateInstance.cold
PRISM_CreateMotionEstimator
PRISM_CreateMotionEstimator.cold
PRISM_DestroyDisplayFactory
PRISM_DestroyInstance
PRISM_DestroyMotionEstimator
PRISM_DumpHistory
PRISM_GetConnectedDisplays
PRISM_GetDisplayModes
PRISM_GetDisplaySubsystems
PRISM_GetMotionEstimatorSubsystems
PRISM_GetPoseProvider
PRISM_GetPoseProvider.cold
PRISM_HmdActivated
PRISM_Initialize
PRISM_RegisterDisplaySubsystem
PRISM_RegisterDisplaySubsystem.cold
PRISM_RegisterLogCallback
PRISM_RegisterLogCallback.cold
PRISM_RegisterMotionEstimatorSubsystem
PRISM_RegisterMotionEstimatorSubsystem.cold
PRISM_RegisterPoseProviderSubsystem
PRISM_RegisterPoseProviderSubsystem.cold
PRISM_ReleaseDisplay
PRISM_Run
PRISM_Run.cold
PRISM_RunFrame
PRISM_SetDisplayMode
PRISM_SetFrameInfoCallback
PRISM_Shutdown
PRISM_Stop
Panel Mask Index Buffer-%s%s
Panel Mask Render Pipeline-B
Panel Mask Render Pipeline-G
Panel Mask Render Pipeline-R
Panel Mask Render Pipeline-RGB
Panel Mask Vertex Buffer-%s%s
PanelMask-%s
PanelMask-Frag
PanelMask-Staging
PanelMask-Vert
ParseStringListFromJson(std::vector<std::string, std::allocator<std::string> >*, Json::Value const&, char const*)
ParseStringListFromJson(std::vector<std::string, std::allocator<std::string> >*, Json::Value const&, char const*) [clone .cold]
Path_Compact(std::string const&, char)
Path_Compact(std::string const&, char) [clone .cold]
Path_DeleteDirectory(std::string const&, bool)
Path_Exists(std::string const&)
Path_FilePathToUrl(std::string const&, std::string const&)
Path_FilePathToUrl(std::string const&, std::string const&) [clone .cold]
Path_FindParentDirectoryRecursively(std::string const&, std::string const&)
Path_FindParentDirectoryRecursively(std::string const&, std::string const&) [clone .cold]
Path_FindParentSubDirectoryRecursively(std::string const&, std::string const&)
Path_FindParentSubDirectoryRecursively(std::string const&, std::string const&) [clone .cold]
Path_FixSlashes(std::string const&, char)
Path_FixSlashes(std::string const&, char) [clone .cold]
Path_GetExecutablePath()
Path_GetExtension(std::string const&)
Path_GetSlash()
Path_GetTemporaryDirectory()
Path_GetThisModulePath()
Path_GetWorkingDirectory()
Path_GetWorkingDirectory() [clone .cold]
Path_IsAbsolute(std::string const&)
Path_IsAppBundle(std::string const&)
Path_IsDirectory(std::string const&)
Path_IsDirectory(std::string const&) [clone .cold]
Path_IsSamePath(std::string const&, std::string const&)
Path_IsSamePath(std::string const&, std::string const&) [clone .cold]
Path_Join(std::string const&, std::string const&, char)
Path_Join(std::string const&, std::string const&, char) [clone .cold]
Path_Join(std::string const&, std::string const&, std::string const&, char)
Path_Join(std::string const&, std::string const&, std::string const&, char) [clone .cold]
Path_Join(std::string const&, std::string const&, std::string const&, std::string const&, char)
Path_Join(std::string const&, std::string const&, std::string const&, std::string const&, char) [clone .cold]
Path_Join(std::string const&, std::string const&, std::string const&, std::string const&, std::string const&, char)
Path_Join(std::string const&, std::string const&, std::string const&, std::string const&, std::string const&, char) [clone .cold]
Path_MakeAbsolute(std::string const&, std::string const&)
Path_MakeAbsolute(std::string const&, std::string const&) [clone .cold]
Path_MakeWritable(std::string const&)
Path_ReadBinaryFile(std::string const&)
Path_ReadBinaryFile(std::string const&) [clone .cold]
Path_ReadBinaryFile(std::string const&, int*)
Path_ReadBinaryFile(std::string const&, unsigned char*, unsigned int)
Path_ReadTextFile(std::string const&)
Path_RemoveTrailingSlash(std::string const&, char)
Path_RemoveTrailingSlash(std::string const&, char) [clone .cold]
Path_SanitizeFilename(std::string const&)
Path_SanitizeFilename(std::string const&) [clone .cold]
Path_SetWorkingDirectory(std::string const&)
Path_StripDirectory(std::string const&, char)
Path_StripExtension(std::string const&)
Path_StripFilename(std::string const&, char)
Path_UnlinkFile(std::string const&)
Path_UrlToFilePath(std::string const&)
Path_UrlToFilePath(std::string const&) [clone .cold]
Path_WriteBinaryFile(std::string const&, unsigned char*, unsigned int)
Path_WriteStringToTextFile(std::string const&, char const*)
Path_WriteStringToTextFileAtomic(std::string const&, char const*)
Path_WriteStringToTextFileAtomic(std::string const&, char const*) [clone .cold]
Plat_IsInDebugSession
Plat_IsInDebugSession::fp
PrepareInput
Present
Prism
Prism Allocator
Prism Clients
Prism Copy Pipeline
Prism Copy UBO
Prism Device
Prism Layers (%s)
Prism Main Pipeline
Prism UBO (%s)
Prism-CompositeLayers
Prism-ComputeCommandPool
Prism-Copy
Prism-CopyLayers
Prism-FilterMotionVectors
Prism-GraphicsCommandPool
Prism-HallucinateFrame
Prism-ImportClients
Prism-InitLayouts
Prism-Main
Prism-PrepareInput
Prism-UpdatePanelMask
Process %d failed to shm_open %s: %d
Q
R
RENDERDOC_GetAPI
Ran out of IPC SharedObjectManager entries!
ReapChildProcesses(int)
Recording stopped.
Reference
RegisterDestinationImage
ReleaseThreadHandle
Remap
RenderDoc::CCaptureScope::CCaptureScope(VkInstance_T*)
RenderDoc::CCaptureScope::~CCaptureScope()
RenderDoc::Initialize()
RenderDoc::TriggerCapture()
RepairUTF8(char const*, char const*, std::string&)
RepairUTF8(char const*, char const*, std::string&) [clone .cold]
RepairUTF8(std::string const&, std::string&)
Reproject Index Buffer-%s
Reproject Reference Image
Reproject Vertex Buffer-%s
Requested Force create but SharedObjectMutex already created
Reset
Resource: InUse:%d name:%s
ReturnStdString(std::string const&, char*, unsigned int)
Right Eye
RunFrame
S
SDL_GetError
SDL_GetPowerInfo
SDL_SetThreadPriority
SPV_NV_compute_shader_derivatives
STEAMVR_APPKEY
STEAMVR_DISABLE_CRASH_REPORTING
STEAMVR_DISABLE_THREAD_WATCHDOGS
STEAMVR_ENABLE_THREAD_WATCHDOGS
SecondsToSystemTicks(double)
See
Self queried namespace: %u
Set thread %p priority to: %d
SetCurrentProcessExplicitAppUserModelID()
SetDebugName
SetDisplayMode
SetEnvironmentVariable(char const*, char const*)
SetFov
SharedObjMgr().Init() failed
Shutdown
Signal
Signal[%d]:%lu
Skipping CalculateMotion (%lu)
Skipping CalculateMotion (swapchain mismatch)
Socket closed
Somebody locked a non-leaf shared memory %s while %s was already locked
St12codecvt_utf8IDiLm1114111ELSt12codecvt_mode0EE
St12codecvt_utf8IwLm1114111ELSt12codecvt_mode0EE
SteamAPI_SetBreakpadAppID
SteamAPI_SetMiniDumpComment
SteamAPI_UseBreakpadCrashHandler
SteamAPI_WriteMiniDump
SteamAppId
SteamGameId
SteamVRVersionAsString()
SteamVRVersionAsString() [clone .cold]
SteamVRVersionAsString()::s_sCachedVersion
SteamVR_Namespace
StringHasPrefix(std::string const&, std::string const&)
StringHasPrefixCaseSensitive(std::string const&, std::string const&)
StringHasSuffix(std::string const&, std::string const&)
StringHasSuffixCaseSensitive(std::string const&, std::string const&)
StringListToJson(std::vector<std::string, std::allocator<std::string> > const&, Json::Value&, char const*)
StringListToJson(std::vector<std::string, std::allocator<std::string> > const&, Json::Value&, char const*) [clone .cold]
StringToLower(std::string const&)
StringToLower(std::string const&) [clone .cold]
StringToUint64(std::string const&)
StringToUpper(std::string const&)
StringToUpper(std::string const&) [clone .cold]
Submit
SubmitAndWait
Swapchain
Syntax error: value, object or array expected.
SystemTicksFromNanoseconds(unsigned long)
SystemTicksToSeconds(unsigned long)
SystemTimeSleep(unsigned int)
SystemTimeSleepUntil(double)
T
TMPDIR
TVkImageHistory<4ul>::~TVkImageHistory()
Thread failed to initialize 1
Thread failed to initialize 2
Thread watchdog timed out %s
Thread watchdog with a small timout %f. Timeouts should usually be multiple seconds.
Thread(0x%p/0x%p/0x%x)
ThreadCloseProcess
ThreadGetCurrentHandle
ThreadGetCurrentId
ThreadGetCurrentProcessHandle
ThreadGetCurrentProcessId
ThreadGetCurrentRunningRef
ThreadGetPriority
ThreadGetProcessExitCode
ThreadGetProcessListInfo
ThreadGetProcessParentID
ThreadGetProcessPriority
ThreadInMainThread
ThreadInitSchedulerForRtkit()::sInitMutex
ThreadInitSchedulerForRtkit()::sbThreadSchedInitialized
ThreadInterlockedAssignIf
ThreadInterlockedAssignIf64
ThreadInterlockedAssignPointerIf
ThreadInterlockedCompareExchange
ThreadInterlockedCompareExchange64
ThreadInterlockedCompareExchangePointer
ThreadInterlockedDecrement
ThreadInterlockedDecrement64
ThreadInterlockedExchange
ThreadInterlockedExchange64
ThreadInterlockedExchangeAdd
ThreadInterlockedExchangeAdd64
ThreadInterlockedExchangePointer
ThreadInterlockedIncrement
ThreadInterlockedIncrement64
ThreadIsProcessActive
ThreadIsThreadRunning
ThreadOpenProcess
ThreadOverrideCurrentProcessId
ThreadProcConvert(void*)
ThreadResumeSignal(int)
ThreadSetAffinity
ThreadSetDebugName
ThreadSetDescription
ThreadSetPriority
ThreadSetPriority.cold
ThreadSetProcessPriority
ThreadShellExecute
ThreadShellExecute::bInstalledSignalHandler
ThreadSleep
ThreadSuspendSignal(int)
ThreadTerminate
ThreadTerminateProcessCode
ThreadWaitForProcessExit
ThreadYield()
Timeline: refs:%d name:%s
TimestampQueryPool-%s
TokenizeString(std::string const&, char)
TokenizeString(std::string const&, char) [clone .cold]
TracerPid:
TrimTrailingWhitespace(std::string const&)
U
USER
UTF16to8(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&)
UTF16to8(wchar_t const*)
UTF16to8(wchar_t const*) [clone .cold]
UTF16to8(wchar_t const*)::s_converter
UTF8to16(char const*)
UTF8to16(char const*) [clone .cold]
UTF8to16(char const*)::s_converter
UTF8to16(std::string const&)
Uint64ToString(unsigned long)
Unable to bind server socket errno=%d
Unable to connect to pipe errno=%d
Unable to create path registry directory %s
Unable to create server socket errno=%d
Unable to create shared memory %s for IPC client
Unable to create shared mutex %s for IPC client
Unable to create shared state %s because namespace wasn't available
Unable to determine VR Path Registry filename
Unable to listen on server socket. errno=%d
Unable to parse
Unable to parse token length
Unable to read VR Path Registry from
Unable to read message from socket
Unable to read message from socket: %d
Unable to write VR path registry to %s
Unexpected failure when checking for timeline signal
UnixTimeToDateAndTimeString(unsigned long)
UnixTimeToDateString(unsigned long)
Unknown priority class!
Unused Resources: size:%zu
Unused timelines: size:%zu
Update attenuation texture
UpdatePanelMask
UpdateResults
Upload raw motion vectors
UploadMotionVectors
Usage
UseDevice
UsePhysicalDevice
Using physical device: %s
V
VALVE
VK_EXT_acquire_xlib_display
VK_EXT_debug_utils
VK_EXT_direct_mode_display
VK_EXT_global_priority
VK_EXT_validation_features
VK_KHR_display
VK_KHR_external_memory_fd
VK_KHR_external_semaphore_fd
VK_KHR_present_id
VK_KHR_present_wait
VK_KHR_surface
VK_KHR_swapchain
VK_LAYER_KHRONOS_validation
VK_NV_compute_shader_derivatives
VR Path Registry node %s is not an array
VRCrashHandlingInit(std::function<void (bool)>)
VRCrashHandlingInit(std::function<void (bool)>) [clone .cold]
VRCrashHandlingInit(std::function<void (bool)>)::{lambda(void*)#1}::_FUN(void*)
VRCrashPreCrashSetMinidumpComment(char const*) [clone .part.0]
VRCrashPreCrashSetMinidumpComment(char const*)::szMinidumpCommentBuffer
VRCrashPreCrashSetMinidumpComment(char const*)::szPrefix
VRSetProcessCrashIdentifier(char const*)
VRWriteMiniDump(char const*, bool)
VRWriteMiniDumpIfSetup(char const*, bool)
VRWriteMiniDump_Internal(char const*, unsigned int, void*, bool) [clone .constprop.0]
VRWriteMiniDump_Internal(char const*, unsigned int, void*, bool) [clone .constprop.0] [clone .cold]
VRWriteMiniDump_Internal(char const*, unsigned int, void*, bool)::s_mutex
VR_CONFIG_PATH
VR_LOG_PATH
VR_OVERRIDE
VR_PATHREG_OVERRIDE
VSYNC:  %8d<%07.4f %0.4f
VTT for std::basic_ifstream<char, std::char_traits<char> >
VTT for std::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >
VTT for std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >
V_StripExtension(std::string&)
V_URLDecode(char*, int, char const*, int)
V_URLDecodeInternal(char*, int, char const*, int, bool)
V_URLDecodeInternal(char*, int, char const*, int, bool) [clone .part.0]
V_URLDecodeNoPlusForSpace(char*, int, char const*, int)
V_URLEncode(char*, int, char const*, int)
V_URLEncode(char*, int, char const*, int) [clone .cold]
V_URLEncodeFullPath(char*, int, char const*, int)
V_URLEncodeFullPath(char*, int, char const*, int) [clone .cold]
V_URLEncodeInternal(char*, int, char const*, int, bool, std::function<bool (char)>)
V_URLEncodeNoPlusForSpace(char*, int, char const*, int)
V_URLEncodeNoPlusForSpace(char*, int, char const*, int) [clone .cold]
ValidateReferencedResources
Valve Corporation
VerifyTidIntegrity failed for thread %d. Most likely this process was forked after calling ThreadGetCurrentId.
VerifyTidIntegrity()
VkExtensionProperties* std::__uninitialized_default_n_1<true>::__uninit_default_n<VkExtensionProperties*, unsigned long>(VkExtensionProperties*, unsigned long)
VkLayerProperties* std::__uninitialized_default_n_1<true>::__uninit_default_n<VkLayerProperties*, unsigned long>(VkLayerProperties*, unsigned long)
VrInitGpuProfiling()
Vulkan
VulkanDisplay_t
W
Wait:%lu
WaitForPresent
WaitForWork
WaitMultiple
Waiting for shared fd client failed
Warning: Watchdog %s not properly cleaned up%s%s
Warning: unexpected vulkan major version
Watchdog namespace: %u
X
XCloseDisplay
XDG_CONFIG_HOME
XFree86_DDC_EDID_RAWDATA
XGetXCBConnection
XOpenDisplay
Y
YUV conversion - %s
Z
[
[.
\
\"
\\
\b
\f
\n
\r
\t
\u
]
^
_
_%u
_DYNAMIC
_GLOBAL_OFFSET_TABLE_
_GLOBAL__sub_I.00101_ipcposix.cpp
_GLOBAL__sub_I_framehallucination.cpp
_GLOBAL__sub_I_framehallucination.cpp.cold
_GLOBAL__sub_I_ipcpipe.cpp
_GLOBAL__sub_I_logbuffer.cpp
_GLOBAL__sub_I_prism.cpp
_GLOBAL__sub_I_prismdisplay_null.cpp
_GLOBAL__sub_I_prismdisplay_vulkan.cpp
_GLOBAL__sub_I_prismposeprovider_null.cpp
_GLOBAL__sub_I_sharedresourcenamespace.cpp
_GLOBAL__sub_I_strtools_public.cpp
_GLOBAL__sub_I_threadtools.cpp
_GLOBAL__sub_I_threadwatchdog.cpp
_GLOBAL__sub_I_vkdevice.cpp
_GLOBAL__sub_I_vkdevice.cpp.cold
_GLOBAL__sub_I_vrcrash.cpp
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
_Unwind_Backtrace
_Unwind_Backtrace.cold
_Unwind_DebugHook
_Unwind_DeleteException
_Unwind_FindEnclosingFunction
_Unwind_Find_FDE
_Unwind_Find_FDE.cold
_Unwind_ForcedUnwind
_Unwind_ForcedUnwind_Phase2
_Unwind_ForcedUnwind_Phase2.cold
_Unwind_GetCFA
_Unwind_GetDataRelBase
_Unwind_GetGR
_Unwind_GetGR.cold
_Unwind_GetIP
_Unwind_GetIPInfo
_Unwind_GetLanguageSpecificData
_Unwind_GetRegionStart
_Unwind_GetTextRelBase
_Unwind_IteratePhdrCallback
_Unwind_IteratePhdrCallback.cold
_Unwind_RaiseException
_Unwind_RaiseException.cold
_Unwind_RaiseException_Phase2
_Unwind_RaiseException_Phase2.cold
_Unwind_Resume
_Unwind_Resume.cold
_Unwind_Resume_or_Rethrow
_Unwind_Resume_or_Rethrow.cold
_Unwind_SetGR
_Unwind_SetGR.cold
_Unwind_SetIP
__FRAME_END__
__TMC_END__
__TMC_LIST__
__bss_start
__cxa_allocate_exception
__cxa_atexit
__cxa_begin_catch
__cxa_end_catch
__cxa_finalize
__cxa_free_exception
__cxa_guard_abort
__cxa_guard_acquire
__cxa_guard_release
__cxa_pure_virtual
__cxa_rethrow
__cxa_throw
__deregister_frame
__deregister_frame_info
__deregister_frame_info_bases
__do_global_dtors_aux
__do_global_dtors_aux_fini_array_entry
__dso_handle
__dynamic_cast
__errno_location
__frame_dummy_init_array_entry
__frame_state_for
__fxstat
__gmon_start__
__gxx_personality_v0
__isoc99_sscanf
__pthread_key_create
__register_frame
__register_frame_info
__register_frame_info_bases
__register_frame_info_table
__register_frame_info_table_bases
__register_frame_table
__tls_get_addr
__xstat
__xstat64
_edata
_end
_exit
_findclose(long)
_findfirst(char const*, _finddata_t*)
_findnext(long, _finddata_t*)
_fini
`
a
abort
accept
acosf
add_fdes
add_fdes.cold
additional six characters expected to parse unicode surrogate pair.
adds.1
allowComments
allowDroppedNullPlaceholders
allowNumericKeys
allowSingleQuotes
allowSpecialFloats
alphasort
alse
any_objects_registered
assert json failed
atanf
b
basic_string::_S_construct null not valid
basic_string::at: __n (which is %zu) >= this->size() (which is %zu)
basic_string::erase
basic_string::substr
bind
bool std::__do_str_codecvt<std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >, char, std::codecvt<wchar_t, char, __mbstate_t>, __mbstate_t, std::codecvt_base::result (std::codecvt<wchar_t, char, __mbstate_t>::*)(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const>(char const*, char const*, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >&, std::codecvt<wchar_t, char, __mbstate_t> const&, __mbstate_t&, unsigned long&, std::codecvt_base::result (std::codecvt<wchar_t, char, __mbstate_t>::*)(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const)
bool std::__do_str_codecvt<std::string, wchar_t, std::codecvt<wchar_t, char, __mbstate_t>, __mbstate_t, std::codecvt_base::result (std::codecvt<wchar_t, char, __mbstate_t>::*)(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const>(wchar_t const*, wchar_t const*, std::string&, std::codecvt<wchar_t, char, __mbstate_t> const&, __mbstate_t&, unsigned long&, std::codecvt_base::result (std::codecvt<wchar_t, char, __mbstate_t>::*)(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const)
c
cIntToHexDigit(int)
cannot create std::deque larger than max_size()
cannot create std::vector larger than max_size()
char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .isra.0]
char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag) [clone .part.0]
chdir
chmod
classify_object_over_fdes
classify_object_over_fdes.cold
clock_gettime
clock_nanosleep
close
closedir
collectComments
commentStyle
completed.0
computeCommandSet.Valid()
config
connect
crc32(unsigned int, void const*, unsigned long)
crc32(unsigned int, void const*, unsigned long)::crcTable
createInfo.pComputeDistortion
d
data->IsInitialized()
data.hIPC.IsValid()
deque::_M_new_elements_at_back
deregister_tm_clones
dl_iterate_phdr
dladdr
dlopen
dlsym
drawInfo.pVertexBuffer != nullptr
dropNullPlaceholders
dup
e
enableYAMLCompatibility
execute_cfa_program
execute_cfa_program.cold
execute_stack_op
execute_stack_op.cold
expecting another \u token to begin the second half of a unicode surrogate pair
external_drivers
f
facet::AppendToNextChain(void const*&, void const*)
facet::AppendToNextChain(void*&, void*)
facet::BytesPerCompressedBlock(VkFormat)
facet::BytesPerTexel(VkFormat)
facet::BytesRequired(VkFormat, unsigned int, unsigned int)
facet::BytesRequired(VkFormat, unsigned int, unsigned int, unsigned int)
facet::CPanelMask::CPanelMask()
facet::CPanelMask::GenerateMesh(std::vector<facet::CPanelMask::Vertex_t, std::allocator<facet::CPanelMask::Vertex_t> >&, std::vector<unsigned short, std::allocator<unsigned short> >&, vr::EVREye, facet::CPanelMask::ColorChannel_t::Value_t, float) const
facet::CPanelMask::GenerateOuterMesh(std::vector<facet::CPanelMask::Vertex_t, std::allocator<facet::CPanelMask::Vertex_t> >&, std::vector<unsigned short, std::allocator<unsigned short> >&, vr::EVREye) const
facet::CPanelMask::GenerateOuterMesh(std::vector<facet::CPanelMask::Vertex_t, std::allocator<facet::CPanelMask::Vertex_t> >&, std::vector<unsigned short, std::allocator<unsigned short> >&, vr::EVREye) const::EdgeHelper_t::GetVertex(vr::HmdVector2_t const&, facet::CPanelMask::Direction_t::Value_t, facet::CPanelMask::Direction_t::Value_t)
facet::CPanelMask::GetLerpFactor(vr::EVREye, facet::CPanelMask::Direction_t::Value_t) const
facet::CPanelMask::GetLineLoop(vr::EVREye, facet::CPanelMask::Boundary_t::Value_t) const
facet::CPanelMask::Initialize(facet::CPanelMask::CreateInfo_t const&)
facet::CPanelMask::Initialize(facet::CPanelMask::CreateInfo_t const&) [clone .cold]
facet::CPanelMask::Release()
facet::CPanelMask::Update(vr::EVREye, facet::CPanelMask::ReprojectionInfo_t const*)
facet::CPanelMask::Vertex_t& std::vector<facet::CPanelMask::Vertex_t, std::allocator<facet::CPanelMask::Vertex_t> >::emplace_back<facet::CPanelMask::Vertex_t>(facet::CPanelMask::Vertex_t&&) [clone .isra.0]
facet::CPanelMask::~CPanelMask()
facet::CVkTimestampQueryPool<2u>::Create(CVkDevice*, char const*)
facet::CVkTimestampQueryPool<2u>::~CVkTimestampQueryPool()
facet::CVkTimestampQueryPoolBase::CmdWriteTimestamp(CVkCommandBuffer*, unsigned int, VkPipelineStageFlagBits)
facet::CVkTimestampQueryPoolBase::Initialize(unsigned int)
facet::CVkTimestampQueryPoolBase::Release()
facet::CVkTimestampQueryPoolBase::ResetAll(unsigned int)
facet::CVkTimestampQueryPoolBase::ResetQuery(unsigned int)
facet::CVkTimestampQueryPoolBase::ToMs(unsigned long) const
facet::CVkTimestampQueryPoolBase::UpdateResults(facet::CVkTimestampQueryPoolBase::WaitBehavior_t, unsigned int, unsigned long*)
facet::CVkTimestampQueryPoolBase::~CVkTimestampQueryPoolBase()
facet::CopyDeviceId(facet::VkDeviceId_t&, facet::VkDeviceId_t const&)
facet::DXGIFormatFromVk(VkFormat)
facet::FromIPC(int)
facet::GenerateVisibleAreaMesh(std::vector<facet::VisibleAreaMeshVertex_t, std::allocator<facet::VisibleAreaMeshVertex_t> >&, std::vector<unsigned int, std::allocator<unsigned int> >&, facet::VisibleAreaMeshInput_t const&)
facet::GenerateVisibleAreaMesh(std::vector<facet::VisibleAreaMeshVertex_t, std::allocator<facet::VisibleAreaMeshVertex_t> >&, std::vector<unsigned int, std::allocator<unsigned int> >&, facet::VisibleAreaMeshInput_t const&) [clone .cold]
facet::GetFlatIndex(SwapchainIndices_t const&)
facet::GetFov(glm::mat<4, 4, float, (glm::qualifier)0> const&, float*, float*, float*, float*)
facet::GetLUIDFromDeviceId(facet::VkDeviceId_t const&, unsigned long&)
facet::GetSrgbFormat(VkFormat)
facet::GetVulkanSampleCount(unsigned int)
facet::InitDeviceId(facet::VkDeviceId_t&, VkPhysicalDeviceIDProperties const&)
facet::IsCompressedFormat(VkFormat)
facet::IsDepthFormat(VkFormat)
facet::IsDepthOnlyFormat(VkFormat)
facet::IsDepthStencilFormat(VkFormat)
facet::IsDeviceIdValid(facet::VkDeviceId_t const&)
facet::IsInDebugSession()
facet::IsInDebugSession()::fp
facet::IsSrgbFormat(VkFormat)
facet::NumCompressedBlocks(unsigned int, unsigned int)
facet::ToIPC(unsigned long)
facet::VkFormatFromDXGI(unsigned int, VkFormat*)
facet::WaitUntil(double)
failIfExtra
failed to acquire next HMD image
false
fclose
fd-cl-
fd-srv-
fde_mixed_encoding_compare
fde_mixed_encoding_compare.cold
fde_single_encoding_compare
fde_single_encoding_compare.cold
fde_unencoded_compare
fflush
fgets
file://
flMotionVectorScale[ vr::Eye_Left ] == flMotionVectorScale[ vr::Eye_Right ]
flWaitTime < 1.0
flock
fn != nullptr
fopen
for detail.
force_pid
force_pid_val
fork
fprintf
fputs
frameInfo.pImage != nullptr
frameInfo.sampler != VK_NULL_HANDLE
frame_downheap
frame_dummy
frame_hdr_cache
frame_hdr_cache_head
frame_heapsort
fread
free
from.pPool != nullptr
fseek
ftell
ftruncate
ftruncate of %s, %d, %u failed: %d
futex robust_list not initialized by pthreads
futex robust_list not pthreads-compatible
fwrite
g
g_SuspendResumeLock
g_ThreadMainThreadID
g_bSetSuspendHandlers
g_bSuspendResumeAck
g_bTestMode
g_mutex
g_nCurThreadSuspendCount
g_pCurThread
g_pSharedResourceNamespaceServer
g_sharedResourceNamespaceClient
g_szSemFileName
get_cie_encoding
getcwd
getenv
getpid
getppid
getpriority
getpwnam_r
getrlimit
gettimeofday
getuid
glm::detail::compute_inverse<4, 4, float, (glm::qualifier)0, false>::call(glm::mat<4, 4, float, (glm::qualifier)0> const&)
glm::mat<4, 4, float, (glm::qualifier)0> glm::operator*<float, (glm::qualifier)0>(glm::mat<4, 4, float, (glm::qualifier)0> const&, glm::mat<4, 4, float, (glm::qualifier)0> const&)
glm::mat<4, 4, float, (glm::qualifier)0>::col_type glm::operator*<float, (glm::qualifier)0>(glm::mat<4, 4, float, (glm::qualifier)0> const&, glm::mat<4, 4, float, (glm::qualifier)0>::row_type const&)
graphicsCommandSet.Valid()
guard variable for (anonymous namespace)::DisplayFactories()::s_displayFactories
guard variable for (anonymous namespace)::Displays()::s_displays
guard variable for (anonymous namespace)::EnumerateDisplaysVulkan(VkPhysicalDevice_T*)::s_validNames
guard variable for (anonymous namespace)::GetXcbEdid(xcb_connection_t*, unsigned int)::s_edidAtoms
guard variable for (anonymous namespace)::Instances()::s_instances
guard variable for (anonymous namespace)::IsHMDDisplay(std::vector<unsigned char, std::allocator<unsigned char> > const&)::hmdVendorIds
guard variable for (anonymous namespace)::MotionEstimators()::s_motionEstimators
guard variable for (anonymous namespace)::PoseProviders()::s_poseProviders
guard variable for CPrismDisplay_Null::GetInstance()::instance
guard variable for FillPipeAddr(sockaddr_un&, std::string)::sPrefix
guard variable for GetTraceMarkerFd()::s_TraceMarkerMutex
guard variable for SteamVRVersionAsString()::s_sCachedVersion
guard variable for ThreadInitSchedulerForRtkit()::sInitMutex
guard variable for UTF16to8(wchar_t const*)::s_converter
guard variable for UTF8to16(char const*)::s_converter
h
i
iHexCharToInt(char)
in
in Json::Value::asCString(): requires stringValue
in Json::Value::clear(): requires complex value
in Json::Value::duplicateAndPrefixStringValue(): Failed to allocate string value buffer
in Json::Value::duplicateAndPrefixStringValue(): length too big for prefixing
in Json::Value::duplicateStringValue(): Failed to allocate string value buffer
in Json::Value::find(key, end, found): requires objectValue or nullValue
in Json::Value::operator[](ArrayIndex): requires arrayValue
in Json::Value::operator[](ArrayIndex)const: requires arrayValue
in Json::Value::operator[](int index) const: index cannot be negative
in Json::Value::operator[](int index): index cannot be negative
in Json::Value::removeMember(): requires objectValue
in Json::Value::resize(): requires arrayValue
in Json::Value::resolveReference(): requires objectValue
in Json::Value::resolveReference(key, end): requires objectValue
in Json::Value::setComment(): Comments must start with /
indentation
init_dwarf_reg_size_table
input.colorIndices.nSwapchainIndex != SwapchainIndices_t::k_nInvalidSwapchainIndex
isalpha
it != m_importedClients.end()
j
jsonid
k
k_pEyes
k_pEyesColor
k_pEyesDesc
keylength >= 2^30
kill
l
ld-linux-x86-64.so.2
lhs->m_pTimeline == rhs->m_pTimeline
libSDL2-2.0.so.0
libX11-xcb.so.1
libX11.so.6
libc.so.6
libdl.so.2
libm.so.6
libpthread.so.0
librenderdoc.so
librt.so.1
libstdc++.so.6
libvulkan.so
libvulkan.so.1
libxcb-randr.so.0
libxcb.so.1
linear_search_fdes
linear_search_fdes.cold
listen
loadedDevice
loadedInstance
localtime
log
m
m_acquireMutexes.size() == m_acquireKeys.size()
m_acquireMutexes.size() == m_acquireTimeouts.size()
m_bSupportsPresentId
m_config.pDisplay != nullptr
m_displayModeTiming.flSecondsPerFrame > 0.0f
m_mapTimelineToBuckets[ pKey ].empty()
m_nFrameIndex != 0
m_nFrameIndex > client.nPrismFrameStartIndex
m_nMapCount == 0
m_nMapCount > 0
m_nMaxLogBufferingSize > 0
m_nSizeInBytes != 0
m_pAllocator != nullptr
m_pCommandBufferPool
m_pCommandBufferPool != nullptr
m_pCommandBufferPool->QueueFamilyIndex() == m_pQueue->FamilyIndex()
m_pDevice
m_pDevice != nullptr
m_pDevice == VK_NULL_HANDLE
m_pInstance == VK_NULL_HANDLE
m_pPhysicalDevice == VK_NULL_HANDLE
m_pPool != nullptr
m_pPool->m_pActiveBatch == nullptr
m_pPool->m_pActiveBatch == this
m_pQueue != nullptr
m_pSwapchainImageProvider != nullptr
m_pTimeline != nullptr
m_perEye[ 0 ].pImage && m_perEye[ 1 ].pImage
m_releaseMutexes.size() == m_releaseKeys.size()
m_signalTimelines.size() == m_signalPoints.size()
m_sortedClients.size() == m_importedClients.size()
m_waitSemaphores.size() == m_waitSemaphoreStages.size()
m_waitTimelines.size() == m_waitPoints.size()
m_waitTimelines.size() == m_waitStages.size()
main
malloc
marker.4
memcmp
memcpy
memmove
memset
mkdir
mktime
mmap
mmap of %s failed: %d
modf
multiple signals per batch not allowed
munmap
n
nArrayIndex < m_details.nArrayLayerCount
nFrameIndex >> ( 64 - k_TimelineEventShift ) == 0
nImageIndex < ARRAY_SIZE( m_descriptorClientImages )
nInstance < info.instances.size()
nSampleCount > 0 && nSampleCount <= 64
nSet < m_descriptorSets.size()
nVsyncPeriodInTicks > 0
nanosleep
nfinity
null
o
object_mutex
once_regsizes.0
open
opendir
openvr.component.vrserver
operator delete(void*)
operator delete(void*, unsigned long)
operator delete[](void*)
operator delete[](void*, unsigned long)
operator new(unsigned long)
operator new[](unsigned long)
other.perEye[ vr::Eye_Left ].input.nClientFrameIndex == other.perEye[ vr::Eye_Right ].input.nClientFrameIndex
p
pAllocator
pAllocator != nullptr
pClientLayersUniformBuffer
pClientSwapchain
pCmd != nullptr
pCmdBuf
pCmdBuf != nullptr
pColor != nullptr
pCommandPool != nullptr
pDepth != nullptr
pDestination != nullptr
pDevice
pDevice != nullptr
pDistortionCoordinates != nullptr
pEntries != nullptr
pGraphicsCmd != nullptr
pImage != nullptr
pInputImage
pLast->m_pointLastUsed <= pTimeline->m_pointLastUsed
pMotionEstimation != nullptr
pMotionEstimator != nullptr
pOther != nullptr
pOutput != nullptr
pPoseProvider
pPoseProvider != nullptr
pQueue != nullptr
pReferenceImage
pRenderInfo && pRenderInfo->renderPass != VK_NULL_HANDLE
pResource
pResult != nullptr
pShaderModule != VK_NULL_HANDLE
pSourceBuffer
pSourceBuffer->m_unSizeInBytes >= nSourceOffset + m_unSizeInBytes
pSourceImage
pSrcVertices != nullptr && pDstVertices != nullptr
pStaging != nullptr
pTemplate != nullptr
pTimeline
pTimeline != nullptr
pTimeline->m_nRefCount > 0
perEye[ vr::Eye_Left ].input.nClientFrameIndex == perEye[ vr::Eye_Right ].input.nClientFrameIndex
pfnSteamAPI_SetBreakpadAppID
pfnSteamAPI_SetMiniDumpComment
pfnSteamAPI_UseBreakpadCrashHandler
pfnSteamAPI_WriteMiniDump
poll
precision
priorites.priorityCount > 0 && priorites.priorityCount <= ARRAY_SIZE( priorites.priorities )
pthread_attr_init
pthread_attr_setstacksize
pthread_cancel
pthread_cond_clockwait
pthread_cond_destroy
pthread_cond_init
pthread_cond_signal
pthread_cond_timedwait
pthread_create
pthread_detach
pthread_getschedparam
pthread_getspecific
pthread_join
pthread_key_create
pthread_key_delete
pthread_kill
pthread_mutex_destroy
pthread_mutex_init
pthread_mutex_lock
pthread_mutex_unlock
pthread_mutexattr_destroy
pthread_mutexattr_init
pthread_mutexattr_settype
pthread_once
pthread_self
pthread_setname_np
pthread_setschedparam
pthread_setspecific
pthreads futex robust_list is corrupt
puts
q
r
rb
read
read_encoded_value
read_encoded_value.cold
read_encoded_value_with_base
read_encoded_value_with_base.cold
readdir
readlink
recv
recvfrom
recvmsg
rejectDupKeys
rename
rewind
runtime
s
s_ThreadWatchdogManager
s_bCrashHandlingInit
s_bCurrentMiniDumpIsFatal
s_bMinidumpCommentAlreadySet
s_fnPreCrashCallback
s_nInstanceCount > 0
s_pInstance
s_rchProcessIdentifier
s_thread_pRobustListStruct
scandir
sched_get_priority_max
sched_get_priority_min
sched_getparam
sched_getscheduler
sched_setaffinity
sched_setscheduler
sched_yield
search_object
search_object.cold
selectBuf
semctl
semget
semop
sendmsg
sendto
setenv
setpriority
setrlimit
sg_vecOptionalDeviceExtensions
sg_vecOptionalInstanceExtensions
sg_vecRequiredDeviceExtensions
sg_vecRequiredInstanceExtensions
shm_open
shm_open of %s, %X failed: %d
shm_open without O_CREAT of %s, %X failed: %d
shm_unlink
short_alloc: spilling into system allocator
shutdown
sigaction
snprintf
socket
source.pImage != nullptr
sprintf
stackDepth_g
stackLimit
stages.size() == 1
startup
std::_Deque_base<CVkCommandBuffer*, std::allocator<CVkCommandBuffer*> >::~_Deque_base()
std::_Deque_base<Json::Reader::ErrorInfo, std::allocator<Json::Reader::ErrorInfo> >::_M_initialize_map(unsigned long)
std::_Deque_base<Json::Value*, std::allocator<Json::Value*> >::_M_initialize_map(unsigned long)
std::_Deque_base<Json::Value*, std::allocator<Json::Value*> >::~_Deque_base()
std::_Function_base::~_Function_base()
std::_Function_handler<bool (char), bool (*)(char)>::_M_invoke(std::_Any_data const&, char&&)
std::_Function_handler<bool (char), bool (*)(char)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (vr::EVREye, float, float, vr::DistortionCoordinates_t*), CPrismPanelMask::Initialize(CVkAllocator*, IPrismPoseProvider*, float)::{lambda(vr::EVREye, float, float, vr::DistortionCoordinates_t*)#1}>::_M_invoke(std::_Any_data const&, vr::EVREye&&, float&&, float&&, vr::DistortionCoordinates_t*&&)
std::_Function_handler<bool (vr::EVREye, float, float, vr::DistortionCoordinates_t*), CPrismPanelMask::Initialize(CVkAllocator*, IPrismPoseProvider*, float)::{lambda(vr::EVREye, float, float, vr::DistortionCoordinates_t*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<void (ELogLevel, char const*, void*), CLogBuffer::CLogBuffer()::{lambda(ELogLevel, char const*, void*)#1}>::_M_invoke(std::_Any_data const&, ELogLevel&&, char const*&&, void*&&)
std::_Function_handler<void (ELogLevel, char const*, void*), CLogBuffer::CLogBuffer()::{lambda(ELogLevel, char const*, void*)#1}>::_M_invoke(std::_Any_data const&, ELogLevel&&, char const*&&, void*&&) [clone .cold]
std::_Function_handler<void (ELogLevel, char const*, void*), CLogBuffer::CLogBuffer()::{lambda(ELogLevel, char const*, void*)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<void (ELogLevel, char const*, void*), void (*)(ELogLevel, char const*, void*)>::_M_invoke(std::_Any_data const&, ELogLevel&&, char const*&&, void*&&)
std::_Function_handler<void (ELogLevel, char const*, void*), void (*)(ELogLevel, char const*, void*)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Hash_bytes(void const*, unsigned long, unsigned long)
std::_Hashtable<VkFormat, std::pair<VkFormat const, CFrameHallucination::Variant_t>, std::allocator<std::pair<VkFormat const, CFrameHallucination::Variant_t> >, std::__detail::_Select1st, std::equal_to<VkFormat>, std::hash<VkFormat>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&)
std::_Hashtable<char const*, std::pair<char const* const, IMotionEstimator* (*)()>, std::allocator<std::pair<char const* const, IMotionEstimator* (*)()> >, std::__detail::_Select1st, std::equal_to<char const*>, std::hash<char const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const* const&)
std::_Hashtable<char const*, std::pair<char const* const, IPrismDisplayFactory* (*)()>, std::allocator<std::pair<char const* const, IPrismDisplayFactory* (*)()> >, std::__detail::_Select1st, std::equal_to<char const*>, std::hash<char const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(char const* const&)
std::_Hashtable<std::string, std::pair<std::string const, CVkExtensionEntry>, std::allocator<std::pair<std::string const, CVkExtensionEntry> >, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::string const&, unsigned long) const
std::_Hashtable<std::string, std::pair<std::string const, CVkExtensionEntry>, std::allocator<std::pair<std::string const, CVkExtensionEntry> >, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::string const&)
std::_Hashtable<unsigned int, std::pair<unsigned int const, std::unique_ptr<CClientSwapchain, std::default_delete<CClientSwapchain> > >, std::allocator<std::pair<unsigned int const, std::unique_ptr<CClientSwapchain, std::default_delete<CClientSwapchain> > > >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::~_Scoped_node()
std::_Hashtable<unsigned int, std::pair<unsigned int const, std::unique_ptr<CClientSwapchain, std::default_delete<CClientSwapchain> > >, std::allocator<std::pair<unsigned int const, std::unique_ptr<CClientSwapchain, std::default_delete<CClientSwapchain> > > >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear()
std::_Hashtable<unsigned int, std::pair<unsigned int const, std::unique_ptr<CClientSwapchain, std::default_delete<CClientSwapchain> > >, std::allocator<std::pair<unsigned int const, std::unique_ptr<CClientSwapchain, std::default_delete<CClientSwapchain> > > >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(unsigned int const&)
std::_Hashtable<unsigned int, std::pair<unsigned int const, std::unique_ptr<CPrismClient, std::default_delete<CPrismClient> > >, std::allocator<std::pair<unsigned int const, std::unique_ptr<CPrismClient, std::default_delete<CPrismClient> > > >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear()
std::_Hashtable<unsigned int, std::pair<unsigned int const, std::unique_ptr<CPrismClient, std::default_delete<CPrismClient> > >, std::allocator<std::pair<unsigned int const, std::unique_ptr<CPrismClient, std::default_delete<CPrismClient> > > >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(unsigned int const&)
std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int const&, unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false>*, unsigned long) [clone .isra.0]
std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned int const&, unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<unsigned int const, unsigned int>, false>*, unsigned long) [clone .isra.0] [clone .cold]
std::_Hashtable<unsigned int, std::pair<unsigned int const, unsigned int>, std::allocator<std::pair<unsigned int const, unsigned int> >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Scoped_node::~_Scoped_node()
std::_Rb_tree<(anonymous namespace)::CPrismInstance*, (anonymous namespace)::CPrismInstance*, std::_Identity<(anonymous namespace)::CPrismInstance*>, std::less<(anonymous namespace)::CPrismInstance*>, std::allocator<(anonymous namespace)::CPrismInstance*> >::_M_erase(std::_Rb_tree_node<(anonymous namespace)::CPrismInstance*>*) [clone .isra.0]
std::_Rb_tree<(anonymous namespace)::CSortedHandleMap<void*, IMotionEstimator* (*)(), IMotionEstimator, (PrismResult_t)-223>::Priority_t, (anonymous namespace)::CSortedHandleMap<void*, IMotionEstimator* (*)(), IMotionEstimator, (PrismResult_t)-223>::Priority_t, std::_Identity<(anonymous namespace)::CSortedHandleMap<void*, IMotionEstimator* (*)(), IMotionEstimator, (PrismResult_t)-223>::Priority_t>, std::less<(anonymous namespace)::CSortedHandleMap<void*, IMotionEstimator* (*)(), IMotionEstimator, (PrismResult_t)-223>::Priority_t>, std::allocator<(anonymous namespace)::CSortedHandleMap<void*, IMotionEstimator* (*)(), IMotionEstimator, (PrismResult_t)-223>::Priority_t> >::_M_erase(std::_Rb_tree_node<(anonymous namespace)::CSortedHandleMap<void*, IMotionEstimator* (*)(), IMotionEstimator, (PrismResult_t)-223>::Priority_t>*) [clone .isra.0]
std::_Rb_tree<(anonymous namespace)::CSortedHandleMap<void*, IPrismDisplayFactory* (*)(), IPrismDisplayFactory, (PrismResult_t)-101>::Priority_t, (anonymous namespace)::CSortedHandleMap<void*, IPrismDisplayFactory* (*)(), IPrismDisplayFactory, (PrismResult_t)-101>::Priority_t, std::_Identity<(anonymous namespace)::CSortedHandleMap<void*, IPrismDisplayFactory* (*)(), IPrismDisplayFactory, (PrismResult_t)-101>::Priority_t>, std::less<(anonymous namespace)::CSortedHandleMap<void*, IPrismDisplayFactory* (*)(), IPrismDisplayFactory, (PrismResult_t)-101>::Priority_t>, std::allocator<(anonymous namespace)::CSortedHandleMap<void*, IPrismDisplayFactory* (*)(), IPrismDisplayFactory, (PrismResult_t)-101>::Priority_t> >::_M_erase(std::_Rb_tree_node<(anonymous namespace)::CSortedHandleMap<void*, IPrismDisplayFactory* (*)(), IPrismDisplayFactory, (PrismResult_t)-101>::Priority_t>*) [clone .isra.0]
std::_Rb_tree<CPrismClient*, CPrismClient*, std::_Identity<CPrismClient*>, CPrism::SortClients_t, std::allocator<CPrismClient*> >::_M_erase(std::_Rb_tree_node<CPrismClient*>*) [clone .isra.0]
std::_Rb_tree<CVkResourceBase*, CVkResourceBase*, std::_Identity<CVkResourceBase*>, CVkResourceComparator, std::allocator<CVkResourceBase*> >::_M_erase(std::_Rb_tree_node<CVkResourceBase*>*) [clone .isra.0]
std::_Rb_tree<CVkTimeline*, std::pair<CVkTimeline* const, CVkGarbageCollector::Bucket_t>, std::_Select1st<std::pair<CVkTimeline* const, CVkGarbageCollector::Bucket_t> >, std::less<CVkTimeline*>, std::allocator<std::pair<CVkTimeline* const, CVkGarbageCollector::Bucket_t> > >::_M_erase(std::_Rb_tree_node<std::pair<CVkTimeline* const, CVkGarbageCollector::Bucket_t> >*) [clone .isra.0]
std::_Rb_tree<CVkTimeline*, std::pair<CVkTimeline* const, CVkGarbageCollector::Bucket_t>, std::_Select1st<std::pair<CVkTimeline* const, CVkGarbageCollector::Bucket_t> >, std::less<CVkTimeline*>, std::allocator<std::pair<CVkTimeline* const, CVkGarbageCollector::Bucket_t> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<CVkTimeline* const, CVkGarbageCollector::Bucket_t> >, CVkTimeline* const&)
std::_Rb_tree<CVkTimeline*, std::pair<CVkTimeline* const, CVkGarbageCollector::Bucket_t>, std::_Select1st<std::pair<CVkTimeline* const, CVkGarbageCollector::Bucket_t> >, std::less<CVkTimeline*>, std::allocator<std::pair<CVkTimeline* const, CVkGarbageCollector::Bucket_t> > >::_M_get_insert_unique_pos(CVkTimeline* const&)
std::_Rb_tree<IMotionEstimator*, IMotionEstimator*, std::_Identity<IMotionEstimator*>, std::less<IMotionEstimator*>, std::allocator<IMotionEstimator*> >::_M_erase(std::_Rb_tree_node<IMotionEstimator*>*) [clone .isra.0]
std::_Rb_tree<IPrismDisplay*, IPrismDisplay*, std::_Identity<IPrismDisplay*>, std::less<IPrismDisplay*>, std::allocator<IPrismDisplay*> >::_M_erase(std::_Rb_tree_node<IPrismDisplay*>*) [clone .isra.0]
std::_Rb_tree<IPrismDisplayFactory*, IPrismDisplayFactory*, std::_Identity<IPrismDisplayFactory*>, std::less<IPrismDisplayFactory*>, std::allocator<IPrismDisplayFactory*> >::_M_erase(std::_Rb_tree_node<IPrismDisplayFactory*>*) [clone .isra.0]
std::_Rb_tree<IPrismPoseProvider*, IPrismPoseProvider*, std::_Identity<IPrismPoseProvider*>, std::less<IPrismPoseProvider*>, std::allocator<IPrismPoseProvider*> >::_M_erase(std::_Rb_tree_node<IPrismPoseProvider*>*) [clone .isra.0]
std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::_M_erase(std::_Rb_tree_node<std::pair<Json::Value::CZString const, Json::Value> >*) [clone .isra.0]
std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<Json::Value::CZString const, Json::Value> >, Json::Value::CZString const&)
std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::_M_get_insert_unique_pos(Json::Value::CZString const&)
std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::equal_range(Json::Value::CZString const&)
std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::find(Json::Value::CZString const&)
std::_Rb_tree<char const*, std::pair<char const* const, IPrismPoseProvider* (*)()>, std::_Select1st<std::pair<char const* const, IPrismPoseProvider* (*)()> >, (anonymous namespace)::CPoseProviderHandleMap::cmp_str, std::allocator<std::pair<char const* const, IPrismPoseProvider* (*)()> > >::_M_erase(std::_Rb_tree_node<std::pair<char const* const, IPrismPoseProvider* (*)()> >*) [clone .isra.0]
std::_Rb_tree<char const*, std::pair<char const* const, IPrismPoseProvider* (*)()>, std::_Select1st<std::pair<char const* const, IPrismPoseProvider* (*)()> >, (anonymous namespace)::CPoseProviderHandleMap::cmp_str, std::allocator<std::pair<char const* const, IPrismPoseProvider* (*)()> > >::_M_get_insert_unique_pos(char const* const&)
std::_Rb_tree<char const*, std::pair<char const* const, IPrismPoseProvider* (*)()>, std::_Select1st<std::pair<char const* const, IPrismPoseProvider* (*)()> >, (anonymous namespace)::CPoseProviderHandleMap::cmp_str, std::allocator<std::pair<char const* const, IPrismPoseProvider* (*)()> > >::find(char const* const&)
std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string> >::_M_erase(std::_Rb_tree_node<std::string>*) [clone .isra.0]
std::_Rb_tree<unsigned int, std::pair<unsigned int const, VkDisplayKHR_T*>, std::_Select1st<std::pair<unsigned int const, VkDisplayKHR_T*> >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, VkDisplayKHR_T*> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned int const, VkDisplayKHR_T*> >*) [clone .isra.0]
std::_Rb_tree<unsigned int, std::pair<unsigned int const, VkDisplayKHR_T*>, std::_Select1st<std::pair<unsigned int const, VkDisplayKHR_T*> >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, VkDisplayKHR_T*> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<unsigned int const, VkDisplayKHR_T*> >, unsigned int const&)
std::_Rb_tree<unsigned int, std::pair<unsigned int const, VkDisplayKHR_T*>, std::_Select1st<std::pair<unsigned int const, VkDisplayKHR_T*> >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, VkDisplayKHR_T*> > >::_M_get_insert_unique_pos(unsigned int const&)
std::_Rb_tree_decrement(std::_Rb_tree_node_base const*)
std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
std::_Rb_tree_increment(std::_Rb_tree_node_base const*)
std::_Rb_tree_increment(std::_Rb_tree_node_base*)
std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
std::_Rb_tree_iterator<CPrismClient*> std::_Rb_tree<CPrismClient*, CPrismClient*, std::_Identity<CPrismClient*>, CPrism::SortClients_t, std::allocator<CPrismClient*> >::_M_insert_equal<CPrismClient*>(CPrismClient*&&)
std::_Rb_tree_iterator<std::pair<CVkTimeline* const, CVkGarbageCollector::Bucket_t> > std::_Rb_tree<CVkTimeline*, std::pair<CVkTimeline* const, CVkGarbageCollector::Bucket_t>, std::_Select1st<std::pair<CVkTimeline* const, CVkGarbageCollector::Bucket_t> >, std::less<CVkTimeline*>, std::allocator<std::pair<CVkTimeline* const, CVkGarbageCollector::Bucket_t> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<CVkTimeline* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<CVkTimeline* const, CVkGarbageCollector::Bucket_t> >, std::piecewise_construct_t const&, std::tuple<CVkTimeline* const&>&&, std::tuple<>&&) [clone .isra.0]
std::_Rb_tree_iterator<std::pair<Json::Value::CZString const, Json::Value> > std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::_M_emplace_hint_unique<std::pair<Json::Value::CZString const, Json::Value>&>(std::_Rb_tree_const_iterator<std::pair<Json::Value::CZString const, Json::Value> >, std::pair<Json::Value::CZString const, Json::Value>&)
std::_Rb_tree_iterator<std::pair<unsigned int const, VkDisplayKHR_T*> > std::_Rb_tree<unsigned int, std::pair<unsigned int const, VkDisplayKHR_T*>, std::_Select1st<std::pair<unsigned int const, VkDisplayKHR_T*> >, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, VkDisplayKHR_T*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<unsigned int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<unsigned int const, VkDisplayKHR_T*> >, std::piecewise_construct_t const&, std::tuple<unsigned int const&>&&, std::tuple<>&&) [clone .isra.0]
std::_Rb_tree_node<std::pair<Json::Value::CZString const, Json::Value> >* std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::_M_copy<std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<Json::Value::CZString const, Json::Value> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::_Alloc_node&) [clone .isra.0]
std::_Rb_tree_node<std::pair<Json::Value::CZString const, Json::Value> >* std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::_M_copy<std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<Json::Value::CZString const, Json::Value> > const*, std::_Rb_tree_node_base*, std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value> >, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value> > >::_Alloc_node&) [clone .isra.0] [clone .cold]
std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
std::_Vector_base<CMotionEstimation::CRenderPipeline::PushConstantsInfo_t const*, std::allocator<CMotionEstimation::CRenderPipeline::PushConstantsInfo_t const*> >::~_Vector_base()
std::_Vector_base<CPrismDisplay_Vulkan::Factory::VulkanDisplay_t, std::allocator<CPrismDisplay_Vulkan::Factory::VulkanDisplay_t> >::~_Vector_base()
std::_Vector_base<CVkAllocator::MemoryTypeInfo_t*, std::allocator<CVkAllocator::MemoryTypeInfo_t*> >::~_Vector_base()
std::_Vector_base<CVkImage*, std::allocator<CVkImage*> >::~_Vector_base()
std::_Vector_base<CVkShaderPipeline::Binding_t, std::allocator<CVkShaderPipeline::Binding_t> >::~_Vector_base()
std::_Vector_base<CVkTimeline*, short_alloc<CVkTimeline*, 80ul, 8ul> >::~_Vector_base()
std::_Vector_base<VkDescriptorImageInfo, short_alloc<VkDescriptorImageInfo, 240ul, 8ul> >::~_Vector_base()
std::_Vector_base<VkDescriptorSet_T*, short_alloc<VkDescriptorSet_T*, 80ul, 8ul> >::~_Vector_base()
std::_Vector_base<VkDeviceMemory_T*, short_alloc<VkDeviceMemory_T*, 80ul, 8ul> >::~_Vector_base()
std::_Vector_base<VkDeviceQueueCreateInfo, short_alloc<VkDeviceQueueCreateInfo, 400ul, 8ul> >::~_Vector_base()
std::_Vector_base<VkDynamicState, short_alloc<VkDynamicState, 40ul, 4ul> >::~_Vector_base()
std::_Vector_base<VkExtensionProperties, std::allocator<VkExtensionProperties> >::~_Vector_base()
std::_Vector_base<VkPipelineColorBlendAttachmentState, std::allocator<VkPipelineColorBlendAttachmentState> >::~_Vector_base()
std::_Vector_base<VkPipelineShaderStageCreateInfo, short_alloc<VkPipelineShaderStageCreateInfo, 480ul, 8ul> >::~_Vector_base()
std::_Vector_base<VkPushConstantRange, std::allocator<VkPushConstantRange> >::~_Vector_base()
std::_Vector_base<VkQueueFamilyGlobalPriorityPropertiesEXT, std::allocator<VkQueueFamilyGlobalPriorityPropertiesEXT> >::~_Vector_base()
std::_Vector_base<VkQueueFamilyProperties2, std::allocator<VkQueueFamilyProperties2> >::~_Vector_base()
std::_Vector_base<VkRect2D, short_alloc<VkRect2D, 160ul, 4ul> >::~_Vector_base()
std::_Vector_base<VkSemaphore_T*, short_alloc<VkSemaphore_T*, 128ul, 8ul> >::~_Vector_base()
std::_Vector_base<VkSemaphore_T*, short_alloc<VkSemaphore_T*, 80ul, 8ul> >::~_Vector_base()
std::_Vector_base<VkVertexInputAttributeDescription, std::allocator<VkVertexInputAttributeDescription> >::~_Vector_base()
std::_Vector_base<VkVertexInputBindingDescription, std::allocator<VkVertexInputBindingDescription> >::~_Vector_base()
std::_Vector_base<VkViewport, short_alloc<VkViewport, 240ul, 4ul> >::~_Vector_base()
std::_Vector_base<char const*, std::allocator<char const*> >::~_Vector_base()
std::_Vector_base<facet::CVkTimelinePoint, short_alloc<facet::CVkTimelinePoint, 160ul, 8ul> >::~_Vector_base()
std::_Vector_base<glm::vec<2, float, (glm::qualifier)0>, std::allocator<glm::vec<2, float, (glm::qualifier)0> > >::~_Vector_base()
std::_Vector_base<unsigned char, std::allocator<unsigned char> >::~_Vector_base()
std::_Vector_base<unsigned int, short_alloc<unsigned int, 40ul, 4ul> >::~_Vector_base()
std::_Vector_base<unsigned int, std::allocator<unsigned int> >::~_Vector_base()
std::_Vector_base<unsigned long, short_alloc<unsigned long, 128ul, 8ul> >::~_Vector_base()
std::_Vector_base<unsigned long, short_alloc<unsigned long, 80ul, 8ul> >::~_Vector_base()
std::_Vector_base<vr::HmdVector2_t, std::allocator<vr::HmdVector2_t> >::~_Vector_base()
std::__basic_file<char>::~__basic_file()
std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::in(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const
std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::out(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const
std::__codecvt_utf8_base<char32_t>::do_always_noconv() const
std::__codecvt_utf8_base<char32_t>::do_encoding() const
std::__codecvt_utf8_base<char32_t>::do_in(__mbstate_t&, char const*, char const*, char const*&, char32_t*, char32_t*, char32_t*&) const
std::__codecvt_utf8_base<char32_t>::do_length(__mbstate_t&, char const*, char const*, unsigned long) const
std::__codecvt_utf8_base<char32_t>::do_max_length() const
std::__codecvt_utf8_base<char32_t>::do_out(__mbstate_t&, char32_t const*, char32_t const*, char32_t const*&, char*, char*, char*&) const
std::__codecvt_utf8_base<char32_t>::do_unshift(__mbstate_t&, char*, char*, char*&) const
std::__codecvt_utf8_base<char32_t>::~__codecvt_utf8_base()
std::__codecvt_utf8_base<wchar_t>::do_always_noconv() const
std::__codecvt_utf8_base<wchar_t>::do_encoding() const
std::__codecvt_utf8_base<wchar_t>::do_in(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const
std::__codecvt_utf8_base<wchar_t>::do_length(__mbstate_t&, char const*, char const*, unsigned long) const
std::__codecvt_utf8_base<wchar_t>::do_max_length() const
std::__codecvt_utf8_base<wchar_t>::do_out(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const
std::__codecvt_utf8_base<wchar_t>::do_unshift(__mbstate_t&, char*, char*, char*&) const
std::__codecvt_utf8_base<wchar_t>::~__codecvt_utf8_base()
std::__detail::_Map_base<VkFormat, std::pair<VkFormat const, CFrameHallucination::Variant_t>, std::allocator<std::pair<VkFormat const, CFrameHallucination::Variant_t> >, std::__detail::_Select1st, std::equal_to<VkFormat>, std::hash<VkFormat>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](VkFormat const&)
std::__detail::_Map_base<char const*, std::pair<char const* const, IMotionEstimator* (*)()>, std::allocator<std::pair<char const* const, IMotionEstimator* (*)()> >, std::__detail::_Select1st, std::equal_to<char const*>, std::hash<char const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char const* const&)
std::__detail::_Map_base<char const*, std::pair<char const* const, IPrismDisplayFactory* (*)()>, std::allocator<std::pair<char const* const, IPrismDisplayFactory* (*)()> >, std::__detail::_Select1st, std::equal_to<char const*>, std::hash<char const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](char const* const&)
std::__detail::_Map_base<unsigned int, std::pair<unsigned int const, std::unique_ptr<CPrismClient, std::default_delete<CPrismClient> > >, std::allocator<std::pair<unsigned int const, std::unique_ptr<CPrismClient, std::default_delete<CPrismClient> > > >, std::__detail::_Select1st, std::equal_to<unsigned int>, std::hash<unsigned int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](unsigned int&&)
std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned long, unsigned long, unsigned long) const
std::__detail::__to_chars_10_impl<unsigned int>(char*, unsigned int, unsigned int)::__digits
std::__detail::__to_chars_10_impl<unsigned long>(char*, unsigned int, unsigned long)::__digits
std::__ioinit
std::__throw_bad_alloc()
std::__throw_bad_cast()
std::__throw_bad_function_call()
std::__throw_length_error(char const*)
std::__throw_logic_error(char const*)
std::__throw_out_of_range_fmt(char const*, ...)
std::__throw_range_error(char const*)
std::__throw_system_error(int)
std::array<CVkCommandBufferPool, 2ul>::array()
std::basic_filebuf<char, std::char_traits<char> >::basic_filebuf()
std::basic_filebuf<char, std::char_traits<char> >::close()
std::basic_filebuf<char, std::char_traits<char> >::open(char const*, std::_Ios_Openmode)
std::basic_filebuf<char, std::char_traits<char> >::~basic_filebuf()
std::basic_ifstream<char, std::char_traits<char> >::~basic_ifstream()
std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)
std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*)
std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char)
std::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_istringstream()
std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)
std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_ostringstream()
std::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, unsigned long, std::allocator<char> const&)
std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::allocator<char> const&)
std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&)
std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long)
std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(unsigned long, char, std::allocator<char> const&)
std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string<std::allocator<char> >(char const*, std::allocator<char> const&)
std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_leak_hard()
std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_destroy(std::allocator<wchar_t> const&)
std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_S_empty_rep_storage
std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::basic_string(std::allocator<wchar_t> const&)
std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::basic_string(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&)
std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::resize(unsigned long, wchar_t)
std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string()
std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::_M_sync(char*, unsigned long, unsigned long)
std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::~basic_stringbuf()
std::chrono::_V2::steady_clock::now()
std::codecvt<wchar_t, char, __mbstate_t>::codecvt(unsigned long)
std::codecvt_utf8<char32_t, 1114111ul, (std::codecvt_mode)0>::~codecvt_utf8()
std::codecvt_utf8<wchar_t, 1114111ul, (std::codecvt_mode)0>::~codecvt_utf8()
std::condition_variable::condition_variable()
std::condition_variable::notify_one()
std::condition_variable::~condition_variable()
std::ctype<char>::_M_widen_init() const
std::ctype<char>::do_widen(char) const
std::default_delete<CVkCommandBatch>::operator()(CVkCommandBatch*) const [clone .part.0]
std::default_delete<CVkExtensionInfo>::operator()(CVkExtensionInfo*) const [clone .part.0]
std::default_delete<CVkWriteDescriptorSet>::operator()(CVkWriteDescriptorSet*) const [clone .part.0]
std::deque<CVkCommandBuffer*, std::allocator<CVkCommandBuffer*> >::_M_reallocate_map(unsigned long, bool)
std::deque<Json::OurReader::ErrorInfo, std::allocator<Json::OurReader::ErrorInfo> >::_M_default_append(unsigned long)
std::deque<Json::OurReader::ErrorInfo, std::allocator<Json::OurReader::ErrorInfo> >::_M_destroy_data_aux(std::_Deque_iterator<Json::OurReader::ErrorInfo, Json::OurReader::ErrorInfo&, Json::OurReader::ErrorInfo*>, std::_Deque_iterator<Json::OurReader::ErrorInfo, Json::OurReader::ErrorInfo&, Json::OurReader::ErrorInfo*>) [clone .isra.0]
std::deque<Json::OurReader::ErrorInfo, std::allocator<Json::OurReader::ErrorInfo> >::_M_new_elements_at_back(unsigned long)
std::deque<Json::OurReader::ErrorInfo, std::allocator<Json::OurReader::ErrorInfo> >::_M_reallocate_map(unsigned long, bool)
std::deque<Json::Reader::ErrorInfo, std::allocator<Json::Reader::ErrorInfo> >::_M_default_append(unsigned long)
std::deque<Json::Reader::ErrorInfo, std::allocator<Json::Reader::ErrorInfo> >::_M_erase_at_end(std::_Deque_iterator<Json::Reader::ErrorInfo, Json::Reader::ErrorInfo&, Json::Reader::ErrorInfo*>)
std::deque<Json::Reader::ErrorInfo, std::allocator<Json::Reader::ErrorInfo> >::_M_new_elements_at_back(unsigned long)
std::deque<Json::Reader::ErrorInfo, std::allocator<Json::Reader::ErrorInfo> >::_M_reallocate_map(unsigned long, bool)
std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<PhysicalDeviceInfo_t> >, std::is_move_constructible<PhysicalDeviceInfo_t>, std::is_move_assignable<PhysicalDeviceInfo_t> >::value, void>::type std::swap<PhysicalDeviceInfo_t>(PhysicalDeviceInfo_t&, PhysicalDeviceInfo_t&)
std::exception::~exception()
std::function<void (bool)>::~function()
std::ios_base::Init::Init()
std::ios_base::Init::~Init()
std::ios_base::ios_base()
std::ios_base::~ios_base()
std::istream& std::istream::_M_extract<double>(double&)
std::locale::locale()
std::locale::~locale()
std::map<unsigned int, VkDisplayKHR_T*, std::less<unsigned int>, std::allocator<std::pair<unsigned int const, VkDisplayKHR_T*> > >::~map()
std::ostream::operator<<(int)
std::ostream::operator<<(std::basic_streambuf<char, std::char_traits<char> >*)
std::pair<std::_Rb_tree_iterator<CVkResourceBase*>, bool> std::_Rb_tree<CVkResourceBase*, CVkResourceBase*, std::_Identity<CVkResourceBase*>, CVkResourceComparator, std::allocator<CVkResourceBase*> >::_M_insert_unique<CVkResourceBase* const&>(CVkResourceBase* const&)
std::pair<std::_Rb_tree_iterator<IMotionEstimator*>, bool> std::_Rb_tree<IMotionEstimator*, IMotionEstimator*, std::_Identity<IMotionEstimator*>, std::less<IMotionEstimator*>, std::allocator<IMotionEstimator*> >::_M_insert_unique<IMotionEstimator* const&>(IMotionEstimator* const&)
std::pair<std::_Rb_tree_iterator<IPrismDisplay*>, bool> std::_Rb_tree<IPrismDisplay*, IPrismDisplay*, std::_Identity<IPrismDisplay*>, std::less<IPrismDisplay*>, std::allocator<IPrismDisplay*> >::_M_insert_unique<IPrismDisplay* const&>(IPrismDisplay* const&)
std::pair<std::_Rb_tree_iterator<IPrismDisplayFactory*>, bool> std::_Rb_tree<IPrismDisplayFactory*, IPrismDisplayFactory*, std::_Identity<IPrismDisplayFactory*>, std::less<IPrismDisplayFactory*>, std::allocator<IPrismDisplayFactory*> >::_M_insert_unique<IPrismDisplayFactory* const&>(IPrismDisplayFactory* const&)
std::pair<std::_Rb_tree_iterator<IPrismPoseProvider*>, bool> std::_Rb_tree<IPrismPoseProvider*, IPrismPoseProvider*, std::_Identity<IPrismPoseProvider*>, std::less<IPrismPoseProvider*>, std::allocator<IPrismPoseProvider*> >::_M_insert_unique<IPrismPoseProvider* const&>(IPrismPoseProvider* const&)
std::pair<std::__detail::_Node_iterator<std::pair<std::string const, CVkExtensionEntry>, false, true>, bool> std::_Hashtable<std::string, std::pair<std::string const, CVkExtensionEntry>, std::allocator<std::pair<std::string const, CVkExtensionEntry> >, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_emplace<char const*&, char const*&>(std::integral_constant<bool, true>, char const*&, char const*&) [clone .isra.0]
std::pair<std::__detail::_Node_iterator<std::pair<std::string const, CVkExtensionEntry>, false, true>, bool> std::_Hashtable<std::string, std::pair<std::string const, CVkExtensionEntry>, std::allocator<std::pair<std::string const, CVkExtensionEntry> >, std::__detail::_Select1st, std::equal_to<std::string>, std::hash<std::string>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_emplace<char const*&, char const*&>(std::integral_constant<bool, true>, char const*&, char const*&) [clone .isra.0] [clone .cold]
std::set<std::string, std::less<std::string>, std::allocator<std::string> >::insert(std::string&&)
std::string::_M_leak_hard()
std::string::_M_mutate(unsigned long, unsigned long, unsigned long)
std::string::_M_replace_aux(unsigned long, unsigned long, unsigned long, char)
std::string::_Rep::_M_destroy(std::allocator<char> const&)
std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&)
std::string::_Rep::_S_empty_rep_storage
std::string::append(char const*)
std::string::append(char const*, unsigned long)
std::string::append(std::string const&)
std::string::assign(char const*, unsigned long)
std::string::assign(std::string const&)
std::string::compare(char const*) const
std::string::erase(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>)
std::string::find_last_not_of(char const*, unsigned long, unsigned long) const
std::string::insert(unsigned long, char const*, unsigned long)
std::string::replace(unsigned long, unsigned long, char const*, unsigned long)
std::string::reserve(unsigned long)
std::string::resize(unsigned long, char)
std::string::rfind(char, unsigned long) const
std::string::swap(std::string&)
std::terminate()
std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)())
std::thread::_State::~_State()
std::thread::_State_impl<std::thread::_Invoker<std::tuple<(anonymous namespace)::CPrismInstance::Start(PrismRunParameters_t const*)::{lambda(PrismRunParameters_t)#1}, PrismRunParameters_t> > >::_M_run()
std::thread::_State_impl<std::thread::_Invoker<std::tuple<(anonymous namespace)::CPrismInstance::Start(PrismRunParameters_t const*)::{lambda(PrismRunParameters_t)#1}, PrismRunParameters_t> > >::_M_run() [clone .cold]
std::thread::_State_impl<std::thread::_Invoker<std::tuple<(anonymous namespace)::CPrismInstance::Start(PrismRunParameters_t const*)::{lambda(PrismRunParameters_t)#1}, PrismRunParameters_t> > >::~_State_impl()
std::thread::_State_impl<std::thread::_Invoker<std::tuple<CThreadWatchdogManager::InitWatchdogs()::{lambda()#1}> > >::_M_run()
std::thread::_State_impl<std::thread::_Invoker<std::tuple<CThreadWatchdogManager::InitWatchdogs()::{lambda()#1}> > >::_M_run() [clone .cold]
std::thread::_State_impl<std::thread::_Invoker<std::tuple<CThreadWatchdogManager::InitWatchdogs()::{lambda()#1}> > >::~_State_impl()
std::thread::join()
std::unique_lock<std::recursive_mutex>::unlock()
std::unique_ptr<CLogBuffer, std::default_delete<CLogBuffer> >::~unique_ptr()
std::unique_ptr<CVkBuffer, CVkResourceDeleter<CVkBuffer> >::~unique_ptr()
std::unique_ptr<CVkCommandBuffer, CVkResourceDeleter<CVkCommandBuffer> >::~unique_ptr()
std::unique_ptr<CVkCommandBuffer, CVkResourceRecycler<CVkCommandBuffer> >::~unique_ptr()
std::unique_ptr<CVkImage, CVkResourceDeleter<CVkImage> >::~unique_ptr()
std::unique_ptr<CVkTimeline, CVkResourceDeleter<CVkTimeline> >::~unique_ptr()
std::unique_ptr<Json::StreamWriter, std::default_delete<Json::StreamWriter> >::~unique_ptr()
std::unique_ptr<facet::CVkTimestampQueryPool<2u>, CVkResourceDeleter<facet::CVkTimestampQueryPool<2u> > >::~unique_ptr()
std::vector<CVkShaderPipeline::Binding_t, std::allocator<CVkShaderPipeline::Binding_t> >::operator=(std::vector<CVkShaderPipeline::Binding_t, std::allocator<CVkShaderPipeline::Binding_t> > const&) [clone .isra.0]
std::vector<CVkShaderPipeline::Binding_t, std::allocator<CVkShaderPipeline::Binding_t> >::vector(std::initializer_list<CVkShaderPipeline::Binding_t>, std::allocator<CVkShaderPipeline::Binding_t> const&)
std::vector<CVkShaderPipeline::Binding_t, std::allocator<CVkShaderPipeline::Binding_t> >::~vector()
std::vector<VkDescriptorSet_T*, std::allocator<VkDescriptorSet_T*> >::_M_default_append(unsigned long)
std::vector<VkDescriptorSet_T*, std::allocator<VkDescriptorSet_T*> >::operator=(std::vector<VkDescriptorSet_T*, std::allocator<VkDescriptorSet_T*> > const&) [clone .isra.0]
std::vector<VkDisplayModePropertiesKHR, std::allocator<VkDisplayModePropertiesKHR> >::_M_default_append(unsigned long)
std::vector<VkExtensionProperties, std::allocator<VkExtensionProperties> >::_M_default_append(unsigned long)
std::vector<VkFramebuffer_T*, std::allocator<VkFramebuffer_T*> >::_M_default_append(unsigned long)
std::vector<VkLayerProperties, std::allocator<VkLayerProperties> >::_M_default_append(unsigned long)
std::vector<VkQueueFamilyGlobalPriorityPropertiesEXT, std::allocator<VkQueueFamilyGlobalPriorityPropertiesEXT> >::_M_default_append(unsigned long)
std::vector<VkQueueFamilyProperties2, std::allocator<VkQueueFamilyProperties2> >::_M_default_append(unsigned long)
std::vector<VkVertexInputAttributeDescription, std::allocator<VkVertexInputAttributeDescription> >::operator=(std::vector<VkVertexInputAttributeDescription, std::allocator<VkVertexInputAttributeDescription> > const&) [clone .isra.0]
std::vector<VkVertexInputBindingDescription, std::allocator<VkVertexInputBindingDescription> >::operator=(std::vector<VkVertexInputBindingDescription, std::allocator<VkVertexInputBindingDescription> > const&) [clone .isra.0]
std::vector<char const*, std::allocator<char const*> >::~vector()
std::vector<facet::CPanelMask::Vertex_t, std::allocator<facet::CPanelMask::Vertex_t> >::reserve(unsigned long)
std::vector<facet::VisibleAreaMeshVertex_t, std::allocator<facet::VisibleAreaMeshVertex_t> >::_M_default_append(unsigned long)
std::vector<glm::vec<2, float, (glm::qualifier)0>, std::allocator<glm::vec<2, float, (glm::qualifier)0> > >::_M_default_append(unsigned long)
std::vector<glm::vec<2, float, (glm::qualifier)0>, std::allocator<glm::vec<2, float, (glm::qualifier)0> > >::reserve(unsigned long)
std::vector<std::string, std::allocator<std::string> >::reserve(unsigned long)
std::vector<std::string, std::allocator<std::string> >::vector(std::initializer_list<std::string>, std::allocator<std::string> const&)
std::vector<std::string, std::allocator<std::string> >::~vector()
std::vector<std::unique_ptr<CVkImage, CVkResourceDeleter<CVkImage> >, std::allocator<std::unique_ptr<CVkImage, CVkResourceDeleter<CVkImage> > > >::_M_default_append(unsigned long)
std::vector<unsigned char, std::allocator<unsigned char> >::_M_default_append(unsigned long)
std::vector<unsigned int, std::allocator<unsigned int> >::~vector()
std::vector<unsigned short, std::allocator<unsigned short> >::reserve(unsigned long)
std::vector<unsigned short, std::allocator<unsigned short> >::~vector()
std::vector<vr::HmdVector2_t, std::allocator<vr::HmdVector2_t> >::_M_default_append(unsigned long)
std::wstring_convert<std::codecvt_utf8<wchar_t, 1114111ul, (std::codecvt_mode)0>, wchar_t, std::allocator<wchar_t>, std::allocator<char> >::~wstring_convert()
stderr
steamrt
steamvr
strcasecmp
strchr
strcmp
strcpy
strcpy_safe(char*, unsigned long, char const*)
strerror
strftime
stricmp(char const*, char const*)
strictRoot
strlen
strncasecmp
strncmp
strncpy
strnicmp(char const*, char const*, unsigned long)
strpbrk
strrchr
strstr
strtol
strtoull
subs.2
syscall
sysconf
system
systemBaseTicks
systemSecondsPerTick
systemTicksPerSecond
systemTicksToNanosecondDenum
systemTicksToNanosecondNum
systemTimeInitialized
t
terminator.3
time
timing.nPixelClockRate > 0
tl_pLeafSharedState
tl_pWatchdog
to.pPool != nullptr
tolower
toupper
true
typeinfo for (anonymous namespace)::CFrameHallucinationPrivate::CDestinationFrameInfo
typeinfo for CFrameHallucination::IDestinationFrameInfo
typeinfo for CLogBuffer::CLogBuffer()::{lambda(ELogLevel, char const*, void*)#1}
typeinfo for CNonCopyable
typeinfo for CPrism
typeinfo for CPrismDisplay_Null
typeinfo for CPrismDisplay_Null::Factory
typeinfo for CPrismDisplay_Vulkan
typeinfo for CPrismDisplay_Vulkan::Factory
typeinfo for CPrismPanelMask::Initialize(CVkAllocator*, IPrismPoseProvider*, float)::{lambda(vr::EVREye, float, float, vr::DistortionCoordinates_t*)#1}
typeinfo for CPrismPoseProvider_Null
typeinfo for CSharedResourceNamespaceServer
typeinfo for CThread
typeinfo for CVkBuffer
typeinfo for CVkCommandBuffer
typeinfo for CVkCommandBufferPool
typeinfo for CVkGarbageCollector
typeinfo for CVkImage
typeinfo for CVkMemory
typeinfo for CVkPoolGarbageCollector<CVkCommandBuffer>
typeinfo for CVkPoolableResource<CVkCommandBufferPool>
typeinfo for CVkResourceBase
typeinfo for CVkResourcePool<CVkCommandBuffer>
typeinfo for CVkTimeline
typeinfo for IPC::IEvent
typeinfo for IPC::IMutex
typeinfo for IPC::ISharedMem
typeinfo for IPC::ISyncObject
typeinfo for IPC::PosixSharedMemory
typeinfo for IPC::SharedObjectEvent
typeinfo for IPC::SharedObjectMutex
typeinfo for IPrismDisplay
typeinfo for IPrismDisplayFactory
typeinfo for IPrismPoseProvider
typeinfo for ISwapchainImageProvider
typeinfo for Json::BuiltStyledStreamWriter
typeinfo for Json::CharReader
typeinfo for Json::CharReader::Factory
typeinfo for Json::CharReaderBuilder
typeinfo for Json::Exception
typeinfo for Json::FastWriter
typeinfo for Json::LogicError
typeinfo for Json::OurCharReader
typeinfo for Json::RuntimeError
typeinfo for Json::StreamWriter
typeinfo for Json::StreamWriter::Factory
typeinfo for Json::StreamWriterBuilder
typeinfo for Json::StyledWriter
typeinfo for Json::Writer
typeinfo for bool (*)(char)
typeinfo for bool (char)
typeinfo for facet::CVkTimestampQueryPool<2u>
typeinfo for facet::CVkTimestampQueryPoolBase
typeinfo for int
typeinfo for std::__codecvt_utf8_base<char32_t>
typeinfo for std::__codecvt_utf8_base<wchar_t>
typeinfo for std::codecvt_utf8<char32_t, 1114111ul, (std::codecvt_mode)0>
typeinfo for std::codecvt_utf8<wchar_t, 1114111ul, (std::codecvt_mode)0>
typeinfo for std::exception
typeinfo for std::thread::_State
typeinfo for std::thread::_State_impl<std::thread::_Invoker<std::tuple<(anonymous namespace)::CPrismInstance::Start(PrismRunParameters_t const*)::{lambda(PrismRunParameters_t)#1}, PrismRunParameters_t> > >
typeinfo for std::thread::_State_impl<std::thread::_Invoker<std::tuple<CThreadWatchdogManager::InitWatchdogs()::{lambda()#1}> > >
typeinfo for void (*)(ELogLevel, char const*, void*)
typeinfo for void (ELogLevel, char const*, void*)
typeinfo name for (anonymous namespace)::CFrameHallucinationPrivate::CDestinationFrameInfo
typeinfo name for CFrameHallucination::IDestinationFrameInfo
typeinfo name for CLogBuffer::CLogBuffer()::{lambda(ELogLevel, char const*, void*)#1}
typeinfo name for CNonCopyable
typeinfo name for CPrism
typeinfo name for CPrismDisplay_Null
typeinfo name for CPrismDisplay_Null::Factory
typeinfo name for CPrismDisplay_Vulkan
typeinfo name for CPrismDisplay_Vulkan::Factory
typeinfo name for CPrismPanelMask::Initialize(CVkAllocator*, IPrismPoseProvider*, float)::{lambda(vr::EVREye, float, float, vr::DistortionCoordinates_t*)#1}
typeinfo name for CPrismPoseProvider_Null
typeinfo name for CSharedResourceNamespaceServer
typeinfo name for CThread
typeinfo name for CVkBuffer
typeinfo name for CVkCommandBuffer
typeinfo name for CVkCommandBufferPool
typeinfo name for CVkGarbageCollector
typeinfo name for CVkImage
typeinfo name for CVkMemory
typeinfo name for CVkPoolGarbageCollector<CVkCommandBuffer>
typeinfo name for CVkPoolableResource<CVkCommandBufferPool>
typeinfo name for CVkResourceBase
typeinfo name for CVkResourcePool<CVkCommandBuffer>
typeinfo name for CVkTimeline
typeinfo name for IPC::IEvent
typeinfo name for IPC::IMutex
typeinfo name for IPC::ISharedMem
typeinfo name for IPC::ISyncObject
typeinfo name for IPC::PosixSharedMemory
typeinfo name for IPC::SharedObjectEvent
typeinfo name for IPC::SharedObjectMutex
typeinfo name for IPrismDisplay
typeinfo name for IPrismDisplayFactory
typeinfo name for IPrismPoseProvider
typeinfo name for ISwapchainImageProvider
typeinfo name for Json::BuiltStyledStreamWriter
typeinfo name for Json::CharReader
typeinfo name for Json::CharReader::Factory
typeinfo name for Json::CharReaderBuilder
typeinfo name for Json::Exception
typeinfo name for Json::FastWriter
typeinfo name for Json::LogicError
typeinfo name for Json::OurCharReader
typeinfo name for Json::RuntimeError
typeinfo name for Json::StreamWriter
typeinfo name for Json::StreamWriter::Factory
typeinfo name for Json::StreamWriterBuilder
typeinfo name for Json::StyledWriter
typeinfo name for Json::Writer
typeinfo name for bool (*)(char)
typeinfo name for bool (char)
typeinfo name for facet::CVkTimestampQueryPool<2u>
typeinfo name for facet::CVkTimestampQueryPoolBase
typeinfo name for std::codecvt_utf8<char32_t, 1114111ul, (std::codecvt_mode)0>
typeinfo name for std::codecvt_utf8<wchar_t, 1114111ul, (std::codecvt_mode)0>
typeinfo name for std::thread::_State_impl<std::thread::_Invoker<std::tuple<(anonymous namespace)::CPrismInstance::Start(PrismRunParameters_t const*)::{lambda(PrismRunParameters_t)#1}, PrismRunParameters_t> > >
typeinfo name for std::thread::_State_impl<std::thread::_Invoker<std::tuple<CThreadWatchdogManager::InitWatchdogs()::{lambda()#1}> > >
typeinfo name for void (*)(ELogLevel, char const*, void*)
typeinfo name for void (ELogLevel, char const*, void*)
u
uint32_t( eEye ) < k_nEyeCount
umask
unMessageID
unMyPID == data
unlink
unseen_objects
unsetenv
unsupported format
unsupported platform
useSpecialFloats
usleep
uw_frame_state_for
uw_frame_state_for.cold
uw_init_context_1
uw_init_context_1.cold
uw_install_context_1
uw_install_context_1.cold
uw_update_context_1
uw_update_context_1.cold
v
variant.pPipeline != &m_frameHallucinationPipeline
vector::_M_default_append
vector::_M_range_insert
vector::_M_realloc_insert
vector::reserve
version
vkAcquireDrmDisplayEXT
vkAcquireNextImage2KHR
vkAcquireNextImageKHR
vkAcquirePerformanceConfigurationINTEL
vkAcquireProfilingLockKHR
vkAcquireWinrtDisplayNV
vkAcquireXlibDisplayEXT
vkAllocateCommandBuffers
vkAllocateDescriptorSets
vkAllocateMemory
vkBeginCommandBuffer
vkBindAccelerationStructureMemoryNV
vkBindBufferMemory
vkBindBufferMemory2
vkBindBufferMemory2KHR
vkBindImageMemory
vkBindImageMemory2
vkBindImageMemory2KHR
vkBuildAccelerationStructuresKHR
vkCmdBeginConditionalRenderingEXT
vkCmdBeginDebugUtilsLabelEXT
vkCmdBeginQuery
vkCmdBeginQueryIndexedEXT
vkCmdBeginRenderPass
vkCmdBeginRenderPass2
vkCmdBeginRenderPass2KHR
vkCmdBeginTransformFeedbackEXT
vkCmdBindDescriptorSets
vkCmdBindIndexBuffer
vkCmdBindInvocationMaskHUAWEI
vkCmdBindPipeline
vkCmdBindPipelineShaderGroupNV
vkCmdBindShadingRateImageNV
vkCmdBindTransformFeedbackBuffersEXT
vkCmdBindVertexBuffers
vkCmdBindVertexBuffers2EXT
vkCmdBlitImage
vkCmdBlitImage2KHR
vkCmdBuildAccelerationStructureNV
vkCmdBuildAccelerationStructuresIndirectKHR
vkCmdBuildAccelerationStructuresKHR
vkCmdClearAttachments
vkCmdClearColorImage
vkCmdClearDepthStencilImage
vkCmdCopyAccelerationStructureKHR
vkCmdCopyAccelerationStructureNV
vkCmdCopyAccelerationStructureToMemoryKHR
vkCmdCopyBuffer
vkCmdCopyBuffer2KHR
vkCmdCopyBufferToImage
vkCmdCopyBufferToImage2KHR
vkCmdCopyImage
vkCmdCopyImage2KHR
vkCmdCopyImageToBuffer
vkCmdCopyImageToBuffer2KHR
vkCmdCopyMemoryToAccelerationStructureKHR
vkCmdCopyQueryPoolResults
vkCmdCuLaunchKernelNVX
vkCmdDebugMarkerBeginEXT
vkCmdDebugMarkerEndEXT
vkCmdDebugMarkerInsertEXT
vkCmdDispatch
vkCmdDispatchBase
vkCmdDispatchBaseKHR
vkCmdDispatchIndirect
vkCmdDraw
vkCmdDrawIndexed
vkCmdDrawIndexedIndirect
vkCmdDrawIndexedIndirectCount
vkCmdDrawIndexedIndirectCountAMD
vkCmdDrawIndexedIndirectCountKHR
vkCmdDrawIndirect
vkCmdDrawIndirectByteCountEXT
vkCmdDrawIndirectCount
vkCmdDrawIndirectCountAMD
vkCmdDrawIndirectCountKHR
vkCmdDrawMeshTasksIndirectCountNV
vkCmdDrawMeshTasksIndirectNV
vkCmdDrawMeshTasksNV
vkCmdDrawMultiEXT
vkCmdDrawMultiIndexedEXT
vkCmdEndConditionalRenderingEXT
vkCmdEndDebugUtilsLabelEXT
vkCmdEndQuery
vkCmdEndQueryIndexedEXT
vkCmdEndRenderPass
vkCmdEndRenderPass2
vkCmdEndRenderPass2KHR
vkCmdEndTransformFeedbackEXT
vkCmdExecuteCommands
vkCmdExecuteGeneratedCommandsNV
vkCmdFillBuffer
vkCmdInsertDebugUtilsLabelEXT
vkCmdNextSubpass
vkCmdNextSubpass2
vkCmdNextSubpass2KHR
vkCmdPipelineBarrier
vkCmdPipelineBarrier2KHR
vkCmdPreprocessGeneratedCommandsNV
vkCmdPushConstants
vkCmdPushDescriptorSetKHR
vkCmdPushDescriptorSetWithTemplateKHR
vkCmdResetEvent
vkCmdResetEvent2KHR
vkCmdResetQueryPool
vkCmdResolveImage
vkCmdResolveImage2KHR
vkCmdSetBlendConstants
vkCmdSetCheckpointNV
vkCmdSetCoarseSampleOrderNV
vkCmdSetColorWriteEnableEXT
vkCmdSetCullModeEXT
vkCmdSetDepthBias
vkCmdSetDepthBiasEnableEXT
vkCmdSetDepthBounds
vkCmdSetDepthBoundsTestEnableEXT
vkCmdSetDepthCompareOpEXT
vkCmdSetDepthTestEnableEXT
vkCmdSetDepthWriteEnableEXT
vkCmdSetDeviceMask
vkCmdSetDeviceMaskKHR
vkCmdSetDiscardRectangleEXT
vkCmdSetEvent
vkCmdSetEvent2KHR
vkCmdSetExclusiveScissorNV
vkCmdSetFragmentShadingRateEnumNV
vkCmdSetFragmentShadingRateKHR
vkCmdSetFrontFaceEXT
vkCmdSetLineStippleEXT
vkCmdSetLineWidth
vkCmdSetLogicOpEXT
vkCmdSetPatchControlPointsEXT
vkCmdSetPerformanceMarkerINTEL
vkCmdSetPerformanceOverrideINTEL
vkCmdSetPerformanceStreamMarkerINTEL
vkCmdSetPrimitiveRestartEnableEXT
vkCmdSetPrimitiveTopologyEXT
vkCmdSetRasterizerDiscardEnableEXT
vkCmdSetRayTracingPipelineStackSizeKHR
vkCmdSetSampleLocationsEXT
vkCmdSetScissor
vkCmdSetScissorWithCountEXT
vkCmdSetStencilCompareMask
vkCmdSetStencilOpEXT
vkCmdSetStencilReference
vkCmdSetStencilTestEnableEXT
vkCmdSetStencilWriteMask
vkCmdSetVertexInputEXT
vkCmdSetViewport
vkCmdSetViewportShadingRatePaletteNV
vkCmdSetViewportWScalingNV
vkCmdSetViewportWithCountEXT
vkCmdSubpassShadingHUAWEI
vkCmdTraceRaysIndirectKHR
vkCmdTraceRaysKHR
vkCmdTraceRaysNV
vkCmdUpdateBuffer
vkCmdWaitEvents
vkCmdWaitEvents2KHR
vkCmdWriteAccelerationStructuresPropertiesKHR
vkCmdWriteAccelerationStructuresPropertiesNV
vkCmdWriteBufferMarker2AMD
vkCmdWriteBufferMarkerAMD
vkCmdWriteTimestamp
vkCmdWriteTimestamp2KHR
vkCompileDeferredNV
vkCopyAccelerationStructureKHR
vkCopyAccelerationStructureToMemoryKHR
vkCopyMemoryToAccelerationStructureKHR
vkCreateAccelerationStructureKHR
vkCreateAccelerationStructureNV
vkCreateBuffer
vkCreateBufferView
vkCreateCommandPool
vkCreateComputePipelines
vkCreateCuFunctionNVX
vkCreateCuModuleNVX
vkCreateDebugReportCallbackEXT
vkCreateDebugUtilsMessengerEXT
vkCreateDeferredOperationKHR
vkCreateDescriptorPool
vkCreateDescriptorSetLayout
vkCreateDescriptorUpdateTemplate
vkCreateDescriptorUpdateTemplateKHR
vkCreateDevice
vkCreateDisplayModeKHR
vkCreateDisplayPlaneSurfaceKHR
vkCreateEvent
vkCreateFence
vkCreateFramebuffer
vkCreateGraphicsPipelines
vkCreateHeadlessSurfaceEXT
vkCreateImage
vkCreateImageView
vkCreateIndirectCommandsLayoutNV
vkCreateInstance
vkCreatePipelineCache
vkCreatePipelineLayout
vkCreatePrivateDataSlotEXT
vkCreateQueryPool
vkCreateRayTracingPipelinesKHR
vkCreateRayTracingPipelinesNV
vkCreateRenderPass
vkCreateRenderPass2
vkCreateRenderPass2KHR
vkCreateSampler
vkCreateSamplerYcbcrConversion
vkCreateSamplerYcbcrConversionKHR
vkCreateSemaphore
vkCreateShaderModule
vkCreateSharedSwapchainsKHR
vkCreateSwapchainKHR
vkCreateValidationCacheEXT
vkCreateXcbSurfaceKHR
vkDebugMarkerSetObjectNameEXT
vkDebugMarkerSetObjectTagEXT
vkDebugReportMessageEXT
vkDeferredOperationJoinKHR
vkDestroyAccelerationStructureKHR
vkDestroyAccelerationStructureNV
vkDestroyBuffer
vkDestroyBufferView
vkDestroyCommandPool
vkDestroyCuFunctionNVX
vkDestroyCuModuleNVX
vkDestroyDebugReportCallbackEXT
vkDestroyDebugUtilsMessengerEXT
vkDestroyDeferredOperationKHR
vkDestroyDescriptorPool
vkDestroyDescriptorSetLayout
vkDestroyDescriptorUpdateTemplate
vkDestroyDescriptorUpdateTemplateKHR
vkDestroyDevice
vkDestroyEvent
vkDestroyFence
vkDestroyFramebuffer
vkDestroyImage
vkDestroyImageView
vkDestroyIndirectCommandsLayoutNV
vkDestroyInstance
vkDestroyPipeline
vkDestroyPipelineCache
vkDestroyPipelineLayout
vkDestroyPrivateDataSlotEXT
vkDestroyQueryPool
vkDestroyRenderPass
vkDestroySampler
vkDestroySamplerYcbcrConversion
vkDestroySamplerYcbcrConversionKHR
vkDestroySemaphore
vkDestroyShaderModule
vkDestroySurfaceKHR
vkDestroySwapchainKHR
vkDestroyValidationCacheEXT
vkDeviceWaitIdle
vkDisplayPowerControlEXT
vkEndCommandBuffer
vkEnumerateDeviceExtensionProperties
vkEnumerateDeviceLayerProperties
vkEnumerateInstanceExtensionProperties
vkEnumerateInstanceLayerProperties
vkEnumerateInstanceVersion
vkEnumeratePhysicalDeviceGroups
vkEnumeratePhysicalDeviceGroupsKHR
vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR
vkEnumeratePhysicalDevices
vkFlushMappedMemoryRanges
vkFreeCommandBuffers
vkFreeDescriptorSets
vkFreeMemory
vkGetAccelerationStructureBuildSizesKHR
vkGetAccelerationStructureDeviceAddressKHR
vkGetAccelerationStructureHandleNV
vkGetAccelerationStructureMemoryRequirementsNV
vkGetBufferDeviceAddress
vkGetBufferDeviceAddressEXT
vkGetBufferDeviceAddressKHR
vkGetBufferMemoryRequirements
vkGetBufferMemoryRequirements2
vkGetBufferMemoryRequirements2KHR
vkGetBufferOpaqueCaptureAddress
vkGetBufferOpaqueCaptureAddressKHR
vkGetCalibratedTimestampsEXT
vkGetDeferredOperationMaxConcurrencyKHR
vkGetDeferredOperationResultKHR
vkGetDescriptorSetLayoutSupport
vkGetDescriptorSetLayoutSupportKHR
vkGetDeviceAccelerationStructureCompatibilityKHR
vkGetDeviceGroupPeerMemoryFeatures
vkGetDeviceGroupPeerMemoryFeaturesKHR
vkGetDeviceGroupPresentCapabilitiesKHR
vkGetDeviceGroupSurfacePresentModesKHR
vkGetDeviceMemoryCommitment
vkGetDeviceMemoryOpaqueCaptureAddress
vkGetDeviceMemoryOpaqueCaptureAddressKHR
vkGetDeviceProcAddr
vkGetDeviceProcAddrStub
vkGetDeviceQueue
vkGetDeviceQueue2
vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI
vkGetDisplayModeProperties2KHR
vkGetDisplayModePropertiesKHR
vkGetDisplayPlaneCapabilities2KHR
vkGetDisplayPlaneCapabilitiesKHR
vkGetDisplayPlaneSupportedDisplaysKHR
vkGetDrmDisplayEXT
vkGetEventStatus
vkGetFenceFdKHR
vkGetFenceStatus
vkGetGeneratedCommandsMemoryRequirementsNV
vkGetImageDrmFormatModifierPropertiesEXT
vkGetImageMemoryRequirements
vkGetImageMemoryRequirements2
vkGetImageMemoryRequirements2KHR
vkGetImageSparseMemoryRequirements
vkGetImageSparseMemoryRequirements2
vkGetImageSparseMemoryRequirements2KHR
vkGetImageSubresourceLayout
vkGetImageViewAddressNVX
vkGetImageViewHandleNVX
vkGetInstanceProcAddr
vkGetInstanceProcAddrStub
vkGetMemoryFdKHR
vkGetMemoryFdPropertiesKHR
vkGetMemoryHostPointerPropertiesEXT
vkGetMemoryRemoteAddressNV
vkGetPastPresentationTimingGOOGLE
vkGetPerformanceParameterINTEL
vkGetPhysicalDeviceCalibrateableTimeDomainsEXT
vkGetPhysicalDeviceCooperativeMatrixPropertiesNV
vkGetPhysicalDeviceDisplayPlaneProperties2KHR
vkGetPhysicalDeviceDisplayPlanePropertiesKHR
vkGetPhysicalDeviceDisplayProperties2KHR
vkGetPhysicalDeviceDisplayPropertiesKHR
vkGetPhysicalDeviceExternalBufferProperties
vkGetPhysicalDeviceExternalBufferPropertiesKHR
vkGetPhysicalDeviceExternalFenceProperties
vkGetPhysicalDeviceExternalFencePropertiesKHR
vkGetPhysicalDeviceExternalImageFormatPropertiesNV
vkGetPhysicalDeviceExternalSemaphoreProperties
vkGetPhysicalDeviceExternalSemaphorePropertiesKHR
vkGetPhysicalDeviceFeatures
vkGetPhysicalDeviceFeatures2
vkGetPhysicalDeviceFeatures2KHR
vkGetPhysicalDeviceFormatProperties
vkGetPhysicalDeviceFormatProperties2
vkGetPhysicalDeviceFormatProperties2KHR
vkGetPhysicalDeviceFragmentShadingRatesKHR
vkGetPhysicalDeviceImageFormatProperties
vkGetPhysicalDeviceImageFormatProperties2
vkGetPhysicalDeviceImageFormatProperties2KHR
vkGetPhysicalDeviceMemoryProperties
vkGetPhysicalDeviceMemoryProperties2
vkGetPhysicalDeviceMemoryProperties2KHR
vkGetPhysicalDeviceMultisamplePropertiesEXT
vkGetPhysicalDevicePresentRectanglesKHR
vkGetPhysicalDeviceProperties
vkGetPhysicalDeviceProperties2
vkGetPhysicalDeviceProperties2KHR
vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR
vkGetPhysicalDeviceQueueFamilyProperties
vkGetPhysicalDeviceQueueFamilyProperties2
vkGetPhysicalDeviceQueueFamilyProperties2KHR
vkGetPhysicalDeviceSparseImageFormatProperties
vkGetPhysicalDeviceSparseImageFormatProperties2
vkGetPhysicalDeviceSparseImageFormatProperties2KHR
vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV
vkGetPhysicalDeviceSurfaceCapabilities2EXT
vkGetPhysicalDeviceSurfaceCapabilities2KHR
vkGetPhysicalDeviceSurfaceCapabilitiesKHR
vkGetPhysicalDeviceSurfaceFormats2KHR
vkGetPhysicalDeviceSurfaceFormatsKHR
vkGetPhysicalDeviceSurfacePresentModesKHR
vkGetPhysicalDeviceSurfaceSupportKHR
vkGetPhysicalDeviceToolPropertiesEXT
vkGetPhysicalDeviceXcbPresentationSupportKHR
vkGetPipelineCacheData
vkGetPipelineExecutableInternalRepresentationsKHR
vkGetPipelineExecutablePropertiesKHR
vkGetPipelineExecutableStatisticsKHR
vkGetPrivateDataEXT
vkGetQueryPoolResults
vkGetQueueCheckpointData2NV
vkGetQueueCheckpointDataNV
vkGetRandROutputDisplayEXT
vkGetRayTracingCaptureReplayShaderGroupHandlesKHR
vkGetRayTracingShaderGroupHandlesKHR
vkGetRayTracingShaderGroupHandlesNV
vkGetRayTracingShaderGroupStackSizeKHR
vkGetRefreshCycleDurationGOOGLE
vkGetRenderAreaGranularity
vkGetSemaphoreCounterValue
vkGetSemaphoreCounterValueKHR
vkGetSemaphoreFdKHR
vkGetShaderInfoAMD
vkGetSwapchainCounterEXT
vkGetSwapchainImagesKHR
vkGetSwapchainStatusKHR
vkGetValidationCacheDataEXT
vkGetWinrtDisplayNV
vkImportFenceFdKHR
vkImportSemaphoreFdKHR
vkInitializePerformanceApiINTEL
vkInvalidateMappedMemoryRanges
vkMapMemory
vkMergePipelineCaches
vkMergeValidationCachesEXT
vkQueueBeginDebugUtilsLabelEXT
vkQueueBindSparse
vkQueueEndDebugUtilsLabelEXT
vkQueueInsertDebugUtilsLabelEXT
vkQueuePresentKHR
vkQueueSetPerformanceConfigurationINTEL
vkQueueSubmit
vkQueueSubmit2KHR
vkQueueWaitIdle
vkRegisterDeviceEventEXT
vkRegisterDisplayEventEXT
vkReleaseDisplayEXT
vkReleasePerformanceConfigurationINTEL
vkReleaseProfilingLockKHR
vkResetCommandBuffer
vkResetCommandPool
vkResetDescriptorPool
vkResetEvent
vkResetFences
vkResetQueryPool
vkResetQueryPoolEXT
vkSetDebugUtilsObjectNameEXT
vkSetDebugUtilsObjectTagEXT
vkSetEvent
vkSetHdrMetadataEXT
vkSetLocalDimmingAMD
vkSetPrivateDataEXT
vkSignalSemaphore
vkSignalSemaphoreKHR
vkSubmitDebugUtilsMessageEXT
vkTrimCommandPool
vkTrimCommandPoolKHR
vkUninitializePerformanceApiINTEL
vkUnmapMemory
vkUpdateDescriptorSetWithTemplate
vkUpdateDescriptorSetWithTemplateKHR
vkUpdateDescriptorSets
vkWaitForFences
vkWaitForPresentKHR
vkWaitSemaphores
vkWaitSemaphoresKHR
vkWriteAccelerationStructuresPropertiesKHR
void std::_Destroy_aux<false>::__destroy<CVkShaderPipeline::DescriptorSetInfo_t*>(CVkShaderPipeline::DescriptorSetInfo_t*, CVkShaderPipeline::DescriptorSetInfo_t*)
void std::__adjust_heap<__gnu_cxx::__normal_iterator<PhysicalDeviceInfo_t*, std::vector<PhysicalDeviceInfo_t, std::allocator<PhysicalDeviceInfo_t> > >, long, PhysicalDeviceInfo_t, __gnu_cxx::__ops::_Iter_comp_iter<CVkDevice::ChoosePhysicalDevice()::{lambda(PhysicalDeviceInfo_t const&, PhysicalDeviceInfo_t const&)#1}> >(__gnu_cxx::__normal_iterator<PhysicalDeviceInfo_t*, std::vector<PhysicalDeviceInfo_t, std::allocator<PhysicalDeviceInfo_t> > >, long, long, PhysicalDeviceInfo_t, __gnu_cxx::__ops::_Iter_comp_iter<CVkDevice::ChoosePhysicalDevice()::{lambda(PhysicalDeviceInfo_t const&, PhysicalDeviceInfo_t const&)#1}>)
void std::__insertion_sort<__gnu_cxx::__normal_iterator<PhysicalDeviceInfo_t*, std::vector<PhysicalDeviceInfo_t, std::allocator<PhysicalDeviceInfo_t> > >, __gnu_cxx::__ops::_Iter_comp_iter<CVkDevice::ChoosePhysicalDevice()::{lambda(PhysicalDeviceInfo_t const&, PhysicalDeviceInfo_t const&)#1}> >(__gnu_cxx::__normal_iterator<PhysicalDeviceInfo_t*, std::vector<PhysicalDeviceInfo_t, std::allocator<PhysicalDeviceInfo_t> > >, __gnu_cxx::__normal_iterator<PhysicalDeviceInfo_t*, std::vector<PhysicalDeviceInfo_t, std::allocator<PhysicalDeviceInfo_t> > >, __gnu_cxx::__ops::_Iter_comp_iter<CVkDevice::ChoosePhysicalDevice()::{lambda(PhysicalDeviceInfo_t const&, PhysicalDeviceInfo_t const&)#1}>)
void std::__introsort_loop<__gnu_cxx::__normal_iterator<PhysicalDeviceInfo_t*, std::vector<PhysicalDeviceInfo_t, std::allocator<PhysicalDeviceInfo_t> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<CVkDevice::ChoosePhysicalDevice()::{lambda(PhysicalDeviceInfo_t const&, PhysicalDeviceInfo_t const&)#1}> >(__gnu_cxx::__normal_iterator<PhysicalDeviceInfo_t*, std::vector<PhysicalDeviceInfo_t, std::allocator<PhysicalDeviceInfo_t> > >, __gnu_cxx::__normal_iterator<PhysicalDeviceInfo_t*, std::vector<PhysicalDeviceInfo_t, std::allocator<PhysicalDeviceInfo_t> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<CVkDevice::ChoosePhysicalDevice()::{lambda(PhysicalDeviceInfo_t const&, PhysicalDeviceInfo_t const&)#1}>)
void std::__make_heap<__gnu_cxx::__normal_iterator<PhysicalDeviceInfo_t*, std::vector<PhysicalDeviceInfo_t, std::allocator<PhysicalDeviceInfo_t> > >, __gnu_cxx::__ops::_Iter_comp_iter<CVkDevice::ChoosePhysicalDevice()::{lambda(PhysicalDeviceInfo_t const&, PhysicalDeviceInfo_t const&)#1}> >(__gnu_cxx::__normal_iterator<PhysicalDeviceInfo_t*, std::vector<PhysicalDeviceInfo_t, std::allocator<PhysicalDeviceInfo_t> > >, __gnu_cxx::__normal_iterator<PhysicalDeviceInfo_t*, std::vector<PhysicalDeviceInfo_t, std::allocator<PhysicalDeviceInfo_t> > >, __gnu_cxx::__ops::_Iter_comp_iter<CVkDevice::ChoosePhysicalDevice()::{lambda(PhysicalDeviceInfo_t const&, PhysicalDeviceInfo_t const&)#1}>&)
void std::__pop_heap<__gnu_cxx::__normal_iterator<PhysicalDeviceInfo_t*, std::vector<PhysicalDeviceInfo_t, std::allocator<PhysicalDeviceInfo_t> > >, __gnu_cxx::__ops::_Iter_comp_iter<CVkDevice::ChoosePhysicalDevice()::{lambda(PhysicalDeviceInfo_t const&, PhysicalDeviceInfo_t const&)#1}> >(__gnu_cxx::__normal_iterator<PhysicalDeviceInfo_t*, std::vector<PhysicalDeviceInfo_t, std::allocator<PhysicalDeviceInfo_t> > >, __gnu_cxx::__normal_iterator<PhysicalDeviceInfo_t*, std::vector<PhysicalDeviceInfo_t, std::allocator<PhysicalDeviceInfo_t> > >, __gnu_cxx::__normal_iterator<PhysicalDeviceInfo_t*, std::vector<PhysicalDeviceInfo_t, std::allocator<PhysicalDeviceInfo_t> > >, __gnu_cxx::__ops::_Iter_comp_iter<CVkDevice::ChoosePhysicalDevice()::{lambda(PhysicalDeviceInfo_t const&, PhysicalDeviceInfo_t const&)#1}>&)
void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<PhysicalDeviceInfo_t*, std::vector<PhysicalDeviceInfo_t, std::allocator<PhysicalDeviceInfo_t> > >, __gnu_cxx::__ops::_Val_comp_iter<CVkDevice::ChoosePhysicalDevice()::{lambda(PhysicalDeviceInfo_t const&, PhysicalDeviceInfo_t const&)#1}> >(__gnu_cxx::__normal_iterator<PhysicalDeviceInfo_t*, std::vector<PhysicalDeviceInfo_t, std::allocator<PhysicalDeviceInfo_t> > >, __gnu_cxx::__ops::_Val_comp_iter<CVkDevice::ChoosePhysicalDevice()::{lambda(PhysicalDeviceInfo_t const&, PhysicalDeviceInfo_t const&)#1}>)
void std::deque<Json::OurReader::ErrorInfo, std::allocator<Json::OurReader::ErrorInfo> >::_M_push_back_aux<Json::OurReader::ErrorInfo const&>(Json::OurReader::ErrorInfo const&)
void std::deque<Json::Reader::ErrorInfo, std::allocator<Json::Reader::ErrorInfo> >::_M_push_back_aux<Json::Reader::ErrorInfo const&>(Json::Reader::ErrorInfo const&)
void std::vector<BufferedLogMessage_t, std::allocator<BufferedLogMessage_t> >::_M_realloc_insert<BufferedLogMessage_t const&>(__gnu_cxx::__normal_iterator<BufferedLogMessage_t*, std::vector<BufferedLogMessage_t, std::allocator<BufferedLogMessage_t> > >, BufferedLogMessage_t const&)
void std::vector<CAssertCallback*, std::allocator<CAssertCallback*> >::_M_realloc_insert<CAssertCallback* const&>(__gnu_cxx::__normal_iterator<CAssertCallback**, std::vector<CAssertCallback*, std::allocator<CAssertCallback*> > >, CAssertCallback* const&)
void std::vector<CLogCallback*, std::allocator<CLogCallback*> >::_M_realloc_insert<CLogCallback* const&>(__gnu_cxx::__normal_iterator<CLogCallback**, std::vector<CLogCallback*, std::allocator<CLogCallback*> > >, CLogCallback* const&)
void std::vector<CMotionEstimation::CRenderPipeline::PushConstantsInfo_t const*, std::allocator<CMotionEstimation::CRenderPipeline::PushConstantsInfo_t const*> >::_M_realloc_insert<CMotionEstimation::CRenderPipeline::PushConstantsInfo_t const*>(__gnu_cxx::__normal_iterator<CMotionEstimation::CRenderPipeline::PushConstantsInfo_t const**, std::vector<CMotionEstimation::CRenderPipeline::PushConstantsInfo_t const*, std::allocator<CMotionEstimation::CRenderPipeline::PushConstantsInfo_t const*> > >, CMotionEstimation::CRenderPipeline::PushConstantsInfo_t const*&&)
void std::vector<CPrism::PendingSampler_t, std::allocator<CPrism::PendingSampler_t> >::_M_realloc_insert<CPrism::PendingSampler_t>(__gnu_cxx::__normal_iterator<CPrism::PendingSampler_t*, std::vector<CPrism::PendingSampler_t, std::allocator<CPrism::PendingSampler_t> > >, CPrism::PendingSampler_t&&)
void std::vector<CPrism::PendingSwapchain_t, std::allocator<CPrism::PendingSwapchain_t> >::_M_realloc_insert<CPrism::PendingSwapchain_t>(__gnu_cxx::__normal_iterator<CPrism::PendingSwapchain_t*, std::vector<CPrism::PendingSwapchain_t, std::allocator<CPrism::PendingSwapchain_t> > >, CPrism::PendingSwapchain_t&&)
void std::vector<CPrismDisplay_Vulkan::Factory::VulkanDisplay_t, std::allocator<CPrismDisplay_Vulkan::Factory::VulkanDisplay_t> >::_M_realloc_insert<VkDisplayKHR_T* const&, std::vector<unsigned char, std::allocator<unsigned char> >&>(__gnu_cxx::__normal_iterator<CPrismDisplay_Vulkan::Factory::VulkanDisplay_t*, std::vector<CPrismDisplay_Vulkan::Factory::VulkanDisplay_t, std::allocator<CPrismDisplay_Vulkan::Factory::VulkanDisplay_t> > >, VkDisplayKHR_T* const&, std::vector<unsigned char, std::allocator<unsigned char> >&)
void std::vector<CPrismDisplay_Vulkan::Factory::VulkanDisplay_t, std::allocator<CPrismDisplay_Vulkan::Factory::VulkanDisplay_t> >::_M_realloc_insert<VkDisplayKHR_T*&, std::vector<unsigned char, std::allocator<unsigned char> >&>(__gnu_cxx::__normal_iterator<CPrismDisplay_Vulkan::Factory::VulkanDisplay_t*, std::vector<CPrismDisplay_Vulkan::Factory::VulkanDisplay_t, std::allocator<CPrismDisplay_Vulkan::Factory::VulkanDisplay_t> > >, VkDisplayKHR_T*&, std::vector<unsigned char, std::allocator<unsigned char> >&)
void std::vector<CThreadWatchdog::Status_s*, std::allocator<CThreadWatchdog::Status_s*> >::_M_realloc_insert<CThreadWatchdog::Status_s* const&>(__gnu_cxx::__normal_iterator<CThreadWatchdog::Status_s**, std::vector<CThreadWatchdog::Status_s*, std::allocator<CThreadWatchdog::Status_s*> > >, CThreadWatchdog::Status_s* const&)
void std::vector<CVkAllocator::MemoryTypeInfo_t*, std::allocator<CVkAllocator::MemoryTypeInfo_t*> >::_M_realloc_insert<CVkAllocator::MemoryTypeInfo_t* const&>(__gnu_cxx::__normal_iterator<CVkAllocator::MemoryTypeInfo_t**, std::vector<CVkAllocator::MemoryTypeInfo_t*, std::allocator<CVkAllocator::MemoryTypeInfo_t*> > >, CVkAllocator::MemoryTypeInfo_t* const&)
void std::vector<CVkAllocator::MemoryTypeInfo_t, std::allocator<CVkAllocator::MemoryTypeInfo_t> >::_M_realloc_insert<CVkAllocator::MemoryTypeInfo_t const&>(__gnu_cxx::__normal_iterator<CVkAllocator::MemoryTypeInfo_t*, std::vector<CVkAllocator::MemoryTypeInfo_t, std::allocator<CVkAllocator::MemoryTypeInfo_t> > >, CVkAllocator::MemoryTypeInfo_t const&)
void std::vector<CVkResourceBase*, std::allocator<CVkResourceBase*> >::_M_realloc_insert<CVkResourceBase* const&>(__gnu_cxx::__normal_iterator<CVkResourceBase**, std::vector<CVkResourceBase*, std::allocator<CVkResourceBase*> > >, CVkResourceBase* const&)
void std::vector<CVkShaderPipeline::DescriptorSetInfo_t, std::allocator<CVkShaderPipeline::DescriptorSetInfo_t> >::_M_realloc_insert<CVkShaderPipeline::DescriptorSetInfo_t>(__gnu_cxx::__normal_iterator<CVkShaderPipeline::DescriptorSetInfo_t*, std::vector<CVkShaderPipeline::DescriptorSetInfo_t, std::allocator<CVkShaderPipeline::DescriptorSetInfo_t> > >, CVkShaderPipeline::DescriptorSetInfo_t&&)
void std::vector<CVkShaderPipeline::StageInfo_t, std::allocator<CVkShaderPipeline::StageInfo_t> >::_M_realloc_insert<CVkShaderPipeline::StageInfo_t>(__gnu_cxx::__normal_iterator<CVkShaderPipeline::StageInfo_t*, std::vector<CVkShaderPipeline::StageInfo_t, std::allocator<CVkShaderPipeline::StageInfo_t> > >, CVkShaderPipeline::StageInfo_t&&)
void std::vector<CVkTimeline*, short_alloc<CVkTimeline*, 80ul, 8ul> >::_M_realloc_insert<CVkTimeline* const&>(__gnu_cxx::__normal_iterator<CVkTimeline**, std::vector<CVkTimeline*, short_alloc<CVkTimeline*, 80ul, 8ul> > >, CVkTimeline* const&)
void std::vector<CVkTimeline*, std::allocator<CVkTimeline*> >::_M_realloc_insert<CVkTimeline* const&>(__gnu_cxx::__normal_iterator<CVkTimeline**, std::vector<CVkTimeline*, std::allocator<CVkTimeline*> > >, CVkTimeline* const&)
void std::vector<ClientData_t, std::allocator<ClientData_t> >::_M_realloc_insert<ClientData_t const&>(__gnu_cxx::__normal_iterator<ClientData_t*, std::vector<ClientData_t, std::allocator<ClientData_t> > >, ClientData_t const&)
void std::vector<IPrismDisplay*, std::allocator<IPrismDisplay*> >::_M_realloc_insert<IPrismDisplay*>(__gnu_cxx::__normal_iterator<IPrismDisplay**, std::vector<IPrismDisplay*, std::allocator<IPrismDisplay*> > >, IPrismDisplay*&&)
void std::vector<Json::OurReader::StructuredError, std::allocator<Json::OurReader::StructuredError> >::_M_realloc_insert<Json::OurReader::StructuredError const&>(__gnu_cxx::__normal_iterator<Json::OurReader::StructuredError*, std::vector<Json::OurReader::StructuredError, std::allocator<Json::OurReader::StructuredError> > >, Json::OurReader::StructuredError const&)
void std::vector<Json::PathArgument const*, std::allocator<Json::PathArgument const*> >::_M_realloc_insert<Json::PathArgument const*>(__gnu_cxx::__normal_iterator<Json::PathArgument const**, std::vector<Json::PathArgument const*, std::allocator<Json::PathArgument const*> > >, Json::PathArgument const*&&)
void std::vector<Json::PathArgument, std::allocator<Json::PathArgument> >::_M_realloc_insert<Json::PathArgument const&>(__gnu_cxx::__normal_iterator<Json::PathArgument*, std::vector<Json::PathArgument, std::allocator<Json::PathArgument> > >, Json::PathArgument const&)
void std::vector<Json::PathArgument, std::allocator<Json::PathArgument> >::_M_realloc_insert<Json::PathArgument>(__gnu_cxx::__normal_iterator<Json::PathArgument*, std::vector<Json::PathArgument, std::allocator<Json::PathArgument> > >, Json::PathArgument&&)
void std::vector<Json::Reader::StructuredError, std::allocator<Json::Reader::StructuredError> >::_M_realloc_insert<Json::Reader::StructuredError const&>(__gnu_cxx::__normal_iterator<Json::Reader::StructuredError*, std::vector<Json::Reader::StructuredError, std::allocator<Json::Reader::StructuredError> > >, Json::Reader::StructuredError const&)
void std::vector<PhysicalDeviceInfo_t, std::allocator<PhysicalDeviceInfo_t> >::_M_realloc_insert<PhysicalDeviceInfo_t>(__gnu_cxx::__normal_iterator<PhysicalDeviceInfo_t*, std::vector<PhysicalDeviceInfo_t, std::allocator<PhysicalDeviceInfo_t> > >, PhysicalDeviceInfo_t&&)
void std::vector<VkDescriptorImageInfo, short_alloc<VkDescriptorImageInfo, 240ul, 8ul> >::_M_realloc_insert<VkDescriptorImageInfo const&>(__gnu_cxx::__normal_iterator<VkDescriptorImageInfo*, std::vector<VkDescriptorImageInfo, short_alloc<VkDescriptorImageInfo, 240ul, 8ul> > >, VkDescriptorImageInfo const&)
void std::vector<VkDescriptorPoolSize, std::allocator<VkDescriptorPoolSize> >::_M_realloc_insert<VkDescriptorPoolSize>(__gnu_cxx::__normal_iterator<VkDescriptorPoolSize*, std::vector<VkDescriptorPoolSize, std::allocator<VkDescriptorPoolSize> > >, VkDescriptorPoolSize&&)
void std::vector<VkDescriptorSetLayoutBinding, std::allocator<VkDescriptorSetLayoutBinding> >::_M_realloc_insert<VkDescriptorSetLayoutBinding>(__gnu_cxx::__normal_iterator<VkDescriptorSetLayoutBinding*, std::vector<VkDescriptorSetLayoutBinding, std::allocator<VkDescriptorSetLayoutBinding> > >, VkDescriptorSetLayoutBinding&&)
void std::vector<VkDescriptorSetLayout_T*, std::allocator<VkDescriptorSetLayout_T*> >::_M_realloc_insert<VkDescriptorSetLayout_T* const&>(__gnu_cxx::__normal_iterator<VkDescriptorSetLayout_T**, std::vector<VkDescriptorSetLayout_T*, std::allocator<VkDescriptorSetLayout_T*> > >, VkDescriptorSetLayout_T* const&)
void std::vector<VkDescriptorSet_T*, short_alloc<VkDescriptorSet_T*, 80ul, 8ul> >::_M_realloc_insert<VkDescriptorSet_T* const&>(__gnu_cxx::__normal_iterator<VkDescriptorSet_T**, std::vector<VkDescriptorSet_T*, short_alloc<VkDescriptorSet_T*, 80ul, 8ul> > >, VkDescriptorSet_T* const&)
void std::vector<VkDeviceMemory_T*, short_alloc<VkDeviceMemory_T*, 80ul, 8ul> >::_M_realloc_insert<VkDeviceMemory_T* const&>(__gnu_cxx::__normal_iterator<VkDeviceMemory_T**, std::vector<VkDeviceMemory_T*, short_alloc<VkDeviceMemory_T*, 80ul, 8ul> > >, VkDeviceMemory_T* const&)
void std::vector<VkDeviceQueueCreateInfo, short_alloc<VkDeviceQueueCreateInfo, 400ul, 8ul> >::_M_realloc_insert<VkDeviceQueueCreateInfo const&>(__gnu_cxx::__normal_iterator<VkDeviceQueueCreateInfo*, std::vector<VkDeviceQueueCreateInfo, short_alloc<VkDeviceQueueCreateInfo, 400ul, 8ul> > >, VkDeviceQueueCreateInfo const&)
void std::vector<VkDynamicState, short_alloc<VkDynamicState, 40ul, 4ul> >::_M_realloc_insert<VkDynamicState const&>(__gnu_cxx::__normal_iterator<VkDynamicState*, std::vector<VkDynamicState, short_alloc<VkDynamicState, 40ul, 4ul> > >, VkDynamicState const&)
void std::vector<VkExtent2D, std::allocator<VkExtent2D> >::_M_realloc_insert<VkExtent2D const&>(__gnu_cxx::__normal_iterator<VkExtent2D*, std::vector<VkExtent2D, std::allocator<VkExtent2D> > >, VkExtent2D const&)
void std::vector<VkPipelineColorBlendAttachmentState, std::allocator<VkPipelineColorBlendAttachmentState> >::_M_realloc_insert<VkPipelineColorBlendAttachmentState const&>(__gnu_cxx::__normal_iterator<VkPipelineColorBlendAttachmentState*, std::vector<VkPipelineColorBlendAttachmentState, std::allocator<VkPipelineColorBlendAttachmentState> > >, VkPipelineColorBlendAttachmentState const&)
void std::vector<VkPipelineShaderStageCreateInfo, short_alloc<VkPipelineShaderStageCreateInfo, 480ul, 8ul> >::_M_realloc_insert<VkPipelineShaderStageCreateInfo const&>(__gnu_cxx::__normal_iterator<VkPipelineShaderStageCreateInfo*, std::vector<VkPipelineShaderStageCreateInfo, short_alloc<VkPipelineShaderStageCreateInfo, 480ul, 8ul> > >, VkPipelineShaderStageCreateInfo const&)
void std::vector<VkRect2D, short_alloc<VkRect2D, 160ul, 4ul> >::_M_realloc_insert<VkRect2D const&>(__gnu_cxx::__normal_iterator<VkRect2D*, std::vector<VkRect2D, short_alloc<VkRect2D, 160ul, 4ul> > >, VkRect2D const&)
void std::vector<VkSemaphore_T*, short_alloc<VkSemaphore_T*, 128ul, 8ul> >::_M_realloc_insert<VkSemaphore_T* const&>(__gnu_cxx::__normal_iterator<VkSemaphore_T**, std::vector<VkSemaphore_T*, short_alloc<VkSemaphore_T*, 128ul, 8ul> > >, VkSemaphore_T* const&)
void std::vector<VkSemaphore_T*, short_alloc<VkSemaphore_T*, 80ul, 8ul> >::_M_realloc_insert<VkSemaphore_T* const&>(__gnu_cxx::__normal_iterator<VkSemaphore_T**, std::vector<VkSemaphore_T*, short_alloc<VkSemaphore_T*, 80ul, 8ul> > >, VkSemaphore_T* const&)
void std::vector<VkViewport, short_alloc<VkViewport, 240ul, 4ul> >::_M_realloc_insert<VkViewport const&>(__gnu_cxx::__normal_iterator<VkViewport*, std::vector<VkViewport, short_alloc<VkViewport, 240ul, 4ul> > >, VkViewport const&)
void std::vector<char const*, std::allocator<char const*> >::_M_realloc_insert<char const*>(__gnu_cxx::__normal_iterator<char const**, std::vector<char const*, std::allocator<char const*> > >, char const*&&)
void std::vector<facet::CPanelMask::Vertex_t, std::allocator<facet::CPanelMask::Vertex_t> >::_M_realloc_insert<facet::CPanelMask::Vertex_t>(__gnu_cxx::__normal_iterator<facet::CPanelMask::Vertex_t*, std::vector<facet::CPanelMask::Vertex_t, std::allocator<facet::CPanelMask::Vertex_t> > >, facet::CPanelMask::Vertex_t&&)
void std::vector<facet::CVkTimelinePoint, short_alloc<facet::CVkTimelinePoint, 160ul, 8ul> >::_M_realloc_insert<facet::CVkTimelinePoint const&>(__gnu_cxx::__normal_iterator<facet::CVkTimelinePoint*, std::vector<facet::CVkTimelinePoint, short_alloc<facet::CVkTimelinePoint, 160ul, 8ul> > >, facet::CVkTimelinePoint const&)
void std::vector<facet::CVkTimelinePoint, std::allocator<facet::CVkTimelinePoint> >::_M_realloc_insert<facet::CVkTimelinePoint const&>(__gnu_cxx::__normal_iterator<facet::CVkTimelinePoint*, std::vector<facet::CVkTimelinePoint, std::allocator<facet::CVkTimelinePoint> > >, facet::CVkTimelinePoint const&)
void std::vector<glm::vec<2, float, (glm::qualifier)0>, std::allocator<glm::vec<2, float, (glm::qualifier)0> > >::_M_assign_aux<glm::vec<2, float, (glm::qualifier)0> const*>(glm::vec<2, float, (glm::qualifier)0> const*, glm::vec<2, float, (glm::qualifier)0> const*, std::forward_iterator_tag) [clone .isra.0]
void std::vector<glm::vec<2, float, (glm::qualifier)0>, std::allocator<glm::vec<2, float, (glm::qualifier)0> > >::_M_realloc_insert<float const&, float const&>(__gnu_cxx::__normal_iterator<glm::vec<2, float, (glm::qualifier)0>*, std::vector<glm::vec<2, float, (glm::qualifier)0>, std::allocator<glm::vec<2, float, (glm::qualifier)0> > > >, float const&, float const&)
void std::vector<glm::vec<2, float, (glm::qualifier)0>, std::allocator<glm::vec<2, float, (glm::qualifier)0> > >::_M_realloc_insert<glm::vec<2, float, (glm::qualifier)0> >(__gnu_cxx::__normal_iterator<glm::vec<2, float, (glm::qualifier)0>*, std::vector<glm::vec<2, float, (glm::qualifier)0>, std::allocator<glm::vec<2, float, (glm::qualifier)0> > > >, glm::vec<2, float, (glm::qualifier)0>&&)
void std::vector<glm::vec<2, float, (glm::qualifier)0>, std::allocator<glm::vec<2, float, (glm::qualifier)0> > >::_M_realloc_insert<glm::vec<2, float, (glm::qualifier)0> const&>(__gnu_cxx::__normal_iterator<glm::vec<2, float, (glm::qualifier)0>*, std::vector<glm::vec<2, float, (glm::qualifier)0>, std::allocator<glm::vec<2, float, (glm::qualifier)0> > > >, glm::vec<2, float, (glm::qualifier)0> const&)
void std::vector<std::string, std::allocator<std::string> >::_M_realloc_insert<std::string const&>(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&)
void std::vector<std::string, std::allocator<std::string> >::_M_realloc_insert<std::string>(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string&&)
void std::vector<std::unique_ptr<CVkCommandBuffer, CVkResourceDeleter<CVkCommandBuffer> >, std::allocator<std::unique_ptr<CVkCommandBuffer, CVkResourceDeleter<CVkCommandBuffer> > > >::_M_realloc_insert<std::unique_ptr<CVkCommandBuffer, CVkResourceDeleter<CVkCommandBuffer> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<CVkCommandBuffer, CVkResourceDeleter<CVkCommandBuffer> >*, std::vector<std::unique_ptr<CVkCommandBuffer, CVkResourceDeleter<CVkCommandBuffer> >, std::allocator<std::unique_ptr<CVkCommandBuffer, CVkResourceDeleter<CVkCommandBuffer> > > > >, std::unique_ptr<CVkCommandBuffer, CVkResourceDeleter<CVkCommandBuffer> >&&)
void std::vector<std::unique_ptr<CVkImage, CVkResourceDeleter<CVkImage> >, std::allocator<std::unique_ptr<CVkImage, CVkResourceDeleter<CVkImage> > > >::_M_realloc_insert<std::unique_ptr<CVkImage, CVkResourceDeleter<CVkImage> > >(__gnu_cxx::__normal_iterator<std::unique_ptr<CVkImage, CVkResourceDeleter<CVkImage> >*, std::vector<std::unique_ptr<CVkImage, CVkResourceDeleter<CVkImage> >, std::allocator<std::unique_ptr<CVkImage, CVkResourceDeleter<CVkImage> > > > >, std::unique_ptr<CVkImage, CVkResourceDeleter<CVkImage> >&&)
void std::vector<unsigned char, std::allocator<unsigned char> >::_M_realloc_insert<unsigned char const&>(__gnu_cxx::__normal_iterator<unsigned char*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char const&)
void std::vector<unsigned int, short_alloc<unsigned int, 40ul, 4ul> >::_M_realloc_insert<unsigned int const&>(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, short_alloc<unsigned int, 40ul, 4ul> > >, unsigned int const&)
void std::vector<unsigned int, std::allocator<unsigned int> >::_M_realloc_insert<unsigned int const&>(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int const&)
void std::vector<unsigned int, std::allocator<unsigned int> >::_M_realloc_insert<unsigned int>(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int&&)
void std::vector<unsigned long, short_alloc<unsigned long, 128ul, 8ul> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, short_alloc<unsigned long, 128ul, 8ul> > >, unsigned long const&)
void std::vector<unsigned long, short_alloc<unsigned long, 80ul, 8ul> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, short_alloc<unsigned long, 80ul, 8ul> > >, unsigned long const&)
void std::vector<unsigned short, std::allocator<unsigned short> >::_M_realloc_insert<unsigned short>(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned short&&)
void std::vector<vr::HmdVector2_t, std::allocator<vr::HmdVector2_t> >::_M_realloc_insert<vr::HmdVector2_t const&>(__gnu_cxx::__normal_iterator<vr::HmdVector2_t*, std::vector<vr::HmdVector2_t, std::allocator<vr::HmdVector2_t> > >, vr::HmdVector2_t const&)
volkGenLoadDevice
volkGenLoadInstance.constprop.0
volkGenLoadLoader.constprop.0
volkGetInstanceVersion
volkGetLoadedDevice
volkGetLoadedInstance
volkInitialize
volkInitializeCustom
volkLoadDevice
volkLoadDeviceTable
volkLoadInstance
volkLoadInstanceOnly
vr-marker,frame_end,type,application
vrpathreg
vsnprintf
vtable for (anonymous namespace)::CFrameHallucinationPrivate::CDestinationFrameInfo
vtable for CPrism
vtable for CPrismDisplay_Null
vtable for CPrismDisplay_Null::Factory
vtable for CPrismDisplay_Vulkan
vtable for CPrismDisplay_Vulkan::Factory
vtable for CPrismPoseProvider_Null
vtable for CSharedResourceNamespaceServer
vtable for CThread
vtable for CVkBuffer
vtable for CVkCommandBuffer
vtable for CVkCommandBufferPool
vtable for CVkGarbageCollector
vtable for CVkImage
vtable for CVkMemory
vtable for CVkPoolGarbageCollector<CVkCommandBuffer>
vtable for CVkResourceBase
vtable for CVkResourcePool<CVkCommandBuffer>
vtable for CVkTimeline
vtable for IPC::PosixSharedMemory
vtable for IPC::SharedObjectEvent
vtable for IPC::SharedObjectMutex
vtable for Json::BuiltStyledStreamWriter
vtable for Json::CharReaderBuilder
vtable for Json::Exception
vtable for Json::FastWriter
vtable for Json::LogicError
vtable for Json::OurCharReader
vtable for Json::RuntimeError
vtable for Json::StreamWriter
vtable for Json::StreamWriter::Factory
vtable for Json::StreamWriterBuilder
vtable for Json::StyledWriter
vtable for Json::Writer
vtable for __cxxabiv1::__class_type_info
vtable for __cxxabiv1::__function_type_info
vtable for __cxxabiv1::__pointer_type_info
vtable for __cxxabiv1::__si_class_type_info
vtable for __cxxabiv1::__vmi_class_type_info
vtable for facet::CVkTimestampQueryPool<2u>
vtable for facet::CVkTimestampQueryPoolBase
vtable for std::basic_filebuf<char, std::char_traits<char> >
vtable for std::basic_ifstream<char, std::char_traits<char> >
vtable for std::basic_ios<char, std::char_traits<char> >
vtable for std::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >
vtable for std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >
vtable for std::basic_streambuf<char, std::char_traits<char> >
vtable for std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >
vtable for std::codecvt_utf8<char32_t, 1114111ul, (std::codecvt_mode)0>
vtable for std::codecvt_utf8<wchar_t, 1114111ul, (std::codecvt_mode)0>
vtable for std::thread::_State_impl<std::thread::_Invoker<std::tuple<(anonymous namespace)::CPrismInstance::Start(PrismRunParameters_t const*)::{lambda(PrismRunParameters_t)#1}, PrismRunParameters_t> > >
vtable for std::thread::_State_impl<std::thread::_Invoker<std::tuple<CThreadWatchdogManager::InitWatchdogs()::{lambda()#1}> > >
w
waitpid
wb
wcslen
write
wrong ELF class: ELFCLASS32
wstring_convert::from_bytes
wstring_convert::to_bytes
x
xcb_get_setup
xcb_intern_atom
xcb_intern_atom_reply
xcb_randr_get_output_property
xcb_randr_get_output_property_data
xcb_randr_get_output_property_reply
xcb_randr_get_screen_resources
xcb_randr_get_screen_resources_modes
xcb_randr_get_screen_resources_modes_length
xcb_randr_get_screen_resources_outputs
xcb_randr_get_screen_resources_reply
xcb_screen_next
xcb_setup_roots_iterator
y
z
zD
{
|
}
~
~CPrismDisplay_Vulkan

C6
