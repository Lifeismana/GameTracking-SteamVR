__gmon_start__
_init
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
operator new(unsigned long)
QImageIOHandler::setDevice(QIODevice*)
QImageIOHandler::setFormat(QByteArray const&)
QObjectData::dynamicMetaObject() const
QImageIOPlugin::~QImageIOPlugin()
operator delete(void*)
QIODevice::isOpen() const
memcmp
QIODevice::isReadable() const
QIODevice::isWritable() const
qt_plugin_query_metadata
qt_plugin_instance
QImageIOPlugin::QImageIOPlugin(QObject*)
QtSharedPointer::ExternalRefCountData::getAndRef(QObject const*)
__cxa_guard_acquire
__cxa_guard_release
__cxa_atexit
strcmp
QImageIOPlugin::qt_metacast(char const*)
QImageIOPlugin::qt_metacall(QMetaObject::Call, int, void**)
vtable for __cxxabiv1::__si_class_type_info
typeinfo for QImageIOPlugin
QObject::event(QEvent*)
QObject::eventFilter(QObject*, QEvent*)
QObject::timerEvent(QTimerEvent*)
QObject::childEvent(QChildEvent*)
QObject::customEvent(QEvent*)
QObject::connectNotify(QMetaMethod const&)
QObject::disconnectNotify(QMetaMethod const&)
QImageIOPlugin::staticMetaObject
QArrayData::deallocate(QArrayData*, unsigned long, unsigned long)
QImageIOHandler::~QImageIOHandler()
QImageIOHandler::QImageIOHandler()
QArrayData::shared_null
QMessageLogger::warning(char const*, ...) const
QIODevice::peek(long long)
QImageIOHandler::setFormat(QByteArray const&) const
QImageIOHandler::device() const
QArrayData::allocate(unsigned long, unsigned long, unsigned long, QFlags<QArrayData::AllocationOption>)
memcpy
memset
QByteArray::startsWith(QByteArray const&) const
QByteArray::QByteArray(char const*, int)
strlen
QString::fromLatin1_helper(char const*, int)
QRegularExpression::QRegularExpression(QString const&, QFlags<QRegularExpression::PatternOption>)
QRegularExpression::match(QString const&, int, QRegularExpression::MatchType, QFlags<QRegularExpression::MatchOption>) const
QRegularExpressionMatch::hasMatch() const
QString::toLocal8Bit_helper(QChar const*, int)
QRegularExpressionMatch::~QRegularExpressionMatch()
QRegularExpression::~QRegularExpression()
QRegularExpressionMatch::captured(QString const&) const
QString::toUInt(bool*, int) const
sqrt
QDataStream::QDataStream(QIODevice*)
QDataStream::setByteOrder(QDataStream::ByteOrder)
QDataStream::atEnd() const
QDataStream::operator>>(int&)
QDataStream::status() const
QDataStream::skipRawData(int)
QDataStream::~QDataStream()
QByteArray::number(long long, int)
QImage::QImage()
QImage::~QImage()
QIODevice::read(long long)
QImage::fromData(unsigned char const*, int, char const*)
QImage::isNull() const
QImage::operator=(QImage const&)
QImage::QImage(int, int, QImage::Format)
QImage::scanLine(int)
QDataStream::operator>>(signed char&)
QPaintDevice::QPaintDevice()
vtable for QImage
QImage::setColorTable(QVector<unsigned int>)
QImage::setPixel(int, int, unsigned int)
QImage::setAlphaChannel(QImage const&)
QByteArray::append(char)
QByteArray::append(QByteArray const&)
QVariant::QVariant(QByteArray const&)
QImage::height() const
QImage::width() const
QImage::QImage(QImage const&)
QImage::scaled(QSize const&, Qt::AspectRatioMode, Qt::TransformationMode) const
QByteArray::number(int, int)
QByteArray::append(char const*)
QBuffer::QBuffer(QByteArray*, QObject*)
QBuffer::open(QFlags<QIODevice::OpenModeFlag>)
QBuffer::~QBuffer()
QImage::save(QIODevice*, char const*, int) const
QBuffer::close()
QDataStream::operator<<(int)
QDataStream::writeRawData(char const*, int)
typeinfo for QImageIOHandler
QImageIOHandler::setOption(QImageIOHandler::ImageOption, QVariant const&)
QImageIOHandler::loopCount() const
QImageIOHandler::nextImageDelay() const
QImageIOHandler::currentImageNumber() const
QImageIOHandler::currentImageRect() const
libQt5Gui.so.5
libQt5Core.so.5
libGL.so.1
libpthread.so.0
libstdc++.so.6
libm.so.6
libgcc_s.so.1
libc.so.6
_edata
__bss_start
_end
$ORIGIN/../../lib
GLIBC_2.2.5
GLIBCXX_3.4
CXXABI_1.3
icns
QICNSPlugin
11QICNSPlugin
default
unknown
QICNSHandler::canRead() called on a sequential device
QICNSHandler::canRead() called without a readable device
parseIconEntryInfo(): Failed, OSType doesn't match: "%s"
parseIconEntryInfo(): Failed, 32bit icon from an unknown group. OSType: "%s"
QICNSHandler::scanDevice(): Failed, file is incomplete.
Scan of the icon variant container ("%s") failed at pos %s.\nReason: Scan didn't reach the end of this container's block, delta: %s bytes. This file may be corrupted.
QICNSHandler::scanDevice(): Failed, bad header at pos %s. OSType "%s", length %u
QICNSHandler::scanDevice(): Warning! Table of contents contains a bad entry! Stop at device pos: %s bytes. This file may be corrupted.
QICNSHandler::read(): The device wasn't parsed properly!
QICNSHandler::read(): Failed, unsupported icon bit depth: %u, OSType: "%s"
readMask(): Failed, unusual bit depth: %u OSType: "%s"
QICNSHandler::read(): Failed, compressed format "%s" is not supported by your Qt library or this file is corrupt. OSType: "%s"
\fjP  \r\n
PNG\r\n
icns
icns
icns
12QICNSHandler
GCC: (GNU) 4.4.7 20120313 (Red Hat 4.4.7-9)
GCC: (GNU) 4.9.1 20140922 (Red Hat 4.9.1-10)
