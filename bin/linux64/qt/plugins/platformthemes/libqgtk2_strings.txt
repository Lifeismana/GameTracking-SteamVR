__gmon_start__
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
strlen
QString::compare(QLatin1String, Qt::CaseSensitivity) const
operator new(unsigned long)
QObjectData::dynamicMetaObject() const
QPlatformThemePlugin::~QPlatformThemePlugin()
operator delete(void*)
qt_plugin_query_metadata
qt_plugin_instance
QPlatformThemePlugin::QPlatformThemePlugin(QObject*)
QtSharedPointer::ExternalRefCountData::getAndRef(QObject const*)
__cxa_guard_acquire
__cxa_guard_release
__cxa_atexit
strcmp
QPlatformThemePlugin::qt_metacast(char const*)
QPlatformThemePlugin::qt_metacall(QMetaObject::Call, int, void**)
vtable for __cxxabiv1::__si_class_type_info
typeinfo for QPlatformThemePlugin
QObject::event(QEvent*)
QObject::eventFilter(QObject*, QEvent*)
QObject::timerEvent(QTimerEvent*)
QObject::childEvent(QChildEvent*)
QObject::customEvent(QEvent*)
QObject::connectNotify(QMetaMethod const&)
QObject::disconnectNotify(QMetaMethod const&)
QPlatformThemePlugin::staticMetaObject
gtk_clipboard_get
gtk_clipboard_store
gtk_widget_destroy
QWindow::~QWindow()
QPlatformColorDialogHelper::currentColorChanged(QColor const&)
QPlatformFileDialogHelper::directoryEntered(QUrl const&)
QUrl::~QUrl()
QMetaObject::activate(QObject*, QMetaObject const*, int, void**)
QWindow::geometry() const
QListData::dispose(QListData::Data*)
QArrayData::deallocate(QArrayData*, unsigned long, unsigned long)
QArrayData::shared_null
gtk_file_chooser_get_type
g_type_check_instance_cast
gtk_file_chooser_get_filename
QString::fromUtf8_helper(char const*, int)
g_free
QUrl::fromLocalFile(QString const&)
QPlatformFileDialogHelper::currentChanged(QUrl const&)
QWindow::QWindow(QScreen*)
g_signal_connect_data
gtk_widget_hide_on_delete
gtk_dialog_get_type
QWindow::setParent(QWindow*)
QWindow::setFlags(QFlags<Qt::WindowType>)
QWindow::setModality(Qt::WindowModality)
gtk_widget_realize
QWindow::winId() const
gdk_x11_drawable_get_xid
gdk_x11_drawable_get_xdisplay
XSetTransientForHint
gdk_window_set_modal_hint
QGuiApplicationPrivate::showModalWindow(QWindow*)
gtk_widget_show
gdk_window_focus
QGuiApplicationPrivate::hideModalWindow(QWindow*)
gtk_widget_hide
QPlatformDialogHelper::QPlatformDialogHelper()
gtk_color_selection_dialog_new
QObject::connect(QObject const*, char const*, QObject const*, char const*, Qt::ConnectionType)
QMetaObject::Connection::~Connection()
gtk_color_selection_dialog_get_type
gtk_color_selection_dialog_get_color_selection
vtable for QPlatformColorDialogHelper
QPlatformDialogHelper::~QPlatformDialogHelper()
QColor::red() const
QColor::green() const
QColor::blue() const
gtk_color_selection_get_type
gtk_color_selection_set_current_color
QColor::alpha() const
gtk_color_selection_set_has_opacity_control
gtk_color_selection_set_current_alpha
gtk_color_selection_get_current_color
gtk_color_selection_get_current_alpha
QColor::setRgb(int, int, int, int)
QPlatformDialogHelper::accept()
QPlatformColorDialogHelper::colorSelected(QColor const&)
QPlatformColorDialogHelper::options() const
QColorDialogOptions::windowTitle() const
QString::toUtf8_helper(QString const&)
gtk_window_get_type
gtk_window_set_title
QColorDialogOptions::testOption(QColorDialogOptions::ColorDialogOption) const
g_object_get
g_object_set
QUrl::QUrl()
QListData::shared_null
QHashData::shared_null
gtk_file_chooser_dialog_new
QUrl::toLocalFile() const
gtk_file_chooser_set_current_folder
QUrl::isEmpty() const
gtk_file_chooser_get_current_folder
QUrl::QUrl(QUrl const&)
QPlatformFileDialogHelper::options() const
QFileDialogOptions::acceptMode() const
gtk_file_chooser_select_filename
QFileInfo::QFileInfo(QString const&)
QFileInfo::path() const
QFileInfo::fileName() const
gtk_file_chooser_set_current_name
QFileInfo::~QFileInfo()
gtk_font_selection_dialog_new
vtable for QPlatformFontDialogHelper
gtk_font_selection_dialog_get_type
pango_font_description_new
QFont::pointSizeF() const
pango_font_description_set_size
QFont::family() const
pango_font_description_set_family
QFont::weight() const
pango_font_description_set_weight
QFont::style() const
pango_font_description_set_style
pango_font_description_to_string
pango_font_description_free
gtk_font_selection_dialog_set_font_name
gtk_font_selection_dialog_get_font_name
QFont::QFont()
pango_font_description_from_string
pango_font_description_get_size
QFont::setPointSizeF(double)
pango_font_description_get_family
pango_font_description_get_weight
QPlatformFontDatabase::weightFromInteger(int)
QFont::setWeight(int)
pango_font_description_get_style
QFont::setStyle(QFont::Style)
QFont::setFamily(QString const&)
QPlatformFontDialogHelper::currentFontChanged(QFont const&)
QFont::~QFont()
QPlatformFontDialogHelper::fontSelected(QFont const&)
QPlatformFontDialogHelper::options() const
QFontDialogOptions::windowTitle() const
gtk_font_selection_dialog_get_ok_button
gtk_font_selection_dialog_get_cancel_button
QFontDialogOptions::testOption(QFontDialogOptions::FontDialogOption) const
gtk_widget_set_visible
QListData::detach(int)
QHashData::free_helper(void (*)(QHashData::Node*))
vtable for QPlatformFileDialogHelper
QPlatformFileDialogHelper::filesSelected(QList<QUrl> const&)
QPlatformFileDialogHelper::filterSelected(QString const&)
QPlatformFileDialogHelper::fileSelected(QUrl const&)
qHash(QString const&, unsigned int)
operator==(QString const&, QString const&)
gtk_file_chooser_set_filter
gtk_file_chooser_get_filter
QListData::detach_grow(int*, int)
gtk_file_chooser_get_filenames
QListData::append()
g_slist_free
QHashData::detach_helper(void (*)(QHashData::Node*, void*), void (*)(QHashData::Node*), int, int)
gtk_file_filter_new
QString::indexOf(QChar, int, Qt::CaseSensitivity) const
QString::left(int) const
QPlatformFileDialogHelper::cleanFilterList(QString const&)
QtPrivate::QStringList_join(QStringList const*, QChar const*, int)
gtk_file_filter_set_name
gtk_file_filter_add_pattern
gtk_file_chooser_add_filter
QString::operator=(QString const&)
QHashData::allocateNode(int)
QHashData::rehash(int)
gtk_file_chooser_remove_filter
QHashData::nextNode(QHashData::Node*)
QFileDialogOptions::windowTitle() const
gtk_file_chooser_set_local_only
QFileDialogOptions::fileMode() const
gtk_file_chooser_set_action
gtk_file_chooser_set_select_multiple
QFileDialogOptions::testOption(QFileDialogOptions::FileDialogOption) const
gtk_file_chooser_set_do_overwrite_confirmation
QFileDialogOptions::nameFilters() const
QFileDialogOptions::initialDirectory() const
QUrl::isLocalFile() const
QFileDialogOptions::initiallySelectedFiles() const
QFileDialogOptions::initiallySelectedNameFilter() const
gtk_dialog_get_widget_for_response
QFileDialogOptions::isLabelExplicitlySet(QFileDialogOptions::DialogLabel)
QFileDialogOptions::labelText(QFileDialogOptions::DialogLabel) const
gtk_button_get_type
gtk_button_set_label
QUrl::clear()
QWindow::modality() const
QEventLoop::QEventLoop(QObject*)
QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)
QEventLoop::~QEventLoop()
gtk_dialog_run
QWindow::qt_metacast(char const*)
QWindow::qt_metacall(QMetaObject::Call, int, void**)
typeinfo for QWindow
QWindow::event(QEvent*)
QWindow::surfaceType() const
QWindow::format() const
QWindow::accessibleRoot() const
QWindow::focusObject() const
QWindow::exposeEvent(QExposeEvent*)
QWindow::resizeEvent(QResizeEvent*)
QWindow::moveEvent(QMoveEvent*)
QWindow::focusInEvent(QFocusEvent*)
QWindow::focusOutEvent(QFocusEvent*)
QWindow::showEvent(QShowEvent*)
QWindow::hideEvent(QHideEvent*)
QWindow::keyPressEvent(QKeyEvent*)
QWindow::keyReleaseEvent(QKeyEvent*)
QWindow::mousePressEvent(QMouseEvent*)
QWindow::mouseReleaseEvent(QMouseEvent*)
QWindow::mouseDoubleClickEvent(QMouseEvent*)
QWindow::mouseMoveEvent(QMouseEvent*)
QWindow::wheelEvent(QWheelEvent*)
QWindow::touchEvent(QTouchEvent*)
QWindow::tabletEvent(QTabletEvent*)
QWindow::nativeEvent(QByteArray const&, void*, long*)
QWindow::surfaceHandle() const
non-virtual thunk to QWindow::format() const
non-virtual thunk to QWindow::surfaceHandle() const
non-virtual thunk to QWindow::surfaceType() const
QWindow::staticMetaObject
gtk_settings_get_default
QPlatformTheme::~QPlatformTheme()
QVariant::QVariant(QString const&)
XSetErrorHandler
gtk_init
QPlatformTheme::createPlatformMenuItem() const
QPlatformTheme::createPlatformMenu() const
QPlatformTheme::createPlatformMenuBar() const
QPlatformTheme::palette(QPlatformTheme::Palette) const
QPlatformTheme::standardPixmap(QPlatformTheme::StandardPixmap, QSizeF const&) const
QPlatformTheme::fileIconPixmap(QFileInfo const&, QSizeF const&, QFlags<QPlatformTheme::IconOption>) const
QPlatformTheme::createIconEngine(QString const&) const
QPlatformTheme::keyBindings(QKeySequence::StandardKey) const
QPlatformColorDialogHelper::qt_metacast(char const*)
QPlatformColorDialogHelper::qt_metacall(QMetaObject::Call, int, void**)
QPlatformFileDialogHelper::qt_metacast(char const*)
QPlatformFileDialogHelper::qt_metacall(QMetaObject::Call, int, void**)
QPlatformFontDialogHelper::qt_metacast(char const*)
QPlatformFontDialogHelper::qt_metacall(QMetaObject::Call, int, void**)
typeinfo for QPlatformColorDialogHelper
typeinfo for QPlatformFileDialogHelper
typeinfo for QPlatformFontDialogHelper
QPlatformDialogHelper::styleHint(QPlatformDialogHelper::StyleHint) const
QPlatformFileDialogHelper::isSupportedUrl(QUrl const&) const
QPlatformFontDialogHelper::staticMetaObject
QPlatformFileDialogHelper::staticMetaObject
QPlatformColorDialogHelper::staticMetaObject
libgtk-x11-2.0.so.0
libgdk-x11-2.0.so.0
libpangocairo-1.0.so.0
libatk-1.0.so.0
libcairo.so.2
libgdk_pixbuf-2.0.so.0
libgio-2.0.so.0
libpangoft2-1.0.so.0
libpango-1.0.so.0
libgobject-2.0.so.0
libgmodule-2.0.so.0
QPlatformThemePrivate::~QPlatformThemePrivate()
QCoreApplication::translate(char const*, char const*, char const*, int)
QPlatformTheme::standardButtonText(int) const
QString::fromLatin1_helper(char const*, int)
QString::arg(QString const&, int, QChar) const
QString::arg(long long, int, int, QChar) const
QString::lastIndexOf(QChar, int, Qt::CaseSensitivity) const
QString::mid(int, int) const
QString::toFloat(bool*) const
QFont::QFont(QString const&, int, int, bool)
QFont::pointSize() const
QFont::setStyleHint(QFont::StyleHint, QFont::StyleStrategy)
QDBusConnection::~QDBusConnection()
QObject::~QObject()
QMessageLogger::debug() const
QTextStream::operator<<(QString const&)
QTextStream::operator<<(char)
QTextStream::operator<<(char const*)
QDebug::~QDebug()
QPalette::~QPalette()
QPlatformThemePrivate::QPlatformThemePrivate()
QPlatformTheme::QPlatformTheme(QPlatformThemePrivate*)
QVariant::type() const
QVariant::toString() const
QFont::fromString(QString const&)
QFont::QFont(QFont const&)
QVariant::toStringList() const
QListData::append(QListData const&)
QDir::homePath()
QString::append(QString const&)
QFileInfo::isDir() const
qgetenv(char const*)
QString::fromLocal8Bit_helper(char const*, int)
QString::split(QChar, QString::SplitBehavior, Qt::CaseSensitivity) const
QFileInfo::absoluteFilePath() const
QListData::prepend()
QFileInfo::isReadable() const
QSettings::value(QString const&, QVariant const&) const
QVariant::~QVariant()
QVariant::QVariant(QVariant const&)
QSettings::QSettings(QString const&, QSettings::Format, QObject*)
QPalette::brush(QPalette::ColorGroup, QPalette::ColorRole) const
QColor::getHsv(int*, int*, int*, int*) const
QBrush::QBrush(Qt::GlobalColor, Qt::BrushStyle)
QBrush::QBrush(QColor const&, Qt::BrushStyle)
QColor::dark(int) const
QColor::light(int) const
QPalette::setBrush(QPalette::ColorGroup, QPalette::ColorRole, QBrush const&)
QBrush::~QBrush()
QPalette::QPalette(QColor const&, QColor const&)
QString::toInt(bool*, int) const
QPalette::QPalette()
QPalette::QPalette(QPalette const&)
QVariant::toInt(bool*) const
QString::operator==(QLatin1String) const
QVariant::toBool() const
memcmp
QGuiApplication::desktopSettingsAware()
QGuiApplicationPrivate::platform_integration
QByteArray::QByteArray(char const*, int)
QByteArray::split(char) const
qstrcmp(QByteArray const&, char const*)
QtPrivate::QStringList_contains(QStringList const*, QString const&, Qt::CaseSensitivity)
QVariant::QVariant(int)
QVariant::QVariant(QStringList const&)
QVariant::QVariant(bool)
QPlatformTheme::themeHint(QPlatformTheme::ThemeHint) const
QVariant::QVariant(QChar)
QByteArray::toInt(bool*, int) const
QString::QString(int, Qt::Initialization)
memcpy
QAbstractConcatenable::appendLatin1To(char const*, int, QChar*)
QtPrivate::QStringList_removeDuplicates(QStringList*)
QSettings::beginGroup(QString const&)
QSettings::~QSettings()
QMessageLogger::warning(char const*, ...) const
typeinfo for QPlatformTheme
typeinfo for QPlatformThemePrivate
QPlatformTheme::usePlatformNativeDialog(QPlatformTheme::DialogType) const
QPlatformTheme::createPlatformDialogHelper(QPlatformTheme::DialogType) const
QMessageLogger::warning() const
operator<<(QDebug, QDBusError const&)
QDBusConnection::QDBusConnection(QDBusConnection const&)
QDBusConnection::unregisterObject(QString const&, QDBusConnection::UnregisterMode)
QDBusConnection::unregisterService(QString const&)
QDebug::putString(QChar const*, unsigned long)
QDBusConnection::registerService(QString const&)
QDBusConnection::registerObject(QString const&, QObject*, QFlags<QDBusConnection::RegisterOption>)
QDBusMessage::createMethodCall(QString const&, QString const&, QString const&, QString const&)
QDBusMessage::setArguments(QList<QVariant> const&)
QDBusConnection::callWithCallback(QDBusMessage const&, QObject*, char const*, char const*, int) const
QDBusMessage::~QDBusMessage()
QObject::QObject(QObject*)
QDBusConnection::sessionBus()
QDBusServiceWatcher::QDBusServiceWatcher(QString const&, QDBusConnection const&, QFlags<QDBusServiceWatcher::WatchModeFlag>, QObject*)
QDBusInterface::QDBusInterface(QString const&, QString const&, QString const&, QDBusConnection const&, QObject*)
QDBusAbstractInterface::isValid() const
QDBusInterface::~QDBusInterface()
QObject::property(char const*) const
QLoggingCategory::QLoggingCategory(char const*)
QLoggingCategory::~QLoggingCategory()
QTextStream::operator<<(int)
QIcon::operator=(QIcon const&)
QKeySequence::operator=(QKeySequence const&)
QPlatformMenuItem::activated()
QListData::remove(int)
QMapDataBase::freeTree(QMapNodeBase*, int)
QMapDataBase::freeData(QMapDataBase*)
QIcon::QIcon()
QKeySequence::QKeySequence()
QHashData::freeNode(void*)
QIcon::~QIcon()
vtable for QPlatformMenu
QListData::insert(int)
QMapDataBase::createNode(int, int, QMapNodeBase*, bool)
QMapDataBase::createData()
QMapDataBase::recalcMostLeftNode()
QArrayData::allocate(unsigned long, unsigned long, unsigned long, QFlags<QArrayData::AllocationOption>)
operator<<(QDebug, QObject const*)
QMetaObject::cast(QObject*) const
QPlatformSystemTrayIcon::messageClicked()
QTextStream::operator<<(unsigned int)
QMetaObject::normalizedType(char const*)
QMetaType::registerNormalizedType(QByteArray const&, void (*)(void*), void* (*)(void*, void const*), int, QFlags<QMetaType::TypeFlag>, QMetaObject const*)
QMetaType::registerNormalizedTypedef(QByteArray const&, int)
QMetaType::hasRegisteredConverterFunction(int, int)
QMetaType::registerConverterFunction(QtPrivate::AbstractConverterFunction const*, int, int)
QPlatformSystemTrayIcon::QPlatformSystemTrayIcon()
QCoreApplication::applicationPid()
QTimer::QTimer(QObject*)
QDBusMetaType::registerMarshallOperators(int, void (*)(QDBusArgument&, void const*), void (*)(QDBusArgument const&, void*))
QMetaType::unregisterConverterFunction(int, int)
QVariant::QVariant(int, void const*, unsigned int)
QDBusAbstractInterface::asyncCallWithArgumentList(QString const&, QList<QVariant> const&)
QDBusPendingReplyData::QDBusPendingReplyData()
QDBusPendingReplyData::assign(QDBusPendingCall const&)
QDBusPendingReplyData::setMetaTypes(int, int const*)
QDBusPendingCall::~QDBusPendingCall()
operator<<(QDebug, QVariant const&)
QMapNodeBase::nextNode() const
QDir::tempPath()
QTimer::~QTimer()
QPlatformSystemTrayIcon::~QPlatformSystemTrayIcon()
QTemporaryFile::QTemporaryFile(QString const&, QObject*)
QIcon::pixmap(QSize const&, QIcon::Mode, QIcon::State) const
QPixmap::save(QIODevice*, char const*, int) const
QPixmap::~QPixmap()
QIcon::name() const
QIcon::availableSizes(QIcon::Mode, QIcon::State) const
operator<<(QDebug, QSize const&)
QTimer::start(int)
QMapDataBase::shared_null
operator<(QString const&, QString const&)
QVariant::operator=(QVariant const&)
QCoreApplication::applicationName()
QDBusPendingReplyData::~QDBusPendingReplyData()
QPlatformSystemTrayIcon::staticMetaObject
QMetaObject::indexOfEnumerator(char const*) const
QPlatformSystemTrayIcon::metaObject() const
QMetaObject::enumerator(int) const
QMetaEnum::valueToKey(int) const
QMetaObject::tr(char const*, char const*, int) const
QDBusArgument::beginStructure()
QDBusArgument::operator<<(int)
QDBusArgument::operator<<(QByteArray const&)
QDBusArgument::endStructure()
QDBusArgument::beginStructure() const
QDBusArgument::operator>>(int&) const
QDBusArgument::operator>>(QByteArray&) const
QDBusArgument::endStructure() const
QByteArray::operator=(QByteArray const&)
QDBusArgument::beginArray(int)
QDBusArgument::endArray()
QDBusArgument::operator<<(QString const&)
QDBusArgument::beginArray() const
QDBusArgument::atEnd() const
QDBusArgument::endArray() const
QDBusArgument::operator>>(QString&) const
QCoreApplication::self
QGuiApplication::devicePixelRatio() const
QPixmap::toImage() const
QImage::convertToFormat_inplace(QImage::Format, QFlags<Qt::ImageConversionFlag>)
QImage::convertToFormat_helper(QImage::Format, QFlags<Qt::ImageConversionFlag>) const
QImage::~QImage()
QImage::height() const
QImage::width() const
QImage::QImage(int, int, QImage::Format)
QImage::fill(Qt::GlobalColor)
QPainter::QPainter(QPaintDevice*)
QPainter::drawImage(QPointF const&, QImage const&)
QImage::operator=(QImage const&)
QPainter::~QPainter()
QByteArray::QByteArray(int, char)
QImage::constBits() const
QImage::byteCount() const
QByteArray::reallocData(unsigned int, QFlags<QArrayData::AllocationOption>)
QPaintDevice::QPaintDevice()
vtable for QImage
QDBusAbstractAdaptor::QDBusAbstractAdaptor(QObject*)
QDBusAbstractAdaptor::setAutoRelaySignals(bool)
QDBusAbstractAdaptor::~QDBusAbstractAdaptor()
QDBusObjectPath::doCheck()
QPlatformSystemTrayIcon::activated(QPlatformSystemTrayIcon::ActivationReason)
QDBusAbstractInterface::QDBusAbstractInterface(QString const&, QString const&, char const*, QDBusConnection const&, QObject*)
QDBusAbstractInterface::~QDBusAbstractInterface()
QObject::qt_metacast(char const*)
QObject::qt_metacall(QMetaObject::Call, int, void**)
typeinfo for QObject
QObject::staticMetaObject
QPlatformMenuItem::qt_metacast(char const*)
QPlatformMenuItem::qt_metacall(QMetaObject::Call, int, void**)
QKeySequence::~QKeySequence()
vtable for QPlatformMenuItem
QPlatformMenu::qt_metacast(char const*)
QPlatformMenu::qt_metacall(QMetaObject::Call, int, void**)
typeinfo for QPlatformMenuItem
typeinfo for QPlatformMenu
QPlatformMenu::staticMetaObject
QPlatformMenuItem::staticMetaObject
QPlatformSystemTrayIcon::qt_metacast(char const*)
QPlatformSystemTrayIcon::qt_metacall(QMetaObject::Call, int, void**)
typeinfo for QPlatformSystemTrayIcon
QDBusAbstractAdaptor::qt_metacast(char const*)
QDBusAbstractAdaptor::qt_metacall(QMetaObject::Call, int, void**)
typeinfo for QDBusAbstractAdaptor
QDBusAbstractAdaptor::staticMetaObject
QDBusArgument::~QDBusArgument()
QDBusArgument::QDBusArgument(QDBusArgument const&)
QDBusArgument::QDBusArgument()
QDBusAbstractInterface::callWithArgumentList(QDBus::CallMode, QString const&, QList<QVariant> const&)
QDBusMessage::type() const
QDBusError::QDBusError()
QVariant::QVariant(int, void const*)
qDBusReplyFill(QDBusMessage const&, QDBusError&, QVariant&)
QVariant::userType() const
QVariant::convert(int, void*) const
QDBusError::operator=(QDBusError const&)
QVariant::constData() const
QDBusMessage::arguments() const
QDBusAbstractInterface::qt_metacast(char const*)
QDBusAbstractInterface::qt_metacall(QMetaObject::Call, int, void**)
typeinfo for QDBusAbstractInterface
QDBusAbstractInterface::connectNotify(QMetaMethod const&)
QDBusAbstractInterface::disconnectNotify(QMetaMethod const&)
QDBusAbstractInterface::staticMetaObject
QLocale::QLocale()
QLocale::textDirection() const
QLocale::~QLocale()
QDBusArgument::beginMap(int, int)
QDBusArgument::beginMapEntry()
QDBusArgument::operator<<(QDBusVariant const&)
QDBusArgument::endMapEntry()
QDBusArgument::endMap()
QDBusArgument::operator<<(QStringList const&)
QDBusArgument::operator>>(QStringList&) const
QString::reallocData(unsigned int, bool)
QString::expand(int)
QDBusArgument::operator<<(unsigned int)
QDBusArgument::operator>>(QDBusVariant&) const
QDBusArgument::operator>>(unsigned int&) const
QDebugStateSaver::QDebugStateSaver(QDebug&)
QDebugStateSaver::~QDebugStateSaver()
QDBusArgument::beginMap() const
QDBusArgument::beginMapEntry() const
operator>>(QDBusArgument const&, QVariant&)
QDBusArgument::endMapEntry() const
QDBusArgument::endMap() const
QVariant::QVariant(QLatin1String)
QIcon::QIcon(QIcon const&)
QIcon::isNull() const
QBuffer::QBuffer(QObject*)
QBuffer::data() const
QVariant::QVariant(QByteArray const&)
QBuffer::~QBuffer()
QMetaType::typeName(int)
QByteArray::append(char const*, int)
QByteArray::append(char)
QByteArray::endsWith(char) const
libfontconfig.so.1
libfreetype.so.6
libQt5DBus.so.5
libgthread-2.0.so.0
librt.so.1
libglib-2.0.so.0
libXrender.so.1
libXext.so.6
libX11.so.6
libQt5Gui.so.5
libQt5Core.so.5
libGL.so.1
libpthread.so.0
libm.so.6
libstdc++.so.6
libgcc_s.so.1
libc.so.6
_edata
__bss_start
_end
$ORIGIN/../../lib
GLIBCXX_3.4
CXXABI_1.3
GLIBC_2.2.5
QGtk2ThemePlugin
16QGtk2ThemePlugin
response
delete-event
1onAccepted()
2accept()
2reject()
color-changed
help-button
cancel-button
ok-button
visible
gtk-ok
gtk-cancel
selection-changed
current-folder-changed
gtk-open
gtk-save
1quit()
QGtk2Dialog
accept
reject
11QGtk2Dialog
:gtk-font-name
gtk-icon-theme-name
gtk-fallback-icon-theme
gtk2
10QGtk2Theme
QGtk2FontDialogHelper
onAccepted
QGtk2FileDialogHelper
onAccepted
QGtk2ColorDialogHelper
onAccepted
22QGtk2ColorDialogHelper
21QGtk2FileDialogHelper
21QGtk2FontDialogHelper
QGnomeTheme
&Save
&Cancel
&Close
Close without Saving
monospace
true
false
D-Bus tray available:
XDG_DATA_DIRS
/usr/local/share/:/usr/share/
TextBesideIcon
TextOnly
TextUnderIcon
LXDE
XFCE
MATE
UNITY
X-CINNAMON
GNOME
default
DESKTOP_SESSION
KDE_SESSION_VERSION
KDEHOME
KDEDIRS
gnome
generic
static QPlatformTheme* QKdeTheme::createKdeTheme()
Sans Serif
%s: Unable to determine KDE dirs
17QGenericUnixTheme
9QKdeTheme
11QGnomeTheme
24QGenericUnixThemePrivate
16QKdeThemePrivate
18QGnomeThemePrivate
failed to unregister service
failed to register service
failed to register
RegisterStatusNotifierItem
1dbusError(QDBusError)
2trayIconRegistered()
org.kde.StatusNotifierWatcher
/StatusNotifierWatcher
/StatusNotifierItem
/MenuBar
QDBusTrayIcon encountered a D-Bus error:
IsStatusNotifierHostRegistered
StatusNotifierHost is not registered
qt.qpa.menu
qt.qpa.tray
1actionInvoked(uint,QString)
2ActionInvoked(uint,QString)
unregistering
2LayoutUpdated(uint,int)
2updated(uint,int)
QXdgDBusImageStruct
QXdgDBusToolTipStruct
QXdgDBusImageVector
2NewStatus(QString)
2statusChanged(QString)
2NewToolTip()
2tooltipChanged()
2NewIcon()
2iconChanged()
2NewAttentionIcon()
2attention()
2NewTitle()
1attentionTimerExpired()
2timeout()
QMap(
MessageIcon
urgency
1notificationClosed(uint,uint)
2NotificationClosed(uint,uint)
2ItemsPropertiesUpdated(QDBusMenuItemList,QDBusMenuItemKeysList)
2propertiesUpdated(QDBusMenuItemList,QDBusMenuItemKeysList)
QtMetaTypePrivate::QSequentialIterableImpl
P@/NO_DBUSMENU
org.freedesktop.Notifications
QDBusMenuConnection
trayIconRegistered
dbusError
QDBusError
error
19QDBusMenuConnection
QDBusMenuItem
QDBusMenuItemKeys
QDBusMenuItemList
QDBusMenuItemKeysList
QDBusPlatformMenu
updated
revision
dbusId
propertiesUpdated
QDBusMenuItemList
updatedProps
QDBusMenuItemKeysList
removedProps
QDBusPlatformMenuItem
21QDBusPlatformMenuItem
17QDBusPlatformMenu
QDBusTrayIcon
categoryChanged
statusChanged
tooltipChanged
iconChanged
attention
menuChanged
attentionTimerExpired
actionInvoked
action
notificationClosed
reason
category
status
tooltip
iconName
icon
isRequestingAttention
attentionTitle
attentionMessage
attentionIconName
attentionIcon
menu
QDBusPlatformMenu*
13QDBusTrayIcon
QDBusObjectPath
QStatusNotifierItemAdaptor
D-Bus Interface
org.kde.StatusNotifierItem
D-Bus Introspection
  <interface name="org.kde.StatusNotifierItem">\n    <property access="read" type="s" name="Category"/>\n    <property access="read" type="s" name="Id"/>\n    <property access="read" type="s" name="Title"/>\n    <property access="read" type="s" name="Status"/>\n    <property access="read" type="i" name="WindowId"/>\n    <property access="read" type="s" name="IconThemePath"/>\n    <property access="read" type="o" name="Menu"/>\n    <property access="read" type="b" name="ItemIsMenu"/>\n    <property access="read" type="s" name="IconName"/>\n    <property access="read" type="(iiay)" name="IconPixmap">\n      <annotation value="QXdgDBusImageVector" name="org.qtproject.QtDBus.QtTypeName"/>\n    </property>\n    <property access="read" type="s" name="OverlayIconName"/>\n    <property access="read" type="(iiay)" name="OverlayIconPixmap">\n      <annotation value="QXdgDBusImageVector" name="org.qtproject.QtDBus.QtTypeName"/>\n    </property>\n    <property access="read" type="s" name="AttentionIconName"/>\n    <property access="read" type="(iiay)" name="AttentionIconPixmap">\n      <annotation value="QXdgDBusImageVector" name="org.qtproject.QtDBus.QtTypeName"/>\n    </property>\n    <property access="read" type="s" name="AttentionMovieName"/>\n    <property access="read" type="(s(iiay)ss)" name="ToolTip">\n      <annotation value="QXdgDBusToolTipStruct" name="org.qtproject.QtDBus.QtTypeName"/>\n    </property>\n    <method name="ContextMenu">\n      <arg direction="in" type="i" name="x"/>\n      <arg direction="in" type="i" name="y"/>\n    </method>\n    <method name="Activate">\n      <arg direction="in" type="i" name="x"/>\n      <arg direction="in" type="i" name="y"/>\n    </method>\n    <method name="SecondaryActivate">\n      <arg direction="in" type="i" name="x"/>\n      <arg direction="in" type="i" name="y"/>\n    </method>\n    <method name="Scroll">\n      <arg direction="in" type="i" name="delta"/>\n      <arg direction="in" type="s" name="orientation"/>\n    </method>\n    <signal name="NewTitle"/>\n    <signal name="NewIcon"/>\n    <signal name="NewAttentionIcon"/>\n    <signal name="NewOverlayIcon"/>\n    <signal name="NewToolTip"/>\n    <signal name="NewStatus">\n      <arg type="s" name="status"/>\n    </signal>\n  </interface>\n
NewAttentionIcon
NewIcon
NewOverlayIcon
NewStatus
status
NewTitle
NewToolTip
Activate
ContextMenu
Scroll
delta
orientation
SecondaryActivate
AttentionIconName
AttentionIconPixmap
QXdgDBusImageVector
AttentionMovieName
Category
IconName
IconPixmap
ItemIsMenu
Menu
QDBusObjectPath
OverlayIconName
OverlayIconPixmap
Status
Title
ToolTip
QXdgDBusToolTipStruct
26QStatusNotifierItemAdaptor
QDBusArgument
QXdgNotificationInterface
ActionInvoked
action_key
NotificationClosed
reason
closeNotification
QDBusPendingReply<>
getCapabilities
QDBusPendingReply<QStringList>
getServerInformation
QDBusPendingReply<QString,QString,QString,QString>
QDBusReply<QString>
QString&
vendor
version
specVersion
notify
QDBusPendingReply<uint>
appName
replacesId
appIcon
summary
body
actions
hints
timeout
25QXdgNotificationInterface
normal
clicked
depth
revision
QDBusMenuEvent
QDBusMenuLayoutItem
QDBusVariant
QDBusMenuItem(id=
, properties=
QDBusMenuLayoutItem(id=
 children)
QDBusMenuLayoutItemList
QDBusMenuEventList
separator
label
submenu
children-display
enabled
checkmark
toggle-type
toggle-state
icon-name
icon-data
QList
QDBusMenuAdaptor
D-Bus Interface
com.canonical.dbusmenu
D-Bus Introspection
  <interface name="com.canonical.dbusmenu">\n    <property access="read" type="u" name="Version">\n    </property>\n    <property access="read" type="s" name="TextDirection">\n    </property>\n    <property access="read" type="s" name="Status">\n    </property>\n    <property access="read" type="as" name="IconThemePath">\n    </property>\n    <method name="GetLayout">\n      <annotation value="QDBusMenuLayoutItem" name="org.qtproject.QtDBus.QtTypeName.Out1"/>\n      <arg direction="in" type="i" name="parentId"/>\n      <arg direction="in" type="i" name="recursionDepth"/>\n      <arg direction="in" type="as" name="propertyNames"/>\n      <arg direction="out" type="u" name="revision"/>\n      <arg direction="out" type="(ia{sv}av)" name="layout"/>\n    </method>\n    <method name="GetGroupProperties">\n      <annotation value="QList&lt;int&gt;" name="org.qtproject.QtDBus.QtTypeName.In0"/>\n      <annotation value="QDBusMenuItemList" name="org.qtproject.QtDBus.QtTypeName.Out0"/>\n      <arg direction="in" type="ai" name="ids"/>\n      <arg direction="in" type="as" name="propertyNames"/>\n      <arg direction="out" type="a(ia{sv})" name="properties"/>\n    </method>\n    <method name="GetProperty">\n      <arg direction="in" type="i" name="id"/>\n      <arg direction="in" type="s" name="name"/>\n      <arg direction="out" type="v" name="value"/>\n    </method>\n    <method name="Event">\n      <arg direction="in" type="i" name="id"/>\n      <arg direction="in" type="s" name="eventId"/>\n      <arg direction="in" type="v" name="data"/>\n      <arg direction="in" type="u" name="timestamp"/>\n    </method>\n    <method name="EventGroup">\n      <annotation value="QList&lt;QDBusMenuEvent&gt;" name="org.qtproject.QtDBus.QtTypeName.In0"/>\n      <annotation value="QList&lt;int&gt;" name="org.qtproject.QtDBus.QtTypeName.Out0"/>\n      <arg direction="in" type="a(isvu)" name="events"/>\n      <arg direction="out" type="ai" name="idErrors"/>\n    </method>\n    <method name="AboutToShow">\n      <arg direction="in" type="i" name="id"/>\n      <arg direction="out" type="b" name="needUpdate"/>\n    </method>\n    <method name="AboutToShowGroup">\n      <annotation value="QList&lt;int&gt;" name="org.qtproject.QtDBus.QtTypeName.In0"/>\n      <annotation value="QList&lt;int&gt;" name="org.qtproject.QtDBus.QtTypeName.Out0"/>\n      <annotation value="QList&lt;int&gt;" name="org.qtproject.QtDBus.QtTypeName.Out1"/>\n      <arg direction="in" type="ai" name="ids"/>\n      <arg direction="out" type="ai" name="updatesNeeded"/>\n      <arg direction="out" type="ai" name="idErrors"/>\n    </method>\n    <signal name="ItemsPropertiesUpdated">\n      <annotation value="QDBusMenuItemList" name="org.qtproject.QtDBus.QtTypeName.In0"/>\n      <annotation value="QDBusMenuItemKeysList" name="org.qtproject.QtDBus.QtTypeName.In1"/>\n      <arg direction="out" type="a(ia{sv})" name="updatedProps"/>\n      <arg direction="out" type="a(ias)" name="removedProps"/>\n    </signal>\n    <signal name="LayoutUpdated">\n      <arg direction="out" type="u" name="revision"/>\n      <arg direction="out" type="i" name="parent"/>\n    </signal>\n    <signal name="ItemActivationRequested">\n      <arg direction="out" type="i" name="id"/>\n      <arg direction="out" type="u" name="timestamp"/>\n    </signal>\n  </interface>\n
ItemActivationRequested
timestamp
ItemsPropertiesUpdated
QDBusMenuItemList
updatedProps
QDBusMenuItemKeysList
removedProps
LayoutUpdated
revision
parent
AboutToShow
AboutToShowGroup
QList<int>
QList<int>&
idErrors
Event
eventId
QDBusVariant
data
EventGroup
QDBusMenuEventList
events
GetGroupProperties
propertyNames
GetLayout
parentId
recursionDepth
QDBusMenuLayoutItem&
layout
GetProperty
name
Status
TextDirection
Version
16QDBusMenuAdaptor
GCC: (GNU) 4.4.7 20120313 (Red Hat 4.4.7-9)
GCC: (GNU) 4.9.1 20140922 (Red Hat 4.9.1-10)
