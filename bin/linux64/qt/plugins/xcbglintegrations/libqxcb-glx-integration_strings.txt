__gmon_start__
_init
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
QObjectData::dynamicMetaObject() const
strcmp
QXcbGlIntegrationPlugin::qt_metacast(char const*)
QXcbGlIntegrationPlugin::qt_metacall(QMetaObject::Call, int, void**)
operator new(unsigned long)
vtable for QXcbGlIntegrationPlugin
QObject::~QObject()
operator delete(void*)
qt_plugin_query_metadata
qt_plugin_instance
QObject::QObject(QObject*)
QtSharedPointer::ExternalRefCountData::getAndRef(QObject const*)
__cxa_guard_acquire
__cxa_guard_release
__cxa_atexit
vtable for __cxxabiv1::__si_class_type_info
typeinfo for QXcbGlIntegrationPlugin
QObject::event(QEvent*)
QObject::eventFilter(QObject*, QEvent*)
QObject::timerEvent(QTimerEvent*)
QObject::childEvent(QChildEvent*)
QObject::customEvent(QEvent*)
QObject::connectNotify(QMetaMethod const&)
QObject::disconnectNotify(QMetaMethod const&)
QXcbGlIntegrationPlugin::staticMetaObject
QXcbGlIntegration::~QXcbGlIntegration()
QXcbConnection::xlib_display() const
XLockDisplay
XESetWireToEvent
XUnlockDisplay
QOpenGLContext::screen() const
QScreen::handle() const
QOpenGLContext::format() const
QOpenGLContext::shareHandle() const
QOpenGLContext::nativeHandle() const
QVariant::~QVariant()
QSurfaceFormat::~QSurfaceFormat()
QOpenGLContext::setNativeHandle(QVariant const&)
glXGetCurrentDisplay
glXGetClientString
QT_XCB_GLINTEGRATION()
QMessageLogger::debug() const
QString::fromUtf8_helper(char const*, int)
QTextStream::operator<<(QString const&)
QArrayData::deallocate(QArrayData*, unsigned long, unsigned long)
QTextStream::operator<<(char)
QDebug::~QDebug()
QXcbGlIntegration::QXcbGlIntegration()
typeinfo for QXcbGlIntegration
QXcbWindow::~QXcbWindow()
QPlatformWindow::window() const
QWindow::requestedFormat() const
QSurfaceFormat::operator=(QSurfaceFormat const&)
QXcbWindow::xcbScreen() const
QSurface::supportsOpenGL() const
QXcbWindow::QXcbWindow(QWindow*)
typeinfo for QXcbWindow
QXcbWindow::handleGenericEvent(xcb_generic_event_t*, long*)
QXcbWindow::handleExposeEvent(xcb_expose_event_t const*)
QXcbWindow::handleClientMessageEvent(xcb_client_message_event_t const*)
QXcbWindow::handleConfigureNotifyEvent(xcb_configure_notify_event_t const*)
QXcbWindow::handleMapNotifyEvent(xcb_map_notify_event_t const*)
QXcbWindow::handleUnmapNotifyEvent(xcb_unmap_notify_event_t const*)
QXcbWindow::handleButtonPressEvent(xcb_button_press_event_t const*)
QXcbWindow::handleButtonReleaseEvent(xcb_button_press_event_t const*)
QXcbWindow::handleMotionNotifyEvent(xcb_motion_notify_event_t const*)
QXcbWindow::handleEnterNotifyEvent(xcb_enter_notify_event_t const*)
QXcbWindow::handleLeaveNotifyEvent(xcb_enter_notify_event_t const*)
QXcbWindow::handleFocusInEvent(xcb_focus_in_event_t const*)
QXcbWindow::handleFocusOutEvent(xcb_focus_in_event_t const*)
QXcbWindow::handlePropertyNotifyEvent(xcb_property_notify_event_t const*)
QXcbWindow::handleXIMouseEvent(xcb_ge_event_t*)
QXcbWindow::toWindow()
QXcbWindow::setGeometry(QRect const&)
QXcbWindow::frameMargins() const
QXcbWindow::setVisible(bool)
QXcbWindow::setWindowFlags(QFlags<Qt::WindowType>)
QXcbWindow::setWindowState(Qt::WindowState)
QXcbWindow::winId() const
QXcbWindow::setParent(QPlatformWindow const*)
QXcbWindow::isExposed() const
QXcbWindow::isEmbedded(QPlatformWindow const*) const
QXcbWindow::mapToGlobal(QPoint const&) const
QXcbWindow::mapFromGlobal(QPoint const&) const
QXcbWindow::setWindowTitle(QString const&)
QXcbWindow::setWindowIcon(QIcon const&)
QXcbWindow::raise()
QXcbWindow::lower()
QXcbWindow::propagateSizeHints()
QXcbWindow::requestActivateWindow()
QXcbWindow::setKeyboardGrabEnabled(bool)
QXcbWindow::setMouseGrabEnabled(bool)
QXcbWindow::format() const
QXcbWindow::windowEvent(QEvent*)
QXcbWindow::startSystemResize(QPoint const&, Qt::Corner)
QXcbWindow::setOpacity(double)
QXcbWindow::setMask(QRegion const&)
QXcbWindow::setAlertState(bool)
QXcbWindow::devicePixelRatio() const
QXcbWindow::create()
QXcbWindow::destroy()
non-virtual thunk to QXcbWindow::format() const
non-virtual thunk to QXcbWindow::setGeometry(QRect const&)
QPlatformWindow::geometry() const
QPlatformWindow::normalGeometry() const
non-virtual thunk to QXcbWindow::frameMargins() const
non-virtual thunk to QXcbWindow::setVisible(bool)
non-virtual thunk to QXcbWindow::setWindowFlags(QFlags<Qt::WindowType>)
non-virtual thunk to QXcbWindow::setWindowState(Qt::WindowState)
non-virtual thunk to QXcbWindow::winId() const
non-virtual thunk to QXcbWindow::setParent(QPlatformWindow const*)
non-virtual thunk to QXcbWindow::setWindowTitle(QString const&)
QPlatformWindow::setWindowFilePath(QString const&)
non-virtual thunk to QXcbWindow::setWindowIcon(QIcon const&)
non-virtual thunk to QXcbWindow::raise()
non-virtual thunk to QXcbWindow::lower()
non-virtual thunk to QXcbWindow::isExposed() const
QPlatformWindow::isActive() const
non-virtual thunk to QXcbWindow::isEmbedded(QPlatformWindow const*) const
non-virtual thunk to QXcbWindow::mapToGlobal(QPoint const&) const
non-virtual thunk to QXcbWindow::mapFromGlobal(QPoint const&) const
non-virtual thunk to QXcbWindow::propagateSizeHints()
non-virtual thunk to QXcbWindow::setOpacity(double)
non-virtual thunk to QXcbWindow::setMask(QRegion const&)
non-virtual thunk to QXcbWindow::requestActivateWindow()
QPlatformWindow::handleContentOrientationChange(Qt::ScreenOrientation)
non-virtual thunk to QXcbWindow::devicePixelRatio() const
non-virtual thunk to QXcbWindow::setKeyboardGrabEnabled(bool)
non-virtual thunk to QXcbWindow::setMouseGrabEnabled(bool)
QPlatformWindow::setWindowModified(bool)
non-virtual thunk to QXcbWindow::windowEvent(QEvent*)
non-virtual thunk to QXcbWindow::startSystemResize(QPoint const&, Qt::Corner)
QPlatformWindow::setFrameStrutEventsEnabled(bool)
QPlatformWindow::frameStrutEventsEnabled() const
non-virtual thunk to QXcbWindow::setAlertState(bool)
QPlatformWindow::invalidateSurface()
QPlatformWindow::requestUpdate()
QSurfaceFormat::QSurfaceFormat(QSurfaceFormat const&)
glXDestroyContext
QPlatformOpenGLContext::~QPlatformOpenGLContext()
glXMakeCurrent
glXMakeContextCurrent
glXDestroyPbuffer
QPlatformOffscreenSurface::~QPlatformOffscreenSurface()
XCreateColormap
XCreateWindow
XFreeColormap
glXGetVisualFromFBConfig
XFree
QMessageLogger::fatal(char const*, ...) const
QPlatformSurface::surface() const
QSurface::surfaceClass() const
glXSwapBuffers
QXcbWindow::needsSync() const
QXcbWindow::postSyncWindowRequest()
glGetString
QByteArray::QByteArray(char const*, int)
QPlatformOpenGLContext::parseOpenGLVersion(QByteArray const&, int&, int&)
QSurfaceFormat::setProfile(QSurfaceFormat::OpenGLContextProfile)
QSurfaceFormat::setOptions(QFlags<QSurfaceFormat::FormatOption>)
QSurfaceFormat::renderableType() const
QArrayData::shared_null
QSurfaceFormat::setMajorVersion(int)
QSurfaceFormat::setMinorVersion(int)
QSurfaceFormat::version() const
glGetIntegerv
QSurfaceFormat::setOption(QSurfaceFormat::FormatOption, bool)
QVariant::canConvert(int) const
QMessageLogger::warning(char const*, ...) const
QVariant::userType() const
QVariant::convert(int, void*) const
QMetaObject::normalizedType(char const*)
QMetaType::registerNormalizedType(QByteArray const&, void (*)(void*), void* (*)(void*, void const*), int, QFlags<QMetaType::TypeFlag>, QMetaObject const*)
QVariant::constData() const
XGetVisualInfo
glXQueryContext
glXChooseFBConfig
glXGetCurrentContext
glXGetCurrentDrawable
QSurfaceFormat::QSurfaceFormat()
QOpenGLContext::openGLModuleType()
QSurfaceFormat::setRenderableType(QSurfaceFormat::RenderableType)
XDestroyWindow
XGetWindowAttributes
XVisualIDFromVisual
QVariant::QVariant(int, void const*, unsigned int)
QPlatformOffscreenSurface::QPlatformOffscreenSurface(QOffscreenSurface*)
QOffscreenSurface::requestedFormat() const
QOffscreenSurface::screen() const
glXCreatePbuffer
QListData::dispose(QListData::Data*)
QArrayData::allocate(unsigned long, unsigned long, unsigned long, QFlags<QArrayData::AllocationOption>)
memcpy
memset
memcmp
glXGetProcAddress
glXQueryExtensionsString
QByteArray::split(char) const
QSurfaceFormat::majorVersion() const
QSurfaceFormat::minorVersion() const
glXCreateContext
glXCreateNewContext
QSurfaceFormat::testOption(QSurfaceFormat::FormatOption) const
QSurfaceFormat::profile() const
QPlatformOpenGLContext::QPlatformOpenGLContext()
QVariant::isNull() const
QSurfaceFormat::swapInterval() const
QPlatformOffscreenSurface::screen() const
QPlatformWindow::screen() const
dlopen
dlsym
dlclose
QString::fromLatin1_helper(char const*, int)
QLibrary::QLibrary(QString const&, QObject*)
QLibrary::resolve(char const*)
QLibrary::~QLibrary()
qEnvironmentVariableIsSet(char const*)
QOpenGLContext::currentContext()
QOpenGLContext::surface() const
QOffscreenSurface::QOffscreenSurface(QScreen*)
QOffscreenSurface::create()
QOpenGLContext::QOpenGLContext(QObject*)
QOpenGLContext::create()
QOpenGLContext::makeCurrent(QSurface*)
strstr
QOpenGLContext::doneCurrent()
QOpenGLContext::~QOpenGLContext()
QWindow::QWindow(QScreen*)
QWindow::resize(int, int)
QWindow::setSurfaceType(QSurface::SurfaceType)
QWindow::create()
typeinfo for QPlatformOpenGLContext
typeinfo for QPlatformOffscreenSurface
QPlatformOpenGLContext::initialize()
QPlatformOpenGLContext::defaultFramebufferObject(QPlatformSurface*) const
QOpenGLContext::handle() const
QXcbNativeInterfaceHandler::~QXcbNativeInterfaceHandler()
QXcbNativeInterfaceHandler::QXcbNativeInterfaceHandler(QXcbNativeInterface*)
typeinfo for QXcbNativeInterfaceHandler
QXcbNativeInterfaceHandler::nativeResourceFunctionForIntegration(QByteArray const&) const
QXcbNativeInterfaceHandler::nativeResourceFunctionForScreen(QByteArray const&) const
QXcbNativeInterfaceHandler::nativeResourceFunctionForWindow(QByteArray const&) const
QXcbNativeInterfaceHandler::nativeResourceFunctionForBackingStore(QByteArray const&) const
QXcbNativeInterfaceHandler::platformFunction(QByteArray const&) const
libQt5XcbQpa.so.5
libdl.so.2
libX11-xcb.so.1
libXi.so.6
libSM.so.6
libICE.so.6
libxcb.so.1
glXGetFBConfigAttrib
QSurfaceFormat::setRedBufferSize(int)
QSurfaceFormat::setGreenBufferSize(int)
QSurfaceFormat::setBlueBufferSize(int)
QSurfaceFormat::setAlphaBufferSize(int)
QSurfaceFormat::setDepthBufferSize(int)
QSurfaceFormat::setStencilBufferSize(int)
QSurfaceFormat::setSamples(int)
QSurfaceFormat::setStereo(bool)
glXGetConfig
QSurfaceFormat::redBufferSize() const
QSurfaceFormat::greenBufferSize() const
QSurfaceFormat::blueBufferSize() const
QSurfaceFormat::samples() const
QSurfaceFormat::stencilBufferSize() const
QSurfaceFormat::hasAlpha() const
QSurfaceFormat::depthBufferSize() const
QSurfaceFormat::swapBehavior() const
QSurfaceFormat::setSwapBehavior(QSurfaceFormat::SwapBehavior)
QSurfaceFormat::alphaBufferSize() const
XRenderFindVisualFormat
qunsetenv(char const*)
qputenv(char const*, QByteArray const&)
qEnvironmentVariableIsEmpty(char const*)
glXChooseVisual
free
malloc
libfontconfig.so.1
libfreetype.so.6
libQt5DBus.so.5
libgthread-2.0.so.0
librt.so.1
libglib-2.0.so.0
libXrender.so.1
libXext.so.6
libX11.so.6
libQt5Gui.so.5
libQt5Core.so.5
libGL.so.1
libpthread.so.0
libstdc++.so.6
libm.so.6
libgcc_s.so.1
libc.so.6
_edata
__bss_start
_end
$ORIGIN/../../lib
GLIBC_2.2.5
GLIBCXX_3.4
CXXABI_1.3
QXcbGlxIntegrationPlugin
24QXcbGlxIntegrationPlugin
Xcb GLX gl-integration successfully initialized
Xcb GLX gl-integration created
18QXcbGlxIntegration
13QXcbGlxWindow
default
Could not initialize GLX
QGLXNativeContext
glXCreateContextAttribsARB
GLX_ARB_create_context
GLX_EXT_swap_control
glXSwapIntervalEXT
GLX_MESA_swap_control
glXSwapIntervalMESA
GLX_ARB_get_proc_address
glXGetProcAddressARB
QT_OPENGL_NO_SANITY_CHECK
Chromium
Mesa Project and SGI
QGLXContext: Requires a QGLXNativeContext
QGLXContext: No GLXContext given
QGLXContext: Failed to query config from the provided context
QGLXContext: Failed to find config
QGLXContext: Multiple configs for FBConfig ID %d
QGLXContext: Failed to create dummy window
QGLXContext: Failed to make provided context current
GLX_ARB_create_context_profile
GLX_EXT_create_context_es2_profile
11QGLXContext
11QGLXPbuffer
glxcontext
glxconfig
29QXcbGlxNativeInterfaceHandler
QT_XCB_FORCE_SOFTWARE_OPENGL
LIBGL_ALWAYS_SOFTWARE
GCC: (GNU) 4.4.7 20120313 (Red Hat 4.4.7-9)
GCC: (GNU) 4.9.1 20140922 (Red Hat 4.9.1-10)
