
!
!7
!8
!=
!?:
!a=
"
" !
" versus "
""
"%s" (%s)
"(" expected after 'debug' keyword
"(" expected after 'optimize' keyword
")
")" expected to end 'debug' pragma
")" expected to end 'optimize' pragma
"7
"8
"F=
"P5
"R7
"^/
"_>
"defined" can't be (un)defined:
"on" or "off" expected after '(' for 'debug' pragma
"on" or "off" expected after '(' for 'optimize' pragma
#
#".
##
#7
#8
#P(
#S7
#T7
#U2
#define
#define GL_ES 1#define GL_FRAGMENT_PRECISION_HIGH 1#define GL_OES_texture_3D 1#define GL_OES_standard_derivatives 1#define GL_EXT_frag_depth 1#define GL_OES_EGL_image_external 1#define GL_OES_EGL_image_external_essl3 1#define GL_EXT_shader_texture_lod 1#define GL_EXT_shadow_samplers 1#define GL_ANDROID_extension_pack_es31a 1#define GL_KHR_blend_equation_advanced 1#define GL_OES_sample_variables 1#define GL_OES_shader_image_atomic 1#define GL_OES_shader_multisample_interpolation 1#define GL_OES_texture_storage_multisample_2d_array 1#define GL_EXT_geometry_shader 1#define GL_EXT_geometry_point_size 1#define GL_EXT_gpu_shader5 1#define GL_EXT_primitive_bounding_box 1#define GL_EXT_shader_io_blocks 1#define GL_EXT_tessellation_shader 1#define GL_EXT_tessellation_point_size 1#define GL_EXT_texture_buffer 1#define GL_EXT_texture_cube_map_array 1#define GL_OES_geometry_shader 1#define GL_OES_geometry_point_size 1#define GL_OES_gpu_shader5 1#define GL_OES_primitive_bounding_box 1#define GL_OES_shader_io_blocks 1#define GL_OES_tessellation_shader 1#define GL_OES_tessellation_point_size 1#define GL_OES_texture_buffer 1#define GL_OES_texture_cube_map_array 1#define GL_EXT_shader_non_constant_global_initializers 1
#define GL_EXT_device_group 1#define GL_EXT_multiview 1
#define GL_FRAGMENT_PRECISION_HIGH 1#define GL_ARB_texture_rectangle 1#define GL_ARB_shading_language_420pack 1#define GL_ARB_texture_gather 1#define GL_ARB_gpu_shader5 1#define GL_ARB_separate_shader_objects 1#define GL_ARB_compute_shader 1#define GL_ARB_tessellation_shader 1#define GL_ARB_enhanced_layouts 1#define GL_ARB_texture_cube_map_array 1#define GL_ARB_shader_texture_lod 1#define GL_ARB_explicit_attrib_location 1#define GL_ARB_shader_image_load_store 1#define GL_ARB_shader_atomic_counters 1#define GL_ARB_shader_draw_parameters 1#define GL_ARB_shader_group_vote 1#define GL_ARB_derivative_control 1#define GL_ARB_shader_texture_image_samples 1#define GL_ARB_viewport_array 1#define GL_ARB_gpu_shader_int64 1#define GL_ARB_shader_ballot 1#define GL_ARB_sparse_texture2 1#define GL_ARB_sparse_texture_clamp 1#define GL_ARB_shader_stencil_export 1#define GL_ARB_post_depth_coverage 1#define GL_EXT_shader_non_constant_global_initializers 1#define GL_EXT_shader_image_load_formatted 1#define GL_EXT_post_depth_coverage 1#define GL_EXT_control_flow_attributes 1#define GL_EXT_nonuniform_qualifier 1#define GL_EXT_shader_16bit_storage 1#define GL_EXT_shader_8bit_storage 1#define GL_EXT_samplerless_texture_functions 1#define GL_KHR_shader_subgroup_basic 1#define GL_KHR_shader_subgroup_vote 1#define GL_KHR_shader_subgroup_arithmetic 1#define GL_KHR_shader_subgroup_ballot 1#define GL_KHR_shader_subgroup_shuffle 1#define GL_KHR_shader_subgroup_shuffle_relative 1#define GL_KHR_shader_subgroup_clustered 1#define GL_KHR_shader_subgroup_quad 1#define E_GL_EXT_shader_atomic_int64 1#define GL_KHX_shader_explicit_arithmetic_types 1#define GL_KHX_shader_explicit_arithmetic_types_int8 1#define GL_KHX_shader_explicit_arithmetic_types_int16 1#define GL_KHX_shader_explicit_arithmetic_types_int32 1#define GL_KHX_shader_explicit_arithmetic_types_int64 1#define GL_KHX_shader_explicit_arithmetic_types_float16 1#define GL_KHX_shader_explicit_arithmetic_types_float32 1#define GL_KHX_shader_explicit_arithmetic_types_float64 1
#define GL_GOOGLE_cpp_style_line_directive 1#define GL_GOOGLE_include_directive 1
#define GL_OVR_multiview 1#define GL_OVR_multiview2 1
#define GL_SPIRV
#define GL_compatibility_profile 1
#define GL_core_profile 1
#define VULKAN
#define emu_precision
#define emu_precision highp
#define emu_precision mediump
#e9
#elif
#elif after #else
#elif defined GL_OES_geometry_shader
#else
#else after #else
#endif
#error
#error "No geometry shader extensions available." // Only generate this if the extension is "required"
#extension
#extension GL_ARB_draw_buffers :
#extension GL_ARB_explicit_attrib_location : require
#extension GL_ARB_geometry_shader4 :
#extension GL_ARB_gpu_shader5 : enable
#extension GL_ARB_shader_texture_lod :
#extension GL_EXT_geometry_shader :
#extension GL_NV_draw_buffers :
#extension GL_NV_shader_framebuffer_fetch :
#extension GL_NV_viewport_array2 : require
#extension GL_OES_geometry_shader :
#if !defined(GL_ARB_shading_language_packing)    float f16tof32(uint val)    {        uint sign = (val & 0x8000u) << 16;        int exponent = int((val & 0x7C00u) >> 10);        uint mantissa = val & 0x03FFu;        float f32 = 0.0;        if(exponent == 0)        {            if (mantissa != 0u)            {                const float scale = 1.0 / (1 << 24);                f32 = scale * mantissa;            }        }        else if (exponent == 31)        {            return uintBitsToFloat(sign | 0x7F800000u | mantissa);        }        else        {            exponent -= 15;            float scale;            if(exponent < 0)            {                // The negative unary operator is buggy on OSX.                // Work around this by using abs instead.                scale = 1.0 / (1 << abs(exponent));            }            else            {                scale = 1 << exponent;            }            float decimal = 1.0 + float(mantissa) / float(1 << 10);            f32 = scale * decimal;        }        if (sign != 0u)        {            f32 = -f32;        }        return f32;    }#endifvec2 unpackHalf2x16_emu(uint u){    #if defined(GL_ARB_shading_language_packing)        return unpackHalf2x16(u);    #else        uint y = (u >> 16);        uint x = u & 0xFFFFu;        return vec2(f16tof32(x), f16tof32(y));    #endif}
#if !defined(GL_ARB_shading_language_packing)    float fromSnorm(uint x)    {        int xi = (int(x) & 0x7FFF) - (int(x) & 0x8000);        return clamp(float(xi) / 32767.0, -1.0, 1.0);    }#endifvec2 unpackSnorm2x16_emu(uint u){    #if defined(GL_ARB_shading_language_packing)        return unpackSnorm2x16(u);    #else        uint y = (u >> 16);        uint x = u;        return vec2(fromSnorm(x), fromSnorm(y));    #endif}
#if !defined(GL_ARB_shading_language_packing)    uint f32tof16(float val)    {        uint f32 = floatBitsToUint(val);        uint f16 = 0u;        uint sign = (f32 >> 16) & 0x8000u;        int exponent = int((f32 >> 23) & 0xFFu) - 127;        uint mantissa = f32 & 0x007FFFFFu;        if (exponent == 128)        {            // Infinity or NaN            // NaN bits that are masked out by 0x3FF get discarded.            // This can turn some NaNs to infinity, but this is allowed by the spec.            f16 = sign | (0x1Fu << 10);            f16 |= (mantissa & 0x3FFu);        }        else if (exponent > 15)        {            // Overflow - flush to Infinity            f16 = sign | (0x1Fu << 10);        }        else if (exponent > -15)        {            // Representable value            exponent += 15;            mantissa >>= 13;            f16 = sign | uint(exponent << 10) | mantissa;        }        else        {            f16 = sign;        }        return f16;    }#endifuint packHalf2x16_emu(vec2 v){    #if defined(GL_ARB_shading_language_packing)        return packHalf2x16(v);    #else        uint x = f32tof16(v.x);        uint y = f32tof16(v.y);        return (y << 16) | x;    #endif}
#if defined(GL_FRAGMENT_PRECISION_HIGH)
#if/#ifdef/#ifndef
#ifdef
#ifdef GL_EXT_geometry_shader
#include
#line
#line 1
#p,
#pragma
#pragma STDGL invariant(all)
#pragma STDGL invariant(all) can not be used in fragment shader
#pragma once
#s7
#t7
#undef
#version
#version 300 esprecision highp float;#define kMaxTexUnits 4in vec4 pos;in vec3 normal;in vec4 color;in float pointsize;in vec4 texcoord0;in vec4 texcoord1;in vec4 texcoord2;in vec4 texcoord3;uniform mat4 projection;uniform mat4 modelview;uniform mat4 modelview_invtr;uniform mat4 texture_matrix[kMaxTexUnits];uniform bool enable_rescale_normal;uniform bool enable_normalize;// Point rasterization//////////////////////////////////////////////////////////uniform bool point_rasterization;uniform float point_size_min;uniform float point_size_max;uniform vec3 point_distance_attenuation;// GL_OES_draw_texture uniforms/////////////////////////////////////////////////uniform bool enable_draw_texture;uniform vec4 draw_texture_coords;uniform vec2 draw_texture_dims;uniform vec4 draw_texture_normalized_crop_rect[kMaxTexUnits];// Varyings/////////////////////////////////////////////////////////////////////out vec4 pos_varying;out vec3 normal_varying;out vec4 color_varying;flat out vec4 color_varying_flat;out vec4 texcoord0_varying;out vec4 texcoord1_varying;out vec4 texcoord2_varying;out vec4 texcoord3_varying;const vec4 drawTextureVertices[6] = vec4[](    vec4(0.0, 0.0, 0.0, 1.0),    vec4(1.0, 0.0, 0.0, 1.0),    vec4(1.0, 1.0, 0.0, 1.0),    vec4(0.0, 0.0, 0.0, 1.0),    vec4(1.0, 1.0, 0.0, 1.0),    vec4(0.0, 1.0, 0.0, 1.0));vec4 drawTexturePosition(int vertexId){    float drawTexX = draw_texture_coords[0];    float drawTexY = draw_texture_coords[1];    float drawTexZ = draw_texture_coords[2];    float drawTexW = draw_texture_dims[0];    float drawTexH = draw_texture_dims[1];    return vec4(drawTexX, drawTexY, drawTexZ, 0.0) +           drawTextureVertices[vertexId] *           vec4(drawTexW, drawTexH, 1.0, 1.0);}vec4 drawTextureTexCoord(int vertexId, int textureUnit){    float texCropU = draw_texture_normalized_crop_rect[textureUnit].x;    float texCropV = draw_texture_normalized_crop_rect[textureUnit].y;    float texCropW = draw_texture_normalized_crop_rect[textureUnit].z;    float texCropH = draw_texture_normalized_crop_rect[textureUnit].w;    return vec4(texCropU, texCropV, 0.0, 0.0) +           drawTextureVertices[vertexId] *           vec4(texCropW, texCropH, 0.0, 0.0);}vec4 calcWorldPosition(vec4 posInput){    return modelview * posInput;}vec4 calcNdcFromWorldPosition(vec4 worldPos){    return projection * worldPos;}float calcPointSize(vec4 ndcPos){    float dist         = length(ndcPos.z);    float attConst     = point_distance_attenuation[0];    float attLinear    = point_distance_attenuation[1];    float attQuad      = point_distance_attenuation[2];    float attPart      = attConst + attLinear * dist + attQuad * dist * dist;    float attPointSize = pointsize / pow(attPart, 0.5);    return clamp(attPointSize, point_size_min, point_size_max);}vec3 calcNormal(vec3 normalInput){    mat3 mvInvTr3 = mat3(modelview_invtr);    vec3 result   = mvInvTr3 * normalInput;    if (enable_rescale_normal)    {        float rescale   = 1.0;        vec3 rescaleVec = vec3(mvInvTr3[2]);        float len       = length(rescaleVec);        if (len > 0.0)        {            rescale = 1.0 / len;        }        result *= rescale;    }    if (enable_normalize)    {        result = normalize(result);    }    return result;}void main(){    color_varying      = color;    color_varying_flat = color;    if (enable_draw_texture)    {        int vertexId        = gl_VertexID;        vec4 posDrawTexture = drawTexturePosition(vertexId);        gl_Position = posDrawTexture;        pos_varying = posDrawTexture;        normal_varying = normal;        gl_PointSize = pointsize;        texcoord0_varying = drawTextureTexCoord(vertexId, 0);        texcoord1_varying = drawTextureTexCoord(vertexId, 1);        texcoord2_varying = drawTextureTexCoord(vertexId, 2);        texcoord3_varying = drawTextureTexCoord(vertexId, 3);    }    else    {        vec4 worldPos = calcWorldPosition(pos);        vec4 ndcPos   = calcNdcFromWorldPosition(worldPos);        gl_Position = ndcPos;        pos_varying = worldPos;        normal_varying = calcNormal(normal);        // Avoid calculating point size stuff        // if we are not rendering points.        if (point_rasterization)        {            gl_PointSize = calcPointSize(ndcPos);        }        else        {            gl_PointSize = pointsize;        }        texcoord0_varying = texture_matrix[0] * texcoord0;        texcoord1_varying = texture_matrix[1] * texcoord1;        texcoord2_varying = texture_matrix[2] * texcoord2;        texcoord3_varying = texture_matrix[3] * texcoord3;    }}
#version 300 esprecision highp float;// Defines for GL constants#define kMaxLights                           8#define kMaxTexUnits                         4#define kMaxClipPlanes                       6#define kModulate                       0x2100#define kDecal                          0x2101#define kCombine                        0x8570#define kReplace                        0x1E01#define kBlend                          0x0BE2#define kAdd                            0x0104#define kAddSigned                      0x8574#define kInterpolate                    0x8575#define kSubtract                       0x84E7#define kDot3Rgb                        0x86AE#define kDot3Rgba                       0x86AF#define kAlpha                          0x1906#define kRGB                            0x1907#define kRGBA                           0x1908#define kLuminance                      0x1909#define kLuminanceAlpha                 0x190A#define kTexture                        0x1702#define kConstant                       0x8576#define kPrimaryColor                   0x8577#define kPrevious                       0x8578#define kSrcColor                       0x0300#define kOneMinusSrcColor               0x0301#define kSrcAlpha                       0x0302#define kOneMinusSrcAlpha               0x0303#define kLinear                         0x2601#define kExp                            0x0800#define kExp2                           0x0801#define kNever                          0x0200#define kLess                           0x0201#define kEqual                          0x0202#define kLequal                         0x0203#define kGreater                        0x0204#define kNotequal                       0x0205#define kGequal                         0x0206#define kAlways                         0x0207#define kZero                              0x0#define kOne                               0x1#define kClear                          0x1500#define kAnd                            0x1501#define kAnd_reverse                    0x1502#define kCopy                           0x1503#define kAnd_inverted                   0x1504#define kNoop                           0x1505#define kXor                            0x1506#define kOr                             0x1507#define kNor                            0x1508#define kEquiv                          0x1509#define kInvert                         0x150A#define kOr_reverse                     0x150B#define kCopy_inverted                  0x150C#define kOr_inverted                    0x150D#define kNand                           0x150E#define kSet                            0x150F
#version 450 core
#version 450 core#define ANGLE_ENABLE_LINE_SEGMENT_RASTERIZATION
#version directive must occur before anything else, except for comments and white space
#version directive must occur on the first line of the shader
#version: Desktop shaders for OpenGL SPIR-V require version 330 or higher
#version: Desktop shaders for Vulkan SPIR-V require version 140 or higher
#version: ES shaders for OpenGL SPIR-V are not supported
#version: ES shaders for Vulkan SPIR-V require version 310 or higher
#version: compilation for SPIR-V does not support the compatibility profile
#version: compute shaders require es profile with version 310 or above, or non-es profile with version 420 or above
#version: geometry shaders require es profile with version 310 or non-es profile with version 150 or above
#version: only version 300, 310, and 320 support the es profile
#version: statement must appear first in es-profile shader; before comments or newlines
#version: tessellation shaders require es profile with version 310 or non-es profile with version 150 or above
#version: versions 300, 310, and 320 require specifying the 'es' profile
#version: versions 300, 310, and 320 support only the es profile
#version: versions before 150 do not allow a profile token
$
$%d =
$24
$6
$7
$8
$>
$>@
$?7
$?@
$@
$@1
$@10
$@11
$@12
$@13
$@2
$@3
$@4
$@5
$@6
$@7
$@8
$@9
$@@
$A@
$B@
$C@
$D@
$E@
$G>
$Global
$S7
$U=
$X<
$Y>
$Z7
$^4
$_7
$accept
$end
$undefined
%
%-.13e
%.0Lf
%.0f
%7
%8
%=
%H:%M:%S%m/%d/%y%Y-%m-%d%I:%M:%S %p%H:%M%H:%M:%S
%Lf
%Q7
%Y5
%a %b %d %H:%M:%S %Y
%c
%d (%s)
%d-
%d.%d.%d
%e
%f
%j>
%lld
%lld (%s)
%llu (%s)
%s
%s %s (
%s (%d)
%s profile; removed in version %d
%s%d
%s: Unable to resolve symbol "%s" in implicit layer library "%s"
%u (%s)
%z2
&
&!:
&&
&1;
&7
&8
&=
&M7
&T5
&Z>
&q=
'
' (
' :
' aliases attribute '
' and a right operand of type '
' at location
' conflicting location with previously defined '
' differ between
' exists that takes a left-hand operand of type '
' exists that takes an operand of type
' is not an array to be captured by element.
' member '
' to '
'".
''
')
'4/
'4@
'7
'8
':' missing after extension name
'K(
'R7
'S4
'S7
'dpy' not a valid EGLDisplay handle
'dpy' not initialized
'imageLoad' cannot be used with images qualified as 'writeonly'
'imageStore' cannot be used with images qualified as 'readonly'
'in' can be only used to specify the local group size
'layout'
'm>
'max_vertices' is not specified in the geometry shader.
'r;
'src' is greater than MAX_DRAW_BUFFERS.
'src' must be GL_NONE or GL_BACK when reading from the default framebuffer.
(
(!
((
(+
(++
(-
(--
(-25.0));    v = v * exp2(-exponent);    v = sign(v) * floor(abs(v));    return v * exp2(exponent) * vec
(...)
(6
(7
(8
(Did you mean gl_InstanceIndex?)
(Did you mean gl_VertexIndex?)
(K7
(N9
(O7
(X:
(Z>
(]>
(anonymous namespace)::AddContextSpecificSymbols(TBuiltInResource const*, TInfoSink&, glslang::TSymbolTable&, int, EProfile, glslang::SpvVersion const&, EShLanguage, glslang::EShSource)
(anonymous namespace)::CommonSymbolTable
(anonymous namespace)::CompileDeferred(TCompiler*, char const* const*, int, int const*, char const* const*, char const*, EShOptimizationLevel, TBuiltInResource const*, int, EProfile, bool, bool, EShMessages, glslang::TIntermediate&, glslang::TShader::Includer&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TEnvironment*)
(anonymous namespace)::CreateParseContext(glslang::TSymbolTable&, glslang::TIntermediate&, int, EProfile, glslang::EShSource, EShLanguage, TInfoSink&, glslang::SpvVersion, bool, EShMessages, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
(anonymous namespace)::DeduceVersionProfile(TInfoSink&, EShLanguage, bool, int, glslang::EShSource, int&, EProfile&, glslang::SpvVersion const&)
(anonymous namespace)::GatherPaths(gl::PathManager&, int, unsigned int, void const*, unsigned int)
(anonymous namespace)::InheritQualifiers(glslang::TQualifier&, glslang::TQualifier const&)
(anonymous namespace)::InitializeSymbolTable(std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&, int, EProfile, glslang::SpvVersion const&, EShLanguage, glslang::EShSource, TInfoSink&, glslang::TSymbolTable&)
(anonymous namespace)::KeywordMap
(anonymous namespace)::NumberOfClients
(anonymous namespace)::PerProcessGPA
(anonymous namespace)::ReadableOrderTraverser::visit(spv::Block*)
(anonymous namespace)::RecordProcesses(glslang::TIntermediate&, EShMessages, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
(anonymous namespace)::ReservedSet
(anonymous namespace)::SetupBuiltinSymbolTable(int, EProfile, glslang::SpvVersion const&, glslang::EShSource)
(anonymous namespace)::SharedSymbolTables
(anonymous namespace)::TGlslangToSpvTraverser::TranslateBuiltInDecoration(glslang::TBuiltInVariable, bool)
(anonymous namespace)::TGlslangToSpvTraverser::TranslateCoherent(glslang::TType const&)
(anonymous namespace)::TGlslangToSpvTraverser::TranslateImageOperands(spv::Builder::AccessChain::CoherentFlags const&)
(anonymous namespace)::TGlslangToSpvTraverser::TranslateMemoryAccess(spv::Builder::AccessChain::CoherentFlags const&)
(anonymous namespace)::TGlslangToSpvTraverser::TranslateStorageClass(glslang::TType const&)
(anonymous namespace)::TGlslangToSpvTraverser::accessChainLoad(glslang::TType const&)
(anonymous namespace)::TGlslangToSpvTraverser::accessChainStore(glslang::TType const&, unsigned int)
(anonymous namespace)::TGlslangToSpvTraverser::convertGlslangToSpvType(glslang::TType const&)
(anonymous namespace)::TGlslangToSpvTraverser::convertGlslangToSpvType(glslang::TType const&, glslang::TLayoutPacking, glslang::TQualifier const&, bool)
(anonymous namespace)::TGlslangToSpvTraverser::createAtomicOperation(glslang::TOperator, spv::Decoration, unsigned int, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >&, glslang::TBasicType)
(anonymous namespace)::TGlslangToSpvTraverser::createBinaryOperation(glslang::TOperator, (anonymous namespace)::(anonymous namespace)::OpDecorations&, unsigned int, unsigned int, unsigned int, glslang::TBasicType, bool)
(anonymous namespace)::TGlslangToSpvTraverser::createImageTextureFunctionCall(glslang::TIntermOperator*)
(anonymous namespace)::TGlslangToSpvTraverser::createInvertedSwizzle(spv::Decoration, glslang::TIntermTyped const&, unsigned int)
(anonymous namespace)::TGlslangToSpvTraverser::createInvocationsOperation(glslang::TOperator, unsigned int, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >&, glslang::TBasicType)
(anonymous namespace)::TGlslangToSpvTraverser::createSpvConstantFromConstUnionArray(glslang::TType const&, glslang::TConstUnionArray const&, int&, bool)
(anonymous namespace)::TGlslangToSpvTraverser::createSubgroupOperation(glslang::TOperator, unsigned int, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >&, glslang::TBasicType)
(anonymous namespace)::TGlslangToSpvTraverser::createUnaryMatrixOperation(spv::Op, (anonymous namespace)::(anonymous namespace)::OpDecorations&, unsigned int, unsigned int, glslang::TBasicType)
(anonymous namespace)::TGlslangToSpvTraverser::createUnaryOperation(glslang::TOperator, (anonymous namespace)::(anonymous namespace)::OpDecorations&, unsigned int, unsigned int, glslang::TBasicType)
(anonymous namespace)::TGlslangToSpvTraverser::getSymbolId(glslang::TIntermSymbol const*)
(anonymous namespace)::TGlslangToSpvTraverser::isShaderEntryPoint(glslang::TIntermAggregate const*)
(anonymous namespace)::TGlslangToSpvTraverser::makeSmearedConstant(unsigned int, int)
(anonymous namespace)::TGlslangToSpvTraverser::multiTypeStore(glslang::TType const&, unsigned int)
(anonymous namespace)::TGlslangToSpvTraverser::translateArguments(glslang::TIntermAggregate const&, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >&)
(anonymous namespace)::TGlslangToSpvTraverser::visitAggregate(glslang::TVisit, glslang::TIntermAggregate*)
(anonymous namespace)::TGlslangToSpvTraverser::visitBinary(glslang::TVisit, glslang::TIntermBinary*)
(anonymous namespace)::TGlslangToSpvTraverser::visitBranch(glslang::TVisit, glslang::TIntermBranch*)
(anonymous namespace)::TGlslangToSpvTraverser::visitConstantUnion(glslang::TIntermConstantUnion*)
(anonymous namespace)::TGlslangToSpvTraverser::visitLoop(glslang::TVisit, glslang::TIntermLoop*)
(anonymous namespace)::TGlslangToSpvTraverser::visitSelection(glslang::TVisit, glslang::TIntermSelection*)
(anonymous namespace)::TGlslangToSpvTraverser::visitSwitch(glslang::TVisit, glslang::TIntermSwitch*)
(anonymous namespace)::TGlslangToSpvTraverser::visitSymbol(glslang::TIntermSymbol*)
(anonymous namespace)::TGlslangToSpvTraverser::visitUnary(glslang::TVisit, glslang::TIntermUnary*)
(anonymous namespace)::TGlslangToSpvTraverser::~TGlslangToSpvTraverser()
(anonymous namespace)::TNoContractionAssigneeCheckingTraverser::visitBinary(glslang::TVisit, glslang::TIntermBinary*)
(anonymous namespace)::TNoContractionAssigneeCheckingTraverser::visitSymbol(glslang::TIntermSymbol*)
(anonymous namespace)::TNoContractionAssigneeCheckingTraverser::~TNoContractionAssigneeCheckingTraverser()
(anonymous namespace)::TNoContractionPropagator::visitAggregate(glslang::TVisit, glslang::TIntermAggregate*)
(anonymous namespace)::TNoContractionPropagator::visitBinary(glslang::TVisit, glslang::TIntermBinary*)
(anonymous namespace)::TNoContractionPropagator::visitSymbol(glslang::TIntermSymbol*)
(anonymous namespace)::TNoContractionPropagator::visitUnary(glslang::TVisit, glslang::TIntermUnary*)
(anonymous namespace)::TNoContractionPropagator::~TNoContractionPropagator()
(anonymous namespace)::TSymbolDefinitionCollectingTraverser::visitAggregate(glslang::TVisit, glslang::TIntermAggregate*)
(anonymous namespace)::TSymbolDefinitionCollectingTraverser::visitBinary(glslang::TVisit, glslang::TIntermBinary*)
(anonymous namespace)::TSymbolDefinitionCollectingTraverser::visitBranch(glslang::TVisit, glslang::TIntermBranch*)
(anonymous namespace)::TSymbolDefinitionCollectingTraverser::visitSymbol(glslang::TIntermSymbol*)
(anonymous namespace)::TSymbolDefinitionCollectingTraverser::visitUnary(glslang::TVisit, glslang::TIntermUnary*)
(anonymous namespace)::TSymbolDefinitionCollectingTraverser::~TSymbolDefinitionCollectingTraverser()
(anonymous namespace)::TranslateMemoryDecoration(glslang::TQualifier const&, std::__1::vector<spv::Decoration, std::__1::allocator<spv::Decoration> >&, bool)
(anonymous namespace)::freelist
(anonymous namespace)::g_platformMethods
(anonymous namespace)::heap
(anonymous namespace)::heap_mutex
(anonymous namespace)::isArithmeticOperation(glslang::TOperator)
(anonymous namespace)::isAssignOperation(glslang::TOperator)
(anonymous namespace)::kFormatProperties
(anonymous namespace)::kGLES1DrawFShaderFunctions
(anonymous namespace)::kGLES1DrawFShaderHeader
(anonymous namespace)::kGLES1DrawFShaderMain
(anonymous namespace)::kGLES1DrawFShaderMultitexturing
(anonymous namespace)::kGLES1DrawFShaderUniformDefs
(anonymous namespace)::kGLES1DrawVShader
(anonymous namespace)::kMinimumPrimitiveCounts
(anonymous namespace)::kMockDeviceName
(anonymous namespace)::tokens
(color);
(const float)
(const int)
(const uint)
(const yuvCscStandardEXT)
(field '
(h>
(internal function)
(m[
(null)
(structure contains a sampler)
(symbol id
(u)int16 types can only be in uniform block or buffer storage
(u)int8 types can only be in uniform block or buffer storage
(u_source_texture, v_texcoord);
(using array)
(~
)
) : (
) ? (
) at location
) exceed the maximum interleaved components (
) exceed the maximum separate components (
) in;
) out;
) with the following call chain:
)' used in the following call chain:
)'(
)(isNonZero);}
)))]
), 0.0, float(
), while in source code it is (
).length())
)7
)8
):
)L(
)O>
)Q/
)Q>
)U>
)V>
)W>
)X>
)Y>
)Z>
)[>
)\>
)]>
)^=
)^>
)f>
)j>
)s;
)y2
*
*((
*7
*8
*:<
*=
*@=
*M>
*N7
*P/
*Q5
*`>
*e>
+
++)
+1.#INF
+7
+8
+=
+L>
+M>
+N>
+O>
+P>
+Q>
+R>
+S>
+X<
+^/
+d>
+h>
+l5
+p,
,
, 0,
, alignment=
, component =
, components (1/4 stride) needed are
, expected
, float
, gl_MaxTransformFeedbackInterleavedComponents is
, int, int, int, int, int
, ivec
, line
, local_size_y=
, local_size_z=
, minimum stride needed:
, operation at
, out
, xfb_stride
,-=
,55
,6
,7
,8
,>@
,?@
,@@
,A@
,B@
,C@
,D@
,E@
,I>
,V7
,^?
,_4
,c>
,float,float
,int
,int);
,ivec
,ivec2
,n2
,out
,s7
,vec
,vec4
-
-!5
-(>
--)
-1.#INF
-3>
-7
-8
-=
->
-> $$ =
-b>
-component vector of
-element array of
-i/
-k>
-tx-struct
-x2
.
."
.".
../../third_party/angle/src/libANGLE/Buffer.cpp
../../third_party/angle/src/libANGLE/GLES1Renderer.cpp
../../third_party/angle/src/libANGLE/renderer/gl/BlitGL.cpp
../../third_party/angle/src/libANGLE/renderer/gl/FramebufferGL.cpp
../../third_party/angle/src/libANGLE/renderer/gl/TextureGL.cpp
../../third_party/angle/src/libANGLE/renderer/gl/VertexArrayGL.cpp
../../third_party/angle/src/libANGLE/renderer/gl/renderergl_utils.cpp
../../third_party/angle/src/libANGLE/renderer/null/FramebufferNULL.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/FramebufferVk.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/GlslangWrapper.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/ProgramVk.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/RendererVk.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/SurfaceVk.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/TextureVk.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/vk_helpers.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/vk_utils.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/xcb/WindowSurfaceVkXcb.cpp
.4@
.7
.8
.S>
.X>
.[>
.a>
.length
.length() - 1
.length() on vectors and matrices
.local/share
.m5
.t7
/
// BEGIN: Generated code for array bounds clamping
// BEGIN: Generated code for built-in function emulation
// END: Generated code for array bounds clamping
// END: Generated code for built-in function emulation
// OpModuleProcessed
// Texture units ///////////////////////////////////////////////////////////////uniform bool enable_texture_2d[kMaxTexUnits];uniform bool enable_texture_cube_map[kMaxTexUnits];// These are not arrays because hw support for arrays// of samplers is rather lacking.uniform sampler2D tex_sampler0;uniform samplerCube tex_cube_sampler0;uniform sampler2D tex_sampler1;uniform samplerCube tex_cube_sampler1;uniform sampler2D tex_sampler2;uniform samplerCube tex_cube_sampler2;uniform sampler2D tex_sampler3;uniform samplerCube tex_cube_sampler3;uniform int texture_format[kMaxTexUnits];uniform int texture_env_mode[kMaxTexUnits];uniform int combine_rgb[kMaxTexUnits];uniform int combine_alpha[kMaxTexUnits];uniform int src0_rgb[kMaxTexUnits];uniform int src0_alpha[kMaxTexUnits];uniform int src1_rgb[kMaxTexUnits];uniform int src1_alpha[kMaxTexUnits];uniform int src2_rgb[kMaxTexUnits];uniform int src2_alpha[kMaxTexUnits];uniform int op0_rgb[kMaxTexUnits];uniform int op0_alpha[kMaxTexUnits];uniform int op1_rgb[kMaxTexUnits];uniform int op1_alpha[kMaxTexUnits];uniform int op2_rgb[kMaxTexUnits];uniform int op2_alpha[kMaxTexUnits];uniform vec4 texture_env_color[kMaxTexUnits];uniform float texture_env_rgb_scale[kMaxTexUnits];uniform float texture_env_alpha_scale[kMaxTexUnits];uniform bool point_sprite_coord_replace[kMaxTexUnits];// Vertex attributes////////////////////////////////////////////////////////////in vec4 pos_varying;in vec3 normal_varying;in vec4 color_varying;flat in vec4 color_varying_flat;in vec4 texcoord0_varying;in vec4 texcoord1_varying;in vec4 texcoord2_varying;in vec4 texcoord3_varying;// Alpha test///////////////////////////////////////////////////////////////////uniform bool enable_alpha_test;uniform int alpha_func;uniform float alpha_test_ref;// Shading: flat shading, lighting, and materials///////////////////////////////uniform bool shade_model_flat;uniform bool enable_lighting;uniform bool enable_color_material;uniform vec4 material_ambient;uniform vec4 material_diffuse;uniform vec4 material_specular;uniform vec4 material_emissive;uniform float material_specular_exponent;uniform vec4 light_model_scene_ambient;uniform bool light_model_two_sided;uniform bool light_enables[kMaxLights];uniform vec4 light_ambients[kMaxLights];uniform vec4 light_diffuses[kMaxLights];uniform vec4 light_speculars[kMaxLights];uniform vec4 light_positions[kMaxLights];uniform vec3 light_directions[kMaxLights];uniform float light_spotlight_exponents[kMaxLights];uniform float light_spotlight_cutoff_angles[kMaxLights];uniform float light_attenuation_consts[kMaxLights];uniform float light_attenuation_linears[kMaxLights];uniform float light_attenuation_quadratics[kMaxLights];// Fog /////////////////////////////////////////////////////////////////////////uniform bool enable_fog;uniform int fog_mode;uniform float fog_density;uniform float fog_start;uniform float fog_end;uniform vec4 fog_color;// User clip plane /////////////////////////////////////////////////////////////uniform bool enable_clip_planes;uniform bool clip_plane_enables[kMaxClipPlanes];uniform vec4 clip_planes[kMaxClipPlanes];// Point rasterization//////////////////////////////////////////////////////////uniform bool point_rasterization;uniform bool point_sprite_enabled;// GL_OES_draw_texture//////////////////////////////////////////////////////////uniform bool enable_draw_texture;// Outgoing fragment////////////////////////////////////////////////////////////out vec4 frag_color;
/7
/8
/=
/>
/W>
/etc/xdg
/k>
/proc/self/exe
/s2
/t7
/usr/local/share:/usr/share
/vulkan/explicit_layer.d
/vulkan/icd.d
/vulkan/implicit_layer.d
/~2
/2
0
0 !
0 (ANGLE
0123456789
0123456789abcdefABCDEFxX+-pPiInN
04/
05
06
07
08
0A
0B
0C
0D
0E
0F
0G
0H
0I
0I=
0J
0K
0L
0M
0N
0O
0P
0Q
0R
0S
0T
0U
0U7
0V
0W
0X
0Y
0Z
0^>
0a
0b
0c
0d
0e
0f
0g
0g=
0h
0i
0j
0k
0l
0m
0n
0o
0p
0q
0u2
1
1'5
1.#IND
1.4 (ANGLE 2.1.0.f2ed299569c0)
1/4 stride is too large:
124
16-bit arrays not supported
16-bit integer literal
16-bit signed integer
16-bit signed integer vector
16-bit unsigned integer
16-bit unsigned integer literal
16-bit unsigned integer vector
16-bit vectors only take vector types
17
18
1B
1C
1D
1E
1_7
1w2
1z=
2
2.1.0.f2ed299569c0
24
255.0
27
28
2B
2C
2D
2E
2M7
2Q/
2W7
2X<
2[?
2^/
2p*
2r7
3
3*@
300 es
32-bit signed integer
32-bit signed integer vector
32-bit signed literal
32-bit unsigned integer
32-bit unsigned integer vector
330
37
38
3B
3C
3D
3E
3E*
3N7
3W(
3i>
3k7
3p,
3r2
3r;
3}2
4
43/
46
47
48
4>@
4?@
4@
4@@
4A@
4B@
4C
4C@
4D@
4E@
4N9
4V7
4t2
5
54@
57
58
5B
5W7
5Y>
5^7
5d=
5l>
5n7
5v2
5z.
5z>
6
63/
64-bit hexadecimal literal
64-bit integer
64-bit integer literal
64-bit integer vector
64-bit literal
64-bit octal literal
64-bit unsigned integer
64-bit unsigned integer literal
64-bit unsigned integer vector
67
68
6B
6M>
6O7
6P/
6U5
6\>
6^4
6_7
6i,
6n'
6n*
6s7
7
77
78
795
7B
7B<
7R4
7V7
7a7
7q2
7|2
8
8,
8-bit arrays not supported
8-bit signed integer
8-bit signed integer vector
8-bit unsigned integer
8-bit unsigned integer vector
8-bit vectors only take vector types
80
86
87
88
8><
8I>
8U6
8_>
8p>
9
9,
94/
97
98
9@<
9B
9N7
9T>
9U>
9V>
9W>
9X<
9X>
9Y>
9Z>
9[>
9\>
9]>
9^>
9b7
9t7
:
: "
: Dependency
: DontFlatten
: DontUnroll
: Flatten
: Unroll
: direct index for structure
: no shortcircuit
:%d
:0;
:7
:8
::
:?
:ARB_texture_rectangle:
:ARM_shader_framebuffer_fetch:
:EXT_YUV_target:
:EXT_blend_func_extended:
:EXT_draw_buffers:
:EXT_frag_depth:
:EXT_geometry_shader:
:EXT_shader_framebuffer_fetch:
:EXT_shader_texture_lod:
:FragmentPrecisionHigh:
:L>
:M>
:MaxAtomicCounterBindings:
:MaxAtomicCounterBufferSize:
:MaxCallStackDepth:
:MaxCombinedAtomicCounterBuffers:
:MaxCombinedAtomicCounters:
:MaxCombinedImageUniforms:
:MaxCombinedShaderOutputResources:
:MaxCombinedTextureImageUnits:
:MaxComputeAtomicCounterBuffers:
:MaxComputeAtomicCounters:
:MaxComputeImageUniforms:
:MaxComputeTextureImageUnits:
:MaxComputeUniformComponents:
:MaxComputeWorkGroupCountX:
:MaxComputeWorkGroupCountY:
:MaxComputeWorkGroupCountZ:
:MaxComputeWorkGroupSizeX:
:MaxComputeWorkGroupSizeY:
:MaxComputeWorkGroupSizeZ:
:MaxDrawBuffers:
:MaxDualSourceDrawBuffers:
:MaxExpressionComplexity:
:MaxFragmentAtomicCounterBuffers:
:MaxFragmentAtomicCounters:
:MaxFragmentImageUniforms:
:MaxFragmentInputVectors:
:MaxFragmentUniformVectors:
:MaxFunctionParameters:
:MaxGeometryAtomicCounterBuffers:
:MaxGeometryAtomicCounters:
:MaxGeometryImageUniforms:
:MaxGeometryInputComponents:
:MaxGeometryOutputComponents:
:MaxGeometryOutputVertices:
:MaxGeometryShaderInvocations:
:MaxGeometryShaderStorageBlocks:
:MaxGeometryTextureImageUnits:
:MaxGeometryTotalOutputComponents:
:MaxGeometryUniformBlocks:
:MaxGeometryUniformComponents:
:MaxImageUnits:
:MaxProgramTexelOffset:
:MaxProgramTextureGatherOffset:
:MaxTextureImageUnits:
:MaxVaryingVectors:
:MaxVertexAtomicCounterBuffers:
:MaxVertexAtomicCounters:
:MaxVertexAttribs:
:MaxVertexImageUniforms:
:MaxVertexOutputVectors:
:MaxVertexTextureImageUnits:
:MaxVertexUniformVectors:
:MaxViewsOVR:
:MinProgramTexelOffset:
:MinProgramTextureGatherOffset:
:NV_EGL_stream_consumer_external:
:NV_draw_buffers:
:NV_shader_framebuffer_fetch:
:OES_EGL_image_external:
:OES_EGL_image_external_essl3:
:OES_standard_derivatives:
:OVR_multiview:
:W2
:WEBGL_debug_shader_precision:
:\5
:f>
;
; may be removed in future release
;7
;7<
;8
;B7
;L>
;M=
;M>
;N>
;O=
;O>
;P>
;Q/
;Q>
;R>
;S>
;e>
;j>
;p,
;p2
;{2
<
</FONT>>];
<4@
<6
<7
<8
<<
<<=
<=
<>@
<?@
<@@
<A7
<A@
<B@
<BR/> <FONT POINT-SIZE="10">Node ID
<C@
<D@
<E@
<Z>
<bad token>
<buffer> must be non null
<buftype> EGL_IOSURFACE_ANGLE requires the EGL_ANGLE_iosurface_client_buffer extension.
<buftype> doesn't support iosurface plane
<buftype> doesn't support rectangle texture targets
<buftype> doesn't support setting GL colorspace
<buftype> doesn't support texture internal format
<buftype> doesn't support texture type
<d>
<unknown op>
=
=7
=8
=<<
==
=c>
=m>
>
>-=
>24
>7
>8
>=
>>
>>=
>@=
>M7
>]>
>_7
>b>
>r7
?
?)(
?7
?8
?9<
?:
?M:
?T7
?X>
?Z7
?^?
?`7
?a>
?n'
?o2
?q5
?s7
@
@ 8
@!8
@"8
@#8
@$8
@%8
@&8
@'8
@(8
@)8
@*8
@+8
@,8
@-8
@.8
@/8
@08
@18
@28
@38
@4
@48
@5
@58
@6
@68
@7
@78
@8
@88
@98
@:8
@;8
@<8
@=8
@>8
@?8
@@
@@ DEFAULT-UNIFORMS-SET-BINDING @@
@@ LAYOUT-
@@ QUALIFIER-
@@8
@A8
@B8
@C8
@D8
@E8
@F8
@G8
@H8
@I8
@J8
@K8
@L8
@M8
@N8
@N9
@O8
@P8
@Q8
@R8
@S8
@T8
@U8
@U=
@V8
@W8
@W>
@X8
@X<
@Y8
@Z8
@[8
@\8
@]8
@^8
@_8
@`8
@`>
@a8
@b8
@c8
@count
@d8
@e8
@f8
@g8
@h8
@i3#
@i8
@j8
@k8
@l8
@m8
@n8
@o8
@p8
@q8
@r8
@s8
@t8
@this
@u8
@v8
@w8
@x8
@y8
@z8
@{8
@|8
@|<
@}8
@~8
@8
A
A buffer must be bound.
A device memory allocation has failed.
A fence or query has not yet completed.
A host memory allocation has failed.
A program must be bound.
A renderbuffer must be bound.
A requested extension is not supported.
A requested feature is not supported.
A requested format is not supported on this device.
A requested layer is not present or could not be loaded.
A return array was too small for the result.
A surface has changed in such a way that it is no longer compatible with the swapchain.
A surface is no longer available.
A swapchain no longer matches the surface properties exactly, but can still be used to present to the surface successfully.
A texture must be bound.
A transform feedback buffer that would be written to is also bound to a non-transform-feedback target, which would cause undefined behavior.
A wait operation has not completed in the specified time.
A7
A8
A<
AB
ACCSTRUCTNV
ADD_ASSIGN
AM
AMPERSAND
AND_ASSIGN
AND_OP
ANGLE (
ANGLE Display::initialize error
ANGLE Pipeline Cache:
ANGLEDepthRangeParams
ANGLEGetDisplayPlatform
ANGLEPlatformCurrent()
ANGLEPosition
ANGLEResetDisplayPlatform
ANGLEUniformBlock
ANGLEUniforms
ANGLE_ENABLE_LINE_SEGMENT_RASTERIZATION
ANGLE_copy_texture_3d exposed but not implemented.
ANGLE_lossy_etc_decode extension is not supported.
ANGLE_multiview is not available.
ANGLE_texture_rectangle extension not present
ATOMIC_COUNTER_BUFFER is not supported before GLES 3.1
ATOMIC_UINT
ATTRIBUTE
AV7
AV>
Absolute value
Active atomic counter resources are not assigned name strings.
AddAndTrueToLoopCondition.cpp
Adding VK_LAYER_LUNARG_standard_validation using the loader legacy path.  This is not an error.
Advanced Micro Devices
Ah>
AlignedAlloc
All contexts within a share group must be created with the same value of EGL_DISPLAY_TEXTURE_SHARE_GROUP_ANGLE.
AllMemoryBarrierWithGroupSync
AllocateCurrentThread
An active buffer is mapped
An enabled vertex array has no buffer and no pointer.
An enabled vertex array has no buffer.
An event is signaled.
An event is unsignaled.
Application
Apr
April
Array constructor argument has an incorrect type
Array length
Array size
Array size or input primitive declaration doesn't match the size of earlier sized array inputs.
ArrayBoundsClamper.cpp
ArrayString(unsigned int)
At least one enabled attribute must have a divisor of zero.
At least one shader must specify a layout(max_vertices = value)
At least one shader must specify an input layout primitive
At least one shader must specify an output layout primitive
At least one shader must specify an output layout(vertices=...)
Atomic Counter buffers are not supported in this version of GL
AtomicCounterAdd
AtomicCounterAnd
AtomicCounterCompSwap
AtomicCounterDecrement
AtomicCounterExchange
AtomicCounterIncrement
AtomicCounterMax
AtomicCounterMin
AtomicCounterOr
AtomicCounterSubtract
AtomicCounterXor
Attached compute shader is not compiled.
Attachment type must be compatible with attachment object.
Attempt to blit from a multisampled framebuffer and the bounds don't match with the draw framebuffer.
Attempt to blit from a multisampled framebuffer and the bounds or format of the color buffer don't match with the draw framebuffer.
Attempt to delete active transform feedback.
Attempt to initialize readonly parameter
Attempt to read from a missing color attachment of a complete framebuffer.
Attempt to read from a missing depth/stencil attachment of a complete framebuffer.
Attempt to read from a multi-view framebuffer.
Attempt to write to a multi-view framebuffer.
Attempted to flush a buffer not mapped for explicit flushing.
Attempted to flush buffer object zero.
Attempted to map buffer object zero.
Attempting to blit and the read and draw buffer formats don't match.
Attempting to read from a multi-view framebuffer.
Attribute '
Attribute (
Attribute EGL_CONTEXT_BIND_GENERATES_RESOURCE_CHROMIUM requires EGL_CHROMIUM_create_context_bind_generates_resource.
Attribute EGL_CONTEXT_CLIENT_ARRAYS_ENABLED_ANGLE requires EGL_ANGLE_create_context_client_arrays.
Attribute EGL_CONTEXT_PROGRAM_BINARY_CACHE_ENABLED_ANGLE requires EGL_ANGLE_program_cache_control.
Attribute EGL_CONTEXT_WEBGL_COMPATIBILITY_ANGLE requires EGL_ANGLE_create_context_webgl_compatibility.
Attribute EGL_DISPLAY_TEXTURE_SHARE_GROUP_ANGLE requires EGL_ANGLE_display_texture_share_group.
Attribute EGL_EXTENSIONS_ENABLED_ANGLE requires EGL_ANGLE_create_context_extensions_enabled.
Attribute EGL_ROBUST_RESOURCE_INITIALIZATION_ANGLE requires EGL_ANGLE_robust_resource_initialization.
Attribute must be EGL_TRUE or EGL_FALSE.
AttributeMap.cpp
Attributes that begin with 'gl_' are not allowed.
Attributes that begin with 'webgl_', or '_webgl_' are not allowed.
Aug
August
Auxiliary qualifiers (centroid, patch, and sample) must appear before storage and precision qualifiers
B
B4/
B7
B8
BANG
BB
BOOL
BOOLCONSTANT
BP/
BREAK
BVEC2
BVEC3
BVEC4
B\7
Bad access.
Bad aggregation op
Bad allocation.
Bad attribute.
Bad config.
Bad context.
Bad current surface.
Bad destination in loader trampoline dispatch,Are layers and extensions that you are calling enabled?
Bad device.
Bad display.
Bad match.
Bad native window.
Bad parameter.
Bad platform type.
Bad state.
Bad stream state
Bad stream.
Bad surface.
Bad unary op
Base level must be 0 for external textures.
Base level must be 0 for multisampled textures.
Base level must be 0 for rectangle textures.
Base level must be at least 0.
Binary blob no longer available in cache (removed by a thread?)
BindAccelerationStructureMemoryNVX
BindBufferMemory2KHR
BindImageMemory2KHR
Binding for fragment input
Binding layout qualifier
Bitwise not
Blit extension not available.
Blit feedback loop: the read and draw framebuffers are the same.
BlitFramebuffer dimensions out of 32-bit integer range.
BlitGL.cpp
Blits are only supported from 2D texture, renderbuffer or default framebuffer attachments in this extension.
Blits are only supported to 2D texture, renderbuffer or default framebuffer attachments in this extension.
Blob cache callbacks cannot be null.
Blob cache functions can only be set once in the lifetime of a Display
BlobCache.cpp
Border must be 0.
Both compute and graphics shaders are attached to the same program.
Both width and height argument of drawn texture must be positive.
Branch: Break
Branch: Continue
Branch: Kill
Branch: Return
Branch: Unknown Branch
BreakVariableAliasingInInnerLoops.cpp
Buffer is already mapped.
Buffer is bound for transform feedback.
Buffer is currently bound for transform feedback.
Buffer is not generated.
Buffer mapping length is zero.
Buffer not mapped.
Buffer offset overflow in CopyBufferSubData
Buffer size does not align with data type.
Buffer target not valid
Buffer value is greater than MAX_DRAW_BUFFERS
Buffer was not generated.
Buffer.cpp
BufferGL.cpp
BufferNULL.cpp
BufferVk.cpp
Build ICD instance extension list
BuiltInFunctionEmulator.cpp
BuiltInFunctionEmulatorGLSL.cpp
C
C7
C8
C;<
CARET
CASE
CENTROID
CH(
CHROMIUM_copy_compressed_texture exposed but not implemented.
CHROMIUM_copy_texture exposed but not implemented.
CL(
COMMA
COMPUTE
CONST
CONSTANT_COLOR (or ONE_MINUS_CONSTANT_COLOR) and CONSTANT_ALPHA (or ONE_MINUS_CONSTANT_ALPHA) cannot be used together as source and destination factors in the blend function.
CONTINUE
C[7
Ca(
Call a built-in function
Call an internal function with raw implementation
Call an user-defined function
Call stack too deep (larger than
CallDAG.cpp
Can not get pointer for reserved buffer name zero.
Can only be highp
Can only use one of gl_ClipDistance or gl_ClipVertex (gl_ClipDistance is preferred)
Can only use one of gl_CullDistance or gl_ClipVertex (gl_ClipDistance is preferred)
Cannot attach multiple ES shaders of the same type to a single program
Cannot be qualified as invariant.
Cannot call CopyBufferSubData on a mapped buffer
Cannot capture outbound array element '
Cannot change active program while transform feedback is unpaused.
Cannot change program binary while program is associated with an active transform feedback object.
Cannot create an OpenGL ES platform on GLX without the GLX_ARB_create_context extension.
Cannot create an OpenGL ES platform on GLX without the GLX_EXT_create_context_es_profile extension.
Cannot cross link ES and desktop profiles
Cannot have multiple different invocations specifiers
Cannot have multiple different max_vertices specifiers
Cannot have multiple different primitive specifiers
Cannot have multiple different work group size specifiers
Cannot have multiple index specifiers
Cannot have negative height or width.
Cannot have negative height, width, or depth.
Cannot have negative start.
Cannot have negative stride.
Cannot link program while program is associated with an active transform feedback object.
Cannot load program binaries across different ES context versions.
Cannot mix ES profile with non-ES profile shaders
Cannot pop the default debug group.
Cannot push more than GL_MAX_DEBUG_GROUP_STACK_DEPTH debug groups.
Cannot reuse block name within the same interface:
Cannot use GL_LINEAR filter when blitting a integer framebuffer.
Cannot use both gl_FragColor and gl_FragData
Cannot use current query for timestamp
Cannot use gl_FragColor or gl_FragData when using user-defined outputs
Cannot use negative values in PixelStorei
Caps.cpp
Capture of array elements is undefined and not supported.
Capture of arrays is undefined and not supported.
Case
Ceiling
CheckCompileStatus
CheckLinkStatus
ChoosePhysicalDevice
Ck>
ClampFragDepth.cpp
ClampPointSize.cpp
Cleanup: discarding lookahead
Cleanup: popping
ClearMultiviewGL.cpp
Client data cannot be used with a non-default vertex array object.
CmdBeginConditionalRenderingEXT
CmdBeginDebugUtilsLabelEXT
CmdBeginRenderPass2KHR
CmdBindShadingRateImageNV
CmdBuildAccelerationStructureNVX
CmdCopyAccelerationStructureNVX
CmdDebugMarkerBeginEXT
CmdDebugMarkerEndEXT
CmdDebugMarkerInsertEXT
CmdDispatchBaseKHR
CmdDrawIndexedIndirectCountAMD
CmdDrawIndexedIndirectCountKHR
CmdDrawIndirectCountAMD
CmdDrawIndirectCountKHR
CmdDrawMeshTasksIndirectCountNV
CmdDrawMeshTasksIndirectNV
CmdDrawMeshTasksNV
CmdEndConditionalRenderingEXT
CmdEndDebugUtilsLabelEXT
CmdEndRenderPass2KHR
CmdInsertDebugUtilsLabelEXT
CmdNextSubpass2KHR
CmdProcessCommandsNVX
CmdPushDescriptorSetKHR
CmdPushDescriptorSetWithTemplateKHR
CmdReserveSpaceForCommandsNVX
CmdSetCheckpointNV
CmdSetCoarseSampleOrderNV
CmdSetDeviceMaskKHR
CmdSetDiscardRectangleEXT
CmdSetExclusiveScissorNV
CmdSetSampleLocationsEXT
CmdSetViewportShadingRatePaletteNV
CmdSetViewportWScalingNV
CmdTraceRaysNVX
CmdWriteAccelerationStructurePropertiesNVX
CmdWriteBufferMarkerAMD
Code block
CodeGen.cpp
CollectVariables.cpp
Color buffer component types are not compatible.
Color buffer sizes are not compatible.
Color buffer types are not compatible.
Color number for primary color greater than or equal to MAX_DRAW_BUFFERS
Color number for secondary color greater than or equal to MAX_DUAL_SOURCE_DRAW_BUFFERS
Comma
Command successfully completed.
CommandGraph.cpp
Compare Equal
Compare Greater Than
Compare Greater Than or Equal
Compare Less Than
Compare Less Than or Equal
Compare Not Equal
CompileDeferredNVX
Compiler.cpp
CompilerGL.cpp
CompilerNULL.cpp
CompilerVk.cpp
Component must be in the range [0;3]
Compressed texture dimensions must exactly match the dimensions of the data passed in.
Compressed textures cannot be attached to a framebuffer.
Compute shader is not supported in this shader version.
Config.cpp
Constant folded addition overflowed to infinity
Constant folded division overflowed to infinity
Constant folded multiplication overflowed to infinity
Constant folded subtraction overflowed to infinity
Constant folded undefined addition generated NaN
Constant folded undefined multiplication generated NaN
Constant folded undefined subtraction generated NaN
Constant value cannot be passed for 'out' or 'inout' parameters.
Constant.cpp
Constant:
ConstantUnion.cpp
Construct
Construct bmat2
Construct bmat2x3
Construct bmat2x4
Construct bmat3
Construct bmat3x2
Construct bmat3x4
Construct bmat4
Construct bmat4x2
Construct bmat4x3
Construct bool
Construct bvec2
Construct bvec3
Construct bvec4
Construct combined texture-sampler
Construct dmat2
Construct dmat2x3
Construct dmat2x4
Construct dmat3
Construct dmat3x2
Construct dmat3x4
Construct dmat4
Construct dmat4x2
Construct dmat4x3
Construct double
Construct dvec2
Construct dvec3
Construct dvec4
Construct f16mat2
Construct f16mat2x3
Construct f16mat2x4
Construct f16mat3
Construct f16mat3x2
Construct f16mat3x4
Construct f16mat4
Construct f16mat4x2
Construct f16mat4x3
Construct f16vec2
Construct f16vec3
Construct f16vec4
Construct float
Construct float16_t
Construct i16vec2
Construct i16vec3
Construct i16vec4
Construct i64vec2
Construct i64vec3
Construct i64vec4
Construct i8vec2
Construct i8vec3
Construct i8vec4
Construct imat2
Construct imat2x3
Construct imat2x4
Construct imat3
Construct imat3x2
Construct imat3x4
Construct imat4
Construct imat4x2
Construct imat4x3
Construct int
Construct int16_t
Construct int64
Construct int8_t
Construct ivec2
Construct ivec3
Construct ivec4
Construct mat2
Construct mat2x3
Construct mat2x4
Construct mat3
Construct mat3x2
Construct mat3x4
Construct mat4
Construct mat4x2
Construct mat4x3
Construct structure
Construct u16vec2
Construct u16vec3
Construct u16vec4
Construct u64vec2
Construct u64vec3
Construct u64vec4
Construct u8vec2
Construct u8vec3
Construct u8vec4
Construct uint
Construct uint16_t
Construct uint64
Construct uint8_t
Construct umat2
Construct umat2x3
Construct umat2x4
Construct umat3
Construct umat3x2
Construct umat3x4
Construct umat4
Construct umat4x2
Construct umat4x3
Construct uvec2
Construct uvec3
Construct uvec4
Construct vec2
Construct vec3
Construct vec4
Consumer GL extension not enabled
Consumer GLTexture extension not active
Context does not support GL_ANGLE_texture_rectangle
Context does not support OpenGL ES 3.0 or GL_OES_mapbuffer is not enabled.
Context does not support OpenGL ES 3.0.
Context has been lost.
Context is lost.
Context lost.
Context.cpp
ContextGL.cpp
ContextImpl.cpp
ContextNULL.cpp
ContextState.cpp
ContextVk.cpp
Context_gles_1_0.cpp
Contradictory depth layouts
Contradictory input layout primitives
Contradictory input vertex spacing
Contradictory layout max_vertices values
Contradictory layout vertices values
Contradictory local size
Contradictory local size specialization ids
Contradictory output layout primitives
Contradictory triangle ordering
Contradictory xfb_stride
Convert bool to double
Convert bool to float
Convert bool to float16_t
Convert bool to in16t_t
Convert bool to int
Convert bool to int64
Convert bool to int8_t
Convert bool to uint
Convert bool to uint16_t
Convert bool to uint64
Convert bool to uint8_t
Convert double to bool
Convert double to float
Convert double to float16_t
Convert double to int
Convert double to int16_t
Convert double to int64
Convert double to int8_t
Convert double to uint
Convert double to uint16_t
Convert double to uint64
Convert double to uint8_t
Convert float to bool
Convert float to double
Convert float to float16_t
Convert float to int
Convert float to int16_t
Convert float to int64
Convert float to int8_t
Convert float to uint
Convert float to uint16_t
Convert float to uint64
Convert float to uint8_t
Convert float16_t to bool
Convert float16_t to double
Convert float16_t to float
Convert float16_t to int
Convert float16_t to int16_t
Convert float16_t to int64
Convert float16_t to int8_t
Convert float16_t to uint
Convert float16_t to uint16_t
Convert float16_t to uint64
Convert float16_t to uint8_t
Convert int to bool
Convert int to double
Convert int to float
Convert int to float16_t
Convert int to int16_t
Convert int to int64
Convert int to int8_t
Convert int to uint
Convert int to uint16_t
Convert int to uint64
Convert int to uint8_t
Convert int16_t to bool
Convert int16_t to double
Convert int16_t to float
Convert int16_t to float16_t
Convert int16_t to int
Convert int16_t to int64
Convert int16_t to int8_t
Convert int16_t to uint
Convert int16_t to uint16_t
Convert int16_t to uint64
Convert int16_t to uint8_t
Convert int64 to bool
Convert int64 to double
Convert int64 to float
Convert int64 to float16_t
Convert int64 to int
Convert int64 to int16_t
Convert int64 to int8_t
Convert int64 to uint
Convert int64 to uint16_t
Convert int64 to uint64
Convert int64 to uint8_t
Convert int8_t to bool
Convert int8_t to double
Convert int8_t to float
Convert int8_t to float16_t
Convert int8_t to int
Convert int8_t to int16_t
Convert int8_t to int64
Convert int8_t to uint
Convert int8_t to uint16_t
Convert int8_t to uint64
Convert int8_t to uint8_t
Convert uint to bool
Convert uint to double
Convert uint to float
Convert uint to float16_t
Convert uint to int
Convert uint to int16_t
Convert uint to int64
Convert uint to int8_t
Convert uint to uint16_t
Convert uint to uint64
Convert uint to uint8_t
Convert uint16_t to bool
Convert uint16_t to double
Convert uint16_t to float
Convert uint16_t to float16_t
Convert uint16_t to int
Convert uint16_t to int16_t
Convert uint16_t to int64
Convert uint16_t to int8_t
Convert uint16_t to uint
Convert uint16_t to uint64
Convert uint16_t to uint8_t
Convert uint64 to bool
Convert uint64 to double
Convert uint64 to float
Convert uint64 to float16_t
Convert uint64 to int
Convert uint64 to int16_t
Convert uint64 to int64
Convert uint64 to int8_t
Convert uint64 to uint
Convert uint64 to uint16
Convert uint64 to uint8_t
Convert uint8_t to bool
Convert uint8_t to double
Convert uint8_t to float
Convert uint8_t to float16_t
Convert uint8_t to int
Convert uint8_t to int16_t
Convert uint8_t to int64
Convert uint8_t to int8_t
Convert uint8_t to uint
Convert uint8_t to uint16_t
Convert uint8_t to uint64
Could not create GL context.
Could not create a backing OpenGL context.
Could not create the dummy pbuffer.
Could not dlopen libGL.so.1:
Could not find a decent GLX FBConfig to create the context.
Could not fit output variable into available locations:
Could not get the visual info from the fb config
Could not load GLX entry point glXChooseFBConfig
Could not load GLX entry point glXCreateContext
Could not load GLX entry point glXCreateContextAttribsARB
Could not load GLX entry point glXCreatePbuffer
Could not load GLX entry point glXCreateWindow
Could not load GLX entry point glXDestroyContext
Could not load GLX entry point glXDestroyPbuffer
Could not load GLX entry point glXDestroyWindow
Could not load GLX entry point glXGetClientString
Could not load GLX entry point glXGetCurrentContext
Could not load GLX entry point glXGetCurrentDrawable
Could not load GLX entry point glXGetFBConfigAttrib
Could not load GLX entry point glXGetFBConfigs
Could not load GLX entry point glXGetVisualFromFBConfig
Could not load GLX entry point glXMakeCurrent
Could not load GLX entry point glXQueryDrawable
Could not load GLX entry point glXQueryExtension
Could not load GLX entry point glXQueryExtensionsString
Could not load GLX entry point glXQueryVersion
Could not load GLX entry point glXSwapBuffers
Could not load GLX entry point glXSwapIntervalEXT
Could not load GLX entry point glXSwapIntervalMESA
Could not load GLX entry point glXSwapIntervalSGI
Could not load GLX entry point glXWaitGL
Could not load GLX entry point glXWaitX
Could not make the dummy pbuffer current.
Could not open the default X display.
Could not pack varying
Could not process include directive
Could not query the GLX version.
Could not retrieve glXGetProcAddress
Could not set thread local storage.
Cp,
CreateAccelerationStructureNVX
CreateDescriptorUpdateTemplateKHR
CreateIndirectCommandsLayoutNVX
CreateObjectTableNVX
CreateRaytracingPipelinesNVX
CreateRenderPass2KHR
CreateSamplerYcbcrConversionKHR
CreateTLSIndex()
CreateValidationCacheEXT
Cull mode not recognized.
Current GL context not associated with stream consumer
Current driver does not support transform feedback in binary programs.
Current matrix stack has only a single matrix.
Current matrix stack is full.
Current renderer doesn't support alpha-to-coverage
Cy.
Cy=
D
D19
D3D11 device creation extension not active
D6
D7
D8
D>@
D?@
D@@
DA@
DASH
DB
DB@
DC@
DD@
DE@
DEC_OP
DEFAULT
DEVICE
DEVICECOHERENT
DISCARD
DIV_ASSIGN
DK(
DMAT2
DMAT2X2
DMAT2X3
DMAT2X4
DMAT3
DMAT3X2
DMAT3X3
DMAT3X4
DMAT4
DMAT4X2
DMAT4X3
DMAT4X4
DN7
DO
DO7
DOT
DOUBLE
DOUBLECONSTANT
DQ/
DVEC2
DVEC3
DVEC4
DW.ref.__gxx_personality_v0
D[7
D[>
Debug.cpp
DebugMarkerSetObjectNameEXT
DebugMarkerSetObjectTagEXT
DebugReportCallback
Dec
December
Declaration
Declarator.cpp
DeclareAndInitBuiltinsForInstancedMultiview.cpp
Default
Default framebuffer is bound to target.
Default vertex array buffer is bound.
Default vertex array object is bound.
DeferGlobalInitializers.cpp
Deprecated behavior
Depth-stencil buffer types are not compatible.
Depth/stencil buffer format combination not allowed for blit.
Desired resource size is greater than max texture size.
Destination cannot be immutable.
Destination internal format and type combination is not valid.
Destination texture a valid texture type.
Destination texture cannot be immutable.
Destination texture is immutable.
Destination texture is not a valid texture object.
Destination texture level is not valid.
Destination texture must be of type GL_TEXTURE_2D.
Destination texture not large enough to copy to.
Destination texture too small.
Destination width and height must be equal for cube map textures.
DestroyAccelerationStructureNVX
DestroyDescriptorUpdateTemplateKHR
DestroyIndirectCommandsLayoutNVX
DestroyObjectTableNVX
DestroySamplerYcbcrConversionKHR
DestroyTLSIndex(unsigned int)
DestroyValidationCacheEXT
Device Extension: %s (%s) version %s
Device creation extension not active
Device layers are deprecated skipping this layer
Device must have been created using eglCreateDevice
Device wasn't created using eglCreateDeviceANGLE, and the Display that created it doesn't support device querying
Device.cpp
DeviceImpl.cpp
DeviceMemoryBarrier
DeviceMemoryBarrierWithGroupSync
DeviceNULL.cpp
DeviceVk.cpp
Di>
Diagnostics.cpp
DiagnosticsBase.cpp
Didn't find required layer child value disable_environmentin manifest JSON file, skipping this layer
Didn't find required layer object %s in manifest JSON file, skipping this layer
Didn't find required layer value %s in manifest JSON file, skipping this layer
Direct3D platform is unsupported.
DirectiveHandler.cpp
DirectiveHandlerBase.cpp
DirectiveParser.cpp
Disjoint timer query not enabled
Dispatch indirect buffer must be bound.
DispatchTableGL_autogen.cpp
Display type EGL_PLATFORM_ANGLE_TYPE_NULL_ANGLE requires EGL_ANGLE_platform_angle_null.
Display.cpp
DisplayGL.cpp
DisplayGLX.cpp
DisplayImpl.cpp
DisplayImpl::validateClientBuffer unimplemented.
DisplayNULL.cpp
DisplayPowerControlEXT
DisplayVk.cpp
DisplayVkXcb.cpp
Divide by zero during constant folding
Divide by zero error during constant folding
Dj=
Draw framebuffer is incomplete
Draw mode must match current transform feedback object's draw mode.
DrawArraysIndirect hasn't been implemented for vulkan backend.
DrawCallParams
DrawElementsIndirect hasn't been implemented for vulkan backend.
DrawId
E
E#5
E7
E8
EB
EGL image internal format is not supported as a renderbuffer.
EGL image internal format is not supported as a texture.
EGL image is not valid.
EGL stream consumer external GL extension not enabled
EGL_ANDROID_blob_cache
EGL_ANDROID_presentation_time
EGL_ANDROID_presentation_time is not available.
EGL_ANGLE_create_context_client_arrays
EGL_ANGLE_create_context_extensions_enabled
EGL_ANGLE_create_context_webgl_compatibility
EGL_ANGLE_d3d_share_handle_client_buffer
EGL_ANGLE_d3d_texture_client_buffer
EGL_ANGLE_device_creation
EGL_ANGLE_device_creation_d3d11
EGL_ANGLE_device_d3d
EGL_ANGLE_direct_composition
EGL_ANGLE_display_texture_share_group
EGL_ANGLE_experimental_present_path
EGL_ANGLE_experimental_present_path extension not active
EGL_ANGLE_explicit_context
EGL_ANGLE_flexible_surface_compatibility
EGL_ANGLE_iosurface_client_buffer
EGL_ANGLE_keyed_mutex
EGL_ANGLE_platform_angle
EGL_ANGLE_platform_angle extension not active
EGL_ANGLE_platform_angle_context_virtualization
EGL_ANGLE_platform_angle_context_virtualization extension not active
EGL_ANGLE_platform_angle_d3d
EGL_ANGLE_platform_angle_d3d is not supported
EGL_ANGLE_platform_angle_null
EGL_ANGLE_platform_angle_opengl
EGL_ANGLE_platform_angle_vulkan
EGL_ANGLE_program_cache_control
EGL_ANGLE_query_surface_pointer
EGL_ANGLE_robust_resource_initialization
EGL_ANGLE_stream_producer_d3d_texture
EGL_ANGLE_surface_d3d_texture_2d_share_handle
EGL_ANGLE_surface_orientation
EGL_ANGLE_surface_orientation is not enabled.
EGL_ANGLE_window_fixed_size
EGL_ANGLE_x11_visual
EGL_CHROMIUM_create_context_bind_generates_resource
EGL_CHROMIUM_sync_control
EGL_CONTEXT_BIND_GENERATES_RESOURCE_CHROMIUM must be EGL_TRUE or EGL_FALSE.
EGL_CONTEXT_CLIENT_ARRAYS_ENABLED_ANGLE must be EGL_TRUE or EGL_FALSE.
EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_KHR is not
EGL_CONTEXT_PROGRAM_BINARY_CACHE_ENABLED_ANGLE must be EGL_TRUE or EGL_FALSE.
EGL_CONTEXT_WEBGL_COMPATIBILITY_ANGLE must be EGL_TRUE or EGL_FALSE.
EGL_DIRECT_COMPOSITION_ANGLE cannot be used without EGL_ANGLE_direct_composition support.
EGL_DISPLAY_TEXTURE_SHARE_GROUP_ANGLE must be EGL_TRUE or EGL_FALSE.
EGL_EXPERIMENTAL_PRESENT_PATH_ANGLE requires a device type of EGL_PLATFORM_ANGLE_TYPE_D3D11_ANGLE.
EGL_EXTENSIONS_ENABLED_ANGLE must be either EGL_TRUE or EGL_FALSE.
EGL_EXT_client_extensions
EGL_EXT_create_context_robustness
EGL_EXT_device_query
EGL_EXT_pixel_format_float
EGL_EXT_pixel_format_float is not enabled.
EGL_EXT_platform_base
EGL_EXT_platform_base not supported
EGL_EXT_platform_device
EGL_FIXED_SIZE_ANGLE cannot be used without EGL_ANGLE_window_fixed_size support.
EGL_FLEXIBLE_SURFACE_COMPATIBILITY_SUPPORTED_ANGLE cannot be used without EGL_ANGLE_flexible_surface_compatibility support.
EGL_GL_TEXTURE_LEVEL_KHR cannot be negative.
EGL_GL_TEXTURE_LEVEL_KHR cannot be used in conjunction with a renderbuffer target.
EGL_GL_TEXTURE_LEVEL_KHR cannot be used without KHR_gl_texture_*_image support.
EGL_GL_TEXTURE_ZOFFSET_KHR cannot be used without KHR_gl_texture_3D_image support.
EGL_GL_TEXTURE_ZOFFSET_KHR must be used with a 3D texture target.
EGL_IMAGE_PRESERVED_KHR must be EGL_TRUE or EGL_FALSE.
EGL_IOSURFACE requires the EGL_TEXTURE_RECTANGLE target
EGL_IOSURFACE requires the EGL_TEXTURE_RGBA format
EGL_KHR_client_get_all_proc_addresses
EGL_KHR_create_context
EGL_KHR_debug extension is not available.
EGL_KHR_get_all_proc_addresses
EGL_KHR_gl_renderbuffer_image
EGL_KHR_gl_texture_2D_image
EGL_KHR_gl_texture_3D_image
EGL_KHR_gl_texture_cubemap_image
EGL_KHR_image not supported.
EGL_KHR_image_base
EGL_KHR_image_pixmap
EGL_KHR_stream_consumer_gltexture
EGL_KHR_surfaceless_context
EGL_KHR_swap_buffers_with_damage
EGL_KHR_swap_buffers_with_damage is not available.
EGL_NV_post_sub_buffer
EGL_NV_stream_consumer_gltexture_yuv
EGL_PLATFORM_ANGLE_DEBUG_LAYERS_ENABLED_ANGLE must be EGL_TRUE, EGL_FALSE, or EGL_DONT_CARE.
EGL_PLATFORM_ANGLE_DEVICE_TYPE_WARP_ANGLE requires a device type of EGL_PLATFORM_ANGLE_TYPE_D3D11_ANGLE.
EGL_PLATFORM_ANGLE_EGL_HANDLE_ANGLE requires a device type of EGL_PLATFORM_ANGLE_TYPE_OPENGLES_ANGLE.
EGL_PLATFORM_ANGLE_ENABLE_AUTOMATIC_TRIM_ANGLE requires a device type of EGL_PLATFORM_ANGLE_TYPE_D3D11_ANGLE.
EGL_PLATFORM_ANGLE_TYPE_VULKAN_ANGLE currently only supports Vulkan 1.0.
EGL_POST_SUB_BUFFER_SUPPORTED_NV cannot be used without EGL_ANGLE_surface_orientation support.
EGL_ROBUST_RESOURCE_INITIALIZATION_ANGLE cannot be used without EGL_ANGLE_robust_resource_initialization support.
EGL_ROBUST_RESOURCE_INITIALIZATION_ANGLE must be either EGL_TRUE or EGL_FALSE.
EGL_SURFACE_ORIENTATION_ANGLE cannot be queried without EGL_ANGLE_surface_orientation support.
EGL_WIDTH or EGL_HEIGHT cannot be set without EGL_ANGLE_window_fixed_size support.
EGL_WIDTH or EGL_HEIGHT cannot be set without EGL_FIXED_SIZE_ANGLE being enabled on the surface.
ELSE
EM7
EOF while in a comment
EQUAL
EQ_OP
ERROR
ES
ES2_and_ES3_ident_ES3_1_keyword(sh::TParseContext*, int)
ES2_and_ES3_reserved_ES3_1_keyword(sh::TParseContext*, int)
ES2_ident_ES3_keyword(sh::TParseContext*, int)
ES2_ident_ES3_keyword_multiview_keyword(sh::TParseContext*, int)
ES2_ident_ES3_reserved_ES3_1_extension_keyword(sh::TParseContext*, sh::TExtension, int)
ES2_ident_ES3_reserved_ES3_1_keyword(sh::TParseContext*, int)
ES2_keyword_ES3_reserved(sh::TParseContext*, int)
ES2_reserved_ES3_keyword(sh::TParseContext*, int)
ES3 texture parameters are not available without GL_OES_EGL_image_external_essl3.
ES3_extension_keyword_else_ident(sh::TParseContext*, sh::TExtension, int)
ETC lossy decode formats can't be copied to.
EXPLICITINTERPAMD
EXT_create_context_robustness.
EZ7
E[=
E^/
Each cubemap face must have equal width and height.
Eb!
Element value exceeds maximum element index.
Embedded struct definitions are not allowed
EmitStreamVertex
EmitVertex
EmulateGLFragColorBroadcast.cpp
EmulatePrecision.cpp
Encountered meta-layer %s
Encountered the vkEnumerateDeviceLayerProperties terminator.  This means a layer improperly continued.
End of input in comment
End of input in macro
End of line in macro substitution:
End of line in string
EndPrimitive
EndStreamPrimitive
Entering state %d
Entry point not found
Enum is not currently supported.
Enum requires GLES 3.1
Ep*
Error during layout qualifier parsing.
Error getting CWD for Vulkan layers init.
Error setting CWD for Vulkan layers init.
Error setting Path for Mock/Null Driver.
Error setting environment for Vulkan layers init.
Error.cpp
Error: discarding
Error: popping
Es7
Except for images with the r32f, r32i and r32ui format qualifiers, image variables must be qualified readonly and/or writeonly
ExpandIntegerPowExpressions.cpp
Expected a program name, but found a shader name.
Expected a shader name, but found a program name.
Expected invariant
Expected loop index
Expression too complex.
ExpressionParser.cpp
Extension
Extension %s not supported for this physical device
Extension is not enabled.
Extension not supported
Extension not supported.
ExtensionBehavior.cpp
ExtensionGLSL.cpp
External texture extension not enabled
F
F16IMAGE1D
F16IMAGE1DARRAY
F16IMAGE2D
F16IMAGE2DARRAY
F16IMAGE2DMS
F16IMAGE2DMSARRAY
F16IMAGE2DRECT
F16IMAGE3D
F16IMAGEBUFFER
F16IMAGECUBE
F16IMAGECUBEARRAY
F16MAT2
F16MAT2X2
F16MAT2X3
F16MAT2X4
F16MAT3
F16MAT3X2
F16MAT3X3
F16MAT3X4
F16MAT4
F16MAT4X2
F16MAT4X3
F16MAT4X4
F16SAMPLER1D
F16SAMPLER1DARRAY
F16SAMPLER1DARRAYSHADOW
F16SAMPLER1DSHADOW
F16SAMPLER2D
F16SAMPLER2DARRAY
F16SAMPLER2DARRAYSHADOW
F16SAMPLER2DMS
F16SAMPLER2DMSARRAY
F16SAMPLER2DRECT
F16SAMPLER2DRECTSHADOW
F16SAMPLER2DSHADOW
F16SAMPLER3D
F16SAMPLERBUFFER
F16SAMPLERCUBE
F16SAMPLERCUBEARRAY
F16SAMPLERCUBEARRAYSHADOW
F16SAMPLERCUBESHADOW
F16SUBPASSINPUT
F16SUBPASSINPUTMS
F16TEXTURE1D
F16TEXTURE1DARRAY
F16TEXTURE2D
F16TEXTURE2DARRAY
F16TEXTURE2DMS
F16TEXTURE2DMSARRAY
F16TEXTURE2DRECT
F16TEXTURE3D
F16TEXTUREBUFFER
F16TEXTURECUBE
F16TEXTURECUBEARRAY
F16VEC2
F16VEC3
F16VEC4
F32MAT2
F32MAT2X2
F32MAT2X3
F32MAT2X4
F32MAT3
F32MAT3X2
F32MAT3X3
F32MAT3X4
F32MAT4
F32MAT4X2
F32MAT4X3
F32MAT4X4
F32VEC2
F32VEC3
F32VEC4
F64MAT2
F64MAT2X2
F64MAT2X3
F64MAT2X4
F64MAT3
F64MAT3X2
F64MAT3X3
F64MAT3X4
F64MAT4
F64MAT4X2
F64MAT4X3
F64MAT4X4
F64VEC2
F64VEC3
F64VEC4
F6<
F7
F8
FB
FD<
FJ>
FLAT
FLOAT
FLOAT16CONSTANT
FLOAT16_T
FLOAT32_T
FLOAT64_T
FLOATCONSTANT
FOR
FR4
FRAGMENT
FY>
FZ5
F^>
F`7
Failed to allocate host memory
Failed to allocate memory for binary blob
Failed to allocate path handle range.
Failed to allocate path objects.
Failed to allocate space for legacy VK_LAYER_LUNARG_standard_validation meta-layer component_layers information.
Failed to compile internal blit shader.
Failed to create a native GLX pbuffer.
Failed to create the Colormap for the child window.
Failed to find vkGetDeviceProcAddr in layer %s
Failed to get the XVisualInfo for the child window.
Failed to get the parent window's dimensions.
Failed to initialize display because device creation failed:
Failed to link internal blit program.
Failed to load binary from cache:
Failed to make the GLX context current
Failed to resize buffer data shadow copy.
Failed to retrieve the size of the parent window.
Failed to store binary blob in memory cache, blob is too large.
Failed to unmap the client data streaming buffer.
Feb
February
Feedback loop formed between Framebuffer and active Texture.
Fence must be set.
Fence.cpp
FenceNVGL.cpp
FenceNVNULL.cpp
FenceNVVk.cpp
Field name
Field number
FindMain.cpp
FindSymbolNode.cpp
FlagStd140Structs.cpp
Float overflow
Float16ToFloat32.cpp
Floating-point suffix unsupported prior to GLSL ES 3.00
Floor
Flush is unimplemented. http://anglebug.com/2504
Flushed range does not fit into buffer mapping dimensions.
FoldExpressions.cpp
Format cannot be GL_DEPTH_COMPONENT or GL_DEPTH_STENCIL if target is GL_TEXTURE_3D
Format must match the internal format of the texture.
Format_table_autogen.cpp
Found ICD manifest file %s, version %s
Found manifest file %s, version %s
Found pre_instance_functions section in explicit layer from "%s". This section is only valid in implicit layers. The section will be ignored
Found pre_instance_functions section in layer from "%s". This section is only valid in manifest version 1.1.2 or later. The section will be ignored
Fraction
FragStencilRef
Fragment input type is not a floating point scalar or vector.
Fragment output color index must be zero or one.
Fragment shader output type does not match the bound framebuffer attachment type.
Fragment shader version does not match vertex shader version.
Framebuffer layer cannot be less than 0 or greater than GL_MAX_FRAMEBUFFER_LAYERS_EXT.
Framebuffer.cpp
FramebufferAttachment.cpp
FramebufferGL.cpp
FramebufferNULL.cpp
FramebufferVk.cpp
FreePoolIndex()
Fri
Friday
Front-end Error:
Function Call:
Function Definition:
Function Parameters:
Function Prototype
Function call discards the 'coherent' qualifier from image
Function call discards the 'readonly' qualifier from image
Function call discards the 'volatile' qualifier from image
Function call discards the 'writeonly' qualifier from image
Function has too many parameters.
Function parameter type cannot be a structure definition
FunctionLookup.cpp
FunctionsGL.cpp
FunctionsGLX.cpp
G
G7
G8
GA<
GCC: (Debian 6.4.0-22) 6.4.0 20180924
GCC_3.0
GCC_except_table0
GCC_except_table1
GCC_except_table10
GCC_except_table108
GCC_except_table11
GCC_except_table110
GCC_except_table111
GCC_except_table115
GCC_except_table116
GCC_except_table117
GCC_except_table118
GCC_except_table119
GCC_except_table12
GCC_except_table120
GCC_except_table123
GCC_except_table124
GCC_except_table125
GCC_except_table13
GCC_except_table133
GCC_except_table137
GCC_except_table138
GCC_except_table139
GCC_except_table14
GCC_except_table140
GCC_except_table141
GCC_except_table142
GCC_except_table143
GCC_except_table144
GCC_except_table145
GCC_except_table146
GCC_except_table147
GCC_except_table15
GCC_except_table156
GCC_except_table16
GCC_except_table162
GCC_except_table164
GCC_except_table166
GCC_except_table168
GCC_except_table169
GCC_except_table17
GCC_except_table174
GCC_except_table175
GCC_except_table176
GCC_except_table178
GCC_except_table179
GCC_except_table18
GCC_except_table180
GCC_except_table181
GCC_except_table182
GCC_except_table183
GCC_except_table184
GCC_except_table185
GCC_except_table186
GCC_except_table187
GCC_except_table188
GCC_except_table189
GCC_except_table19
GCC_except_table190
GCC_except_table192
GCC_except_table194
GCC_except_table195
GCC_except_table196
GCC_except_table197
GCC_except_table198
GCC_except_table199
GCC_except_table2
GCC_except_table20
GCC_except_table200
GCC_except_table201
GCC_except_table202
GCC_except_table203
GCC_except_table204
GCC_except_table205
GCC_except_table206
GCC_except_table207
GCC_except_table208
GCC_except_table209
GCC_except_table21
GCC_except_table216
GCC_except_table217
GCC_except_table218
GCC_except_table219
GCC_except_table22
GCC_except_table221
GCC_except_table222
GCC_except_table227
GCC_except_table228
GCC_except_table229
GCC_except_table23
GCC_except_table230
GCC_except_table231
GCC_except_table232
GCC_except_table233
GCC_except_table234
GCC_except_table235
GCC_except_table236
GCC_except_table237
GCC_except_table238
GCC_except_table239
GCC_except_table24
GCC_except_table240
GCC_except_table241
GCC_except_table242
GCC_except_table244
GCC_except_table245
GCC_except_table246
GCC_except_table247
GCC_except_table248
GCC_except_table249
GCC_except_table25
GCC_except_table250
GCC_except_table251
GCC_except_table252
GCC_except_table253
GCC_except_table254
GCC_except_table255
GCC_except_table256
GCC_except_table257
GCC_except_table258
GCC_except_table259
GCC_except_table26
GCC_except_table261
GCC_except_table268
GCC_except_table269
GCC_except_table27
GCC_except_table270
GCC_except_table271
GCC_except_table272
GCC_except_table273
GCC_except_table277
GCC_except_table278
GCC_except_table279
GCC_except_table28
GCC_except_table280
GCC_except_table281
GCC_except_table282
GCC_except_table283
GCC_except_table284
GCC_except_table285
GCC_except_table286
GCC_except_table287
GCC_except_table288
GCC_except_table289
GCC_except_table29
GCC_except_table290
GCC_except_table291
GCC_except_table292
GCC_except_table294
GCC_except_table295
GCC_except_table3
GCC_except_table30
GCC_except_table303
GCC_except_table31
GCC_except_table310
GCC_except_table315
GCC_except_table316
GCC_except_table317
GCC_except_table318
GCC_except_table319
GCC_except_table32
GCC_except_table320
GCC_except_table321
GCC_except_table322
GCC_except_table323
GCC_except_table324
GCC_except_table325
GCC_except_table326
GCC_except_table327
GCC_except_table328
GCC_except_table329
GCC_except_table33
GCC_except_table330
GCC_except_table332
GCC_except_table333
GCC_except_table34
GCC_except_table36
GCC_except_table361
GCC_except_table362
GCC_except_table367
GCC_except_table37
GCC_except_table373
GCC_except_table374
GCC_except_table375
GCC_except_table376
GCC_except_table377
GCC_except_table378
GCC_except_table379
GCC_except_table38
GCC_except_table380
GCC_except_table381
GCC_except_table382
GCC_except_table383
GCC_except_table384
GCC_except_table385
GCC_except_table386
GCC_except_table387
GCC_except_table388
GCC_except_table389
GCC_except_table390
GCC_except_table391
GCC_except_table392
GCC_except_table393
GCC_except_table394
GCC_except_table395
GCC_except_table396
GCC_except_table397
GCC_except_table398
GCC_except_table399
GCC_except_table4
GCC_except_table40
GCC_except_table400
GCC_except_table401
GCC_except_table402
GCC_except_table403
GCC_except_table404
GCC_except_table405
GCC_except_table406
GCC_except_table407
GCC_except_table408
GCC_except_table409
GCC_except_table415
GCC_except_table416
GCC_except_table417
GCC_except_table42
GCC_except_table435
GCC_except_table437
GCC_except_table438
GCC_except_table439
GCC_except_table44
GCC_except_table448
GCC_except_table449
GCC_except_table450
GCC_except_table458
GCC_except_table46
GCC_except_table461
GCC_except_table468
GCC_except_table471
GCC_except_table479
GCC_except_table48
GCC_except_table488
GCC_except_table5
GCC_except_table50
GCC_except_table503
GCC_except_table515
GCC_except_table516
GCC_except_table517
GCC_except_table518
GCC_except_table519
GCC_except_table52
GCC_except_table520
GCC_except_table521
GCC_except_table522
GCC_except_table523
GCC_except_table524
GCC_except_table525
GCC_except_table526
GCC_except_table527
GCC_except_table528
GCC_except_table529
GCC_except_table53
GCC_except_table530
GCC_except_table531
GCC_except_table532
GCC_except_table533
GCC_except_table534
GCC_except_table535
GCC_except_table536
GCC_except_table537
GCC_except_table539
GCC_except_table540
GCC_except_table541
GCC_except_table542
GCC_except_table543
GCC_except_table544
GCC_except_table545
GCC_except_table546
GCC_except_table547
GCC_except_table548
GCC_except_table549
GCC_except_table550
GCC_except_table551
GCC_except_table552
GCC_except_table553
GCC_except_table554
GCC_except_table555
GCC_except_table556
GCC_except_table557
GCC_except_table558
GCC_except_table559
GCC_except_table560
GCC_except_table561
GCC_except_table562
GCC_except_table563
GCC_except_table564
GCC_except_table565
GCC_except_table566
GCC_except_table567
GCC_except_table568
GCC_except_table569
GCC_except_table570
GCC_except_table571
GCC_except_table576
GCC_except_table577
GCC_except_table578
GCC_except_table58
GCC_except_table582
GCC_except_table583
GCC_except_table584
GCC_except_table585
GCC_except_table586
GCC_except_table588
GCC_except_table589
GCC_except_table59
GCC_except_table593
GCC_except_table597
GCC_except_table598
GCC_except_table599
GCC_except_table6
GCC_except_table60
GCC_except_table602
GCC_except_table603
GCC_except_table604
GCC_except_table605
GCC_except_table608
GCC_except_table609
GCC_except_table61
GCC_except_table63
GCC_except_table637
GCC_except_table638
GCC_except_table644
GCC_except_table645
GCC_except_table65
GCC_except_table7
GCC_except_table70
GCC_except_table71
GCC_except_table72
GCC_except_table74
GCC_except_table75
GCC_except_table76
GCC_except_table78
GCC_except_table79
GCC_except_table8
GCC_except_table80
GCC_except_table804
GCC_except_table805
GCC_except_table806
GCC_except_table808
GCC_except_table809
GCC_except_table810
GCC_except_table813
GCC_except_table814
GCC_except_table815
GCC_except_table816
GCC_except_table817
GCC_except_table818
GCC_except_table82
GCC_except_table820
GCC_except_table822
GCC_except_table824
GCC_except_table826
GCC_except_table827
GCC_except_table828
GCC_except_table830
GCC_except_table831
GCC_except_table832
GCC_except_table833
GCC_except_table84
GCC_except_table86
GCC_except_table862
GCC_except_table874
GCC_except_table875
GCC_except_table876
GCC_except_table88
GCC_except_table9
GCC_except_table90
GCC_except_table91
GCC_except_table93
GCC_except_table95
GCC_except_table96
GCC_except_table98
GEOMETRY
GE_OP
GL framebuffer returned incomplete.
GLES1-only function.
GLES1Renderer program link failed.
GLES1Renderer shader compile failed.
GLES1Renderer.cpp
GLES1State.cpp
GLIBC_2.14
GLIBC_2.17
GLIBC_2.2.5
GLIBC_2.3
GLIBC_2.3.2
GLIBC_2.3.3
GLIBC_2.4
GLOBAL
GLSL.std.450
GLX is not present.
GLX_ARB_create_context
GLX_ARB_create_context_profile
GLX_ARB_create_context_robustness
GLX_ARB_multisample
GLX_EXT_create_context_es2_profile
GLX_EXT_swap_control
GLX_MESA_swap_control
GLX_SGI_swap_control
GL_
GL_3DL_array_objects
GL_ANDROID_extension_pack_es31a
GL_ANGLE_client_arrays
GL_ANGLE_copy_texture_3d
GL_ANGLE_copy_texture_3d extension not available.
GL_ANGLE_depth_texture
GL_ANGLE_explicit_context_gles1
GL_ANGLE_framebuffer_blit
GL_ANGLE_framebuffer_multisample
GL_ANGLE_framebuffer_multisample not available
GL_ANGLE_instanced_arrays
GL_ANGLE_lossy_etc_decode
GL_ANGLE_multiview
GL_ANGLE_multiview_multisample
GL_ANGLE_pack_reverse_row_order
GL_ANGLE_request_extension
GL_ANGLE_request_extension is not available.
GL_ANGLE_robust_client_memory
GL_ANGLE_robust_client_memory is not available.
GL_ANGLE_texture_compression_dxt3
GL_ANGLE_texture_compression_dxt5
GL_ANGLE_texture_multisample_array not enabled.
GL_ANGLE_texture_usage
GL_ANGLE_translated_shader_source
GL_ANGLE_webgl_compatibility
GL_ARB_ES2_compatibility
GL_ARB_ES3_1_compatibility
GL_ARB_ES3_2_compatibility
GL_ARB_ES3_compatibility
GL_ARB_base_instance
GL_ARB_blend_func_extended
GL_ARB_buffer_storage
GL_ARB_clear_buffer_object
GL_ARB_clear_texture
GL_ARB_clip_control
GL_ARB_compute_shader
GL_ARB_copy_buffer
GL_ARB_copy_image
GL_ARB_debug_output
GL_ARB_depth_buffer_float
GL_ARB_depth_texture
GL_ARB_derivative_control
GL_ARB_direct_state_access
GL_ARB_draw_buffers
GL_ARB_draw_buffers_blend
GL_ARB_draw_elements_base_vertex
GL_ARB_draw_indirect
GL_ARB_draw_instanced
GL_ARB_enhanced_layouts
GL_ARB_explicit_attrib_location
GL_ARB_explicit_uniform_location
GL_ARB_fragment_program
GL_ARB_fragment_shader
GL_ARB_framebuffer_no_attachments
GL_ARB_framebuffer_object
GL_ARB_framebuffer_sRGB
GL_ARB_geometry_shader4
GL_ARB_get_program_binary
GL_ARB_get_texture_sub_image
GL_ARB_gpu_shader5
GL_ARB_gpu_shader_fp64
GL_ARB_gpu_shader_int64
GL_ARB_instanced_arrays
GL_ARB_internalformat_query
GL_ARB_internalformat_query2
GL_ARB_invalidate_subdata
GL_ARB_map_buffer_range
GL_ARB_multi_bind
GL_ARB_multi_draw_indirect
GL_ARB_multisample
GL_ARB_multitexture
GL_ARB_occlusion_query
GL_ARB_occlusion_query2
GL_ARB_point_parameters
GL_ARB_post_depth_coverage
GL_ARB_program_interface_query
GL_ARB_provoking_vertex
GL_ARB_robust_buffer_access_behavior
GL_ARB_robustness
GL_ARB_sample_shading
GL_ARB_sampler_objects
GL_ARB_separate_shader_objects
GL_ARB_shader_atomic_counters
GL_ARB_shader_ballot
GL_ARB_shader_bit_encoding
GL_ARB_shader_draw_parameters
GL_ARB_shader_group_vote
GL_ARB_shader_image_load_store
GL_ARB_shader_objects
GL_ARB_shader_stencil_export
GL_ARB_shader_storage_buffer_object
GL_ARB_shader_subroutine
GL_ARB_shader_texture_image_samples
GL_ARB_shader_texture_lod
GL_ARB_shader_viewport_layer_array
GL_ARB_shading_language_420pack
GL_ARB_shading_language_packing
GL_ARB_sparse_texture2
GL_ARB_sparse_texture_clamp
GL_ARB_tessellation_shader
GL_ARB_texture_barrier
GL_ARB_texture_buffer_object
GL_ARB_texture_buffer_range
GL_ARB_texture_compression
GL_ARB_texture_compression_bptc
GL_ARB_texture_cube_map_array
GL_ARB_texture_gather
GL_ARB_texture_multisample
GL_ARB_texture_rectangle
GL_ARB_texture_rg
GL_ARB_texture_rg ARB_texture_float
GL_ARB_texture_rg GL_ARB_texture_float
GL_ARB_texture_rg GL_ARB_texture_float GL_ARB_color_buffer_float
GL_ARB_texture_rgb10_a2ui
GL_ARB_texture_storage
GL_ARB_texture_storage_multisample
GL_ARB_texture_swizzle
GL_ARB_texture_view
GL_ARB_timer_query
GL_ARB_transform_feedback2
GL_ARB_transform_feedback3
GL_ARB_transform_feedback_instanced
GL_ARB_uniform_buffer_object
GL_ARB_vertex_array_object
GL_ARB_vertex_attrib_64bit
GL_ARB_vertex_attrib_binding
GL_ARB_vertex_buffer_object
GL_ARB_vertex_program
GL_ARB_vertex_shader
GL_ARB_vertex_type_2_10_10_10_rev
GL_ARB_viewport_array
GL_ARM_shader_framebuffer_fetch
GL_BUFFER_MAP_POINTER can only be queried with GetBufferPointerv.
GL_CHROMIUM_bind_generates_resource
GL_CHROMIUM_bind_uniform_location
GL_CHROMIUM_bind_uniform_location is not available.
GL_CHROMIUM_copy_compressed_texture
GL_CHROMIUM_copy_compressed_texture extension not available.
GL_CHROMIUM_copy_texture
GL_CHROMIUM_copy_texture extension not available.
GL_CHROMIUM_framebuffer_mixed_samples
GL_CHROMIUM_framebuffer_mixed_samples is not available.
GL_CHROMIUM_path_rendering
GL_CHROMIUM_path_rendering is not available.
GL_CHROMIUM_sync_query
GL_ETC1_RGB8_OES
GL_EXT_YUV_target
GL_EXT_base_instance
GL_EXT_blend_color
GL_EXT_blend_equation_separate
GL_EXT_blend_func_extended
GL_EXT_blend_func_separate
GL_EXT_blend_minmax
GL_EXT_buffer_storage
GL_EXT_clear_texture
GL_EXT_clip_control
GL_EXT_color_buffer_float
GL_EXT_control_flow_attributes
GL_EXT_copy_image
GL_EXT_copy_texture
GL_EXT_debug_label
GL_EXT_debug_marker
GL_EXT_device_group
GL_EXT_direct_state_access
GL_EXT_discard_framebuffer
GL_EXT_disjoint_timer_query
GL_EXT_draw_buffers
GL_EXT_draw_buffers_indexed
GL_EXT_draw_elements_base_vertex
GL_EXT_draw_instanced
GL_EXT_draw_range_elements
GL_EXT_draw_transform_feedback
GL_EXT_frag_depth
GL_EXT_framebuffer_blit
GL_EXT_framebuffer_multisample
GL_EXT_framebuffer_object
GL_EXT_framebuffer_sRGB
GL_EXT_geometry_point_size
GL_EXT_geometry_shader
GL_EXT_geometry_shader extension not enabled.
GL_EXT_gpu_shader4
GL_EXT_gpu_shader5
GL_EXT_instanced_arrays
GL_EXT_map_buffer_range
GL_EXT_multi_draw_arrays
GL_EXT_multi_draw_indirect
GL_EXT_multisample_compatibility
GL_EXT_multisampled_render_to_texture
GL_EXT_multiview
GL_EXT_multiview_draw_buffers
GL_EXT_nonuniform_qualifier
GL_EXT_occlusion_query_boolean
GL_EXT_packed_depth_stencil
GL_EXT_packed_float
GL_EXT_packed_float GL_ARB_color_buffer_float
GL_EXT_point_parameters
GL_EXT_polygon_offset
GL_EXT_post_depth_coverage
GL_EXT_primitive_bounding_box
GL_EXT_provoking_vertex
GL_EXT_read_format_bgra
GL_EXT_robustness
GL_EXT_sRGB_write_control
GL_EXT_samplerless_texture_functions
GL_EXT_separate_shader_objects
GL_EXT_shader_16bit_storage
GL_EXT_shader_8bit_storage
GL_EXT_shader_atomic_int64
GL_EXT_shader_framebuffer_fetch
GL_EXT_shader_image_load_formatted
GL_EXT_shader_image_load_store
GL_EXT_shader_io_blocks
GL_EXT_shader_non_constant_global_initializers
GL_EXT_shader_texture_lod
GL_EXT_shadow_samplers
GL_EXT_subtexture
GL_EXT_tessellation_point_size
GL_EXT_tessellation_shader
GL_EXT_texture3D
GL_EXT_texture_array
GL_EXT_texture_border_clamp
GL_EXT_texture_buffer
GL_EXT_texture_buffer_object
GL_EXT_texture_compression_bptc
GL_EXT_texture_compression_dxt1
GL_EXT_texture_compression_s3tc
GL_EXT_texture_compression_s3tc_srgb
GL_EXT_texture_cube_map_array
GL_EXT_texture_filter_anisotropic
GL_EXT_texture_format_BGRA8888
GL_EXT_texture_integer
GL_EXT_texture_lod_bias
GL_EXT_texture_norm16
GL_EXT_texture_object
GL_EXT_texture_rg GL_OES_texture_half_float GL_EXT_color_buffer_half_float
GL_EXT_texture_sRGB
GL_EXT_texture_sRGB_decode
GL_EXT_texture_sRGB_decode is not enabled.
GL_EXT_texture_shared_exponent
GL_EXT_texture_storage
GL_EXT_texture_storage GL_OES_texture_half_float GL_EXT_color_buffer_half_float
GL_EXT_texture_storage GL_OES_texture_half_float GL_EXT_texture_rg GL_EXT_color_buffer_half_float
GL_EXT_texture_swizzle
GL_EXT_texture_view
GL_EXT_timer_query
GL_EXT_transform_feedback
GL_EXT_unpack_subimage
GL_EXT_vertex_array
GL_EXT_vertex_attrib_64bit
GL_FIXED is not supported in WebGL.
GL_FRAGMENT_PRECISION_HIGH
GL_GOOGLE_cpp_style_line_directive
GL_GOOGLE_include_directive
GL_KHR_blend_equation_advanced
GL_KHR_memory_scope_semantics
GL_KHR_parallel_shader_compile
GL_KHR_robust_buffer_access_behavior
GL_KHR_robustness
GL_KHR_shader_subgroup_arithmetic
GL_KHR_shader_subgroup_ballot
GL_KHR_shader_subgroup_basic
GL_KHR_shader_subgroup_clustered
GL_KHR_shader_subgroup_quad
GL_KHR_shader_subgroup_shuffle
GL_KHR_shader_subgroup_shuffle_relative
GL_KHR_shader_subgroup_vote
GL_KHR_texture_compression_astc_hdr
GL_KHR_texture_compression_astc_ldr
GL_KHX_shader_explicit_arithmetic_types
GL_KHX_shader_explicit_arithmetic_types_float16
GL_KHX_shader_explicit_arithmetic_types_float32
GL_KHX_shader_explicit_arithmetic_types_float64
GL_KHX_shader_explicit_arithmetic_types_int16
GL_KHX_shader_explicit_arithmetic_types_int32
GL_KHX_shader_explicit_arithmetic_types_int64
GL_KHX_shader_explicit_arithmetic_types_int8
GL_MAX_
GL_NV_EGL_stream_consumer_external
GL_NV_fence is not supported
GL_NV_framebuffer_mixed_samples
GL_NV_geometry_program4
GL_NV_internalformat_sample_query
GL_NV_pack_subimage
GL_NV_path_rendering
GL_NV_pixel_buffer_object
GL_NV_shader_framebuffer_fetch
GL_NV_vertex_program4
GL_NV_viewport_array2
GL_OES_EGL_image
GL_OES_EGL_image_external
GL_OES_EGL_image_external_essl3
GL_OES_compressed_ETC1_RGB8_texture
GL_OES_copy_image
GL_OES_depth_texture
GL_OES_depth_texture GL_OES_packed_depth_stencil
GL_OES_draw_buffers_indexed
GL_OES_draw_elements_base_vertex
GL_OES_draw_texture
GL_OES_element_index_uint
GL_OES_fbo_render_mipmap
GL_OES_geometry_point_size
GL_OES_geometry_shader
GL_OES_get_program_binary
GL_OES_gpu_shader5
GL_OES_mapbuffer
GL_OES_point_size_array
GL_OES_point_size_array not enabled.
GL_OES_point_sprite
GL_OES_primitive_bounding_box
GL_OES_rgb8_rgba8
GL_OES_sample_shading
GL_OES_sample_variables
GL_OES_shader_image_atomic
GL_OES_shader_io_blocks
GL_OES_shader_multisample_interpolation
GL_OES_single_precision
GL_OES_standard_derivatives
GL_OES_surfaceless_context
GL_OES_tessellation_point_size
GL_OES_tessellation_shader
GL_OES_texture_3D
GL_OES_texture_border_clamp
GL_OES_texture_buffer
GL_OES_texture_cube_map
GL_OES_texture_cube_map_array
GL_OES_texture_float
GL_OES_texture_float GL_EXT_texture_rg
GL_OES_texture_float_linear
GL_OES_texture_half_float
GL_OES_texture_half_float GL_EXT_texture_rg
GL_OES_texture_half_float_linear
GL_OES_texture_npot
GL_OES_texture_storage_multisample_2d_array
GL_OES_texture_view
GL_OES_vertex_array_object
GL_OES_viewport_array
GL_OVR_multiview
GL_OVR_multiview2
GL_TEXTURE_2D texture target requires GL_OES_EGL_image.
GL_TEXTURE_EXTERNAL_OES texture target requires GL_OES_EGL_image_external.
GL_VERTEX_ATTRIB_ARRAY_DIVISOR requires OpenGL ES 3.0 or GL_ANGLE_instanced_arrays.
GL_VERTEX_ATTRIB_ARRAY_INTEGER requires OpenGL ES 3.0.
GLenum components is not one of GL_RGB, GL_RGBA, GL_ALPHA or GL_NONE.
GNU
GPU.ANGLE.DisplayInitializeMS
GPU.ANGLE.ProgramCache.CacheResult
GPU.ANGLE.ProgramCache.LoadBinarySuccess
GPU.ANGLE.ProgramCache.ProgramBinarySizeBytes
GPU.ANGLE.ProgramCache.ProgramCacheHitTimeUS
GX<
GY7
Generating SPIR-V array-of-arrays, but Vulkan only supports single array level for this resource
Geometry shader input variable must be declared as an array
Geometry shader is not supported in this shader version.
Geometry shader version does not match vertex shader version.
GetAccelerationStructureHandleNVX
GetAccelerationStructureMemoryRequirementsNVX
GetAccelerationStructureScratchMemoryRequirementsNVX
GetAvailableValidationLayers
GetBufferMemoryRequirements2KHR
GetDescriptorSetLayoutSupportKHR
GetDesiredPresentMode
GetDeviceGroupPeerMemoryFeaturesKHR
GetFenceFdKHR
GetGlobalPoolAllocator()
GetImageMemoryRequirements2KHR
GetImageSparseMemoryRequirements2KHR
GetMemoryFdKHR
GetMemoryFdPropertiesKHR
GetMemoryHostPointerPropertiesEXT
GetOperatorString(TOperator)
GetPastPresentationTimingGOOGLE
GetPhysicalDeviceExternalImageFormatPropertiesNV
GetPhysicalDeviceGeneratedCommandsPropertiesNVX
GetPhysicalDeviceMultisamplePropertiesEXT
GetPhysicalDeviceSurfaceCapabilities2EXT
GetPhysicalDeviceSurfaceCapabilities2KHR
GetPhysicalDeviceSurfaceFormats2KHR
GetQueueCheckpointDataNV
GetRaytracingShaderHandlesNVX
GetRefreshCycleDurationGOOGLE
GetSemaphoreFdKHR
GetShaderCodeImpl
GetShaderInfoAMD
GetSwapchainCounterEXT
GetSwapchainStatusKHR
GetTLSValue(unsigned int)
GetValidationCacheDataEXT
Gl2
GlslangToSpv.cpp
GlslangWrapper.cpp
Google Inc.
GroupMemoryBarrier
Gt7
G|<
H
H6
H7
H8
HIGH_PRECISION
HITATTRNV
H^4
HandleAllocator.cpp
HandleAllocator::allocate allocating
HandleAllocator::allocate reusing
HandleAllocator::release releasing
HandleAllocator::reserve reserving
HandleRangeAllocator.cpp
HashNames.cpp
High
Hn'
Hq=
I
I16VEC2
I16VEC3
I16VEC4
I32VEC2
I32VEC3
I32VEC4
I64VEC2
I64VEC3
I64VEC4
I7
I8
I8VEC2
I8VEC3
I8VEC4
ICD "%s" associated with VkPhysicalDevice does not support vkReleaseDisplayEXT - Consequently, the call is invalid because it should not be possible to acquire a display on this device
ICD associated with VkPhysicalDevice does not support GetPhysicalDeviceGeneratedCommandsPropertiesNVX
ICD associated with VkPhysicalDevice does not support GetPhysicalDeviceMultisamplePropertiesEXT
ICD associated with VkPhysicalDevice does not support GetPhysicalDevicePresentRectanglesKHX
ICD for selected physical device is not exporting vkCreateDisplayModeKHR!
ICD for selected physical device is not exporting vkGetDisplayModePropertiesKHR!
ICD for selected physical device is not exporting vkGetDisplayPlaneCapabilitiesKHR!
ICD for selected physical device is not exporting vkGetDisplayPlaneSupportedDisplaysKHR!
ICD for selected physical device is not exporting vkGetPhysicalDeviceDisplayPlanePropertiesKHR!
ICD for selected physical device is not exporting vkGetPhysicalDeviceDisplayPropertiesKHR!
ICD for selected physical device is not exporting vkGetPhysicalDeviceSurfaceCapabilitiesKHR!
ICD for selected physical device is not exporting vkGetPhysicalDeviceSurfacePresentModesKHR!
ICD for selected physical device is not exporting vkGetPhysicalDeviceSurfaceSupportKHR!
ICD for selected physical device is not exporting vkGetPhysicalDeviceXcbPresentationSupportKHR!
IDENTIFIER
IF
IIMAGE1D
IIMAGE1DARRAY
IIMAGE2D
IIMAGE2DARRAY
IIMAGE2DMS
IIMAGE2DMSARRAY
IIMAGE2DRECT
IIMAGE3D
IIMAGEBUFFER
IIMAGECUBE
IIMAGECUBEARRAY
IM7
IMAGE_UNIFORMS
IN
INC_OP
INOUT
INSTANCE
INTERNAL ERROR:
INVARIANT
ISAMPLER1D
ISAMPLER1DARRAY
ISAMPLER2D
ISAMPLER2DARRAY
ISAMPLER2DMS
ISAMPLER2DMSARRAY
ISAMPLER2DRECT
ISAMPLER3D
ISAMPLERBUFFER
ISAMPLERCUBE
ISAMPLERCUBEARRAY
ISUBPASSINPUT
ISUBPASSINPUTMS
IT>
ITEXTURE1D
ITEXTURE1DARRAY
ITEXTURE2D
ITEXTURE2DARRAY
ITEXTURE2DMS
ITEXTURE2DMSARRAY
ITEXTURE2DRECT
ITEXTURE3D
ITEXTUREBUFFER
ITEXTURECUBE
ITEXTURECUBEARRAY
IU>
IV>
IVEC2
IVEC3
IVEC4
IW>
IX>
IY>
IZ>
I[>
I\>
I]>
I^>
If count is greater than zero, severity must be GL_DONT_CARE.
If count is greater than zero, source and severity cannot be GL_DONT_CARE.
If ctx is EGL_NO_CONTEXT, surfaces must be EGL_NO_SURFACE
If ctx is not EGL_NOT_CONTEXT, draw or read must both be EGL_NO_SURFACE, or both not
If ctx is not EGL_NO_CONTEXT, surfaces must not be EGL_NO_SURFACE
If index layout qualifier is specified for a fragment output, location must also be specified.
If test
If the read buffer contains fixed-point or floating-point values, the draw buffer must as well.
If the read buffer contains fixed-point values, the draw buffer must as well.
If the read buffer contains signed integer values the draw buffer must as well.
If the read buffer contains unsigned integer values the draw buffer must as well.
If you crashed here, your aligned allocation is incorrect:
Ii>
Illegal character at fieldname start
Illegal to have non-comment, non-whitespace tokens before #version
Illegal use of reserved word
Image unit cannot be greater than or equal to the value of MAX_IMAGE_UNITS.
Image.cpp
ImageGL.cpp
ImageIndex.cpp
ImageNULL.cpp
ImageVk.cpp
ImmutableString.cpp
ImmutableStringBuilder.cpp
ImportFenceFdKHR
ImportSemaphoreFdKHR
InReadableOrder.cpp
Incompatible stream consumer type
Incompatible stream producer
Index buffer is mapped.
Index exceeds MAX_DRAW_BUFFERS.
Index exceeds MAX_VERTEX_ATTRIBS.
Index exceeds program active uniform count.
Index expression must be constant
Index must be less than the value of SAMPLES.
IndexRangeCache.cpp
Indicating meta-layer-specific component_layers, but also defining layer library path.  Both are not compatible, so skipping this layer
Indicating meta-layer-specific component_layers, but using older JSON file version.
Indices are out of the start, end range.
Infinity divided by infinity during constant folding generated NaN
InfoSink.cpp
Initialization of an object could not be completed for implementation-specific reasons.
Initialize.cpp
InitializeDll.cpp
InitializePoolIndex()
InitializeVariables.cpp
Initializers must match:
Input buffer overflow
Input primitive type is not specified in the geometry shader.
Input.cpp
Insert instance layer %s (%s)
Inserted device layer %s (%s)
Instance Extension: %s (%s) version %s
Insufficient buffer size.
Integer overflow
Integer overflow on line number
Integer overflow when computing the product of local_size_x,
Integer overflow when validating copy offsets.
Integer overflow when validating same buffer copy.
Integer overflow.
Intel
Intel or NVIDIA OpenGL ES drivers are not supported.
IntermNode.cpp
IntermNodePatternMatcher.cpp
IntermNode_util.cpp
IntermTraverse.cpp
Intermediate.cpp
Internal Error
Internal GLES 1 shader compile failed. Info log:
Internal GLES 1 shader link failed. Info log:
Internal OpenGL error:
Internal Vulkan bufffer could not be released. This is likely due to having extra images defined in the Texture.
Internal Vulkan error:
Internal error linking Vulkan shaders:
Internal error parsing Vulkan fragment shader:
Internal error parsing Vulkan vertex shader:
Internal format is not renderable.
Internalformat is one of the unsupported unsized base internalformats.
Interpolation and auxiliary storage qualifiers must match:
Interpolation type
Invalid (negative) numPaths.
Invalid Attachment Type.
Invalid Context attribute.
Invalid YUV plane count
Invalid access bits when mapping buffer for reading: 0x
Invalid access bits: 0x
Invalid attachment when the default framebuffer is bound.
Invalid attrib_list parameter
Invalid attribute
Invalid automatic trim attribute
Invalid blend equation.
Invalid blend function.
Invalid blit filter.
Invalid blit mask.
Invalid bufSize.
Invalid buffer target
Invalid buffer target enum.
Invalid buffer usage enum.
Invalid buffer value
Invalid cache resize mode.
Invalid client vertex array type.
Invalid clip plane.
Invalid color buffer type
Invalid combination of format, type and internalFormat.
Invalid command.
Invalid components.
Invalid compressed format dimension.
Invalid condition
Invalid context attribute.
Invalid coordinate type.
Invalid cover mode.
Invalid debug severity.
Invalid debug source.
Invalid debug type.
Invalid destination texture type.
Invalid device parameter
Invalid device_type parameter
Invalid draw mode.
Invalid end caps.
Invalid enum.
Invalid expression
Invalid fence object.
Invalid fill mode.
Invalid fog density (must be nonnegative).
Invalid fog mode.
Invalid fog parameter.
Invalid format and type combination.
Invalid format.
Invalid framebuffer operation.
Invalid framebuffer target.
Invalid gen mode.
Invalid identifier.
Invalid index:
Invalid init declaration
Invalid internal format.
Invalid join style.
Invalid light model parameter.
Invalid light parameter.
Invalid light.
Invalid logical operation.
Invalid mask bits.
Invalid material face.
Invalid material parameter.
Invalid matrix mode.
Invalid matrix.
Invalid memory barrier bit.
Invalid miter limit.
Invalid multisample resolve type.
Invalid name.
Invalid number of commands.
Invalid number of coordinates.
Invalid operation for arrays
Invalid operation for interface blocks
Invalid operation for structs
Invalid operation for variables with an opaque type
Invalid operation for variables with writeonly
Invalid operation on multisampled framebuffer
Invalid operation.
Invalid operator
Invalid or unsupported precision type.
Invalid or unsupported texture target.
Invalid parameter for 2D multisampled textures.
Invalid parameter name for framebuffer attachment.
Invalid parameter qualifier
Invalid path name type.
Invalid path parameter.
Invalid plane count
Invalid plane offset
Invalid plane specified
Invalid platform method count:
Invalid platform method name:
Invalid pname.
Invalid pname: 0x
Invalid point parameter value (must be non-negative).
Invalid point parameter.
Invalid point size (must be positive).
Invalid pointer query.
Invalid primitive mode.
Invalid program binary format.
Invalid program binary version.
Invalid program cache attribute.
Invalid program interface.
Invalid program interface: 0x
Invalid program key size.
Invalid projection matrix. Left/right, top/bottom, near/far intervals cannot be zero, and near/far cannot be less than zero.
Invalid prop.
Invalid propCount.
Invalid query Id.
Invalid query target.
Invalid query type.
Invalid range.
Invalid relational operator
Invalid renderbuffer internalformat.
Invalid renderbuffer target.
Invalid semantics value
Invalid shader binary format.
Invalid shader type.
Invalid shading model.
Invalid source texture height or width.
Invalid source texture level.
Invalid stencil bit mask.
Invalid stencil.
Invalid storage class semantics value
Invalid stream
Invalid stream attribute
Invalid stream consumer type
Invalid stream state
Invalid stride for built-in vertex attribute.
Invalid stroke width.
Invalid subresource index
Invalid surface attribute.
Invalid swap behaviour.
Invalid sync object.
Invalid target.
Invalid texture combine mode.
Invalid texture combine operand.
Invalid texture combine source.
Invalid texture dimensions.
Invalid texture environment mode.
Invalid texture environment parameter.
Invalid texture environment scale.
Invalid texture environment target.
Invalid texture target and format combination.
Invalid texture unit
Invalid transformation.
Invalid type for built-in vertex attribute.
Invalid type for loop index
Invalid type, should be integer
Invalid type.
Invalid uniform location
Invalid value for EGL_EXPERIMENTAL_PRESENT_PATH_ANGLE
Invalid value for EGL_PLATFORM_ANGLE_CONTEXT_VIRTUALIZATION_ANGLE attrib
Invalid value for EGL_PLATFORM_ANGLE_DEVICE_TYPE_ANGLE attrib
Invalid value for EGL_TEXTURE_FORMAT
Invalid value for EGL_TEXTURE_TARGET
Invalid value, expected GL_FALSE or GL_TRUE:
Invalid value.
Invalid visual ID requested.
Invalid width.
Invalid wrap mode for texture type.
Invariance
Invariant Declaration:
IsASTDepthBelowLimit.cpp
IsAssignment(TOperator)
It is a undefined behaviour to render without vertex shader stage or fragment shader stage.
It is an error to use gl_WorkGroupSize before declaring the local group size
It is invalid to change default FBO's attachments
It is undefined behavior to use a pixel pack buffer that is bound for transform feedback.
It is undefined behavior to use a pixel unpack buffer that is bound for transform feedback.
It is undefined behavior to use a vertex buffer that is bound for transform feedback.
It is undefined behavior to use an element array buffer that is bound for transform feedback.
It is undefined behavior to use an uniform buffer that is bound for transform feedback.
It is undefined behaviour to have a used but unbound uniform buffer.
It is undefined behaviour to use a uniform buffer that is too small.
Ith value does not match COLOR_ATTACHMENTi or NONE
J
J".
J7
J7<
J8
JG>
JM>
Jan
January
Jd7
Jg5
Jr7
Jul
July
Jun
June
Jz.
K
K(
K24
K4/
K7
K8
KD=
KHR_gl_renderbuffer_image not supported.
KHR_gl_texture_2D_image not supported.
KHR_gl_texture_3D_image not supported.
KHR_gl_texture_cubemap_image not supported.
KL>
KM>
KN2
KN>
KO>
KP>
KQ>
KR>
KS>
K]7
Kf>
Kl>
Kp,
L
L6
L7
L8
L>@
L?@
L@@
LA@
LAYOUT
LB@
LC@
LD@
LE@
LEFT_ANGLE
LEFT_ASSIGN
LEFT_BRACE
LEFT_BRACKET
LEFT_OP
LEFT_PAREN
LE_OP
LN7
LN9
LOW_PRECISION
LU7
L\>
L_7
Label length is larger than GL_MAX_LABEL_LENGTH.
Latency must be positive
Layer "%s" using deprecated 'vkGetDeviceProcAddr' tag which was deprecated starting with JSON file version 1.1.0.  Instead, use the new vkNegotiateLayerInterfaceVersion function to return the GetDeviceProcAddr function for this layer.
Layer "%s" using deprecated 'vkGetInstanceProcAddr' tag which was deprecated starting with JSON file version 1.1.0.  Instead, use the new vkNegotiateLayerInterfaceVersion function to return the GetInstanceProcAddr function for this layer.
Layer invalid for framebuffer texture attachment.
Layer missing both library_path and component_layers fields.  One or the other MUST be defined.  Skipping this layer
Layout qualification must match:
Layout qualifier
Le>
Level of detail outside of range.
Lexer.cpp
Light parameter out of range.
Linear blit not supported in this extension.
Link.cpp
Linked
Linker Objects
Linker: LLD 8.0.0 (trunk 344066)
Linking
Lj>
Loader Message
Loading layer library %s
Local variables can only use the const storage qualifier.
Location cannot be less than 0.
Location exceeds max varying.
Location layout qualifier
Location lengths must not be greater than 1024 characters.
Location must be less than (MAX_VERTEX_UNIFORM_VECTORS + MAX_FRAGMENT_UNIFORM_VECTORS) * 4
Location name lengths must not be greater than 256 characters.
Location of variable
LogGLDebugMessage
LogGLDebugMessage(unsigned int, unsigned int, unsigned int, unsigned int, int, char const*, void const*)
Logger.cpp
LoggingAnnotator.cpp
Loop Body
Loop Condition
Loop Terminal Expression
Loop index cannot be compared with non-constant expression
Loop index cannot be initialized with non-constant expression
Loop index cannot be modified by non-constant expression
Loop index cannot be statically assigned to within the body of the loop
Loop with condition
Low
LunarG Standard Validation Layer
M
M!>
M,>
M7
M8
M:
M>
MAX_COMPUTE_WORK_GROUP_INVOCATIONS.
MAX_NUM_ACTIVE_VARIABLES requires a buffer or block interface.
MAX_TEXTURE_IMAGE_UNITS
MEDIUM_PRECISION
MOD_ASSIGN
MQ/
MUL_ASSIGN
MV7
M\7
M`7
Macro redefined; different argument names:
Macro redefined; different number of arguments:
Macro redefined; different substitutions:
Macro.cpp
MacroExpander.cpp
MakeStaticString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
MakeStaticString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)::strings
Map buffer extension not available.
Map buffer range extension not available.
Mapped range does not fit into buffer dimensions.
Mapping of a memory object has failed.
Mar
March
Marker
MaskNumber cannot be greater than or equal to the value of MAX_SAMPLE_MASK_WORDS.
Material parameter out of range.
Matrix Packing
May
Mc7
Md>
Medium
Memory qualifiers must match:
MemoryBarrierAtomicCounter
MemoryBuffer.cpp
MemoryProgramCache.cpp
MergeValidationCachesEXT
Message length is larger than GL_MAX_DEBUG_MESSAGE_LENGTH.
Meta-layer %s all %d component layers appear to be valid.
Meta-layer %s can't find component layer %s at index %d.  Skipping this layer.
Meta-layer %s can't find property for component layer %s at index %d.  Skipping this layer.
Meta-layer %s component layer %s adding device extension %s
Meta-layer %s component layer %s adding instance extension %s
Meta-layer %s component layer %s can not find all component layers.  Skipping this layer.
Meta-layer %s lists itself in its component layer list at index %d.  Skipping this layer.
Meta-layer uses API version %d.%d, but component layer %d uses API version %d.%d.  Skipping this layer.
Mip level invalid for framebuffer texture attachment.
Mipmap level must be 0 when attaching a texture.
Missing a valid input primitive declaration before declaring an unsized array input
Missing condition
Missing entry point: Each stage requires one entry point
Missing expression
Missing init declaration
Missing main()
Missing program object
Missing read attachment.
Missing required attribute for EGL_IOSURFACE
Missing shader object
Mon
Monday
Multiple function bodies in multiple compilation units for the same signature in the same stage:
Multiple planes bound to same texture object
Multiple uniforms bound to location
Multisampled depth/stencil blit is not supported by this extension.
Must have element array buffer binding.
Must specify a valid 3D texture destination target
Must specify major version if you specify a minor version.
N
N10__cxxabiv116__shim_type_infoE
N10__cxxabiv117__class_type_infoE
N10__cxxabiv120__si_class_type_infoE
N10__cxxabiv121__vmi_class_type_infoE
N7
N8
N:
NE_OP
NONPRIVATE
NONUNIFORM
NOPERSPECTIVE
NOTE:
NP/
NQ7
NR7
NSt3__110__stdinbufIcEE
NSt3__110__stdinbufIwEE
NSt3__110__time_putE
NSt3__110ctype_baseE
NSt3__110money_baseE
NSt3__110moneypunctIcLb0EEE
NSt3__110moneypunctIcLb1EEE
NSt3__110moneypunctIwLb0EEE
NSt3__110moneypunctIwLb1EEE
NSt3__111__money_getIcEE
NSt3__111__money_getIwEE
NSt3__111__money_putIcEE
NSt3__111__money_putIwEE
NSt3__111__stdoutbufIcEE
NSt3__111__stdoutbufIwEE
NSt3__112__do_messageE
NSt3__112codecvt_baseE
NSt3__112system_errorE
NSt3__113basic_istreamIcNS_11char_traitsIcEEEE
NSt3__113basic_istreamIwNS_11char_traitsIwEEEE
NSt3__113basic_ostreamIcNS_11char_traitsIcEEEE
NSt3__113basic_ostreamIwNS_11char_traitsIwEEEE
NSt3__113messages_baseE
NSt3__114__num_get_baseE
NSt3__114__num_put_baseE
NSt3__114__shared_countE
NSt3__114error_categoryE
NSt3__115basic_streambufIcNS_11char_traitsIcEEEE
NSt3__115basic_streambufIwNS_11char_traitsIwEEEE
NSt3__116__narrow_to_utf8ILm32EEE
NSt3__117__widen_from_utf8ILm32EEE
NSt3__119__iostream_categoryE
NSt3__120__time_get_c_storageIcEE
NSt3__120__time_get_c_storageIwEE
NSt3__15ctypeIcEE
NSt3__15ctypeIwEE
NSt3__16locale5__impE
NSt3__16locale5facetE
NSt3__17codecvtIDic11__mbstate_tEE
NSt3__17codecvtIDsc11__mbstate_tEE
NSt3__17codecvtIcc11__mbstate_tEE
NSt3__17codecvtIwc11__mbstate_tEE
NSt3__17collateIcEE
NSt3__17collateIwEE
NSt3__17num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEE
NSt3__17num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEE
NSt3__17num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEE
NSt3__17num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEE
NSt3__18ios_baseE
NSt3__18messagesIcEE
NSt3__18messagesIwEE
NSt3__18numpunctIcEE
NSt3__18numpunctIwEE
NSt3__18time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEE
NSt3__18time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEE
NSt3__18time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEE
NSt3__18time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEE
NSt3__19__num_getIcEE
NSt3__19__num_getIwEE
NSt3__19__num_putIcEE
NSt3__19__num_putIwEE
NSt3__19basic_iosIcNS_11char_traitsIcEEEE
NSt3__19basic_iosIwNS_11char_traitsIwEEEE
NSt3__19money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEE
NSt3__19money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEE
NSt3__19money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEE
NSt3__19money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEE
NSt3__19time_baseE
NULL pointer passed into vkGetPhysicalDeviceSurfaceCapabilitiesKHR for pSurfaceCapabilities!
NULL pointer passed into vkGetPhysicalDeviceSurfaceFormatsKHR for pSurfaceFormatCount!
NULL pointer passed into vkGetPhysicalDeviceSurfacePresentModesKHR for pPresentModeCount!
NULL pointer passed into vkGetPhysicalDeviceSurfaceSupportKHR for pSupported!
NVCtrl.c
NVIDIA
N_>
Name conflicts between a uniform and an attribute:
Name contains invalid characters.
Name of a built-in function cannot be redeclared as function
NameEmbeddedUniformStructs.cpp
Nc>
Near value cannot be greater than far.
Need to map buffer for either reading or writing.
Negate conditional
Negate value
Negative buffer size.
Negative count.
Negative index value.
Negative length.
Negative maxcount.
Negative modulus operator operand encountered during constant folding. Results are undefined.
Negative number of attachments.
Negative offset.
Negative value overflow.
Neither NV_EGL_stream_consumer_external nor GL_OES_EGL_image_external extensions enabled
Neither a front-end constant nor a spec constant.
Next token is
Nn7
No GL context current to calling thread.
No active compute shader stage in this program.
No active geometry shader stage in this program.
No active program for the compute shader stage.
No active read framebuffer.
No buffer bound to target
No coefficients array given.
No commands array given.
No compiled fragment shader when at least one graphics shader is attached.
No compiled vertex shader when at least one graphics shader is attached.
No coordinate array given.
No defined conversion between clear value and attachment format.
No element array buffer and no pointer.
No errors.  No code generation or linking was requested.
No external texture bound
No external texture bound at one or more specified texture units
No function definition (body) found:
No image internal format specified
No local work group size specified
No loop body
No loop condition
No name given.
No native support for sync queries.
No num_views specified
No path name array.
No precision specified
No precision specified (int)
No precision specified for (float)
No program binary formats supported.
No such binding.
No such path object.
No such path or path has no data.
No texture bound.
No transform array given.
No value array.
No*
Non-L-value cannot be passed for 'out' or 'inout' parameters.
Non-constant-index-expression
Non-write buffer mapping not supported.
Not a valid compressed texture format
Not a valid texture object name.
Not all planes specified
Not an allowed prop for interface
Not enough arguments for macro
Not enough space in bound transform feedback buffers.
Not initialized.
NotEqual
Note: Additional non-conformant packing restrictions are enforced on D3D9.
Notification
Nov
November
Now at end of input.
Number of constructor parameters does not match the number of structure fields
Number of views does not match the previous declaration
N|<
O
O7
O8
O?7
OES_compressed_EAC_R11_signed_texture
OES_compressed_EAC_R11_unsigned_texture
OES_compressed_EAC_RG11_signed_texture
OES_compressed_EAC_RG11_unsigned_texture
OES_compressed_ETC2_RGB8_texture
OES_compressed_ETC2_RGBA8_texture
OES_compressed_ETC2_punchthroughA_RGBA8_texture
OES_compressed_ETC2_punchthroughA_sRGB8_alpha_texture
OES_compressed_ETC2_sRGB8_alpha8_texture
OES_compressed_ETC2_sRGB8_texture
O[7
Ob>
Object cannot be used because it has not been generated.
Observer.cpp
Oct
October
Offset layout qualilfier
Offset must be a multiple of the passed in datatype.
Offset must be a multiple of the size, in basic machine units, of uint
Offset overlapping
Only NONE or BACK are valid values when drawing to the default framebuffer
Only UNSIGNED_SHORT and UNSIGNED_BYTE types are supported.
Only allowed with shader storage blocks, variables declared within shader storage blocks and variables declared as image types.
Only nearest filtering can be used when blitting buffers other than the color buffer.
Only one push_constant block is allowed per stage
Only std140 layout is allowed in WebGL
Only whole-buffer blit is supported from a multisampled read buffer in this extension.
Only whole-buffer depth and stencil blits are supported by this extension.
OpenGL
OpenGL ES
OpenGL ES 2.0 is not supportable.
OpenGL ES 3.0 Required.
OpenGL ES 3.1 Required
OpenGL ES GLSL ES
OpenGL platform is unsupported.
OpenGL_ES
Operator.cpp
Other
Other query is active
Out of memory.
Output layout location specified multiple times.
Output primitive type is not specified in the geometry shader.
OutputESSL.cpp
OutputGLSL.cpp
OutputGLSLBase.cpp
OutputTree.cpp
OutputVulkanGLSL.cpp
P
P-=
P5
P6
P7
P8
PACKED
PATCH
PAYLOADINNV
PAYLOADNV
PERCENT
PERF
PERPRIMITIVENV
PERTASKNV
PERVERTEXNV
PERVIEWNV
PLUS
PM
PMurHash.cpp
PO7
PQ7
PRECISE
PROGRAM_SEPARABLE is not supported before GLES 3.1
PX>
Pa>
PackDouble2x32
PackSnorm4x8
PackUnorm4x8
PackedEGLEnums_autogen.cpp
PackedEnums.cpp
PackedGLEnums_autogen.cpp
Parameter outside of bounds.
Params less than 0 or greater than GL_MAX_FRAMEBUFFER_HEIGHT.
Params less than 0 or greater than GL_MAX_FRAMEBUFFER_SAMPLES.
Params less than 0 or greater than GL_MAX_FRAMEBUFFER_WIDTH.
ParseContext.cpp
ParseContextBase.cpp
ParseHelper.cpp
Passed in texture target and format must match the one originally used to define the texture.
PatchVertices
Path.cpp
PathGL.cpp
PathNULL.cpp
PbufferSurfaceGLX.cpp
Performance
Pixel data cannot be null.
Pixel data must be null.
Pixel pack buffer is mapped.
Pixel unpack buffer is mapped.
Plane count must be 0 for RGB buffer
Planes cannot be specified
Platform ANGLE extension is not active
Platform Device extension is not active
Platform.cpp
Pname must be SAMPLE_POSITION.
PoolAlloc.cpp
PoolIndex
Portability
Positive sign
Possible extensions include:
Post-Decrement
Post-Increment
Pp.cpp
PpAtom.cpp
PpContext.cpp
PpScanner.cpp
PpTokens.cpp
Pre-Decrement
Pre-Increment
Precision
Precision emulation not supported for this output type.
Precision qualifiers have to be after interpolation qualifiers.
Precision qualifiers have to be after layout qualifiers.
Precision qualifiers have to be after memory qualifiers.
Precision qualifiers have to be after storage qualifiers.
Precision qualifiers must match:
Preprocessor.cpp
Presence of invariant qualifier must match:
Presence of precise qualifier must match:
Present mode
Primcount must be greater than or equal to zero.
Primitive mode is incompatible with the input primitive type of the geometry shader.
Problem accessing layer value %s in manifest JSON file, skipping this layer
Problem accessing layer value library_path in manifest JSON file, skipping this layer
Program binary format is not valid.
Program binary not accessible.
Program binary too large or changed during access.
Program doesn't exist.
Program has not been successfully linked.
Program index out of range.
Program is not successfully linked.
Program link or binary loading failed with no info log.
Program link or binary loading failed:
Program not linked.
Program object expected.
Program.cpp
ProgramGL.cpp
ProgramLinkedResources.cpp
ProgramNULL.cpp
ProgramPipeline.cpp
ProgramPipelineGL.cpp
ProgramPipelineNULL.cpp
ProgramPipelineVk.cpp
ProgramVk.cpp
PruneEmptyCases.cpp
PruneNoOps.cpp
Pt7
Pure virtual function called!
Q
Q !
Q 5
Q/
Q7
Q8
QR7
QUESTION
QUEUEFAMILYCOHERENT
QW>
QZ5
Q`>
Qj>
Qk>
Qn'
Qualcomm
QualifierTypes.cpp
Query extension not enabled.
Query id is 0
Query is active.
Query target not active
Query type does not match target
Query.cpp
QueryGL.cpp
QueryImpl.cpp
QueryNULL.cpp
QueryVk.cpp
Querying GL_PROGRAM_BINARY_LENGTH requires GL_OES_get_program_binary or ES 3.0.
QueueBeginDebugUtilsLabelEXT
QueueEndDebugUtilsLabelEXT
QueueInsertDebugUtilsLabelEXT
R
R2
R5
R7
R8
READONLY
RESOURCE
RESTRICT
RETURN
RIGHT_ANGLE
RIGHT_ASSIGN
RIGHT_BRACE
RIGHT_BRACKET
RIGHT_OP
RIGHT_PAREN
RR4
RZ>
Ra=
Reaching warning limit for cache load failures, silencing subsequent warnings.
Read and draw framebuffers must both exist for a blit to succeed.
Read and write color attachments cannot be the same image.
Read and write depth stencil attachments cannot be the same image.
Read buffer is GL_NONE.
Reading a token:
Reads would overflow the pixel unpack buffer.
RecordConstantPrecision.cpp
Rectangle texture cannot have a compressed format.
Recursion detected:
Recursive function call in the following call chain:
Reducing stack by rule %d (line %lu):
Reference of struct type
RegenerateStructNames.cpp
RegisterDeviceEventEXT
RegisterDisplayEventEXT
RegisterObjectsNVX
ReleaseDisplayEXT
RemoveArrayLengthMethod.cpp
RemoveInvariantDeclaration.cpp
RemovePow.cpp
RemoveTree.cpp
RemoveUnreferencedVariables.cpp
Removing meta-layer %s from instance layer list since it appears invalid.
RenderTargetVk.cpp
Renderbuffer width and height cannot be negative and cannot exceed maximum texture size.
Renderbuffer.cpp
RenderbufferGL.cpp
RenderbufferNULL.cpp
RenderbufferVk.cpp
RendererGL.cpp
RendererVk.cpp
ReplaceVariable.cpp
Requested
Requested GLES version is not supported.
Requested color attachment is greater than the maximum supported color attachments
Requires both binding and offset
ResType
Reserved word.
ResourceLimits.cpp
ResourceManager.cpp
RewriteAtomicFunctionExpressions.cpp
RewriteDoWhile.cpp
RewriteRepeatedAssignToSwizzled.cpp
RewriteStructSamplers.cpp
RewriteTexelFetchOffset.cpp
RewriteUnaryMinusOperatorFloat.cpp
RewriteUnaryMinusOperatorInt.cpp
RunAtTheEndOfShader.cpp
S
S1:
S7
S8
SAMPLE
SAMPLER
SAMPLEREXTERNALOES
SAMPLERSHADOW
SEMICOLON
SHADER_STORAGE_BLOCKS
SHADER_STORAGE_BUFFER is not supported in GLES3.
SHARED
SLASH
SMOOTH
SPIR-V requires location for user input/output
SPV_EXT_descriptor_indexing
SPV_EXT_shader_stencil_export
SPV_EXT_shader_viewport_index_layer
SPV_GOOGLE_hlsl_functionality1
SPV_KHR_16bit_storage
SPV_KHR_8bit_storage
SPV_KHR_device_group
SPV_KHR_multiview
SPV_KHR_post_depth_coverage
SPV_KHR_shader_atomic_counter_ops
SPV_KHR_shader_ballot
SPV_KHR_shader_draw_parameters
SPV_KHR_storage_buffer_storage_class
SPV_KHR_subgroup_vote
SPV_KHR_vulkan_memory_model
ST(
STAR
STDGL
STRUCT
SUBGROUPCOHERENT
SUBROUTINE
SUB_ASSIGN
SUPERP
SWITCH
SampleId
Sampler is not valid
Sampler.cpp
SamplerGL.cpp
SamplerNULL.cpp
SamplerVk.cpp
Samplers of conflicting types refer to the same texture image unit (
Samples may not be zero.
Samples must not be greater than maximum supported value for the format.
Sat
Saturday
Saving program binary with transform feedback, which is not supported on this driver.
ScalarizeVecAndMatConstructorArgs.cpp
Scaling and flipping in BlitFramebufferANGLE not supported by this implementation.
Scan.cpp
ScopedVkLoaderEnvironment
Searching for ICD drivers named %s, using default dir %s
Searching the following path for manifest files: %s
Searching the following paths for manifest files: %s
Semantics must include exactly one of gl_SemanticsRelease, gl_SemanticsAcquire, or gl_SemanticsAcquireRelease
Semantics must not include multiple of gl_SemanticsRelease, gl_SemanticsAcquire, or gl_SemanticsAcquireRelease
Sep
SeparateDeclarations.cpp
September
Sequence
Serialize
SetDebugUtilsObjectNameEXT
SetDebugUtilsObjectTagEXT
SetGlobalPoolAllocator(TPoolAllocator*)
SetHdrMetadataEXT
SetTLSValue(unsigned int, void*)
ShFinalize
ShInitialize
Shader Compiler
Shader attachment already has a shader.
Shader compilation failed with no info log.
Shader object expected.
Shader source contains invalid characters.
Shader storage buffers are not supported in this version of GL
Shader to be detached must be currently attached to the program.
Shader version:
Shader.cpp
ShaderGL.cpp
ShaderLang.cpp
ShaderNULL.cpp
ShaderVars.cpp
ShaderVk.cpp
Shared memory declarations cannot have layout specified
Shifting
ShouldApplyLastRowPaddingWorkaround
Si,
Sign
SimplifyLoopConditions.cpp
Simultaneous use of GL_CONSTANT_ALPHA/GL_ONE_MINUS_CONSTANT_ALPHA and GL_CONSTANT_COLOR/GL_ONE_MINUS_CONSTANT_COLOR not supported by this implementation.
Size for built-in vertex attribute is outside allowed range.
Sized GL_RGB32F internal format requires GL_CHROMIUM_color_buffer_float_rgb
Sized GL_RGBA32F internal format requires GL_CHROMIUM_color_buffer_float_rgba
SizedInternalformat must be color-renderable, depth-renderable, or stencil-renderable.
Skipping manifest file %s - The file has already been read once
Skipping manifest file %s, file name must end in .json
Sm>
Source entry point must be "main"
Source texture a valid texture type.
Source texture internal format is invalid.
Source texture is not a valid texture object.
Source texture level is not valid.
Source texture must be of type GL_TEXTURE_2D.
Source texture must have a compressed internal format.
Source texture must level 0 defined.
Specified unit must be in [GL_TEXTURE0, GL_TEXTURE0 + GL_MAX_COMBINED_IMAGE_UNITS)
Specified unit must be in [GL_TEXTURE0, GL_TEXTURE0 + GL_MAX_TEXTURE_UNITS)
SplitSequenceOperator.cpp
SpvBuilder.cpp
SpvPostProcess.cpp
St11logic_error
St12length_error
St12out_of_range
St13bad_exception
St13runtime_error
St14overflow_error
St8bad_cast
St9bad_alloc
St9exception
St9type_info
Stack now
Stack overflow.
Stack size increased to %lu
Stack underflow.
StageName
Starting parse
State.cpp
StateManagerGL.cpp
Stencil reference and mask values must be the same for front facing and back facing triangles.
Storage class semantics must not be zero
Storage qualifiers have to be after interpolation qualifiers.
Storage qualifiers have to be after layout qualifiers.
Storage qualifiers must match:
Str(int)
Stream consumer extension not active
Stream extension not active
Stream not fully configured
Stream not in connecting state
Stream producer extension not active
Stream.cpp
Stride is over the maximum stride allowed by WebGL.
Stride must be a multiple of the passed in datatype.
Struct cannot be captured directly (
Struct nesting
Structure constructor arguments do not match structure fields
Structure name
SubGroupEqMask
SubGroupGeMask
SubGroupGtMask
SubGroupInvocation
SubGroupLeMask
SubGroupLtMask
SubGroupSize
Sun
Sunday
Surface cannot be EGL_NO_SURFACE.
Surface does not support EGL_MULTISAMPLE_RESOLVE_BOX.
Surface does not support EGL_SWAP_BEHAVIOR_PRESERVED.
Surface types are not compatible.
Surface.cpp
SurfaceGL.cpp
SurfaceImpl.cpp
SurfaceNULL.cpp
SurfaceVk.cpp
Swap surface cannot be EGL_NO_SURFACE.
Switch
Sx=
Symbol.cpp
SymbolTable.cpp
SymbolTable_autogen.cpp
SymbolUniqueId.cpp
Sync objects are unimplemented.
SyncGL.cpp
SyncNULL.cpp
SyncVk.cpp
SystemInfo.cpp
SystemInfo_libpci.cpp
SystemInfo_linux.cpp
SystemInfo_x11.cpp
S|<
T
T!!
T4/
T6
T7
T8
T>
T>@
T?@
T@@
TA@
TB@
TBD
TC@
TCompiler::getAsCompiler()
TCompiler::getInfoSink()
TCompiler::linkable()
TD@
TE@
TILDE
TIntermNode::getAsAggregate()
TIntermNode::getAsAggregate() const
TIntermNode::getAsBinaryNode()
TIntermNode::getAsBinaryNode() const
TIntermNode::getAsBranchNode()
TIntermNode::getAsBranchNode() const
TIntermNode::getAsConstantUnion()
TIntermNode::getAsConstantUnion() const
TIntermNode::getAsLoopNode()
TIntermNode::getAsLoopNode() const
TIntermNode::getAsMethodNode()
TIntermNode::getAsMethodNode() const
TIntermNode::getAsOperator()
TIntermNode::getAsOperator() const
TIntermNode::getAsSelectionNode()
TIntermNode::getAsSelectionNode() const
TIntermNode::getAsSwitchNode()
TIntermNode::getAsSwitchNode() const
TIntermNode::getAsSymbolNode()
TIntermNode::getAsSymbolNode() const
TIntermNode::getAsTyped()
TIntermNode::getAsTyped() const
TIntermNode::getAsUnaryNode()
TIntermNode::getAsUnaryNode() const
TIntermNode::getLoc() const
TIntermNode::setLoc(glslang::TSourceLoc const&)
TIntermNode::~TIntermNode()
TM7
TPoolAllocator::TPoolAllocator(int, int)
TPoolAllocator::allocate(unsigned long)
TPoolAllocator::lock()
TPoolAllocator::pop()
TPoolAllocator::popAll()
TPoolAllocator::push()
TPoolAllocator::unlock()
TPoolAllocator::~TPoolAllocator()
TS7
TShHandleBase::getAsCompiler()
TShHandleBase::getAsLinker()
TShHandleBase::getAsUniformMap()
TShHandleBase::getPool() const
TShHandleBase::~TShHandleBase()
TYPE_NAME
T]>
Target must be TEXTURE_2D_MULTISAMPLE.
Target must be TEXTURE_2D_MULTISAMPLE_ARRAY_OES.
Temporary
Ternary selection
Test condition and select
Textarget must match the texture target type.
Texture component must be a constant expression
Texture filter not recognized.
Texture format does not support mipmap generation.
Texture is not a three-dimensional or two-dimensionsal array texture.
Texture is not cubemap complete. All cubemaps faces must be defined and be the same size.
Texture is null
Texture level does not exist.
Texture level must be zero.
Texture offset must be a constant expression
Texture offset value out of valid range
Texture only supports NEAREST and LINEAR filtering.
Texture target requires at least OpenGL ES 3.1.
Texture was not generated
Texture wrap mode not recognized.
Texture's target must be GL_TEXTURE_2D.
Texture's target must be GL_TEXTURE_2D_ARRAY.
Texture.cpp
TextureGL.cpp
TextureImpl.cpp
TextureNULL.cpp
TextureVk.cpp
The active program has specified no output variables to record.
The active read framebuffer object has multiview attachments.
The attached geometry shader isn't compiled.
The current context doesn't support setting a non-zero divisor on the attribute with index zero. Please reorder the attributes in your vertex shader so that attribute zero can have a zero divisor.
The destination level of the destination texture must be defined.
The display used by a swapchain does not use the same presentable image layout, or is incompatible in a way that prevents sharing an image.
The draw command is unsupported when transform feedback is active and not paused.
The explicit flushing bit may only be set if the buffer is mapped for writing.
The following extension must be enabled to use this feature:
The interpolation qualifier specified multiple times.
The invariant qualifier has to be first in the expression.
The invariant qualifier specified multiple times.
The layout qualifier and invariant qualifier cannot coexist in the same declaration according to the grammar.
The layout qualifier specified multiple times.
The logical or physical device has been lost.
The number of views in the active draw framebuffer is greater than 1.
The number of views in the active program and draw framebuffer does not match.
The precision qualifier specified multiple times.
The provided parameters overflow with the provided buffer.
The requested version of Vulkan is not supported by the driver or is otherwise incompatible for implementation-specific reasons.
The requested window is already connected to a VkSurfaceKHR, or to some other non-Vulkan API.
The source level of the source texture must be defined.
The specified dimensions are outside of the bounds of the texture.
The std430 layout is supported only for shader storage blocks.
The sum of the number of active image uniforms, active shader storage blocks and active fragment shader outputs exceeds MAX_COMBINED_SHADER_OUTPUT_RESOURCES (
The sum of the number of active shader storage blocks exceeds MAX_COMBINED_SHADER_STORAGE_BLOCKS (
The sum of the number of active uniform blocks exceeds MAX_COMBINED_UNIFORM_BLOCKS (
The texture is a non-power-of-two texture.
The total number of invocations within a work group exceeds
The validation layers detected invalid API usage.
The value of TEXTURE_IMMUTABLE_FORMAT for the texture currently bound to target on the active texture unit is true.
The value passed to the mem argument of an atomic memory function does not correspond to a buffer or shared variable.
The visual of native_window doesn't match the visual given with ANGLE_X11_VISUAL_ID
There is an active query for target GL_TIME_ELAPSED_EXT when the number of views in the active draw framebuffer is greater than 1.
There is an active transform feedback object when the number of views in the active draw framebuffer is greater than 1.
Third Party
This ANGLE implementation does not support separate front/back stencil writemasks, reference values, or stencil mask values.
This device type requires a platform type of EGL_PLATFORM_ANGLE_TYPE_D3D9_ANGLE or EGL_PLATFORM_ANGLE_TYPE_D3D9_ANGLE.
This type of loop is not allowed
Thread.cpp
Thu
Thursday
Timeout must be positive
Timer query extension not enabled
Token.cpp
Tokenizer.cpp
Too few args in Macro
Too many args in macro
Too many arguments for macro
Too many attributes (
Too many objects of the type have already been created.
Too many vertex attributes.
Tp,
Transform feedback has a mapped buffer.
Transform feedback is already active.
Transform feedback object that does not exist.
Transform feedback varying
Transform feedback varying total components (
TransformFeedback.cpp
TransformFeedbackGL.cpp
TransformFeedbackNULL.cpp
TransformFeedbackVk.cpp
TranslatorESSL.cpp
TranslatorGLSL.cpp
TranslatorVulkan.cpp
TrimCommandPoolKHR
Tue
Tuesday
Two textures of different types use the same sampler location.
Two transform feedback varyings include the same array element (
Two transform feedback varyings specify the same output variable (
Type is INT_2_10_10_10_REV or UNSIGNED_INT_2_10_10_10_REV and size is not 4.
Types must match:
Types.cpp
T{<
U
U)5
U16VEC2
U16VEC3
U16VEC4
U32VEC2
U32VEC3
U32VEC4
U4
U64VEC2
U64VEC3
U64VEC4
U7
U8
U8VEC2
U8VEC3
U8VEC4
UIMAGE1D
UIMAGE1DARRAY
UIMAGE2D
UIMAGE2DARRAY
UIMAGE2DMS
UIMAGE2DMSARRAY
UIMAGE2DRECT
UIMAGE3D
UIMAGEBUFFER
UIMAGECUBE
UIMAGECUBEARRAY
UINT16CONSTANT
UINT16_T
UINT32CONSTANT
UINT32_T
UINT64CONSTANT
UINT64_T
UINT8_T
UINTCONSTANT
UN7
UNIFORM_BUFFERS
UNIFORM_COMPONENTS
UNIFORM_VECTORS
UNIMPLEMENTED:
UNKNOWN
UNKNOWN ERROR:
UNKOWN ERROR:
USAMPLER1D
USAMPLER1DARRAY
USAMPLER2D
USAMPLER2DARRAY
USAMPLER2DMS
USAMPLER2DMSARRAY
USAMPLER2DRECT
USAMPLER3D
USAMPLERBUFFER
USAMPLERCUBE
USAMPLERCUBEARRAY
USUBPASSINPUT
USUBPASSINPUTMS
UTEXTURE1D
UTEXTURE1DARRAY
UTEXTURE2D
UTEXTURE2DARRAY
UTEXTURE2DMS
UTEXTURE2DMSARRAY
UTEXTURE2DRECT
UTEXTURE3D
UTEXTUREBUFFER
UTEXTURECUBE
UTEXTURECUBEARRAY
UVEC2
UVEC3
UVEC4
UX5
U`7
Ud9
Unable to allocate internal buffer storage.
Unable to determine source language
Unable to parse built-ins
Unable to parse built-ins%s
Undefined behavior
Undefined function '
Undefined shift (operand out of range)
Unexpected number of components
UnfoldShortCircuitAST.cpp
Unhandled internal error:
Uniform location out of range
Uniform size does not match uniform method.
Uniform.cpp
Unknown
Unknown Stage.
Unknown attribute.
Unknown constant
Unknown enum for 'src' in ReadBuffer
Unknown error %d
Unknown error.
Unknown glslang keyword
Unknown parameter value.
Unknown platform type.
Unknown property of program interface.
Unknown vulkan error code.
Unloading layer library %s
Unpack alignment must be 1, 2, 4, or 8.
UnpackDouble2x32
UnpackSnorm4x8
UnpackUnorm4x8
Unreachable Error
UnregisterObjectsNVX
Unsigned integers are unsupported prior to GLSL ES 3.00
Unsupported GLX version (requires at least 1.3).
Unsupported internal format.
UpdateDescriptorSetWithTemplateKHR
Us>
UseInterfaceBlockFields.cpp
U~>
V
V/:
V7
V8
VARYING
VERTEX
VERTICAL_BAR
VK_EXT_debug_marker
VK_EXT_debug_report
VK_EXT_debug_utils
VK_EXT_direct_mode_display
VK_EXT_display_surface_counter
VK_EXT_swapchain_colorspace
VK_EXT_validation_flags
VK_ICD_FILENAMES
VK_INSTANCE_LAYERS
VK_KHR_device_group_creation
VK_KHR_display
VK_KHR_display extension not enabled.  vkCreateDisplayModeKHR not executed!
VK_KHR_display extension not enabled.  vkGetDisplayModePropertiesKHR not executed!
VK_KHR_display extension not enabled.  vkGetDisplayPlaneCapabilitiesKHR not executed!
VK_KHR_display extension not enabled.  vkGetDisplayPlaneSupportedDisplaysKHR not executed!
VK_KHR_display extension not enabled.  vkGetPhysicalDeviceDisplayPlanePropertiesKHR not executed!
VK_KHR_display extension not enabled.  vkGetPhysicalDeviceDisplayPropertiesKHR not executed!
VK_KHR_display_swapchain
VK_KHR_external_fence_capabilities
VK_KHR_external_memory_capabilities
VK_KHR_external_semaphore_capabilities
VK_KHR_get_display_properties2
VK_KHR_get_physical_device_properties2
VK_KHR_get_surface_capabilities2
VK_KHR_maintenance1
VK_KHR_mir_surface
VK_KHR_surface
VK_KHR_surface extension not enabled.  vkCreateDisplayPlaneSurfaceKHR not executed!
VK_KHR_surface extension not enabled.  vkGetPhysicalDeviceSurfaceCapabilitiesKHR not executed!
VK_KHR_surface extension not enabled.  vkGetPhysicalDeviceSurfaceFormatsKHR not executed!
VK_KHR_surface extension not enabled.  vkGetPhysicalDeviceSurfacePresentModesKHR not executed!
VK_KHR_surface extension not enabled.  vkGetPhysicalDeviceSurfaceSupportKHR not executed!
VK_KHR_swapchain
VK_KHR_wayland_surface
VK_KHR_xcb_surface
VK_KHR_xcb_surface extension not enabled.  vkCreateXcbSurfaceKHR not executed!
VK_KHR_xcb_surface extension not enabled.  vkGetPhysicalDeviceXcbPresentationSupportKHR not executed!
VK_KHR_xlib_surface
VK_LAYER_GOOGLE_threading
VK_LAYER_GOOGLE_unique_objects
VK_LAYER_LUNARG_core_validation
VK_LAYER_LUNARG_object_tracker
VK_LAYER_LUNARG_parameter_validation
VK_LAYER_LUNARG_standard_validation
VK_LAYER_PATH
VK_LOADER_DEBUG
VK_LOADER_DISABLE_INST_EXT_FILTER
VK_NV_external_memory_capabilities
VOID
VOLATILE
VQ/
VTT for std::__1::basic_istringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
VTT for std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
VTT for std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
VV5
VV>
ValidateBlendFuncSeparate
ValidateCreatePlatformPixmapSurfaceEXT unimplemented.
ValidateCreatePlatformWindowSurfaceEXT unimplemented.
ValidateDrawStates
ValidateEnable
ValidateGlobalInitializer.cpp
ValidateLimitations.cpp
ValidateMaxParameters.cpp
ValidateOutputs.cpp
ValidateSwitch.cpp
ValidateVaryingLocations.cpp
ValidateVertexAttribDivisorANGLE
VariablePacker.cpp
Varying '
VaryingPacking.cpp
VectorizeVectorScalarArithmetic.cpp
VersionGLSL.cpp
Versions.cpp
Vertex Attrib Bindings are not supported in this version of GL
Vertex Attrib Bindings require OpenGL ES 3.1.
Vertex attribute size must be 1, 2, 3, or 4.
Vertex buffer is not big enough for the draw call
Vertex shader input type does not match the type of the bound vertex attribute.
Vertex type not supported before OpenGL ES 3.0.
VertexArray.cpp
VertexArrayGL.cpp
VertexArrayNULL.cpp
VertexArrayVk.cpp
VertexAttribute.cpp
ViewIDOVR
Viewport size cannot be negative.
Vl*
Vm,
Vr7
Vulkan
Vulkan Mock Device
Vulkan Mock Driver was requested but Mock Device was not found. Using default physicalDevice instead.
Vulkan platform is unsupported.
Vulkan validation layers are missing.
W
W7
W8
WARNING
WARNING:
WHILE
WORKGROUPCOHERENT
WRITEONLY
WY>
W^>
Warning, (version, profile) forced to be (
Wed
Wednesday
Wh>
Width and Height are not supported for thie <buftype>
Width and Height must be positive
Width and height must be less than or equal to GL_MAX_TEXTURE_SIZE.
WindowSurfaceGLX.cpp
WindowSurfaceVkXcb.cpp
Windows
Wj,
Wk5
Work group size does not match the previous declaration
Work group size is not specified.
WorkerThread.cpp
WorkgroupMemoryBarrier
WorkgroupMemoryBarrierWithGroupSync
Writeonly value cannot be passed for 'in' or 'inout' parameters.
X
X//
X24
X6
X7
X8
XCloseDisplay
XCreateColormap
XCreateWindow
XD<
XDG_CONFIG_DIRS
XDG_DATA_DIRS
XDG_DATA_HOME
XDestroyWindow
XFlush
XFree
XFreeColormap
XG;
XGetGeometry
XGetVisualInfo
XGetWindowAttributes
XJ6
XK6
XMapWindow
XN9
XOR_ASSIGN
XOR_OP
XOpenDisplay
XQueryTree
XR7
XResizeWindow
XS7
XSetErrorHandler
XSync
XU6
Xc>
Xi,
Y
Y7
Y8
Y=<
YC7
YT>
YU>
YV7
YV>
YW>
YX>
YY>
YZ>
Y[>
Y\>
Y]7
Y]>
Y^>
Yk>
Yl7
Yp5
Ys7
Z
Z7
Z8
ZL=
ZL>
ZM>
ZP/
ZS5
ZT>
ZZ>
Z[>
Z^4
Z_7
Z`7
Zero divided by zero during constant folding generated NaN
Zero is bound to target.
Zi,
Zn'
Zt7
Z|<
[
[ UNASSIGNED-CoreValidation-Shader-PointSizeMissing ] Object: VK_NULL_HANDLE (Type = 19) | Pipeline topology is set to POINT_LIST, but PointSize is not written to in the shader corresponding to VK_SHADER_STAGE_VERTEX_BIT.
[,
[0]
[4]
[5
[7
[8
[>
[C7
[K>
[L>
[M>
[N7
[N>
[O>
[P>
[Q>
[R>
[S>
[][]
[e9
[gl_MinProgramTexelOffset, gl_MaxProgramTexelOffset]
[int(clamp(float(
[label =<
[webgl_int_clamp(
\
\ 5
\#.
\'(
\0
\6
\7
\8
\>
\>@
\?@
\@@
\A@
\B@
\C@
\D@
\E@
\O7
\Z5
\^>
\f/
\f>
\m>
\q7
]
] =
] of
])
]);
], x[
]4/
]7
]8
]L(
]M7
]U7
]`7
]e>
^
^"5
^7
^8
^=
^R4
^R>
^W:
^^
^a=
^d>
^l5
_
_".
_)(
_7
_8
_DYNAMIC
_GLOBAL_OFFSET_TABLE_
_GLOBAL__sub_I_doc.cpp
_GLOBAL__sub_I_iostream.cpp
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
_Jv_RegisterClasses
_L:
_Q/
_R7
_S7
_Unwind_DeleteException
_Unwind_GetIP
_Unwind_GetLanguageSpecificData
_Unwind_GetRegionStart
_Unwind_RaiseException
_Unwind_Resume
_Unwind_SetGR
_Unwind_SetIP
_V=
_ZGRZN5angle17GetExecutablePathEvE7exePath_
_ZGRZN5angle22GetExecutableDirectoryEvE6exeDir_
_ZZN2rx2vk6Format10initializeEP18VkPhysicalDevice_TRKN5angle6FormatEE5kInfo__10_
_ZZN2rx2vk6Format10initializeEP18VkPhysicalDevice_TRKN5angle6FormatEE5kInfo__11_
_ZZN2rx2vk6Format10initializeEP18VkPhysicalDevice_TRKN5angle6FormatEE5kInfo__12_
_ZZN2rx2vk6Format10initializeEP18VkPhysicalDevice_TRKN5angle6FormatEE5kInfo__13_
_ZZN2rx2vk6Format10initializeEP18VkPhysicalDevice_TRKN5angle6FormatEE5kInfo__14_
_ZZN2rx2vk6Format10initializeEP18VkPhysicalDevice_TRKN5angle6FormatEE5kInfo__15_
_ZZN2rx2vk6Format10initializeEP18VkPhysicalDevice_TRKN5angle6FormatEE5kInfo__16_
_ZZN2rx2vk6Format10initializeEP18VkPhysicalDevice_TRKN5angle6FormatEE5kInfo__17_
_ZZN2rx2vk6Format10initializeEP18VkPhysicalDevice_TRKN5angle6FormatEE5kInfo__18_
_ZZN2rx2vk6Format10initializeEP18VkPhysicalDevice_TRKN5angle6FormatEE5kInfo__19_
_ZZN2rx2vk6Format10initializeEP18VkPhysicalDevice_TRKN5angle6FormatEE5kInfo__20_
_ZZN2rx2vk6Format10initializeEP18VkPhysicalDevice_TRKN5angle6FormatEE5kInfo__21_
_ZZN2rx2vk6Format10initializeEP18VkPhysicalDevice_TRKN5angle6FormatEE5kInfo__22_
_ZZN2rx2vk6Format10initializeEP18VkPhysicalDevice_TRKN5angle6FormatEE5kInfo__23_
_ZZN2rx2vk6Format10initializeEP18VkPhysicalDevice_TRKN5angle6FormatEE5kInfo__24_
_ZZN2rx2vk6Format10initializeEP18VkPhysicalDevice_TRKN5angle6FormatEE5kInfo__25_
_ZZN2rx2vk6Format10initializeEP18VkPhysicalDevice_TRKN5angle6FormatEE5kInfo__26_
_ZZN2rx2vk6Format10initializeEP18VkPhysicalDevice_TRKN5angle6FormatEE5kInfo__27_
_ZZN2rx2vk6Format10initializeEP18VkPhysicalDevice_TRKN5angle6FormatEE5kInfo__28_
_ZZN2rx2vk6Format10initializeEP18VkPhysicalDevice_TRKN5angle6FormatEE5kInfo__29_
_ZZN2rx2vk6Format10initializeEP18VkPhysicalDevice_TRKN5angle6FormatEE5kInfo__30_
_ZZN2rx2vk6Format10initializeEP18VkPhysicalDevice_TRKN5angle6FormatEE5kInfo__31_
_ZZN2rx2vk6Format10initializeEP18VkPhysicalDevice_TRKN5angle6FormatEE5kInfo__32_
_ZZN2rx2vk6Format10initializeEP18VkPhysicalDevice_TRKN5angle6FormatEE5kInfo__33_
_ZZN2rx2vk6Format10initializeEP18VkPhysicalDevice_TRKN5angle6FormatEE5kInfo__34_
__FILE__
__FRAME_END__
__JCR_END__
__JCR_LIST__
__LINE__
__TMC_END__
__TMC_LIST__
__VERSION__
__bss_start
__clang_call_terminate
__ctype_get_mb_cur_max
__ctype_tolower_loc
__cxa_allocate_exception
__cxa_atexit
__cxa_begin_catch
__cxa_call_unexpected
__cxa_end_catch
__cxa_finalize
__cxa_free_exception
__cxa_get_globals
__cxa_get_globals_fast
__cxa_guard_abort
__cxa_guard_abort failed to acquire mutex
__cxa_guard_abort failed to broadcast condition variable
__cxa_guard_abort failed to release mutex
__cxa_guard_acquire
__cxa_guard_acquire condition variable wait failed
__cxa_guard_acquire failed to acquire mutex
__cxa_guard_acquire failed to release mutex
__cxa_guard_release
__cxa_guard_release failed to acquire mutex
__cxa_guard_release failed to broadcast condition variable
__cxa_guard_release failed to release mutex
__cxa_new_handler
__cxa_pure_virtual
__cxa_rethrow
__cxa_terminate_handler
__cxa_throw
__cxa_uncaught_exception
__cxa_unexpected_handler
__cxx_global_array_dtor
__cxx_global_array_dtor.113
__cxx_global_array_dtor.137
__cxx_global_array_dtor.140
__cxx_global_array_dtor.74
__cxx_global_array_dtor.750
__cxx_global_array_dtor.752
__cxx_global_array_dtor.89
__cxxabiv1::(anonymous namespace)::construct_()
__cxxabiv1::(anonymous namespace)::destruct_(void*)
__cxxabiv1::(anonymous namespace)::flag_
__cxxabiv1::(anonymous namespace)::guard_cv
__cxxabiv1::(anonymous namespace)::guard_mut
__cxxabiv1::(anonymous namespace)::key_
__cxxabiv1::__aligned_free_with_fallback(void*)
__cxxabiv1::__aligned_malloc_with_fallback(unsigned long)
__cxxabiv1::__array_type_info::~__array_type_info()
__cxxabiv1::__calloc_with_fallback(unsigned long, unsigned long)
__cxxabiv1::__class_type_info::can_catch(__cxxabiv1::__shim_type_info const*, void*&) const
__cxxabiv1::__class_type_info::has_unambiguous_public_base(__cxxabiv1::__dynamic_cast_info*, void*, int) const
__cxxabiv1::__class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const
__cxxabiv1::__class_type_info::search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const
__cxxabiv1::__class_type_info::~__class_type_info()
__cxxabiv1::__enum_type_info::~__enum_type_info()
__cxxabiv1::__free_with_fallback(void*)
__cxxabiv1::__function_type_info::~__function_type_info()
__cxxabiv1::__fundamental_type_info::~__fundamental_type_info()
__cxxabiv1::__pbase_type_info::~__pbase_type_info()
__cxxabiv1::__pointer_to_member_type_info::~__pointer_to_member_type_info()
__cxxabiv1::__pointer_type_info::~__pointer_type_info()
__cxxabiv1::__shim_type_info::noop1() const
__cxxabiv1::__shim_type_info::noop2() const
__cxxabiv1::__shim_type_info::~__shim_type_info()
__cxxabiv1::__si_class_type_info::has_unambiguous_public_base(__cxxabiv1::__dynamic_cast_info*, void*, int) const
__cxxabiv1::__si_class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const
__cxxabiv1::__si_class_type_info::search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const
__cxxabiv1::__si_class_type_info::~__si_class_type_info()
__cxxabiv1::__vmi_class_type_info::has_unambiguous_public_base(__cxxabiv1::__dynamic_cast_info*, void*, int) const
__cxxabiv1::__vmi_class_type_info::search_above_dst(__cxxabiv1::__dynamic_cast_info*, void const*, void const*, int, bool) const
__cxxabiv1::__vmi_class_type_info::search_below_dst(__cxxabiv1::__dynamic_cast_info*, void const*, int, bool) const
__cxxabiv1::__vmi_class_type_info::~__vmi_class_type_info()
__cxxabiv1::call_terminate(bool, _Unwind_Exception*)
__cxxabiv1::exception_cleanup_func(_Unwind_Reason_Code, _Unwind_Exception*)
__cxxabiv1::failed_throw(__cxxabiv1::__cxa_exception*)
__cxxabiv1::readEncodedPointer(unsigned char const**, unsigned char)
__cxxabiv1::scan_eh_tab(__cxxabiv1::(anonymous namespace)::scan_results&, _Unwind_Action, bool, _Unwind_Exception*, _Unwind_Context*)
__do_global_dtors_aux
__do_global_dtors_aux_fini_array_entry
__dso_handle
__dynamic_cast
__errno_location
__frame_dummy_init_array_entry
__gmon_start__
__gxx_personality_v0
__isinf
__isnan
__next_prime overflow
__samplerExternal2DY2YEXT
__stack_chk_fail
__tls_get_addr
_c>
_edata
_emu
_end
_fini
_frl(inout
_frm(inout
_i>
_init
_u
_webgl_
_webgl_struct_
_y.
`
` 8
`!8
`"8
`#8
`$8
`%8
`&8
`'8
`(8
`)8
`*8
`+8
`,8
`-8
`.8
`/8
`08
`18
`28
`38
`48
`5
`58
`6
`68
`7
`78
`8
`88
`98
`:8
`;8
`<8
`=8
`>8
`?8
`@8
`A8
`B8
`C8
`D8
`E8
`F8
`G8
`H8
`I8
`J8
`K8
`L8
`M8
`N8
`O8
`P8
`Q8
`R7
`R8
`S8
`T8
`U8
`V8
`W8
`X5
`X8
`Y8
`Z8
`[8
`\8
`]8
`^8
`_8
``8
`a8
`b8
`b>
`c8
`d8
`e8
`f8
`g8
`h8
`i8
`j8
`k8
`l8
`m8
`n7
`n8
`o8
`p8
`q8
`r8
`s8
`t8
`u8
`v8
`w8
`x8
`y8
`z8
`{8
`|8
`}8
`~8
`8
a
a struct cannot be used as a constructor argument for this type
a7
a8
a?:
aK(
aV5
aa>
abort
abort_message
abort_message.cpp
abs
access
access is not one of the supported tokens.
acos
acosf
acosh
acoshf
add
add second child into first child
addTraceEvent
additive_expression
al>
algorithm.cpp
align=
aligned_memory.cpp
all
all default precisions are highp; use precision statements to quiet warning, e.g.:         "precision mediump int; precision highp float;"
all redeclarations must use the same depth layout on
all stride settings must match for xfb buffer
allInvocations
allInvocationsARB
allInvocationsEqual
allInvocationsEqualARB
allocate
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
ambiguous best function under implicit type conversion
ambiguous function signature match: multiple signatures match under implicit type conversion
and
and '
angle::(anonymous namespace)::ALPHA16F_EXT_to_default(unsigned int)
angle::(anonymous namespace)::ALPHA32F_EXT_to_default(unsigned int)
angle::(anonymous namespace)::ALPHA8_EXT_to_A8_UNORM(unsigned int)
angle::(anonymous namespace)::ALPHA8_EXT_to_R8G8B8A8_UNORM(unsigned int)
angle::(anonymous namespace)::ALPHA8_EXT_to_R8_UNORM(unsigned int)
angle::(anonymous namespace)::ALPHA_to_R16G16B16A16_FLOAT(unsigned int)
angle::(anonymous namespace)::ALPHA_to_R32G32B32A32_FLOAT(unsigned int)
angle::(anonymous namespace)::ALPHA_to_default(unsigned int)
angle::(anonymous namespace)::BGR565_ANGLEX_to_B5G6R5_UNORM(unsigned int)
angle::(anonymous namespace)::BGR5_A1_ANGLEX_to_default(unsigned int)
angle::(anonymous namespace)::BGRA4_ANGLEX_to_default(unsigned int)
angle::(anonymous namespace)::BGRA8_EXT_to_default(unsigned int)
angle::(anonymous namespace)::BGRA_EXT_to_default(unsigned int)
angle::(anonymous namespace)::COMPRESSED_R11_EAC_to_R16_UNORM(unsigned int)
angle::(anonymous namespace)::COMPRESSED_RG11_EAC_to_R16G16_UNORM(unsigned int)
angle::(anonymous namespace)::COMPRESSED_RGB8_ETC2_to_R8G8B8A8_UNORM(unsigned int)
angle::(anonymous namespace)::COMPRESSED_RGB8_LOSSY_DECODE_ETC2_ANGLE_to_BC1_RGB_UNORM_BLOCK(unsigned int)
angle::(anonymous namespace)::COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2_to_R8G8B8A8_UNORM(unsigned int)
angle::(anonymous namespace)::COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_LOSSY_DECODE_ETC2_ANGLE_to_BC1_RGBA_UNORM_BLOCK(unsigned int)
angle::(anonymous namespace)::COMPRESSED_RGBA8_ETC2_EAC_to_R8G8B8A8_UNORM(unsigned int)
angle::(anonymous namespace)::COMPRESSED_RGBA_BPTC_UNORM_EXT_to_default(unsigned int)
angle::(anonymous namespace)::COMPRESSED_RGBA_S3TC_DXT1_EXT_to_default(unsigned int)
angle::(anonymous namespace)::COMPRESSED_RGBA_S3TC_DXT3_ANGLE_to_default(unsigned int)
angle::(anonymous namespace)::COMPRESSED_RGBA_S3TC_DXT5_ANGLE_to_default(unsigned int)
angle::(anonymous namespace)::COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT_to_default(unsigned int)
angle::(anonymous namespace)::COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT_to_default(unsigned int)
angle::(anonymous namespace)::COMPRESSED_RGB_S3TC_DXT1_EXT_to_default(unsigned int)
angle::(anonymous namespace)::COMPRESSED_SIGNED_R11_EAC_to_R16_SNORM(unsigned int)
angle::(anonymous namespace)::COMPRESSED_SIGNED_RG11_EAC_to_R16G16_SNORM(unsigned int)
angle::(anonymous namespace)::COMPRESSED_SRGB8_ALPHA8_ETC2_EAC_to_R8G8B8A8_UNORM_SRGB(unsigned int)
angle::(anonymous namespace)::COMPRESSED_SRGB8_ETC2_to_R8G8B8A8_UNORM_SRGB(unsigned int)
angle::(anonymous namespace)::COMPRESSED_SRGB8_LOSSY_DECODE_ETC2_ANGLE_to_BC1_RGB_UNORM_SRGB_BLOCK(unsigned int)
angle::(anonymous namespace)::COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2_to_R8G8B8A8_UNORM_SRGB(unsigned int)
angle::(anonymous namespace)::COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_LOSSY_DECODE_ETC2_ANGLE_to_BC1_RGBA_UNORM_SRGB_BLOCK(unsigned int)
angle::(anonymous namespace)::COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT_to_default(unsigned int)
angle::(anonymous namespace)::COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT_to_default(unsigned int)
angle::(anonymous namespace)::COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT_to_default(unsigned int)
angle::(anonymous namespace)::COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT_to_default(unsigned int)
angle::(anonymous namespace)::COMPRESSED_SRGB_S3TC_DXT1_EXT_to_default(unsigned int)
angle::(anonymous namespace)::DEPTH24_STENCIL8_to_D24_UNORM_S8_UINT(unsigned int)
angle::(anonymous namespace)::DEPTH32F_STENCIL8_to_D32_FLOAT_S8X24_UINT(unsigned int)
angle::(anonymous namespace)::DEPTH_COMPONENT16_to_D16_UNORM(unsigned int)
angle::(anonymous namespace)::DEPTH_COMPONENT24_to_D24_UNORM_S8_UINT(unsigned int)
angle::(anonymous namespace)::DEPTH_COMPONENT32F_to_D32_FLOAT(unsigned int)
angle::(anonymous namespace)::DEPTH_COMPONENT32_OES_to_default(unsigned int)
angle::(anonymous namespace)::DefaultETCAlphaValues
angle::(anonymous namespace)::ETC1_RGB8_LOSSY_DECODE_ANGLE_to_BC1_RGB_UNORM_BLOCK(unsigned int)
angle::(anonymous namespace)::ETC1_RGB8_OES_to_R8G8B8A8_UNORM(unsigned int)
angle::(anonymous namespace)::ETC2Block::decodeAsRGB(unsigned char*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char const (*) [4], bool) const
angle::(anonymous namespace)::ETC2Block::decodeIndividualOrDifferentialBlock(unsigned char*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, int, int, int, int, int, int, unsigned char const (*) [4], bool) const
angle::(anonymous namespace)::ETC2Block::decodePlanarBlock(unsigned char*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char const (*) [4]) const
angle::(anonymous namespace)::ETC2Block::getSingleChannelModifier(unsigned long, unsigned long) const
angle::(anonymous namespace)::ETC2Block::getSingleChannelModifier(unsigned long, unsigned long) const::modifierTable
angle::(anonymous namespace)::ETC2Block::packBC1(void*, int const*, int const*, angle::R8G8B8A8 const*, unsigned long, int, int, bool) const
angle::(anonymous namespace)::ETC2Block::selectEndPointPCA(int const*, angle::R8G8B8A8 const*, unsigned long, int*, int*) const
angle::(anonymous namespace)::ETC2Block::transcodeHBlockToBC1(unsigned char*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char const (*) [4], bool) const::distance
angle::(anonymous namespace)::ETC2Block::transcodeIndividualOrDifferentialBlockToBC1(unsigned char*, unsigned long, unsigned long, unsigned long, unsigned long, int, int, int, int, int, int, unsigned char const (*) [4], bool) const
angle::(anonymous namespace)::LUMINANCE16F_EXT_to_default(unsigned int)
angle::(anonymous namespace)::LUMINANCE32F_EXT_to_default(unsigned int)
angle::(anonymous namespace)::LUMINANCE8_ALPHA8_EXT_to_R8G8B8A8_UNORM(unsigned int)
angle::(anonymous namespace)::LUMINANCE8_ALPHA8_EXT_to_R8G8_UNORM(unsigned int)
angle::(anonymous namespace)::LUMINANCE8_EXT_to_R8G8B8A8_UNORM(unsigned int)
angle::(anonymous namespace)::LUMINANCE8_EXT_to_R8_UNORM(unsigned int)
angle::(anonymous namespace)::LUMINANCE_ALPHA16F_EXT_to_default(unsigned int)
angle::(anonymous namespace)::LUMINANCE_ALPHA32F_EXT_to_default(unsigned int)
angle::(anonymous namespace)::LUMINANCE_ALPHA_to_R16G16B16A16_FLOAT(unsigned int)
angle::(anonymous namespace)::LUMINANCE_ALPHA_to_R32G32B32A32_FLOAT(unsigned int)
angle::(anonymous namespace)::LUMINANCE_ALPHA_to_default(unsigned int)
angle::(anonymous namespace)::LUMINANCE_to_R16G16B16A16_FLOAT(unsigned int)
angle::(anonymous namespace)::LUMINANCE_to_R32G32B32A32_FLOAT(unsigned int)
angle::(anonymous namespace)::LUMINANCE_to_default(unsigned int)
angle::(anonymous namespace)::LoadETC2RGB8ToBC1(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long, bool)
angle::(anonymous namespace)::LoadETC2RGBA8ToRGBA8(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long, bool)
angle::(anonymous namespace)::R11F_G11F_B10F_to_R11G11B10_FLOAT(unsigned int)
angle::(anonymous namespace)::R16F_to_R16_FLOAT(unsigned int)
angle::(anonymous namespace)::R16I_to_R16_SINT(unsigned int)
angle::(anonymous namespace)::R16UI_to_R16_UINT(unsigned int)
angle::(anonymous namespace)::R16_EXT_to_R16_UNORM(unsigned int)
angle::(anonymous namespace)::R16_SNORM_EXT_to_R16_SNORM(unsigned int)
angle::(anonymous namespace)::R32F_to_R32_FLOAT(unsigned int)
angle::(anonymous namespace)::R32I_to_R32_SINT(unsigned int)
angle::(anonymous namespace)::R32UI_to_R32_UINT(unsigned int)
angle::(anonymous namespace)::R8I_to_R8_SINT(unsigned int)
angle::(anonymous namespace)::R8UI_to_R8_UINT(unsigned int)
angle::(anonymous namespace)::R8_SNORM_to_R8_SNORM(unsigned int)
angle::(anonymous namespace)::R8_to_R8_UNORM(unsigned int)
angle::(anonymous namespace)::RG16F_to_R16G16_FLOAT(unsigned int)
angle::(anonymous namespace)::RG16I_to_R16G16_SINT(unsigned int)
angle::(anonymous namespace)::RG16UI_to_R16G16_UINT(unsigned int)
angle::(anonymous namespace)::RG16_EXT_to_R16G16_UNORM(unsigned int)
angle::(anonymous namespace)::RG16_SNORM_EXT_to_R16G16_SNORM(unsigned int)
angle::(anonymous namespace)::RG32F_to_R32G32_FLOAT(unsigned int)
angle::(anonymous namespace)::RG32I_to_R32G32_SINT(unsigned int)
angle::(anonymous namespace)::RG32UI_to_R32G32_UINT(unsigned int)
angle::(anonymous namespace)::RG8I_to_R8G8_SINT(unsigned int)
angle::(anonymous namespace)::RG8UI_to_R8G8_UINT(unsigned int)
angle::(anonymous namespace)::RG8_SNORM_to_R8G8_SNORM(unsigned int)
angle::(anonymous namespace)::RG8_to_R8G8_UNORM(unsigned int)
angle::(anonymous namespace)::RGB10_A2UI_to_R10G10B10A2_UINT(unsigned int)
angle::(anonymous namespace)::RGB10_A2_to_R10G10B10A2_UNORM(unsigned int)
angle::(anonymous namespace)::RGB16F_to_R16G16B16A16_FLOAT(unsigned int)
angle::(anonymous namespace)::RGB16I_to_R16G16B16A16_SINT(unsigned int)
angle::(anonymous namespace)::RGB16UI_to_R16G16B16A16_UINT(unsigned int)
angle::(anonymous namespace)::RGB16_EXT_to_R16G16B16A16_UNORM(unsigned int)
angle::(anonymous namespace)::RGB16_SNORM_EXT_to_R16G16B16A16_SNORM(unsigned int)
angle::(anonymous namespace)::RGB32F_to_R32G32B32A32_FLOAT(unsigned int)
angle::(anonymous namespace)::RGB32I_to_R32G32B32A32_SINT(unsigned int)
angle::(anonymous namespace)::RGB32UI_to_R32G32B32A32_UINT(unsigned int)
angle::(anonymous namespace)::RGB565_to_B5G6R5_UNORM(unsigned int)
angle::(anonymous namespace)::RGB565_to_R5G6B5_UNORM(unsigned int)
angle::(anonymous namespace)::RGB565_to_R8G8B8A8_UNORM(unsigned int)
angle::(anonymous namespace)::RGB5_A1_to_A1R5G5B5_UNORM(unsigned int)
angle::(anonymous namespace)::RGB5_A1_to_B5G5R5A1_UNORM(unsigned int)
angle::(anonymous namespace)::RGB5_A1_to_R8G8B8A8_UNORM(unsigned int)
angle::(anonymous namespace)::RGB8I_to_R8G8B8A8_SINT(unsigned int)
angle::(anonymous namespace)::RGB8UI_to_R8G8B8A8_UINT(unsigned int)
angle::(anonymous namespace)::RGB8_SNORM_to_R8G8B8A8_SNORM(unsigned int)
angle::(anonymous namespace)::RGB8_to_R8G8B8A8_UNORM(unsigned int)
angle::(anonymous namespace)::RGB9_E5_to_R9G9B9E5_SHAREDEXP(unsigned int)
angle::(anonymous namespace)::RGBA16F_to_R16G16B16A16_FLOAT(unsigned int)
angle::(anonymous namespace)::RGBA16I_to_R16G16B16A16_SINT(unsigned int)
angle::(anonymous namespace)::RGBA16UI_to_R16G16B16A16_UINT(unsigned int)
angle::(anonymous namespace)::RGBA16_EXT_to_R16G16B16A16_UNORM(unsigned int)
angle::(anonymous namespace)::RGBA16_SNORM_EXT_to_R16G16B16A16_SNORM(unsigned int)
angle::(anonymous namespace)::RGBA32F_to_R32G32B32A32_FLOAT(unsigned int)
angle::(anonymous namespace)::RGBA32I_to_R32G32B32A32_SINT(unsigned int)
angle::(anonymous namespace)::RGBA32UI_to_R32G32B32A32_UINT(unsigned int)
angle::(anonymous namespace)::RGBA4_to_B4G4R4A4_UNORM(unsigned int)
angle::(anonymous namespace)::RGBA4_to_R8G8B8A8_UNORM(unsigned int)
angle::(anonymous namespace)::RGBA8I_to_R8G8B8A8_SINT(unsigned int)
angle::(anonymous namespace)::RGBA8UI_to_R8G8B8A8_UINT(unsigned int)
angle::(anonymous namespace)::RGBA8_SNORM_to_R8G8B8A8_SNORM(unsigned int)
angle::(anonymous namespace)::RGBA8_to_R8G8B8A8_UNORM(unsigned int)
angle::(anonymous namespace)::RGBA_to_default(unsigned int)
angle::(anonymous namespace)::RGB_to_default(unsigned int)
angle::(anonymous namespace)::SRGB8_ALPHA8_to_R8G8B8A8_UNORM_SRGB(unsigned int)
angle::(anonymous namespace)::SRGB8_to_R8G8B8A8_UNORM_SRGB(unsigned int)
angle::(anonymous namespace)::STENCIL_INDEX8_to_default(unsigned int)
angle::(anonymous namespace)::UnimplementedLoadFunction(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::(anonymous namespace)::UnreachableLoadFunction(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::(anonymous namespace)::getDirective(angle::pp::Token const*)
angle::(anonymous namespace)::getDirective(angle::pp::Token const*)::kDirectiveDefine
angle::(anonymous namespace)::getDirective(angle::pp::Token const*)::kDirectiveElif
angle::(anonymous namespace)::getDirective(angle::pp::Token const*)::kDirectiveElse
angle::(anonymous namespace)::getDirective(angle::pp::Token const*)::kDirectiveEndif
angle::(anonymous namespace)::getDirective(angle::pp::Token const*)::kDirectiveError
angle::(anonymous namespace)::getDirective(angle::pp::Token const*)::kDirectiveExtension
angle::(anonymous namespace)::getDirective(angle::pp::Token const*)::kDirectiveIf
angle::(anonymous namespace)::getDirective(angle::pp::Token const*)::kDirectiveIfdef
angle::(anonymous namespace)::getDirective(angle::pp::Token const*)::kDirectiveIfndef
angle::(anonymous namespace)::getDirective(angle::pp::Token const*)::kDirectiveLine
angle::(anonymous namespace)::getDirective(angle::pp::Token const*)::kDirectivePragma
angle::(anonymous namespace)::getDirective(angle::pp::Token const*)::kDirectiveUndef
angle::(anonymous namespace)::getDirective(angle::pp::Token const*)::kDirectiveVersion
angle::(anonymous namespace)::intensityModifierDefault
angle::(anonymous namespace)::intensityModifierNonOpaque
angle::A16F::average(angle::A16F*, angle::A16F const*, angle::A16F const*)
angle::A16F::readColor(angle::Color<float>*, angle::A16F const*)
angle::A16F::writeColor(angle::A16F*, angle::Color<float> const*)
angle::A1R5G5B5::average(angle::A1R5G5B5*, angle::A1R5G5B5 const*, angle::A1R5G5B5 const*)
angle::A1R5G5B5::readColor(angle::Color<float>*, angle::A1R5G5B5 const*)
angle::A1R5G5B5::writeColor(angle::A1R5G5B5*, angle::Color<float> const*)
angle::A32F::average(angle::A32F*, angle::A32F const*, angle::A32F const*)
angle::A32F::readColor(angle::Color<float>*, angle::A32F const*)
angle::A32F::writeColor(angle::A32F*, angle::Color<float> const*)
angle::A4R4G4B4::average(angle::A4R4G4B4*, angle::A4R4G4B4 const*, angle::A4R4G4B4 const*)
angle::A4R4G4B4::readColor(angle::Color<float>*, angle::A4R4G4B4 const*)
angle::A4R4G4B4::writeColor(angle::A4R4G4B4*, angle::Color<float> const*)
angle::A8::average(angle::A8*, angle::A8 const*, angle::A8 const*)
angle::A8::readColor(angle::Color<float>*, angle::A8 const*)
angle::A8::writeColor(angle::A8*, angle::Color<float> const*)
angle::AddTraceEvent(char, unsigned char const*, char const*, unsigned long long, int, char const**, unsigned char const*, unsigned long long const*, unsigned char)
angle::AlignedAlloc(unsigned long, unsigned long)
angle::AlignedFree(void*)
angle::B5G6R5::average(angle::B5G6R5*, angle::B5G6R5 const*, angle::B5G6R5 const*)
angle::B5G6R5::readColor(angle::Color<float>*, angle::B5G6R5 const*)
angle::B5G6R5::writeColor(angle::B5G6R5*, angle::Color<float> const*)
angle::B8G8R8A8::average(angle::B8G8R8A8*, angle::B8G8R8A8 const*, angle::B8G8R8A8 const*)
angle::B8G8R8A8::readColor(angle::Color<float>*, angle::B8G8R8A8 const*)
angle::B8G8R8A8::writeColor(angle::B8G8R8A8*, angle::Color<float> const*)
angle::B8G8R8X8::average(angle::B8G8R8X8*, angle::B8G8R8X8 const*, angle::B8G8R8X8 const*)
angle::B8G8R8X8::readColor(angle::Color<float>*, angle::B8G8R8X8 const*)
angle::B8G8R8X8::writeColor(angle::B8G8R8X8*, angle::Color<float> const*)
angle::BGRACopyFunctions
angle::BGRAEntry
angle::BeginsWith(char const*, char const*)
angle::BeginsWith(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char const*)
angle::BeginsWith(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
angle::BeginsWith(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long)
angle::BindingPointer<egl::Image, egl::Display, egl::Error>::set(egl::Display const*, egl::Image*)
angle::BindingPointer<egl::Image, egl::Display, egl::Error>::~BindingPointer()
angle::BindingPointer<gl::Buffer, gl::Context, gl::Error>::set(gl::Context const*, gl::Buffer*)
angle::BindingPointer<gl::Buffer, gl::Context, gl::Error>::~BindingPointer()
angle::BindingPointer<gl::Compiler, gl::Context, gl::Error>::set(gl::Context const*, gl::Compiler*)
angle::BindingPointer<gl::Compiler, gl::Context, gl::Error>::~BindingPointer()
angle::BindingPointer<gl::ProgramPipeline, gl::Context, gl::Error>::set(gl::Context const*, gl::ProgramPipeline*)
angle::BindingPointer<gl::ProgramPipeline, gl::Context, gl::Error>::~BindingPointer()
angle::BindingPointer<gl::Query, gl::Context, gl::Error>::set(gl::Context const*, gl::Query*)
angle::BindingPointer<gl::Query, gl::Context, gl::Error>::~BindingPointer()
angle::BindingPointer<gl::Renderbuffer, gl::Context, gl::Error>::set(gl::Context const*, gl::Renderbuffer*)
angle::BindingPointer<gl::Renderbuffer, gl::Context, gl::Error>::~BindingPointer()
angle::BindingPointer<gl::Sampler, gl::Context, gl::Error>::set(gl::Context const*, gl::Sampler*)
angle::BindingPointer<gl::Sampler, gl::Context, gl::Error>::~BindingPointer()
angle::BindingPointer<gl::Texture, gl::Context, gl::Error>::set(gl::Context const*, gl::Texture*)
angle::BindingPointer<gl::Texture, gl::Context, gl::Error>::~BindingPointer()
angle::BindingPointer<gl::TransformFeedback, gl::Context, gl::Error>::set(gl::Context const*, gl::TransformFeedback*)
angle::BindingPointer<gl::TransformFeedback, gl::Context, gl::Error>::~BindingPointer()
angle::CopyBGRA8ToRGBA8(unsigned char const*, unsigned char*)
angle::D16::ReadDepthStencil(angle::DepthStencil*, angle::D16 const*)
angle::D16::WriteDepthStencil(angle::D16*, angle::DepthStencil const*)
angle::D24::ReadDepthStencil(angle::DepthStencil*, angle::D24 const*)
angle::D24::WriteDepthStencil(angle::D24*, angle::DepthStencil const*)
angle::D24S8::ReadDepthStencil(angle::DepthStencil*, angle::D24S8 const*)
angle::D24S8::WriteDepthStencil(angle::D24S8*, angle::DepthStencil const*)
angle::D32::ReadDepthStencil(angle::DepthStencil*, angle::D32 const*)
angle::D32::WriteDepthStencil(angle::D32*, angle::DepthStencil const*)
angle::D32F::ReadDepthStencil(angle::DepthStencil*, angle::D32F const*)
angle::D32F::WriteDepthStencil(angle::D32F*, angle::DepthStencil const*)
angle::D32FS8::ReadDepthStencil(angle::DepthStencil*, angle::D32FS8 const*)
angle::D32FS8::WriteDepthStencil(angle::D32FS8*, angle::DepthStencil const*)
angle::DefaultAddTraceEvent(angle::PlatformMethods*, char, unsigned char const*, char const*, unsigned long long, double, int, char const**, unsigned char const*, unsigned long long const*, unsigned char)
angle::DefaultCacheProgram(angle::PlatformMethods*, std::__1::array<unsigned char, 20ul> const&, unsigned long, unsigned char const*)
angle::DefaultCurrentTime(angle::PlatformMethods*)
angle::DefaultGetTraceCategoryEnabledFlag(angle::PlatformMethods*, char const*)
angle::DefaultHistogramBoolean(angle::PlatformMethods*, char const*, bool)
angle::DefaultHistogramCustomCounts(angle::PlatformMethods*, char const*, int, int, int, int)
angle::DefaultHistogramEnumeration(angle::PlatformMethods*, char const*, int, int)
angle::DefaultHistogramSparse(angle::PlatformMethods*, char const*, int)
angle::DefaultLogError(angle::PlatformMethods*, char const*)
angle::DefaultLogInfo(angle::PlatformMethods*, char const*)
angle::DefaultLogWarning(angle::PlatformMethods*, char const*)
angle::DefaultMonotonicallyIncreasingTime(angle::PlatformMethods*)
angle::DefaultOverrideWorkaroundsD3D(angle::PlatformMethods*, angle::WorkaroundsD3D*)
angle::DefaultUpdateTraceEventDuration(angle::PlatformMethods*, unsigned char const*, char const*, unsigned long)
angle::EndsWith(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char const*)
angle::FixedVector<angle::Mat4, 16ul, std::__1::array<angle::Mat4, 16ul> >::resize(unsigned long, angle::Mat4 const&)
angle::Format::Get(angle::FormatID)
angle::Format::InternalFormatToID(unsigned int)
angle::GetCWD()
angle::GetEnvironmentVar(char const*)
angle::GetExecutableDirectory()
angle::GetExecutableDirectory()::exeDir
angle::GetExecutablePath()
angle::GetExecutablePath()::exePath
angle::GetLoadFunctionsMap(unsigned int, angle::FormatID)
angle::GetPathSeparator()
angle::GetTraceCategoryEnabledFlag(char const*)
angle::GetTraceCategoryEnabledFlag(char const*)::disabled
angle::L16A16F::average(angle::L16A16F*, angle::L16A16F const*, angle::L16A16F const*)
angle::L16A16F::readColor(angle::Color<float>*, angle::L16A16F const*)
angle::L16A16F::writeColor(angle::L16A16F*, angle::Color<float> const*)
angle::L16F::average(angle::L16F*, angle::L16F const*, angle::L16F const*)
angle::L16F::readColor(angle::Color<float>*, angle::L16F const*)
angle::L16F::writeColor(angle::L16F*, angle::Color<float> const*)
angle::L32A32F::average(angle::L32A32F*, angle::L32A32F const*, angle::L32A32F const*)
angle::L32A32F::readColor(angle::Color<float>*, angle::L32A32F const*)
angle::L32A32F::writeColor(angle::L32A32F*, angle::Color<float> const*)
angle::L32F::average(angle::L32F*, angle::L32F const*, angle::L32F const*)
angle::L32F::readColor(angle::Color<float>*, angle::L32F const*)
angle::L32F::writeColor(angle::L32F*, angle::Color<float> const*)
angle::L8::average(angle::L8*, angle::L8 const*, angle::L8 const*)
angle::L8::readColor(angle::Color<float>*, angle::L8 const*)
angle::L8::writeColor(angle::L8*, angle::Color<float> const*)
angle::L8A8::average(angle::L8A8*, angle::L8A8 const*, angle::L8A8 const*)
angle::L8A8::readColor(angle::Color<float>*, angle::L8A8 const*)
angle::L8A8::writeColor(angle::L8A8*, angle::Color<float> const*)
angle::LoadA16FToRGBA16F(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadA32FToRGBA32F(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadA8ToRGBA8(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadD32FS8X24ToD32FS8X24(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadD32FToD32F(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadEACR11SToR16(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadEACR11ToR16(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadEACRG11SToRG16(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadEACRG11ToRG16(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadETC1RGB8ToBC1(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadETC1RGB8ToRGBA8(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadETC2RGB8A1ToBC1(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadETC2RGB8A1ToRGBA8(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadETC2RGB8ToBC1(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadETC2RGB8ToRGBA8(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadETC2RGBA8ToRGBA8(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadETC2SRGB8A1ToBC1(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadETC2SRGB8A1ToRGBA8(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadETC2SRGB8ToBC1(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadETC2SRGB8ToRGBA8(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadETC2SRGBA8ToSRGBA8(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadL16FToRGBA16F(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadL32FToRGBA32F(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadL8ToRGBA8(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadLA16FToRGBA16F(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadLA32FToRGBA32F(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadLA8ToRGBA8(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadR32ToR16(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadR32ToR24G8(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadR5G6B5ToRGBA8(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadRGB10A2ToBGR5A1(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadRGB10A2ToRGBA8(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadRGB16FToRG11B10F(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadRGB16FToRGB9E5(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadRGB32FToRG11B10F(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadRGB32FToRGB9E5(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadRGB32FToRGBA16F(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadRGB565ToBGR565(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadRGB5A1ToA1RGB5(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadRGB5A1ToRGBA8(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadRGB8ToBGR565(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadRGBA4ToARGB4(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadRGBA4ToRGBA8(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadRGBA8ToBGR5A1(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoadRGBA8ToBGRA4(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
angle::LoggingAnnotator::beginEvent(wchar_t const*)
angle::LoggingAnnotator::endEvent()
angle::LoggingAnnotator::getStatus()
angle::LoggingAnnotator::logMessage(gl::LogMessage const&) const
angle::LoggingAnnotator::setMarker(wchar_t const*)
angle::LoggingAnnotator::~LoggingAnnotator()
angle::Mat4::Frustum(float, float, float, float, float, float)
angle::Mat4::Mat4()
angle::Mat4::Mat4(angle::Matrix<float>)
angle::Mat4::Mat4(float const*)
angle::Mat4::Ortho(float, float, float, float, float, float)
angle::Mat4::Rotate(float, angle::Vector<3ul, float> const&)
angle::Mat4::Scale(angle::Vector<3ul, float> const&)
angle::Mat4::Translate(angle::Vector<3ul, float> const&)
angle::Mat4::product(angle::Mat4 const&)
angle::Mat4::product(angle::Vector<4ul, float> const&)
angle::Matrix<float>::compMult(angle::Matrix<float> const&) const
angle::Matrix<float>::determinant() const
angle::Matrix<float>::inverse() const
angle::Matrix<float>::outerProduct(angle::Matrix<float> const&) const
angle::Matrix<float>::transpose() const
angle::MemoryBuffer::MemoryBuffer(angle::MemoryBuffer&&)
angle::MemoryBuffer::fill(unsigned char)
angle::MemoryBuffer::operator=(angle::MemoryBuffer&&)
angle::MemoryBuffer::resize(unsigned long)
angle::MemoryBuffer::~MemoryBuffer()
angle::NoCopyFunctions
angle::ObserverBinding::ObserverBinding(angle::ObserverBinding const&)
angle::ObserverBinding::ObserverBinding(angle::ObserverInterface*, unsigned long)
angle::ObserverBinding::bind(angle::Subject*)
angle::ObserverBinding::~ObserverBinding()
angle::ObserverInterface::~ObserverInterface()
angle::PMurHash32(unsigned int, void const*, int)
angle::PMurHash32_Process(unsigned int*, unsigned int*, void const*, int)
angle::PrependPathToEnvironmentVar(char const*, char const*)
angle::R10G10B10A2::average(angle::R10G10B10A2*, angle::R10G10B10A2 const*, angle::R10G10B10A2 const*)
angle::R10G10B10A2::readColor(angle::Color<float>*, angle::R10G10B10A2 const*)
angle::R10G10B10A2::readColor(angle::Color<unsigned int>*, angle::R10G10B10A2 const*)
angle::R10G10B10A2::writeColor(angle::R10G10B10A2*, angle::Color<float> const*)
angle::R10G10B10A2::writeColor(angle::R10G10B10A2*, angle::Color<unsigned int> const*)
angle::R10G10B10A2S::average(angle::R10G10B10A2S*, angle::R10G10B10A2S const*, angle::R10G10B10A2S const*)
angle::R10G10B10A2S::readColor(angle::Color<float>*, angle::R10G10B10A2S const*)
angle::R10G10B10A2S::readColor(angle::Color<int>*, angle::R10G10B10A2S const*)
angle::R10G10B10A2S::writeColor(angle::R10G10B10A2S*, angle::Color<float> const*)
angle::R10G10B10A2S::writeColor(angle::R10G10B10A2S*, angle::Color<int> const*)
angle::R11G11B10F::average(angle::R11G11B10F*, angle::R11G11B10F const*, angle::R11G11B10F const*)
angle::R11G11B10F::readColor(angle::Color<float>*, angle::R11G11B10F const*)
angle::R11G11B10F::writeColor(angle::R11G11B10F*, angle::Color<float> const*)
angle::R16::average(angle::R16*, angle::R16 const*, angle::R16 const*)
angle::R16::readColor(angle::Color<float>*, angle::R16 const*)
angle::R16::readColor(angle::Color<unsigned int>*, angle::R16 const*)
angle::R16::writeColor(angle::R16*, angle::Color<float> const*)
angle::R16::writeColor(angle::R16*, angle::Color<unsigned int> const*)
angle::R16F::average(angle::R16F*, angle::R16F const*, angle::R16F const*)
angle::R16F::readColor(angle::Color<float>*, angle::R16F const*)
angle::R16F::writeColor(angle::R16F*, angle::Color<float> const*)
angle::R16G16::average(angle::R16G16*, angle::R16G16 const*, angle::R16G16 const*)
angle::R16G16::readColor(angle::Color<float>*, angle::R16G16 const*)
angle::R16G16::readColor(angle::Color<unsigned int>*, angle::R16G16 const*)
angle::R16G16::writeColor(angle::R16G16*, angle::Color<float> const*)
angle::R16G16::writeColor(angle::R16G16*, angle::Color<unsigned int> const*)
angle::R16G16B16::average(angle::R16G16B16*, angle::R16G16B16 const*, angle::R16G16B16 const*)
angle::R16G16B16::readColor(angle::Color<float>*, angle::R16G16B16 const*)
angle::R16G16B16::readColor(angle::Color<unsigned int>*, angle::R16G16B16 const*)
angle::R16G16B16::writeColor(angle::R16G16B16*, angle::Color<float> const*)
angle::R16G16B16::writeColor(angle::R16G16B16*, angle::Color<unsigned int> const*)
angle::R16G16B16A16::average(angle::R16G16B16A16*, angle::R16G16B16A16 const*, angle::R16G16B16A16 const*)
angle::R16G16B16A16::readColor(angle::Color<float>*, angle::R16G16B16A16 const*)
angle::R16G16B16A16::readColor(angle::Color<unsigned int>*, angle::R16G16B16A16 const*)
angle::R16G16B16A16::writeColor(angle::R16G16B16A16*, angle::Color<float> const*)
angle::R16G16B16A16::writeColor(angle::R16G16B16A16*, angle::Color<unsigned int> const*)
angle::R16G16B16A16F::average(angle::R16G16B16A16F*, angle::R16G16B16A16F const*, angle::R16G16B16A16F const*)
angle::R16G16B16A16F::readColor(angle::Color<float>*, angle::R16G16B16A16F const*)
angle::R16G16B16A16F::writeColor(angle::R16G16B16A16F*, angle::Color<float> const*)
angle::R16G16B16A16S::average(angle::R16G16B16A16S*, angle::R16G16B16A16S const*, angle::R16G16B16A16S const*)
angle::R16G16B16A16S::readColor(angle::Color<float>*, angle::R16G16B16A16S const*)
angle::R16G16B16A16S::readColor(angle::Color<int>*, angle::R16G16B16A16S const*)
angle::R16G16B16A16S::writeColor(angle::R16G16B16A16S*, angle::Color<float> const*)
angle::R16G16B16A16S::writeColor(angle::R16G16B16A16S*, angle::Color<int> const*)
angle::R16G16B16F::average(angle::R16G16B16F*, angle::R16G16B16F const*, angle::R16G16B16F const*)
angle::R16G16B16F::readColor(angle::Color<float>*, angle::R16G16B16F const*)
angle::R16G16B16F::writeColor(angle::R16G16B16F*, angle::Color<float> const*)
angle::R16G16B16S::average(angle::R16G16B16S*, angle::R16G16B16S const*, angle::R16G16B16S const*)
angle::R16G16B16S::readColor(angle::Color<float>*, angle::R16G16B16S const*)
angle::R16G16B16S::readColor(angle::Color<int>*, angle::R16G16B16S const*)
angle::R16G16B16S::writeColor(angle::R16G16B16S*, angle::Color<float> const*)
angle::R16G16B16S::writeColor(angle::R16G16B16S*, angle::Color<int> const*)
angle::R16G16F::average(angle::R16G16F*, angle::R16G16F const*, angle::R16G16F const*)
angle::R16G16F::readColor(angle::Color<float>*, angle::R16G16F const*)
angle::R16G16F::writeColor(angle::R16G16F*, angle::Color<float> const*)
angle::R16G16S::average(angle::R16G16S*, angle::R16G16S const*, angle::R16G16S const*)
angle::R16G16S::readColor(angle::Color<float>*, angle::R16G16S const*)
angle::R16G16S::readColor(angle::Color<int>*, angle::R16G16S const*)
angle::R16G16S::writeColor(angle::R16G16S*, angle::Color<float> const*)
angle::R16G16S::writeColor(angle::R16G16S*, angle::Color<int> const*)
angle::R16S::average(angle::R16S*, angle::R16S const*, angle::R16S const*)
angle::R16S::readColor(angle::Color<float>*, angle::R16S const*)
angle::R16S::readColor(angle::Color<int>*, angle::R16S const*)
angle::R16S::writeColor(angle::R16S*, angle::Color<float> const*)
angle::R16S::writeColor(angle::R16S*, angle::Color<int> const*)
angle::R32::average(angle::R32*, angle::R32 const*, angle::R32 const*)
angle::R32::readColor(angle::Color<float>*, angle::R32 const*)
angle::R32::readColor(angle::Color<unsigned int>*, angle::R32 const*)
angle::R32::writeColor(angle::R32*, angle::Color<float> const*)
angle::R32::writeColor(angle::R32*, angle::Color<unsigned int> const*)
angle::R32F::average(angle::R32F*, angle::R32F const*, angle::R32F const*)
angle::R32F::readColor(angle::Color<float>*, angle::R32F const*)
angle::R32F::writeColor(angle::R32F*, angle::Color<float> const*)
angle::R32G32::average(angle::R32G32*, angle::R32G32 const*, angle::R32G32 const*)
angle::R32G32::readColor(angle::Color<float>*, angle::R32G32 const*)
angle::R32G32::readColor(angle::Color<unsigned int>*, angle::R32G32 const*)
angle::R32G32::writeColor(angle::R32G32*, angle::Color<float> const*)
angle::R32G32::writeColor(angle::R32G32*, angle::Color<unsigned int> const*)
angle::R32G32B32::average(angle::R32G32B32*, angle::R32G32B32 const*, angle::R32G32B32 const*)
angle::R32G32B32::readColor(angle::Color<float>*, angle::R32G32B32 const*)
angle::R32G32B32::readColor(angle::Color<unsigned int>*, angle::R32G32B32 const*)
angle::R32G32B32::writeColor(angle::R32G32B32*, angle::Color<float> const*)
angle::R32G32B32::writeColor(angle::R32G32B32*, angle::Color<unsigned int> const*)
angle::R32G32B32A32::average(angle::R32G32B32A32*, angle::R32G32B32A32 const*, angle::R32G32B32A32 const*)
angle::R32G32B32A32::readColor(angle::Color<float>*, angle::R32G32B32A32 const*)
angle::R32G32B32A32::readColor(angle::Color<unsigned int>*, angle::R32G32B32A32 const*)
angle::R32G32B32A32::writeColor(angle::R32G32B32A32*, angle::Color<float> const*)
angle::R32G32B32A32::writeColor(angle::R32G32B32A32*, angle::Color<unsigned int> const*)
angle::R32G32B32A32F::average(angle::R32G32B32A32F*, angle::R32G32B32A32F const*, angle::R32G32B32A32F const*)
angle::R32G32B32A32F::readColor(angle::Color<float>*, angle::R32G32B32A32F const*)
angle::R32G32B32A32F::writeColor(angle::R32G32B32A32F*, angle::Color<float> const*)
angle::R32G32B32A32S::average(angle::R32G32B32A32S*, angle::R32G32B32A32S const*, angle::R32G32B32A32S const*)
angle::R32G32B32A32S::readColor(angle::Color<float>*, angle::R32G32B32A32S const*)
angle::R32G32B32A32S::readColor(angle::Color<int>*, angle::R32G32B32A32S const*)
angle::R32G32B32A32S::writeColor(angle::R32G32B32A32S*, angle::Color<float> const*)
angle::R32G32B32A32S::writeColor(angle::R32G32B32A32S*, angle::Color<int> const*)
angle::R32G32B32F::average(angle::R32G32B32F*, angle::R32G32B32F const*, angle::R32G32B32F const*)
angle::R32G32B32F::readColor(angle::Color<float>*, angle::R32G32B32F const*)
angle::R32G32B32F::writeColor(angle::R32G32B32F*, angle::Color<float> const*)
angle::R32G32B32S::average(angle::R32G32B32S*, angle::R32G32B32S const*, angle::R32G32B32S const*)
angle::R32G32B32S::readColor(angle::Color<float>*, angle::R32G32B32S const*)
angle::R32G32B32S::readColor(angle::Color<int>*, angle::R32G32B32S const*)
angle::R32G32B32S::writeColor(angle::R32G32B32S*, angle::Color<float> const*)
angle::R32G32B32S::writeColor(angle::R32G32B32S*, angle::Color<int> const*)
angle::R32G32F::average(angle::R32G32F*, angle::R32G32F const*, angle::R32G32F const*)
angle::R32G32F::readColor(angle::Color<float>*, angle::R32G32F const*)
angle::R32G32F::writeColor(angle::R32G32F*, angle::Color<float> const*)
angle::R32G32S::average(angle::R32G32S*, angle::R32G32S const*, angle::R32G32S const*)
angle::R32G32S::readColor(angle::Color<float>*, angle::R32G32S const*)
angle::R32G32S::readColor(angle::Color<int>*, angle::R32G32S const*)
angle::R32G32S::writeColor(angle::R32G32S*, angle::Color<float> const*)
angle::R32G32S::writeColor(angle::R32G32S*, angle::Color<int> const*)
angle::R32S::average(angle::R32S*, angle::R32S const*, angle::R32S const*)
angle::R32S::readColor(angle::Color<float>*, angle::R32S const*)
angle::R32S::readColor(angle::Color<int>*, angle::R32S const*)
angle::R32S::writeColor(angle::R32S*, angle::Color<float> const*)
angle::R32S::writeColor(angle::R32S*, angle::Color<int> const*)
angle::R4G4B4A4::average(angle::R4G4B4A4*, angle::R4G4B4A4 const*, angle::R4G4B4A4 const*)
angle::R4G4B4A4::readColor(angle::Color<float>*, angle::R4G4B4A4 const*)
angle::R4G4B4A4::writeColor(angle::R4G4B4A4*, angle::Color<float> const*)
angle::R5G5B5A1::average(angle::R5G5B5A1*, angle::R5G5B5A1 const*, angle::R5G5B5A1 const*)
angle::R5G5B5A1::readColor(angle::Color<float>*, angle::R5G5B5A1 const*)
angle::R5G5B5A1::writeColor(angle::R5G5B5A1*, angle::Color<float> const*)
angle::R5G6B5::average(angle::R5G6B5*, angle::R5G6B5 const*, angle::R5G6B5 const*)
angle::R5G6B5::readColor(angle::Color<float>*, angle::R5G6B5 const*)
angle::R5G6B5::writeColor(angle::R5G6B5*, angle::Color<float> const*)
angle::R8::average(angle::R8*, angle::R8 const*, angle::R8 const*)
angle::R8::readColor(angle::Color<float>*, angle::R8 const*)
angle::R8::readColor(angle::Color<unsigned int>*, angle::R8 const*)
angle::R8::writeColor(angle::R8*, angle::Color<float> const*)
angle::R8::writeColor(angle::R8*, angle::Color<unsigned int> const*)
angle::R8G8::average(angle::R8G8*, angle::R8G8 const*, angle::R8G8 const*)
angle::R8G8::readColor(angle::Color<float>*, angle::R8G8 const*)
angle::R8G8::readColor(angle::Color<unsigned int>*, angle::R8G8 const*)
angle::R8G8::writeColor(angle::R8G8*, angle::Color<float> const*)
angle::R8G8::writeColor(angle::R8G8*, angle::Color<unsigned int> const*)
angle::R8G8B8::average(angle::R8G8B8*, angle::R8G8B8 const*, angle::R8G8B8 const*)
angle::R8G8B8::readColor(angle::Color<float>*, angle::R8G8B8 const*)
angle::R8G8B8::readColor(angle::Color<unsigned int>*, angle::R8G8B8 const*)
angle::R8G8B8::writeColor(angle::R8G8B8*, angle::Color<float> const*)
angle::R8G8B8::writeColor(angle::R8G8B8*, angle::Color<unsigned int> const*)
angle::R8G8B8A8::average(angle::R8G8B8A8*, angle::R8G8B8A8 const*, angle::R8G8B8A8 const*)
angle::R8G8B8A8::readColor(angle::Color<float>*, angle::R8G8B8A8 const*)
angle::R8G8B8A8::readColor(angle::Color<unsigned int>*, angle::R8G8B8A8 const*)
angle::R8G8B8A8::writeColor(angle::R8G8B8A8*, angle::Color<float> const*)
angle::R8G8B8A8::writeColor(angle::R8G8B8A8*, angle::Color<unsigned int> const*)
angle::R8G8B8A8S::average(angle::R8G8B8A8S*, angle::R8G8B8A8S const*, angle::R8G8B8A8S const*)
angle::R8G8B8A8S::readColor(angle::Color<float>*, angle::R8G8B8A8S const*)
angle::R8G8B8A8S::readColor(angle::Color<int>*, angle::R8G8B8A8S const*)
angle::R8G8B8A8S::writeColor(angle::R8G8B8A8S*, angle::Color<float> const*)
angle::R8G8B8A8S::writeColor(angle::R8G8B8A8S*, angle::Color<int> const*)
angle::R8G8B8A8SRGB::average(angle::R8G8B8A8SRGB*, angle::R8G8B8A8SRGB const*, angle::R8G8B8A8SRGB const*)
angle::R8G8B8A8SRGB::readColor(angle::Color<float>*, angle::R8G8B8A8SRGB const*)
angle::R8G8B8A8SRGB::writeColor(angle::R8G8B8A8SRGB*, angle::Color<float> const*)
angle::R8G8B8S::average(angle::R8G8B8S*, angle::R8G8B8S const*, angle::R8G8B8S const*)
angle::R8G8B8S::readColor(angle::Color<float>*, angle::R8G8B8S const*)
angle::R8G8B8S::readColor(angle::Color<int>*, angle::R8G8B8S const*)
angle::R8G8B8S::writeColor(angle::R8G8B8S*, angle::Color<float> const*)
angle::R8G8B8S::writeColor(angle::R8G8B8S*, angle::Color<int> const*)
angle::R8G8S::average(angle::R8G8S*, angle::R8G8S const*, angle::R8G8S const*)
angle::R8G8S::readColor(angle::Color<float>*, angle::R8G8S const*)
angle::R8G8S::readColor(angle::Color<int>*, angle::R8G8S const*)
angle::R8G8S::writeColor(angle::R8G8S*, angle::Color<float> const*)
angle::R8G8S::writeColor(angle::R8G8S*, angle::Color<int> const*)
angle::R8S::average(angle::R8S*, angle::R8S const*, angle::R8S const*)
angle::R8S::readColor(angle::Color<float>*, angle::R8S const*)
angle::R8S::readColor(angle::Color<int>*, angle::R8S const*)
angle::R8S::writeColor(angle::R8S*, angle::Color<float> const*)
angle::R8S::writeColor(angle::R8S*, angle::Color<int> const*)
angle::R9G9B9E5::average(angle::R9G9B9E5*, angle::R9G9B9E5 const*, angle::R9G9B9E5 const*)
angle::R9G9B9E5::readColor(angle::Color<float>*, angle::R9G9B9E5 const*)
angle::R9G9B9E5::writeColor(angle::R9G9B9E5*, angle::Color<float> const*)
angle::RefCountObject<egl::Display, egl::Error>::onDestroy(egl::Display const*)
angle::RefCountObject<egl::Display, egl::Error>::~RefCountObject()
angle::RefCountObject<gl::Context, gl::Error>::onDestroy(gl::Context const*)
angle::RefCountObject<gl::Context, gl::Error>::~RefCountObject()
angle::ReplaceSubstring(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
angle::Result rx::AllocateBufferOrImageMemory<rx::vk::Buffer>(rx::vk::Context*, unsigned int, unsigned int*, rx::vk::Buffer*, rx::vk::DeviceMemory*)
angle::Result rx::AllocateBufferOrImageMemory<rx::vk::Image>(rx::vk::Context*, unsigned int, unsigned int*, rx::vk::Image*, rx::vk::DeviceMemory*)
angle::Result::operator gl::Error() const
angle::S8::ReadDepthStencil(angle::DepthStencil*, angle::S8 const*)
angle::S8::WriteDepthStencil(angle::S8*, angle::DepthStencil const*)
angle::ScratchBuffer::ScratchBuffer(unsigned int)
angle::ScratchBuffer::get(unsigned long, angle::MemoryBuffer**)
angle::ScratchBuffer::getInitialized(unsigned long, angle::MemoryBuffer**, unsigned char)
angle::ScratchBuffer::~ScratchBuffer()
angle::SetCWD(char const*)
angle::SetEnvironmentVar(char const*, char const*)
angle::SingleThreadedWaitableEvent::isReady()
angle::SingleThreadedWaitableEvent::wait()
angle::SingleThreadedWaitableEvent::~SingleThreadedWaitableEvent()
angle::SingleThreadedWorkerPool::postWorkerTask(std::__1::shared_ptr<angle::Closure>)
angle::SingleThreadedWorkerPool::setMaxThreads(unsigned long)
angle::SingleThreadedWorkerPool::~SingleThreadedWorkerPool()
angle::SizedMRUCache<std::__1::array<unsigned char, 20ul>, std::__1::pair<angle::MemoryBuffer, egl::BlobCache::CacheSource> >::put(std::__1::array<unsigned char, 20ul> const&, std::__1::pair<angle::MemoryBuffer, egl::BlobCache::CacheSource>&&, unsigned long)
angle::SplitStringAlongWhitespace(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*)
angle::Subject::Subject()
angle::Subject::onStateChange(gl::Context const*, angle::SubjectMessage) const
angle::Subject::~Subject()
angle::ToEGL(angle::Result, rx::DisplayVk*, int)
angle::UnsetEnvironmentVar(char const*)
angle::WaitableEvent::~WaitableEvent()
angle::WorkerThreadPool::Create(bool)
angle::WorkerThreadPool::~WorkerThreadPool()
angle::base::HashingMRUCache<std::__1::array<unsigned char, 20ul>, angle::SizedMRUCache<std::__1::array<unsigned char, 20ul>, std::__1::pair<angle::MemoryBuffer, egl::BlobCache::CacheSource> >::ValueAndSize, std::__1::hash<std::__1::array<unsigned char, 20ul> > >::~HashingMRUCache()
angle::base::MRUCacheBase<std::__1::array<unsigned char, 20ul>, angle::SizedMRUCache<std::__1::array<unsigned char, 20ul>, std::__1::pair<angle::MemoryBuffer, egl::BlobCache::CacheSource> >::ValueAndSize, std::__1::hash<std::__1::array<unsigned char, 20ul> >, angle::base::MRUCacheHashMap>::Clear()
angle::base::MRUCacheBase<std::__1::array<unsigned char, 20ul>, angle::SizedMRUCache<std::__1::array<unsigned char, 20ul>, std::__1::pair<angle::MemoryBuffer, egl::BlobCache::CacheSource> >::ValueAndSize, std::__1::hash<std::__1::array<unsigned char, 20ul> >, angle::base::MRUCacheHashMap>::Erase(std::__1::__list_iterator<std::__1::pair<std::__1::array<unsigned char, 20ul>, angle::SizedMRUCache<std::__1::array<unsigned char, 20ul>, std::__1::pair<angle::MemoryBuffer, egl::BlobCache::CacheSource> >::ValueAndSize>, void*>)
angle::base::MRUCacheBase<std::__1::array<unsigned char, 20ul>, angle::SizedMRUCache<std::__1::array<unsigned char, 20ul>, std::__1::pair<angle::MemoryBuffer, egl::BlobCache::CacheSource> >::ValueAndSize, std::__1::hash<std::__1::array<unsigned char, 20ul> >, angle::base::MRUCacheHashMap>::~MRUCacheBase()
angle::base::SHA1HashBytes(unsigned char const*, unsigned long, unsigned char*)
angle::base::SecureHashAlgorithm::Pad()
angle::base::SecureHashAlgorithm::Process()
angle::g_PlatformMethodNames
angle::g_formatInfoTable
angle::pp::(anonymous namespace)::TokenLexer::lex(angle::pp::Token*)
angle::pp::(anonymous namespace)::TokenLexer::~TokenLexer()
angle::pp::Diagnostics::isError(angle::pp::Diagnostics::ID)
angle::pp::Diagnostics::message(angle::pp::Diagnostics::ID)
angle::pp::Diagnostics::report(angle::pp::Diagnostics::ID, angle::pp::SourceLocation const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
angle::pp::Diagnostics::~Diagnostics()
angle::pp::DirectiveHandler::~DirectiveHandler()
angle::pp::DirectiveParser::DirectiveParser(angle::pp::Tokenizer*, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<angle::pp::Macro>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<angle::pp::Macro> > > >*, angle::pp::Diagnostics*, angle::pp::DirectiveHandler*, angle::pp::PreprocessorSettings const&)
angle::pp::DirectiveParser::lex(angle::pp::Token*)
angle::pp::DirectiveParser::parseConditionalIf(angle::pp::Token*)
angle::pp::DirectiveParser::parseDefine(angle::pp::Token*)
angle::pp::DirectiveParser::parseDirective(angle::pp::Token*)
angle::pp::DirectiveParser::parseElif(angle::pp::Token*)
angle::pp::DirectiveParser::parseElse(angle::pp::Token*)
angle::pp::DirectiveParser::parseEndif(angle::pp::Token*)
angle::pp::DirectiveParser::parseError(angle::pp::Token*)
angle::pp::DirectiveParser::parseExpressionIf(angle::pp::Token*)
angle::pp::DirectiveParser::parseExpressionIfdef(angle::pp::Token*)
angle::pp::DirectiveParser::parseExtension(angle::pp::Token*)
angle::pp::DirectiveParser::parseLine(angle::pp::Token*)
angle::pp::DirectiveParser::parsePragma(angle::pp::Token*)
angle::pp::DirectiveParser::parseUndef(angle::pp::Token*)
angle::pp::DirectiveParser::parseVersion(angle::pp::Token*)
angle::pp::DirectiveParser::~DirectiveParser()
angle::pp::ExpressionParser::ExpressionParser(angle::pp::Lexer*, angle::pp::Diagnostics*)
angle::pp::ExpressionParser::parse(angle::pp::Token*, int*, bool, angle::pp::ExpressionParser::ErrorSettings const&, bool*)
angle::pp::Input::Input()
angle::pp::Input::Input(unsigned long, char const* const*, int const*)
angle::pp::Input::read(char*, unsigned long, int*)
angle::pp::Input::~Input()
angle::pp::Lexer::~Lexer()
angle::pp::Macro::Macro()
angle::pp::Macro::equals(angle::pp::Macro const&) const
angle::pp::Macro::~Macro()
angle::pp::MacroExpander::MacroExpander(angle::pp::Lexer*, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<angle::pp::Macro>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<angle::pp::Macro> > > >*, angle::pp::Diagnostics*, angle::pp::PreprocessorSettings const&, bool)
angle::pp::MacroExpander::ScopedMacroReenabler::~ScopedMacroReenabler()
angle::pp::MacroExpander::collectMacroArgs(angle::pp::Macro const&, angle::pp::Token const&, std::__1::vector<std::__1::vector<angle::pp::Token, std::__1::allocator<angle::pp::Token> >, std::__1::allocator<std::__1::vector<angle::pp::Token, std::__1::allocator<angle::pp::Token> > > >*, angle::pp::SourceLocation*)
angle::pp::MacroExpander::expandMacro(angle::pp::Macro const&, angle::pp::Token const&, std::__1::vector<angle::pp::Token, std::__1::allocator<angle::pp::Token> >*)
angle::pp::MacroExpander::expandMacro(angle::pp::Macro const&, angle::pp::Token const&, std::__1::vector<angle::pp::Token, std::__1::allocator<angle::pp::Token> >*)::kFile
angle::pp::MacroExpander::expandMacro(angle::pp::Macro const&, angle::pp::Token const&, std::__1::vector<angle::pp::Token, std::__1::allocator<angle::pp::Token> >*)::kLine
angle::pp::MacroExpander::getToken(angle::pp::Token*)
angle::pp::MacroExpander::isNextTokenLeftParen()
angle::pp::MacroExpander::lex(angle::pp::Token*)
angle::pp::MacroExpander::popMacro()
angle::pp::MacroExpander::pushMacro(std::__1::shared_ptr<angle::pp::Macro>, angle::pp::Token const&)
angle::pp::MacroExpander::replaceMacroParams(angle::pp::Macro const&, std::__1::vector<std::__1::vector<angle::pp::Token, std::__1::allocator<angle::pp::Token> >, std::__1::allocator<std::__1::vector<angle::pp::Token, std::__1::allocator<angle::pp::Token> > > > const&, std::__1::vector<angle::pp::Token, std::__1::allocator<angle::pp::Token> >*)
angle::pp::MacroExpander::~MacroExpander()
angle::pp::PredefineMacro(std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<angle::pp::Macro>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::shared_ptr<angle::pp::Macro> > > >*, char const*, int)
angle::pp::Preprocessor::Preprocessor(angle::pp::Diagnostics*, angle::pp::DirectiveHandler*, angle::pp::PreprocessorSettings const&)
angle::pp::Preprocessor::init(unsigned long, char const* const*, int const*)
angle::pp::Preprocessor::lex(angle::pp::Token*)
angle::pp::Preprocessor::predefineMacro(char const*, int)
angle::pp::Preprocessor::setMaxTokenSize(unsigned long)
angle::pp::Preprocessor::~Preprocessor()
angle::pp::Token::equals(angle::pp::Token const&) const
angle::pp::Token::iValue(int*) const
angle::pp::Token::reset()
angle::pp::Token::setAtStartOfLine(bool)
angle::pp::Token::setExpansionDisabled(bool)
angle::pp::Token::setHasLeadingSpace(bool)
angle::pp::Token::uValue(unsigned int*) const
angle::pp::Tokenizer::Tokenizer(angle::pp::Diagnostics*)
angle::pp::Tokenizer::init(unsigned long, char const* const*, int const*)
angle::pp::Tokenizer::lex(angle::pp::Token*)
angle::pp::Tokenizer::setFileNumber(int)
angle::pp::Tokenizer::setLineNumber(int)
angle::pp::Tokenizer::setMaxTokenSize(unsigned long)
angle::pp::Tokenizer::~Tokenizer()
angle::pp::kDefined
angle::pp::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, angle::pp::Token const&)
angle_SecondaryFragColor
angle_SecondaryFragData
angle_compound_
angle_frl
angle_frl(
angle_frl(in
angle_frm
angle_frm(
angle_frm(in
angledata
angledata/VkICD_mock_icd.json
angletypes.cpp
angleutils.cpp
anon@
anonymous member
any.cpp
anyInvocation
anyInvocationARB
api_version
arc cosine
arc hyp. cosine
arc hyp. sine
arc hyp. tangent
arc sine
arc tangent
arg
argument cannot drop memory qualifier when passed to formal parameter
argument must be a power of 2
argument must be at least 1
argument must be compile-time constant
array / non-array mismatch
array argument must be sized
array assignment
array comparison
array constructor argument not correct type to construct array element
array constructor needs one argument per array element
array constructor supported in GLSL ES 3.00 and above only
array in function return type
array index for gl_FragData must be constant zero
array index for gl_FragData must be zero when GL_EXT_draw_buffers is disabled
array index out of range
array index out of range '%d'
array indexes for fragment outputs must be constant integral expressions
array indexes for uniform block arrays and shader storage block arrays must be constant integral expressions
array initializer
array initializer must be sized
array length
array members of interface blocks must specify a size
array members of structs must specify a size
array must be declared with a size before using this method
array must be explicitly sized
array must be redeclared with a size before being indexed with a variable
array must be sized by a redeclaration or layout qualifier before being indexed with a variable
array must first be sized by a redeclaration or layout qualifier
array size mismatch
array size must be a constant integer expression
array size must be a positive integer
array size must be greater than zero
array size must be non-negative
array size required
array size too large
array variable name expected
array-of-array of block
array[
array_specifier
arrayed constructor
arrayed type
arrays of arrays supported in GLSL ES 3.10 only
asin
asinf
asinh
asinhf
asm
asm_offset.c
assigning non-constant to '
assignment_expression
assignment_operator
assuming binding count of one for compile-time checking of binding numbers for unsized array
atan
atan2
atan2f
atan_emu(emu_precision vec
atan_emu(y[
atanf
atanh
atanhf
atoi_clamp(char const*, unsigned int*)
atomic counter
atomic counter binding greater than gl_MaxAtomicCounterBindings
atomic counter count exceeds MAX_COMBINED_ATOMIC_COUNTERS
atomic counter types
atomic counters can only be highp
atomic counters sharing the same offset:
atomicAdd
atomicAnd
atomicCompSwap
atomicCompSwap(0D0D0D
atomicCounter
atomicCounterAdd
atomicCounterAnd
atomicCounterCompSwap
atomicCounterDecrement
atomicCounterExchange
atomicCounterIncrement
atomicCounterMax
atomicCounterMin
atomicCounterOr
atomicCounterSubtract
atomicCounterXor
atomicExchange
atomicLoad
atomicMax
atomicMin
atomicOr
atomicStore
atomicXor
atomic_uint binding is too large
atomic_uint binding is too large; see gl_MaxAtomicCounterBindings
atomic_uints can only be used in uniform variables or function parameters:
attachment index is too large
attribute does not apply to a loop
attribute does not apply to a selection
attribute does not apply to a switch
attribute vec4  gl_Color;attribute vec4  gl_SecondaryColor;attribute vec3  gl_Normal;attribute vec4  gl_Vertex;attribute vec4  gl_MultiTexCoord0;attribute vec4  gl_MultiTexCoord1;attribute vec4  gl_MultiTexCoord2;attribute vec4  gl_MultiTexCoord3;attribute vec4  gl_MultiTexCoord4;attribute vec4  gl_MultiTexCoord5;attribute vec4  gl_MultiTexCoord6;attribute vec4  gl_MultiTexCoord7;attribute float gl_FogCoord;
attribute with arguments not recognized, skipping
attribute.cpp
attribute_list
au
b
b-=
b3/
b7
b77
b8
bJ>
bW=
bW>
b\>
b`>
bad argument
bad character in float exponent
bad digit in hexadecimal literal
bad expression
bad profile name; use es, core, or compatibility
bad tokens following profile -- expected newline
ballotARB
baseViewIndex cannot be less than 0.
baseViewIndex+numViews cannot be greater than GL_MAX_ARRAY_TEXTURE_LAYERS.
basic_string
behavior for extension not specified
behavior invalid
behavior not supported:
bf/
binarysize out of valid range.
bind.cpp
binding=
bindingindex must be smaller than MAX_VERTEX_ATTRIB_BINDINGS
bindingindex must be smaller than MAX_VERTEX_ATTRIB_BINDINGS.
bit shift left
bit shift right
bit-shift left assign
bit-shift right assign
bit-wise and
bit-wise and second child into first child
bit-wise not
bit-wise operator supported in GLSL ES 3.00 and above only
bit-wise or
bit-wise or second child into first child
bit-wise shift first child left by second child
bit-wise shift first child right by second child
bit-wise shift left
bit-wise shift right
bit-wise xor
bit-wise xor second child into first child
bitCount
bitFieldReverse
bitfieldExtract
bitfieldExtract(0D0C0C
bitfieldExtract(1C0C0C
bitfieldExtract(3C0C0C
bitfieldInsert
bitfieldInsert(0C0C0C0C
bitfieldInsert(0D0D0C0C
bitfieldInsert(1C1C0C0C
bitfieldInsert(1D1D0C0C
bitfieldInsert(2C2C0C0C
bitfieldInsert(2D2D0C0C
bitfieldInsert(3C3C0C0C
bitfieldInsert(3D3D0C0C
bitfieldReverse
bitwise and
bitwise exclusive or
bitwise inclusive or
bitwise not
bitwise-and assign
bitwise-or assign
bitwise-xor assign
blend_support
blend_support_all_equations
blend_support_colorburn
blend_support_colordodge
blend_support_darken
blend_support_difference
blend_support_exclusion
blend_support_hardlight
blend_support_hsl_color
blend_support_hsl_hue
blend_support_hsl_luminosity
blend_support_hsl_saturation
blend_support_lighten
blend_support_multiply
blend_support_overlay
blend_support_screen
blend_support_softlight
block
block declaration
block instance name redefinition
block name cannot redefine a non-block name
block redeclaration has extra members
block-
block_structure
blocklayout.cpp
bool   subgroupAllEqual(double);bool   subgroupAllEqual(dvec2);bool   subgroupAllEqual(dvec3);bool   subgroupAllEqual(dvec4);double subgroupBroadcast(double, uint);dvec2  subgroupBroadcast(dvec2, uint);dvec3  subgroupBroadcast(dvec3, uint);dvec4  subgroupBroadcast(dvec4, uint);double subgroupBroadcastFirst(double);dvec2  subgroupBroadcastFirst(dvec2);dvec3  subgroupBroadcastFirst(dvec3);dvec4  subgroupBroadcastFirst(dvec4);double subgroupShuffle(double, uint);dvec2  subgroupShuffle(dvec2, uint);dvec3  subgroupShuffle(dvec3, uint);dvec4  subgroupShuffle(dvec4, uint);double subgroupShuffleXor(double, uint);dvec2  subgroupShuffleXor(dvec2, uint);dvec3  subgroupShuffleXor(dvec3, uint);dvec4  subgroupShuffleXor(dvec4, uint);double subgroupShuffleUp(double, uint delta);dvec2  subgroupShuffleUp(dvec2, uint delta);dvec3  subgroupShuffleUp(dvec3, uint delta);dvec4  subgroupShuffleUp(dvec4, uint delta);double subgroupShuffleDown(double, uint delta);dvec2  subgroupShuffleDown(dvec2, uint delta);dvec3  subgroupShuffleDown(dvec3, uint delta);dvec4  subgroupShuffleDown(dvec4, uint delta);double subgroupAdd(double);dvec2  subgroupAdd(dvec2);dvec3  subgroupAdd(dvec3);dvec4  subgroupAdd(dvec4);double subgroupMul(double);dvec2  subgroupMul(dvec2);dvec3  subgroupMul(dvec3);dvec4  subgroupMul(dvec4);double subgroupMin(double);dvec2  subgroupMin(dvec2);dvec3  subgroupMin(dvec3);dvec4  subgroupMin(dvec4);double subgroupMax(double);dvec2  subgroupMax(dvec2);dvec3  subgroupMax(dvec3);dvec4  subgroupMax(dvec4);double subgroupInclusiveAdd(double);dvec2  subgroupInclusiveAdd(dvec2);dvec3  subgroupInclusiveAdd(dvec3);dvec4  subgroupInclusiveAdd(dvec4);double subgroupInclusiveMul(double);dvec2  subgroupInclusiveMul(dvec2);dvec3  subgroupInclusiveMul(dvec3);dvec4  subgroupInclusiveMul(dvec4);double subgroupInclusiveMin(double);dvec2  subgroupInclusiveMin(dvec2);dvec3  subgroupInclusiveMin(dvec3);dvec4  subgroupInclusiveMin(dvec4);double subgroupInclusiveMax(double);dvec2  subgroupInclusiveMax(dvec2);dvec3  subgroupInclusiveMax(dvec3);dvec4  subgroupInclusiveMax(dvec4);double subgroupExclusiveAdd(double);dvec2  subgroupExclusiveAdd(dvec2);dvec3  subgroupExclusiveAdd(dvec3);dvec4  subgroupExclusiveAdd(dvec4);double subgroupExclusiveMul(double);dvec2  subgroupExclusiveMul(dvec2);dvec3  subgroupExclusiveMul(dvec3);dvec4  subgroupExclusiveMul(dvec4);double subgroupExclusiveMin(double);dvec2  subgroupExclusiveMin(dvec2);dvec3  subgroupExclusiveMin(dvec3);dvec4  subgroupExclusiveMin(dvec4);double subgroupExclusiveMax(double);dvec2  subgroupExclusiveMax(dvec2);dvec3  subgroupExclusiveMax(dvec3);dvec4  subgroupExclusiveMax(dvec4);double subgroupClusteredAdd(double, uint);dvec2  subgroupClusteredAdd(dvec2, uint);dvec3  subgroupClusteredAdd(dvec3, uint);dvec4  subgroupClusteredAdd(dvec4, uint);double subgroupClusteredMul(double, uint);dvec2  subgroupClusteredMul(dvec2, uint);dvec3  subgroupClusteredMul(dvec3, uint);dvec4  subgroupClusteredMul(dvec4, uint);double subgroupClusteredMin(double, uint);dvec2  subgroupClusteredMin(dvec2, uint);dvec3  subgroupClusteredMin(dvec3, uint);dvec4  subgroupClusteredMin(dvec4, uint);double subgroupClusteredMax(double, uint);dvec2  subgroupClusteredMax(dvec2, uint);dvec3  subgroupClusteredMax(dvec3, uint);dvec4  subgroupClusteredMax(dvec4, uint);double subgroupQuadBroadcast(double, uint);dvec2  subgroupQuadBroadcast(dvec2, uint);dvec3  subgroupQuadBroadcast(dvec3, uint);dvec4  subgroupQuadBroadcast(dvec4, uint);double subgroupQuadSwapHorizontal(double);dvec2  subgroupQuadSwapHorizontal(dvec2);dvec3  subgroupQuadSwapHorizontal(dvec3);dvec4  subgroupQuadSwapHorizontal(dvec4);double subgroupQuadSwapVertical(double);dvec2  subgroupQuadSwapVertical(dvec2);dvec3  subgroupQuadSwapVertical(dvec3);dvec4  subgroupQuadSwapVertical(dvec4);double subgroupQuadSwapDiagonal(double);dvec2  subgroupQuadSwapDiagonal(dvec2);dvec3  subgroupQuadSwapDiagonal(dvec3);dvec4  subgroupQuadSwapDiagonal(dvec4);
bool angle::pp::numeric_lex_int<int>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int*)
bool angle::pp::numeric_lex_int<unsigned int>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int*)
bool anyInvocation(bool);bool allInvocations(bool);bool allInvocationsEqual(bool);
bool anyInvocationARB(bool);bool allInvocationsARB(bool);bool allInvocationsEqualARB(bool);
bool gl::(anonymous namespace)::ValidateTextureCompareFuncValue<float const>(gl::Context*, float const*)
bool gl::(anonymous namespace)::ValidateTextureCompareFuncValue<int const>(gl::Context*, int const*)
bool gl::(anonymous namespace)::ValidateTextureCompareModeValue<float const>(gl::Context*, float const*)
bool gl::(anonymous namespace)::ValidateTextureCompareModeValue<int const>(gl::Context*, int const*)
bool gl::(anonymous namespace)::ValidateTextureMagFilterValue<float const>(gl::Context*, float const*)
bool gl::(anonymous namespace)::ValidateTextureMagFilterValue<int const>(gl::Context*, int const*)
bool gl::(anonymous namespace)::ValidateTextureMinFilterValue<float const>(gl::Context*, float const*, bool)
bool gl::(anonymous namespace)::ValidateTextureMinFilterValue<int const>(gl::Context*, int const*, bool)
bool gl::(anonymous namespace)::ValidateTextureSRGBDecodeValue<float const>(gl::Context*, float const*)
bool gl::(anonymous namespace)::ValidateTextureSRGBDecodeValue<int const>(gl::Context*, int const*)
bool gl::(anonymous namespace)::ValidateTextureWrapModeValue<float const>(gl::Context*, float const*, bool)
bool gl::(anonymous namespace)::ValidateTextureWrapModeValue<int const>(gl::Context*, int const*, bool)
bool gl::GetFormatSupport<3ul>(gl::TextureCapsMap const&, unsigned int const (&) [3ul], bool, bool, bool, bool)
bool gl::GetFormatSupport<4ul>(gl::TextureCapsMap const&, unsigned int const (&) [4ul], bool, bool, bool, bool)
bool gl::GetFormatSupport<5ul>(gl::TextureCapsMap const&, unsigned int const (&) [5ul], bool, bool, bool, bool)
bool gl::RequireES<1u, 0u>(gl::Version const&, gl::Extensions const&)
bool gl::RequireES<2u, 0u>(gl::Version const&, gl::Extensions const&)
bool gl::RequireES<3u, 0u>(gl::Version const&, gl::Extensions const&)
bool gl::RequireESOrExt<3u, 0u, &gl::Extensions::compressedEACR11SignedTexture>(gl::Version const&, gl::Extensions const&)
bool gl::RequireESOrExt<3u, 0u, &gl::Extensions::compressedEACR11UnsignedTexture>(gl::Version const&, gl::Extensions const&)
bool gl::RequireESOrExt<3u, 0u, &gl::Extensions::compressedEACRG11SignedTexture>(gl::Version const&, gl::Extensions const&)
bool gl::RequireESOrExt<3u, 0u, &gl::Extensions::compressedEACRG11UnsignedTexture>(gl::Version const&, gl::Extensions const&)
bool gl::RequireESOrExt<3u, 0u, &gl::Extensions::compressedETC2PunchthroughARGB8Texture>(gl::Version const&, gl::Extensions const&)
bool gl::RequireESOrExt<3u, 0u, &gl::Extensions::compressedETC2PunchthroughAsRGB8AlphaTexture>(gl::Version const&, gl::Extensions const&)
bool gl::RequireESOrExt<3u, 0u, &gl::Extensions::compressedETC2RGB8Texture>(gl::Version const&, gl::Extensions const&)
bool gl::RequireESOrExt<3u, 0u, &gl::Extensions::compressedETC2RGBA8Texture>(gl::Version const&, gl::Extensions const&)
bool gl::RequireESOrExt<3u, 0u, &gl::Extensions::compressedETC2sRGB8Alpha8Texture>(gl::Version const&, gl::Extensions const&)
bool gl::RequireESOrExt<3u, 0u, &gl::Extensions::compressedETC2sRGB8Texture>(gl::Version const&, gl::Extensions const&)
bool gl::RequireESOrExt<3u, 0u, &gl::Extensions::depthTextures>(gl::Version const&, gl::Extensions const&)
bool gl::RequireESOrExt<3u, 0u, &gl::Extensions::packedDepthStencil>(gl::Version const&, gl::Extensions const&)
bool gl::RequireESOrExt<3u, 0u, &gl::Extensions::rgb8rgba8>(gl::Version const&, gl::Extensions const&)
bool gl::RequireESOrExt<3u, 0u, &gl::Extensions::sRGB>(gl::Version const&, gl::Extensions const&)
bool gl::RequireESOrExt<3u, 0u, &gl::Extensions::textureRG>(gl::Version const&, gl::Extensions const&)
bool gl::RequireESOrExt<3u, 0u, &gl::Extensions::textureStorage>(gl::Version const&, gl::Extensions const&)
bool gl::RequireESOrExtOrExt<3u, 0u, &gl::Extensions::depthTextures, &gl::Extensions::packedDepthStencil>(gl::Version const&, gl::Extensions const&)
bool gl::RequireExt<&gl::Extensions::colorBufferFloat>(gl::Version const&, gl::Extensions const&)
bool gl::RequireExt<&gl::Extensions::colorBufferFloatRGB>(gl::Version const&, gl::Extensions const&)
bool gl::RequireExt<&gl::Extensions::compressedETC1RGB8Texture>(gl::Version const&, gl::Extensions const&)
bool gl::RequireExt<&gl::Extensions::lossyETCDecode>(gl::Version const&, gl::Extensions const&)
bool gl::RequireExt<&gl::Extensions::sRGB>(gl::Version const&, gl::Extensions const&)
bool gl::RequireExt<&gl::Extensions::textureCompressionBPTC>(gl::Version const&, gl::Extensions const&)
bool gl::RequireExt<&gl::Extensions::textureCompressionDXT1>(gl::Version const&, gl::Extensions const&)
bool gl::RequireExt<&gl::Extensions::textureCompressionDXT3>(gl::Version const&, gl::Extensions const&)
bool gl::RequireExt<&gl::Extensions::textureCompressionDXT5>(gl::Version const&, gl::Extensions const&)
bool gl::RequireExt<&gl::Extensions::textureCompressionS3TCsRGB>(gl::Version const&, gl::Extensions const&)
bool gl::RequireExt<&gl::Extensions::textureFloat>(gl::Version const&, gl::Extensions const&)
bool gl::RequireExt<&gl::Extensions::textureFloatLinear>(gl::Version const&, gl::Extensions const&)
bool gl::RequireExt<&gl::Extensions::textureFormatBGRA8888>(gl::Version const&, gl::Extensions const&)
bool gl::RequireExt<&gl::Extensions::textureHalfFloat>(gl::Version const&, gl::Extensions const&)
bool gl::RequireExt<&gl::Extensions::textureHalfFloatLinear>(gl::Version const&, gl::Extensions const&)
bool gl::RequireExt<&gl::Extensions::textureNorm16>(gl::Version const&, gl::Extensions const&)
bool gl::RequireExt<&gl::Extensions::textureRG>(gl::Version const&, gl::Extensions const&)
bool gl::RequireExt<&gl::Extensions::textureStorage>(gl::Version const&, gl::Extensions const&)
bool gl::RequireExtAndExt<&gl::Extensions::textureFloat, &gl::Extensions::textureRG>(gl::Version const&, gl::Extensions const&)
bool gl::RequireExtAndExt<&gl::Extensions::textureHalfFloat, &gl::Extensions::colorBufferHalfFloat>(gl::Version const&, gl::Extensions const&)
bool gl::RequireExtAndExt<&gl::Extensions::textureHalfFloat, &gl::Extensions::textureRG>(gl::Version const&, gl::Extensions const&)
bool gl::RequireExtAndExt<&gl::Extensions::textureStorage, &gl::Extensions::textureFloat>(gl::Version const&, gl::Extensions const&)
bool gl::RequireExtAndExt<&gl::Extensions::textureStorage, &gl::Extensions::textureHalfFloat>(gl::Version const&, gl::Extensions const&)
bool gl::RequireExtOrExt<&gl::Extensions::depthTextures, &gl::Extensions::depth32>(gl::Version const&, gl::Extensions const&)
bool gl::RequireExtOrExt<&gl::Extensions::textureCompressionASTCHDR, &gl::Extensions::textureCompressionASTCLDR>(gl::Version const&, gl::Extensions const&)
bool gl::ValidateSamplerParameterBase<float const>(gl::Context*, unsigned int, unsigned int, int, float const*)
bool gl::ValidateSamplerParameterBase<float>(gl::Context*, unsigned int, unsigned int, int, float*)
bool gl::ValidateSamplerParameterBase<int const>(gl::Context*, unsigned int, unsigned int, int, int const*)
bool gl::ValidateSamplerParameterBase<int>(gl::Context*, unsigned int, unsigned int, int, int*)
bool gl::ValidateTexParameterBase<float>(gl::Context*, gl::TextureType, unsigned int, int, float const*)
bool gl::ValidateTexParameterBase<int>(gl::Context*, gl::TextureType, unsigned int, int, int const*)
bool gl_HelperInvocation;flat in highp int gl_PrimitiveID;flat in highp int gl_Layer;
bool glslang::TType::contains<glslang::TType::containsArray() const::{lambda(glslang::TType const*)#1}>(glslang::TType::containsArray() const::{lambda(glslang::TType const*)#1}) const
bool glslang::TType::contains<glslang::TType::containsBasicType(glslang::TBasicType) const::{lambda(glslang::TType const*)#1}>(glslang::TType::containsBasicType(glslang::TBasicType) const::{lambda(glslang::TType const*)#1}) const
bool glslang::TType::contains<glslang::TType::containsBuiltIn() const::{lambda(glslang::TType const*)#1}>(glslang::TType::containsBuiltIn() const::{lambda(glslang::TType const*)#1}) const
bool glslang::TType::contains<glslang::TType::containsNonOpaque() const::{lambda(glslang::TType const*)#1}>(glslang::TType::containsNonOpaque() const::{lambda(glslang::TType const*)#1}) const
bool glslang::TType::contains<glslang::TType::containsOpaque() const::{lambda(glslang::TType const*)#1}>(glslang::TType::containsOpaque() const::{lambda(glslang::TType const*)#1}) const
bool glslang::TType::contains<glslang::TType::containsSpecializationSize() const::{lambda(glslang::TType const*)#1}>(glslang::TType::containsSpecializationSize() const::{lambda(glslang::TType const*)#1}) const
bool glslang::TType::contains<glslang::TType::containsStructure() const::{lambda(glslang::TType const*)#1}>(glslang::TType::containsStructure() const::{lambda(glslang::TType const*)#1}) const
bool glslang::TType::contains<glslang::TType::containsUnsizedArray() const::{lambda(glslang::TType const*)#1}>(glslang::TType::containsUnsizedArray() const::{lambda(glslang::TType const*)#1}) const
bool isTextureUnitEnabled(int unit){    return enable_texture_2d[unit] || enable_texture_cube_map[unit];}vec4 getTextureColor(int unit){    vec4 res;    switch (unit)    {        case 0:            if (enable_texture_2d[0])            {                res = texture(tex_sampler0, texcoord0_varying.xy);            }            else if (enable_texture_cube_map[0])            {                res = texture(tex_cube_sampler0, texcoord0_varying.xyz);            }            break;        case 1:            if (enable_texture_2d[1])            {                res = texture(tex_sampler1, texcoord1_varying.xy);            }            else if (enable_texture_cube_map[1])            {                res = texture(tex_cube_sampler1, texcoord1_varying.xyz);            }            break;        case 2:            if (enable_texture_2d[2])            {                res = texture(tex_sampler2, texcoord2_varying.xy);            }            else if (enable_texture_cube_map[2])            {                res = texture(tex_cube_sampler2, texcoord2_varying.xyz);            }            break;        case 3:            if (enable_texture_2d[3])            {                res = texture(tex_sampler3, texcoord3_varying.xy);            }            else if (enable_texture_cube_map[3])            {                // TODO: Weird stuff happens                // res = texture(tex_cube_sampler3, texcoord3_varying.xyz);            }            break;        default:            break;    }    return res;}vec4 getPointSpriteTextureColor(int unit){    vec4 res;    switch (unit)    {        case 0:            if (enable_texture_2d[0])            {                res = texture(tex_sampler0, gl_PointCoord.xy);            }            break;        case 1:            if (enable_texture_2d[1])            {                res = texture(tex_sampler1, gl_PointCoord.xy);            }            break;        case 2:            if (enable_texture_2d[2])            {                res = texture(tex_sampler2, gl_PointCoord.xy);            }            break;        case 3:            if (enable_texture_2d[3])            {                res = texture(tex_sampler3, gl_PointCoord.xy);            }            break;        default:            break;    }    return res;}vec3 textureCombineSrcnOpnRgb(int srcnRgb,                              int opnRgb,                              vec4 textureEnvColor,                              vec4 vertexColor,                              vec4 texturePrevColor,                              vec4 textureColor){    vec3 res;    vec4 op;    switch (srcnRgb)    {        case kTexture:            op = textureColor;            break;        case kConstant:            op = textureEnvColor;            break;        case kPrimaryColor:            op = vertexColor;            break;        case kPrevious:            op = texturePrevColor;            break;        default:            op = texturePrevColor;            break;    }    switch (opnRgb)    {        case kSrcColor:            res = op.rgb;            break;        case kOneMinusSrcColor:            res = 1.0 - op.rgb;            break;        case kSrcAlpha:            res = vec3(op.a, op.a, op.a);            break;        case kOneMinusSrcAlpha:            res = vec3(1.0 - op.a, 1.0 - op.a, 1.0 - op.a);            break;        default:            break;    }    return res;}float textureCombineSrcnOpnAlpha(int srcn,                                 int opn,                                 vec4 textureEnvColor,                                 vec4 vertexColor,                                 vec4 texturePrevColor,                                 vec4 textureColor){    float res;    vec4 op;    switch (srcn)    {        case kTexture:            op = textureColor;            break;        case kConstant:            op = textureEnvColor;            break;        case kPrimaryColor:            op = vertexColor;            break;        case kPrevious:            op = texturePrevColor;            break;        default:            op = texturePrevColor;            break;    }    switch (opn)    {        case kSrcAlpha:            res = op.a;            break;        case kOneMinusSrcAlpha:            res = 1.0 - op.a;            break;        default:            break;    }    return res;}vec4 textureCombine(int combineRgb,                    int combineAlpha,                    int src0Rgb,                    int src0Alpha,                    int src1Rgb,                    int src1Alpha,                    int src2Rgb,                    int src2Alpha,                    int op0Rgb,                    int op0Alpha,                    int op1Rgb,                    int op1Alpha,                    int op2Rgb,                    int op2Alpha,                    vec4 textureEnvColor,                    float rgbScale,                    float alphaScale,                    vec4 vertexColor,                    vec4 texturePrevColor,                    vec4 textureColor){    vec3 resRgb;    float resAlpha;    vec3 arg0Rgb;    float arg0Alpha;    vec3 arg1Rgb;    float arg1Alpha;    vec3 arg2Rgb;    float arg2Alpha;    float dotVal;    arg0Rgb   = textureCombineSrcnOpnRgb(src0Rgb, op0Rgb, textureEnvColor, vertexColor,                                       texturePrevColor, textureColor);    arg0Alpha = textureCombineSrcnOpnAlpha(src0Alpha, op0Alpha, textureEnvColor, vertexColor,                                           texturePrevColor, textureColor);    if (combineRgb != kReplace)    {        arg1Rgb = textureCombineSrcnOpnRgb(src1Rgb, op1Rgb, textureEnvColor, vertexColor,                                           texturePrevColor, textureColor);    }    if (combineAlpha != kReplace)    {        arg1Alpha = textureCombineSrcnOpnAlpha(src1Alpha, op1Alpha, textureEnvColor, vertexColor,                                               texturePrevColor, textureColor);    }    if (combineRgb == kInterpolate)    {        arg2Rgb = textureCombineSrcnOpnRgb(src2Rgb, op2Rgb, textureEnvColor, vertexColor,                                           texturePrevColor, textureColor);    }    if (combineAlpha == kInterpolate)    {        arg2Alpha = textureCombineSrcnOpnAlpha(src2Alpha, op2Alpha, textureEnvColor, vertexColor,                                               texturePrevColor, textureColor);    }    switch (combineRgb)    {        case kReplace:            resRgb = arg0Rgb;            break;        case kModulate:            resRgb = arg0Rgb * arg1Rgb;            break;        case kAdd:            resRgb = arg0Rgb + arg1Rgb;            break;        case kAddSigned:            resRgb = arg0Rgb + arg1Rgb - 0.5;            break;        case kInterpolate:            resRgb = arg0Rgb * arg2Rgb + arg1Rgb * (1.0 - arg2Rgb);            break;        case kSubtract:            resRgb = arg0Rgb - arg1Rgb;            break;        default:            break;    }    switch (combineAlpha)    {        case kReplace:            resAlpha = arg0Alpha;            break;        case kModulate:            resAlpha = arg0Alpha * arg1Alpha;            break;        case kAdd:            resAlpha = arg0Alpha + arg1Alpha;            break;        case kAddSigned:            resAlpha = arg0Alpha + arg1Alpha - 0.5;            break;        case kInterpolate:            resAlpha = arg0Alpha * arg2Alpha + arg1Alpha * (1.0 - arg2Alpha);            break;        case kSubtract:            resAlpha = arg0Alpha - arg1Alpha;            break;        default:            break;    }    if (combineRgb == kDot3Rgb || combineRgb == kDot3Rgba)    {        dotVal = 4.0 * dot(arg0Rgb - 0.5, arg1Rgb - 0.5);        if (combineRgb == kDot3Rgb)        {            return vec4(dotVal, dotVal, dotVal, resAlpha);        }        else        {            return vec4(dotVal, dotVal, dotVal, dotVal);        }    }    else    {        return vec4(resRgb, resAlpha);    }}vec4 textureFunction(int unit,                     int texFormat,                     int envMode,                     int combineRgb,                     int combineAlpha,                     int src0Rgb,                     int src0Alpha,                     int src1Rgb,                     int src1Alpha,                     int src2Rgb,                     int src2Alpha,                     int op0Rgb,                     int op0Alpha,                     int op1Rgb,                     int op1Alpha,                     int op2Rgb,                     int op2Alpha,                     vec4 textureEnvColor,                     float rgbScale,                     float alphaScale,                     vec4 vertexColor,                     vec4 texturePrevColor,                     vec4 textureColor){    if (!isTextureUnitEnabled(unit))    {        return texturePrevColor;    }    vec4 res;    switch (envMode)    {        case kReplace:            switch (texFormat)            {                case kAlpha:                    res.rgb = texturePrevColor.rgb;                    res.a   = textureColor.a;                    break;                case kRGBA:                case kLuminanceAlpha:                    res.rgba = textureColor.rgba;                    break;                case kRGB:                case kLuminance:                default:                    res.rgb = textureColor.rgb;                    res.a   = texturePrevColor.a;                    break;            }            break;        case kModulate:            switch (texFormat)            {                case kAlpha:                    res.rgb = texturePrevColor.rgb;                    res.a   = texturePrevColor.a * textureColor.a;                    break;                case kRGBA:                case kLuminanceAlpha:                    res.rgba = texturePrevColor.rgba * textureColor.rgba;                    break;                case kRGB:                case kLuminance:                default:                    res.rgb = texturePrevColor.rgb * textureColor.rgb;                    res.a   = texturePrevColor.a;                    break;            }            break;        case kDecal:            switch (texFormat)            {                case kRGB:                    res.rgb = textureColor.rgb;                    res.a   = texturePrevColor.a;                    break;                case kRGBA:                    res.rgb = texturePrevColor.rgb * (1.0 - textureColor.a) +                              textureColor.rgb * textureColor.a;                    res.a = texturePrevColor.a;                    break;                case kAlpha:                case kLuminance:                case kLuminanceAlpha:                default:                    res.rgb = texturePrevColor.rgb * textureColor.rgb;                    res.a   = texturePrevColor.a;                    break;            }            break;        case kBlend:            switch (texFormat)            {                case kAlpha:                    res.rgb = texturePrevColor.rgb;                    res.a   = textureColor.a * texturePrevColor.a;                    break;                case kLuminance:                case kRGB:                    res.rgb = texturePrevColor.rgb * (1.0 - textureColor.rgb) +                              textureEnvColor.rgb * textureColor.rgb;                    res.a = texturePrevColor.a;                    break;                case kLuminanceAlpha:                case kRGBA:                default:                    res.rgb = texturePrevColor.rgb * (1.0 - textureColor.rgb) +                              textureEnvColor.rgb * textureColor.rgb;                    res.a = textureColor.a * texturePrevColor.a;                    break;            }            break;        case kAdd:            switch (texFormat)            {                case kAlpha:                    res.rgb = texturePrevColor.rgb;                    res.a   = textureColor.a * texturePrevColor.a;                    break;                case kLuminance:                case kRGB:                    res.rgb = texturePrevColor.rgb + textureColor.rgb;                    res.a   = texturePrevColor.a;                    break;                case kLuminanceAlpha:                case kRGBA:                default:                    res.rgb = texturePrevColor.rgb + textureColor.rgb;                    res.a   = textureColor.a * texturePrevColor.a;                    break;            }            break;        case kCombine:            res = textureCombine(combineRgb, combineAlpha, src0Rgb, src0Alpha, src1Rgb, src1Alpha,                                 src2Rgb, src2Alpha, op0Rgb, op0Alpha, op1Rgb, op1Alpha, op2Rgb,                                 op2Alpha, textureEnvColor, rgbScale, alphaScale, vertexColor,                                 texturePrevColor, textureColor);            res.rgb *= rgbScale;            res.a *= alphaScale;            break;        default:            break;    }    return clamp(res, 0.0, 1.0);}
bool isnan_emu(float x) { return (x > 0.0 || x < 0.0) ? false : x != 0.0; }
bool rx::SetFloatUniformMatrix<2, 2>(unsigned int, unsigned int, int, unsigned char, float const*, unsigned char*)
bool rx::SetFloatUniformMatrix<2, 3>(unsigned int, unsigned int, int, unsigned char, float const*, unsigned char*)
bool rx::SetFloatUniformMatrix<2, 4>(unsigned int, unsigned int, int, unsigned char, float const*, unsigned char*)
bool rx::SetFloatUniformMatrix<3, 2>(unsigned int, unsigned int, int, unsigned char, float const*, unsigned char*)
bool rx::SetFloatUniformMatrix<3, 3>(unsigned int, unsigned int, int, unsigned char, float const*, unsigned char*)
bool rx::SetFloatUniformMatrix<3, 4>(unsigned int, unsigned int, int, unsigned char, float const*, unsigned char*)
bool rx::SetFloatUniformMatrix<4, 2>(unsigned int, unsigned int, int, unsigned char, float const*, unsigned char*)
bool rx::SetFloatUniformMatrix<4, 3>(unsigned int, unsigned int, int, unsigned char, float const*, unsigned char*)
bool rx::SetFloatUniformMatrix<4, 4>(unsigned int, unsigned int, int, unsigned char, float const*, unsigned char*)
bool sh::CheckVariablesInPackingLimits<sh::Uniform>(unsigned int, std::__1::vector<sh::Uniform, std::__1::allocator<sh::Uniform> > const&)
bool sh::TParseContext::checkCanUseOneOfExtensions<1ul>(sh::TSourceLoc const&, std::__1::array<sh::TExtension, 1ul> const&)
bool sh::TParseContext::checkCanUseOneOfExtensions<3ul>(sh::TSourceLoc const&, std::__1::array<sh::TExtension, 3ul> const&)
bool sparseTexelsResidentARB(int code);
bool std::__1::__insertion_sort_incomplete<bool (*&)(gl::PackedVarying const&, gl::PackedVarying const&), gl::PackedVarying*>(gl::PackedVarying*, gl::PackedVarying*, bool (*&)(gl::PackedVarying const&, gl::PackedVarying const&))
bool std::__1::__insertion_sort_incomplete<bool (*&)(sh::ShaderVariable const&, sh::ShaderVariable const&), sh::Varying*>(sh::Varying*, sh::Varying*, bool (*&)(sh::ShaderVariable const&, sh::ShaderVariable const&))
bool std::__1::__insertion_sort_incomplete<bool (*&)(sh::TIntermTraverser::NodeInsertMultipleEntry const&, sh::TIntermTraverser::NodeInsertMultipleEntry const&), sh::TIntermTraverser::NodeInsertMultipleEntry*>(sh::TIntermTraverser::NodeInsertMultipleEntry*, sh::TIntermTraverser::NodeInsertMultipleEntry*, bool (*&)(sh::TIntermTraverser::NodeInsertMultipleEntry const&, sh::TIntermTraverser::NodeInsertMultipleEntry const&))
bool std::__1::__insertion_sort_incomplete<egl::ConfigSorter&, egl::Config const**>(egl::Config const**, egl::Config const**, egl::ConfigSorter&)
bool std::__1::__insertion_sort_incomplete<sh::(anonymous namespace)::TVariableInfoComparer&, sh::ShaderVariable*>(sh::ShaderVariable*, sh::ShaderVariable*, sh::(anonymous namespace)::TVariableInfoComparer&)
bool std::__1::__insertion_sort_incomplete<std::__1::__less<gl::PackedVaryingRegister, gl::PackedVaryingRegister>&, gl::PackedVaryingRegister*>(gl::PackedVaryingRegister*, gl::PackedVaryingRegister*, std::__1::__less<gl::PackedVaryingRegister, gl::PackedVaryingRegister>&)
boolean expression expected
br7
break
break statement only allowed in loops and switch statements
break statement only allowed in switch and loops
buffer cannot reference a 2D texture with the name 0.
buffer cannot reference a 3D texture with the name 0.
buffer cannot reference a cubemap texture with the name 0.
buffer cannot reference a renderbuffer with the name 0.
buffer is non-zero and offset is negative.
buffer is non-zero and size is less than or equal to zero.
buffer is too large:
buffers can be declared only as blocks
built in unary operator function.  Type: %s
built-in block redeclaration
built-in functions cannot be redefined
bvec2 isnan_emu(vec2 x){    bvec2 isnan;    for (int i = 0; i < 2; i++)    {        isnan[i] = (x[i] > 0.0 || x[i] < 0.0) ? false : x[i] != 0.0;    }    return isnan;}
bvec2 lessThan(uvec2 x, uvec2 y);bvec3 lessThan(uvec3 x, uvec3 y);bvec4 lessThan(uvec4 x, uvec4 y);bvec2 lessThanEqual(uvec2 x, uvec2 y);bvec3 lessThanEqual(uvec3 x, uvec3 y);bvec4 lessThanEqual(uvec4 x, uvec4 y);bvec2 greaterThan(uvec2 x, uvec2 y);bvec3 greaterThan(uvec3 x, uvec3 y);bvec4 greaterThan(uvec4 x, uvec4 y);bvec2 greaterThanEqual(uvec2 x, uvec2 y);bvec3 greaterThanEqual(uvec3 x, uvec3 y);bvec4 greaterThanEqual(uvec4 x, uvec4 y);bvec2 equal(uvec2 x, uvec2 y);bvec3 equal(uvec3 x, uvec3 y);bvec4 equal(uvec4 x, uvec4 y);bvec2 notEqual(uvec2 x, uvec2 y);bvec3 notEqual(uvec3 x, uvec3 y);bvec4 notEqual(uvec4 x, uvec4 y);
bvec2 lessThan(vec2 x, vec2 y);bvec3 lessThan(vec3 x, vec3 y);bvec4 lessThan(vec4 x, vec4 y);bvec2 lessThan(ivec2 x, ivec2 y);bvec3 lessThan(ivec3 x, ivec3 y);bvec4 lessThan(ivec4 x, ivec4 y);bvec2 lessThanEqual(vec2 x, vec2 y);bvec3 lessThanEqual(vec3 x, vec3 y);bvec4 lessThanEqual(vec4 x, vec4 y);bvec2 lessThanEqual(ivec2 x, ivec2 y);bvec3 lessThanEqual(ivec3 x, ivec3 y);bvec4 lessThanEqual(ivec4 x, ivec4 y);bvec2 greaterThan(vec2 x, vec2 y);bvec3 greaterThan(vec3 x, vec3 y);bvec4 greaterThan(vec4 x, vec4 y);bvec2 greaterThan(ivec2 x, ivec2 y);bvec3 greaterThan(ivec3 x, ivec3 y);bvec4 greaterThan(ivec4 x, ivec4 y);bvec2 greaterThanEqual(vec2 x, vec2 y);bvec3 greaterThanEqual(vec3 x, vec3 y);bvec4 greaterThanEqual(vec4 x, vec4 y);bvec2 greaterThanEqual(ivec2 x, ivec2 y);bvec3 greaterThanEqual(ivec3 x, ivec3 y);bvec4 greaterThanEqual(ivec4 x, ivec4 y);bvec2 equal(vec2 x, vec2 y);bvec3 equal(vec3 x, vec3 y);bvec4 equal(vec4 x, vec4 y);bvec2 equal(ivec2 x, ivec2 y);bvec3 equal(ivec3 x, ivec3 y);bvec4 equal(ivec4 x, ivec4 y);bvec2 equal(bvec2 x, bvec2 y);bvec3 equal(bvec3 x, bvec3 y);bvec4 equal(bvec4 x, bvec4 y);bvec2 notEqual(vec2 x, vec2 y);bvec3 notEqual(vec3 x, vec3 y);bvec4 notEqual(vec4 x, vec4 y);bvec2 notEqual(ivec2 x, ivec2 y);bvec3 notEqual(ivec3 x, ivec3 y);bvec4 notEqual(ivec4 x, ivec4 y);bvec2 notEqual(bvec2 x, bvec2 y);bvec3 notEqual(bvec3 x, bvec3 y);bvec4 notEqual(bvec4 x, bvec4 y);bool any(bvec2 x);bool any(bvec3 x);bool any(bvec4 x);bool all(bvec2 x);bool all(bvec3 x);bool all(bvec4 x);bvec2 not(bvec2 x);bvec3 not(bvec3 x);bvec4 not(bvec4 x);
bvec3 isnan_emu(vec3 x){    bvec3 isnan;    for (int i = 0; i < 3; i++)    {        isnan[i] = (x[i] > 0.0 || x[i] < 0.0) ? false : x[i] != 0.0;    }    return isnan;}
bvec4 isnan_emu(vec4 x){    bvec4 isnan;    for (int i = 0; i < 4; i++)    {        isnan[i] = (x[i] > 0.0 || x[i] < 0.0) ? false : x[i] != 0.0;    }    return isnan;}
c
c7
c8
c>
c?=
cJSON.c
cJSON_Delete
cJSON_Free
cJSON_GetArrayItem
cJSON_GetArraySize
cJSON_GetObjectItem
cJSON_InitHooks
cJSON_Parse
cJSON_Print
cJSON_PrintUnformatted
cJSON_free
cJSON_malloc
cT7
cW2
cY=
c\7
c^(
c_4
c`7
cacheProgram
call argument
calling
calling user function from global scope
calloc
can only apply depth layout to gl_FragDepth
can only apply highp to atomic_uint
can only apply origin_upper_left and pixel_center_origin to gl_FragCoord
can only apply to 'in'
can only apply to 'out'
can only apply to a standalone qualifier
can only apply to an output
can only apply to an output, or to an input in a non-vertex stage
can only apply to uniform, buffer, in, or out storage qualifiers
can only be applied to 'const'-qualified scalar
can only be applied to a scalar
can only be applied to a standalone 'out'
can only be followed by a single macro name
can only be used on an output
can only be used on variable declaration
can only be used with a block
can only be used with a subpass
can only be used with a uniform
can only be used with an explicit location
can only be used with std140 or std430 layout packing
can only change layout qualification of
can only have one auxiliary qualifier (centroid, patch, and sample)
can only have one interpolation qualifier (flat, smooth, noperspective)
can only redeclare a built-in block once, and before any use
can only specify on a uniform block
can only use in an in/out block
can only use on input in tessellation-evaluation shader
can only use on output in tessellation-control shader
can't construct structure containing 16-bit type
can't construct structure containing 8-bit type
can't convert
can't evaluate expression
can't find function
can't handle multiple entry points per stage
can't link compilation units from different source languages
can't modify a const
can't modify a readonly buffer
can't modify a readonly variable
can't modify a sampler
can't modify a uniform
can't modify a variable with type
can't modify a varying
can't modify an atomic_uint
can't modify an attribute
can't modify an input
can't modify any member in gl_in
can't modify gl_FragCoord
can't modify gl_FragDepth if using early_fragment_tests
can't modify gl_FrontFace
can't modify gl_FrontFacing
can't modify gl_GlobalInvocationID
can't modify gl_InstanceID
can't modify gl_InvocationID
can't modify gl_Layer in a fragment shader
can't modify gl_LocalInvocationID
can't modify gl_LocalInvocationIndex
can't modify gl_NumWorkGroups
can't modify gl_PointCoord
can't modify gl_PrimitiveID in a fragment shader
can't modify gl_PrimitiveIDIn
can't modify gl_VertexID
can't modify gl_ViewID_OVR
can't modify gl_WorkGroupID
can't modify gl_WorkGroupSize
can't modify shader input
can't modify void
can't modify work group size variable
can't read from writeonly object:
can't swizzle types containing (u)int16
can't swizzle types containing (u)int8
can't swizzle types containing float16
can't use auxiliary qualifier on a fragment output
can't use function syntax on variable
can't use interpolation qualifier on a fragment output
can't use with arrays containing float16
can't use with arrays containing int16
can't use with arrays containing int8
can't use with arrays containing uint16
can't use with arrays containing uint8
can't use with samplers or structs containing samplers
can't use with structs containing float16
can't use with structs containing int16
can't use with structs containing int8
can't use with structs containing uint16
can't use with structs containing uint8
can't use with types containing arrays sized with a specialization constant
cannot add memory qualifier to redeclared block member
cannot add non-XFB layout to redeclared block member
cannot add patch to redeclared block member
cannot add storage, auxiliary, memory, interpolation, layout, or precision qualifier to an existing variable
cannot allocate __cxa_eh_globals
cannot appear outside switch statement
cannot apply dot operator to an array
cannot apply layout qualifier to
cannot apply layout qualifiers to a shared variable
cannot apply precision statement to this type; use 'float', 'int' or a sampler type
cannot apply to 'out'
cannot apply to a block
cannot apply to a matrix, structure, or block
cannot apply to an array:
cannot apply to input
cannot apply to uniform or buffer block
cannot apply to:
cannot be a matrix
cannot be a parameter type except for '(void)'
cannot be a structure
cannot be a structure containing a bool
cannot be a structure containing a structure
cannot be a structure containing an array
cannot be a structure or array
cannot be an argument type except for '(void)'
cannot be an array of structures
cannot be applied to this type
cannot be array
cannot be bool
cannot be bool or int
cannot be matrix
cannot be negative
cannot be nested inside control flow
cannot be used (maybe an instance name is needed)
cannot be used with a structure
cannot be used with a yuvCscStandardEXT
cannot be used with push_constant
cannot change array size of redeclared block
cannot change array size of redeclared block member
cannot change arrayness of redeclared block
cannot change arrayness of redeclared block member
cannot change input storage qualification of
cannot change interpolation qualification of
cannot change output storage qualification of
cannot change previously set input primitive
cannot change previously set layout value
cannot change previously set output primitive
cannot change previously set size
cannot change previously set vertex order
cannot change previously set vertex spacing
cannot change qualification after use
cannot change qualification of
cannot change storage, memory, or auxiliary qualification of
cannot change the type of
cannot construct this type
cannot construct with these arguments
cannot contain a double, int64, or uint64
cannot convert a sampler
cannot convert a variable with type
cannot convert a variable with writeonly
cannot convert a void
cannot convert an atomic_uint
cannot convert from '
cannot convert from '%s' to '%s'
cannot convert parameter %d from '%s' to '%s'
cannot convert return value to function return type
cannot create a 2D texture from a multisampled EGL image.
cannot create thread specific key for __cxa_get_globals()
cannot declare a default, can only be used on a block
cannot declare a default, can only be used on a scalar
cannot declare a default, include a type or full declaration
cannot declare a default, use a full declaration
cannot declare arrays of arrays
cannot declare arrays of structs of this qualifier
cannot declare arrays of this qualifier
cannot declare buffer variables at global scope(outside a block)
cannot have statements before first case/default label
cannot initialize this type of qualifier
cannot lie in previous members
cannot nest a block definition inside a structure or block
cannot nest a structure definition inside a structure or block
cannot re-qualify a function name
cannot redeclare a built-in block with a user name
cannot redeclare a non block as a block
cannot redeclare a user-block member array
cannot redeclare after use
cannot redeclare block member with a different type
cannot redeclare block:
cannot redeclare with different qualification:
cannot specify matrix layout on a variable declaration
cannot specify on a variable declaration
cannot specify packing on a variable declaration
cannot use 'inout' at global scope
cannot use auxiliary or interpolation qualifiers on a function parameter
cannot use auxiliary, memory, interpolation, or precision qualifier in a default qualifier declaration (declaration with no type)
cannot use both gl_FragData and gl_FragColor
cannot use both output variable sets (gl_FragData, gl_SecondaryFragDataEXT) and (gl_FragColor, gl_SecondaryFragColorEXT)
cannot use centroid qualifier on an interface block
cannot use in a block array where new locations are needed for each block element
cannot use in preprocessor expression when expanded from macros
cannot use interpolation qualifiers on an interface block
cannot use interpolation qualifiers with patch
cannot use invariant qualifier on a function parameter
cannot use invariant qualifier on an interface block
cannot use invariant qualifier on structure members
cannot use layout qualifiers on a function parameter
cannot use layout qualifiers on structure members
cannot use memory qualifiers on structure members
cannot use offset or align qualifiers in a default qualifier declaration (declaration with no type)
cannot use sample qualifier on an interface block
cannot use storage or interpolation qualifiers on structure members
cannot zero out thread value for __cxa_get_globals()
case
case (
case label must be a scalar integer
case label must be constant
case label must have a condition
case label type does not match switch init-expression type
case labels need to be inside switch statements
case:
case_label
casting a negative float to uint is undefined
catclose
catgets
catopen
ccw
ce7
ceil
ceilf
centroid
centroid/sample/patch
character literals not supported
chdir
checkLinkStatus
checkStatus
check_type(void*)
chrono.cpp
client opengl100
client vulkan100
clip
clip_plane_enables
closedir
cluster size
cn'
coherent
color =
color = color *
color.xyz = color.xyz * color.a;
color.xyz = color.xyz / color.a;
colorIn
colorOut
column_major
combined token is invalid
combined tokens are too long
comma
common
comparison operator only defined for scalars
compilation errors.  No code generated.
compilation terminated
compileShader
completed.7058
component argument
component is too large
component-wise equal
component-wise greater than
component-wise greater than or equal
component-wise less than
component-wise less than or equal
component-wise multiply
component-wise not
component-wise not equal
component=
component_layers
compound_statement
compound_statement_no_new_scope
compute
compute shader precision not yet implemented.
condition must be a scalar integer expression
condition_variable.cpp
conditional_expression
conditionopt
conflicting output locations with previously defined output '
conflicts with
conflicts with another variable.
const (read only)
const array
const bool
const int
const int  gl_MaxClipPlanes = %d;
const int  gl_MaxCombinedTextureImageUnits = %d;
const int  gl_MaxDrawBuffers = %d;
const int  gl_MaxFragmentUniformComponents = %d;
const int  gl_MaxLights = %d;
const int  gl_MaxTextureCoords = %d;
const int  gl_MaxTextureImageUnits = %d;
const int  gl_MaxTextureUnits = %d;
const int  gl_MaxVaryingFloats = %d;
const int  gl_MaxVertexAttribs = %d;
const int  gl_MaxVertexTextureImageUnits = %d;
const int  gl_MaxVertexUniformComponents = %d;
const int gl_MaxAtomicCounterBindings = %d;
const int gl_MaxAtomicCounterBufferSize = %d;
const int gl_MaxClipDistances = %d;
const int gl_MaxCombinedAtomicCounterBuffers = %d;
const int gl_MaxCombinedAtomicCounters = %d;
const int gl_MaxCombinedClipAndCullDistances = %d;
const int gl_MaxCombinedImageUniforms = %d;
const int gl_MaxCombinedImageUnitsAndFragmentOutputs = %d;
const int gl_MaxCombinedShaderOutputResources = %d;
const int gl_MaxComputeAtomicCounterBuffers = %d;
const int gl_MaxComputeAtomicCounters = %d;
const int gl_MaxComputeImageUniforms = %d;
const int gl_MaxComputeTextureImageUnits = %d;
const int gl_MaxComputeUniformComponents = %d;
const int gl_MaxCullDistances = %d;
const int gl_MaxFragmentAtomicCounterBuffers = %d;
const int gl_MaxFragmentAtomicCounters = %d;
const int gl_MaxFragmentImageUniforms = %d;
const int gl_MaxFragmentInputComponents = %d;
const int gl_MaxGeometryAtomicCounterBuffers = %d;
const int gl_MaxGeometryAtomicCounters = %d;
const int gl_MaxGeometryImageUniforms = %d;
const int gl_MaxGeometryInputComponents = %d;
const int gl_MaxGeometryOutputComponents = %d;
const int gl_MaxGeometryOutputVertices = %d;
const int gl_MaxGeometryTextureImageUnits = %d;
const int gl_MaxGeometryTotalOutputComponents = %d;
const int gl_MaxGeometryUniformComponents = %d;
const int gl_MaxGeometryVaryingComponents = %d;
const int gl_MaxImageSamples = %d;
const int gl_MaxImageUnits = %d;
const int gl_MaxPatchVertices = %d;
const int gl_MaxSamples = %d;
const int gl_MaxTessControlAtomicCounterBuffers = %d;
const int gl_MaxTessControlAtomicCounters = %d;
const int gl_MaxTessControlImageUniforms = %d;
const int gl_MaxTessControlInputComponents = %d;
const int gl_MaxTessControlOutputComponents = %d;
const int gl_MaxTessControlTextureImageUnits = %d;
const int gl_MaxTessControlTotalOutputComponents = %d;
const int gl_MaxTessControlUniformComponents = %d;
const int gl_MaxTessEvaluationAtomicCounterBuffers = %d;
const int gl_MaxTessEvaluationAtomicCounters = %d;
const int gl_MaxTessEvaluationImageUniforms = %d;
const int gl_MaxTessEvaluationInputComponents = %d;
const int gl_MaxTessEvaluationOutputComponents = %d;
const int gl_MaxTessEvaluationTextureImageUnits = %d;
const int gl_MaxTessEvaluationUniformComponents = %d;
const int gl_MaxTessGenLevel = %d;
const int gl_MaxTessPatchComponents = %d;
const int gl_MaxTransformFeedbackBuffers = %d;
const int gl_MaxTransformFeedbackInterleavedComponents = %d;
const int gl_MaxVaryingComponents = %d;
const int gl_MaxVertexAtomicCounterBuffers = %d;
const int gl_MaxVertexAtomicCounters = %d;
const int gl_MaxVertexImageUniforms = %d;
const int gl_MaxVertexOutputComponents = %d;
const int gl_MaxViewports = %d;
const int gl_ScopeDevice      = 1;
const int gl_ScopeInvocation  = 4;
const int gl_ScopeQueueFamily = 5;
const int gl_ScopeSubgroup    = 3;
const int gl_ScopeWorkgroup   = 2;
const int gl_SemanticsAcquire         = 0x2;
const int gl_SemanticsAcquireRelease  = 0x8;
const int gl_SemanticsMakeAvailable   = 0x2000;
const int gl_SemanticsMakeVisible     = 0x4000;
const int gl_SemanticsRelaxed         = 0x0;
const int gl_SemanticsRelease         = 0x4;
const int gl_StorageSemanticsBuffer   = 0x40;
const int gl_StorageSemanticsImage    = 0x800;
const int gl_StorageSemanticsNone     = 0x0;
const int gl_StorageSemanticsOutput   = 0x1000;
const int gl_StorageSemanticsShared   = 0x100;
const int16_t
const int64_t
const int8_t
const ivec3 gl_MaxComputeWorkGroupCount = ivec3(%d,%d,%d);
const ivec3 gl_MaxComputeWorkGroupSize = ivec3(%d,%d,%d);
const mediump int  gl_MaxCombinedTextureImageUnits = %d;
const mediump int  gl_MaxDrawBuffers = %d;
const mediump int  gl_MaxFragmentInputVectors = %d;
const mediump int  gl_MaxFragmentUniformVectors = %d;
const mediump int  gl_MaxProgramTexelOffset = %d;
const mediump int  gl_MaxTextureImageUnits = %d;
const mediump int  gl_MaxVaryingVectors = %d;
const mediump int  gl_MaxVertexAttribs = %d;
const mediump int  gl_MaxVertexOutputVectors = %d;
const mediump int  gl_MaxVertexTextureImageUnits = %d;
const mediump int  gl_MaxVertexUniformVectors = %d;
const mediump int  gl_MinProgramTexelOffset = %d;
const uint
const uint16_t
const uint64_t
const uint8_t
constant expression required
constant_expression
constant_id
constant_id=
constructing from a non-dereferenced array
constructing matrix from matrix
constructing matrix from matrix can only take one argument
constructing non-array constituent from array argument
construction vtable for std::__1::basic_iostream<char, std::__1::char_traits<char> >-in-std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
construction vtable for std::__1::basic_istream<char, std::__1::char_traits<char> >-in-std::__1::basic_ifstream<char, std::__1::char_traits<char> >
construction vtable for std::__1::basic_istream<char, std::__1::char_traits<char> >-in-std::__1::basic_istringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
construction vtable for std::__1::basic_istream<char, std::__1::char_traits<char> >-in-std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
construction vtable for std::__1::basic_ostream<char, std::__1::char_traits<char> >-in-std::__1::basic_ofstream<char, std::__1::char_traits<char> >
construction vtable for std::__1::basic_ostream<char, std::__1::char_traits<char> >-in-std::__1::basic_ostringstream<char, std::__1::char_traits<char>, pool_allocator<char> >
construction vtable for std::__1::basic_ostream<char, std::__1::char_traits<char> >-in-std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
construction vtable for std::__1::basic_ostream<char, std::__1::char_traits<char> >-in-std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
constructor argument does not have a type
constructor can't be a structure definition
constructor does not have any arguments
continue
continue statement only allowed in loops
controlBarrier
copyImage
copySubTextureCPUReadback
copySubTextureImpl
copyimage.cpp
core
cos
cosf
coshf
cross
cross product
cross-product
crtstuff.c
ct7
currentTime
cxa_aux_runtime.cpp
cxa_default_handlers.cpp
cxa_demangle.cpp
cxa_exception.cpp
cxa_exception_storage.cpp
cxa_guard.cpp
cxa_handlers.cpp
cxa_personality.cpp
cxa_unexpected.cpp
cxa_vector.cpp
cxa_virtual.cpp
d
d6
d7
d8
d>@
d?@
d@@
dA@
dB@
dC@
dD@
dE@
dFdx
dFdxCoarse
dFdxFine
dFdy
dFdyCoarse
dFdyFine
dN>
dPdx
dPdxCoarse
dPdxFine
dPdy
dPdyCoarse
dPdyFine
dR=
dU6
d\7
d_>
dataSize must be at least
debug
debug pragma syntax is incorrect
debug.cpp
debug_utils.c
debug_utils_AddInstanceExtensions
debug_utils_AnnotObjectToDebugReportObject
debug_utils_CreateDebugReportCallbackEXT
debug_utils_CreateDebugUtilsMessengerEXT
debug_utils_CreateInstance
debug_utils_DebugReportMessageEXT
debug_utils_DestroyDebugReportCallbackEXT
debug_utils_DestroyDebugUtilsMessengerEXT
debug_utils_InstanceGpa
debug_utils_ReportObjectToAnnotObject
debug_utils_SubmitDebugUtilsMessageEXT
debug_utils_extension_info
declaration_statement
default
default labels need to be inside switch statements
default qualifier requires 'uniform', 'buffer', 'in', or 'out' storage qualification
default:
define
degrees
dependency_infinite
dependency_length
deprecated in version
deprecated, may be removed in future release
depth layout qualifier
depthRange
depth_any
depth_greater
depth_less
depth_unchanged
deregister_tm_clones
description
descriptor set
determinant
dev_ext_trampoline.c
device is EGL_NO_DEVICE.
device is not valid.
device_extensions
devicecoherent
diff
digraph {
dimension mismatch
dimension out of bounds
direct index for interface block
directive must end with a newline
dirname
disable
disable_environment
disallowed type in struct
disassemble.cpp
discard
discard supported in fragment shaders only
discard;
display had a context loss
display is EGL_NO_DISPLAY.
display is not a valid display.
display is not initialized.
distance
divide
divide second child into first child
division by 0
division by zero
dlclose
dlerror
dlopen
dlsym
dmat2x2
dmat3x3
dmat4x4
do
do-while loops not available
doc.cpp
does not apply to floating point images
does not apply to signed integer images
does not apply to this type:
does not apply to unsigned integer images
does not exist in the vertex shader.
does not match any
does not operate on this type:
does not operate on types containing (u)int16
does not operate on types containing (u)int8
does not operate on types containing float16
dont_unroll
dot
dot product
dot-product
double floating-point suffix
double fma(double, double, double);dvec2  fma(dvec2,  dvec2,  dvec2 );dvec3  fma(dvec3,  dvec3,  dvec3 );dvec4  fma(dvec4,  dvec4,  dvec4 );
double frexp(double, out int);dvec2  frexp( dvec2, out ivec2);dvec3  frexp( dvec3, out ivec3);dvec4  frexp( dvec4, out ivec4);double ldexp(double, int);dvec2  ldexp( dvec2, ivec2);dvec3  ldexp( dvec3, ivec3);dvec4  ldexp( dvec4, ivec4);double packDouble2x32(uvec2);uvec2 unpackDouble2x32(double);
double literal
double matrix
double sqrt(double);dvec2  sqrt(dvec2);dvec3  sqrt(dvec3);dvec4  sqrt(dvec4);double inversesqrt(double);dvec2  inversesqrt(dvec2);dvec3  inversesqrt(dvec3);dvec4  inversesqrt(dvec4);double abs(double);dvec2  abs(dvec2);dvec3  abs(dvec3);dvec4  abs(dvec4);double sign(double);dvec2  sign(dvec2);dvec3  sign(dvec3);dvec4  sign(dvec4);double floor(double);dvec2  floor(dvec2);dvec3  floor(dvec3);dvec4  floor(dvec4);double trunc(double);dvec2  trunc(dvec2);dvec3  trunc(dvec3);dvec4  trunc(dvec4);double round(double);dvec2  round(dvec2);dvec3  round(dvec3);dvec4  round(dvec4);double roundEven(double);dvec2  roundEven(dvec2);dvec3  roundEven(dvec3);dvec4  roundEven(dvec4);double ceil(double);dvec2  ceil(dvec2);dvec3  ceil(dvec3);dvec4  ceil(dvec4);double fract(double);dvec2  fract(dvec2);dvec3  fract(dvec3);dvec4  fract(dvec4);double mod(double, double);dvec2  mod(dvec2 , double);dvec3  mod(dvec3 , double);dvec4  mod(dvec4 , double);dvec2  mod(dvec2 , dvec2);dvec3  mod(dvec3 , dvec3);dvec4  mod(dvec4 , dvec4);double modf(double, out double);dvec2  modf(dvec2,  out dvec2);dvec3  modf(dvec3,  out dvec3);dvec4  modf(dvec4,  out dvec4);double min(double, double);dvec2  min(dvec2,  double);dvec3  min(dvec3,  double);dvec4  min(dvec4,  double);dvec2  min(dvec2,  dvec2);dvec3  min(dvec3,  dvec3);dvec4  min(dvec4,  dvec4);double max(double, double);dvec2  max(dvec2 , double);dvec3  max(dvec3 , double);dvec4  max(dvec4 , double);dvec2  max(dvec2 , dvec2);dvec3  max(dvec3 , dvec3);dvec4  max(dvec4 , dvec4);double clamp(double, double, double);dvec2  clamp(dvec2 , double, double);dvec3  clamp(dvec3 , double, double);dvec4  clamp(dvec4 , double, double);dvec2  clamp(dvec2 , dvec2 , dvec2);dvec3  clamp(dvec3 , dvec3 , dvec3);dvec4  clamp(dvec4 , dvec4 , dvec4);double mix(double, double, double);dvec2  mix(dvec2,  dvec2,  double);dvec3  mix(dvec3,  dvec3,  double);dvec4  mix(dvec4,  dvec4,  double);dvec2  mix(dvec2,  dvec2,  dvec2);dvec3  mix(dvec3,  dvec3,  dvec3);dvec4  mix(dvec4,  dvec4,  dvec4);double mix(double, double, bool);dvec2  mix(dvec2,  dvec2,  bvec2);dvec3  mix(dvec3,  dvec3,  bvec3);dvec4  mix(dvec4,  dvec4,  bvec4);double step(double, double);dvec2  step(dvec2 , dvec2);dvec3  step(dvec3 , dvec3);dvec4  step(dvec4 , dvec4);dvec2  step(double, dvec2);dvec3  step(double, dvec3);dvec4  step(double, dvec4);double smoothstep(double, double, double);dvec2  smoothstep(dvec2 , dvec2 , dvec2);dvec3  smoothstep(dvec3 , dvec3 , dvec3);dvec4  smoothstep(dvec4 , dvec4 , dvec4);dvec2  smoothstep(double, double, dvec2);dvec3  smoothstep(double, double, dvec3);dvec4  smoothstep(double, double, dvec4);bool  isnan(double);bvec2 isnan(dvec2);bvec3 isnan(dvec3);bvec4 isnan(dvec4);bool  isinf(double);bvec2 isinf(dvec2);bvec3 isinf(dvec3);bvec4 isinf(dvec4);double length(double);double length(dvec2);double length(dvec3);double length(dvec4);double distance(double, double);double distance(dvec2 , dvec2);double distance(dvec3 , dvec3);double distance(dvec4 , dvec4);double dot(double, double);double dot(dvec2 , dvec2);double dot(dvec3 , dvec3);double dot(dvec4 , dvec4);dvec3 cross(dvec3, dvec3);double normalize(double);dvec2  normalize(dvec2);dvec3  normalize(dvec3);dvec4  normalize(dvec4);double faceforward(double, double, double);dvec2  faceforward(dvec2,  dvec2,  dvec2);dvec3  faceforward(dvec3,  dvec3,  dvec3);dvec4  faceforward(dvec4,  dvec4,  dvec4);double reflect(double, double);dvec2  reflect(dvec2 , dvec2 );dvec3  reflect(dvec3 , dvec3 );dvec4  reflect(dvec4 , dvec4 );double refract(double, double, double);dvec2  refract(dvec2 , dvec2 , double);dvec3  refract(dvec3 , dvec3 , double);dvec4  refract(dvec4 , dvec4 , double);dmat2 matrixCompMult(dmat2, dmat2);dmat3 matrixCompMult(dmat3, dmat3);dmat4 matrixCompMult(dmat4, dmat4);dmat2x3 matrixCompMult(dmat2x3, dmat2x3);dmat2x4 matrixCompMult(dmat2x4, dmat2x4);dmat3x2 matrixCompMult(dmat3x2, dmat3x2);dmat3x4 matrixCompMult(dmat3x4, dmat3x4);dmat4x2 matrixCompMult(dmat4x2, dmat4x2);dmat4x3 matrixCompMult(dmat4x3, dmat4x3);dmat2   outerProduct(dvec2, dvec2);dmat3   outerProduct(dvec3, dvec3);dmat4   outerProduct(dvec4, dvec4);dmat2x3 outerProduct(dvec3, dvec2);dmat3x2 outerProduct(dvec2, dvec3);dmat2x4 outerProduct(dvec4, dvec2);dmat4x2 outerProduct(dvec2, dvec4);dmat3x4 outerProduct(dvec4, dvec3);dmat4x3 outerProduct(dvec3, dvec4);dmat2   transpose(dmat2);dmat3   transpose(dmat3);dmat4   transpose(dmat4);dmat2x3 transpose(dmat3x2);dmat3x2 transpose(dmat2x3);dmat2x4 transpose(dmat4x2);dmat4x2 transpose(dmat2x4);dmat3x4 transpose(dmat4x3);dmat4x3 transpose(dmat3x4);double determinant(dmat2);double determinant(dmat3);double determinant(dmat4);dmat2 inverse(dmat2);dmat3 inverse(dmat3);dmat4 inverse(dmat4);bvec2 lessThan(dvec2, dvec2);bvec3 lessThan(dvec3, dvec3);bvec4 lessThan(dvec4, dvec4);bvec2 lessThanEqual(dvec2, dvec2);bvec3 lessThanEqual(dvec3, dvec3);bvec4 lessThanEqual(dvec4, dvec4);bvec2 greaterThan(dvec2, dvec2);bvec3 greaterThan(dvec3, dvec3);bvec4 greaterThan(dvec4, dvec4);bvec2 greaterThanEqual(dvec2, dvec2);bvec3 greaterThanEqual(dvec3, dvec3);bvec4 greaterThanEqual(dvec4, dvec4);bvec2 equal(dvec2, dvec2);bvec3 equal(dvec3, dvec3);bvec4 equal(dvec4, dvec4);bvec2 notEqual(dvec2, dvec2);bvec3 notEqual(dvec3, dvec3);bvec4 notEqual(dvec4, dvec4);
double std::__1::__num_get_float<double>(char const*, char const*, unsigned int&)
double vector
doubleBitsToInt64
doubleBitsToUint64
doubles cannot start on an odd-numbered component
draw_texture_coords
draw_texture_dims
draw_texture_normalized_crop_rect
driver_utils.cpp
dummyPacker
duplicate case label
duplicate default label
duplicate field name in structure
duplicate function prototype declarations are not allowed
duplicate label
duplicate macro parameter
duplicate macro parameter name
duplicate member name:
duplicated value
dz2
e
e!.
e&(
e24
e7
e8
eJ7
ea!
egl::(anonymous namespace)::Display_logError(angle::PlatformMethods*, char const*)
egl::(anonymous namespace)::Display_logInfo(angle::PlatformMethods*, char const*)
egl::(anonymous namespace)::Display_logWarning(angle::PlatformMethods*, char const*)
egl::(anonymous namespace)::GetANGLEPlatformDisplayMap()::displays
egl::(anonymous namespace)::GetDevicePlatformDisplayMap()::displays
egl::(anonymous namespace)::GetWindowSurfaces()::windowSurfaces
egl::(anonymous namespace)::ValidateConfigAttribute(egl::Display const*, long)
egl::(anonymous namespace)::ValidateCreateImageKHRMipLevelCommon(gl::Context*, gl::Texture const*, long)
egl::(anonymous namespace)::ValidateDisplayPointer(egl::Display const*)
egl::(anonymous namespace)::ValidateGetPlatformDisplayCommon(unsigned int, void*, egl::AttributeMap const&)
egl::(anonymous namespace)::ValidateLabeledObject(egl::Thread*, egl::Display const*, egl::ObjectType, void*, egl::LabeledObject**)
egl::(anonymous namespace)::ValidateStream(egl::Display const*, egl::Stream const*)
egl::(anonymous namespace)::ValidateStreamAttribute(long, long, egl::DisplayExtensions const&)
egl::(anonymous namespace)::g_Debug
egl::(anonymous namespace)::threadTLS
egl::AttributeMap::AttributeMap()
egl::AttributeMap::AttributeMap(egl::AttributeMap const&)
egl::AttributeMap::CreateFromAttribArray(long const*)
egl::AttributeMap::CreateFromIntArray(int const*)
egl::AttributeMap::begin() const
egl::AttributeMap::contains(long) const
egl::AttributeMap::end() const
egl::AttributeMap::get(long) const
egl::AttributeMap::get(long, long) const
egl::AttributeMap::getAsInt(long, int) const
egl::AttributeMap::isEmpty() const
egl::AttributeMap::~AttributeMap()
egl::BindAPI(unsigned int)
egl::BindTexImage(void*, void*, int)
egl::BlobCache::BlobCache(unsigned long)
egl::BlobCache::areBlobCacheFuncsSet() const
egl::BlobCache::get(angle::ScratchBuffer*, std::__1::array<unsigned char, 20ul> const&, egl::BlobCache::Value*)
egl::BlobCache::getAt(unsigned long, std::__1::array<unsigned char, 20ul> const**, egl::BlobCache::Value*)
egl::BlobCache::populate(std::__1::array<unsigned char, 20ul> const&, angle::MemoryBuffer&&, egl::BlobCache::CacheSource)
egl::BlobCache::put(std::__1::array<unsigned char, 20ul> const&, angle::MemoryBuffer&&)
egl::BlobCache::putApplication(std::__1::array<unsigned char, 20ul> const&, angle::MemoryBuffer const&)
egl::BlobCache::remove(std::__1::array<unsigned char, 20ul> const&)
egl::BlobCache::setBlobCacheFuncs(void (*)(void const*, long, void const*, long), long (*)(void const*, long, void*, long))
egl::BlobCache::~BlobCache()
egl::Caps::Caps()
egl::ChooseConfig(void*, int const*, void**, int, int*)
egl::ClientExtensions::ClientExtensions()
egl::ClientExtensions::getStrings() const
egl::ClientWaitSync(void*, void*, int, unsigned long)
egl::Config::Config()
egl::Config::~Config()
egl::ConfigSet::ConfigSet()
egl::ConfigSet::add(egl::Config const&)
egl::ConfigSet::begin()
egl::ConfigSet::clear()
egl::ConfigSet::contains(egl::Config const*) const
egl::ConfigSet::end()
egl::ConfigSet::filter(egl::AttributeMap const&) const
egl::ConfigSet::operator=(egl::ConfigSet const&)
egl::ConfigSet::size() const
egl::ConfigSet::~ConfigSet()
egl::ConfigSorter::operator()(egl::Config const&, egl::Config const&) const
egl::CopyBuffers(void*, void*, unsigned long)
egl::CreateContext(void*, void*, void*, int const*)
egl::CreateDeviceANGLE(int, void*, long const*)
egl::CreateImage(void*, void*, unsigned int, void*, long const*)
egl::CreateImageKHR(void*, void*, unsigned int, void*, int const*)
egl::CreatePbufferFromClientBuffer(void*, unsigned int, void*, void*, int const*)
egl::CreatePbufferSurface(void*, void*, int const*)
egl::CreatePixmapSurface(void*, void*, unsigned long, int const*)
egl::CreatePlatformPixmapSurface(void*, void*, void*, long const*)
egl::CreatePlatformPixmapSurfaceEXT(void*, void*, void*, int const*)
egl::CreatePlatformWindowSurface(void*, void*, void*, long const*)
egl::CreatePlatformWindowSurfaceEXT(void*, void*, void*, int const*)
egl::CreateStreamKHR(void*, int const*)
egl::CreateStreamProducerD3DTextureANGLE(void*, void*, long const*)
egl::CreateSync(void*, unsigned int, long const*)
egl::CreateWindowSurface(void*, void*, unsigned long, int const*)
egl::CubeMapTextureTargetToLayerIndex(unsigned int)
egl::Debug::Debug()
egl::Debug::getCallback() const
egl::Debug::insertMessage(unsigned int, char const*, egl::MessageType, void*, void*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
egl::Debug::isMessageTypeEnabled(egl::MessageType) const
egl::Debug::setCallback(void (*)(unsigned int, char const*, int, void*, void*, char const*), egl::AttributeMap const&)
egl::DebugMessageControlKHR(void (*)(unsigned int, char const*, int, void*, void*, char const*), long const*)
egl::DestroyContext(void*, void*)
egl::DestroyImage(void*, void*)
egl::DestroyImageKHR(void*, void*)
egl::DestroyStreamKHR(void*, void*)
egl::DestroySurface(void*, void*)
egl::DestroySync(void*, void*)
egl::Device::CreateDevice(int, void*, egl::Device**)
egl::Device::Device(egl::Display*, rx::DeviceImpl*)
egl::Device::IsValidDevice(egl::Device const*)
egl::Device::getDevice(long*)
egl::Device::getExtensionString() const
egl::Device::getExtensions() const
egl::Device::getLabel() const
egl::Device::getType()
egl::Device::initDeviceExtensions()
egl::Device::setLabel(void*)
egl::Device::~Device()
egl::DeviceExtensions::DeviceExtensions()
egl::DeviceExtensions::getStrings() const
egl::Display::GetClientExtensionString()
egl::Display::GetClientExtensionString()::clientExtensionsString
egl::Display::GetClientExtensions()
egl::Display::GetClientExtensions()::clientExtensions
egl::Display::GetDisplayFromDevice(egl::Device*, egl::AttributeMap const&)
egl::Display::GetDisplayFromNativeDisplay(_XDisplay*, egl::AttributeMap const&)
egl::Display::createContext(egl::Config const*, gl::Context const*, egl::AttributeMap const&, gl::Context**)
egl::Display::createImage(gl::Context const*, unsigned int, void*, egl::AttributeMap const&, egl::Image**)
egl::Display::createPbufferFromClientBuffer(egl::Config const*, unsigned int, void*, egl::AttributeMap const&, egl::Surface**)
egl::Display::createPbufferSurface(egl::Config const*, egl::AttributeMap const&, egl::Surface**)
egl::Display::createStream(egl::AttributeMap const&, egl::Stream**)
egl::Display::createWindowSurface(egl::Config const*, unsigned long, egl::AttributeMap const&, egl::Surface**)
egl::Display::destroyContext(egl::Thread const*, gl::Context*)
egl::Display::destroyImage(egl::Image*)
egl::Display::destroyStream(egl::Stream*)
egl::Display::destroySurface(egl::Surface*)
egl::Display::getCaps() const
egl::Display::getConfigs(egl::AttributeMap const&) const
egl::Display::getDevice() const
egl::Display::getExtensionString() const
egl::Display::getExtensions() const
egl::Display::getLabel() const
egl::Display::getMaxSupportedESVersion() const
egl::Display::getVendorString() const
egl::Display::hasExistingWindowSurface(unsigned long)
egl::Display::initDisplayExtensions()
egl::Display::initialize
egl::Display::initialize()
egl::Display::initialize()::trace_event_unique_catstatic472
egl::Display::isDeviceLost() const
egl::Display::isInitialized() const
egl::Display::isValidConfig(egl::Config const*) const
egl::Display::isValidContext(gl::Context const*) const
egl::Display::isValidDisplay(egl::Display const*)
egl::Display::isValidImage(egl::Image const*) const
egl::Display::isValidNativeWindow(unsigned long) const
egl::Display::isValidStream(egl::Stream const*) const
egl::Display::isValidSurface(egl::Surface const*) const
egl::Display::makeCurrent(egl::Surface*, egl::Surface*, gl::Context*)
egl::Display::programCacheGetAttrib(unsigned int) const
egl::Display::programCachePopulate(void const*, int, void const*, int)
egl::Display::programCacheQuery(int, void*, int*, void*, int*)
egl::Display::programCacheResize(int, unsigned int)
egl::Display::restoreLostDevice()
egl::Display::setBlobCacheFuncs(void (*)(void const*, long, void const*, long), long (*)(void const*, long, void*, long))
egl::Display::setLabel(void*)
egl::Display::terminate(egl::Thread const*)
egl::Display::testDeviceLost()
egl::Display::validateClientBuffer(egl::Config const*, unsigned int, void*, egl::AttributeMap const&)
egl::Display::waitClient(gl::Context const*)
egl::Display::waitNative(gl::Context const*, int)
egl::Display::~Display()
egl::DisplayExtensions::DisplayExtensions()
egl::DisplayExtensions::getStrings() const
egl::Error::Error(int, int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&)
egl::Error::createMessageString() const
egl::Error::getMessage() const
egl::ErrorCodeToMessageType(int)
egl::GetConfigAttrib(void*, void*, int, int*)
egl::GetConfigs(void*, void**, int, int*)
egl::GetContextIfValid(egl::Display const*, gl::Context const*)
egl::GetCurrentContext()
egl::GetCurrentDisplay()
egl::GetCurrentSurface(int)
egl::GetCurrentThread()
egl::GetDebug()
egl::GetDeviceIfValid(egl::Device const*)
egl::GetDeviceSet()::devices
egl::GetDisplay(_XDisplay*)
egl::GetDisplayIfValid(egl::Display const*)
egl::GetError()
egl::GetGenericErrorMessage(int)
egl::GetImageIfValid(egl::Display const*, egl::Image const*)
egl::GetLabeledObjectIfValid(egl::Thread*, egl::Display const*, egl::ObjectType, void*)
egl::GetPlatformDisplay(unsigned int, void*, long const*)
egl::GetPlatformDisplayEXT(unsigned int, void*, int const*)
egl::GetProcAddress(char const*)
egl::GetStreamIfValid(egl::Display const*, egl::Stream const*)
egl::GetSurfaceIfValid(egl::Display const*, egl::Surface const*)
egl::GetSyncAttrib(void*, void*, int, long*)
egl::GetSyncValuesCHROMIUM(void*, void*, unsigned long*, unsigned long*, unsigned long*)
egl::GetThreadIfValid(egl::Thread const*)
egl::Image::Image(rx::EGLImplFactory*, gl::Context const*, unsigned int, egl::ImageSibling*, egl::AttributeMap const&)
egl::Image::getFormat() const
egl::Image::getHeight() const
egl::Image::getImplementation() const
egl::Image::getLabel() const
egl::Image::getSamples() const
egl::Image::getWidth() const
egl::Image::initialize(egl::Display const*)
egl::Image::isRenderable(gl::Context const*) const
egl::Image::isTexturable(gl::Context const*) const
egl::Image::onDestroy(egl::Display const*)
egl::Image::orphanSibling(gl::Context const*, egl::ImageSibling*)
egl::Image::setLabel(void*)
egl::Image::sourceInitState() const
egl::Image::~Image()
egl::ImageSibling::ImageSibling()
egl::ImageSibling::isEGLImageTarget() const
egl::ImageSibling::isRenderable(gl::Context const*, unsigned int, gl::ImageIndex const&) const
egl::ImageSibling::orphanImages(gl::Context const*)
egl::ImageSibling::setSourceEGLImageInitState(gl::InitState) const
egl::ImageSibling::setTargetImage(gl::Context const*, egl::Image*)
egl::ImageSibling::sourceEGLImageInitState() const
egl::ImageSibling::~ImageSibling()
egl::ImageState::ImageState(unsigned int, egl::ImageSibling*, egl::AttributeMap const&)
egl::Initialize(void*, int*, int*)
egl::IsRenderbufferTarget(unsigned int)
egl::IsTextureTarget(unsigned int)
egl::LabelObjectKHR(void*, unsigned int, void*, void*)
egl::LabeledObject::~LabeledObject()
egl::MakeCurrent(void*, void*, void*, void*)
egl::MessageType egl::FromEGLenum<egl::MessageType>(unsigned int)
egl::ObjectType egl::FromEGLenum<egl::ObjectType>(unsigned int)
egl::PbufferSurface::PbufferSurface(rx::EGLImplFactory*, egl::Config const*, egl::AttributeMap const&)
egl::PbufferSurface::PbufferSurface(rx::EGLImplFactory*, egl::Config const*, unsigned int, void*, egl::AttributeMap const&)
egl::PbufferSurface::~PbufferSurface()
egl::PixmapSurface::~PixmapSurface()
egl::PostSubBufferNV(void*, void*, int, int, int, int)
egl::PresentationTimeANDROID(void*, void*, long)
egl::ProgramCacheGetAttribANGLE(void*, unsigned int)
egl::ProgramCachePopulateANGLE(void*, void const*, int, void const*, int)
egl::ProgramCacheQueryANGLE(void*, int, void*, int*, void*, int*)
egl::ProgramCacheResizeANGLE(void*, int, unsigned int)
egl::QueryAPI()
egl::QueryConfigAttrib(egl::Config const*, int, int*)
egl::QueryContext(void*, void*, int, int*)
egl::QueryContextAttrib(gl::Context const*, int, int*)
egl::QueryDebugKHR(int, long*)
egl::QueryDeviceAttribEXT(void*, int, long*)
egl::QueryDeviceStringEXT(void*, int)
egl::QueryDisplayAttribEXT(void*, int, long*)
egl::QueryStreamKHR(void*, void*, unsigned int, int*)
egl::QueryStreamu64KHR(void*, void*, unsigned int, unsigned long*)
egl::QueryString(void*, int)
egl::QuerySurface(void*, void*, int, int*)
egl::QuerySurfaceAttrib(egl::Surface const*, int, int*)
egl::QuerySurfacePointerANGLE(void*, void*, int, void**)
egl::ReleaseDeviceANGLE(void*)
egl::ReleaseTexImage(void*, void*, int)
egl::ReleaseThread()
egl::SetBlobCacheFuncsANDROID(void*, void (*)(void const*, long, void const*, long), long (*)(void const*, long, void*, long))
egl::SetContextCurrent(egl::Thread*, gl::Context*)
egl::SetSurfaceAttrib(egl::Surface*, int, int)
egl::Stream::Stream(egl::Display*, egl::AttributeMap const&)
egl::Stream::consumerAcquire(gl::Context const*)
egl::Stream::consumerRelease(gl::Context const*)
egl::Stream::createConsumerGLTextureExternal(egl::AttributeMap const&, gl::Context*)
egl::Stream::createProducerD3D11Texture(egl::AttributeMap const&)
egl::Stream::getConsumerAcquireTimeout() const
egl::Stream::getConsumerFrame() const
egl::Stream::getConsumerLatency() const
egl::Stream::getConsumerType() const
egl::Stream::getLabel() const
egl::Stream::getPlaneCount() const
egl::Stream::getProducerFrame() const
egl::Stream::getProducerType() const
egl::Stream::getState() const
egl::Stream::isConsumerBoundToContext(gl::Context const*) const
egl::Stream::postD3D11Texture(void*, egl::AttributeMap const&)
egl::Stream::releaseTextures()
egl::Stream::setConsumerAcquireTimeout(int)
egl::Stream::setConsumerLatency(int)
egl::Stream::setLabel(void*)
egl::Stream::validateD3D11Texture(void*, egl::AttributeMap const&) const
egl::Stream::~Stream()
egl::StreamAttribKHR(void*, void*, unsigned int, int)
egl::StreamConsumerAcquireKHR(void*, void*)
egl::StreamConsumerGLTextureExternalAttribsNV(void*, void*, long const*)
egl::StreamConsumerGLTextureExternalKHR(void*, void*)
egl::StreamConsumerReleaseKHR(void*, void*)
egl::StreamPostD3DTextureANGLE(void*, void*, void*, long const*)
egl::Surface::Surface(int, egl::Config const*, egl::AttributeMap const&, unsigned int)
egl::Surface::bindTexImage(gl::Context const*, gl::Texture*, int)
egl::Surface::createDefaultFramebuffer(gl::Context const*)
egl::Surface::getAttachmentFormat(unsigned int, gl::ImageIndex const&) const
egl::Surface::getAttachmentImpl() const
egl::Surface::getAttachmentSamples(gl::ImageIndex const&) const
egl::Surface::getAttachmentSize(gl::ImageIndex const&) const
egl::Surface::getConfig() const
egl::Surface::getGLColorspace() const
egl::Surface::getHeight() const
egl::Surface::getHorizontalResolution() const
egl::Surface::getId() const
egl::Surface::getLabel() const
egl::Surface::getLargestPbuffer() const
egl::Surface::getMipmapLevel() const
egl::Surface::getMipmapTexture() const
egl::Surface::getMultisampleResolve() const
egl::Surface::getPixelAspectRatio() const
egl::Surface::getRenderBuffer() const
egl::Surface::getSwapBehavior() const
egl::Surface::getSyncValues(unsigned long*, unsigned long*, unsigned long*)
egl::Surface::getTextureFormat() const
egl::Surface::getTextureTarget() const
egl::Surface::getType() const
egl::Surface::getVGAlphaFormat() const
egl::Surface::getVGColorspace() const
egl::Surface::getVerticalResolution() const
egl::Surface::getWidth() const
egl::Surface::initState(gl::ImageIndex const&) const
egl::Surface::initialize(egl::Display const*)
egl::Surface::isFixedSize() const
egl::Surface::isPostSubBufferSupported() const
egl::Surface::isRenderable(gl::Context const*, unsigned int, gl::ImageIndex const&) const
egl::Surface::onAttach(gl::Context const*)
egl::Surface::onDestroy(egl::Display const*)
egl::Surface::onDetach(gl::Context const*)
egl::Surface::postSubBuffer(gl::Context const*, int, int, int, int)
egl::Surface::querySurfacePointerANGLE(int, void**)
egl::Surface::releaseTexImage(gl::Context const*, int)
egl::Surface::releaseTexImageFromTexture(gl::Context const*)
egl::Surface::setFixedHeight(int)
egl::Surface::setFixedWidth(int)
egl::Surface::setInitState(gl::ImageIndex const&, gl::InitState)
egl::Surface::setIsCurrent(gl::Context const*, bool)
egl::Surface::setLabel(void*)
egl::Surface::setMipmapLevel(int)
egl::Surface::setMultisampleResolve(unsigned int)
egl::Surface::setPresentationTime(long)
egl::Surface::setSwapBehavior(unsigned int)
egl::Surface::setSwapInterval(int)
egl::Surface::swap(gl::Context const*)
egl::Surface::swapWithDamage(gl::Context const*, int*, int)
egl::Surface::~Surface()
egl::SurfaceAttrib(void*, void*, int, int)
egl::SurfaceDeleter::SurfaceDeleter(egl::Display const*)
egl::SurfaceDeleter::operator()(egl::Surface*)
egl::SurfaceDeleter::~SurfaceDeleter()
egl::SwapBuffers(void*, void*)
egl::SwapBuffersWithDamageKHR(void*, void*, int*, int)
egl::SwapInterval(void*, int)
egl::Terminate(void*)
egl::TextureFormat egl::FromEGLenum<egl::TextureFormat>(unsigned int)
egl::Thread::Thread()
egl::Thread::getAPI() const
egl::Thread::getContext() const
egl::Thread::getCurrentDisplay() const
egl::Thread::getCurrentDrawSurface() const
egl::Thread::getCurrentReadSurface() const
egl::Thread::getError() const
egl::Thread::getLabel() const
egl::Thread::getValidContext() const
egl::Thread::setAPI(unsigned int)
egl::Thread::setCurrent(gl::Context*)
egl::Thread::setError(egl::Error const&, egl::Debug const*, char const*, egl::LabeledObject const*)
egl::Thread::setLabel(void*)
egl::Thread::setSuccess()
egl::Thread::~Thread()
egl::ToEGLenum(egl::MessageType)
egl::ToEGLenum(egl::TextureFormat)
egl::ValidateBindAPI(unsigned int)
egl::ValidateBindTexImage(egl::Display const*, egl::Surface const*, void*, int, gl::Context const*, gl::Texture**)
egl::ValidateChooseConfig(egl::Display const*, egl::AttributeMap const&, int, int*)
egl::ValidateCompatibleConfigs(egl::Display const*, egl::Config const*, egl::Surface const*, egl::Config const*, int)
egl::ValidateConfig(egl::Display const*, egl::Config const*)
egl::ValidateContext(egl::Display const*, gl::Context const*)
egl::ValidateCopyBuffers(egl::Display*, egl::Surface const*)
egl::ValidateCreateContext(egl::Display*, egl::Config*, gl::Context*, egl::AttributeMap const&)
egl::ValidateCreateDeviceANGLE(int, void*, long const*)
egl::ValidateCreateImageKHR(egl::Display const*, gl::Context*, unsigned int, void*, egl::AttributeMap const&)
egl::ValidateCreatePbufferFromClientBuffer(egl::Display*, unsigned int, void*, egl::Config*, egl::AttributeMap const&)
egl::ValidateCreatePbufferSurface(egl::Display*, egl::Config*, egl::AttributeMap const&)
egl::ValidateCreatePlatformPixmapSurfaceEXT(egl::Display const*, egl::Config const*, void*, egl::AttributeMap const&)
egl::ValidateCreatePlatformWindowSurfaceEXT(egl::Display const*, egl::Config const*, void*, egl::AttributeMap const&)
egl::ValidateCreateStreamKHR(egl::Display const*, egl::AttributeMap const&)
egl::ValidateCreateStreamProducerD3DTextureANGLE(egl::Display const*, egl::Stream const*, egl::AttributeMap const&)
egl::ValidateCreateWindowSurface(egl::Display*, egl::Config*, unsigned long, egl::AttributeMap const&)
egl::ValidateDebugMessageControlKHR(void (*)(unsigned int, char const*, int, void*, void*, char const*), egl::AttributeMap const&)
egl::ValidateDestroyContext(egl::Display const*, gl::Context const*, void*)
egl::ValidateDestroyImageKHR(egl::Display const*, egl::Image const*)
egl::ValidateDestroyStreamKHR(egl::Display const*, egl::Stream const*)
egl::ValidateDestroySurface(egl::Display const*, egl::Surface const*, void*)
egl::ValidateDevice(egl::Device const*)
egl::ValidateDisplay(egl::Display const*)
egl::ValidateGetConfigAttrib(egl::Display const*, egl::Config const*, int)
egl::ValidateGetConfigs(egl::Display const*, int, int*)
egl::ValidateGetPlatformDisplay(unsigned int, void*, long const*)
egl::ValidateGetPlatformDisplayEXT(unsigned int, void*, int const*)
egl::ValidateGetSyncValuesCHROMIUM(egl::Display const*, egl::Surface const*, unsigned long const*, unsigned long const*, unsigned long const*)
egl::ValidateImage(egl::Display const*, egl::Image const*)
egl::ValidateInitialize(egl::Display const*)
egl::ValidateLabelObjectKHR(egl::Thread*, egl::Display const*, egl::ObjectType, void*, void*)
egl::ValidateMakeCurrent(egl::Display*, egl::Surface*, egl::Surface*, gl::Context*)
egl::ValidatePresentationTimeANDROID(egl::Display const*, egl::Surface const*, long)
egl::ValidateProgramCacheGetAttribANGLE(egl::Display const*, unsigned int)
egl::ValidateProgramCachePopulateANGLE(egl::Display const*, void const*, int, void const*, int)
egl::ValidateProgramCacheQueryANGLE(egl::Display const*, int, void*, int*, void*, int*)
egl::ValidateProgramCacheResizeANGLE(egl::Display const*, int, unsigned int)
egl::ValidateQueryContext(egl::Display const*, gl::Context const*, int, int*)
egl::ValidateQueryDebugKHR(int, long*)
egl::ValidateQueryStreamKHR(egl::Display const*, egl::Stream const*, unsigned int, int*)
egl::ValidateQueryStreamu64KHR(egl::Display const*, egl::Stream const*, unsigned int, unsigned long*)
egl::ValidateQuerySurface(egl::Display const*, egl::Surface const*, int, int*)
egl::ValidateReleaseDeviceANGLE(egl::Device*)
egl::ValidateReleaseTexImage(egl::Display const*, egl::Surface const*, void*, int)
egl::ValidateSetBlobCacheANDROID(egl::Display const*, void (*)(void const*, long, void const*, long), long (*)(void const*, long, void*, long))
egl::ValidateStreamAttribKHR(egl::Display const*, egl::Stream const*, int, int)
egl::ValidateStreamConsumerAcquireKHR(egl::Display const*, gl::Context*, egl::Stream const*)
egl::ValidateStreamConsumerGLTextureExternalAttribsNV(egl::Display const*, gl::Context*, egl::Stream const*, egl::AttributeMap const&)
egl::ValidateStreamConsumerGLTextureExternalKHR(egl::Display const*, gl::Context*, egl::Stream const*)
egl::ValidateStreamConsumerReleaseKHR(egl::Display const*, gl::Context*, egl::Stream const*)
egl::ValidateStreamPostD3DTextureANGLE(egl::Display const*, egl::Stream const*, void*, egl::AttributeMap const&)
egl::ValidateSurface(egl::Display const*, egl::Surface const*)
egl::ValidateSurfaceAttrib(egl::Display const*, egl::Surface const*, int, int)
egl::ValidateSwapBuffers(egl::Thread*, egl::Display const*, egl::Surface const*)
egl::ValidateSwapBuffersWithDamageKHR(egl::Display const*, egl::Surface const*, int*, int)
egl::ValidateSwapInterval(egl::Display const*, egl::Surface const*)
egl::ValidateTerminate(egl::Display const*)
egl::ValidateWaitNative(egl::Display const*, int)
egl::WaitClient()
egl::WaitGL()
egl::WaitNative(int)
egl::WaitSync(void*, void*, int)
egl::WindowSurface::WindowSurface(rx::EGLImplFactory*, egl::Config const*, unsigned long, egl::AttributeMap const&)
egl::WindowSurface::~WindowSurface()
egl::g_numProcs
egl::g_procTable
egl::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, egl::Error const&)
eglBindAPI
eglBindTexImage
eglChooseConfig
eglClientWaitSync
eglClientWaitSync unimplemented.
eglCopyBuffers
eglCreateContext
eglCreateDeviceANGLE
eglCreateImage
eglCreateImage unimplemented.
eglCreateImageKHR
eglCreatePbufferFromClientBuffer
eglCreatePbufferSurface
eglCreatePixmapSurface
eglCreatePlatformPixmapSurface
eglCreatePlatformPixmapSurface unimplemented.
eglCreatePlatformPixmapSurfaceEXT
eglCreatePlatformWindowSurface
eglCreatePlatformWindowSurface unimplemented.
eglCreatePlatformWindowSurfaceEXT
eglCreateStreamKHR
eglCreateStreamProducerD3DTextureANGLE
eglCreateSync
eglCreateSync unimplemented.
eglCreateWindowSurface
eglDebugMessageControlKHR
eglDestroyContext
eglDestroyImage
eglDestroyImage unimplemented.
eglDestroyImageKHR
eglDestroyStreamKHR
eglDestroySurface
eglDestroySync
eglDestroySync unimplemented.
eglGetConfigAttrib
eglGetConfigs
eglGetCurrentContext
eglGetCurrentDisplay
eglGetCurrentSurface
eglGetDisplay
eglGetError
eglGetPlatformDisplay
eglGetPlatformDisplayEXT
eglGetProcAddress
eglGetSyncAttrib
eglGetSyncValuesCHROMIUM
eglInitialize
eglLabelObjectKHR
eglMakeCurrent
eglPostSubBufferNV
eglPresentationTimeANDROID
eglProgramCacheGetAttribANGLE
eglProgramCachePopulateANGLE
eglProgramCacheQueryANGLE
eglProgramCacheResizeANGLE
eglQueryAPI
eglQueryContext
eglQueryDebugKHR
eglQueryDeviceAttribEXT
eglQueryDeviceStringEXT
eglQueryDisplayAttribEXT
eglQueryStreamKHR
eglQueryStreamu64KHR
eglQueryString
eglQuerySurface
eglQuerySurfacePointerANGLE
eglReleaseDeviceANGLE
eglReleaseTexImage
eglReleaseThread
eglSStreamConsumerReleaseKHR
eglSetBlobCacheFuncsANDROID
eglStreamAttribKHR
eglStreamConsumerAcquireKHR
eglStreamConsumerGLTextureExternalAttribsNV
eglStreamConsumerGLTextureExternalKHR
eglStreamConsumerReleaseKHR
eglStreamPostD3DTextureANGLE
eglSurfaceAttrib
eglSwapBuffers
eglSwapBuffersWithDamageEXT
eglSwapBuffersWithDamageKHR
eglSwapInterval
eglSyncAttrib unimplemented.
eglTerminate
eglWaitClient
eglWaitGL
eglWaitNative
eglWaitSync
eglWaitSync unimplemented.
egl_gl::EGLClientBufferToGLObjectHandle(void*)
egl_gl::EGLCubeMapTargetToCubeMapTarget(unsigned int)
egl_gl::EGLImageTargetToTextureTarget(unsigned int)
egl_gl::EGLTextureTargetToTextureType(unsigned int)
either the block needs a location, or all members need a location, or no members have a location
elif
else
em2
empty array declaration needs to specify a size
emu_precision float atan_emu(emu_precision float y, emu_precision float x){    if (x > 0.0) return atan(y / x);    else if (x < 0.0 && y >= 0.0) return atan(y / x) + 3.14159265;    else if (x < 0.0 && y < 0.0) return atan(y / x) - 3.14159265;    else return 1.57079632 * sign(y);}
enable
enable_alpha_test
enable_clip_planes
enable_color_material
enable_draw_texture
enable_environment
enable_normalize
enable_rescale_normal
enable_texture_2d
enable_texture_cube_map
end < start
endif
entry point cannot return a value
entry-point
entry_points_egl.cpp
entry_points_egl_ext.cpp
entry_points_gles_1_0_autogen.cpp
entry_points_gles_2_0_autogen.cpp
entry_points_gles_3_0_autogen.cpp
entry_points_gles_3_1_autogen.cpp
entry_points_gles_ext_autogen.cpp
entrypoints
enum
ep
eq7
equal_spacing
equality_expression
error
es
es3_copy_conversion_table_autogen.cpp
es7
event_tracer.cpp
exceeds maximum allowed nesting level of
exception.cpp
exclusive or second child into first child
exclusive-or
exclusive_or_expression
execute once failure in __cxa_get_globals_fast()
exit
exp
exp2
exp2f
expected ')'
expected 'INF'
expected a single integer argument
expected newline after header name:
expected type name
expf
exponent = floor(log2(abs(v) + 1e-30)) - 10.0;    bool
exponent = floor(log2(abs(v) + 1e-30)) - 10.0;    bvec
exponent = floor(log2(abs(x) + 1e-30)) - 10.0;    bool isNonZero = (exponent >= -25.0);    x = x * exp2(-exponent);    x = sign(x) * floor(abs(x));    return x * exp2(exponent) * float(isNonZero);}
expression_statement
extension
extension 'all' cannot have 'require' or 'enable' behavior
extension cannot have 'enable' behavior
extension cannot have 'require' behavior
extension directive must occur before any non-preprocessor tokens in ESSL3
extension directive should occur before any non-preprocessor tokens
extension is being used
extension is disabled
extension is not supported
extension is only partially supported:
extension name expected
extension name not specified
extension not supported:
extension_instance_gpa
extension_manual.c
extensions_create_instance
extern
external_declaration
extra content after header name:
extra tokens
extra tokens -- expected newline
extraneous layout qualifier: only has an effect on matrix types
extraneous semicolon
f
f((
f,
f16
f16mat2x2
f16mat3x3
f16mat4x4
f32mat2
f32mat2x2
f32mat2x3
f32mat2x4
f32mat3
f32mat3x2
f32mat3x3
f32mat3x4
f32mat4
f32mat4x2
f32mat4x3
f32mat4x4
f32vec2
f32vec3
f32vec4
f4/
f64mat2
f64mat2x2
f64mat2x3
f64mat2x4
f64mat3
f64mat3x2
f64mat3x3
f64mat3x4
f64mat4
f64mat4x2
f64mat4x3
f64mat4x4
f64vec2
f64vec3
f64vec4
f7
f8
fM7
fN7
fP/
fX>
fZ7
f[5
f^>
f_7
face-forward
faceforward
failed to insert the global constant buffer
fallback_malloc.cpp
false
false case
far
fatal error - scanner input buffer overflow
fatal flex scanner internal error--end of buffer missed
fatal flex scanner internal error--no action found
fclose
feature not yet implemented
fflush
ffset(0c3B1B1B1CtextureProj(0X3B
field selection requires structure or vector on left hand side
field selection requires structure, vector, or interface block on left hand side
file_format_version
filename-based #line
filename-based __FILE__
filter
findLSB
findMSB
first argument must be an interpolant, or interpolant-array element
first-class array
first-class arrays (array initializer) supported in GLSL ES 3.00 and above only
firstByteMark
fixed
flat  in lowp     int gl_SampleID;      in mediump vec2 gl_SamplePosition;flat  in highp    int gl_SampleMaskIn[];     out highp    int gl_SampleMask[];
flat in
flat in  int  gl_SampleID;     in  vec2 gl_SamplePosition;flat in  int  gl_SampleMaskIn[];     out int  gl_SampleMask[];
flat in highp int gl_DeviceIndex;flat in highp int gl_ViewIndex;
flat in highp uint gl_ViewID_OVR;
flat in int gl_Layer;flat in int gl_ViewportIndex;
flat in int gl_PrimitiveID;
flat in mediump uint  gl_SubgroupSize;flat in mediump uint  gl_SubgroupInvocationID;flat in highp   uvec4 gl_SubgroupEqMask;flat in highp   uvec4 gl_SubgroupGeMask;flat in highp   uvec4 gl_SubgroupGtMask;flat in highp   uvec4 gl_SubgroupLeMask;flat in highp   uvec4 gl_SubgroupLtMask;
flat out
flat/smooth/noperspective
flatten
flippedFragCoord
flippedPointCoord
float
float  fma(float,  float,  float );vec2   fma(vec2,   vec2,   vec2  );vec3   fma(vec3,   vec3,   vec3  );vec4   fma(vec4,   vec4,   vec4  );
float abs(float x);vec2  abs(vec2  x);vec3  abs(vec3  x);vec4  abs(vec4  x);float sign(float x);vec2  sign(vec2  x);vec3  sign(vec3  x);vec4  sign(vec4  x);float floor(float x);vec2  floor(vec2  x);vec3  floor(vec3  x);vec4  floor(vec4  x);float ceil(float x);vec2  ceil(vec2  x);vec3  ceil(vec3  x);vec4  ceil(vec4  x);float fract(float x);vec2  fract(vec2  x);vec3  fract(vec3  x);vec4  fract(vec4  x);float mod(float x, float y);vec2  mod(vec2  x, float y);vec3  mod(vec3  x, float y);vec4  mod(vec4  x, float y);vec2  mod(vec2  x, vec2  y);vec3  mod(vec3  x, vec3  y);vec4  mod(vec4  x, vec4  y);float min(float x, float y);vec2  min(vec2  x, float y);vec3  min(vec3  x, float y);vec4  min(vec4  x, float y);vec2  min(vec2  x, vec2  y);vec3  min(vec3  x, vec3  y);vec4  min(vec4  x, vec4  y);float max(float x, float y);vec2  max(vec2  x, float y);vec3  max(vec3  x, float y);vec4  max(vec4  x, float y);vec2  max(vec2  x, vec2  y);vec3  max(vec3  x, vec3  y);vec4  max(vec4  x, vec4  y);float clamp(float x, float minVal, float maxVal);vec2  clamp(vec2  x, float minVal, float maxVal);vec3  clamp(vec3  x, float minVal, float maxVal);vec4  clamp(vec4  x, float minVal, float maxVal);vec2  clamp(vec2  x, vec2  minVal, vec2  maxVal);vec3  clamp(vec3  x, vec3  minVal, vec3  maxVal);vec4  clamp(vec4  x, vec4  minVal, vec4  maxVal);float mix(float x, float y, float a);vec2  mix(vec2  x, vec2  y, float a);vec3  mix(vec3  x, vec3  y, float a);vec4  mix(vec4  x, vec4  y, float a);vec2  mix(vec2  x, vec2  y, vec2  a);vec3  mix(vec3  x, vec3  y, vec3  a);vec4  mix(vec4  x, vec4  y, vec4  a);float step(float edge, float x);vec2  step(vec2  edge, vec2  x);vec3  step(vec3  edge, vec3  x);vec4  step(vec4  edge, vec4  x);vec2  step(float edge, vec2  x);vec3  step(float edge, vec3  x);vec4  step(float edge, vec4  x);float smoothstep(float edge0, float edge1, float x);vec2  smoothstep(vec2  edge0, vec2  edge1, vec2  x);vec3  smoothstep(vec3  edge0, vec3  edge1, vec3  x);vec4  smoothstep(vec4  edge0, vec4  edge1, vec4  x);vec2  smoothstep(float edge0, float edge1, vec2  x);vec3  smoothstep(float edge0, float edge1, vec3  x);vec4  smoothstep(float edge0, float edge1, vec4  x);
float dFdx(float p);vec2  dFdx(vec2  p);vec3  dFdx(vec3  p);vec4  dFdx(vec4  p);float dFdy(float p);vec2  dFdy(vec2  p);vec3  dFdy(vec3  p);vec4  dFdy(vec4  p);float fwidth(float p);vec2  fwidth(vec2  p);vec3  fwidth(vec3  p);vec4  fwidth(vec4  p);
float dFdxFine(float p);vec2  dFdxFine(vec2  p);vec3  dFdxFine(vec3  p);vec4  dFdxFine(vec4  p);float dFdyFine(float p);vec2  dFdyFine(vec2  p);vec3  dFdyFine(vec3  p);vec4  dFdyFine(vec4  p);float fwidthFine(float p);vec2  fwidthFine(vec2  p);vec3  fwidthFine(vec3  p);vec4  fwidthFine(vec4  p);float dFdxCoarse(float p);vec2  dFdxCoarse(vec2  p);vec3  dFdxCoarse(vec3  p);vec4  dFdxCoarse(vec4  p);float dFdyCoarse(float p);vec2  dFdyCoarse(vec2  p);vec3  dFdyCoarse(vec3  p);vec4  dFdyCoarse(vec4  p);float fwidthCoarse(float p);vec2  fwidthCoarse(vec2  p);vec3  fwidthCoarse(vec3  p);vec4  fwidthCoarse(vec4  p);
float determinant(mat2 m);float determinant(mat3 m);float determinant(mat4 m);mat2 inverse(mat2 m);mat3 inverse(mat3 m);mat4 inverse(mat4 m);
float frexp(highp float, out highp int);vec2  frexp(highp vec2,  out highp ivec2);vec3  frexp(highp vec3,  out highp ivec3);vec4  frexp(highp vec4,  out highp ivec4);float ldexp(highp float, highp int);vec2  ldexp(highp vec2,  highp ivec2);vec3  ldexp(highp vec3,  highp ivec3);vec4  ldexp(highp vec4,  highp ivec4);
float gl::CastFromGLintStateValue<float, bool>(unsigned int, bool)
float gl::CastFromGLintStateValue<float, int>(unsigned int, int)
float gl::CastFromGLintStateValue<float, unsigned int>(unsigned int, unsigned int)
float gl::CastFromStateValue<float, float>(unsigned int, float)
float gl::CastFromStateValue<float, int>(unsigned int, int)
float gl::CastQueryValueTo<float, float>(unsigned int, float)
float gl::CastQueryValueTo<float, int>(unsigned int, int)
float gl_CullDistance[];
float imageAtomicExchange(volatile coherent
float interpolateAtCentroid(float);vec2  interpolateAtCentroid(vec2);vec3  interpolateAtCentroid(vec3);vec4  interpolateAtCentroid(vec4);float interpolateAtSample(float, int);vec2  interpolateAtSample(vec2,  int);vec3  interpolateAtSample(vec3,  int);vec4  interpolateAtSample(vec4,  int);float interpolateAtOffset(float, vec2);vec2  interpolateAtOffset(vec2,  vec2);vec3  interpolateAtOffset(vec3,  vec2);vec4  interpolateAtOffset(vec4,  vec2);
float length(float x);float length(vec2  x);float length(vec3  x);float length(vec4  x);float distance(float p0, float p1);float distance(vec2  p0, vec2  p1);float distance(vec3  p0, vec3  p1);float distance(vec4  p0, vec4  p1);float dot(float x, float y);float dot(vec2  x, vec2  y);float dot(vec3  x, vec3  y);float dot(vec4  x, vec4  y);vec3 cross(vec3 x, vec3 y);float normalize(float x);vec2  normalize(vec2  x);vec3  normalize(vec3  x);vec4  normalize(vec4  x);float faceforward(float N, float I, float Nref);vec2  faceforward(vec2  N, vec2  I, vec2  Nref);vec3  faceforward(vec3  N, vec3  I, vec3  Nref);vec4  faceforward(vec4  N, vec4  I, vec4  Nref);float reflect(float I, float N);vec2  reflect(vec2  I, vec2  N);vec3  reflect(vec3  I, vec3  N);vec4  reflect(vec4  I, vec4  N);float refract(float I, float N, float eta);vec2  refract(vec2  I, vec2  N, float eta);vec3  refract(vec3  I, vec3  N, float eta);vec4  refract(vec4  I, vec4  N, float eta);
float literal needs a decimal point or exponent
float literal too long
float near;float far;float diff;
float noise1(float x);float noise1(vec2  x);float noise1(vec3  x);float noise1(vec4  x);vec2 noise2(float x);vec2 noise2(vec2  x);vec2 noise2(vec3  x);vec2 noise2(vec4  x);vec3 noise3(float x);vec3 noise3(vec2  x);vec3 noise3(vec3  x);vec3 noise3(vec4  x);vec4 noise4(float x);vec4 noise4(vec2  x);vec4 noise4(vec3  x);vec4 noise4(vec4  x);
float overflow
float posDot(vec3 a, vec3 b){    return max(dot(a, b), 0.0);}vec4 doLighting(vec4 currentFragment){    vec4 materialAmbientActual = material_ambient;    vec4 materialDiffuseActual = material_diffuse;    if (enable_color_material || enable_texture_2d[0] || enable_texture_cube_map[0])    {        materialAmbientActual = currentFragment;        materialDiffuseActual = currentFragment;    }    vec4 lightingResult = material_emissive + materialAmbientActual * light_model_scene_ambient;    for (int i = 0; i < kMaxLights; i++)    {        if (!light_enables[i])            continue;        vec4 lightAmbient  = light_ambients[i];        vec4 lightDiffuse  = light_diffuses[i];        vec4 lightSpecular = light_speculars[i];        vec4 lightPos      = light_positions[i];        vec3 lightDir      = light_directions[i];        float attConst     = light_attenuation_consts[i];        float attLinear    = light_attenuation_linears[i];        float attQuadratic = light_attenuation_quadratics[i];        float spotAngle    = light_spotlight_cutoff_angles[i];        float spotExponent = light_spotlight_exponents[i];        vec3 toLight;        if (lightPos.w == 0.0)        {            toLight = lightPos.xyz;        }        else        {            toLight = (lightPos.xyz / lightPos.w - pos_varying.xyz);        }        float lightDist = length(toLight);        vec3 h          = normalize(toLight) + vec3(0.0, 0.0, 1.0);        float ndotL     = posDot(normal_varying, normalize(toLight));        float ndoth     = posDot(normal_varying, normalize(h));        float specAtt;        if (ndotL != 0.0)        {            specAtt = 1.0;        }        else        {            specAtt = 0.0;        }        float att;        if (lightPos.w != 0.0)        {            float attDenom =                (attConst + attLinear * lightDist + attQuadratic * lightDist * lightDist);            att = 1.0 / attDenom;        }        else        {            att = 1.0;        }        float spot;        float spotAngleCos = cos(radians(spotAngle));        vec3 toSurfaceDir  = -normalize(toLight);        float spotDot      = posDot(toSurfaceDir, normalize(lightDir));        if (spotAngle == 180.0 || lightPos.w == 0.0)        {            spot = 1.0;        }        else        {            if (spotDot < spotAngleCos)            {                spot = 0.0;            }            else            {                spot = pow(spotDot, spotExponent);            }        }        vec4 contrib = materialAmbientActual * lightAmbient;        contrib += ndotL * materialDiffuseActual * lightDiffuse;        if (ndoth > 0.0 && material_specular_exponent > 0.0)        {            contrib += specAtt * pow(ndoth, material_specular_exponent) * material_specular *                       lightSpecular;        }        else        {            if (ndoth > 0.0)            {                contrib += specAtt * material_specular * lightSpecular;            }        }        contrib *= att * spot;        lightingResult += contrib;    }    return lightingResult;}bool doAlphaTest(vec4 currentFragment){    bool shouldPassAlpha = false;    float incAlpha       = currentFragment.a;    switch (alpha_func)    {        case kNever:            shouldPassAlpha = false;            break;        case kLess:            shouldPassAlpha = incAlpha < alpha_test_ref;            break;        case kLequal:            shouldPassAlpha = incAlpha <= alpha_test_ref;            break;        case kEqual:            shouldPassAlpha = incAlpha == alpha_test_ref;            break;        case kGequal:            shouldPassAlpha = incAlpha >= alpha_test_ref;            break;        case kGreater:            shouldPassAlpha = incAlpha > alpha_test_ref;            break;        case kNotequal:            shouldPassAlpha = incAlpha != alpha_test_ref;            break;        case kAlways:        default:            shouldPassAlpha = true;            break;    }    return shouldPassAlpha;}bool doClipPlaneTest(){    bool res = true;    for (int i = 0; i < kMaxClipPlanes; i++)    {        if (clip_plane_enables[i])        {            float dist = dot(clip_planes[i].xyz, pos_varying.xyz) + clip_planes[i].w * pos_varying.w;            res        = res && (dist >= 0.0);        }    }    return res;}vec4 doFog(vec4 currentFragment){    float eyeDist = -pos_varying.z / pos_varying.w;    float f       = 1.0;    switch (fog_mode)    {        case kExp:            f = exp(-fog_density * eyeDist);            break;        case kExp2:            f = exp(-(pow(fog_density * eyeDist, 2.0)));            break;        case kLinear:            f = (fog_end - eyeDist) / (fog_end - fog_start);            break;        default:            break;    }    vec4 result = f * currentFragment + (1.0 - f) * fog_color;    return result;}
float pow(float x, float y);vec2  pow(vec2  x, vec2  y);vec3  pow(vec3  x, vec3  y);vec4  pow(vec4  x, vec4  y);float exp(float x);vec2  exp(vec2  x);vec3  exp(vec3  x);vec4  exp(vec4  x);float log(float x);vec2  log(vec2  x);vec3  log(vec3  x);vec4  log(vec4  x);float exp2(float x);vec2  exp2(vec2  x);vec3  exp2(vec3  x);vec4  exp2(vec4  x);float log2(float x);vec2  log2(vec2  x);vec3  log2(vec3  x);vec4  log2(vec4  x);float sqrt(float x);vec2  sqrt(vec2  x);vec3  sqrt(vec3  x);vec4  sqrt(vec4  x);float inversesqrt(float x);vec2  inversesqrt(vec2  x);vec3  inversesqrt(vec3  x);vec4  inversesqrt(vec4  x);
float radians(float degrees);vec2  radians(vec2  degrees);vec3  radians(vec3  degrees);vec4  radians(vec4  degrees);float degrees(float radians);vec2  degrees(vec2  radians);vec3  degrees(vec3  radians);vec4  degrees(vec4  radians);float sin(float angle);vec2  sin(vec2  angle);vec3  sin(vec3  angle);vec4  sin(vec4  angle);float cos(float angle);vec2  cos(vec2  angle);vec3  cos(vec3  angle);vec4  cos(vec4  angle);float tan(float angle);vec2  tan(vec2  angle);vec3  tan(vec3  angle);vec4  tan(vec4  angle);float asin(float x);vec2  asin(vec2  x);vec3  asin(vec3  x);vec4  asin(vec4  x);float acos(float x);vec2  acos(vec2  x);vec3  acos(vec3  x);vec4  acos(vec4  x);float atan(float y, float x);vec2  atan(vec2  y, vec2  x);vec3  atan(vec3  y, vec3  x);vec4  atan(vec4  y, vec4  x);float atan(float y_over_x);vec2  atan(vec2  y_over_x);vec3  atan(vec3  y_over_x);vec4  atan(vec4  y_over_x);
float sinh(float angle);vec2  sinh(vec2  angle);vec3  sinh(vec3  angle);vec4  sinh(vec4  angle);float cosh(float angle);vec2  cosh(vec2  angle);vec3  cosh(vec3  angle);vec4  cosh(vec4  angle);float tanh(float angle);vec2  tanh(vec2  angle);vec3  tanh(vec3  angle);vec4  tanh(vec4  angle);float asinh(float x);vec2  asinh(vec2  x);vec3  asinh(vec3  x);vec4  asinh(vec4  x);float acosh(float x);vec2  acosh(vec2  x);vec3  acosh(vec3  x);vec4  acosh(vec4  x);float atanh(float y_over_x);vec2  atanh(vec2  y_over_x);vec3  atanh(vec3  y_over_x);vec4  atanh(vec4  y_over_x);
float std::__1::__num_get_float<float>(char const*, char const*, unsigned int&)
float16 types can only be in uniform block or buffer storage
float16BitsToInt16
float16BitsToUint16
float16_t dFdx(float16_t);f16vec2   dFdx(f16vec2);f16vec3   dFdx(f16vec3);f16vec4   dFdx(f16vec4);float16_t dFdy(float16_t);f16vec2   dFdy(f16vec2);f16vec3   dFdy(f16vec3);f16vec4   dFdy(f16vec4);float16_t dFdxFine(float16_t);f16vec2   dFdxFine(f16vec2);f16vec3   dFdxFine(f16vec3);f16vec4   dFdxFine(f16vec4);float16_t dFdyFine(float16_t);f16vec2   dFdyFine(f16vec2);f16vec3   dFdyFine(f16vec3);f16vec4   dFdyFine(f16vec4);float16_t dFdxCoarse(float16_t);f16vec2   dFdxCoarse(f16vec2);f16vec3   dFdxCoarse(f16vec3);f16vec4   dFdxCoarse(f16vec4);float16_t dFdyCoarse(float16_t);f16vec2   dFdyCoarse(f16vec2);f16vec3   dFdyCoarse(f16vec3);f16vec4   dFdyCoarse(f16vec4);float16_t fwidth(float16_t);f16vec2   fwidth(f16vec2);f16vec3   fwidth(f16vec3);f16vec4   fwidth(f16vec4);float16_t fwidthFine(float16_t);f16vec2   fwidthFine(f16vec2);f16vec3   fwidthFine(f16vec3);f16vec4   fwidthFine(f16vec4);float16_t fwidthCoarse(float16_t);f16vec2   fwidthCoarse(f16vec2);f16vec3   fwidthCoarse(f16vec3);f16vec4   fwidthCoarse(f16vec4);
float16_t radians(float16_t);f16vec2   radians(f16vec2);f16vec3   radians(f16vec3);f16vec4   radians(f16vec4);float16_t degrees(float16_t);f16vec2   degrees(f16vec2);f16vec3   degrees(f16vec3);f16vec4   degrees(f16vec4);float16_t sin(float16_t);f16vec2   sin(f16vec2);f16vec3   sin(f16vec3);f16vec4   sin(f16vec4);float16_t cos(float16_t);f16vec2   cos(f16vec2);f16vec3   cos(f16vec3);f16vec4   cos(f16vec4);float16_t tan(float16_t);f16vec2   tan(f16vec2);f16vec3   tan(f16vec3);f16vec4   tan(f16vec4);float16_t asin(float16_t);f16vec2   asin(f16vec2);f16vec3   asin(f16vec3);f16vec4   asin(f16vec4);float16_t acos(float16_t);f16vec2   acos(f16vec2);f16vec3   acos(f16vec3);f16vec4   acos(f16vec4);float16_t atan(float16_t, float16_t);f16vec2   atan(f16vec2,   f16vec2);f16vec3   atan(f16vec3,   f16vec3);f16vec4   atan(f16vec4,   f16vec4);float16_t atan(float16_t);f16vec2   atan(f16vec2);f16vec3   atan(f16vec3);f16vec4   atan(f16vec4);float16_t sinh(float16_t);f16vec2   sinh(f16vec2);f16vec3   sinh(f16vec3);f16vec4   sinh(f16vec4);float16_t cosh(float16_t);f16vec2   cosh(f16vec2);f16vec3   cosh(f16vec3);f16vec4   cosh(f16vec4);float16_t tanh(float16_t);f16vec2   tanh(f16vec2);f16vec3   tanh(f16vec3);f16vec4   tanh(f16vec4);float16_t asinh(float16_t);f16vec2   asinh(f16vec2);f16vec3   asinh(f16vec3);f16vec4   asinh(f16vec4);float16_t acosh(float16_t);f16vec2   acosh(f16vec2);f16vec3   acosh(f16vec3);f16vec4   acosh(f16vec4);float16_t atanh(float16_t);f16vec2   atanh(f16vec2);f16vec3   atanh(f16vec3);f16vec4   atanh(f16vec4);float16_t pow(float16_t, float16_t);f16vec2   pow(f16vec2,   f16vec2);f16vec3   pow(f16vec3,   f16vec3);f16vec4   pow(f16vec4,   f16vec4);float16_t exp(float16_t);f16vec2   exp(f16vec2);f16vec3   exp(f16vec3);f16vec4   exp(f16vec4);float16_t log(float16_t);f16vec2   log(f16vec2);f16vec3   log(f16vec3);f16vec4   log(f16vec4);float16_t exp2(float16_t);f16vec2   exp2(f16vec2);f16vec3   exp2(f16vec3);f16vec4   exp2(f16vec4);float16_t log2(float16_t);f16vec2   log2(f16vec2);f16vec3   log2(f16vec3);f16vec4   log2(f16vec4);float16_t sqrt(float16_t);f16vec2   sqrt(f16vec2);f16vec3   sqrt(f16vec3);f16vec4   sqrt(f16vec4);float16_t inversesqrt(float16_t);f16vec2   inversesqrt(f16vec2);f16vec3   inversesqrt(f16vec3);f16vec4   inversesqrt(f16vec4);float16_t abs(float16_t);f16vec2   abs(f16vec2);f16vec3   abs(f16vec3);f16vec4   abs(f16vec4);float16_t sign(float16_t);f16vec2   sign(f16vec2);f16vec3   sign(f16vec3);f16vec4   sign(f16vec4);float16_t floor(float16_t);f16vec2   floor(f16vec2);f16vec3   floor(f16vec3);f16vec4   floor(f16vec4);float16_t trunc(float16_t);f16vec2   trunc(f16vec2);f16vec3   trunc(f16vec3);f16vec4   trunc(f16vec4);float16_t round(float16_t);f16vec2   round(f16vec2);f16vec3   round(f16vec3);f16vec4   round(f16vec4);float16_t roundEven(float16_t);f16vec2   roundEven(f16vec2);f16vec3   roundEven(f16vec3);f16vec4   roundEven(f16vec4);float16_t ceil(float16_t);f16vec2   ceil(f16vec2);f16vec3   ceil(f16vec3);f16vec4   ceil(f16vec4);float16_t fract(float16_t);f16vec2   fract(f16vec2);f16vec3   fract(f16vec3);f16vec4   fract(f16vec4);float16_t mod(float16_t, float16_t);f16vec2   mod(f16vec2,   float16_t);f16vec3   mod(f16vec3,   float16_t);f16vec4   mod(f16vec4,   float16_t);f16vec2   mod(f16vec2,   f16vec2);f16vec3   mod(f16vec3,   f16vec3);f16vec4   mod(f16vec4,   f16vec4);float16_t modf(float16_t, out float16_t);f16vec2   modf(f16vec2,   out f16vec2);f16vec3   modf(f16vec3,   out f16vec3);f16vec4   modf(f16vec4,   out f16vec4);float16_t min(float16_t, float16_t);f16vec2   min(f16vec2,   float16_t);f16vec3   min(f16vec3,   float16_t);f16vec4   min(f16vec4,   float16_t);f16vec2   min(f16vec2,   f16vec2);f16vec3   min(f16vec3,   f16vec3);f16vec4   min(f16vec4,   f16vec4);float16_t max(float16_t, float16_t);f16vec2   max(f16vec2,   float16_t);f16vec3   max(f16vec3,   float16_t);f16vec4   max(f16vec4,   float16_t);f16vec2   max(f16vec2,   f16vec2);f16vec3   max(f16vec3,   f16vec3);f16vec4   max(f16vec4,   f16vec4);float16_t clamp(float16_t, float16_t, float16_t);f16vec2   clamp(f16vec2,   float16_t, float16_t);f16vec3   clamp(f16vec3,   float16_t, float16_t);f16vec4   clamp(f16vec4,   float16_t, float16_t);f16vec2   clamp(f16vec2,   f16vec2,   f16vec2);f16vec3   clamp(f16vec3,   f16vec3,   f16vec3);f16vec4   clamp(f16vec4,   f16vec4,   f16vec4);float16_t mix(float16_t, float16_t, float16_t);f16vec2   mix(f16vec2,   f16vec2,   float16_t);f16vec3   mix(f16vec3,   f16vec3,   float16_t);f16vec4   mix(f16vec4,   f16vec4,   float16_t);f16vec2   mix(f16vec2,   f16vec2,   f16vec2);f16vec3   mix(f16vec3,   f16vec3,   f16vec3);f16vec4   mix(f16vec4,   f16vec4,   f16vec4);float16_t mix(float16_t, float16_t, bool);f16vec2   mix(f16vec2,   f16vec2,   bvec2);f16vec3   mix(f16vec3,   f16vec3,   bvec3);f16vec4   mix(f16vec4,   f16vec4,   bvec4);float16_t step(float16_t, float16_t);f16vec2   step(f16vec2,   f16vec2);f16vec3   step(f16vec3,   f16vec3);f16vec4   step(f16vec4,   f16vec4);f16vec2   step(float16_t, f16vec2);f16vec3   step(float16_t, f16vec3);f16vec4   step(float16_t, f16vec4);float16_t smoothstep(float16_t, float16_t, float16_t);f16vec2   smoothstep(f16vec2,   f16vec2,   f16vec2);f16vec3   smoothstep(f16vec3,   f16vec3,   f16vec3);f16vec4   smoothstep(f16vec4,   f16vec4,   f16vec4);f16vec2   smoothstep(float16_t, float16_t, f16vec2);f16vec3   smoothstep(float16_t, float16_t, f16vec3);f16vec4   smoothstep(float16_t, float16_t, f16vec4);bool  isnan(float16_t);bvec2 isnan(f16vec2);bvec3 isnan(f16vec3);bvec4 isnan(f16vec4);bool  isinf(float16_t);bvec2 isinf(f16vec2);bvec3 isinf(f16vec3);bvec4 isinf(f16vec4);float16_t fma(float16_t, float16_t, float16_t);f16vec2   fma(f16vec2,   f16vec2,   f16vec2);f16vec3   fma(f16vec3,   f16vec3,   f16vec3);f16vec4   fma(f16vec4,   f16vec4,   f16vec4);float16_t frexp(float16_t, out int);f16vec2   frexp(f16vec2,   out ivec2);f16vec3   frexp(f16vec3,   out ivec3);f16vec4   frexp(f16vec4,   out ivec4);float16_t ldexp(float16_t, in int);f16vec2   ldexp(f16vec2,   in ivec2);f16vec3   ldexp(f16vec3,   in ivec3);f16vec4   ldexp(f16vec4,   in ivec4);uint    packFloat2x16(f16vec2);f16vec2 unpackFloat2x16(uint);float16_t length(float16_t);float16_t length(f16vec2);float16_t length(f16vec3);float16_t length(f16vec4);float16_t distance(float16_t, float16_t);float16_t distance(f16vec2,   f16vec2);float16_t distance(f16vec3,   f16vec3);float16_t distance(f16vec4,   f16vec4);float16_t dot(float16_t, float16_t);float16_t dot(f16vec2,   f16vec2);float16_t dot(f16vec3,   f16vec3);float16_t dot(f16vec4,   f16vec4);f16vec3 cross(f16vec3, f16vec3);float16_t normalize(float16_t);f16vec2   normalize(f16vec2);f16vec3   normalize(f16vec3);f16vec4   normalize(f16vec4);float16_t faceforward(float16_t, float16_t, float16_t);f16vec2   faceforward(f16vec2,   f16vec2,   f16vec2);f16vec3   faceforward(f16vec3,   f16vec3,   f16vec3);f16vec4   faceforward(f16vec4,   f16vec4,   f16vec4);float16_t reflect(float16_t, float16_t);f16vec2   reflect(f16vec2,   f16vec2);f16vec3   reflect(f16vec3,   f16vec3);f16vec4   reflect(f16vec4,   f16vec4);float16_t refract(float16_t, float16_t, float16_t);f16vec2   refract(f16vec2,   f16vec2,   float16_t);f16vec3   refract(f16vec3,   f16vec3,   float16_t);f16vec4   refract(f16vec4,   f16vec4,   float16_t);f16mat2   matrixCompMult(f16mat2,   f16mat2);f16mat3   matrixCompMult(f16mat3,   f16mat3);f16mat4   matrixCompMult(f16mat4,   f16mat4);f16mat2x3 matrixCompMult(f16mat2x3, f16mat2x3);f16mat2x4 matrixCompMult(f16mat2x4, f16mat2x4);f16mat3x2 matrixCompMult(f16mat3x2, f16mat3x2);f16mat3x4 matrixCompMult(f16mat3x4, f16mat3x4);f16mat4x2 matrixCompMult(f16mat4x2, f16mat4x2);f16mat4x3 matrixCompMult(f16mat4x3, f16mat4x3);f16mat2   outerProduct(f16vec2, f16vec2);f16mat3   outerProduct(f16vec3, f16vec3);f16mat4   outerProduct(f16vec4, f16vec4);f16mat2x3 outerProduct(f16vec3, f16vec2);f16mat3x2 outerProduct(f16vec2, f16vec3);f16mat2x4 outerProduct(f16vec4, f16vec2);f16mat4x2 outerProduct(f16vec2, f16vec4);f16mat3x4 outerProduct(f16vec4, f16vec3);f16mat4x3 outerProduct(f16vec3, f16vec4);f16mat2   transpose(f16mat2);f16mat3   transpose(f16mat3);f16mat4   transpose(f16mat4);f16mat2x3 transpose(f16mat3x2);f16mat3x2 transpose(f16mat2x3);f16mat2x4 transpose(f16mat4x2);f16mat4x2 transpose(f16mat2x4);f16mat3x4 transpose(f16mat4x3);f16mat4x3 transpose(f16mat3x4);float16_t determinant(f16mat2);float16_t determinant(f16mat3);float16_t determinant(f16mat4);f16mat2 inverse(f16mat2);f16mat3 inverse(f16mat3);f16mat4 inverse(f16mat4);bvec2 lessThan(f16vec2, f16vec2);bvec3 lessThan(f16vec3, f16vec3);bvec4 lessThan(f16vec4, f16vec4);bvec2 lessThanEqual(f16vec2, f16vec2);bvec3 lessThanEqual(f16vec3, f16vec3);bvec4 lessThanEqual(f16vec4, f16vec4);bvec2 greaterThan(f16vec2, f16vec2);bvec3 greaterThan(f16vec3, f16vec3);bvec4 greaterThan(f16vec4, f16vec4);bvec2 greaterThanEqual(f16vec2, f16vec2);bvec3 greaterThanEqual(f16vec3, f16vec3);bvec4 greaterThanEqual(f16vec4, f16vec4);bvec2 equal(f16vec2, f16vec2);bvec3 equal(f16vec3, f16vec3);bvec4 equal(f16vec4, f16vec4);bvec2 notEqual(f16vec2, f16vec2);bvec3 notEqual(f16vec3, f16vec3);bvec4 notEqual(f16vec4, f16vec4);
float2
float2x2
float2x3
float2x4
float3
float32_t
float32_t matrix
float32_t vector
float3x2
float3x3
float3x4
float4
float4x2
float4x3
float4x4
float64_t
float64_t dFdx(float64_t);f64vec2   dFdx(f64vec2);f64vec3   dFdx(f64vec3);f64vec4   dFdx(f64vec4);float64_t dFdy(float64_t);f64vec2   dFdy(f64vec2);f64vec3   dFdy(f64vec3);f64vec4   dFdy(f64vec4);float64_t dFdxFine(float64_t);f64vec2   dFdxFine(f64vec2);f64vec3   dFdxFine(f64vec3);f64vec4   dFdxFine(f64vec4);float64_t dFdyFine(float64_t);f64vec2   dFdyFine(f64vec2);f64vec3   dFdyFine(f64vec3);f64vec4   dFdyFine(f64vec4);float64_t dFdxCoarse(float64_t);f64vec2   dFdxCoarse(f64vec2);f64vec3   dFdxCoarse(f64vec3);f64vec4   dFdxCoarse(f64vec4);float64_t dFdyCoarse(float64_t);f64vec2   dFdyCoarse(f64vec2);f64vec3   dFdyCoarse(f64vec3);f64vec4   dFdyCoarse(f64vec4);float64_t fwidth(float64_t);f64vec2   fwidth(f64vec2);f64vec3   fwidth(f64vec3);f64vec4   fwidth(f64vec4);float64_t fwidthFine(float64_t);f64vec2   fwidthFine(f64vec2);f64vec3   fwidthFine(f64vec3);f64vec4   fwidthFine(f64vec4);float64_t fwidthCoarse(float64_t);f64vec2   fwidthCoarse(f64vec2);f64vec3   fwidthCoarse(f64vec3);f64vec4   fwidthCoarse(f64vec4);
float64_t interpolateAtCentroid(float64_t);f64vec2   interpolateAtCentroid(f64vec2);f64vec3   interpolateAtCentroid(f64vec3);f64vec4   interpolateAtCentroid(f64vec4);float64_t interpolateAtSample(float64_t, int);f64vec2   interpolateAtSample(f64vec2,   int);f64vec3   interpolateAtSample(f64vec3,   int);f64vec4   interpolateAtSample(f64vec4,   int);float64_t interpolateAtOffset(float64_t, f64vec2);f64vec2   interpolateAtOffset(f64vec2,   f64vec2);f64vec3   interpolateAtOffset(f64vec3,   f64vec2);f64vec4   interpolateAtOffset(f64vec4,   f64vec2);
float64_t matrix
float64_t vector
floatBitsToInt
floatBitsToUint
float_constant(void*)
floatsuffix_check(sh::TParseContext*)
floor
floorf
flush
flushUpdatesToImage
fma
fopen64
for
for (
for header name: %s
for non-parameter, can only apply to 'in' or no storage qualifier
for_init_statement
for_rest_statement
format is not one of supported image unit formats.
format requires readonly or writeonly memory qualifier
format_map_autogen.cpp
formatutils.cpp
formatutilsgl.cpp
fprintf
fputc
fputs
fr7
fractional_even_spacing
fractional_odd_spacing
fragColor
fragment
fragment input block
fragment outputs sharing the same location must be the same basic type
fragment shader output
fragment-shader array-of-array input
fragment-shader array-of-array output
fragment-shader array-of-struct input
fragment-shader struct input
fragment-shader struct input containing an array
fragment-shader struct input containing structure
frame_dummy
fread
free
freelocale
frexp
fseek
ftell
ftransform
fully_specified_type
function already has a body
function call, method, or subroutine call expected
function cannot take any parameter(s)
function does not return a value:
function must have the same parameter qualifiers in all of its declarations
function must have the same return type in all of its declarations
function name expected
function name is redeclaration of existing name
function parameter array must be sized at compile time
function parameter array must specify a size
function return is not matching type:
function_call
function_call_generic
function_call_header
function_call_header_no_parameters
function_call_header_with_parameters
function_call_or_method
function_declarator
function_definition
function_header
function_header_with_parameters
function_identifier
function_prototype
functional.cpp
future reserved word in ES 300 and keyword in GLSL
future.cpp
fv=
fvec2
fvec3
fvec4
fwidth
fwidthCoarse
fwidthFine
fwrite
g
g 5
g7
g8
gS=
gZ5
g_loader_debug
g_loader_log_msgs
geometry
geometry shaders
getProgram
getSamplePosition is unimplemented.
getSyncValues extension not active
getSyncValues surface cannot be EGL_NO_SURFACE
getSyncValues surface requires Direct Composition to be enabled
getTraceCategoryEnabledFlag
get_extension_device_proc_terminator
getc
getcwd
getegid
getenv
geteuid
getgid
getuid
gi>
gj>
gl::(anonymous namespace)::AddParentPrefix(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
gl::(anonymous namespace)::CheckAttachmentCompleteness(gl::Context const*, gl::FramebufferAttachment const&)
gl::(anonymous namespace)::CheckMultiviewStateMatchesForCompleteness(gl::FramebufferAttachment const*, gl::FramebufferAttachment const*)
gl::(anonymous namespace)::ComparePackedVarying(gl::PackedVarying const&, gl::PackedVarying const&)
gl::(anonymous namespace)::CompressedTextureFormatRequiresExactSize(unsigned int)
gl::(anonymous namespace)::GetInterfaceBlockIndex(std::__1::vector<gl::InterfaceBlock, std::__1::allocator<gl::InterfaceBlock> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
gl::(anonymous namespace)::GetInterfaceBlockName(unsigned int, std::__1::vector<gl::InterfaceBlock, std::__1::allocator<gl::InterfaceBlock> > const&, int, int*, char*)
gl::(anonymous namespace)::GetShaderVariableBufferResourceProperty(gl::ShaderVariableBuffer const&, unsigned int, int*, int, int*)
gl::(anonymous namespace)::GetUniformLocationBinding(gl::ProgramBindings const&, sh::Uniform const&)
gl::(anonymous namespace)::InitShaderStorageBlockLinker(gl::ProgramState const&, gl::ShaderStorageBlockLinker*)
gl::(anonymous namespace)::InitUniformBlockLinker(gl::ProgramState const&, gl::UniformBlockLinker*)
gl::(anonymous namespace)::IsClearBufferMaskedOut(gl::Context const*, unsigned int)
gl::(anonymous namespace)::IsValidCopyTextureDestinationInternalFormatEnum(int)
gl::(anonymous namespace)::LoadInterfaceBlock(gl::BinaryInputStream*, gl::InterfaceBlock*)
gl::(anonymous namespace)::LoadShaderVar(gl::BinaryInputStream*, sh::ShaderVariable*)
gl::(anonymous namespace)::LoadShaderVariableBuffer(gl::BinaryInputStream*, gl::ShaderVariableBuffer*)
gl::(anonymous namespace)::LogUniformsExceedLimit(gl::ShaderType, gl::(anonymous namespace)::UniformType, unsigned int, gl::InfoLog&)
gl::(anonymous namespace)::TransformViewportOffsetArrayToVectorOfOffsets(int const*, int)
gl::(anonymous namespace)::ValidBlendFunc(gl::Context const*, unsigned int)
gl::(anonymous namespace)::ValidCap(gl::Context const*, unsigned int, bool)
gl::(anonymous namespace)::ValidateCopyTexture3DCommon(gl::Context*, gl::Texture const*, int, int, gl::Texture const*, int, int, gl::TextureTarget)
gl::(anonymous namespace)::ValidateES2CopyTexImageParameters(gl::Context*, gl::TextureTarget, int, unsigned int, bool, int, int, int, int, int, int, int)
gl::(anonymous namespace)::ValidateFramebufferTextureMultiviewBaseANGLE(gl::Context*, unsigned int, unsigned int, unsigned int, int, int)
gl::(anonymous namespace)::ValidateFramebufferTextureMultiviewLevelAndFormat(gl::Context*, gl::Texture*, int)
gl::(anonymous namespace)::ValidateGenOrDeleteCountES3(gl::Context*, int)
gl::(anonymous namespace)::ValidateGenOrDeleteES3(gl::Context*, int)
gl::(anonymous namespace)::ValidateInstancedPathParameters(gl::Context*, int, unsigned int, void const*, unsigned int, unsigned int, float const*)
gl::(anonymous namespace)::ValidateInterfaceBlocksCount(unsigned int, std::__1::vector<sh::InterfaceBlock, std::__1::allocator<sh::InterfaceBlock> > const&, gl::ShaderType, sh::BlockType, unsigned int*, gl::InfoLog&)
gl::(anonymous namespace)::ValidateInterfaceBlocksMatch(unsigned int, angle::PackedEnumMap<gl::ShaderType, std::__1::vector<sh::InterfaceBlock, std::__1::allocator<sh::InterfaceBlock> > const*, 4ul> const&, gl::InfoLog&, bool)
gl::(anonymous namespace)::ValidateMatrixMode(gl::Context*, unsigned int)
gl::(anonymous namespace)::ValidateProgramResourceIndex(gl::Program const*, unsigned int, unsigned int)
gl::(anonymous namespace)::ValidateProgramUniform(gl::Context*, unsigned int, unsigned int, int, int)
gl::(anonymous namespace)::ValidateProgramUniformMatrix(gl::Context*, unsigned int, unsigned int, int, int, unsigned char)
gl::(anonymous namespace)::ValidateTextureMaxAnisotropyValue(gl::Context*, float)
gl::(anonymous namespace)::ValidateUniformES3(gl::Context*, unsigned int, int, int)
gl::(anonymous namespace)::ValidateUniformMatrixES3(gl::Context*, unsigned int, int, int, unsigned char)
gl::(anonymous namespace)::ValidateVertexAttribFormatCommon(gl::Context*, unsigned int, int, unsigned int, unsigned int, unsigned char)
gl::(anonymous namespace)::WriteShaderVar(gl::BinaryOutputStream*, sh::ShaderVariable const&)
gl::(anonymous namespace)::WriteShaderVariableBuffer(gl::BinaryOutputStream*, gl::ShaderVariableBuffer const&)
gl::(anonymous namespace)::gActiveCompilers
gl::(anonymous namespace)::g_debugAnnotator
gl::(anonymous namespace)::kInfoTable
gl::(anonymous namespace)::operator<<(gl::(anonymous namespace)::HashStream&, gl::ProgramBindings const&)
gl::(anonymous namespace)::operator<<(gl::(anonymous namespace)::HashStream&, std::__1::vector<gl::VariableLocation, std::__1::allocator<gl::VariableLocation> > const&)
gl::ActiveShaderProgram(unsigned int, unsigned int)
gl::ActiveShaderProgramContextANGLE(void*, unsigned int, unsigned int)
gl::ActiveTexture(unsigned int)
gl::ActiveTextureContextANGLE(void*, unsigned int)
gl::ActiveVariable::ActiveVariable(gl::ActiveVariable const&)
gl::ActiveVariable::activeShaderCount() const
gl::ActiveVariable::getFirstShaderTypeWhereActive() const
gl::ActiveVariable::isActive(gl::ShaderType) const
gl::ActiveVariable::setActive(gl::ShaderType, bool)
gl::ActiveVariable::unionReferencesWith(gl::ActiveVariable const&)
gl::ActiveVariable::~ActiveVariable()
gl::AllocateFirstFreeBits(unsigned int*, unsigned int, unsigned int)
gl::AlphaFunc(unsigned int, float)
gl::AlphaFuncContextANGLE(void*, unsigned int, float)
gl::AlphaFuncx(unsigned int, int)
gl::AlphaFuncxContextANGLE(void*, unsigned int, int)
gl::AlphaTestFunc gl::FromGLenum<gl::AlphaTestFunc>(unsigned int)
gl::AlwaysSupported(gl::Version const&, gl::Extensions const&)
gl::ArraySizeProduct(std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > const&)
gl::AtomicCounterBufferLinker::AtomicCounterBufferLinker(std::__1::vector<gl::ShaderVariableBuffer, std::__1::allocator<gl::ShaderVariableBuffer> >*)
gl::AtomicCounterBufferLinker::link(std::__1::map<int, unsigned int, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, unsigned int> > > const&) const
gl::AtomicCounterBufferLinker::~AtomicCounterBufferLinker()
gl::AttachShader(unsigned int, unsigned int)
gl::AttachShaderContextANGLE(void*, unsigned int, unsigned int)
gl::BeginQuery(unsigned int, unsigned int)
gl::BeginQueryContextANGLE(void*, unsigned int, unsigned int)
gl::BeginQueryEXT(unsigned int, unsigned int)
gl::BeginQueryEXTContextANGLE(void*, unsigned int, unsigned int)
gl::BeginTransformFeedback(unsigned int)
gl::BeginTransformFeedbackContextANGLE(void*, unsigned int)
gl::BindAttribLocation(unsigned int, unsigned int, char const*)
gl::BindAttribLocationContextANGLE(void*, unsigned int, unsigned int, char const*)
gl::BindBuffer(unsigned int, unsigned int)
gl::BindBufferBase(unsigned int, unsigned int, unsigned int)
gl::BindBufferBaseContextANGLE(void*, unsigned int, unsigned int, unsigned int)
gl::BindBufferContextANGLE(void*, unsigned int, unsigned int)
gl::BindBufferRange(unsigned int, unsigned int, unsigned int, long, long)
gl::BindBufferRangeContextANGLE(void*, unsigned int, unsigned int, unsigned int, long, long)
gl::BindFragDataLocationEXT(unsigned int, unsigned int, char const*)
gl::BindFragDataLocationEXTContextANGLE(void*, unsigned int, unsigned int, char const*)
gl::BindFragDataLocationIndexedEXT(unsigned int, unsigned int, unsigned int, char const*)
gl::BindFragDataLocationIndexedEXTContextANGLE(void*, unsigned int, unsigned int, unsigned int, char const*)
gl::BindFragmentInputLocationCHROMIUM(unsigned int, int, char const*)
gl::BindFragmentInputLocationCHROMIUMContextANGLE(void*, unsigned int, int, char const*)
gl::BindFramebuffer(unsigned int, unsigned int)
gl::BindFramebufferContextANGLE(void*, unsigned int, unsigned int)
gl::BindFramebufferOES(unsigned int, unsigned int)
gl::BindFramebufferOESContextANGLE(void*, unsigned int, unsigned int)
gl::BindImageTexture(unsigned int, unsigned int, int, unsigned char, int, unsigned int, unsigned int)
gl::BindImageTextureContextANGLE(void*, unsigned int, unsigned int, int, unsigned char, int, unsigned int, unsigned int)
gl::BindProgramPipeline(unsigned int)
gl::BindProgramPipelineContextANGLE(void*, unsigned int)
gl::BindRenderbuffer(unsigned int, unsigned int)
gl::BindRenderbufferContextANGLE(void*, unsigned int, unsigned int)
gl::BindRenderbufferOES(unsigned int, unsigned int)
gl::BindRenderbufferOESContextANGLE(void*, unsigned int, unsigned int)
gl::BindSampler(unsigned int, unsigned int)
gl::BindSamplerContextANGLE(void*, unsigned int, unsigned int)
gl::BindTexture(unsigned int, unsigned int)
gl::BindTextureContextANGLE(void*, unsigned int, unsigned int)
gl::BindTransformFeedback(unsigned int, unsigned int)
gl::BindTransformFeedbackContextANGLE(void*, unsigned int, unsigned int)
gl::BindUniformLocationCHROMIUM(unsigned int, int, char const*)
gl::BindUniformLocationCHROMIUMContextANGLE(void*, unsigned int, int, char const*)
gl::BindVertexArray(unsigned int)
gl::BindVertexArrayContextANGLE(void*, unsigned int)
gl::BindVertexArrayOES(unsigned int)
gl::BindVertexArrayOESContextANGLE(void*, unsigned int)
gl::BindVertexBuffer(unsigned int, unsigned int, long, int)
gl::BindVertexBufferContextANGLE(void*, unsigned int, unsigned int, long, int)
gl::BindingPointer<gl::Buffer>::~BindingPointer()
gl::BindingPointer<gl::Compiler>::~BindingPointer()
gl::BindingPointer<gl::ProgramPipeline>::~BindingPointer()
gl::BindingPointer<gl::Query>::~BindingPointer()
gl::BindingPointer<gl::Renderbuffer>::~BindingPointer()
gl::BindingPointer<gl::Sampler>::~BindingPointer()
gl::BindingPointer<gl::Texture>::~BindingPointer()
gl::BindingPointer<gl::TransformFeedback>::~BindingPointer()
gl::BlendColor(float, float, float, float)
gl::BlendColorContextANGLE(void*, float, float, float, float)
gl::BlendEquation(unsigned int)
gl::BlendEquationContextANGLE(void*, unsigned int)
gl::BlendEquationSeparate(unsigned int, unsigned int)
gl::BlendEquationSeparateContextANGLE(void*, unsigned int, unsigned int)
gl::BlendFunc(unsigned int, unsigned int)
gl::BlendFuncContextANGLE(void*, unsigned int, unsigned int)
gl::BlendFuncSeparate(unsigned int, unsigned int, unsigned int, unsigned int)
gl::BlendFuncSeparateContextANGLE(void*, unsigned int, unsigned int, unsigned int, unsigned int)
gl::BlendState::BlendState()
gl::BlitFramebuffer(int, int, int, int, int, int, int, int, unsigned int, unsigned int)
gl::BlitFramebufferANGLE(int, int, int, int, int, int, int, int, unsigned int, unsigned int)
gl::BlitFramebufferANGLEContextANGLE(void*, int, int, int, int, int, int, int, int, unsigned int, unsigned int)
gl::BlitFramebufferContextANGLE(void*, int, int, int, int, int, int, int, int, unsigned int, unsigned int)
gl::Box::toRect() const
gl::Buffer* gl::TypedResourceManager<gl::Buffer, gl::HandleAllocator, gl::BufferManager>::checkObjectAllocationImpl<>(rx::GLImplFactory*, unsigned int)
gl::Buffer::Buffer(rx::GLImplFactory*, unsigned int)
gl::Buffer::bufferData(gl::Context*, gl::BufferBinding, void const*, long, gl::BufferUsage)
gl::Buffer::bufferSubData(gl::Context const*, gl::BufferBinding, void const*, long, long)
gl::Buffer::copyBufferSubData(gl::Context const*, gl::Buffer*, long, long, long)
gl::Buffer::getIndexRange(gl::Context const*, unsigned int, unsigned long, unsigned long, bool, gl::IndexRange*) const
gl::Buffer::getLabel() const
gl::Buffer::isBound() const
gl::Buffer::isBoundForTransformFeedbackAndOtherUse() const
gl::Buffer::map(gl::Context const*, unsigned int)
gl::Buffer::mapRange(gl::Context const*, long, long, unsigned int)
gl::Buffer::onDestroy(gl::Context const*)
gl::Buffer::onPixelPack(gl::Context const*)
gl::Buffer::onTFBindingChanged(gl::Context const*, bool, bool)
gl::Buffer::onTransformFeedback(gl::Context const*)
gl::Buffer::setLabel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
gl::Buffer::unmap(gl::Context const*, unsigned char*)
gl::Buffer::~Buffer()
gl::BufferBinding gl::FromGLenum<gl::BufferBinding>(unsigned int)
gl::BufferData(unsigned int, long, void const*, unsigned int)
gl::BufferDataContextANGLE(void*, unsigned int, long, void const*, unsigned int)
gl::BufferManager::AllocateNewObject(rx::GLImplFactory*, unsigned int)
gl::BufferManager::createBuffer()
gl::BufferManager::getBuffer(unsigned int) const
gl::BufferManager::~BufferManager()
gl::BufferSubData(unsigned int, long, long, void const*)
gl::BufferSubDataContextANGLE(void*, unsigned int, long, long, void const*)
gl::BufferUsage gl::FromGLenum<gl::BufferUsage>(unsigned int)
gl::BufferVariable::BufferVariable()
gl::BufferVariable::BufferVariable(unsigned int, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > const&, int, sh::BlockMemberInfo const&)
gl::BufferVariable::~BufferVariable()
gl::BuildInternalFormatInfoMap()
gl::Caps::Caps()
gl::Caps::Caps(gl::Caps const&)
gl::Caps::~Caps()
gl::CastMaskValue(gl::Context const*, unsigned int)
gl::CheckFramebufferStatus(unsigned int)
gl::CheckFramebufferStatusContextANGLE(void*, unsigned int)
gl::CheckFramebufferStatusOES(unsigned int)
gl::CheckFramebufferStatusOESContextANGLE(void*, unsigned int)
gl::Clear(unsigned int)
gl::ClearBufferfi(unsigned int, int, float, int)
gl::ClearBufferfiContextANGLE(void*, unsigned int, int, float, int)
gl::ClearBufferfv(unsigned int, int, float const*)
gl::ClearBufferfvContextANGLE(void*, unsigned int, int, float const*)
gl::ClearBufferiv(unsigned int, int, int const*)
gl::ClearBufferivContextANGLE(void*, unsigned int, int, int const*)
gl::ClearBufferuiv(unsigned int, int, unsigned int const*)
gl::ClearBufferuivContextANGLE(void*, unsigned int, int, unsigned int const*)
gl::ClearColor(float, float, float, float)
gl::ClearColorContextANGLE(void*, float, float, float, float)
gl::ClearColorx(int, int, int, int)
gl::ClearColorxContextANGLE(void*, int, int, int, int)
gl::ClearContextANGLE(void*, unsigned int)
gl::ClearDepthf(float)
gl::ClearDepthfContextANGLE(void*, float)
gl::ClearDepthx(int)
gl::ClearDepthxContextANGLE(void*, int)
gl::ClearStencil(int)
gl::ClearStencilContextANGLE(void*, int)
gl::ClientActiveTexture(unsigned int)
gl::ClientActiveTextureContextANGLE(void*, unsigned int)
gl::ClientVertexArrayType gl::FromGLenum<gl::ClientVertexArrayType>(unsigned int)
gl::ClientWaitSync(__GLsync*, unsigned int, unsigned long)
gl::ClientWaitSyncContextANGLE(void*, __GLsync*, unsigned int, unsigned long)
gl::ClipPlanef(unsigned int, float const*)
gl::ClipPlanefContextANGLE(void*, unsigned int, float const*)
gl::ClipPlanex(unsigned int, int const*)
gl::ClipPlanexContextANGLE(void*, unsigned int, int const*)
gl::ClipRectangle(gl::Rectangle const&, gl::Rectangle const&, gl::Rectangle*)
gl::Color4f(float, float, float, float)
gl::Color4fContextANGLE(void*, float, float, float, float)
gl::Color4ub(unsigned char, unsigned char, unsigned char, unsigned char)
gl::Color4ubContextANGLE(void*, unsigned char, unsigned char, unsigned char, unsigned char)
gl::Color4x(int, int, int, int)
gl::Color4xContextANGLE(void*, int, int, int, int)
gl::ColorMask(unsigned char, unsigned char, unsigned char, unsigned char)
gl::ColorMaskContextANGLE(void*, unsigned char, unsigned char, unsigned char, unsigned char)
gl::ColorPointer(int, unsigned int, int, void const*)
gl::ColorPointerContextANGLE(void*, int, unsigned int, int, void const*)
gl::CompareShaderVar(sh::ShaderVariable const&, sh::ShaderVariable const&)
gl::CompileShader(unsigned int)
gl::CompileShaderContextANGLE(void*, unsigned int)
gl::CompileTask::operator()()
gl::CompileTask::~CompileTask()
gl::Compiler::Compiler(rx::GLImplFactory*, gl::ContextState const&)
gl::Compiler::getInstance(gl::ShaderType)
gl::Compiler::putInstance(gl::ShCompilerInstance&&)
gl::Compiler::~Compiler()
gl::ComponentTypeMask::ComponentTypeMask()
gl::ComponentTypeMask::ComponentTypeMask(gl::ComponentTypeMask const&)
gl::ComponentTypeMask::Validate(unsigned long, unsigned long, unsigned long, unsigned long)
gl::ComponentTypeMask::from_ulong(unsigned long)
gl::ComponentTypeMask::reset()
gl::ComponentTypeMask::setIndex(unsigned int, unsigned long)
gl::ComponentTypeMask::to_ulong() const
gl::ComponentTypeMask::~ComponentTypeMask()
gl::CompressedCopyTextureCHROMIUM(unsigned int, unsigned int)
gl::CompressedCopyTextureCHROMIUMContextANGLE(void*, unsigned int, unsigned int)
gl::CompressedTexImage2D(unsigned int, int, unsigned int, int, int, int, int, void const*)
gl::CompressedTexImage2DContextANGLE(void*, unsigned int, int, unsigned int, int, int, int, int, void const*)
gl::CompressedTexImage2DRobustANGLE(unsigned int, int, unsigned int, int, int, int, int, int, void const*)
gl::CompressedTexImage2DRobustANGLEContextANGLE(void*, unsigned int, int, unsigned int, int, int, int, int, int, void const*)
gl::CompressedTexImage3D(unsigned int, int, unsigned int, int, int, int, int, int, void const*)
gl::CompressedTexImage3DContextANGLE(void*, unsigned int, int, unsigned int, int, int, int, int, int, void const*)
gl::CompressedTexImage3DRobustANGLE(unsigned int, int, unsigned int, int, int, int, int, int, int, void const*)
gl::CompressedTexImage3DRobustANGLEContextANGLE(void*, unsigned int, int, unsigned int, int, int, int, int, int, int, void const*)
gl::CompressedTexSubImage2D(unsigned int, int, int, int, int, int, unsigned int, int, void const*)
gl::CompressedTexSubImage2DContextANGLE(void*, unsigned int, int, int, int, int, int, unsigned int, int, void const*)
gl::CompressedTexSubImage2DRobustANGLE(unsigned int, int, int, int, int, int, unsigned int, int, int, void const*)
gl::CompressedTexSubImage2DRobustANGLEContextANGLE(void*, unsigned int, int, int, int, int, int, unsigned int, int, int, void const*)
gl::CompressedTexSubImage3D(unsigned int, int, int, int, int, int, int, int, unsigned int, int, void const*)
gl::CompressedTexSubImage3DContextANGLE(void*, unsigned int, int, int, int, int, int, int, int, unsigned int, int, void const*)
gl::CompressedTexSubImage3DRobustANGLE(unsigned int, int, int, int, int, int, int, int, unsigned int, int, int, void const*)
gl::CompressedTexSubImage3DRobustANGLEContextANGLE(void*, unsigned int, int, int, int, int, int, int, int, unsigned int, int, int, void const*)
gl::ComputeIndexRange(unsigned int, void const*, unsigned long, bool)
gl::ComputeVertexAttributeStride(gl::VertexAttribute const&, gl::VertexBinding const&)
gl::ComputeVertexAttributeTypeSize(gl::VertexAttribute const&)
gl::ComputeVertexBindingElementCount(unsigned int, unsigned long, unsigned long)
gl::Context::Context(rx::EGLImplFactory*, egl::Config const*, gl::Context const*, gl::TextureManager*, gl::MemoryProgramCache*, egl::AttributeMap const&, egl::DisplayExtensions const&, egl::ClientExtensions const&)
gl::Context::activeShaderProgram(unsigned int, unsigned int)
gl::Context::activeTexture(unsigned int)
gl::Context::alphaFunc(gl::AlphaTestFunc, float)
gl::Context::alphaFuncx(gl::AlphaTestFunc, int)
gl::Context::attachShader(unsigned int, unsigned int)
gl::Context::beginQuery(gl::QueryType, unsigned int)
gl::Context::beginTransformFeedback(gl::PrimitiveMode)
gl::Context::bindAttribLocation(unsigned int, unsigned int, char const*)
gl::Context::bindBuffer(gl::BufferBinding, unsigned int)
gl::Context::bindBufferBase(gl::BufferBinding, unsigned int, unsigned int)
gl::Context::bindBufferRange(gl::BufferBinding, unsigned int, unsigned int, long, long)
gl::Context::bindFragDataLocation(unsigned int, unsigned int, char const*)
gl::Context::bindFragDataLocationIndexed(unsigned int, unsigned int, unsigned int, char const*)
gl::Context::bindFragmentInputLocation(unsigned int, int, char const*)
gl::Context::bindFramebuffer(unsigned int, unsigned int)
gl::Context::bindImageTexture(unsigned int, unsigned int, int, unsigned char, int, unsigned int, unsigned int)
gl::Context::bindProgramPipeline(unsigned int)
gl::Context::bindRenderbuffer(unsigned int, unsigned int)
gl::Context::bindSampler(unsigned int, unsigned int)
gl::Context::bindTexture(gl::TextureType, unsigned int)
gl::Context::bindTransformFeedback(unsigned int, unsigned int)
gl::Context::bindUniformLocation(unsigned int, int, char const*)
gl::Context::bindVertexArray(unsigned int)
gl::Context::bindVertexBuffer(unsigned int, unsigned int, long, int)
gl::Context::blendColor(float, float, float, float)
gl::Context::blendEquation(unsigned int)
gl::Context::blendEquationSeparate(unsigned int, unsigned int)
gl::Context::blendFunc(unsigned int, unsigned int)
gl::Context::blendFuncSeparate(unsigned int, unsigned int, unsigned int, unsigned int)
gl::Context::blitFramebuffer(int, int, int, int, int, int, int, int, unsigned int, unsigned int)
gl::Context::bufferData(gl::BufferBinding, long, void const*, gl::BufferUsage)
gl::Context::bufferSubData(gl::BufferBinding, long, long, void const*)
gl::Context::checkFramebufferStatus(unsigned int)
gl::Context::checkTransformFeedbackAllocation(unsigned int)
gl::Context::checkVertexArrayAllocation(unsigned int)
gl::Context::clear(unsigned int)
gl::Context::clearBufferfi(unsigned int, int, float, int)
gl::Context::clearBufferfv(unsigned int, int, float const*)
gl::Context::clearBufferiv(unsigned int, int, int const*)
gl::Context::clearBufferuiv(unsigned int, int, unsigned int const*)
gl::Context::clearColor(float, float, float, float)
gl::Context::clearColorx(int, int, int, int)
gl::Context::clearDepthf(float)
gl::Context::clearDepthx(int)
gl::Context::clearStencil(int)
gl::Context::clientActiveTexture(unsigned int)
gl::Context::clientWaitSync(__GLsync*, unsigned int, unsigned long)
gl::Context::clipPlanef(unsigned int, float const*)
gl::Context::clipPlanex(unsigned int, int const*)
gl::Context::color4f(float, float, float, float)
gl::Context::color4ub(unsigned char, unsigned char, unsigned char, unsigned char)
gl::Context::color4x(int, int, int, int)
gl::Context::colorMask(unsigned char, unsigned char, unsigned char, unsigned char)
gl::Context::colorPointer(int, unsigned int, int, void const*)
gl::Context::compileShader(unsigned int)
gl::Context::compressedCopyTexture(unsigned int, unsigned int)
gl::Context::compressedTexImage2D(gl::TextureTarget, int, unsigned int, int, int, int, int, void const*)
gl::Context::compressedTexImage2DRobust(gl::TextureTarget, int, unsigned int, int, int, int, int, int, void const*)
gl::Context::compressedTexImage3D(gl::TextureType, int, unsigned int, int, int, int, int, int, void const*)
gl::Context::compressedTexImage3DRobust(gl::TextureType, int, unsigned int, int, int, int, int, int, int, void const*)
gl::Context::compressedTexSubImage2D(gl::TextureTarget, int, int, int, int, int, unsigned int, int, void const*)
gl::Context::compressedTexSubImage2DRobust(gl::TextureTarget, int, int, int, int, int, unsigned int, int, int, void const*)
gl::Context::compressedTexSubImage3D(gl::TextureType, int, int, int, int, int, int, int, unsigned int, int, void const*)
gl::Context::compressedTexSubImage3DRobust(gl::TextureType, int, int, int, int, int, int, int, unsigned int, int, int, void const*)
gl::Context::copyBufferSubData(gl::BufferBinding, gl::BufferBinding, long, long, long)
gl::Context::copySubTexture(unsigned int, int, gl::TextureTarget, unsigned int, int, int, int, int, int, int, int, unsigned char, unsigned char, unsigned char)
gl::Context::copySubTexture3D(unsigned int, int, gl::TextureTarget, unsigned int, int, int, int, int, int, int, int, int, int, int, unsigned char, unsigned char, unsigned char)
gl::Context::copyTexImage2D(gl::TextureTarget, int, unsigned int, int, int, int, int, int)
gl::Context::copyTexSubImage2D(gl::TextureTarget, int, int, int, int, int, int, int)
gl::Context::copyTexSubImage3D(gl::TextureType, int, int, int, int, int, int, int, int)
gl::Context::copyTexture(unsigned int, int, gl::TextureTarget, unsigned int, int, int, unsigned int, unsigned char, unsigned char, unsigned char)
gl::Context::copyTexture3D(unsigned int, int, gl::TextureTarget, unsigned int, int, int, unsigned int, unsigned char, unsigned char, unsigned char)
gl::Context::coverFillPath(unsigned int, unsigned int)
gl::Context::coverFillPathInstanced(int, unsigned int, void const*, unsigned int, unsigned int, unsigned int, float const*)
gl::Context::coverStrokePath(unsigned int, unsigned int)
gl::Context::coverStrokePathInstanced(int, unsigned int, void const*, unsigned int, unsigned int, unsigned int, float const*)
gl::Context::coverageModulation(unsigned int)
gl::Context::createProgram()
gl::Context::createShader(gl::ShaderType)
gl::Context::createShaderProgramv(gl::ShaderType, int, char const* const*)
gl::Context::cullFace(gl::CullFaceMode)
gl::Context::currentPaletteMatrix(unsigned int)
gl::Context::debugMessageCallback(void (*)(unsigned int, unsigned int, unsigned int, unsigned int, int, char const*, void const*), void const*)
gl::Context::debugMessageControl(unsigned int, unsigned int, unsigned int, int, unsigned int const*, unsigned char)
gl::Context::debugMessageInsert(unsigned int, unsigned int, unsigned int, unsigned int, int, char const*)
gl::Context::deleteBuffers(int, unsigned int const*)
gl::Context::deleteFencesNV(int, unsigned int const*)
gl::Context::deleteFramebuffers(int, unsigned int const*)
gl::Context::deletePaths(unsigned int, int)
gl::Context::deleteProgram(unsigned int)
gl::Context::deleteProgramPipelines(int, unsigned int const*)
gl::Context::deleteQueries(int, unsigned int const*)
gl::Context::deleteRenderbuffers(int, unsigned int const*)
gl::Context::deleteSamplers(int, unsigned int const*)
gl::Context::deleteShader(unsigned int)
gl::Context::deleteSync(__GLsync*)
gl::Context::deleteTexture(unsigned int)
gl::Context::deleteTextures(int, unsigned int const*)
gl::Context::deleteTransformFeedbacks(int, unsigned int const*)
gl::Context::deleteVertexArrays(int, unsigned int const*)
gl::Context::depthFunc(unsigned int)
gl::Context::depthMask(unsigned char)
gl::Context::depthRangef(float, float)
gl::Context::depthRangex(int, int)
gl::Context::detachFramebuffer(unsigned int)
gl::Context::detachShader(unsigned int, unsigned int)
gl::Context::disable(unsigned int)
gl::Context::disableClientState(gl::ClientVertexArrayType)
gl::Context::disableVertexAttribArray(unsigned int)
gl::Context::discardFramebuffer(unsigned int, int, unsigned int const*)
gl::Context::dispatchCompute(unsigned int, unsigned int, unsigned int)
gl::Context::dispatchComputeIndirect(long)
gl::Context::drawArrays(gl::PrimitiveMode, int, int)
gl::Context::drawArraysIndirect(gl::PrimitiveMode, void const*)
gl::Context::drawArraysInstanced(gl::PrimitiveMode, int, int, int)
gl::Context::drawBuffers(int, unsigned int const*)
gl::Context::drawElements(gl::PrimitiveMode, int, unsigned int, void const*)
gl::Context::drawElementsIndirect(gl::PrimitiveMode, unsigned int, void const*)
gl::Context::drawElementsInstanced(gl::PrimitiveMode, int, unsigned int, void const*, int)
gl::Context::drawRangeElements(gl::PrimitiveMode, unsigned int, unsigned int, int, unsigned int, void const*)
gl::Context::drawTexf(float, float, float, float, float)
gl::Context::drawTexfv(float const*)
gl::Context::drawTexi(int, int, int, int, int)
gl::Context::drawTexiv(int const*)
gl::Context::drawTexs(short, short, short, short, short)
gl::Context::drawTexsv(short const*)
gl::Context::drawTexx(int, int, int, int, int)
gl::Context::drawTexxv(int const*)
gl::Context::eGLImageTargetRenderbufferStorage(unsigned int, void*)
gl::Context::eGLImageTargetTexture2D(gl::TextureType, void*)
gl::Context::enable(unsigned int)
gl::Context::enableClientState(gl::ClientVertexArrayType)
gl::Context::enableVertexAttribArray(unsigned int)
gl::Context::endQuery(gl::QueryType)
gl::Context::endTransformFeedback()
gl::Context::fenceSync(unsigned int, unsigned int)
gl::Context::finish()
gl::Context::finishFenceNV(unsigned int)
gl::Context::flush()
gl::Context::flushMappedBufferRange(gl::BufferBinding, long, long)
gl::Context::fogf(unsigned int, float)
gl::Context::fogfv(unsigned int, float const*)
gl::Context::fogx(unsigned int, int)
gl::Context::fogxv(unsigned int, int const*)
gl::Context::framebufferParameteri(unsigned int, unsigned int, int)
gl::Context::framebufferRenderbuffer(unsigned int, unsigned int, unsigned int, unsigned int)
gl::Context::framebufferTexture(unsigned int, unsigned int, unsigned int, int)
gl::Context::framebufferTexture2D(unsigned int, unsigned int, gl::TextureTarget, unsigned int, int)
gl::Context::framebufferTextureLayer(unsigned int, unsigned int, unsigned int, int, int)
gl::Context::framebufferTextureMultiviewLayered(unsigned int, unsigned int, unsigned int, int, int, int)
gl::Context::framebufferTextureMultiviewSideBySide(unsigned int, unsigned int, unsigned int, int, int, int const*)
gl::Context::frontFace(unsigned int)
gl::Context::frustumf(float, float, float, float, float, float)
gl::Context::frustumx(int, int, int, int, int, int)
gl::Context::genBuffers(int, unsigned int*)
gl::Context::genFencesNV(int, unsigned int*)
gl::Context::genFramebuffers(int, unsigned int*)
gl::Context::genPaths(int)
gl::Context::genProgramPipelines(int, unsigned int*)
gl::Context::genQueries(int, unsigned int*)
gl::Context::genRenderbuffers(int, unsigned int*)
gl::Context::genSamplers(int, unsigned int*)
gl::Context::genTextures(int, unsigned int*)
gl::Context::genTransformFeedbacks(int, unsigned int*)
gl::Context::genVertexArrays(int, unsigned int*)
gl::Context::generateMipmap(gl::TextureType)
gl::Context::getActiveAttrib(unsigned int, unsigned int, int, int*, int*, unsigned int*, char*)
gl::Context::getActiveUniform(unsigned int, unsigned int, int, int*, int*, unsigned int*, char*)
gl::Context::getActiveUniformBlockName(unsigned int, unsigned int, int, int*, char*)
gl::Context::getActiveUniformBlockiv(unsigned int, unsigned int, unsigned int, int*)
gl::Context::getActiveUniformBlockivRobust(unsigned int, unsigned int, unsigned int, int, int*, int*)
gl::Context::getActiveUniformsiv(unsigned int, int, unsigned int const*, unsigned int, int*)
gl::Context::getAttachedShaders(unsigned int, int, int*, unsigned int*)
gl::Context::getAttribLocation(unsigned int, char const*)
gl::Context::getBooleani_v(unsigned int, unsigned int, unsigned char*)
gl::Context::getBooleani_vRobust(unsigned int, unsigned int, int, int*, unsigned char*)
gl::Context::getBooleanv(unsigned int, unsigned char*)
gl::Context::getBooleanvImpl(unsigned int, unsigned char*)
gl::Context::getBooleanvRobust(unsigned int, int, int*, unsigned char*)
gl::Context::getBuffer(unsigned int) const
gl::Context::getBufferParameteri64v(gl::BufferBinding, unsigned int, long*)
gl::Context::getBufferParameteri64vRobust(gl::BufferBinding, unsigned int, int, int*, long*)
gl::Context::getBufferParameteriv(gl::BufferBinding, unsigned int, int*)
gl::Context::getBufferParameterivRobust(gl::BufferBinding, unsigned int, int, int*, int*)
gl::Context::getBufferPointerv(gl::BufferBinding, unsigned int, void**)
gl::Context::getBufferPointervRobust(gl::BufferBinding, unsigned int, int, int*, void**)
gl::Context::getClientType() const
gl::Context::getClipPlanef(unsigned int, float*)
gl::Context::getClipPlanex(unsigned int, int*)
gl::Context::getCompiler() const
gl::Context::getConfig() const
gl::Context::getConvertedRenderbufferFormat(unsigned int) const
gl::Context::getDebugMessageLog(unsigned int, int, unsigned int*, unsigned int*, unsigned int*, unsigned int*, int*, char*)
gl::Context::getError()
gl::Context::getExtensionStringCount() const
gl::Context::getFenceNV(unsigned int)
gl::Context::getFenceivNV(unsigned int, unsigned int, int*)
gl::Context::getFixedv(unsigned int, int*)
gl::Context::getFloatv(unsigned int, float*)
gl::Context::getFloatvImpl(unsigned int, float*)
gl::Context::getFloatvRobust(unsigned int, int, int*, float*)
gl::Context::getFragDataIndex(unsigned int, char const*)
gl::Context::getFragDataLocation(unsigned int, char const*)
gl::Context::getFramebuffer(unsigned int) const
gl::Context::getFramebufferAttachmentParameteriv(unsigned int, unsigned int, unsigned int, int*)
gl::Context::getFramebufferAttachmentParameterivRobust(unsigned int, unsigned int, unsigned int, int, int*, int*)
gl::Context::getFramebufferParameteriv(unsigned int, unsigned int, int*)
gl::Context::getFramebufferParameterivRobust(unsigned int, unsigned int, int, int*, int*)
gl::Context::getGraphicsResetStatus()
gl::Context::getIndexedQueryParameterInfo(unsigned int, unsigned int*, unsigned int*)
gl::Context::getInteger64i_v(unsigned int, unsigned int, long*)
gl::Context::getInteger64i_vRobust(unsigned int, unsigned int, int, int*, long*)
gl::Context::getInteger64v(unsigned int, long*)
gl::Context::getInteger64vRobust(unsigned int, int, int*, long*)
gl::Context::getIntegeri_v(unsigned int, unsigned int, int*)
gl::Context::getIntegeri_vRobust(unsigned int, unsigned int, int, int*, int*)
gl::Context::getIntegerv(unsigned int, int*)
gl::Context::getIntegervImpl(unsigned int, int*)
gl::Context::getIntegervRobust(unsigned int, int, int*, int*)
gl::Context::getInternalformativ(unsigned int, unsigned int, unsigned int, int, int*)
gl::Context::getInternalformativRobust(unsigned int, unsigned int, unsigned int, int, int*, int*)
gl::Context::getLabel() const
gl::Context::getLabeledObject(unsigned int, unsigned int) const
gl::Context::getLightfv(unsigned int, gl::LightParameter, float*)
gl::Context::getLightxv(unsigned int, gl::LightParameter, int*)
gl::Context::getMaterialfv(unsigned int, gl::MaterialParameter, float*)
gl::Context::getMaterialxv(unsigned int, gl::MaterialParameter, int*)
gl::Context::getMultisamplefv(unsigned int, unsigned int, float*)
gl::Context::getMultisamplefvRobust(unsigned int, unsigned int, int, int*, float*)
gl::Context::getObjectLabel(unsigned int, unsigned int, int, int*, char*) const
gl::Context::getObjectPtrLabel(void const*, int, int*, char*) const
gl::Context::getPathParameterfv(unsigned int, unsigned int, float*)
gl::Context::getPathParameteriv(unsigned int, unsigned int, int*)
gl::Context::getPointerv(unsigned int, void**) const
gl::Context::getPointervRobustANGLERobust(unsigned int, int, int*, void**)
gl::Context::getProgramBinary(unsigned int, int, int*, unsigned int*, void*)
gl::Context::getProgramInfoLog(unsigned int, int, int*, char*)
gl::Context::getProgramInterfaceiv(unsigned int, unsigned int, unsigned int, int*)
gl::Context::getProgramInterfaceivRobust(unsigned int, unsigned int, unsigned int, int, int*, int*)
gl::Context::getProgramNoResolveLink(unsigned int) const
gl::Context::getProgramPipelineInfoLog(unsigned int, int, int*, char*)
gl::Context::getProgramPipelineiv(unsigned int, unsigned int, int*)
gl::Context::getProgramResourceIndex(unsigned int, unsigned int, char const*)
gl::Context::getProgramResourceLocation(unsigned int, unsigned int, char const*)
gl::Context::getProgramResourceLocationIndex(unsigned int, unsigned int, char const*)
gl::Context::getProgramResourceName(unsigned int, unsigned int, unsigned int, int, int*, char*)
gl::Context::getProgramResourceiv(unsigned int, unsigned int, unsigned int, int, unsigned int const*, int, int*, int*)
gl::Context::getProgramiv(unsigned int, unsigned int, int*)
gl::Context::getProgramivRobust(unsigned int, unsigned int, int, int*, int*)
gl::Context::getQuery(unsigned int) const
gl::Context::getQuery(unsigned int, bool, gl::QueryType)
gl::Context::getQueryObjecti64v(unsigned int, unsigned int, long*)
gl::Context::getQueryObjecti64vRobust(unsigned int, unsigned int, int, int*, long*)
gl::Context::getQueryObjectiv(unsigned int, unsigned int, int*)
gl::Context::getQueryObjectivRobust(unsigned int, unsigned int, int, int*, int*)
gl::Context::getQueryObjectui64v(unsigned int, unsigned int, unsigned long*)
gl::Context::getQueryObjectui64vRobust(unsigned int, unsigned int, int, int*, unsigned long*)
gl::Context::getQueryObjectuiv(unsigned int, unsigned int, unsigned int*)
gl::Context::getQueryObjectuivRobust(unsigned int, unsigned int, int, int*, unsigned int*)
gl::Context::getQueryParameterInfo(unsigned int, unsigned int*, unsigned int*)
gl::Context::getQueryiv(gl::QueryType, unsigned int, int*)
gl::Context::getQueryivRobust(gl::QueryType, unsigned int, int, int*, int*)
gl::Context::getRenderBuffer() const
gl::Context::getRenderbuffer(unsigned int) const
gl::Context::getRenderbufferParameteriv(unsigned int, unsigned int, int*)
gl::Context::getRenderbufferParameterivRobust(unsigned int, unsigned int, int, int*, int*)
gl::Context::getRequestableExtensionStringCount() const
gl::Context::getSampler(unsigned int) const
gl::Context::getSamplerParameterIivRobust(unsigned int, unsigned int, int, int*, int*)
gl::Context::getSamplerParameterIuivRobust(unsigned int, unsigned int, int, int*, unsigned int*)
gl::Context::getSamplerParameterfv(unsigned int, unsigned int, float*)
gl::Context::getSamplerParameterfvRobust(unsigned int, unsigned int, int, int*, float*)
gl::Context::getSamplerParameteriv(unsigned int, unsigned int, int*)
gl::Context::getSamplerParameterivRobust(unsigned int, unsigned int, int, int*, int*)
gl::Context::getScratchBuffer(unsigned long, angle::MemoryBuffer**) const
gl::Context::getShader(unsigned int) const
gl::Context::getShaderInfoLog(unsigned int, int, int*, char*)
gl::Context::getShaderPrecisionFormat(unsigned int, unsigned int, int*, int*)
gl::Context::getShaderSource(unsigned int, int, int*, char*)
gl::Context::getShaderiv(unsigned int, unsigned int, int*)
gl::Context::getShaderivRobust(unsigned int, unsigned int, int, int*, int*)
gl::Context::getString(unsigned int) const
gl::Context::getStringi(unsigned int, unsigned int) const
gl::Context::getSync(__GLsync*) const
gl::Context::getSynciv(__GLsync*, unsigned int, int, int*, int*)
gl::Context::getTargetTexture(gl::TextureType) const
gl::Context::getTexEnvfv(gl::TextureEnvTarget, gl::TextureEnvParameter, float*)
gl::Context::getTexEnviv(gl::TextureEnvTarget, gl::TextureEnvParameter, int*)
gl::Context::getTexEnvxv(gl::TextureEnvTarget, gl::TextureEnvParameter, int*)
gl::Context::getTexGenfv(unsigned int, unsigned int, float*)
gl::Context::getTexGeniv(unsigned int, unsigned int, int*)
gl::Context::getTexGenxv(unsigned int, unsigned int, int*)
gl::Context::getTexLevelParameterfv(gl::TextureTarget, int, unsigned int, float*)
gl::Context::getTexLevelParameterfvRobust(gl::TextureTarget, int, unsigned int, int, int*, float*)
gl::Context::getTexLevelParameteriv(gl::TextureTarget, int, unsigned int, int*)
gl::Context::getTexLevelParameterivRobust(gl::TextureTarget, int, unsigned int, int, int*, int*)
gl::Context::getTexParameterIivRobust(gl::TextureType, unsigned int, int, int*, int*)
gl::Context::getTexParameterIuivRobust(gl::TextureType, unsigned int, int, int*, unsigned int*)
gl::Context::getTexParameterfv(gl::TextureType, unsigned int, float*)
gl::Context::getTexParameterfvRobust(gl::TextureType, unsigned int, int, int*, float*)
gl::Context::getTexParameteriv(gl::TextureType, unsigned int, int*)
gl::Context::getTexParameterivRobust(gl::TextureType, unsigned int, int, int*, int*)
gl::Context::getTexParameterxv(gl::TextureType, unsigned int, int*)
gl::Context::getTransformFeedback(unsigned int) const
gl::Context::getTransformFeedbackVarying(unsigned int, unsigned int, int, int*, int*, unsigned int*, char*)
gl::Context::getTranslatedShaderSource(unsigned int, int, int*, char*)
gl::Context::getUniformBlockIndex(unsigned int, char const*)
gl::Context::getUniformIndices(unsigned int, int, char const* const*, unsigned int*)
gl::Context::getUniformLocation(unsigned int, char const*)
gl::Context::getUniformfv(unsigned int, int, float*)
gl::Context::getUniformfvRobust(unsigned int, int, int, int*, float*)
gl::Context::getUniformiv(unsigned int, int, int*)
gl::Context::getUniformivRobust(unsigned int, int, int, int*, int*)
gl::Context::getUniformuiv(unsigned int, int, unsigned int*)
gl::Context::getUniformuivRobust(unsigned int, int, int, int*, unsigned int*)
gl::Context::getVertexArray(unsigned int) const
gl::Context::getVertexAttribIiv(unsigned int, unsigned int, int*)
gl::Context::getVertexAttribIivRobust(unsigned int, unsigned int, int, int*, int*)
gl::Context::getVertexAttribIuiv(unsigned int, unsigned int, unsigned int*)
gl::Context::getVertexAttribIuivRobust(unsigned int, unsigned int, int, int*, unsigned int*)
gl::Context::getVertexAttribPointerv(unsigned int, unsigned int, void**)
gl::Context::getVertexAttribPointervRobust(unsigned int, unsigned int, int, int*, void**)
gl::Context::getVertexAttribfv(unsigned int, unsigned int, float*)
gl::Context::getVertexAttribfvRobust(unsigned int, unsigned int, int, int*, float*)
gl::Context::getVertexAttribiv(unsigned int, unsigned int, int*)
gl::Context::getVertexAttribivRobust(unsigned int, unsigned int, int, int*, int*)
gl::Context::getWorkarounds() const
gl::Context::getZeroFilledBuffer(unsigned long, angle::MemoryBuffer**) const
gl::Context::getnUniformfv(unsigned int, int, int, float*)
gl::Context::getnUniformfvRobust(unsigned int, int, int, int*, float*)
gl::Context::getnUniformiv(unsigned int, int, int, int*)
gl::Context::getnUniformivRobust(unsigned int, int, int, int*, int*)
gl::Context::getnUniformuivRobust(unsigned int, int, int, int*, unsigned int*)
gl::Context::handleError(gl::Error const&) const
gl::Context::handleError(unsigned int, char const*, char const*, char const*, unsigned int)
gl::Context::hasActiveTransformFeedback(unsigned int) const
gl::Context::hint(unsigned int, unsigned int)
gl::Context::initCaps()
gl::Context::initExtensionStrings()
gl::Context::initExtensionStrings()::$_0::operator()(std::__1::vector<char const*, std::__1::allocator<char const*> > const&) const
gl::Context::initRendererString()
gl::Context::initVersionStrings()
gl::Context::initialize()
gl::Context::insertEventMarker(int, char const*)
gl::Context::invalidateFramebuffer(unsigned int, int, unsigned int const*)
gl::Context::invalidateSubFramebuffer(unsigned int, int, unsigned int const*, int, int, int, int)
gl::Context::isBuffer(unsigned int)
gl::Context::isCurrentTransformFeedback(gl::TransformFeedback const*) const
gl::Context::isEnabled(unsigned int)
gl::Context::isExtensionRequestable(char const*)
gl::Context::isFenceNV(unsigned int)
gl::Context::isFramebuffer(unsigned int)
gl::Context::isFramebufferGenerated(unsigned int) const
gl::Context::isPath(unsigned int) const
gl::Context::isPathGenerated(unsigned int) const
gl::Context::isProgram(unsigned int)
gl::Context::isProgramPipeline(unsigned int)
gl::Context::isProgramPipelineGenerated(unsigned int) const
gl::Context::isQuery(unsigned int)
gl::Context::isRenderbuffer(unsigned int)
gl::Context::isRenderbufferGenerated(unsigned int) const
gl::Context::isResetNotificationEnabled()
gl::Context::isSampler(unsigned int) const
gl::Context::isShader(unsigned int)
gl::Context::isSync(__GLsync*)
gl::Context::isTexture(unsigned int)
gl::Context::isTransformFeedback(unsigned int)
gl::Context::isTransformFeedbackGenerated(unsigned int)
gl::Context::isVertexArray(unsigned int)
gl::Context::isVertexArrayGenerated(unsigned int)
gl::Context::lightModelf(unsigned int, float)
gl::Context::lightModelfv(unsigned int, float const*)
gl::Context::lightModelx(unsigned int, int)
gl::Context::lightModelxv(unsigned int, int const*)
gl::Context::lightf(unsigned int, gl::LightParameter, float)
gl::Context::lightfv(unsigned int, gl::LightParameter, float const*)
gl::Context::lightx(unsigned int, gl::LightParameter, int)
gl::Context::lightxv(unsigned int, gl::LightParameter, int const*)
gl::Context::lineWidth(float)
gl::Context::lineWidthx(int)
gl::Context::linkProgram(unsigned int)
gl::Context::loadIdentity()
gl::Context::loadMatrixf(float const*)
gl::Context::loadMatrixx(int const*)
gl::Context::loadPaletteFromModelViewMatrix()
gl::Context::logicOp(gl::LogicalOperation)
gl::Context::makeCurrent(egl::Display*, egl::Surface*)
gl::Context::mapBuffer(gl::BufferBinding, unsigned int)
gl::Context::mapBufferRange(gl::BufferBinding, long, long, unsigned int)
gl::Context::markContextLost()
gl::Context::materialf(unsigned int, gl::MaterialParameter, float)
gl::Context::materialfv(unsigned int, gl::MaterialParameter, float const*)
gl::Context::materialx(unsigned int, gl::MaterialParameter, int)
gl::Context::materialxv(unsigned int, gl::MaterialParameter, int const*)
gl::Context::matrixIndexPointer(int, unsigned int, int, void const*)
gl::Context::matrixLoadIdentity(unsigned int)
gl::Context::matrixLoadf(unsigned int, float const*)
gl::Context::matrixMode(gl::MatrixType)
gl::Context::maxShaderCompilerThreads(unsigned int)
gl::Context::memoryBarrier(unsigned int)
gl::Context::memoryBarrierByRegion(unsigned int)
gl::Context::multMatrixf(float const*)
gl::Context::multMatrixx(int const*)
gl::Context::multiTexCoord4f(unsigned int, float, float, float, float)
gl::Context::multiTexCoord4x(unsigned int, int, int, int, int)
gl::Context::normal3f(float, float, float)
gl::Context::normal3x(int, int, int)
gl::Context::normalPointer(unsigned int, int, void const*)
gl::Context::objectLabel(unsigned int, unsigned int, int, char const*)
gl::Context::objectPtrLabel(void const*, int, char const*)
gl::Context::onDestroy(egl::Display const*)
gl::Context::onSubjectStateChange(gl::Context const*, unsigned long, angle::SubjectMessage)
gl::Context::orthof(float, float, float, float, float, float)
gl::Context::orthox(int, int, int, int, int, int)
gl::Context::pathCommands(unsigned int, int, unsigned char const*, int, unsigned int, void const*)
gl::Context::pathParameterf(unsigned int, unsigned int, float)
gl::Context::pathParameteri(unsigned int, unsigned int, int)
gl::Context::pathStencilFunc(unsigned int, int, unsigned int)
gl::Context::pauseTransformFeedback()
gl::Context::pixelStorei(unsigned int, int)
gl::Context::pointParameterf(gl::PointParameter, float)
gl::Context::pointParameterfv(gl::PointParameter, float const*)
gl::Context::pointParameterx(gl::PointParameter, int)
gl::Context::pointParameterxv(gl::PointParameter, int const*)
gl::Context::pointSize(float)
gl::Context::pointSizePointer(unsigned int, int, void const*)
gl::Context::pointSizex(int)
gl::Context::polygonOffset(float, float)
gl::Context::polygonOffsetx(int, int)
gl::Context::popDebugGroup()
gl::Context::popGroupMarker()
gl::Context::popMatrix()
gl::Context::prepareForClear(unsigned int)
gl::Context::prepareForClearBuffer(unsigned int, int)
gl::Context::prepareForDispatch()
gl::Context::prepareForDraw(gl::PrimitiveMode)
gl::Context::programBinary(unsigned int, unsigned int, void const*, int)
gl::Context::programParameteri(unsigned int, unsigned int, int)
gl::Context::programPathFragmentInputGen(unsigned int, int, unsigned int, int, float const*)
gl::Context::programUniform1f(unsigned int, int, float)
gl::Context::programUniform1fv(unsigned int, int, int, float const*)
gl::Context::programUniform1i(unsigned int, int, int)
gl::Context::programUniform1iv(unsigned int, int, int, int const*)
gl::Context::programUniform1ui(unsigned int, int, unsigned int)
gl::Context::programUniform1uiv(unsigned int, int, int, unsigned int const*)
gl::Context::programUniform2f(unsigned int, int, float, float)
gl::Context::programUniform2fv(unsigned int, int, int, float const*)
gl::Context::programUniform2i(unsigned int, int, int, int)
gl::Context::programUniform2iv(unsigned int, int, int, int const*)
gl::Context::programUniform2ui(unsigned int, int, unsigned int, unsigned int)
gl::Context::programUniform2uiv(unsigned int, int, int, unsigned int const*)
gl::Context::programUniform3f(unsigned int, int, float, float, float)
gl::Context::programUniform3fv(unsigned int, int, int, float const*)
gl::Context::programUniform3i(unsigned int, int, int, int, int)
gl::Context::programUniform3iv(unsigned int, int, int, int const*)
gl::Context::programUniform3ui(unsigned int, int, unsigned int, unsigned int, unsigned int)
gl::Context::programUniform3uiv(unsigned int, int, int, unsigned int const*)
gl::Context::programUniform4f(unsigned int, int, float, float, float, float)
gl::Context::programUniform4fv(unsigned int, int, int, float const*)
gl::Context::programUniform4i(unsigned int, int, int, int, int, int)
gl::Context::programUniform4iv(unsigned int, int, int, int const*)
gl::Context::programUniform4ui(unsigned int, int, unsigned int, unsigned int, unsigned int, unsigned int)
gl::Context::programUniform4uiv(unsigned int, int, int, unsigned int const*)
gl::Context::programUniformMatrix2fv(unsigned int, int, int, unsigned char, float const*)
gl::Context::programUniformMatrix2x3fv(unsigned int, int, int, unsigned char, float const*)
gl::Context::programUniformMatrix2x4fv(unsigned int, int, int, unsigned char, float const*)
gl::Context::programUniformMatrix3fv(unsigned int, int, int, unsigned char, float const*)
gl::Context::programUniformMatrix3x2fv(unsigned int, int, int, unsigned char, float const*)
gl::Context::programUniformMatrix3x4fv(unsigned int, int, int, unsigned char, float const*)
gl::Context::programUniformMatrix4fv(unsigned int, int, int, unsigned char, float const*)
gl::Context::programUniformMatrix4x2fv(unsigned int, int, int, unsigned char, float const*)
gl::Context::programUniformMatrix4x3fv(unsigned int, int, int, unsigned char, float const*)
gl::Context::pushDebugGroup(unsigned int, unsigned int, int, char const*)
gl::Context::pushGroupMarker(int, char const*)
gl::Context::pushMatrix()
gl::Context::queryCounter(unsigned int, gl::QueryType)
gl::Context::queryMatrixx(int*, int*)
gl::Context::readBuffer(unsigned int)
gl::Context::readPixels(int, int, int, int, unsigned int, unsigned int, void*)
gl::Context::readPixelsRobust(int, int, int, int, unsigned int, unsigned int, int, int*, int*, int*, void*)
gl::Context::readnPixels(int, int, int, int, unsigned int, unsigned int, int, void*)
gl::Context::readnPixelsRobust(int, int, int, int, unsigned int, unsigned int, int, int*, int*, int*, void*)
gl::Context::releaseShaderCompiler()
gl::Context::releaseSurface(egl::Display const*)
gl::Context::renderbufferStorage(unsigned int, unsigned int, int, int)
gl::Context::renderbufferStorageMultisample(unsigned int, int, unsigned int, int, int)
gl::Context::requestExtension(char const*)
gl::Context::resumeTransformFeedback()
gl::Context::rotatef(float, float, float, float)
gl::Context::rotatex(int, int, int, int)
gl::Context::sampleCoverage(float, unsigned char)
gl::Context::sampleCoveragex(int, unsigned char)
gl::Context::sampleMaski(unsigned int, unsigned int)
gl::Context::samplerParameterIivRobust(unsigned int, unsigned int, int, int const*)
gl::Context::samplerParameterIuivRobust(unsigned int, unsigned int, int, unsigned int const*)
gl::Context::samplerParameterf(unsigned int, unsigned int, float)
gl::Context::samplerParameterfv(unsigned int, unsigned int, float const*)
gl::Context::samplerParameterfvRobust(unsigned int, unsigned int, int, float const*)
gl::Context::samplerParameteri(unsigned int, unsigned int, int)
gl::Context::samplerParameteriv(unsigned int, unsigned int, int const*)
gl::Context::samplerParameterivRobust(unsigned int, unsigned int, int, int const*)
gl::Context::scalef(float, float, float)
gl::Context::scalex(int, int, int)
gl::Context::scissor(int, int, int, int)
gl::Context::setFenceNV(unsigned int, unsigned int)
gl::Context::setLabel(void*)
gl::Context::shadeModel(gl::ShadingModel)
gl::Context::shaderBinary(int, unsigned int const*, unsigned int, void const*, int)
gl::Context::shaderSource(unsigned int, int, char const* const*, int const*)
gl::Context::stencilFillPath(unsigned int, unsigned int, unsigned int)
gl::Context::stencilFillPathInstanced(int, unsigned int, void const*, unsigned int, unsigned int, unsigned int, unsigned int, float const*)
gl::Context::stencilFunc(unsigned int, int, unsigned int)
gl::Context::stencilFuncSeparate(unsigned int, unsigned int, int, unsigned int)
gl::Context::stencilMask(unsigned int)
gl::Context::stencilMaskSeparate(unsigned int, unsigned int)
gl::Context::stencilOp(unsigned int, unsigned int, unsigned int)
gl::Context::stencilOpSeparate(unsigned int, unsigned int, unsigned int, unsigned int)
gl::Context::stencilStrokePath(unsigned int, int, unsigned int)
gl::Context::stencilStrokePathInstanced(int, unsigned int, void const*, unsigned int, int, unsigned int, unsigned int, float const*)
gl::Context::stencilThenCoverFillPath(unsigned int, unsigned int, unsigned int, unsigned int)
gl::Context::stencilThenCoverFillPathInstanced(int, unsigned int, void const*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, float const*)
gl::Context::stencilThenCoverStrokePath(unsigned int, int, unsigned int, unsigned int)
gl::Context::stencilThenCoverStrokePathInstanced(int, unsigned int, void const*, unsigned int, int, unsigned int, unsigned int, unsigned int, float const*)
gl::Context::syncStateForBlit()
gl::Context::syncStateForReadPixels()
gl::Context::syncStateForTexImage()
gl::Context::testFenceNV(unsigned int)
gl::Context::texCoordPointer(int, unsigned int, int, void const*)
gl::Context::texEnvf(gl::TextureEnvTarget, gl::TextureEnvParameter, float)
gl::Context::texEnvfv(gl::TextureEnvTarget, gl::TextureEnvParameter, float const*)
gl::Context::texEnvi(gl::TextureEnvTarget, gl::TextureEnvParameter, int)
gl::Context::texEnviv(gl::TextureEnvTarget, gl::TextureEnvParameter, int const*)
gl::Context::texEnvx(gl::TextureEnvTarget, gl::TextureEnvParameter, int)
gl::Context::texEnvxv(gl::TextureEnvTarget, gl::TextureEnvParameter, int const*)
gl::Context::texGenf(unsigned int, unsigned int, float)
gl::Context::texGenfv(unsigned int, unsigned int, float const*)
gl::Context::texGeni(unsigned int, unsigned int, int)
gl::Context::texGeniv(unsigned int, unsigned int, int const*)
gl::Context::texGenx(unsigned int, unsigned int, int)
gl::Context::texGenxv(unsigned int, unsigned int, int const*)
gl::Context::texImage2D(gl::TextureTarget, int, int, int, int, int, unsigned int, unsigned int, void const*)
gl::Context::texImage2DRobust(gl::TextureTarget, int, int, int, int, int, unsigned int, unsigned int, int, void const*)
gl::Context::texImage3D(gl::TextureType, int, int, int, int, int, int, unsigned int, unsigned int, void const*)
gl::Context::texImage3DRobust(gl::TextureType, int, int, int, int, int, int, unsigned int, unsigned int, int, void const*)
gl::Context::texParameterIivRobust(gl::TextureType, unsigned int, int, int const*)
gl::Context::texParameterIuivRobust(gl::TextureType, unsigned int, int, unsigned int const*)
gl::Context::texParameterf(gl::TextureType, unsigned int, float)
gl::Context::texParameterfv(gl::TextureType, unsigned int, float const*)
gl::Context::texParameterfvRobust(gl::TextureType, unsigned int, int, float const*)
gl::Context::texParameteri(gl::TextureType, unsigned int, int)
gl::Context::texParameteriv(gl::TextureType, unsigned int, int const*)
gl::Context::texParameterivRobust(gl::TextureType, unsigned int, int, int const*)
gl::Context::texParameterx(gl::TextureType, unsigned int, int)
gl::Context::texParameterxv(gl::TextureType, unsigned int, int const*)
gl::Context::texStorage1D(unsigned int, int, unsigned int, int)
gl::Context::texStorage2D(gl::TextureType, int, unsigned int, int, int)
gl::Context::texStorage2DMultisample(gl::TextureType, int, unsigned int, int, int, unsigned char)
gl::Context::texStorage3D(gl::TextureType, int, unsigned int, int, int, int)
gl::Context::texStorage3DMultisample(gl::TextureType, int, unsigned int, int, int, int, unsigned char)
gl::Context::texSubImage2D(gl::TextureTarget, int, int, int, int, int, unsigned int, unsigned int, void const*)
gl::Context::texSubImage2DRobust(gl::TextureTarget, int, int, int, int, int, unsigned int, unsigned int, int, void const*)
gl::Context::texSubImage3D(gl::TextureType, int, int, int, int, int, int, int, unsigned int, unsigned int, void const*)
gl::Context::texSubImage3DRobust(gl::TextureType, int, int, int, int, int, int, int, unsigned int, unsigned int, int, void const*)
gl::Context::transformFeedbackVaryings(unsigned int, int, char const* const*, unsigned int)
gl::Context::translatef(float, float, float)
gl::Context::translatex(int, int, int)
gl::Context::uniform1f(int, float)
gl::Context::uniform1fv(int, int, float const*)
gl::Context::uniform1i(int, int)
gl::Context::uniform1iv(int, int, int const*)
gl::Context::uniform1ui(int, unsigned int)
gl::Context::uniform1uiv(int, int, unsigned int const*)
gl::Context::uniform2f(int, float, float)
gl::Context::uniform2fv(int, int, float const*)
gl::Context::uniform2i(int, int, int)
gl::Context::uniform2iv(int, int, int const*)
gl::Context::uniform2ui(int, unsigned int, unsigned int)
gl::Context::uniform2uiv(int, int, unsigned int const*)
gl::Context::uniform3f(int, float, float, float)
gl::Context::uniform3fv(int, int, float const*)
gl::Context::uniform3i(int, int, int, int)
gl::Context::uniform3iv(int, int, int const*)
gl::Context::uniform3ui(int, unsigned int, unsigned int, unsigned int)
gl::Context::uniform3uiv(int, int, unsigned int const*)
gl::Context::uniform4f(int, float, float, float, float)
gl::Context::uniform4fv(int, int, float const*)
gl::Context::uniform4i(int, int, int, int, int)
gl::Context::uniform4iv(int, int, int const*)
gl::Context::uniform4ui(int, unsigned int, unsigned int, unsigned int, unsigned int)
gl::Context::uniform4uiv(int, int, unsigned int const*)
gl::Context::uniformBlockBinding(unsigned int, unsigned int, unsigned int)
gl::Context::uniformMatrix2fv(int, int, unsigned char, float const*)
gl::Context::uniformMatrix2x3fv(int, int, unsigned char, float const*)
gl::Context::uniformMatrix2x4fv(int, int, unsigned char, float const*)
gl::Context::uniformMatrix3fv(int, int, unsigned char, float const*)
gl::Context::uniformMatrix3x2fv(int, int, unsigned char, float const*)
gl::Context::uniformMatrix3x4fv(int, int, unsigned char, float const*)
gl::Context::uniformMatrix4fv(int, int, unsigned char, float const*)
gl::Context::uniformMatrix4x2fv(int, int, unsigned char, float const*)
gl::Context::uniformMatrix4x3fv(int, int, unsigned char, float const*)
gl::Context::unmapBuffer(gl::BufferBinding)
gl::Context::updateCaps()
gl::Context::useProgram(unsigned int)
gl::Context::useProgramStages(unsigned int, unsigned int, unsigned int)
gl::Context::usingDisplayTextureShareGroup() const
gl::Context::validateProgram(unsigned int)
gl::Context::validateProgramPipeline(unsigned int)
gl::Context::validationError(unsigned int, char const*)
gl::Context::vertexArrayIndex(gl::ClientVertexArrayType) const
gl::Context::vertexAttrib1f(unsigned int, float)
gl::Context::vertexAttrib1fv(unsigned int, float const*)
gl::Context::vertexAttrib2f(unsigned int, float, float)
gl::Context::vertexAttrib2fv(unsigned int, float const*)
gl::Context::vertexAttrib3f(unsigned int, float, float, float)
gl::Context::vertexAttrib3fv(unsigned int, float const*)
gl::Context::vertexAttrib4f(unsigned int, float, float, float, float)
gl::Context::vertexAttrib4fv(unsigned int, float const*)
gl::Context::vertexAttribBinding(unsigned int, unsigned int)
gl::Context::vertexAttribDivisor(unsigned int, unsigned int)
gl::Context::vertexAttribFormat(unsigned int, int, unsigned int, unsigned char, unsigned int)
gl::Context::vertexAttribI4i(unsigned int, int, int, int, int)
gl::Context::vertexAttribI4iv(unsigned int, int const*)
gl::Context::vertexAttribI4ui(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
gl::Context::vertexAttribI4uiv(unsigned int, unsigned int const*)
gl::Context::vertexAttribIFormat(unsigned int, int, unsigned int, unsigned int)
gl::Context::vertexAttribIPointer(unsigned int, int, unsigned int, int, void const*)
gl::Context::vertexAttribPointer(unsigned int, int, unsigned int, unsigned char, int, void const*)
gl::Context::vertexBindingDivisor(unsigned int, unsigned int)
gl::Context::vertexPointer(int, unsigned int, int, void const*)
gl::Context::viewport(int, int, int, int)
gl::Context::waitSync(__GLsync*, unsigned int, unsigned long)
gl::Context::weightPointer(int, unsigned int, int, void const*)
gl::Context::~Context()
gl::ContextState::ContextState(unsigned long, gl::ContextState const*, gl::TextureManager*, gl::Version const&, gl::State*, gl::Caps const&, gl::TextureCapsMap const&, gl::Extensions const&, gl::Limitations const&)
gl::ContextState::isWebGL() const
gl::ContextState::isWebGL1() const
gl::ContextState::~ContextState()
gl::ConvertTextureEnvFromFixed(gl::TextureEnvParameter, int const*, float*)
gl::ConvertTextureEnvFromInt(gl::TextureEnvParameter, int const*, float*)
gl::ConvertTextureEnvToFixed(gl::TextureEnvParameter, float const*, int*)
gl::ConvertTextureEnvToInt(gl::TextureEnvParameter, float const*, int*)
gl::CopyBufferSubData(unsigned int, unsigned int, long, long, long)
gl::CopyBufferSubDataContextANGLE(void*, unsigned int, unsigned int, long, long, long)
gl::CopySubTexture3DANGLE(unsigned int, int, unsigned int, unsigned int, int, int, int, int, int, int, int, int, int, int, unsigned char, unsigned char, unsigned char)
gl::CopySubTexture3DANGLEContextANGLE(void*, unsigned int, int, unsigned int, unsigned int, int, int, int, int, int, int, int, int, int, int, unsigned char, unsigned char, unsigned char)
gl::CopySubTextureCHROMIUM(unsigned int, int, unsigned int, unsigned int, int, int, int, int, int, int, int, unsigned char, unsigned char, unsigned char)
gl::CopySubTextureCHROMIUMContextANGLE(void*, unsigned int, int, unsigned int, unsigned int, int, int, int, int, int, int, int, unsigned char, unsigned char, unsigned char)
gl::CopyTexImage2D(unsigned int, int, unsigned int, int, int, int, int, int)
gl::CopyTexImage2DContextANGLE(void*, unsigned int, int, unsigned int, int, int, int, int, int)
gl::CopyTexSubImage2D(unsigned int, int, int, int, int, int, int, int)
gl::CopyTexSubImage2DContextANGLE(void*, unsigned int, int, int, int, int, int, int, int)
gl::CopyTexSubImage3D(unsigned int, int, int, int, int, int, int, int, int)
gl::CopyTexSubImage3DContextANGLE(void*, unsigned int, int, int, int, int, int, int, int, int)
gl::CopyTexture3DANGLE(unsigned int, int, unsigned int, unsigned int, int, int, unsigned int, unsigned char, unsigned char, unsigned char)
gl::CopyTexture3DANGLEContextANGLE(void*, unsigned int, int, unsigned int, unsigned int, int, int, unsigned int, unsigned char, unsigned char, unsigned char)
gl::CopyTextureCHROMIUM(unsigned int, int, unsigned int, unsigned int, int, int, unsigned int, unsigned char, unsigned char, unsigned char)
gl::CopyTextureCHROMIUMContextANGLE(void*, unsigned int, int, unsigned int, unsigned int, int, int, unsigned int, unsigned char, unsigned char, unsigned char)
gl::CoverFillPathCHROMIUM(unsigned int, unsigned int)
gl::CoverFillPathCHROMIUMContextANGLE(void*, unsigned int, unsigned int)
gl::CoverFillPathInstancedCHROMIUM(int, unsigned int, void const*, unsigned int, unsigned int, unsigned int, float const*)
gl::CoverFillPathInstancedCHROMIUMContextANGLE(void*, int, unsigned int, void const*, unsigned int, unsigned int, unsigned int, float const*)
gl::CoverStrokePathCHROMIUM(unsigned int, unsigned int)
gl::CoverStrokePathCHROMIUMContextANGLE(void*, unsigned int, unsigned int)
gl::CoverStrokePathInstancedCHROMIUM(int, unsigned int, void const*, unsigned int, unsigned int, unsigned int, float const*)
gl::CoverStrokePathInstancedCHROMIUMContextANGLE(void*, int, unsigned int, void const*, unsigned int, unsigned int, unsigned int, float const*)
gl::CoverageModulationCHROMIUM(unsigned int)
gl::CoverageModulationCHROMIUMContextANGLE(void*, unsigned int)
gl::CreateProgram()
gl::CreateProgramContextANGLE(void*)
gl::CreateShader(unsigned int)
gl::CreateShaderContextANGLE(void*, unsigned int)
gl::CreateShaderProgramv(unsigned int, int, char const* const*)
gl::CreateShaderProgramvContextANGLE(void*, unsigned int, int, char const* const*)
gl::CubeFaceIndexToTextureTarget(unsigned long)
gl::CubeMapTextureTargetToFaceIndex(gl::TextureTarget)
gl::CullFace(unsigned int)
gl::CullFaceContextANGLE(void*, unsigned int)
gl::CullFaceMode gl::FromGLenum<gl::CullFaceMode>(unsigned int)
gl::CurrentPaletteMatrixOES(unsigned int)
gl::CurrentPaletteMatrixOESContextANGLE(void*, unsigned int)
gl::Debug::Debug(bool)
gl::Debug::getCallback() const
gl::Debug::getGroupStackDepth() const
gl::Debug::getMessageCount() const
gl::Debug::getMessages(unsigned int, int, unsigned int*, unsigned int*, unsigned int*, unsigned int*, int*, char*)
gl::Debug::getNextMessageLength() const
gl::Debug::getUserParam() const
gl::Debug::insertMessage(unsigned int, unsigned int, unsigned int, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
gl::Debug::insertMessage(unsigned int, unsigned int, unsigned int, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&) const
gl::Debug::isOutputEnabled() const
gl::Debug::isOutputSynchronous() const
gl::Debug::popGroup()
gl::Debug::pushDefaultGroup()
gl::Debug::pushGroup(unsigned int, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&)
gl::Debug::setCallback(void (*)(unsigned int, unsigned int, unsigned int, unsigned int, int, char const*, void const*), void const*)
gl::Debug::setMaxLoggedMessages(unsigned int)
gl::Debug::setMessageControl(unsigned int, unsigned int, unsigned int, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >&&, bool)
gl::Debug::setOutputEnabled(bool)
gl::Debug::setOutputSynchronous(bool)
gl::Debug::~Debug()
gl::DebugAnnotator::~DebugAnnotator()
gl::DebugMessageCallbackKHR(void (*)(unsigned int, unsigned int, unsigned int, unsigned int, int, char const*, void const*), void const*)
gl::DebugMessageCallbackKHRContextANGLE(void*, void (*)(unsigned int, unsigned int, unsigned int, unsigned int, int, char const*, void const*), void const*)
gl::DebugMessageControlKHR(unsigned int, unsigned int, unsigned int, int, unsigned int const*, unsigned char)
gl::DebugMessageControlKHRContextANGLE(void*, unsigned int, unsigned int, unsigned int, int, unsigned int const*, unsigned char)
gl::DebugMessageInsertKHR(unsigned int, unsigned int, unsigned int, unsigned int, int, char const*)
gl::DebugMessageInsertKHRContextANGLE(void*, unsigned int, unsigned int, unsigned int, unsigned int, int, char const*)
gl::DeleteBuffers(int, unsigned int const*)
gl::DeleteBuffersContextANGLE(void*, int, unsigned int const*)
gl::DeleteFencesNV(int, unsigned int const*)
gl::DeleteFencesNVContextANGLE(void*, int, unsigned int const*)
gl::DeleteFramebuffers(int, unsigned int const*)
gl::DeleteFramebuffersContextANGLE(void*, int, unsigned int const*)
gl::DeleteFramebuffersOES(int, unsigned int const*)
gl::DeleteFramebuffersOESContextANGLE(void*, int, unsigned int const*)
gl::DeletePathsCHROMIUM(unsigned int, int)
gl::DeletePathsCHROMIUMContextANGLE(void*, unsigned int, int)
gl::DeleteProgram(unsigned int)
gl::DeleteProgramContextANGLE(void*, unsigned int)
gl::DeleteProgramPipelines(int, unsigned int const*)
gl::DeleteProgramPipelinesContextANGLE(void*, int, unsigned int const*)
gl::DeleteQueries(int, unsigned int const*)
gl::DeleteQueriesContextANGLE(void*, int, unsigned int const*)
gl::DeleteQueriesEXT(int, unsigned int const*)
gl::DeleteQueriesEXTContextANGLE(void*, int, unsigned int const*)
gl::DeleteRenderbuffers(int, unsigned int const*)
gl::DeleteRenderbuffersContextANGLE(void*, int, unsigned int const*)
gl::DeleteRenderbuffersOES(int, unsigned int const*)
gl::DeleteRenderbuffersOESContextANGLE(void*, int, unsigned int const*)
gl::DeleteSamplers(int, unsigned int const*)
gl::DeleteSamplersContextANGLE(void*, int, unsigned int const*)
gl::DeleteShader(unsigned int)
gl::DeleteShaderContextANGLE(void*, unsigned int)
gl::DeleteSync(__GLsync*)
gl::DeleteSyncContextANGLE(void*, __GLsync*)
gl::DeleteTextures(int, unsigned int const*)
gl::DeleteTexturesContextANGLE(void*, int, unsigned int const*)
gl::DeleteTransformFeedbacks(int, unsigned int const*)
gl::DeleteTransformFeedbacksContextANGLE(void*, int, unsigned int const*)
gl::DeleteVertexArrays(int, unsigned int const*)
gl::DeleteVertexArraysContextANGLE(void*, int, unsigned int const*)
gl::DeleteVertexArraysOES(int, unsigned int const*)
gl::DeleteVertexArraysOESContextANGLE(void*, int, unsigned int const*)
gl::DepthFunc(unsigned int)
gl::DepthFuncContextANGLE(void*, unsigned int)
gl::DepthMask(unsigned char)
gl::DepthMaskContextANGLE(void*, unsigned char)
gl::DepthRangef(float, float)
gl::DepthRangefContextANGLE(void*, float, float)
gl::DepthRangex(int, int)
gl::DepthRangexContextANGLE(void*, int, int)
gl::DepthStencilState::DepthStencilState()
gl::DetachShader(unsigned int, unsigned int)
gl::DetachShaderContextANGLE(void*, unsigned int, unsigned int)
gl::DetermineASTCTextureSupport(gl::TextureCapsMap const&)::requiredFormats
gl::DetermineBPTCTextureSupport(gl::TextureCapsMap const&)::requiredFormats
gl::DetermineDepthTextureSupport(gl::TextureCapsMap const&)::requiredFormats
gl::DetermineFloatTextureFilteringSupport(gl::TextureCapsMap const&)::requiredFormats
gl::DetermineFloatTextureSupport(gl::TextureCapsMap const&)::requiredFormats
gl::DetermineHalfFloatTextureFilteringSupport(gl::TextureCapsMap const&)::requiredFormats
gl::DetermineHalfFloatTextureSupport(gl::TextureCapsMap const&)::requiredFormats
gl::DetermineS3TCsRGBTextureSupport(gl::TextureCapsMap const&)::requiredFormats
gl::DetermineTextureNorm16Support(gl::TextureCapsMap const&)::requiredRenderFormats
gl::Disable(unsigned int)
gl::DisableClientState(unsigned int)
gl::DisableClientStateContextANGLE(void*, unsigned int)
gl::DisableContextANGLE(void*, unsigned int)
gl::DisableVertexAttribArray(unsigned int)
gl::DisableVertexAttribArrayContextANGLE(void*, unsigned int)
gl::DiscardFramebufferEXT(unsigned int, int, unsigned int const*)
gl::DiscardFramebufferEXTContextANGLE(void*, unsigned int, int, unsigned int const*)
gl::DispatchCompute(unsigned int, unsigned int, unsigned int)
gl::DispatchComputeContextANGLE(void*, unsigned int, unsigned int, unsigned int)
gl::DispatchComputeIndirect(long)
gl::DispatchComputeIndirectContextANGLE(void*, long)
gl::DrawArrays(unsigned int, int, int)
gl::DrawArraysContextANGLE(void*, unsigned int, int, int)
gl::DrawArraysIndirect(unsigned int, void const*)
gl::DrawArraysIndirectContextANGLE(void*, unsigned int, void const*)
gl::DrawArraysInstanced(unsigned int, int, int, int)
gl::DrawArraysInstancedANGLE(unsigned int, int, int, int)
gl::DrawArraysInstancedANGLEContextANGLE(void*, unsigned int, int, int, int)
gl::DrawArraysInstancedContextANGLE(void*, unsigned int, int, int, int)
gl::DrawBuffers(int, unsigned int const*)
gl::DrawBuffersContextANGLE(void*, int, unsigned int const*)
gl::DrawBuffersEXT(int, unsigned int const*)
gl::DrawBuffersEXTContextANGLE(void*, int, unsigned int const*)
gl::DrawCallParams::DrawCallParams(gl::PrimitiveMode, unsigned int, void const*)
gl::DrawCallParams::DrawCallParams(gl::PrimitiveMode, void const*)
gl::DrawCallParams::TypeInfo
gl::DrawCallParams::ensureIndexRangeResolved(gl::Context const*) const
gl::DrawCallParams::getIndexRange() const
gl::DrawCallParams::indexCount() const
gl::DrawCallParams::indices() const
gl::DrawCallParams::type() const
gl::DrawElements(unsigned int, int, unsigned int, void const*)
gl::DrawElementsContextANGLE(void*, unsigned int, int, unsigned int, void const*)
gl::DrawElementsIndirect(unsigned int, unsigned int, void const*)
gl::DrawElementsIndirectContextANGLE(void*, unsigned int, unsigned int, void const*)
gl::DrawElementsInstanced(unsigned int, int, unsigned int, void const*, int)
gl::DrawElementsInstancedANGLE(unsigned int, int, unsigned int, void const*, int)
gl::DrawElementsInstancedANGLEContextANGLE(void*, unsigned int, int, unsigned int, void const*, int)
gl::DrawElementsInstancedContextANGLE(void*, unsigned int, int, unsigned int, void const*, int)
gl::DrawRangeElements(unsigned int, unsigned int, unsigned int, int, unsigned int, void const*)
gl::DrawRangeElementsContextANGLE(void*, unsigned int, unsigned int, unsigned int, int, unsigned int, void const*)
gl::DrawTexfOES(float, float, float, float, float)
gl::DrawTexfOESContextANGLE(void*, float, float, float, float, float)
gl::DrawTexfvOES(float const*)
gl::DrawTexfvOESContextANGLE(void*, float const*)
gl::DrawTexiOES(int, int, int, int, int)
gl::DrawTexiOESContextANGLE(void*, int, int, int, int, int)
gl::DrawTexivOES(int const*)
gl::DrawTexivOESContextANGLE(void*, int const*)
gl::DrawTexsOES(short, short, short, short, short)
gl::DrawTexsOESContextANGLE(void*, short, short, short, short, short)
gl::DrawTexsvOES(short const*)
gl::DrawTexsvOESContextANGLE(void*, short const*)
gl::DrawTexxOES(int, int, int, int, int)
gl::DrawTexxOESContextANGLE(void*, int, int, int, int, int)
gl::DrawTexxvOES(int const*)
gl::DrawTexxvOESContextANGLE(void*, int const*)
gl::EGLImageTargetRenderbufferStorageOES(unsigned int, void*)
gl::EGLImageTargetRenderbufferStorageOESContextANGLE(void*, unsigned int, void*)
gl::EGLImageTargetTexture2DOES(unsigned int, void*)
gl::EGLImageTargetTexture2DOESContextANGLE(void*, unsigned int, void*)
gl::Enable(unsigned int)
gl::EnableClientState(unsigned int)
gl::EnableClientStateContextANGLE(void*, unsigned int)
gl::EnableContextANGLE(void*, unsigned int)
gl::EnableVertexAttribArray(unsigned int)
gl::EnableVertexAttribArrayContextANGLE(void*, unsigned int)
gl::EndQuery(unsigned int)
gl::EndQueryContextANGLE(void*, unsigned int)
gl::EndQueryEXT(unsigned int)
gl::EndQueryEXTContextANGLE(void*, unsigned int)
gl::EndTransformFeedback()
gl::EndTransformFeedbackContextANGLE(void*)
gl::Error::Error(unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&)
gl::Error::Error(unsigned int, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&)
gl::Error::createMessageString() const
gl::Error::getMessage() const
gl::ErrorSet::handleError(gl::Error const&) const
gl::ErrorSet::handleError(unsigned int, char const*, char const*, char const*, unsigned int)
gl::ErrorSet::validationError(unsigned int, char const*)
gl::Extensions::Extensions()
gl::Extensions::getStrings() const
gl::Extensions::setTextureExtensionSupport(gl::TextureCapsMap const&)
gl::FenceNV::FenceNV(rx::FenceNVImpl*)
gl::FenceNV::finish(gl::Context const*)
gl::FenceNV::set(gl::Context const*, unsigned int)
gl::FenceNV::test(gl::Context const*, unsigned char*)
gl::FenceNV::~FenceNV()
gl::FenceSync(unsigned int, unsigned int)
gl::FenceSyncContextANGLE(void*, unsigned int, unsigned int)
gl::FilterMode gl::FromGLenum<gl::FilterMode>(unsigned int)
gl::FindShaderVarField(sh::ShaderVariable const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
gl::Finish()
gl::FinishContextANGLE(void*)
gl::FinishFenceNV(unsigned int)
gl::FinishFenceNVContextANGLE(void*, unsigned int)
gl::Flush()
gl::FlushContextANGLE(void*)
gl::FlushMappedBufferRange(unsigned int, long, long)
gl::FlushMappedBufferRangeContextANGLE(void*, unsigned int, long, long)
gl::FlushMappedBufferRangeEXT(unsigned int, long, long)
gl::FlushMappedBufferRangeEXTContextANGLE(void*, unsigned int, long, long)
gl::FogMode gl::FromGLenum<gl::FogMode>(unsigned int)
gl::Fogf(unsigned int, float)
gl::FogfContextANGLE(void*, unsigned int, float)
gl::Fogfv(unsigned int, float const*)
gl::FogfvContextANGLE(void*, unsigned int, float const*)
gl::Fogx(unsigned int, int)
gl::FogxContextANGLE(void*, unsigned int, int)
gl::Fogxv(unsigned int, int const*)
gl::FogxvContextANGLE(void*, unsigned int, int const*)
gl::Format::EquivalentForBlit(gl::Format const&, gl::Format const&)
gl::Format::Format(gl::Format const&)
gl::Format::Format(gl::InternalFormat const&)
gl::Format::Format(unsigned int)
gl::Format::Format(unsigned int, unsigned int)
gl::Format::Invalid()
gl::Format::Invalid()::invalid
gl::Format::SameSized(gl::Format const&, gl::Format const&)
gl::Format::operator=(gl::Format const&)
gl::Format::valid() const
gl::Framebuffer* gl::TypedResourceManager<gl::Framebuffer, gl::HandleAllocator, gl::FramebufferManager>::checkObjectAllocationImpl<gl::Caps>(rx::GLImplFactory*, unsigned int, gl::Caps)
gl::Framebuffer::Framebuffer(gl::Caps const&, rx::GLImplFactory*, unsigned int)
gl::Framebuffer::Framebuffer(gl::Context const*, egl::Surface*)
gl::Framebuffer::Framebuffer(rx::GLImplFactory*)
gl::Framebuffer::blit(gl::Context const*, gl::Rectangle const&, gl::Rectangle const&, unsigned int, unsigned int)
gl::Framebuffer::checkStatusImpl(gl::Context const*)
gl::Framebuffer::checkStatusWithGLFrontEnd(gl::Context const*)
gl::Framebuffer::clear(gl::Context const*, unsigned int)
gl::Framebuffer::clearBufferfi(gl::Context const*, unsigned int, int, float, int)
gl::Framebuffer::clearBufferfv(gl::Context const*, unsigned int, int, float const*)
gl::Framebuffer::clearBufferiv(gl::Context const*, unsigned int, int, int const*)
gl::Framebuffer::clearBufferuiv(gl::Context const*, unsigned int, int, unsigned int const*)
gl::Framebuffer::commitWebGL1DepthStencilIfConsistent(gl::Context const*, int, unsigned int, unsigned int, int const*)
gl::Framebuffer::detachRenderbuffer(gl::Context const*, unsigned int)
gl::Framebuffer::detachResourceById(gl::Context const*, unsigned int, unsigned int)
gl::Framebuffer::detachTexture(gl::Context const*, unsigned int)
gl::Framebuffer::discard(gl::Context const*, unsigned long, unsigned int const*)
gl::Framebuffer::ensureBufferInitialized(gl::Context const*, unsigned int, int)
gl::Framebuffer::ensureClearAttachmentsInitialized(gl::Context const*, unsigned int)
gl::Framebuffer::ensureClearBufferAttachmentsInitialized(gl::Context const*, unsigned int, int)
gl::Framebuffer::ensureDrawAttachmentsInitialized(gl::Context const*)
gl::Framebuffer::ensureReadAttachmentInitialized(gl::Context const*, unsigned int)
gl::Framebuffer::formsCopyingFeedbackLoopWith(unsigned int, int, int) const
gl::Framebuffer::formsRenderingFeedbackLoopWith(gl::State const&) const
gl::Framebuffer::getAttachment(gl::Context const*, unsigned int) const
gl::Framebuffer::getColorbuffer(unsigned long) const
gl::Framebuffer::getDefaultFixedSampleLocations() const
gl::Framebuffer::getDefaultHeight() const
gl::Framebuffer::getDefaultLayers() const
gl::Framebuffer::getDefaultSamples() const
gl::Framebuffer::getDefaultWidth() const
gl::Framebuffer::getDepthbuffer() const
gl::Framebuffer::getDrawBuffer(unsigned long) const
gl::Framebuffer::getDrawBufferMask() const
gl::Framebuffer::getDrawBufferState(unsigned long) const
gl::Framebuffer::getDrawBufferTypeMask() const
gl::Framebuffer::getDrawbufferStateCount() const
gl::Framebuffer::getFirstColorbuffer() const
gl::Framebuffer::getImplementationColorReadFormat(gl::Context const*, unsigned int*)
gl::Framebuffer::getImplementationColorReadType(gl::Context const*, unsigned int*)
gl::Framebuffer::getLabel() const
gl::Framebuffer::getMultiviewLayout() const
gl::Framebuffer::getNumColorBuffers() const
gl::Framebuffer::getNumViews() const
gl::Framebuffer::getReadBufferState() const
gl::Framebuffer::getReadColorbuffer() const
gl::Framebuffer::getSamplePosition(gl::Context const*, unsigned long, float*) const
gl::Framebuffer::getSamples(gl::Context const*)
gl::Framebuffer::getStencilOrDepthStencilAttachment() const
gl::Framebuffer::getStencilbuffer() const
gl::Framebuffer::getViewportOffsets() const
gl::Framebuffer::hasDepth() const
gl::Framebuffer::hasEnabledDrawBuffer() const
gl::Framebuffer::hasStencil() const
gl::Framebuffer::hasValidDepthStencil() const
gl::Framebuffer::invalidate(gl::Context const*, unsigned long, unsigned int const*)
gl::Framebuffer::invalidateCompletenessCache(gl::Context const*)
gl::Framebuffer::invalidateSub(gl::Context const*, unsigned long, unsigned int const*, gl::Rectangle const&)
gl::Framebuffer::isDefault() const
gl::Framebuffer::markBufferInitialized(unsigned int, int)
gl::Framebuffer::onDestroy(gl::Context const*)
gl::Framebuffer::onSubjectStateChange(gl::Context const*, unsigned long, angle::SubjectMessage)
gl::Framebuffer::partialBufferClearNeedsInit(gl::Context const*, unsigned int)
gl::Framebuffer::readDisallowedByMultiview() const
gl::Framebuffer::readPixels(gl::Context const*, gl::Rectangle const&, unsigned int, unsigned int, void*)
gl::Framebuffer::resetAttachment(gl::Context const*, unsigned int)
gl::Framebuffer::setAttachment(gl::Context const*, unsigned int, unsigned int, gl::ImageIndex const&, gl::FramebufferAttachmentObject*)
gl::Framebuffer::setAttachment(gl::Context const*, unsigned int, unsigned int, gl::ImageIndex const&, gl::FramebufferAttachmentObject*, int, unsigned int, unsigned int, int const*)
gl::Framebuffer::setAttachmentImpl(gl::Context const*, unsigned int, unsigned int, gl::ImageIndex const&, gl::FramebufferAttachmentObject*, int, unsigned int, unsigned int, int const*)
gl::Framebuffer::setAttachmentMultiviewLayered(gl::Context const*, unsigned int, unsigned int, gl::ImageIndex const&, gl::FramebufferAttachmentObject*, int, int)
gl::Framebuffer::setAttachmentMultiviewSideBySide(gl::Context const*, unsigned int, unsigned int, gl::ImageIndex const&, gl::FramebufferAttachmentObject*, int, int const*)
gl::Framebuffer::setDefaultFixedSampleLocations(gl::Context const*, bool)
gl::Framebuffer::setDefaultHeight(gl::Context const*, int)
gl::Framebuffer::setDefaultLayers(int)
gl::Framebuffer::setDefaultSamples(gl::Context const*, int)
gl::Framebuffer::setDefaultWidth(gl::Context const*, int)
gl::Framebuffer::setDrawBuffers(unsigned long, unsigned int const*)
gl::Framebuffer::setLabel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
gl::Framebuffer::setReadBuffer(unsigned int)
gl::Framebuffer::syncState(gl::Context const*)
gl::Framebuffer::~Framebuffer()
gl::FramebufferAttachment::FramebufferAttachment()
gl::FramebufferAttachment::GetDefaultViewportOffsetVector()
gl::FramebufferAttachment::attach(gl::Context const*, unsigned int, unsigned int, gl::ImageIndex const&, gl::FramebufferAttachmentObject*, int, unsigned int, unsigned int, int const*)
gl::FramebufferAttachment::cubeMapFace() const
gl::FramebufferAttachment::detach(gl::Context const*)
gl::FramebufferAttachment::getAlphaSize() const
gl::FramebufferAttachment::getBaseViewIndex() const
gl::FramebufferAttachment::getBlueSize() const
gl::FramebufferAttachment::getColorEncoding() const
gl::FramebufferAttachment::getComponentType() const
gl::FramebufferAttachment::getDepthSize() const
gl::FramebufferAttachment::getGreenSize() const
gl::FramebufferAttachment::getMultiviewLayout() const
gl::FramebufferAttachment::getMultiviewViewportOffsets() const
gl::FramebufferAttachment::getRedSize() const
gl::FramebufferAttachment::getRenderbuffer() const
gl::FramebufferAttachment::getResource() const
gl::FramebufferAttachment::getStencilSize() const
gl::FramebufferAttachment::getSurface() const
gl::FramebufferAttachment::getTexture() const
gl::FramebufferAttachment::getTextureImageIndex() const
gl::FramebufferAttachment::id() const
gl::FramebufferAttachment::initState() const
gl::FramebufferAttachment::initializeContents(gl::Context const*)
gl::FramebufferAttachment::isLayered() const
gl::FramebufferAttachment::kDefaultBaseViewIndex
gl::FramebufferAttachment::kDefaultMultiviewLayout
gl::FramebufferAttachment::kDefaultNumViews
gl::FramebufferAttachment::kDefaultViewportOffsets
gl::FramebufferAttachment::layer() const
gl::FramebufferAttachment::mipLevel() const
gl::FramebufferAttachment::operator!=(gl::FramebufferAttachment const&) const
gl::FramebufferAttachment::operator==(gl::FramebufferAttachment const&) const
gl::FramebufferAttachment::setInitState(gl::InitState) const
gl::FramebufferAttachment::~FramebufferAttachment()
gl::FramebufferAttachmentObject::FramebufferAttachmentObject()
gl::FramebufferAttachmentObject::getAttachmentRenderTarget(gl::Context const*, unsigned int, gl::ImageIndex const&, rx::FramebufferAttachmentRenderTarget**) const
gl::FramebufferAttachmentObject::initializeContents(gl::Context const*, gl::ImageIndex const&)
gl::FramebufferAttachmentObject::onStorageChange(gl::Context const*) const
gl::FramebufferAttachmentObject::~FramebufferAttachmentObject()
gl::FramebufferManager::AllocateNewObject(rx::GLImplFactory*, unsigned int, gl::Caps const&)
gl::FramebufferManager::checkFramebufferAllocation(rx::GLImplFactory*, gl::Caps const&, unsigned int)
gl::FramebufferManager::createFramebuffer()
gl::FramebufferManager::getFramebuffer(unsigned int) const
gl::FramebufferManager::invalidateFramebufferComplenessCache(gl::Context const*) const
gl::FramebufferManager::setDefaultFramebuffer(gl::Framebuffer*)
gl::FramebufferManager::~FramebufferManager()
gl::FramebufferParameteri(unsigned int, unsigned int, int)
gl::FramebufferParameteriContextANGLE(void*, unsigned int, unsigned int, int)
gl::FramebufferRenderbuffer(unsigned int, unsigned int, unsigned int, unsigned int)
gl::FramebufferRenderbufferContextANGLE(void*, unsigned int, unsigned int, unsigned int, unsigned int)
gl::FramebufferRenderbufferOES(unsigned int, unsigned int, unsigned int, unsigned int)
gl::FramebufferRenderbufferOESContextANGLE(void*, unsigned int, unsigned int, unsigned int, unsigned int)
gl::FramebufferState::FramebufferState()
gl::FramebufferState::FramebufferState(gl::Caps const&, unsigned int)
gl::FramebufferState::attachmentsHaveSameDimensions() const
gl::FramebufferState::getAttachment(gl::Context const*, unsigned int) const
gl::FramebufferState::getBaseViewIndex() const
gl::FramebufferState::getColorAttachment(unsigned long) const
gl::FramebufferState::getDepthAttachment() const
gl::FramebufferState::getDepthOrStencilAttachment() const
gl::FramebufferState::getDepthStencilAttachment() const
gl::FramebufferState::getDimensions() const
gl::FramebufferState::getFirstNonNullAttachment() const
gl::FramebufferState::getMultiviewLayout() const
gl::FramebufferState::getReadAttachment() const
gl::FramebufferState::getReadIndex() const
gl::FramebufferState::getStencilAttachment() const
gl::FramebufferState::hasSeparateDepthAndStencilAttachments() const
gl::FramebufferState::~FramebufferState()
gl::FramebufferTexture2D(unsigned int, unsigned int, unsigned int, unsigned int, int)
gl::FramebufferTexture2DContextANGLE(void*, unsigned int, unsigned int, unsigned int, unsigned int, int)
gl::FramebufferTexture2DOES(unsigned int, unsigned int, unsigned int, unsigned int, int)
gl::FramebufferTexture2DOESContextANGLE(void*, unsigned int, unsigned int, unsigned int, unsigned int, int)
gl::FramebufferTextureEXT(unsigned int, unsigned int, unsigned int, int)
gl::FramebufferTextureEXTContextANGLE(void*, unsigned int, unsigned int, unsigned int, int)
gl::FramebufferTextureLayer(unsigned int, unsigned int, unsigned int, int, int)
gl::FramebufferTextureLayerContextANGLE(void*, unsigned int, unsigned int, unsigned int, int, int)
gl::FramebufferTextureMultiviewLayeredANGLE(unsigned int, unsigned int, unsigned int, int, int, int)
gl::FramebufferTextureMultiviewLayeredANGLEContextANGLE(void*, unsigned int, unsigned int, unsigned int, int, int, int)
gl::FramebufferTextureMultiviewSideBySideANGLE(unsigned int, unsigned int, unsigned int, int, int, int const*)
gl::FramebufferTextureMultiviewSideBySideANGLEContextANGLE(void*, unsigned int, unsigned int, unsigned int, int, int, int const*)
gl::FrontFace(unsigned int)
gl::FrontFaceContextANGLE(void*, unsigned int)
gl::Frustumf(float, float, float, float, float, float)
gl::FrustumfContextANGLE(void*, float, float, float, float, float, float)
gl::Frustumx(int, int, int, int, int, int)
gl::FrustumxContextANGLE(void*, int, int, int, int, int, int)
gl::GLES1Renderer::GLES1Renderer()
gl::GLES1Renderer::TexCoordArrayIndex(unsigned int)
gl::GLES1Renderer::VertexArrayIndex(gl::ClientVertexArrayType, gl::GLES1State const&)
gl::GLES1Renderer::compileShader(gl::Context*, gl::ShaderType, char const*, unsigned int*)
gl::GLES1Renderer::drawTexture(gl::Context*, gl::State*, float, float, float, float, float)
gl::GLES1Renderer::initializeRendererProgram(gl::Context*, gl::State*)
gl::GLES1Renderer::linkProgram(gl::Context*, gl::State*, unsigned int, unsigned int, std::__1::unordered_map<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > const&, unsigned int*)
gl::GLES1Renderer::onDestroy(gl::Context*, gl::State*)
gl::GLES1Renderer::prepareForDraw(gl::PrimitiveMode, gl::Context*, gl::State*)
gl::GLES1Renderer::setAttributesEnabled(gl::Context*, gl::State*, angle::BitSetT<16ul, unsigned long, unsigned long>)
gl::GLES1Renderer::~GLES1Renderer()
gl::GLES1State::GLES1State()
gl::GLES1State::currentMatrixStack() const
gl::GLES1State::fogParameters()
gl::GLES1State::fogParameters() const
gl::GLES1State::getClientTextureUnit() const
gl::GLES1State::getClipPlane(unsigned int, float*) const
gl::GLES1State::getCurrentColor() const
gl::GLES1State::getCurrentMatrixStackDepth(unsigned int) const
gl::GLES1State::getCurrentNormal() const
gl::GLES1State::getCurrentTextureCoords(unsigned int) const
gl::GLES1State::getHint(unsigned int)
gl::GLES1State::getModelviewMatrix() const
gl::GLES1State::getVertexArraysAttributeMask() const
gl::GLES1State::initialize(gl::Context const*, gl::State const*)
gl::GLES1State::isClientStateEnabled(gl::ClientVertexArrayType) const
gl::GLES1State::isColorMaterialEnabled() const
gl::GLES1State::isTextureTargetEnabled(unsigned int, gl::TextureType) const
gl::GLES1State::lightModelParameters()
gl::GLES1State::lightModelParameters() const
gl::GLES1State::lightParameters(unsigned int)
gl::GLES1State::lightParameters(unsigned int) const
gl::GLES1State::loadMatrix(angle::Mat4 const&)
gl::GLES1State::materialParameters()
gl::GLES1State::materialParameters() const
gl::GLES1State::multMatrix(angle::Mat4 const&)
gl::GLES1State::pointParameters()
gl::GLES1State::pointParameters() const
gl::GLES1State::popMatrix()
gl::GLES1State::pushMatrix()
gl::GLES1State::setAlphaFunc(gl::AlphaTestFunc, float)
gl::GLES1State::setClientStateEnabled(gl::ClientVertexArrayType, bool)
gl::GLES1State::setClientTextureUnit(unsigned int)
gl::GLES1State::setClipPlane(unsigned int, float const*)
gl::GLES1State::setCurrentColor(angle::Color<float> const&)
gl::GLES1State::setCurrentNormal(angle::Vector<3ul, float> const&)
gl::GLES1State::setCurrentTextureCoords(unsigned int, gl::TextureCoordF const&)
gl::GLES1State::setHint(unsigned int, unsigned int)
gl::GLES1State::setLogicOp(gl::LogicalOperation)
gl::GLES1State::setMatrixMode(gl::MatrixType)
gl::GLES1State::setShadeModel(gl::ShadingModel)
gl::GLES1State::setTexCoordArrayEnabled(unsigned int, bool)
gl::GLES1State::textureEnvironment(unsigned int)
gl::GLES1State::textureEnvironment(unsigned int) const
gl::GLES1State::~GLES1State()
gl::GenBuffers(int, unsigned int*)
gl::GenBuffersContextANGLE(void*, int, unsigned int*)
gl::GenFencesNV(int, unsigned int*)
gl::GenFencesNVContextANGLE(void*, int, unsigned int*)
gl::GenFramebuffers(int, unsigned int*)
gl::GenFramebuffersContextANGLE(void*, int, unsigned int*)
gl::GenFramebuffersOES(int, unsigned int*)
gl::GenFramebuffersOESContextANGLE(void*, int, unsigned int*)
gl::GenPathsCHROMIUM(int)
gl::GenPathsCHROMIUMContextANGLE(void*, int)
gl::GenProgramPipelines(int, unsigned int*)
gl::GenProgramPipelinesContextANGLE(void*, int, unsigned int*)
gl::GenQueries(int, unsigned int*)
gl::GenQueriesContextANGLE(void*, int, unsigned int*)
gl::GenQueriesEXT(int, unsigned int*)
gl::GenQueriesEXTContextANGLE(void*, int, unsigned int*)
gl::GenRenderbuffers(int, unsigned int*)
gl::GenRenderbuffersContextANGLE(void*, int, unsigned int*)
gl::GenRenderbuffersOES(int, unsigned int*)
gl::GenRenderbuffersOESContextANGLE(void*, int, unsigned int*)
gl::GenSamplers(int, unsigned int*)
gl::GenSamplersContextANGLE(void*, int, unsigned int*)
gl::GenTextures(int, unsigned int*)
gl::GenTexturesContextANGLE(void*, int, unsigned int*)
gl::GenTransformFeedbacks(int, unsigned int*)
gl::GenTransformFeedbacksContextANGLE(void*, int, unsigned int*)
gl::GenVertexArrays(int, unsigned int*)
gl::GenVertexArraysContextANGLE(void*, int, unsigned int*)
gl::GenVertexArraysOES(int, unsigned int*)
gl::GenVertexArraysOESContextANGLE(void*, int, unsigned int*)
gl::GenerateMinimumCaps(gl::Version const&, gl::Extensions const&)
gl::GenerateMinimumTextureCaps(unsigned int, gl::Version const&, gl::Extensions const&)
gl::GenerateMipmap(unsigned int)
gl::GenerateMipmapContextANGLE(void*, unsigned int)
gl::GenerateMipmapOES(unsigned int)
gl::GenerateMipmapOESContextANGLE(void*, unsigned int)
gl::GetActiveAttrib(unsigned int, unsigned int, int, int*, int*, unsigned int*, char*)
gl::GetActiveAttribContextANGLE(void*, unsigned int, unsigned int, int, int*, int*, unsigned int*, char*)
gl::GetActiveUniform(unsigned int, unsigned int, int, int*, int*, unsigned int*, char*)
gl::GetActiveUniformBlockName(unsigned int, unsigned int, int, int*, char*)
gl::GetActiveUniformBlockNameContextANGLE(void*, unsigned int, unsigned int, int, int*, char*)
gl::GetActiveUniformBlockiv(unsigned int, unsigned int, unsigned int, int*)
gl::GetActiveUniformBlockivContextANGLE(void*, unsigned int, unsigned int, unsigned int, int*)
gl::GetActiveUniformBlockivRobustANGLE(unsigned int, unsigned int, unsigned int, int, int*, int*)
gl::GetActiveUniformBlockivRobustANGLEContextANGLE(void*, unsigned int, unsigned int, unsigned int, int, int*, int*)
gl::GetActiveUniformContextANGLE(void*, unsigned int, unsigned int, int, int*, int*, unsigned int*, char*)
gl::GetActiveUniformsiv(unsigned int, int, unsigned int const*, unsigned int, int*)
gl::GetActiveUniformsivContextANGLE(void*, unsigned int, int, unsigned int const*, unsigned int, int*)
gl::GetAllSizedInternalFormats()
gl::GetAllSizedInternalFormats()::formatSet
gl::GetAttachedShaders(unsigned int, int, int*, unsigned int*)
gl::GetAttachedShadersContextANGLE(void*, unsigned int, int, int*, unsigned int*)
gl::GetAttribLocation(unsigned int, char const*)
gl::GetAttribLocationContextANGLE(void*, unsigned int, char const*)
gl::GetBooleani_v(unsigned int, unsigned int, unsigned char*)
gl::GetBooleani_vContextANGLE(void*, unsigned int, unsigned int, unsigned char*)
gl::GetBooleani_vRobustANGLE(unsigned int, unsigned int, int, int*, unsigned char*)
gl::GetBooleani_vRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, int*, unsigned char*)
gl::GetBooleanv(unsigned int, unsigned char*)
gl::GetBooleanvContextANGLE(void*, unsigned int, unsigned char*)
gl::GetBooleanvRobustANGLE(unsigned int, int, int*, unsigned char*)
gl::GetBooleanvRobustANGLEContextANGLE(void*, unsigned int, int, int*, unsigned char*)
gl::GetBoundBufferAvailableSize(gl::OffsetBindingPointer<gl::Buffer> const&)
gl::GetBufferParameteri64v(unsigned int, unsigned int, long*)
gl::GetBufferParameteri64vContextANGLE(void*, unsigned int, unsigned int, long*)
gl::GetBufferParameteri64vRobustANGLE(unsigned int, unsigned int, int, int*, long*)
gl::GetBufferParameteri64vRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, int*, long*)
gl::GetBufferParameteriv(unsigned int, unsigned int, int*)
gl::GetBufferParameterivContextANGLE(void*, unsigned int, unsigned int, int*)
gl::GetBufferParameterivRobustANGLE(unsigned int, unsigned int, int, int*, int*)
gl::GetBufferParameterivRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, int*, int*)
gl::GetBufferPointerv(unsigned int, unsigned int, void**)
gl::GetBufferPointervContextANGLE(void*, unsigned int, unsigned int, void**)
gl::GetBufferPointervOES(unsigned int, unsigned int, void**)
gl::GetBufferPointervOESContextANGLE(void*, unsigned int, unsigned int, void**)
gl::GetBufferPointervRobustANGLE(unsigned int, unsigned int, int, int*, void**)
gl::GetBufferPointervRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, int*, void**)
gl::GetBufferVariableResourceProperty(gl::Program const*, unsigned int, unsigned int)
gl::GetClipPlanef(unsigned int, float*)
gl::GetClipPlanefContextANGLE(void*, unsigned int, float*)
gl::GetClipPlanex(unsigned int, int*)
gl::GetClipPlanexContextANGLE(void*, unsigned int, int*)
gl::GetDebugMessageLogKHR(unsigned int, int, unsigned int*, unsigned int*, unsigned int*, unsigned int*, int*, char*)
gl::GetDebugMessageLogKHRContextANGLE(void*, unsigned int, int, unsigned int*, unsigned int*, unsigned int*, unsigned int*, int*, char*)
gl::GetError()
gl::GetErrorContextANGLE(void*)
gl::GetExtensionInfoMap()
gl::GetExtensionInfoMap()::$_0::operator()() const
gl::GetExtensionInfoMap()::extensionInfo
gl::GetFenceivNV(unsigned int, unsigned int, int*)
gl::GetFenceivNVContextANGLE(void*, unsigned int, unsigned int, int*)
gl::GetFixedv(unsigned int, int*)
gl::GetFixedvContextANGLE(void*, unsigned int, int*)
gl::GetFloatv(unsigned int, float*)
gl::GetFloatvContextANGLE(void*, unsigned int, float*)
gl::GetFloatvRobustANGLE(unsigned int, int, int*, float*)
gl::GetFloatvRobustANGLEContextANGLE(void*, unsigned int, int, int*, float*)
gl::GetFogParameterCount(unsigned int)
gl::GetFogParameters(gl::GLES1State const*, unsigned int, float*)
gl::GetFragDataIndexEXT(unsigned int, char const*)
gl::GetFragDataIndexEXTContextANGLE(void*, unsigned int, char const*)
gl::GetFragDataLocation(unsigned int, char const*)
gl::GetFragDataLocationContextANGLE(void*, unsigned int, char const*)
gl::GetFramebufferAttachmentParameteriv(unsigned int, unsigned int, unsigned int, int*)
gl::GetFramebufferAttachmentParameterivContextANGLE(void*, unsigned int, unsigned int, unsigned int, int*)
gl::GetFramebufferAttachmentParameterivOES(unsigned int, unsigned int, unsigned int, int*)
gl::GetFramebufferAttachmentParameterivOESContextANGLE(void*, unsigned int, unsigned int, unsigned int, int*)
gl::GetFramebufferAttachmentParameterivRobustANGLE(unsigned int, unsigned int, unsigned int, int, int*, int*)
gl::GetFramebufferAttachmentParameterivRobustANGLEContextANGLE(void*, unsigned int, unsigned int, unsigned int, int, int*, int*)
gl::GetFramebufferParameteriv(unsigned int, unsigned int, int*)
gl::GetFramebufferParameterivContextANGLE(void*, unsigned int, unsigned int, int*)
gl::GetFramebufferParameterivRobustANGLE(unsigned int, unsigned int, int, int*, int*)
gl::GetFramebufferParameterivRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, int*, int*)
gl::GetGenericErrorMessage(unsigned int)
gl::GetGraphicsResetStatusEXT()
gl::GetGraphicsResetStatusEXTContextANGLE(void*)
gl::GetInteger64i_v(unsigned int, unsigned int, long*)
gl::GetInteger64i_vContextANGLE(void*, unsigned int, unsigned int, long*)
gl::GetInteger64i_vRobustANGLE(unsigned int, unsigned int, int, int*, long*)
gl::GetInteger64i_vRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, int*, long*)
gl::GetInteger64v(unsigned int, long*)
gl::GetInteger64vContextANGLE(void*, unsigned int, long*)
gl::GetInteger64vRobustANGLE(unsigned int, int, int*, long*)
gl::GetInteger64vRobustANGLEContextANGLE(void*, unsigned int, int, int*, long*)
gl::GetIntegeri_v(unsigned int, unsigned int, int*)
gl::GetIntegeri_vContextANGLE(void*, unsigned int, unsigned int, int*)
gl::GetIntegeri_vRobustANGLE(unsigned int, unsigned int, int, int*, int*)
gl::GetIntegeri_vRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, int*, int*)
gl::GetIntegerv(unsigned int, int*)
gl::GetIntegervContextANGLE(void*, unsigned int, int*)
gl::GetIntegervRobustANGLE(unsigned int, int, int*, int*)
gl::GetIntegervRobustANGLEContextANGLE(void*, unsigned int, int, int*, int*)
gl::GetInternalFormatInfo(unsigned int, unsigned int)
gl::GetInternalFormatInfo(unsigned int, unsigned int)::defaultInternalFormat
gl::GetInternalFormatMap()::formatMap
gl::GetInternalformativ(unsigned int, unsigned int, unsigned int, int, int*)
gl::GetInternalformativContextANGLE(void*, unsigned int, unsigned int, unsigned int, int, int*)
gl::GetInternalformativRobustANGLE(unsigned int, unsigned int, unsigned int, int, int*, int*)
gl::GetInternalformativRobustANGLEContextANGLE(void*, unsigned int, unsigned int, unsigned int, int, int*, int*)
gl::GetLightModelParameterCount(unsigned int)
gl::GetLightModelParameters(gl::GLES1State const*, unsigned int, float*)
gl::GetLightParameterCount(gl::LightParameter)
gl::GetLightParameters(gl::GLES1State const*, unsigned int, gl::LightParameter, float*)
gl::GetLightfv(unsigned int, unsigned int, float*)
gl::GetLightfvContextANGLE(void*, unsigned int, unsigned int, float*)
gl::GetLightxv(unsigned int, unsigned int, int*)
gl::GetLightxvContextANGLE(void*, unsigned int, unsigned int, int*)
gl::GetMaterialParameterCount(gl::MaterialParameter)
gl::GetMaterialParameters(gl::GLES1State const*, unsigned int, gl::MaterialParameter, float*)
gl::GetMaterialfv(unsigned int, unsigned int, float*)
gl::GetMaterialfvContextANGLE(void*, unsigned int, unsigned int, float*)
gl::GetMaterialxv(unsigned int, unsigned int, int*)
gl::GetMaterialxvContextANGLE(void*, unsigned int, unsigned int, int*)
gl::GetMultisamplefv(unsigned int, unsigned int, float*)
gl::GetMultisamplefvContextANGLE(void*, unsigned int, unsigned int, float*)
gl::GetMultisamplefvRobustANGLE(unsigned int, unsigned int, int, int*, float*)
gl::GetMultisamplefvRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, int*, float*)
gl::GetObjectLabelKHR(unsigned int, unsigned int, int, int*, char*)
gl::GetObjectLabelKHRContextANGLE(void*, unsigned int, unsigned int, int, int*, char*)
gl::GetObjectPtrLabelKHR(void const*, int, int*, char*)
gl::GetObjectPtrLabelKHRContextANGLE(void*, void const*, int, int*, char*)
gl::GetPathParameterfvCHROMIUM(unsigned int, unsigned int, float*)
gl::GetPathParameterfvCHROMIUMContextANGLE(void*, unsigned int, unsigned int, float*)
gl::GetPathParameterivCHROMIUM(unsigned int, unsigned int, int*)
gl::GetPathParameterivCHROMIUMContextANGLE(void*, unsigned int, unsigned int, int*)
gl::GetPointParameter(gl::GLES1State const*, gl::PointParameter, float*)
gl::GetPointParameterCount(gl::PointParameter)
gl::GetPointSize(gl::GLES1State*, float*)
gl::GetPointerv(unsigned int, void**)
gl::GetPointervContextANGLE(void*, unsigned int, void**)
gl::GetPointervKHR(unsigned int, void**)
gl::GetPointervKHRContextANGLE(void*, unsigned int, void**)
gl::GetPointervRobustANGLERobustANGLE(unsigned int, int, int*, void**)
gl::GetPointervRobustANGLERobustANGLEContextANGLE(void*, unsigned int, int, int*, void**)
gl::GetProgramBinary(unsigned int, int, int*, unsigned int*, void*)
gl::GetProgramBinaryContextANGLE(void*, unsigned int, int, int*, unsigned int*, void*)
gl::GetProgramBinaryOES(unsigned int, int, int*, unsigned int*, void*)
gl::GetProgramBinaryOESContextANGLE(void*, unsigned int, int, int*, unsigned int*, void*)
gl::GetProgramInfoLog(unsigned int, int, int*, char*)
gl::GetProgramInfoLogContextANGLE(void*, unsigned int, int, int*, char*)
gl::GetProgramInterfaceiv(unsigned int, unsigned int, unsigned int, int*)
gl::GetProgramInterfaceivContextANGLE(void*, unsigned int, unsigned int, unsigned int, int*)
gl::GetProgramInterfaceivRobustANGLE(unsigned int, unsigned int, unsigned int, int, int*, int*)
gl::GetProgramInterfaceivRobustANGLEContextANGLE(void*, unsigned int, unsigned int, unsigned int, int, int*, int*)
gl::GetProgramPipelineInfoLog(unsigned int, int, int*, char*)
gl::GetProgramPipelineInfoLogContextANGLE(void*, unsigned int, int, int*, char*)
gl::GetProgramPipelineiv(unsigned int, unsigned int, int*)
gl::GetProgramPipelineivContextANGLE(void*, unsigned int, unsigned int, int*)
gl::GetProgramResourceIndex(unsigned int, unsigned int, char const*)
gl::GetProgramResourceIndexContextANGLE(void*, unsigned int, unsigned int, char const*)
gl::GetProgramResourceLocation(unsigned int, unsigned int, char const*)
gl::GetProgramResourceLocationContextANGLE(void*, unsigned int, unsigned int, char const*)
gl::GetProgramResourceLocationIndexEXT(unsigned int, unsigned int, char const*)
gl::GetProgramResourceLocationIndexEXTContextANGLE(void*, unsigned int, unsigned int, char const*)
gl::GetProgramResourceName(unsigned int, unsigned int, unsigned int, int, int*, char*)
gl::GetProgramResourceNameContextANGLE(void*, unsigned int, unsigned int, unsigned int, int, int*, char*)
gl::GetProgramResourceiv(unsigned int, unsigned int, unsigned int, int, unsigned int const*, int, int*, int*)
gl::GetProgramResourceivContextANGLE(void*, unsigned int, unsigned int, unsigned int, int, unsigned int const*, int, int*, int*)
gl::GetProgramiv(unsigned int, unsigned int, int*)
gl::GetProgramivContextANGLE(void*, unsigned int, unsigned int, int*)
gl::GetProgramivRobustANGLE(unsigned int, unsigned int, int, int*, int*)
gl::GetProgramivRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, int*, int*)
gl::GetQueryObjecti64vEXT(unsigned int, unsigned int, long*)
gl::GetQueryObjecti64vEXTContextANGLE(void*, unsigned int, unsigned int, long*)
gl::GetQueryObjecti64vRobustANGLE(unsigned int, unsigned int, int, int*, long*)
gl::GetQueryObjecti64vRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, int*, long*)
gl::GetQueryObjectivEXT(unsigned int, unsigned int, int*)
gl::GetQueryObjectivEXTContextANGLE(void*, unsigned int, unsigned int, int*)
gl::GetQueryObjectivRobustANGLE(unsigned int, unsigned int, int, int*, int*)
gl::GetQueryObjectivRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, int*, int*)
gl::GetQueryObjectui64vEXT(unsigned int, unsigned int, unsigned long*)
gl::GetQueryObjectui64vEXTContextANGLE(void*, unsigned int, unsigned int, unsigned long*)
gl::GetQueryObjectui64vRobustANGLE(unsigned int, unsigned int, int, int*, unsigned long*)
gl::GetQueryObjectui64vRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, int*, unsigned long*)
gl::GetQueryObjectuiv(unsigned int, unsigned int, unsigned int*)
gl::GetQueryObjectuivContextANGLE(void*, unsigned int, unsigned int, unsigned int*)
gl::GetQueryObjectuivEXT(unsigned int, unsigned int, unsigned int*)
gl::GetQueryObjectuivEXTContextANGLE(void*, unsigned int, unsigned int, unsigned int*)
gl::GetQueryObjectuivRobustANGLE(unsigned int, unsigned int, int, int*, unsigned int*)
gl::GetQueryObjectuivRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, int*, unsigned int*)
gl::GetQueryiv(unsigned int, unsigned int, int*)
gl::GetQueryivContextANGLE(void*, unsigned int, unsigned int, int*)
gl::GetQueryivEXT(unsigned int, unsigned int, int*)
gl::GetQueryivEXTContextANGLE(void*, unsigned int, unsigned int, int*)
gl::GetQueryivRobustANGLE(unsigned int, unsigned int, int, int*, int*)
gl::GetQueryivRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, int*, int*)
gl::GetRenderbufferParameteriv(unsigned int, unsigned int, int*)
gl::GetRenderbufferParameterivContextANGLE(void*, unsigned int, unsigned int, int*)
gl::GetRenderbufferParameterivOES(unsigned int, unsigned int, int*)
gl::GetRenderbufferParameterivOESContextANGLE(void*, unsigned int, unsigned int, int*)
gl::GetRenderbufferParameterivRobustANGLE(unsigned int, unsigned int, int, int*, int*)
gl::GetRenderbufferParameterivRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, int*, int*)
gl::GetSamplerParameterIivRobustANGLE(unsigned int, unsigned int, int, int*, int*)
gl::GetSamplerParameterIivRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, int*, int*)
gl::GetSamplerParameterIuivRobustANGLE(unsigned int, unsigned int, int, int*, unsigned int*)
gl::GetSamplerParameterIuivRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, int*, unsigned int*)
gl::GetSamplerParameterfv(unsigned int, unsigned int, float*)
gl::GetSamplerParameterfvContextANGLE(void*, unsigned int, unsigned int, float*)
gl::GetSamplerParameterfvRobustANGLE(unsigned int, unsigned int, int, int*, float*)
gl::GetSamplerParameterfvRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, int*, float*)
gl::GetSamplerParameteriv(unsigned int, unsigned int, int*)
gl::GetSamplerParameterivContextANGLE(void*, unsigned int, unsigned int, int*)
gl::GetSamplerParameterivRobustANGLE(unsigned int, unsigned int, int, int*, int*)
gl::GetSamplerParameterivRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, int*, int*)
gl::GetShaderInfoLog(unsigned int, int, int*, char*)
gl::GetShaderInfoLogContextANGLE(void*, unsigned int, int, int*, char*)
gl::GetShaderPrecisionFormat(unsigned int, unsigned int, int*, int*)
gl::GetShaderPrecisionFormatContextANGLE(void*, unsigned int, unsigned int, int*, int*)
gl::GetShaderSource(unsigned int, int, int*, char*)
gl::GetShaderSourceContextANGLE(void*, unsigned int, int, int*, char*)
gl::GetShaderTypeString(gl::ShaderType)
gl::GetShaderiv(unsigned int, unsigned int, int*)
gl::GetShaderivContextANGLE(void*, unsigned int, unsigned int, int*)
gl::GetShaderivRobustANGLE(unsigned int, unsigned int, int, int*, int*)
gl::GetShaderivRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, int*, int*)
gl::GetSizedEffectiveInternalFormatInfo(gl::InternalFormat const&, unsigned int*)::list
gl::GetSizedFormatInternal(unsigned int, unsigned int)
gl::GetSizedInternalFormatInfo(unsigned int)
gl::GetSizedInternalFormatInfo(unsigned int)::defaultInternalFormat
gl::GetString(unsigned int)
gl::GetStringContextANGLE(void*, unsigned int)
gl::GetStringi(unsigned int, unsigned int)
gl::GetStringiContextANGLE(void*, unsigned int, unsigned int)
gl::GetSynciv(__GLsync*, unsigned int, int, int*, int*)
gl::GetSyncivContextANGLE(void*, __GLsync*, unsigned int, int, int*, int*)
gl::GetTexEnvfv(unsigned int, unsigned int, float*)
gl::GetTexEnvfvContextANGLE(void*, unsigned int, unsigned int, float*)
gl::GetTexEnviv(unsigned int, unsigned int, int*)
gl::GetTexEnvivContextANGLE(void*, unsigned int, unsigned int, int*)
gl::GetTexEnvxv(unsigned int, unsigned int, int*)
gl::GetTexEnvxvContextANGLE(void*, unsigned int, unsigned int, int*)
gl::GetTexGenfvOES(unsigned int, unsigned int, float*)
gl::GetTexGenfvOESContextANGLE(void*, unsigned int, unsigned int, float*)
gl::GetTexGenivOES(unsigned int, unsigned int, int*)
gl::GetTexGenivOESContextANGLE(void*, unsigned int, unsigned int, int*)
gl::GetTexGenxvOES(unsigned int, unsigned int, int*)
gl::GetTexGenxvOESContextANGLE(void*, unsigned int, unsigned int, int*)
gl::GetTexLevelParameterfv(unsigned int, int, unsigned int, float*)
gl::GetTexLevelParameterfvContextANGLE(void*, unsigned int, int, unsigned int, float*)
gl::GetTexLevelParameterfvRobustANGLE(unsigned int, int, unsigned int, int, int*, float*)
gl::GetTexLevelParameterfvRobustANGLEContextANGLE(void*, unsigned int, int, unsigned int, int, int*, float*)
gl::GetTexLevelParameteriv(unsigned int, int, unsigned int, int*)
gl::GetTexLevelParameterivContextANGLE(void*, unsigned int, int, unsigned int, int*)
gl::GetTexLevelParameterivRobustANGLE(unsigned int, int, unsigned int, int, int*, int*)
gl::GetTexLevelParameterivRobustANGLEContextANGLE(void*, unsigned int, int, unsigned int, int, int*, int*)
gl::GetTexParameterCount(unsigned int)
gl::GetTexParameterIivRobustANGLE(unsigned int, unsigned int, int, int*, int*)
gl::GetTexParameterIivRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, int*, int*)
gl::GetTexParameterIuivRobustANGLE(unsigned int, unsigned int, int, int*, unsigned int*)
gl::GetTexParameterIuivRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, int*, unsigned int*)
gl::GetTexParameterfv(unsigned int, unsigned int, float*)
gl::GetTexParameterfvContextANGLE(void*, unsigned int, unsigned int, float*)
gl::GetTexParameterfvRobustANGLE(unsigned int, unsigned int, int, int*, float*)
gl::GetTexParameterfvRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, int*, float*)
gl::GetTexParameteriv(unsigned int, unsigned int, int*)
gl::GetTexParameterivContextANGLE(void*, unsigned int, unsigned int, int*)
gl::GetTexParameterivRobustANGLE(unsigned int, unsigned int, int, int*, int*)
gl::GetTexParameterivRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, int*, int*)
gl::GetTexParameterxv(unsigned int, unsigned int, int*)
gl::GetTexParameterxvContextANGLE(void*, unsigned int, unsigned int, int*)
gl::GetTextureEnv(unsigned int, gl::GLES1State const*, gl::TextureEnvTarget, gl::TextureEnvParameter, float*)
gl::GetTextureEnvParameterCount(gl::TextureEnvParameter)
gl::GetTransformFeedbackVarying(unsigned int, unsigned int, int, int*, int*, unsigned int*, char*)
gl::GetTransformFeedbackVaryingContextANGLE(void*, unsigned int, unsigned int, int, int*, int*, unsigned int*, char*)
gl::GetTranslatedShaderSourceANGLE(unsigned int, int, int*, char*)
gl::GetTranslatedShaderSourceANGLEContextANGLE(void*, unsigned int, int, int*, char*)
gl::GetTypeInfo(unsigned int)
gl::GetTypeInfo(unsigned int)::defaultInfo
gl::GetTypeInfo(unsigned int)::info
gl::GetUniformBlockIndex(unsigned int, char const*)
gl::GetUniformBlockIndexContextANGLE(void*, unsigned int, char const*)
gl::GetUniformIndices(unsigned int, int, char const* const*, unsigned int*)
gl::GetUniformIndicesContextANGLE(void*, unsigned int, int, char const* const*, unsigned int*)
gl::GetUniformLocation(unsigned int, char const*)
gl::GetUniformLocationContextANGLE(void*, unsigned int, char const*)
gl::GetUniformResourceProperty(gl::Program const*, unsigned int, unsigned int)
gl::GetUniformTypeInfo(unsigned int)
gl::GetUniformfv(unsigned int, int, float*)
gl::GetUniformfvContextANGLE(void*, unsigned int, int, float*)
gl::GetUniformfvRobustANGLE(unsigned int, int, int, int*, float*)
gl::GetUniformfvRobustANGLEContextANGLE(void*, unsigned int, int, int, int*, float*)
gl::GetUniformiv(unsigned int, int, int*)
gl::GetUniformivContextANGLE(void*, unsigned int, int, int*)
gl::GetUniformivRobustANGLE(unsigned int, int, int, int*, int*)
gl::GetUniformivRobustANGLEContextANGLE(void*, unsigned int, int, int, int*, int*)
gl::GetUniformuiv(unsigned int, int, unsigned int*)
gl::GetUniformuivContextANGLE(void*, unsigned int, int, unsigned int*)
gl::GetUniformuivRobustANGLE(unsigned int, int, int, int*, unsigned int*)
gl::GetUniformuivRobustANGLEContextANGLE(void*, unsigned int, int, int, int*, unsigned int*)
gl::GetUnsizedEffectiveInternalFormatInfo(gl::InternalFormat const&, gl::InternalFormat const&, unsigned int*)::list
gl::GetUnsizedFormat(unsigned int)
gl::GetValidProgram(gl::Context*, unsigned int)
gl::GetValidProgramNoResolve(gl::Context*, unsigned int)
gl::GetValidShader(gl::Context*, unsigned int)
gl::GetVertexAttribIiv(unsigned int, unsigned int, int*)
gl::GetVertexAttribIivContextANGLE(void*, unsigned int, unsigned int, int*)
gl::GetVertexAttribIivRobustANGLE(unsigned int, unsigned int, int, int*, int*)
gl::GetVertexAttribIivRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, int*, int*)
gl::GetVertexAttribIuiv(unsigned int, unsigned int, unsigned int*)
gl::GetVertexAttribIuivContextANGLE(void*, unsigned int, unsigned int, unsigned int*)
gl::GetVertexAttribIuivRobustANGLE(unsigned int, unsigned int, int, int*, unsigned int*)
gl::GetVertexAttribIuivRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, int*, unsigned int*)
gl::GetVertexAttribPointerv(unsigned int, unsigned int, void**)
gl::GetVertexAttribPointervContextANGLE(void*, unsigned int, unsigned int, void**)
gl::GetVertexAttribPointervRobustANGLE(unsigned int, unsigned int, int, int*, void**)
gl::GetVertexAttribPointervRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, int*, void**)
gl::GetVertexAttribfv(unsigned int, unsigned int, float*)
gl::GetVertexAttribfvContextANGLE(void*, unsigned int, unsigned int, float*)
gl::GetVertexAttribfvRobustANGLE(unsigned int, unsigned int, int, int*, float*)
gl::GetVertexAttribfvRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, int*, float*)
gl::GetVertexAttribiv(unsigned int, unsigned int, int*)
gl::GetVertexAttribivContextANGLE(void*, unsigned int, unsigned int, int*)
gl::GetVertexAttribivRobustANGLE(unsigned int, unsigned int, int, int*, int*)
gl::GetVertexAttribivRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, int*, int*)
gl::GetVertexAttributeBaseType(gl::VertexAttribute const&)
gl::GetVertexFormatID(gl::VertexAttribute const&)
gl::GetVertexFormatID(unsigned int, unsigned char, unsigned int, bool)
gl::GetVertexFormatType(unsigned int, unsigned char, unsigned int, bool)
gl::GetVertexFormatTypeSize(gl::VertexFormatType)
gl::GetVerticesNeededForDraw(gl::PrimitiveMode, int, int)
gl::GetnUniformfvEXT(unsigned int, int, int, float*)
gl::GetnUniformfvEXTContextANGLE(void*, unsigned int, int, int, float*)
gl::GetnUniformfvRobustANGLE(unsigned int, int, int, int*, float*)
gl::GetnUniformfvRobustANGLEContextANGLE(void*, unsigned int, int, int, int*, float*)
gl::GetnUniformivEXT(unsigned int, int, int, int*)
gl::GetnUniformivEXTContextANGLE(void*, unsigned int, int, int, int*)
gl::GetnUniformivRobustANGLE(unsigned int, int, int, int*, int*)
gl::GetnUniformivRobustANGLEContextANGLE(void*, unsigned int, int, int, int*, int*)
gl::GetnUniformuivRobustANGLE(unsigned int, int, int, int*, unsigned int*)
gl::GetnUniformuivRobustANGLEContextANGLE(void*, unsigned int, int, int, int*, unsigned int*)
gl::HandleAllocator::HandleAllocator()
gl::HandleAllocator::allocate()
gl::HandleAllocator::release(unsigned int)
gl::HandleAllocator::reserve(unsigned int)
gl::HandleAllocator::reset()
gl::HandleAllocator::setBaseHandle(unsigned int)
gl::HandleAllocator::~HandleAllocator()
gl::HandleRangeAllocator::HandleRangeAllocator()
gl::HandleRangeAllocator::allocateRange(unsigned int)
gl::HandleRangeAllocator::isUsed(unsigned int) const
gl::HandleRangeAllocator::kInvalidHandle
gl::HandleRangeAllocator::releaseRange(unsigned int, unsigned int)
gl::HandleRangeAllocator::~HandleRangeAllocator()
gl::Hint(unsigned int, unsigned int)
gl::HintContextANGLE(void*, unsigned int, unsigned int)
gl::HintSetting gl::FromGLenum<gl::HintSetting>(unsigned int)
gl::ImageBinding::ImageBinding(gl::ImageBinding const&)
gl::ImageBinding::ImageBinding(unsigned long)
gl::ImageBinding::~ImageBinding()
gl::ImageIndex::ImageIndex()
gl::ImageIndex::ImageIndex(gl::ImageIndex const&)
gl::ImageIndex::Make2D(int)
gl::ImageIndex::Make2DArray(int, int)
gl::ImageIndex::Make2DArrayRange(int, int, int)
gl::ImageIndex::Make2DMultisampleArray(int)
gl::ImageIndex::Make2DMultisampleArrayRange(int, int)
gl::ImageIndex::Make3D(int, int)
gl::ImageIndex::MakeCubeMapFace(gl::TextureTarget, int)
gl::ImageIndex::MakeFromTarget(gl::TextureTarget, int)
gl::ImageIndex::MakeFromType(gl::TextureType, int, int, int)
gl::ImageIndex::cubeMapFaceIndex() const
gl::ImageIndex::getTarget() const
gl::ImageIndex::has3DLayer() const
gl::ImageIndex::hasLayer() const
gl::ImageIndex::isEntireLevelCubeMap() const
gl::ImageIndex::isLayered() const
gl::ImageIndex::operator!=(gl::ImageIndex const&) const
gl::ImageIndex::operator=(gl::ImageIndex const&)
gl::ImageIndexIterator::MakeGeneric(gl::TextureType, int, int, int, int)
gl::ImageIndexIterator::hasNext() const
gl::ImageIndexIterator::next()
gl::ImageUnit::ImageUnit()
gl::ImageUnit::ImageUnit(gl::ImageUnit const&)
gl::ImageUnit::~ImageUnit()
gl::IndexRangeCache::IndexRangeCache()
gl::IndexRangeCache::addRange(unsigned int, unsigned long, unsigned long, bool, gl::IndexRange const&)
gl::IndexRangeCache::clear()
gl::IndexRangeCache::findRange(unsigned int, unsigned long, unsigned long, bool, gl::IndexRange*) const
gl::IndexRangeCache::invalidateRange(unsigned long, unsigned long)
gl::IndexRangeCache::~IndexRangeCache()
gl::InfoLog::InfoLog()
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char [10]>(char const (&) [10])
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char [12]>(char const (&) [12])
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char [159]>(char const (&) [159])
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char [22]>(char const (&) [22])
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char [24]>(char const (&) [24])
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char [28]>(char const (&) [28])
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char [31]>(char const (&) [31])
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char [32]>(char const (&) [32])
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char [34]>(char const (&) [34])
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char [37]>(char const (&) [37])
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char [40]>(char const (&) [40])
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char [41]>(char const (&) [41])
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char [42]>(char const (&) [42])
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char [45]>(char const (&) [45])
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char [46]>(char const (&) [46])
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char [50]>(char const (&) [50])
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char [52]>(char const (&) [52])
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char [56]>(char const (&) [56])
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char [57]>(char const (&) [57])
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char [58]>(char const (&) [58])
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char [62]>(char const (&) [62])
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char [63]>(char const (&) [63])
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char [65]>(char const (&) [65])
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char [67]>(char const (&) [67])
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char [68]>(char const (&) [68])
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char [69]>(char const (&) [69])
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char [71]>(char const (&) [71])
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char [73]>(char const (&) [73])
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char [75]>(char const (&) [75])
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char [85]>(char const (&) [85])
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char [94]>(char const (&) [94])
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char [96]>(char const (&) [96])
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char [99]>(char const (&) [99])
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char const*>(char const* const&)
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <char*>(char* const&)
gl::InfoLog::StreamHelper gl::InfoLog::operator<< <std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
gl::InfoLog::~InfoLog()
gl::InitMinimumTextureCapsMap(gl::Version const&, gl::Extensions const&, gl::TextureCapsMap*)
gl::InitializeDebugAnnotations(gl::DebugAnnotator*)
gl::InsertEventMarkerEXT(int, char const*)
gl::InsertEventMarkerEXTContextANGLE(void*, int, char const*)
gl::InterfaceBlock::InterfaceBlock()
gl::InterfaceBlock::InterfaceBlock(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, unsigned int, int)
gl::InterfaceBlock::mappedNameWithArrayIndex() const
gl::InterfaceBlock::nameWithArrayIndex() const
gl::InterfaceBlock::~InterfaceBlock()
gl::InterfaceBlockLinker::addShaderBlocks(gl::ShaderType, std::__1::vector<sh::InterfaceBlock, std::__1::allocator<sh::InterfaceBlock> > const*)
gl::InterfaceBlockLinker::defineInterfaceBlock(std::__1::function<bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long*)> const&, std::__1::function<bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockMemberInfo*)> const&, sh::InterfaceBlock const&, gl::ShaderType) const
gl::InterfaceBlockLinker::linkBlocks(std::__1::function<bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long*)> const&, std::__1::function<bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockMemberInfo*)> const&) const
gl::InterfaceBlockLinker::~InterfaceBlockLinker()
gl::InternalFormat::computeCompressedImageSize(gl::Extents const&, unsigned int*) const
gl::InternalFormat::computeDepthPitch(int, int, unsigned int, unsigned int*) const
gl::InternalFormat::computePackUnpackEndByte(unsigned int, gl::Extents const&, gl::PixelStoreStateBase const&, bool, unsigned int*) const
gl::InternalFormat::computePixelBytes(unsigned int) const
gl::InternalFormat::computeRowPitch(unsigned int, int, int, int, unsigned int*) const
gl::InternalFormat::computeSkipBytes(unsigned int, unsigned int, unsigned int, gl::PixelStoreStateBase const&, bool, unsigned int*) const
gl::InternalFormat::getReadPixelsFormat() const
gl::InternalFormat::getReadPixelsType(gl::Version const&) const
gl::InternalFormat::isLUMA() const
gl::InternalFormat::isRequiredRenderbufferFormat(gl::Version const&) const
gl::InvalidateFramebuffer(unsigned int, int, unsigned int const*)
gl::InvalidateFramebufferContextANGLE(void*, unsigned int, int, unsigned int const*)
gl::InvalidateSubFramebuffer(unsigned int, int, unsigned int const*, int, int, int, int)
gl::InvalidateSubFramebufferContextANGLE(void*, unsigned int, int, unsigned int const*, int, int, int, int)
gl::IsActiveInterfaceBlock(sh::InterfaceBlock const&)
gl::IsAtomicCounterType(unsigned int)
gl::IsBuffer(unsigned int)
gl::IsBufferContextANGLE(void*, unsigned int)
gl::IsCubeMapFaceTarget(gl::TextureTarget)
gl::IsETC2EACFormat(unsigned int)
gl::IsEnabled(unsigned int)
gl::IsEnabledContextANGLE(void*, unsigned int)
gl::IsFenceNV(unsigned int)
gl::IsFenceNVContextANGLE(void*, unsigned int)
gl::IsFramebuffer(unsigned int)
gl::IsFramebufferContextANGLE(void*, unsigned int)
gl::IsFramebufferOES(unsigned int)
gl::IsFramebufferOESContextANGLE(void*, unsigned int)
gl::IsImageType(unsigned int)
gl::IsLightModelTwoSided(gl::GLES1State const*)
gl::IsLineMode(gl::PrimitiveMode)
gl::IsMatrixType(unsigned int)
gl::IsMultisampled(gl::TextureType)
gl::IsOpaqueType(unsigned int)
gl::IsPathCHROMIUM(unsigned int)
gl::IsPathCHROMIUMContextANGLE(void*, unsigned int)
gl::IsProgram(unsigned int)
gl::IsProgramContextANGLE(void*, unsigned int)
gl::IsProgramPipeline(unsigned int)
gl::IsProgramPipelineContextANGLE(void*, unsigned int)
gl::IsQuery(unsigned int)
gl::IsQueryContextANGLE(void*, unsigned int)
gl::IsQueryEXT(unsigned int)
gl::IsQueryEXTContextANGLE(void*, unsigned int)
gl::IsRenderbuffer(unsigned int)
gl::IsRenderbufferContextANGLE(void*, unsigned int)
gl::IsRenderbufferOES(unsigned int)
gl::IsRenderbufferOESContextANGLE(void*, unsigned int)
gl::IsSampler(unsigned int)
gl::IsSamplerContextANGLE(void*, unsigned int)
gl::IsSamplerType(unsigned int)
gl::IsShader(unsigned int)
gl::IsShaderContextANGLE(void*, unsigned int)
gl::IsSync(__GLsync*)
gl::IsSyncContextANGLE(void*, __GLsync*)
gl::IsTexture(unsigned int)
gl::IsTextureContextANGLE(void*, unsigned int)
gl::IsTransformFeedback(unsigned int)
gl::IsTransformFeedbackContextANGLE(void*, unsigned int)
gl::IsValidES3CopyTexImageCombination(gl::InternalFormat const&, gl::InternalFormat const&, unsigned int)
gl::IsVertexArray(unsigned int)
gl::IsVertexArrayContextANGLE(void*, unsigned int)
gl::IsVertexArrayOES(unsigned int)
gl::IsVertexArrayOESContextANGLE(void*, unsigned int)
gl::LabeledObject::~LabeledObject()
gl::LightModelf(unsigned int, float)
gl::LightModelfContextANGLE(void*, unsigned int, float)
gl::LightModelfv(unsigned int, float const*)
gl::LightModelfvContextANGLE(void*, unsigned int, float const*)
gl::LightModelx(unsigned int, int)
gl::LightModelxContextANGLE(void*, unsigned int, int)
gl::LightModelxv(unsigned int, int const*)
gl::LightModelxvContextANGLE(void*, unsigned int, int const*)
gl::LightParameter gl::FromGLenum<gl::LightParameter>(unsigned int)
gl::Lightf(unsigned int, unsigned int, float)
gl::LightfContextANGLE(void*, unsigned int, unsigned int, float)
gl::Lightfv(unsigned int, unsigned int, float const*)
gl::LightfvContextANGLE(void*, unsigned int, unsigned int, float const*)
gl::Lightx(unsigned int, unsigned int, int)
gl::LightxContextANGLE(void*, unsigned int, unsigned int, int)
gl::Lightxv(unsigned int, unsigned int, int const*)
gl::LightxvContextANGLE(void*, unsigned int, unsigned int, int const*)
gl::Limitations::Limitations()
gl::LineWidth(float)
gl::LineWidthContextANGLE(void*, float)
gl::LineWidthx(int)
gl::LineWidthxContextANGLE(void*, int)
gl::LinkProgram(unsigned int)
gl::LinkProgramContextANGLE(void*, unsigned int)
gl::LinkedUniform::LinkedUniform()
gl::LinkedUniform::LinkedUniform(gl::LinkedUniform const&)
gl::LinkedUniform::LinkedUniform(unsigned int, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > const&, int, int, int, int, sh::BlockMemberInfo const&)
gl::LinkedUniform::getElementComponents() const
gl::LinkedUniform::isAtomicCounter() const
gl::LinkedUniform::isImage() const
gl::LinkedUniform::isSampler() const
gl::LinkedUniform::operator=(gl::LinkedUniform const&)
gl::LinkedUniform::~LinkedUniform()
gl::LoadIdentity()
gl::LoadIdentityContextANGLE(void*)
gl::LoadMatrixf(float const*)
gl::LoadMatrixfContextANGLE(void*, float const*)
gl::LoadMatrixx(int const*)
gl::LoadMatrixxContextANGLE(void*, int const*)
gl::LoadPaletteFromModelViewMatrixOES()
gl::LoadPaletteFromModelViewMatrixOESContextANGLE(void*)
gl::LogLinkMismatch(gl::InfoLog&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char const*, gl::LinkMismatchError, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, gl::ShaderType, gl::ShaderType)
gl::LogMessage::LogMessage(char const*, int, int)
gl::LogMessage::getMessage() const
gl::LogMessage::getSeverity() const
gl::LogMessage::~LogMessage()
gl::LogicOp(unsigned int)
gl::LogicOpContextANGLE(void*, unsigned int)
gl::LogicalOperation gl::FromGLenum<gl::LogicalOperation>(unsigned int)
gl::MapBufferOES(unsigned int, unsigned int)
gl::MapBufferOESContextANGLE(void*, unsigned int, unsigned int)
gl::MapBufferRange(unsigned int, long, long, unsigned int)
gl::MapBufferRangeContextANGLE(void*, unsigned int, long, long, unsigned int)
gl::MapBufferRangeEXT(unsigned int, long, long, unsigned int)
gl::MapBufferRangeEXTContextANGLE(void*, unsigned int, long, long, unsigned int)
gl::MaterialParameter gl::FromGLenum<gl::MaterialParameter>(unsigned int)
gl::Materialf(unsigned int, unsigned int, float)
gl::MaterialfContextANGLE(void*, unsigned int, unsigned int, float)
gl::Materialfv(unsigned int, unsigned int, float const*)
gl::MaterialfvContextANGLE(void*, unsigned int, unsigned int, float const*)
gl::Materialx(unsigned int, unsigned int, int)
gl::MaterialxContextANGLE(void*, unsigned int, unsigned int, int)
gl::Materialxv(unsigned int, unsigned int, int const*)
gl::MaterialxvContextANGLE(void*, unsigned int, unsigned int, int const*)
gl::MatrixIndexPointerOES(int, unsigned int, int, void const*)
gl::MatrixIndexPointerOESContextANGLE(void*, int, unsigned int, int, void const*)
gl::MatrixLoadIdentityCHROMIUM(unsigned int)
gl::MatrixLoadIdentityCHROMIUMContextANGLE(void*, unsigned int)
gl::MatrixLoadfCHROMIUM(unsigned int, float const*)
gl::MatrixLoadfCHROMIUMContextANGLE(void*, unsigned int, float const*)
gl::MatrixMode(unsigned int)
gl::MatrixModeContextANGLE(void*, unsigned int)
gl::MatrixRegisterCount(unsigned int, bool)
gl::MatrixType gl::FromGLenum<gl::MatrixType>(unsigned int)
gl::MaxShaderCompilerThreadsKHR(unsigned int)
gl::MaxShaderCompilerThreadsKHRContextANGLE(void*, unsigned int)
gl::MemoryBarrier(unsigned int)
gl::MemoryBarrierByRegion(unsigned int)
gl::MemoryBarrierByRegionContextANGLE(void*, unsigned int)
gl::MemoryBarrierContextANGLE(void*, unsigned int)
gl::MemoryProgramCache::ComputeHash(gl::Context const*, gl::Program const*, std::__1::array<unsigned char, 20ul>*)
gl::MemoryProgramCache::Deserialize(gl::Context const*, gl::Program const*, gl::ProgramState*, unsigned char const*, unsigned long, gl::InfoLog&)
gl::MemoryProgramCache::MemoryProgramCache(egl::BlobCache&)
gl::MemoryProgramCache::Serialize(gl::Context const*, gl::Program const*, angle::MemoryBuffer*)
gl::MemoryProgramCache::clear()
gl::MemoryProgramCache::entryCount() const
gl::MemoryProgramCache::getAt(unsigned long, std::__1::array<unsigned char, 20ul> const**, egl::BlobCache::Value*)
gl::MemoryProgramCache::getProgram(gl::Context const*, gl::Program const*, gl::ProgramState*, std::__1::array<unsigned char, 20ul>*)
gl::MemoryProgramCache::maxSize() const
gl::MemoryProgramCache::putBinary(std::__1::array<unsigned char, 20ul> const&, unsigned char const*, unsigned long)
gl::MemoryProgramCache::putProgram(std::__1::array<unsigned char, 20ul> const&, gl::Context const*, gl::Program const*)
gl::MemoryProgramCache::resize(unsigned long)
gl::MemoryProgramCache::size() const
gl::MemoryProgramCache::trim(unsigned long)
gl::MemoryProgramCache::~MemoryProgramCache()
gl::MultMatrixf(float const*)
gl::MultMatrixfContextANGLE(void*, float const*)
gl::MultMatrixx(int const*)
gl::MultMatrixxContextANGLE(void*, int const*)
gl::MultiTexCoord4f(unsigned int, float, float, float, float)
gl::MultiTexCoord4fContextANGLE(void*, unsigned int, float, float, float, float)
gl::MultiTexCoord4x(unsigned int, int, int, int, int)
gl::MultiTexCoord4xContextANGLE(void*, unsigned int, int, int, int, int)
gl::NeverSupported(gl::Version const&, gl::Extensions const&)
gl::NonCubeTextureTypeToTarget(gl::TextureType)
gl::Normal3f(float, float, float)
gl::Normal3fContextANGLE(void*, float, float, float)
gl::Normal3x(int, int, int)
gl::Normal3xContextANGLE(void*, int, int, int)
gl::NormalPointer(unsigned int, int, void const*)
gl::NormalPointerContextANGLE(void*, unsigned int, int, void const*)
gl::ObjectLabelKHR(unsigned int, unsigned int, int, char const*)
gl::ObjectLabelKHRContextANGLE(void*, unsigned int, unsigned int, int, char const*)
gl::ObjectPtrLabelKHR(void const*, int, char const*)
gl::ObjectPtrLabelKHRContextANGLE(void*, void const*, int, char const*)
gl::OffsetBindingPointer<gl::Buffer>::set(gl::Context const*, gl::Buffer*)
gl::OffsetBindingPointer<gl::Buffer>::~OffsetBindingPointer()
gl::Orthof(float, float, float, float, float, float)
gl::OrthofContextANGLE(void*, float, float, float, float, float, float)
gl::Orthox(int, int, int, int, int, int)
gl::OrthoxContextANGLE(void*, int, int, int, int, int, int)
gl::PackedVarying::fullName() const
gl::ParamToVertexArrayType(unsigned int)
gl::ParamsBase::TypeInfo
gl::ParseArrayIndex(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long*)
gl::ParseResourceName(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >*)
gl::Path::Path(rx::PathImpl*)
gl::Path::setCommands(int, unsigned char const*, int, unsigned int, void const*)
gl::Path::setEndCaps(unsigned int)
gl::Path::setJoinStyle(unsigned int)
gl::Path::setMiterLimit(float)
gl::Path::setStrokeBound(float)
gl::Path::setStrokeWidth(float)
gl::Path::~Path()
gl::PathCommandsCHROMIUM(unsigned int, int, unsigned char const*, int, unsigned int, void const*)
gl::PathCommandsCHROMIUMContextANGLE(void*, unsigned int, int, unsigned char const*, int, unsigned int, void const*)
gl::PathManager::PathManager()
gl::PathManager::createPaths(rx::GLImplFactory*, int, unsigned int*)
gl::PathManager::deletePaths(unsigned int, int)
gl::PathManager::getPath(unsigned int) const
gl::PathManager::hasPath(unsigned int) const
gl::PathManager::reset(gl::Context const*)
gl::PathManager::~PathManager()
gl::PathParameterfCHROMIUM(unsigned int, unsigned int, float)
gl::PathParameterfCHROMIUMContextANGLE(void*, unsigned int, unsigned int, float)
gl::PathParameteriCHROMIUM(unsigned int, unsigned int, int)
gl::PathParameteriCHROMIUMContextANGLE(void*, unsigned int, unsigned int, int)
gl::PathStencilFuncCHROMIUM(unsigned int, int, unsigned int)
gl::PathStencilFuncCHROMIUMContextANGLE(void*, unsigned int, int, unsigned int)
gl::PauseTransformFeedback()
gl::PauseTransformFeedbackContextANGLE(void*)
gl::PixelStorei(unsigned int, int)
gl::PixelStoreiContextANGLE(void*, unsigned int, int)
gl::PointParameter gl::FromGLenum<gl::PointParameter>(unsigned int)
gl::PointParameterf(unsigned int, float)
gl::PointParameterfContextANGLE(void*, unsigned int, float)
gl::PointParameterfv(unsigned int, float const*)
gl::PointParameterfvContextANGLE(void*, unsigned int, float const*)
gl::PointParameterx(unsigned int, int)
gl::PointParameterxContextANGLE(void*, unsigned int, int)
gl::PointParameterxv(unsigned int, int const*)
gl::PointParameterxvContextANGLE(void*, unsigned int, int const*)
gl::PointSize(float)
gl::PointSizeContextANGLE(void*, float)
gl::PointSizePointerOES(unsigned int, int, void const*)
gl::PointSizePointerOESContextANGLE(void*, unsigned int, int, void const*)
gl::PointSizex(int)
gl::PointSizexContextANGLE(void*, int)
gl::PolygonOffset(float, float)
gl::PolygonOffsetContextANGLE(void*, float, float)
gl::PolygonOffsetx(int, int)
gl::PolygonOffsetxContextANGLE(void*, int, int)
gl::PopDebugGroupKHR()
gl::PopDebugGroupKHRContextANGLE(void*)
gl::PopGroupMarkerEXT()
gl::PopGroupMarkerEXTContextANGLE(void*)
gl::PopMatrix()
gl::PopMatrixContextANGLE(void*)
gl::PrimitiveMode gl::FromGLenum<gl::PrimitiveMode>(unsigned int)
gl::Program::LinkValidateVariablesBase(sh::ShaderVariable const&, sh::ShaderVariable const&, bool, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
gl::Program::LinkingState::~LinkingState()
gl::Program::Program(rx::GLImplFactory*, gl::ShaderProgramManager*, unsigned int)
gl::Program::attachShader(gl::Shader*)
gl::Program::bindAttributeLocation(unsigned int, char const*)
gl::Program::bindFragmentInputLocation(int, char const*)
gl::Program::bindFragmentOutputIndex(unsigned int, char const*)
gl::Program::bindFragmentOutputLocation(unsigned int, char const*)
gl::Program::bindUniformBlock(unsigned int, unsigned int)
gl::Program::bindUniformLocation(unsigned int, char const*)
gl::Program::deleteSelf(gl::Context const*)
gl::Program::detachShader(gl::Context const*, gl::Shader*)
gl::Program::flagForDeletion()
gl::Program::gatherTransformFeedbackVaryings(std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, gl::ProgramVaryingRef, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, gl::ProgramVaryingRef> > > const&)
gl::Program::getActiveAttribute(unsigned int, int, int*, int*, unsigned int*, char*) const
gl::Program::getActiveAttributeCount() const
gl::Program::getActiveAttributeMaxLength() const
gl::Program::getActiveBufferVariableCount() const
gl::Program::getActiveOutputVariables() const
gl::Program::getActiveShaderStorageBlockMaxNameLength() const
gl::Program::getActiveShaderStorageBlockName(unsigned int, int, int*, char*) const
gl::Program::getActiveUniform(unsigned int, int, int*, int*, unsigned int*, char*) const
gl::Program::getActiveUniformBlockMaxNameLength() const
gl::Program::getActiveUniformBlockName(unsigned int, int, int*, char*) const
gl::Program::getActiveUniformCount() const
gl::Program::getActiveUniformMaxLength() const
gl::Program::getAttachedShader(gl::ShaderType) const
gl::Program::getAttachedShaders(int, int*, unsigned int*) const
gl::Program::getAttachedShadersCount() const
gl::Program::getAttributeBindings() const
gl::Program::getAttributeLocation(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
gl::Program::getAttributes() const
gl::Program::getAttributesMask() const
gl::Program::getAttributesTypeMask() const
gl::Program::getBinaryLength(gl::Context const*) const
gl::Program::getBinaryRetrievableHint() const
gl::Program::getBufferVariableByIndex(unsigned int) const
gl::Program::getBufferVariableResourceName(unsigned int, int, int*, char*) const
gl::Program::getComputeShaderLocalSize() const
gl::Program::getDrawBufferTypeMask() const
gl::Program::getFragDataIndex(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
gl::Program::getFragDataLocation(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
gl::Program::getFragmentInputBindingInfo(int) const
gl::Program::getFragmentInputBindings() const
gl::Program::getGeometryShaderInputPrimitiveType() const
gl::Program::getGeometryShaderInvocations() const
gl::Program::getGeometryShaderMaxVertices() const
gl::Program::getGeometryShaderOutputPrimitiveType() const
gl::Program::getInfoLog(int, int*, char*) const
gl::Program::getInfoLogLength() const
gl::Program::getInputResource(unsigned int) const
gl::Program::getInputResourceIndex(char const*) const
gl::Program::getInputResourceName(unsigned int, int, int*, char*) const
gl::Program::getLabel() const
gl::Program::getMergedVaryings() const
gl::Program::getNumViews() const
gl::Program::getOutputResource(unsigned int) const
gl::Program::getOutputResourceCount() const
gl::Program::getOutputResourceIndex(char const*) const
gl::Program::getOutputResourceName(unsigned int, int, int*, char*) const
gl::Program::getRefCount() const
gl::Program::getShaderStorageBlockBinding(unsigned int) const
gl::Program::getShaderStorageBlockByIndex(unsigned int) const
gl::Program::getShaderStorageBlockIndex(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
gl::Program::getTransformFeedbackBufferMode() const
gl::Program::getTransformFeedbackStrides() const
gl::Program::getTransformFeedbackVarying(unsigned int, int, int*, int*, unsigned int*, char*) const
gl::Program::getTransformFeedbackVaryingCount() const
gl::Program::getTransformFeedbackVaryingMaxLength() const
gl::Program::getTransformFeedbackVaryingResource(unsigned int) const
gl::Program::getTransformFeedbackVaryingResourceIndex(char const*) const
gl::Program::getUniformBlockBinding(unsigned int) const
gl::Program::getUniformBlockByIndex(unsigned int) const
gl::Program::getUniformBlockIndex(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
gl::Program::getUniformByLocation(int) const
gl::Program::getUniformIndex(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
gl::Program::getUniformLocation(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
gl::Program::getUniformLocationBindings() const
gl::Program::getUniformResourceName(unsigned int, int, int*, char*) const
gl::Program::getUniformfv(gl::Context const*, int, float*) const
gl::Program::getUniformiv(gl::Context const*, int, int*) const
gl::Program::getUniformuiv(gl::Context const*, int, unsigned int*) const
gl::Program::id() const
gl::Program::isAttribLocationActive(unsigned long) const
gl::Program::isFlaggedForDeletion() const
gl::Program::isLinking() const
gl::Program::isSeparable() const
gl::Program::isValidUniformLocation(int) const
gl::Program::isValidated() const
gl::Program::link(gl::Context const*)
gl::Program::linkAtomicCounterBuffers()
gl::Program::linkAttributes(gl::Caps const&, gl::InfoLog&)
gl::Program::linkInterfaceBlocks(gl::Caps const&, gl::Version const&, bool, gl::InfoLog&, unsigned int*)
gl::Program::linkOutputVariables(gl::Caps const&, gl::Extensions const&, gl::Version const&, unsigned int, unsigned int)
gl::Program::linkSamplerAndImageBindings(unsigned int*)
gl::Program::linkValidateBuiltInVaryings(gl::InfoLog&) const
gl::Program::linkValidateFragmentInputBindings(gl::InfoLog&) const
gl::Program::linkValidateGlobalNames(gl::InfoLog&) const
gl::Program::linkValidateShaderInterfaceMatching(gl::Shader*, gl::Shader*, gl::InfoLog&) const
gl::Program::linkValidateShaders(gl::InfoLog&)
gl::Program::linkValidateTransformFeedback(gl::Version const&, gl::InfoLog&, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, gl::ProgramVaryingRef, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, gl::ProgramVaryingRef> > > const&, gl::Caps const&) const
gl::Program::loadBinary(gl::Context const*, unsigned int, void const*, int)
gl::Program::onDestroy(gl::Context const*)
gl::Program::pathFragmentInputGen(int, unsigned int, int, float const*)
gl::Program::resolveLinkImpl(gl::Context const*)
gl::Program::samplesFromTexture(gl::State const&, unsigned int) const
gl::Program::saveBinary(gl::Context const*, unsigned int*, void*, int, int*) const
gl::Program::setBinaryRetrievableHint(bool)
gl::Program::setLabel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
gl::Program::setSeparable(bool)
gl::Program::setTransformFeedbackVaryings(int, char const* const*, unsigned int)
gl::Program::setUniform1fv(int, int, float const*)
gl::Program::setUniform1iv(int, int, int const*)
gl::Program::setUniform1uiv(int, int, unsigned int const*)
gl::Program::setUniform2fv(int, int, float const*)
gl::Program::setUniform2iv(int, int, int const*)
gl::Program::setUniform2uiv(int, int, unsigned int const*)
gl::Program::setUniform3fv(int, int, float const*)
gl::Program::setUniform3iv(int, int, int const*)
gl::Program::setUniform3uiv(int, int, unsigned int const*)
gl::Program::setUniform4fv(int, int, float const*)
gl::Program::setUniform4iv(int, int, int const*)
gl::Program::setUniform4uiv(int, int, unsigned int const*)
gl::Program::setUniformMatrix2fv(int, int, unsigned char, float const*)
gl::Program::setUniformMatrix2x3fv(int, int, unsigned char, float const*)
gl::Program::setUniformMatrix2x4fv(int, int, unsigned char, float const*)
gl::Program::setUniformMatrix3fv(int, int, unsigned char, float const*)
gl::Program::setUniformMatrix3x2fv(int, int, unsigned char, float const*)
gl::Program::setUniformMatrix3x4fv(int, int, unsigned char, float const*)
gl::Program::setUniformMatrix4fv(int, int, unsigned char, float const*)
gl::Program::setUniformMatrix4x2fv(int, int, unsigned char, float const*)
gl::Program::setUniformMatrix4x3fv(int, int, unsigned char, float const*)
gl::Program::setUniformValuesFromBindingQualifiers()
gl::Program::syncState(gl::Context const*)
gl::Program::unlink()
gl::Program::updateSamplerUniform(gl::VariableLocation const&, int, int const*)
gl::Program::validate(gl::Caps const&)
gl::Program::validateSamplersImpl(gl::InfoLog*, gl::Caps const&)
gl::Program::~Program()
gl::ProgramBinary(unsigned int, unsigned int, void const*, int)
gl::ProgramBinaryContextANGLE(void*, unsigned int, unsigned int, void const*, int)
gl::ProgramBinaryOES(unsigned int, unsigned int, void const*, int)
gl::ProgramBinaryOESContextANGLE(void*, unsigned int, unsigned int, void const*, int)
gl::ProgramBindings::begin() const
gl::ProgramBindings::end() const
gl::ProgramBindings::getBinding(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
gl::ProgramParameteri(unsigned int, unsigned int, int)
gl::ProgramParameteriContextANGLE(void*, unsigned int, unsigned int, int)
gl::ProgramPathFragmentInputGenCHROMIUM(unsigned int, int, unsigned int, int, float const*)
gl::ProgramPathFragmentInputGenCHROMIUMContextANGLE(void*, unsigned int, int, unsigned int, int, float const*)
gl::ProgramPipeline* gl::TypedResourceManager<gl::ProgramPipeline, gl::HandleAllocator, gl::ProgramPipelineManager>::checkObjectAllocationImpl<>(rx::GLImplFactory*, unsigned int)
gl::ProgramPipeline::ProgramPipeline(rx::GLImplFactory*, unsigned int)
gl::ProgramPipeline::getLabel() const
gl::ProgramPipeline::onDestroy(gl::Context const*)
gl::ProgramPipeline::setLabel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
gl::ProgramPipeline::~ProgramPipeline()
gl::ProgramPipelineManager::AllocateNewObject(rx::GLImplFactory*, unsigned int)
gl::ProgramPipelineManager::checkProgramPipelineAllocation(rx::GLImplFactory*, unsigned int)
gl::ProgramPipelineManager::createProgramPipeline()
gl::ProgramPipelineManager::getProgramPipeline(unsigned int) const
gl::ProgramPipelineManager::~ProgramPipelineManager()
gl::ProgramState::getAttachedShader(gl::ShaderType) const
gl::ProgramState::getBufferVariableIndexFromName(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
gl::ProgramState::getImageIndexFromUniformIndex(unsigned int) const
gl::ProgramState::getSamplerIndexFromUniformIndex(unsigned int) const
gl::ProgramState::getUniformIndexFromName(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
gl::ProgramState::isImageUniformIndex(unsigned int) const
gl::ProgramState::isSamplerUniformIndex(unsigned int) const
gl::ProgramState::updateActiveImages()
gl::ProgramState::updateActiveSamplers()
gl::ProgramState::updateTransformFeedbackStrides()
gl::ProgramState::~ProgramState()
gl::ProgramUniform1f(unsigned int, int, float)
gl::ProgramUniform1fContextANGLE(void*, unsigned int, int, float)
gl::ProgramUniform1fv(unsigned int, int, int, float const*)
gl::ProgramUniform1fvContextANGLE(void*, unsigned int, int, int, float const*)
gl::ProgramUniform1i(unsigned int, int, int)
gl::ProgramUniform1iContextANGLE(void*, unsigned int, int, int)
gl::ProgramUniform1iv(unsigned int, int, int, int const*)
gl::ProgramUniform1ivContextANGLE(void*, unsigned int, int, int, int const*)
gl::ProgramUniform1ui(unsigned int, int, unsigned int)
gl::ProgramUniform1uiContextANGLE(void*, unsigned int, int, unsigned int)
gl::ProgramUniform1uiv(unsigned int, int, int, unsigned int const*)
gl::ProgramUniform1uivContextANGLE(void*, unsigned int, int, int, unsigned int const*)
gl::ProgramUniform2f(unsigned int, int, float, float)
gl::ProgramUniform2fContextANGLE(void*, unsigned int, int, float, float)
gl::ProgramUniform2fv(unsigned int, int, int, float const*)
gl::ProgramUniform2fvContextANGLE(void*, unsigned int, int, int, float const*)
gl::ProgramUniform2i(unsigned int, int, int, int)
gl::ProgramUniform2iContextANGLE(void*, unsigned int, int, int, int)
gl::ProgramUniform2iv(unsigned int, int, int, int const*)
gl::ProgramUniform2ivContextANGLE(void*, unsigned int, int, int, int const*)
gl::ProgramUniform2ui(unsigned int, int, unsigned int, unsigned int)
gl::ProgramUniform2uiContextANGLE(void*, unsigned int, int, unsigned int, unsigned int)
gl::ProgramUniform2uiv(unsigned int, int, int, unsigned int const*)
gl::ProgramUniform2uivContextANGLE(void*, unsigned int, int, int, unsigned int const*)
gl::ProgramUniform3f(unsigned int, int, float, float, float)
gl::ProgramUniform3fContextANGLE(void*, unsigned int, int, float, float, float)
gl::ProgramUniform3fv(unsigned int, int, int, float const*)
gl::ProgramUniform3fvContextANGLE(void*, unsigned int, int, int, float const*)
gl::ProgramUniform3i(unsigned int, int, int, int, int)
gl::ProgramUniform3iContextANGLE(void*, unsigned int, int, int, int, int)
gl::ProgramUniform3iv(unsigned int, int, int, int const*)
gl::ProgramUniform3ivContextANGLE(void*, unsigned int, int, int, int const*)
gl::ProgramUniform3ui(unsigned int, int, unsigned int, unsigned int, unsigned int)
gl::ProgramUniform3uiContextANGLE(void*, unsigned int, int, unsigned int, unsigned int, unsigned int)
gl::ProgramUniform3uiv(unsigned int, int, int, unsigned int const*)
gl::ProgramUniform3uivContextANGLE(void*, unsigned int, int, int, unsigned int const*)
gl::ProgramUniform4f(unsigned int, int, float, float, float, float)
gl::ProgramUniform4fContextANGLE(void*, unsigned int, int, float, float, float, float)
gl::ProgramUniform4fv(unsigned int, int, int, float const*)
gl::ProgramUniform4fvContextANGLE(void*, unsigned int, int, int, float const*)
gl::ProgramUniform4i(unsigned int, int, int, int, int, int)
gl::ProgramUniform4iContextANGLE(void*, unsigned int, int, int, int, int, int)
gl::ProgramUniform4iv(unsigned int, int, int, int const*)
gl::ProgramUniform4ivContextANGLE(void*, unsigned int, int, int, int const*)
gl::ProgramUniform4ui(unsigned int, int, unsigned int, unsigned int, unsigned int, unsigned int)
gl::ProgramUniform4uiContextANGLE(void*, unsigned int, int, unsigned int, unsigned int, unsigned int, unsigned int)
gl::ProgramUniform4uiv(unsigned int, int, int, unsigned int const*)
gl::ProgramUniform4uivContextANGLE(void*, unsigned int, int, int, unsigned int const*)
gl::ProgramUniformMatrix2fv(unsigned int, int, int, unsigned char, float const*)
gl::ProgramUniformMatrix2fvContextANGLE(void*, unsigned int, int, int, unsigned char, float const*)
gl::ProgramUniformMatrix2x3fv(unsigned int, int, int, unsigned char, float const*)
gl::ProgramUniformMatrix2x3fvContextANGLE(void*, unsigned int, int, int, unsigned char, float const*)
gl::ProgramUniformMatrix2x4fv(unsigned int, int, int, unsigned char, float const*)
gl::ProgramUniformMatrix2x4fvContextANGLE(void*, unsigned int, int, int, unsigned char, float const*)
gl::ProgramUniformMatrix3fv(unsigned int, int, int, unsigned char, float const*)
gl::ProgramUniformMatrix3fvContextANGLE(void*, unsigned int, int, int, unsigned char, float const*)
gl::ProgramUniformMatrix3x2fv(unsigned int, int, int, unsigned char, float const*)
gl::ProgramUniformMatrix3x2fvContextANGLE(void*, unsigned int, int, int, unsigned char, float const*)
gl::ProgramUniformMatrix3x4fv(unsigned int, int, int, unsigned char, float const*)
gl::ProgramUniformMatrix3x4fvContextANGLE(void*, unsigned int, int, int, unsigned char, float const*)
gl::ProgramUniformMatrix4fv(unsigned int, int, int, unsigned char, float const*)
gl::ProgramUniformMatrix4fvContextANGLE(void*, unsigned int, int, int, unsigned char, float const*)
gl::ProgramUniformMatrix4x2fv(unsigned int, int, int, unsigned char, float const*)
gl::ProgramUniformMatrix4x2fvContextANGLE(void*, unsigned int, int, int, unsigned char, float const*)
gl::ProgramUniformMatrix4x3fv(unsigned int, int, int, unsigned char, float const*)
gl::ProgramUniformMatrix4x3fvContextANGLE(void*, unsigned int, int, int, unsigned char, float const*)
gl::PushDebugGroupKHR(unsigned int, unsigned int, int, char const*)
gl::PushDebugGroupKHRContextANGLE(void*, unsigned int, unsigned int, int, char const*)
gl::PushGroupMarkerEXT(int, char const*)
gl::PushGroupMarkerEXTContextANGLE(void*, int, char const*)
gl::PushMatrix()
gl::PushMatrixContextANGLE(void*)
gl::Query::Query(rx::QueryImpl*, unsigned int)
gl::Query::begin(gl::Context const*)
gl::Query::end(gl::Context const*)
gl::Query::getImplementation()
gl::Query::getLabel() const
gl::Query::getResult(gl::Context const*, int*)
gl::Query::getResult(gl::Context const*, long*)
gl::Query::getResult(gl::Context const*, unsigned int*)
gl::Query::getResult(gl::Context const*, unsigned long*)
gl::Query::getType() const
gl::Query::isResultAvailable(gl::Context const*, bool*)
gl::Query::onDestroy(gl::Context const*)
gl::Query::queryCounter(gl::Context const*)
gl::Query::setLabel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
gl::Query::~Query()
gl::QueryActiveUniformBlockiv(gl::Program const*, unsigned int, unsigned int, int*)
gl::QueryBufferParameteri64v(gl::Buffer const*, unsigned int, long*)
gl::QueryBufferParameteriv(gl::Buffer const*, unsigned int, int*)
gl::QueryBufferPointerv(gl::Buffer const*, unsigned int, void**)
gl::QueryCounterEXT(unsigned int, unsigned int)
gl::QueryCounterEXTContextANGLE(void*, unsigned int, unsigned int)
gl::QueryFramebufferAttachmentParameteriv(gl::Context const*, gl::Framebuffer const*, unsigned int, unsigned int, int*)
gl::QueryFramebufferParameteriv(gl::Framebuffer const*, unsigned int, int*)
gl::QueryInternalFormativ(gl::TextureCaps const&, unsigned int, int, int*)
gl::QueryMatrixxOES(int*, int*)
gl::QueryMatrixxOESContextANGLE(void*, int*, int*)
gl::QueryProgramInterfaceiv(gl::Program const*, unsigned int, unsigned int, int*)
gl::QueryProgramResourceIndex(gl::Program const*, unsigned int, char const*)
gl::QueryProgramResourceLocation(gl::Program const*, unsigned int, char const*)
gl::QueryProgramResourceName(gl::Program const*, unsigned int, unsigned int, int, int*, char*)
gl::QueryProgramResourceiv(gl::Program const*, unsigned int, unsigned int, int, unsigned int const*, int, int*, int*)
gl::QueryProgramiv(gl::Context const*, gl::Program const*, unsigned int, int*)
gl::QueryRenderbufferiv(gl::Context const*, gl::Renderbuffer const*, unsigned int, int*)
gl::QuerySamplerParameterfv(gl::Sampler const*, unsigned int, float*)
gl::QuerySamplerParameteriv(gl::Sampler const*, unsigned int, int*)
gl::QueryShaderiv(gl::Shader*, unsigned int, int*)
gl::QuerySynciv(gl::Context const*, gl::Sync const*, unsigned int, int, int*, int*)
gl::QueryTexLevelParameterfv(gl::Texture const*, gl::TextureTarget, int, unsigned int, float*)
gl::QueryTexLevelParameteriv(gl::Texture const*, gl::TextureTarget, int, unsigned int, int*)
gl::QueryTexParameterfv(gl::Texture const*, unsigned int, float*)
gl::QueryTexParameteriv(gl::Texture const*, unsigned int, int*)
gl::QueryType gl::FromGLenum<gl::QueryType>(unsigned int)
gl::QueryVertexAttribIiv(gl::VertexAttribute const&, gl::VertexBinding const&, gl::VertexAttribCurrentValueData const&, unsigned int, int*)
gl::QueryVertexAttribIuiv(gl::VertexAttribute const&, gl::VertexBinding const&, gl::VertexAttribCurrentValueData const&, unsigned int, unsigned int*)
gl::QueryVertexAttribPointerv(gl::VertexAttribute const&, unsigned int, void**)
gl::QueryVertexAttribfv(gl::VertexAttribute const&, gl::VertexBinding const&, gl::VertexAttribCurrentValueData const&, unsigned int, float*)
gl::QueryVertexAttribiv(gl::VertexAttribute const&, gl::VertexBinding const&, gl::VertexAttribCurrentValueData const&, unsigned int, int*)
gl::RasterizerState::RasterizerState()
gl::ReadBuffer(unsigned int)
gl::ReadBufferContextANGLE(void*, unsigned int)
gl::ReadPixels(int, int, int, int, unsigned int, unsigned int, void*)
gl::ReadPixelsContextANGLE(void*, int, int, int, int, unsigned int, unsigned int, void*)
gl::ReadPixelsRobustANGLE(int, int, int, int, unsigned int, unsigned int, int, int*, int*, int*, void*)
gl::ReadPixelsRobustANGLEContextANGLE(void*, int, int, int, int, unsigned int, unsigned int, int, int*, int*, int*, void*)
gl::ReadnPixelsEXT(int, int, int, int, unsigned int, unsigned int, int, void*)
gl::ReadnPixelsEXTContextANGLE(void*, int, int, int, int, unsigned int, unsigned int, int, void*)
gl::ReadnPixelsRobustANGLE(int, int, int, int, unsigned int, unsigned int, int, int*, int*, int*, void*)
gl::ReadnPixelsRobustANGLEContextANGLE(void*, int, int, int, int, unsigned int, unsigned int, int, int*, int*, int*, void*)
gl::Rectangle::removeReversal() const
gl::RefCountObject::~RefCountObject()
gl::ReleaseShaderCompiler()
gl::ReleaseShaderCompilerContextANGLE(void*)
gl::Renderbuffer* gl::TypedResourceManager<gl::Renderbuffer, gl::HandleAllocator, gl::RenderbufferManager>::checkObjectAllocationImpl<>(rx::GLImplFactory*, unsigned int)
gl::Renderbuffer::Renderbuffer(rx::GLImplFactory*, unsigned int)
gl::Renderbuffer::getAlphaSize() const
gl::Renderbuffer::getAttachmentFormat(unsigned int, gl::ImageIndex const&) const
gl::Renderbuffer::getAttachmentImpl() const
gl::Renderbuffer::getAttachmentSamples(gl::ImageIndex const&) const
gl::Renderbuffer::getAttachmentSize(gl::ImageIndex const&) const
gl::Renderbuffer::getBlueSize() const
gl::Renderbuffer::getDepthSize() const
gl::Renderbuffer::getFormat() const
gl::Renderbuffer::getGreenSize() const
gl::Renderbuffer::getHeight() const
gl::Renderbuffer::getId() const
gl::Renderbuffer::getImplementation() const
gl::Renderbuffer::getLabel() const
gl::Renderbuffer::getRedSize() const
gl::Renderbuffer::getSamples() const
gl::Renderbuffer::getStencilSize() const
gl::Renderbuffer::getWidth() const
gl::Renderbuffer::initState(gl::ImageIndex const&) const
gl::Renderbuffer::isRenderable(gl::Context const*, unsigned int, gl::ImageIndex const&) const
gl::Renderbuffer::onAttach(gl::Context const*)
gl::Renderbuffer::onDestroy(gl::Context const*)
gl::Renderbuffer::onDetach(gl::Context const*)
gl::Renderbuffer::setInitState(gl::ImageIndex const&, gl::InitState)
gl::Renderbuffer::setLabel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
gl::Renderbuffer::setStorage(gl::Context const*, unsigned int, unsigned long, unsigned long)
gl::Renderbuffer::setStorageEGLImageTarget(gl::Context const*, egl::Image*)
gl::Renderbuffer::setStorageMultisample(gl::Context const*, unsigned long, unsigned int, unsigned long, unsigned long)
gl::Renderbuffer::~Renderbuffer()
gl::RenderbufferManager::AllocateNewObject(rx::GLImplFactory*, unsigned int)
gl::RenderbufferManager::checkRenderbufferAllocation(rx::GLImplFactory*, unsigned int)
gl::RenderbufferManager::createRenderbuffer()
gl::RenderbufferManager::getRenderbuffer(unsigned int) const
gl::RenderbufferManager::~RenderbufferManager()
gl::RenderbufferState::getFormat() const
gl::RenderbufferState::getHeight() const
gl::RenderbufferState::getWidth() const
gl::RenderbufferStorage(unsigned int, unsigned int, int, int)
gl::RenderbufferStorageContextANGLE(void*, unsigned int, unsigned int, int, int)
gl::RenderbufferStorageMultisample(unsigned int, int, unsigned int, int, int)
gl::RenderbufferStorageMultisampleANGLE(unsigned int, int, unsigned int, int, int)
gl::RenderbufferStorageMultisampleANGLEContextANGLE(void*, unsigned int, int, unsigned int, int, int)
gl::RenderbufferStorageMultisampleContextANGLE(void*, unsigned int, int, unsigned int, int, int)
gl::RenderbufferStorageOES(unsigned int, unsigned int, int, int)
gl::RenderbufferStorageOESContextANGLE(void*, unsigned int, unsigned int, int, int)
gl::RequestExtensionANGLE(char const*)
gl::RequestExtensionANGLEContextANGLE(void*, char const*)
gl::ResourceManagerBase<gl::HandleAllocator>::ResourceManagerBase()
gl::ResourceManagerBase<gl::HandleAllocator>::addRef()
gl::ResourceManagerBase<gl::HandleAllocator>::release(gl::Context const*)
gl::ResourceManagerBase<gl::HandleAllocator>::~ResourceManagerBase()
gl::ResourceManagerBase<gl::HandleRangeAllocator>::addRef()
gl::ResourceManagerBase<gl::HandleRangeAllocator>::release(gl::Context const*)
gl::ResourceManagerBase<gl::HandleRangeAllocator>::~ResourceManagerBase()
gl::ResourceMap<gl::Buffer>::erase(unsigned int, gl::Buffer**)
gl::ResourceMap<gl::FenceNV>::erase(unsigned int, gl::FenceNV**)
gl::ResourceMap<gl::Framebuffer>::erase(unsigned int, gl::Framebuffer**)
gl::ResourceMap<gl::Path>::erase(unsigned int, gl::Path**)
gl::ResourceMap<gl::Program>::erase(unsigned int, gl::Program**)
gl::ResourceMap<gl::ProgramPipeline>::erase(unsigned int, gl::ProgramPipeline**)
gl::ResourceMap<gl::Query>::erase(unsigned int, gl::Query**)
gl::ResourceMap<gl::Renderbuffer>::erase(unsigned int, gl::Renderbuffer**)
gl::ResourceMap<gl::Sampler>::erase(unsigned int, gl::Sampler**)
gl::ResourceMap<gl::Shader>::erase(unsigned int, gl::Shader**)
gl::ResourceMap<gl::Sync>::erase(unsigned int, gl::Sync**)
gl::ResourceMap<gl::Texture>::erase(unsigned int, gl::Texture**)
gl::ResourceMap<gl::TransformFeedback>::erase(unsigned int, gl::TransformFeedback**)
gl::ResourceMap<gl::VertexArray>::erase(unsigned int, gl::VertexArray**)
gl::ResumeTransformFeedback()
gl::ResumeTransformFeedbackContextANGLE(void*)
gl::Rotatef(float, float, float, float)
gl::RotatefContextANGLE(void*, float, float, float, float)
gl::Rotatex(int, int, int, int)
gl::RotatexContextANGLE(void*, int, int, int, int)
gl::SampleCoverage(float, unsigned char)
gl::SampleCoverageContextANGLE(void*, float, unsigned char)
gl::SampleCoveragex(int, unsigned char)
gl::SampleCoveragexContextANGLE(void*, int, unsigned char)
gl::SampleMaski(unsigned int, unsigned int)
gl::SampleMaskiContextANGLE(void*, unsigned int, unsigned int)
gl::Sampler* gl::TypedResourceManager<gl::Sampler, gl::HandleAllocator, gl::SamplerManager>::checkObjectAllocationImpl<>(rx::GLImplFactory*, unsigned int)
gl::Sampler::Sampler(rx::GLImplFactory*, unsigned int)
gl::Sampler::getCompareFunc() const
gl::Sampler::getCompareMode() const
gl::Sampler::getImplementation() const
gl::Sampler::getLabel() const
gl::Sampler::getMagFilter() const
gl::Sampler::getMaxAnisotropy() const
gl::Sampler::getMaxLod() const
gl::Sampler::getMinFilter() const
gl::Sampler::getMinLod() const
gl::Sampler::getSRGBDecode() const
gl::Sampler::getSamplerState() const
gl::Sampler::getWrapR() const
gl::Sampler::getWrapS() const
gl::Sampler::getWrapT() const
gl::Sampler::onDestroy(gl::Context const*)
gl::Sampler::setCompareFunc(unsigned int)
gl::Sampler::setCompareMode(unsigned int)
gl::Sampler::setLabel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
gl::Sampler::setMagFilter(unsigned int)
gl::Sampler::setMaxAnisotropy(float)
gl::Sampler::setMaxLod(float)
gl::Sampler::setMinFilter(unsigned int)
gl::Sampler::setMinLod(float)
gl::Sampler::setSRGBDecode(unsigned int)
gl::Sampler::setWrapR(unsigned int)
gl::Sampler::setWrapS(unsigned int)
gl::Sampler::setWrapT(unsigned int)
gl::Sampler::syncState(gl::Context const*)
gl::Sampler::~Sampler()
gl::SamplerBinding::SamplerBinding(gl::SamplerBinding const&)
gl::SamplerBinding::SamplerBinding(gl::TextureType, unsigned long, bool)
gl::SamplerBinding::~SamplerBinding()
gl::SamplerManager::AllocateNewObject(rx::GLImplFactory*, unsigned int)
gl::SamplerManager::checkSamplerAllocation(rx::GLImplFactory*, unsigned int)
gl::SamplerManager::createSampler()
gl::SamplerManager::getSampler(unsigned int) const
gl::SamplerManager::isSampler(unsigned int) const
gl::SamplerManager::~SamplerManager()
gl::SamplerParameterIivRobustANGLE(unsigned int, unsigned int, int, int const*)
gl::SamplerParameterIivRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, int const*)
gl::SamplerParameterIuivRobustANGLE(unsigned int, unsigned int, int, unsigned int const*)
gl::SamplerParameterIuivRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, unsigned int const*)
gl::SamplerParameterf(unsigned int, unsigned int, float)
gl::SamplerParameterfContextANGLE(void*, unsigned int, unsigned int, float)
gl::SamplerParameterfv(unsigned int, unsigned int, float const*)
gl::SamplerParameterfvContextANGLE(void*, unsigned int, unsigned int, float const*)
gl::SamplerParameterfvRobustANGLE(unsigned int, unsigned int, int, float const*)
gl::SamplerParameterfvRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, float const*)
gl::SamplerParameteri(unsigned int, unsigned int, int)
gl::SamplerParameteriContextANGLE(void*, unsigned int, unsigned int, int)
gl::SamplerParameteriv(unsigned int, unsigned int, int const*)
gl::SamplerParameterivContextANGLE(void*, unsigned int, unsigned int, int const*)
gl::SamplerParameterivRobustANGLE(unsigned int, unsigned int, int, int const*)
gl::SamplerParameterivRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, int const*)
gl::SamplerState::CreateDefaultForTarget(gl::TextureType)
gl::SamplerState::SamplerState()
gl::SamplerState::SamplerState(gl::SamplerState const&)
gl::SamplerState::setCompareFunc(unsigned int)
gl::SamplerState::setCompareMode(unsigned int)
gl::SamplerState::setMagFilter(unsigned int)
gl::SamplerState::setMaxAnisotropy(float)
gl::SamplerState::setMaxLod(float)
gl::SamplerState::setMinFilter(unsigned int)
gl::SamplerState::setMinLod(float)
gl::SamplerState::setSRGBDecode(unsigned int)
gl::SamplerState::setWrapR(unsigned int)
gl::SamplerState::setWrapS(unsigned int)
gl::SamplerState::setWrapT(unsigned int)
gl::SamplerTypeToTextureType(unsigned int)
gl::Scalef(float, float, float)
gl::ScalefContextANGLE(void*, float, float, float)
gl::Scalex(int, int, int)
gl::ScalexContextANGLE(void*, int, int, int)
gl::Scissor(int, int, int, int)
gl::ScissorContextANGLE(void*, int, int, int, int)
gl::SetFenceNV(unsigned int, unsigned int)
gl::SetFenceNVContextANGLE(void*, unsigned int, unsigned int)
gl::SetFogParameters(gl::GLES1State*, unsigned int, float const*)
gl::SetFramebufferParameteri(gl::Context const*, gl::Framebuffer*, unsigned int, int)
gl::SetLightModelParameters(gl::GLES1State*, unsigned int, float const*)
gl::SetLightParameters(gl::GLES1State*, unsigned int, gl::LightParameter, float const*)
gl::SetMaterialParameters(gl::GLES1State*, unsigned int, gl::MaterialParameter, float const*)
gl::SetPointParameter(gl::GLES1State*, gl::PointParameter, float const*)
gl::SetPointSize(gl::GLES1State*, float)
gl::SetProgramParameteri(gl::Program*, unsigned int, int)
gl::SetRobustLengthParam(int*, int)
gl::SetSamplerParameterf(gl::Context*, gl::Sampler*, unsigned int, float)
gl::SetSamplerParameterfv(gl::Context*, gl::Sampler*, unsigned int, float const*)
gl::SetSamplerParameteri(gl::Context*, gl::Sampler*, unsigned int, int)
gl::SetSamplerParameteriv(gl::Context*, gl::Sampler*, unsigned int, int const*)
gl::SetTexParameterf(gl::Context*, gl::Texture*, unsigned int, float)
gl::SetTexParameterfv(gl::Context*, gl::Texture*, unsigned int, float const*)
gl::SetTexParameteri(gl::Context*, gl::Texture*, unsigned int, int)
gl::SetTexParameteriv(gl::Context*, gl::Texture*, unsigned int, int const*)
gl::SetTextureEnv(unsigned int, gl::GLES1State*, gl::TextureEnvTarget, gl::TextureEnvParameter, float const*)
gl::ShCompilerInstance::ShCompilerInstance()
gl::ShCompilerInstance::getBuiltinResourcesString()
gl::ShCompilerInstance::getHandle()
gl::ShCompilerInstance::operator=(gl::ShCompilerInstance&&)
gl::ShCompilerInstance::~ShCompilerInstance()
gl::ShadeModel(unsigned int)
gl::ShadeModelContextANGLE(void*, unsigned int)
gl::Shader::Shader(gl::ShaderProgramManager*, rx::GLImplFactory*, gl::Limitations const&, gl::ShaderType, unsigned int)
gl::Shader::addRef()
gl::Shader::compile(gl::Context const*)
gl::Shader::flagForDeletion()
gl::Shader::getActiveAttributes()
gl::Shader::getActiveOutputVariables()
gl::Shader::getAllAttributes()
gl::Shader::getCompilerResourcesString() const
gl::Shader::getGeometryShaderInputPrimitiveType()
gl::Shader::getGeometryShaderInvocations()
gl::Shader::getGeometryShaderMaxVertices()
gl::Shader::getGeometryShaderOutputPrimitiveType()
gl::Shader::getHandle() const
gl::Shader::getInfoLog(int, int*, char*)
gl::Shader::getInfoLogLength()
gl::Shader::getInputVaryings()
gl::Shader::getLabel() const
gl::Shader::getNumViews()
gl::Shader::getOutputVaryings()
gl::Shader::getRefCount() const
gl::Shader::getShaderStorageBlocks()
gl::Shader::getShaderVersion()
gl::Shader::getSource(int, int*, char*) const
gl::Shader::getSourceLength() const
gl::Shader::getTransformFeedbackVaryingMappedName(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
gl::Shader::getTranslatedSource()
gl::Shader::getTranslatedSourceWithDebugInfo(int, int*, char*)
gl::Shader::getTranslatedSourceWithDebugInfoLength()
gl::Shader::getUniformBlocks()
gl::Shader::getUniforms()
gl::Shader::getWorkGroupSize()
gl::Shader::isCompiled()
gl::Shader::isCompleted()
gl::Shader::isFlaggedForDeletion() const
gl::Shader::onDestroy(gl::Context const*)
gl::Shader::release(gl::Context const*)
gl::Shader::resolveCompile()
gl::Shader::setLabel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
gl::Shader::setSource(int, char const* const*, int const*)
gl::Shader::~Shader()
gl::ShaderBinary(int, unsigned int const*, unsigned int, void const*, int)
gl::ShaderBinaryContextANGLE(void*, int, unsigned int const*, unsigned int, void const*, int)
gl::ShaderProgramManager::ShaderProgramManager()
gl::ShaderProgramManager::createProgram(rx::GLImplFactory*)
gl::ShaderProgramManager::createShader(rx::GLImplFactory*, gl::Limitations const&, gl::ShaderType)
gl::ShaderProgramManager::deleteProgram(gl::Context const*, unsigned int)
gl::ShaderProgramManager::deleteShader(gl::Context const*, unsigned int)
gl::ShaderProgramManager::getShader(unsigned int) const
gl::ShaderProgramManager::reset(gl::Context const*)
gl::ShaderProgramManager::~ShaderProgramManager()
gl::ShaderSource(unsigned int, int, char const* const*, int const*)
gl::ShaderSourceContextANGLE(void*, unsigned int, int, char const* const*, int const*)
gl::ShaderState::~ShaderState()
gl::ShaderStorageBlockLinker::ShaderStorageBlockLinker(std::__1::vector<gl::InterfaceBlock, std::__1::allocator<gl::InterfaceBlock> >*, std::__1::vector<gl::BufferVariable, std::__1::allocator<gl::BufferVariable> >*)
gl::ShaderStorageBlockLinker::defineBlockMemberImpl(sh::ShaderVariable const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, sh::BlockMemberInfo const&, int, gl::ShaderType) const
gl::ShaderStorageBlockLinker::getCurrentBlockMemberIndex() const
gl::ShaderStorageBlockLinker::updateBlockMemberActiveImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, gl::ShaderType, bool) const
gl::ShaderStorageBlockLinker::~ShaderStorageBlockLinker()
gl::ShaderType gl::FromGLenum<gl::ShaderType>(unsigned int)
gl::ShaderVariableBuffer::ShaderVariableBuffer()
gl::ShaderVariableBuffer::ShaderVariableBuffer(gl::ShaderVariableBuffer const&)
gl::ShaderVariableBuffer::numActiveVariables() const
gl::ShaderVariableBuffer::~ShaderVariableBuffer()
gl::ShadingModel gl::FromGLenum<gl::ShadingModel>(unsigned int)
gl::SizedFloatRGBASupport(gl::Version const&, gl::Extensions const&)
gl::SizedFloatRGBATextureAttachmentSupport(gl::Version const&, gl::Extensions const&)
gl::SizedFloatRGBSupport(gl::Version const&, gl::Extensions const&)
gl::SizedFloatRGSupport(gl::Version const&, gl::Extensions const&)
gl::SizedHalfFloatFilterSupport(gl::Version const&, gl::Extensions const&)
gl::SizedHalfFloatRGBARenderbufferSupport(gl::Version const&, gl::Extensions const&)
gl::SizedHalfFloatRGBATextureAttachmentSupport(gl::Version const&, gl::Extensions const&)
gl::SizedHalfFloatRGBRenderbufferSupport(gl::Version const&, gl::Extensions const&)
gl::SizedHalfFloatRGBTextureAttachmentSupport(gl::Version const&, gl::Extensions const&)
gl::SizedHalfFloatRGRenderbufferSupport(gl::Version const&, gl::Extensions const&)
gl::SizedHalfFloatRGSupport(gl::Version const&, gl::Extensions const&)
gl::SizedHalfFloatRGTextureAttachmentSupport(gl::Version const&, gl::Extensions const&)
gl::SizedHalfFloatSupport(gl::Version const&, gl::Extensions const&)
gl::SizedRGSupport(gl::Version const&, gl::Extensions const&)
gl::State::State(bool, bool, bool, bool, bool)
gl::State::areClientArraysEnabled() const
gl::State::bindVertexBuffer(gl::Context const*, unsigned int, gl::Buffer*, long, int)
gl::State::clearUnclearedActiveTextures(gl::Context const*)
gl::State::detachBuffer(gl::Context const*, gl::Buffer const*)
gl::State::detachProgramPipeline(gl::Context const*, unsigned int)
gl::State::detachRenderbuffer(gl::Context const*, unsigned int)
gl::State::detachSampler(gl::Context const*, unsigned int)
gl::State::detachTexture(gl::Context const*, angle::PackedEnumMap<gl::TextureType, gl::BindingPointer<gl::Texture>, 8ul> const&, unsigned int)
gl::State::getActiveQuery(gl::QueryType) const
gl::State::getActiveQueryId(gl::QueryType) const
gl::State::getActiveSampler() const
gl::State::getAndResetDirtyCurrentValues() const
gl::State::getBlendColor() const
gl::State::getBlendState() const
gl::State::getBooleani_v(unsigned int, unsigned int, unsigned char*)
gl::State::getBooleanv(unsigned int, unsigned char*)
gl::State::getCoverageModulation() const
gl::State::getCurrentRenderbuffer() const
gl::State::getDebug()
gl::State::getDebug() const
gl::State::getDepthStencilState() const
gl::State::getEnableFeature(unsigned int) const
gl::State::getFarPlane() const
gl::State::getFloatv(unsigned int, float*)
gl::State::getFramebufferSRGB() const
gl::State::getImageUnit(unsigned long) const
gl::State::getIndexedAtomicCounterBuffer(unsigned long) const
gl::State::getIndexedShaderStorageBuffer(unsigned long) const
gl::State::getIndexedUniformBuffer(unsigned long) const
gl::State::getInteger64i_v(unsigned int, unsigned int, long*)
gl::State::getIntegeri_v(unsigned int, unsigned int, int*)
gl::State::getIntegerv(gl::Context const*, unsigned int, int*)
gl::State::getLineWidth() const
gl::State::getMaxSampleMaskWords() const
gl::State::getMaxShaderCompilerThreads() const
gl::State::getNearPlane() const
gl::State::getPackState() const
gl::State::getPathRenderingMatrix(unsigned int) const
gl::State::getPathStencilFunc() const
gl::State::getPathStencilMask() const
gl::State::getPathStencilRef() const
gl::State::getPointerv(gl::Context const*, unsigned int, void**) const
gl::State::getRasterizerState() const
gl::State::getReadFramebuffer() const
gl::State::getRenderbufferId() const
gl::State::getSampleCoverageInvert() const
gl::State::getSampleCoverageValue() const
gl::State::getSampleMaskWord(unsigned int) const
gl::State::getSamplerTextureId(unsigned int, gl::TextureType) const
gl::State::getScissor() const
gl::State::getStencilBackRef() const
gl::State::getStencilRef() const
gl::State::getTargetBuffer(gl::BufferBinding) const
gl::State::getTargetFramebuffer(unsigned int) const
gl::State::getTargetTexture(gl::TextureType) const
gl::State::getUnpackState()
gl::State::getUnpackState() const
gl::State::getVertexArrayId() const
gl::State::getVertexAttribCurrentValue(unsigned long) const
gl::State::getVertexAttribCurrentValues() const
gl::State::getViewport() const
gl::State::initialize(gl::Context*)
gl::State::initializeZeroTextures(gl::Context const*, angle::PackedEnumMap<gl::TextureType, gl::BindingPointer<gl::Texture>, 8ul> const&)
gl::State::isBlendEnabled() const
gl::State::isCullFaceEnabled() const
gl::State::isCurrentTransformFeedback(gl::TransformFeedback const*) const
gl::State::isDepthTestEnabled() const
gl::State::isDitherEnabled() const
gl::State::isMultisamplingEnabled() const
gl::State::isPolygonOffsetFillEnabled() const
gl::State::isPrimitiveRestartEnabled() const
gl::State::isQueryActive(gl::Query*) const
gl::State::isQueryActive(gl::QueryType) const
gl::State::isRasterizerDiscardEnabled() const
gl::State::isSampleAlphaToCoverageEnabled() const
gl::State::isSampleAlphaToOneEnabled() const
gl::State::isSampleCoverageEnabled() const
gl::State::isSampleMaskEnabled() const
gl::State::isScissorTestEnabled() const
gl::State::isStencilTestEnabled() const
gl::State::loadPathRenderingMatrix(unsigned int, float const*)
gl::State::onActiveTextureStateChange(unsigned long)
gl::State::onProgramExecutableChange(gl::Context const*, gl::Program*)
gl::State::onUniformBufferStateChange(unsigned long)
gl::State::removeDrawFramebufferBinding(unsigned int)
gl::State::removeReadFramebufferBinding(unsigned int)
gl::State::removeTransformFeedbackBinding(gl::Context const*, unsigned int)
gl::State::removeVertexArrayBinding(gl::Context const*, unsigned int)
gl::State::reset(gl::Context const*)
gl::State::setActiveQuery(gl::Context const*, gl::QueryType, gl::Query*)
gl::State::setActiveSampler(unsigned int)
gl::State::setBlendColor(float, float, float, float)
gl::State::setBlendEquation(unsigned int, unsigned int)
gl::State::setBlendFactors(unsigned int, unsigned int, unsigned int, unsigned int)
gl::State::setBufferBinding(gl::Context const*, gl::BufferBinding, gl::Buffer*)
gl::State::setColorClearValue(float, float, float, float)
gl::State::setColorMask(bool, bool, bool, bool)
gl::State::setCoverageModulation(unsigned int)
gl::State::setCullMode(gl::CullFaceMode)
gl::State::setDepthClearValue(float)
gl::State::setDepthFunc(unsigned int)
gl::State::setDepthMask(bool)
gl::State::setDepthRange(float, float)
gl::State::setDrawFramebufferBinding(gl::Framebuffer*)
gl::State::setEnableFeature(unsigned int, bool)
gl::State::setEnableVertexAttribArray(unsigned int, bool)
gl::State::setFragmentShaderDerivativeHint(unsigned int)
gl::State::setFrontFace(unsigned int)
gl::State::setGenerateMipmapHint(unsigned int)
gl::State::setImageUnit(gl::Context const*, unsigned long, gl::Texture*, int, unsigned char, int, unsigned int, unsigned int)
gl::State::setIndexedBufferBinding(gl::Context const*, gl::BufferBinding, unsigned int, gl::Buffer*, long, long)
gl::State::setLineWidth(float)
gl::State::setMaxShaderCompilerThreads(unsigned int)
gl::State::setObjectDirty(unsigned int)
gl::State::setPackAlignment(int)
gl::State::setPackReverseRowOrder(bool)
gl::State::setPackRowLength(int)
gl::State::setPackSkipPixels(int)
gl::State::setPackSkipRows(int)
gl::State::setPathStencilFunc(unsigned int, int, unsigned int)
gl::State::setPolygonOffsetParams(float, float)
gl::State::setProgram(gl::Context const*, gl::Program*)
gl::State::setProgramPipelineBinding(gl::Context const*, gl::ProgramPipeline*)
gl::State::setReadFramebufferBinding(gl::Framebuffer*)
gl::State::setRenderbufferBinding(gl::Context const*, gl::Renderbuffer*)
gl::State::setSampleCoverageParams(float, bool)
gl::State::setSampleMaskParams(unsigned int, unsigned int)
gl::State::setSamplerBinding(gl::Context const*, unsigned int, gl::Sampler*)
gl::State::setSamplerDirty(unsigned long)
gl::State::setSamplerTexture(gl::Context const*, gl::TextureType, gl::Texture*)
gl::State::setScissorParams(int, int, int, int)
gl::State::setStencilBackOperations(unsigned int, unsigned int, unsigned int)
gl::State::setStencilBackParams(unsigned int, int, unsigned int)
gl::State::setStencilBackWritemask(unsigned int)
gl::State::setStencilClearValue(int)
gl::State::setStencilOperations(unsigned int, unsigned int, unsigned int)
gl::State::setStencilParams(unsigned int, int, unsigned int)
gl::State::setStencilWritemask(unsigned int)
gl::State::setTransformFeedbackBinding(gl::Context const*, gl::TransformFeedback*)
gl::State::setUnpackAlignment(int)
gl::State::setUnpackImageHeight(int)
gl::State::setUnpackRowLength(int)
gl::State::setUnpackSkipImages(int)
gl::State::setUnpackSkipPixels(int)
gl::State::setUnpackSkipRows(int)
gl::State::setVertexArrayBinding(gl::Context const*, gl::VertexArray*)
gl::State::setVertexAttribBinding(gl::Context const*, unsigned int, unsigned int)
gl::State::setVertexAttribDivisor(gl::Context const*, unsigned int, unsigned int)
gl::State::setVertexAttribFormat(unsigned int, int, unsigned int, bool, bool, unsigned int)
gl::State::setVertexAttribPointer(gl::Context const*, unsigned int, gl::Buffer*, int, unsigned int, bool, bool, int, void const*)
gl::State::setVertexAttribf(unsigned int, float const*)
gl::State::setVertexAttribi(unsigned int, int const*)
gl::State::setVertexAttribu(unsigned int, unsigned int const*)
gl::State::setVertexBindingDivisor(unsigned int, unsigned int)
gl::State::setViewportParams(int, int, int, int)
gl::State::syncDirtyObject(gl::Context const*, unsigned int)
gl::State::syncDirtyObjects(gl::Context const*, angle::BitSetT<6ul, unsigned long, unsigned long> const&)
gl::State::syncProgramTextures(gl::Context const*)
gl::State::~State()
gl::StateCache::getBasicDrawStatesErrorImpl(gl::Context*) const
gl::StateCache::initialize(gl::Context*)
gl::StateCache::onGLES1ClientStateChange(gl::Context*)
gl::StateCache::onProgramExecutableChange(gl::Context*)
gl::StateCache::onVertexArrayBindingChange(gl::Context*)
gl::StateCache::onVertexArrayStateChange(gl::Context*)
gl::StencilFillPathCHROMIUM(unsigned int, unsigned int, unsigned int)
gl::StencilFillPathCHROMIUMContextANGLE(void*, unsigned int, unsigned int, unsigned int)
gl::StencilFillPathInstancedCHROMIUM(int, unsigned int, void const*, unsigned int, unsigned int, unsigned int, unsigned int, float const*)
gl::StencilFillPathInstancedCHROMIUMContextANGLE(void*, int, unsigned int, void const*, unsigned int, unsigned int, unsigned int, unsigned int, float const*)
gl::StencilFunc(unsigned int, int, unsigned int)
gl::StencilFuncContextANGLE(void*, unsigned int, int, unsigned int)
gl::StencilFuncSeparate(unsigned int, unsigned int, int, unsigned int)
gl::StencilFuncSeparateContextANGLE(void*, unsigned int, unsigned int, int, unsigned int)
gl::StencilMask(unsigned int)
gl::StencilMaskContextANGLE(void*, unsigned int)
gl::StencilMaskSeparate(unsigned int, unsigned int)
gl::StencilMaskSeparateContextANGLE(void*, unsigned int, unsigned int)
gl::StencilOp(unsigned int, unsigned int, unsigned int)
gl::StencilOpContextANGLE(void*, unsigned int, unsigned int, unsigned int)
gl::StencilOpSeparate(unsigned int, unsigned int, unsigned int, unsigned int)
gl::StencilOpSeparateContextANGLE(void*, unsigned int, unsigned int, unsigned int, unsigned int)
gl::StencilStrokePathCHROMIUM(unsigned int, int, unsigned int)
gl::StencilStrokePathCHROMIUMContextANGLE(void*, unsigned int, int, unsigned int)
gl::StencilStrokePathInstancedCHROMIUM(int, unsigned int, void const*, unsigned int, int, unsigned int, unsigned int, float const*)
gl::StencilStrokePathInstancedCHROMIUMContextANGLE(void*, int, unsigned int, void const*, unsigned int, int, unsigned int, unsigned int, float const*)
gl::StencilThenCoverFillPathCHROMIUM(unsigned int, unsigned int, unsigned int, unsigned int)
gl::StencilThenCoverFillPathCHROMIUMContextANGLE(void*, unsigned int, unsigned int, unsigned int, unsigned int)
gl::StencilThenCoverFillPathInstancedCHROMIUM(int, unsigned int, void const*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, float const*)
gl::StencilThenCoverFillPathInstancedCHROMIUMContextANGLE(void*, int, unsigned int, void const*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, float const*)
gl::StencilThenCoverStrokePathCHROMIUM(unsigned int, int, unsigned int, unsigned int)
gl::StencilThenCoverStrokePathCHROMIUMContextANGLE(void*, unsigned int, int, unsigned int, unsigned int)
gl::StencilThenCoverStrokePathInstancedCHROMIUM(int, unsigned int, void const*, unsigned int, int, unsigned int, unsigned int, unsigned int, float const*)
gl::StencilThenCoverStrokePathInstancedCHROMIUMContextANGLE(void*, int, unsigned int, void const*, unsigned int, int, unsigned int, unsigned int, unsigned int, float const*)
gl::SwizzleState::SwizzleState()
gl::SwizzleState::SwizzleState(unsigned int, unsigned int, unsigned int, unsigned int)
gl::SwizzleState::operator!=(gl::SwizzleState const&) const
gl::SwizzleState::swizzleRequired() const
gl::Sync::Sync(rx::SyncImpl*, unsigned int)
gl::Sync::clientWait(gl::Context const*, unsigned int, unsigned long, unsigned int*)
gl::Sync::getLabel() const
gl::Sync::getStatus(gl::Context const*, int*) const
gl::Sync::onDestroy(gl::Context const*)
gl::Sync::serverWait(gl::Context const*, unsigned int, unsigned long)
gl::Sync::set(gl::Context const*, unsigned int, unsigned int)
gl::Sync::setLabel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
gl::Sync::~Sync()
gl::SyncManager::createSync(rx::GLImplFactory*)
gl::SyncManager::getSync(unsigned int) const
gl::SyncManager::~SyncManager()
gl::TestFenceNV(unsigned int)
gl::TestFenceNVContextANGLE(void*, unsigned int)
gl::TexCoordPointer(int, unsigned int, int, void const*)
gl::TexCoordPointerContextANGLE(void*, int, unsigned int, int, void const*)
gl::TexEnvf(unsigned int, unsigned int, float)
gl::TexEnvfContextANGLE(void*, unsigned int, unsigned int, float)
gl::TexEnvfv(unsigned int, unsigned int, float const*)
gl::TexEnvfvContextANGLE(void*, unsigned int, unsigned int, float const*)
gl::TexEnvi(unsigned int, unsigned int, int)
gl::TexEnviContextANGLE(void*, unsigned int, unsigned int, int)
gl::TexEnviv(unsigned int, unsigned int, int const*)
gl::TexEnvivContextANGLE(void*, unsigned int, unsigned int, int const*)
gl::TexEnvx(unsigned int, unsigned int, int)
gl::TexEnvxContextANGLE(void*, unsigned int, unsigned int, int)
gl::TexEnvxv(unsigned int, unsigned int, int const*)
gl::TexEnvxvContextANGLE(void*, unsigned int, unsigned int, int const*)
gl::TexGenfOES(unsigned int, unsigned int, float)
gl::TexGenfOESContextANGLE(void*, unsigned int, unsigned int, float)
gl::TexGenfvOES(unsigned int, unsigned int, float const*)
gl::TexGenfvOESContextANGLE(void*, unsigned int, unsigned int, float const*)
gl::TexGeniOES(unsigned int, unsigned int, int)
gl::TexGeniOESContextANGLE(void*, unsigned int, unsigned int, int)
gl::TexGenivOES(unsigned int, unsigned int, int const*)
gl::TexGenivOESContextANGLE(void*, unsigned int, unsigned int, int const*)
gl::TexGenxOES(unsigned int, unsigned int, int)
gl::TexGenxOESContextANGLE(void*, unsigned int, unsigned int, int)
gl::TexGenxvOES(unsigned int, unsigned int, int const*)
gl::TexGenxvOESContextANGLE(void*, unsigned int, unsigned int, int const*)
gl::TexImage2D(unsigned int, int, int, int, int, int, unsigned int, unsigned int, void const*)
gl::TexImage2DContextANGLE(void*, unsigned int, int, int, int, int, int, unsigned int, unsigned int, void const*)
gl::TexImage2DRobustANGLE(unsigned int, int, int, int, int, int, unsigned int, unsigned int, int, void const*)
gl::TexImage2DRobustANGLEContextANGLE(void*, unsigned int, int, int, int, int, int, unsigned int, unsigned int, int, void const*)
gl::TexImage3D(unsigned int, int, int, int, int, int, int, unsigned int, unsigned int, void const*)
gl::TexImage3DContextANGLE(void*, unsigned int, int, int, int, int, int, int, unsigned int, unsigned int, void const*)
gl::TexImage3DRobustANGLE(unsigned int, int, int, int, int, int, int, unsigned int, unsigned int, int, void const*)
gl::TexImage3DRobustANGLEContextANGLE(void*, unsigned int, int, int, int, int, int, int, unsigned int, unsigned int, int, void const*)
gl::TexParameterIivRobustANGLE(unsigned int, unsigned int, int, int const*)
gl::TexParameterIivRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, int const*)
gl::TexParameterIuivRobustANGLE(unsigned int, unsigned int, int, unsigned int const*)
gl::TexParameterIuivRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, unsigned int const*)
gl::TexParameterf(unsigned int, unsigned int, float)
gl::TexParameterfContextANGLE(void*, unsigned int, unsigned int, float)
gl::TexParameterfv(unsigned int, unsigned int, float const*)
gl::TexParameterfvContextANGLE(void*, unsigned int, unsigned int, float const*)
gl::TexParameterfvRobustANGLE(unsigned int, unsigned int, int, float const*)
gl::TexParameterfvRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, float const*)
gl::TexParameteri(unsigned int, unsigned int, int)
gl::TexParameteriContextANGLE(void*, unsigned int, unsigned int, int)
gl::TexParameteriv(unsigned int, unsigned int, int const*)
gl::TexParameterivContextANGLE(void*, unsigned int, unsigned int, int const*)
gl::TexParameterivRobustANGLE(unsigned int, unsigned int, int, int const*)
gl::TexParameterivRobustANGLEContextANGLE(void*, unsigned int, unsigned int, int, int const*)
gl::TexParameterx(unsigned int, unsigned int, int)
gl::TexParameterxContextANGLE(void*, unsigned int, unsigned int, int)
gl::TexParameterxv(unsigned int, unsigned int, int const*)
gl::TexParameterxvContextANGLE(void*, unsigned int, unsigned int, int const*)
gl::TexStorage1DEXT(unsigned int, int, unsigned int, int)
gl::TexStorage1DEXTContextANGLE(void*, unsigned int, int, unsigned int, int)
gl::TexStorage2D(unsigned int, int, unsigned int, int, int)
gl::TexStorage2DContextANGLE(void*, unsigned int, int, unsigned int, int, int)
gl::TexStorage2DEXT(unsigned int, int, unsigned int, int, int)
gl::TexStorage2DEXTContextANGLE(void*, unsigned int, int, unsigned int, int, int)
gl::TexStorage2DMultisample(unsigned int, int, unsigned int, int, int, unsigned char)
gl::TexStorage2DMultisampleContextANGLE(void*, unsigned int, int, unsigned int, int, int, unsigned char)
gl::TexStorage3D(unsigned int, int, unsigned int, int, int, int)
gl::TexStorage3DContextANGLE(void*, unsigned int, int, unsigned int, int, int, int)
gl::TexStorage3DEXT(unsigned int, int, unsigned int, int, int, int)
gl::TexStorage3DEXTContextANGLE(void*, unsigned int, int, unsigned int, int, int, int)
gl::TexStorage3DMultisampleOES(unsigned int, int, unsigned int, int, int, int, unsigned char)
gl::TexStorage3DMultisampleOESContextANGLE(void*, unsigned int, int, unsigned int, int, int, int, unsigned char)
gl::TexSubImage2D(unsigned int, int, int, int, int, int, unsigned int, unsigned int, void const*)
gl::TexSubImage2DContextANGLE(void*, unsigned int, int, int, int, int, int, unsigned int, unsigned int, void const*)
gl::TexSubImage2DRobustANGLE(unsigned int, int, int, int, int, int, unsigned int, unsigned int, int, void const*)
gl::TexSubImage2DRobustANGLEContextANGLE(void*, unsigned int, int, int, int, int, int, unsigned int, unsigned int, int, void const*)
gl::TexSubImage3D(unsigned int, int, int, int, int, int, int, int, unsigned int, unsigned int, void const*)
gl::TexSubImage3DContextANGLE(void*, unsigned int, int, int, int, int, int, int, int, unsigned int, unsigned int, void const*)
gl::TexSubImage3DRobustANGLE(unsigned int, int, int, int, int, int, int, int, unsigned int, unsigned int, int, void const*)
gl::TexSubImage3DRobustANGLEContextANGLE(void*, unsigned int, int, int, int, int, int, int, int, unsigned int, unsigned int, int, void const*)
gl::Texture* gl::TypedResourceManager<gl::Texture, gl::HandleAllocator, gl::TextureManager>::checkObjectAllocationImpl<gl::TextureType>(rx::GLImplFactory*, unsigned int, gl::TextureType)
gl::Texture::Texture(rx::GLImplFactory*, unsigned int, gl::TextureType)
gl::Texture::acquireImageFromStream(gl::Context const*, egl::Stream::GLTextureDescription const&)
gl::Texture::bindStream(egl::Stream*)
gl::Texture::bindTexImageFromSurface(gl::Context const*, egl::Surface*)
gl::Texture::copyCompressedTexture(gl::Context const*, gl::Texture const*)
gl::Texture::copyImage(gl::Context const*, gl::TextureTarget, int, gl::Rectangle const&, unsigned int, gl::Framebuffer*)
gl::Texture::copySubImage(gl::Context const*, gl::TextureTarget, int, gl::Offset const&, gl::Rectangle const&, gl::Framebuffer*)
gl::Texture::copySubTexture(gl::Context const*, gl::TextureTarget, int, gl::Offset const&, int, gl::Box const&, bool, bool, bool, gl::Texture*)
gl::Texture::copyTexture(gl::Context const*, gl::TextureTarget, int, unsigned int, unsigned int, int, bool, bool, bool, gl::Texture*)
gl::Texture::ensureInitialized(gl::Context const*)
gl::Texture::ensureSubImageInitialized(gl::Context const*, gl::TextureTarget, unsigned long, gl::Box const&)
gl::Texture::generateMipmap(gl::Context const*)
gl::Texture::getAttachmentFixedSampleLocations(gl::ImageIndex const&) const
gl::Texture::getAttachmentFormat(unsigned int, gl::ImageIndex const&) const
gl::Texture::getAttachmentImpl() const
gl::Texture::getAttachmentSamples(gl::ImageIndex const&) const
gl::Texture::getAttachmentSize(gl::ImageIndex const&) const
gl::Texture::getBaseLevel() const
gl::Texture::getBoundSurface() const
gl::Texture::getCompareFunc() const
gl::Texture::getCompareMode() const
gl::Texture::getCrop() const
gl::Texture::getDepth(gl::TextureTarget, unsigned long) const
gl::Texture::getDepthStencilTextureMode() const
gl::Texture::getFixedSampleLocations(gl::TextureTarget, unsigned long) const
gl::Texture::getFormat(gl::TextureTarget, unsigned long) const
gl::Texture::getGenerateMipmapHint() const
gl::Texture::getHeight(gl::TextureTarget, unsigned long) const
gl::Texture::getId() const
gl::Texture::getImmutableFormat() const
gl::Texture::getImmutableLevels() const
gl::Texture::getLabel() const
gl::Texture::getMagFilter() const
gl::Texture::getMaxAnisotropy() const
gl::Texture::getMaxLevel() const
gl::Texture::getMaxLod() const
gl::Texture::getMinFilter() const
gl::Texture::getMinLod() const
gl::Texture::getMipmapMaxLevel() const
gl::Texture::getSRGBDecode() const
gl::Texture::getSamples(gl::TextureTarget, unsigned long) const
gl::Texture::getSwizzleAlpha() const
gl::Texture::getSwizzleBlue() const
gl::Texture::getSwizzleGreen() const
gl::Texture::getSwizzleRed() const
gl::Texture::getTextureState() const
gl::Texture::getUsage() const
gl::Texture::getWidth(gl::TextureTarget, unsigned long) const
gl::Texture::getWrapR() const
gl::Texture::getWrapS() const
gl::Texture::getWrapT() const
gl::Texture::initState(gl::ImageIndex const&) const
gl::Texture::isMipmapComplete() const
gl::Texture::isRenderable(gl::Context const*, unsigned int, gl::ImageIndex const&) const
gl::Texture::isSamplerComplete(gl::Context const*, gl::Sampler const*)
gl::Texture::onAttach(gl::Context const*)
gl::Texture::onDestroy(gl::Context const*)
gl::Texture::onDetach(gl::Context const*)
gl::Texture::onSubjectStateChange(gl::Context const*, unsigned long, angle::SubjectMessage)
gl::Texture::releaseImageFromStream(gl::Context const*)
gl::Texture::releaseStream()
gl::Texture::releaseTexImageFromSurface(gl::Context const*)
gl::Texture::releaseTexImageInternal(gl::Context const*)
gl::Texture::setBaseLevel(gl::Context const*, unsigned int)
gl::Texture::setCompareFunc(unsigned int)
gl::Texture::setCompareMode(unsigned int)
gl::Texture::setCompressedImage(gl::Context const*, gl::PixelUnpackState const&, gl::TextureTarget, int, unsigned int, gl::Extents const&, unsigned long, unsigned char const*)
gl::Texture::setCompressedSubImage(gl::Context const*, gl::PixelUnpackState const&, gl::TextureTarget, int, gl::Box const&, unsigned int, unsigned long, unsigned char const*)
gl::Texture::setCrop(gl::Rectangle const&)
gl::Texture::setDepthStencilTextureMode(unsigned int)
gl::Texture::setEGLImageTarget(gl::Context const*, gl::TextureType, egl::Image*)
gl::Texture::setGenerateMipmapHint(unsigned int)
gl::Texture::setImage(gl::Context const*, gl::PixelUnpackState const&, gl::TextureTarget, int, unsigned int, gl::Extents const&, unsigned int, unsigned int, unsigned char const*)
gl::Texture::setInitState(gl::ImageIndex const&, gl::InitState)
gl::Texture::setLabel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
gl::Texture::setMagFilter(unsigned int)
gl::Texture::setMaxAnisotropy(float)
gl::Texture::setMaxLevel(unsigned int)
gl::Texture::setMaxLod(float)
gl::Texture::setMinFilter(unsigned int)
gl::Texture::setMinLod(float)
gl::Texture::setSRGBDecode(unsigned int)
gl::Texture::setStorage(gl::Context const*, gl::TextureType, int, unsigned int, gl::Extents const&)
gl::Texture::setStorageMultisample(gl::Context const*, gl::TextureType, int, int, gl::Extents const&, bool)
gl::Texture::setSubImage(gl::Context const*, gl::PixelUnpackState const&, gl::Buffer*, gl::TextureTarget, int, gl::Box const&, unsigned int, unsigned int, unsigned char const*)
gl::Texture::setSwizzleAlpha(unsigned int)
gl::Texture::setSwizzleBlue(unsigned int)
gl::Texture::setSwizzleGreen(unsigned int)
gl::Texture::setSwizzleRed(unsigned int)
gl::Texture::setUsage(unsigned int)
gl::Texture::setWrapR(unsigned int)
gl::Texture::setWrapS(unsigned int)
gl::Texture::setWrapT(unsigned int)
gl::Texture::signalDirty(gl::Context const*, gl::InitState)
gl::Texture::syncState(gl::Context const*)
gl::Texture::~Texture()
gl::TextureCaps::TextureCaps()
gl::TextureCaps::TextureCaps(gl::TextureCaps const&)
gl::TextureCaps::getMaxSamples() const
gl::TextureCaps::~TextureCaps()
gl::TextureCapsMap::TextureCapsMap()
gl::TextureCapsMap::clear()
gl::TextureCapsMap::get(unsigned int) const
gl::TextureCapsMap::insert(unsigned int, gl::TextureCaps const&)
gl::TextureCapsMap::set(angle::FormatID, gl::TextureCaps const&)
gl::TextureCapsMap::~TextureCapsMap()
gl::TextureCombine gl::FromGLenum<gl::TextureCombine>(unsigned int)
gl::TextureCoordF::TextureCoordF(float, float, float, float)
gl::TextureEnvMode gl::FromGLenum<gl::TextureEnvMode>(unsigned int)
gl::TextureEnvParameter gl::FromGLenum<gl::TextureEnvParameter>(unsigned int)
gl::TextureEnvTarget gl::FromGLenum<gl::TextureEnvTarget>(unsigned int)
gl::TextureManager::AllocateNewObject(rx::GLImplFactory*, unsigned int, gl::TextureType)
gl::TextureManager::createTexture()
gl::TextureManager::signalAllTexturesDirty(gl::Context const*) const
gl::TextureManager::~TextureManager()
gl::TextureOp gl::FromGLenum<gl::TextureOp>(unsigned int)
gl::TextureSrc gl::FromGLenum<gl::TextureSrc>(unsigned int)
gl::TextureState::TextureState(gl::TextureType)
gl::TextureState::clearImageDesc(gl::TextureTarget, unsigned long)
gl::TextureState::computeLevelCompleteness(gl::TextureTarget, unsigned long) const
gl::TextureState::computeMipmapCompleteness() const
gl::TextureState::computeSamplerCompleteness(gl::SamplerState const&, gl::ContextState const&) const
gl::TextureState::getBaseLevelDesc() const
gl::TextureState::getEffectiveBaseLevel() const
gl::TextureState::getEffectiveMaxLevel() const
gl::TextureState::getImageDesc(gl::ImageIndex const&) const
gl::TextureState::getImageDesc(gl::TextureTarget, unsigned long) const
gl::TextureState::getMipmapMaxLevel() const
gl::TextureState::isCubeComplete() const
gl::TextureState::setImageDescChain(unsigned int, unsigned int, gl::Extents, gl::Format const&, gl::InitState)
gl::TextureTarget gl::FromGLenum<gl::TextureTarget>(unsigned int)
gl::TextureTargetToType(gl::TextureTarget)
gl::TextureType gl::FromGLenum<gl::TextureType>(unsigned int)
gl::ToGLenum(gl::AlphaTestFunc)
gl::ToGLenum(gl::BufferBinding)
gl::ToGLenum(gl::BufferUsage)
gl::ToGLenum(gl::CullFaceMode)
gl::ToGLenum(gl::FogMode)
gl::ToGLenum(gl::HintSetting)
gl::ToGLenum(gl::LogicalOperation)
gl::ToGLenum(gl::MatrixType)
gl::ToGLenum(gl::PrimitiveMode)
gl::ToGLenum(gl::QueryType)
gl::ToGLenum(gl::ShaderType)
gl::ToGLenum(gl::ShadingModel)
gl::ToGLenum(gl::TextureCombine)
gl::ToGLenum(gl::TextureEnvMode)
gl::ToGLenum(gl::TextureOp)
gl::ToGLenum(gl::TextureSrc)
gl::ToGLenum(gl::TextureTarget)
gl::ToGLenum(gl::TextureType)
gl::Trace(int, char const*)
gl::TransformFeedback::TransformFeedback(rx::GLImplFactory*, unsigned int, gl::Caps const&)
gl::TransformFeedback::begin(gl::Context const*, gl::PrimitiveMode, gl::Program*)
gl::TransformFeedback::bindIndexedBuffer(gl::Context const*, unsigned long, gl::Buffer*, unsigned long, unsigned long)
gl::TransformFeedback::buffersBoundForOtherUse() const
gl::TransformFeedback::checkBufferSpaceForDraw(int, int) const
gl::TransformFeedback::detachBuffer(gl::Context const*, unsigned int)
gl::TransformFeedback::end(gl::Context const*)
gl::TransformFeedback::getImplementation()
gl::TransformFeedback::getIndexedBuffer(unsigned long) const
gl::TransformFeedback::getIndexedBufferCount() const
gl::TransformFeedback::getLabel() const
gl::TransformFeedback::getPrimitiveMode() const
gl::TransformFeedback::hasBoundProgram(unsigned int) const
gl::TransformFeedback::isPaused() const
gl::TransformFeedback::onBindingChanged(gl::Context const*, bool)
gl::TransformFeedback::onDestroy(gl::Context const*)
gl::TransformFeedback::onVerticesDrawn(gl::Context const*, int, int)
gl::TransformFeedback::pause()
gl::TransformFeedback::resume()
gl::TransformFeedback::setLabel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
gl::TransformFeedback::~TransformFeedback()
gl::TransformFeedbackVarying::TransformFeedbackVarying(sh::ShaderVariable const&, sh::Varying const&)
gl::TransformFeedbackVarying::nameWithArrayIndex() const
gl::TransformFeedbackVaryings(unsigned int, int, char const* const*, unsigned int)
gl::TransformFeedbackVaryingsContextANGLE(void*, unsigned int, int, char const* const*, unsigned int)
gl::Translatef(float, float, float)
gl::TranslatefContextANGLE(void*, float, float, float)
gl::Translatex(int, int, int)
gl::TranslatexContextANGLE(void*, int, int, int)
gl::TransposeMatrixType(unsigned int)
gl::TypePrecision::TypePrecision()
gl::TypePrecision::get(int*, int*) const
gl::TypePrecision::setIEEEFloat()
gl::TypePrecision::setTwosComplementInt(unsigned int)
gl::TypedResourceManager<gl::Buffer, gl::HandleAllocator, gl::BufferManager>::deleteObject(gl::Context const*, unsigned int)
gl::TypedResourceManager<gl::Buffer, gl::HandleAllocator, gl::BufferManager>::reset(gl::Context const*)
gl::TypedResourceManager<gl::Buffer, gl::HandleAllocator, gl::BufferManager>::~TypedResourceManager()
gl::TypedResourceManager<gl::Framebuffer, gl::HandleAllocator, gl::FramebufferManager>::deleteObject(gl::Context const*, unsigned int)
gl::TypedResourceManager<gl::Framebuffer, gl::HandleAllocator, gl::FramebufferManager>::reset(gl::Context const*)
gl::TypedResourceManager<gl::Framebuffer, gl::HandleAllocator, gl::FramebufferManager>::~TypedResourceManager()
gl::TypedResourceManager<gl::ProgramPipeline, gl::HandleAllocator, gl::ProgramPipelineManager>::deleteObject(gl::Context const*, unsigned int)
gl::TypedResourceManager<gl::ProgramPipeline, gl::HandleAllocator, gl::ProgramPipelineManager>::reset(gl::Context const*)
gl::TypedResourceManager<gl::ProgramPipeline, gl::HandleAllocator, gl::ProgramPipelineManager>::~TypedResourceManager()
gl::TypedResourceManager<gl::Renderbuffer, gl::HandleAllocator, gl::RenderbufferManager>::deleteObject(gl::Context const*, unsigned int)
gl::TypedResourceManager<gl::Renderbuffer, gl::HandleAllocator, gl::RenderbufferManager>::reset(gl::Context const*)
gl::TypedResourceManager<gl::Renderbuffer, gl::HandleAllocator, gl::RenderbufferManager>::~TypedResourceManager()
gl::TypedResourceManager<gl::Sampler, gl::HandleAllocator, gl::SamplerManager>::deleteObject(gl::Context const*, unsigned int)
gl::TypedResourceManager<gl::Sampler, gl::HandleAllocator, gl::SamplerManager>::reset(gl::Context const*)
gl::TypedResourceManager<gl::Sampler, gl::HandleAllocator, gl::SamplerManager>::~TypedResourceManager()
gl::TypedResourceManager<gl::Sync, gl::HandleAllocator, gl::SyncManager>::deleteObject(gl::Context const*, unsigned int)
gl::TypedResourceManager<gl::Sync, gl::HandleAllocator, gl::SyncManager>::reset(gl::Context const*)
gl::TypedResourceManager<gl::Sync, gl::HandleAllocator, gl::SyncManager>::~TypedResourceManager()
gl::TypedResourceManager<gl::Texture, gl::HandleAllocator, gl::TextureManager>::deleteObject(gl::Context const*, unsigned int)
gl::TypedResourceManager<gl::Texture, gl::HandleAllocator, gl::TextureManager>::reset(gl::Context const*)
gl::TypedResourceManager<gl::Texture, gl::HandleAllocator, gl::TextureManager>::~TypedResourceManager()
gl::Uniform1f(int, float)
gl::Uniform1fContextANGLE(void*, int, float)
gl::Uniform1fv(int, int, float const*)
gl::Uniform1fvContextANGLE(void*, int, int, float const*)
gl::Uniform1i(int, int)
gl::Uniform1iContextANGLE(void*, int, int)
gl::Uniform1iv(int, int, int const*)
gl::Uniform1ivContextANGLE(void*, int, int, int const*)
gl::Uniform1ui(int, unsigned int)
gl::Uniform1uiContextANGLE(void*, int, unsigned int)
gl::Uniform1uiv(int, int, unsigned int const*)
gl::Uniform1uivContextANGLE(void*, int, int, unsigned int const*)
gl::Uniform2f(int, float, float)
gl::Uniform2fContextANGLE(void*, int, float, float)
gl::Uniform2fv(int, int, float const*)
gl::Uniform2fvContextANGLE(void*, int, int, float const*)
gl::Uniform2i(int, int, int)
gl::Uniform2iContextANGLE(void*, int, int, int)
gl::Uniform2iv(int, int, int const*)
gl::Uniform2ivContextANGLE(void*, int, int, int const*)
gl::Uniform2ui(int, unsigned int, unsigned int)
gl::Uniform2uiContextANGLE(void*, int, unsigned int, unsigned int)
gl::Uniform2uiv(int, int, unsigned int const*)
gl::Uniform2uivContextANGLE(void*, int, int, unsigned int const*)
gl::Uniform3f(int, float, float, float)
gl::Uniform3fContextANGLE(void*, int, float, float, float)
gl::Uniform3fv(int, int, float const*)
gl::Uniform3fvContextANGLE(void*, int, int, float const*)
gl::Uniform3i(int, int, int, int)
gl::Uniform3iContextANGLE(void*, int, int, int, int)
gl::Uniform3iv(int, int, int const*)
gl::Uniform3ivContextANGLE(void*, int, int, int const*)
gl::Uniform3ui(int, unsigned int, unsigned int, unsigned int)
gl::Uniform3uiContextANGLE(void*, int, unsigned int, unsigned int, unsigned int)
gl::Uniform3uiv(int, int, unsigned int const*)
gl::Uniform3uivContextANGLE(void*, int, int, unsigned int const*)
gl::Uniform4f(int, float, float, float, float)
gl::Uniform4fContextANGLE(void*, int, float, float, float, float)
gl::Uniform4fv(int, int, float const*)
gl::Uniform4fvContextANGLE(void*, int, int, float const*)
gl::Uniform4i(int, int, int, int, int)
gl::Uniform4iContextANGLE(void*, int, int, int, int, int)
gl::Uniform4iv(int, int, int const*)
gl::Uniform4ivContextANGLE(void*, int, int, int const*)
gl::Uniform4ui(int, unsigned int, unsigned int, unsigned int, unsigned int)
gl::Uniform4uiContextANGLE(void*, int, unsigned int, unsigned int, unsigned int, unsigned int)
gl::Uniform4uiv(int, int, unsigned int const*)
gl::Uniform4uivContextANGLE(void*, int, int, unsigned int const*)
gl::UniformBlockBinding(unsigned int, unsigned int, unsigned int)
gl::UniformBlockBindingContextANGLE(void*, unsigned int, unsigned int, unsigned int)
gl::UniformBlockLinker::UniformBlockLinker(std::__1::vector<gl::InterfaceBlock, std::__1::allocator<gl::InterfaceBlock> >*, std::__1::vector<gl::LinkedUniform, std::__1::allocator<gl::LinkedUniform> >*)
gl::UniformBlockLinker::defineBlockMemberImpl(sh::ShaderVariable const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, sh::BlockMemberInfo const&, int, gl::ShaderType) const
gl::UniformBlockLinker::getCurrentBlockMemberIndex() const
gl::UniformBlockLinker::updateBlockMemberActiveImpl(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, gl::ShaderType, bool) const
gl::UniformBlockLinker::~UniformBlockLinker()
gl::UniformLinker::UniformLinker(gl::ProgramState const&)
gl::UniformLinker::checkMaxCombinedAtomicCounters(gl::Caps const&, gl::InfoLog&)
gl::UniformLinker::flattenArrayOfStructsUniform(sh::ShaderVariable const&, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<gl::LinkedUniform, std::__1::allocator<gl::LinkedUniform> >*, std::__1::vector<gl::LinkedUniform, std::__1::allocator<gl::LinkedUniform> >*, std::__1::vector<gl::LinkedUniform, std::__1::allocator<gl::LinkedUniform> >*, std::__1::vector<gl::UnusedUniform, std::__1::allocator<gl::UnusedUniform> >*, gl::ShaderType, bool, bool, int, int, int*)
gl::UniformLinker::flattenArrayUniform(sh::ShaderVariable const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<gl::LinkedUniform, std::__1::allocator<gl::LinkedUniform> >*, std::__1::vector<gl::LinkedUniform, std::__1::allocator<gl::LinkedUniform> >*, std::__1::vector<gl::LinkedUniform, std::__1::allocator<gl::LinkedUniform> >*, std::__1::vector<gl::UnusedUniform, std::__1::allocator<gl::UnusedUniform> >*, gl::ShaderType, bool, bool, int, int, int*)
gl::UniformLinker::flattenStructUniform(std::__1::vector<sh::ShaderVariable, std::__1::allocator<sh::ShaderVariable> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<gl::LinkedUniform, std::__1::allocator<gl::LinkedUniform> >*, std::__1::vector<gl::LinkedUniform, std::__1::allocator<gl::LinkedUniform> >*, std::__1::vector<gl::LinkedUniform, std::__1::allocator<gl::LinkedUniform> >*, std::__1::vector<gl::UnusedUniform, std::__1::allocator<gl::UnusedUniform> >*, gl::ShaderType, bool, bool, int, int, int*)
gl::UniformLinker::flattenUniform(sh::Uniform const&, std::__1::vector<gl::LinkedUniform, std::__1::allocator<gl::LinkedUniform> >*, std::__1::vector<gl::LinkedUniform, std::__1::allocator<gl::LinkedUniform> >*, std::__1::vector<gl::LinkedUniform, std::__1::allocator<gl::LinkedUniform> >*, std::__1::vector<gl::UnusedUniform, std::__1::allocator<gl::UnusedUniform> >*, gl::ShaderType)
gl::UniformLinker::flattenUniformImpl(sh::ShaderVariable const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<gl::LinkedUniform, std::__1::allocator<gl::LinkedUniform> >*, std::__1::vector<gl::LinkedUniform, std::__1::allocator<gl::LinkedUniform> >*, std::__1::vector<gl::LinkedUniform, std::__1::allocator<gl::LinkedUniform> >*, std::__1::vector<gl::UnusedUniform, std::__1::allocator<gl::UnusedUniform> >*, gl::ShaderType, bool, bool, int, int, int*)
gl::UniformLinker::flattenUniformsAndCheckCaps(gl::Caps const&, gl::InfoLog&)
gl::UniformLinker::flattenUniformsAndCheckCapsForShader(gl::Shader*, gl::Caps const&, std::__1::vector<gl::LinkedUniform, std::__1::allocator<gl::LinkedUniform> >&, std::__1::vector<gl::LinkedUniform, std::__1::allocator<gl::LinkedUniform> >&, std::__1::vector<gl::LinkedUniform, std::__1::allocator<gl::LinkedUniform> >&, std::__1::vector<gl::UnusedUniform, std::__1::allocator<gl::UnusedUniform> >&, gl::InfoLog&)
gl::UniformLinker::gatherUniformLocationsAndCheckConflicts(gl::InfoLog&, gl::ProgramBindings const&, std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int> >*, int*)
gl::UniformLinker::getResults(std::__1::vector<gl::LinkedUniform, std::__1::allocator<gl::LinkedUniform> >*, std::__1::vector<gl::UnusedUniform, std::__1::allocator<gl::UnusedUniform> >*, std::__1::vector<gl::VariableLocation, std::__1::allocator<gl::VariableLocation> >*)
gl::UniformLinker::indexUniforms(gl::InfoLog&, gl::ProgramBindings const&)
gl::UniformLinker::link(gl::Caps const&, gl::InfoLog&, gl::ProgramBindings const&)
gl::UniformLinker::pruneUnusedUniforms()
gl::UniformLinker::validateGraphicsUniforms(gl::InfoLog&) const
gl::UniformLinker::~UniformLinker()
gl::UniformMatrix2fv(int, int, unsigned char, float const*)
gl::UniformMatrix2fvContextANGLE(void*, int, int, unsigned char, float const*)
gl::UniformMatrix2x3fv(int, int, unsigned char, float const*)
gl::UniformMatrix2x3fvContextANGLE(void*, int, int, unsigned char, float const*)
gl::UniformMatrix2x4fv(int, int, unsigned char, float const*)
gl::UniformMatrix2x4fvContextANGLE(void*, int, int, unsigned char, float const*)
gl::UniformMatrix3fv(int, int, unsigned char, float const*)
gl::UniformMatrix3fvContextANGLE(void*, int, int, unsigned char, float const*)
gl::UniformMatrix3x2fv(int, int, unsigned char, float const*)
gl::UniformMatrix3x2fvContextANGLE(void*, int, int, unsigned char, float const*)
gl::UniformMatrix3x4fv(int, int, unsigned char, float const*)
gl::UniformMatrix3x4fvContextANGLE(void*, int, int, unsigned char, float const*)
gl::UniformMatrix4fv(int, int, unsigned char, float const*)
gl::UniformMatrix4fvContextANGLE(void*, int, int, unsigned char, float const*)
gl::UniformMatrix4x2fv(int, int, unsigned char, float const*)
gl::UniformMatrix4x2fvContextANGLE(void*, int, int, unsigned char, float const*)
gl::UniformMatrix4x3fv(int, int, unsigned char, float const*)
gl::UniformMatrix4x3fvContextANGLE(void*, int, int, unsigned char, float const*)
gl::UninitializeDebugAnnotations()
gl::UnmapBuffer(unsigned int)
gl::UnmapBufferContextANGLE(void*, unsigned int)
gl::UnmapBufferOES(unsigned int)
gl::UnmapBufferOESContextANGLE(void*, unsigned int)
gl::UpdateIndexedBufferBinding(gl::Context const*, gl::OffsetBindingPointer<gl::Buffer>*, gl::Buffer*, gl::BufferBinding, long, long)
gl::UseProgram(unsigned int)
gl::UseProgramContextANGLE(void*, unsigned int)
gl::UseProgramStages(unsigned int, unsigned int, unsigned int)
gl::UseProgramStagesContextANGLE(void*, unsigned int, unsigned int, unsigned int)
gl::ValidCompressedImageSize(gl::Context const*, unsigned int, int, int, int)
gl::ValidCompressedSubImageSize(gl::Context const*, unsigned int, int, int, int, int, unsigned long, unsigned long)
gl::ValidES3CopyConversion(unsigned int, unsigned int)
gl::ValidES3Format(unsigned int)
gl::ValidES3FormatCombination(unsigned int, unsigned int, unsigned int)
gl::ValidES3InternalFormat(unsigned int)
gl::ValidES3Type(unsigned int)
gl::ValidFramebufferTarget(gl::Context const*, unsigned int)
gl::ValidImageDataSize(gl::Context*, gl::TextureType, int, int, int, unsigned int, unsigned int, void const*, int)
gl::ValidImageSizeParameters(gl::Context*, gl::TextureType, int, int, int, int, bool)
gl::ValidMipLevel(gl::Context const*, gl::TextureType, int)
gl::ValidTexLevelDestinationTarget(gl::Context const*, gl::TextureType)
gl::ValidTexture2DDestinationTarget(gl::Context const*, gl::TextureTarget)
gl::ValidTexture2DTarget(gl::Context const*, gl::TextureType)
gl::ValidTexture3DDestinationTarget(gl::Context const*, gl::TextureType)
gl::ValidTexture3DTarget(gl::Context const*, gl::TextureType)
gl::ValidTextureTarget(gl::Context const*, gl::TextureType)
gl::ValidateActiveShaderProgram(gl::Context*, unsigned int, unsigned int)
gl::ValidateActiveTexture(gl::Context*, unsigned int)
gl::ValidateAlphaFunc(gl::Context*, gl::AlphaTestFunc, float)
gl::ValidateAlphaFuncCommon(gl::Context*, gl::AlphaTestFunc)
gl::ValidateAlphaFuncx(gl::Context*, gl::AlphaTestFunc, int)
gl::ValidateAttachShader(gl::Context*, unsigned int, unsigned int)
gl::ValidateAttachmentTarget(gl::Context*, unsigned int)
gl::ValidateBeginQuery(gl::Context*, gl::QueryType, unsigned int)
gl::ValidateBeginQueryBase(gl::Context*, gl::QueryType, unsigned int)
gl::ValidateBeginQueryEXT(gl::Context*, gl::QueryType, unsigned int)
gl::ValidateBeginTransformFeedback(gl::Context*, gl::PrimitiveMode)
gl::ValidateBindAttribLocation(gl::Context*, unsigned int, unsigned int, char const*)
gl::ValidateBindBufferBase(gl::Context*, gl::BufferBinding, unsigned int, unsigned int)
gl::ValidateBindBufferCommon(gl::Context*, gl::BufferBinding, unsigned int, unsigned int, long, long)
gl::ValidateBindBufferRange(gl::Context*, gl::BufferBinding, unsigned int, unsigned int, long, long)
gl::ValidateBindFragDataLocationEXT(gl::Context*, unsigned int, unsigned int, char const*)
gl::ValidateBindFragDataLocationIndexedEXT(gl::Context*, unsigned int, unsigned int, unsigned int, char const*)
gl::ValidateBindFragmentInputLocationCHROMIUM(gl::Context*, unsigned int, int, char const*)
gl::ValidateBindFramebuffer(gl::Context*, unsigned int, unsigned int)
gl::ValidateBindFramebufferOES(gl::Context*, unsigned int, unsigned int)
gl::ValidateBindImageTexture(gl::Context*, unsigned int, unsigned int, int, unsigned char, int, unsigned int, unsigned int)
gl::ValidateBindProgramPipeline(gl::Context*, unsigned int)
gl::ValidateBindRenderbuffer(gl::Context*, unsigned int, unsigned int)
gl::ValidateBindRenderbufferOES(gl::Context*, unsigned int, unsigned int)
gl::ValidateBindSampler(gl::Context*, unsigned int, unsigned int)
gl::ValidateBindTexture(gl::Context*, gl::TextureType, unsigned int)
gl::ValidateBindTransformFeedback(gl::Context*, unsigned int, unsigned int)
gl::ValidateBindUniformLocationCHROMIUM(gl::Context*, unsigned int, int, char const*)
gl::ValidateBindVertexArray(gl::Context*, unsigned int)
gl::ValidateBindVertexArrayBase(gl::Context*, unsigned int)
gl::ValidateBindVertexArrayOES(gl::Context*, unsigned int)
gl::ValidateBindVertexBuffer(gl::Context*, unsigned int, unsigned int, long, int)
gl::ValidateBlendColor(gl::Context*, float, float, float, float)
gl::ValidateBlendEquation(gl::Context*, unsigned int)
gl::ValidateBlendEquationSeparate(gl::Context*, unsigned int, unsigned int)
gl::ValidateBlendFunc(gl::Context*, unsigned int, unsigned int)
gl::ValidateBlendFuncSeparate(gl::Context*, unsigned int, unsigned int, unsigned int, unsigned int)
gl::ValidateBlitFramebuffer(gl::Context*, int, int, int, int, int, int, int, int, unsigned int, unsigned int)
gl::ValidateBlitFramebufferANGLE(gl::Context*, int, int, int, int, int, int, int, int, unsigned int, unsigned int)
gl::ValidateBlitFramebufferParameters(gl::Context*, int, int, int, int, int, int, int, int, unsigned int, unsigned int)
gl::ValidateBufferData(gl::Context*, gl::BufferBinding, long, void const*, gl::BufferUsage)
gl::ValidateBufferSubData(gl::Context*, gl::BufferBinding, long, long, void const*)
gl::ValidateBuiltinVertexAttributeCommon(gl::Context*, gl::ClientVertexArrayType, int, unsigned int, int, void const*)
gl::ValidateCheckFramebufferStatus(gl::Context*, unsigned int)
gl::ValidateCheckFramebufferStatusOES(gl::Context*, unsigned int)
gl::ValidateClear(gl::Context*, unsigned int)
gl::ValidateClear(gl::Context*, unsigned int)::validComponentTypes
gl::ValidateClearBuffer(gl::Context*)
gl::ValidateClearBufferfi(gl::Context*, unsigned int, int, float, int)
gl::ValidateClearBufferfv(gl::Context*, unsigned int, int, float const*)
gl::ValidateClearBufferfv(gl::Context*, unsigned int, int, float const*)::validComponentTypes
gl::ValidateClearBufferiv(gl::Context*, unsigned int, int, int const*)
gl::ValidateClearBufferiv(gl::Context*, unsigned int, int, int const*)::validComponentTypes
gl::ValidateClearBufferuiv(gl::Context*, unsigned int, int, unsigned int const*)
gl::ValidateClearBufferuiv(gl::Context*, unsigned int, int, unsigned int const*)::validComponentTypes
gl::ValidateClearColor(gl::Context*, float, float, float, float)
gl::ValidateClearColorx(gl::Context*, int, int, int, int)
gl::ValidateClearDepthf(gl::Context*, float)
gl::ValidateClearDepthx(gl::Context*, int)
gl::ValidateClearStencil(gl::Context*, int)
gl::ValidateClientActiveTexture(gl::Context*, unsigned int)
gl::ValidateClientStateCommon(gl::Context*, gl::ClientVertexArrayType)
gl::ValidateClientWaitSync(gl::Context*, __GLsync*, unsigned int, unsigned long)
gl::ValidateClipPlaneCommon(gl::Context*, unsigned int)
gl::ValidateClipPlanef(gl::Context*, unsigned int, float const*)
gl::ValidateClipPlanex(gl::Context*, unsigned int, int const*)
gl::ValidateColor4f(gl::Context*, float, float, float, float)
gl::ValidateColor4ub(gl::Context*, unsigned char, unsigned char, unsigned char, unsigned char)
gl::ValidateColor4x(gl::Context*, int, int, int, int)
gl::ValidateColorMask(gl::Context*, unsigned char, unsigned char, unsigned char, unsigned char)
gl::ValidateColorPointer(gl::Context*, int, unsigned int, int, void const*)
gl::ValidateCompileShader(gl::Context*, unsigned int)
gl::ValidateCompressedCopyTextureCHROMIUM(gl::Context*, unsigned int, unsigned int)
gl::ValidateCompressedTexImage2D(gl::Context*, gl::TextureTarget, int, unsigned int, int, int, int, int, void const*)
gl::ValidateCompressedTexImage2DRobustANGLE(gl::Context*, gl::TextureTarget, int, unsigned int, int, int, int, int, int, void const*)
gl::ValidateCompressedTexImage3D(gl::Context*, gl::TextureType, int, unsigned int, int, int, int, int, int, void const*)
gl::ValidateCompressedTexImage3DRobustANGLE(gl::Context*, gl::TextureType, int, unsigned int, int, int, int, int, int, int, void const*)
gl::ValidateCompressedTexSubImage2D(gl::Context*, gl::TextureTarget, int, int, int, int, int, unsigned int, int, void const*)
gl::ValidateCompressedTexSubImage2DRobustANGLE(gl::Context*, gl::TextureTarget, int, int, int, int, int, unsigned int, int, int, void const*)
gl::ValidateCompressedTexSubImage3D(gl::Context*, gl::TextureType, int, int, int, int, int, int, int, unsigned int, int, void const*)
gl::ValidateCompressedTexSubImage3DRobustANGLE(gl::Context*, gl::TextureType, int, int, int, int, int, int, int, unsigned int, int, int, void const*)
gl::ValidateCopyBufferSubData(gl::Context*, gl::BufferBinding, gl::BufferBinding, long, long, long)
gl::ValidateCopySubTexture3DANGLE(gl::Context*, unsigned int, int, gl::TextureTarget, unsigned int, int, int, int, int, int, int, int, int, int, int, unsigned char, unsigned char, unsigned char)
gl::ValidateCopySubTextureCHROMIUM(gl::Context*, unsigned int, int, gl::TextureTarget, unsigned int, int, int, int, int, int, int, int, unsigned char, unsigned char, unsigned char)
gl::ValidateCopyTexImage2D(gl::Context*, gl::TextureTarget, int, unsigned int, int, int, int, int, int)
gl::ValidateCopyTexImageParametersBase(gl::Context*, gl::TextureTarget, int, unsigned int, bool, int, int, int, int, int, int, int, int, gl::Format*)
gl::ValidateCopyTexSubImage2D(gl::Context*, gl::TextureTarget, int, int, int, int, int, int, int)
gl::ValidateCopyTexSubImage3D(gl::Context*, gl::TextureType, int, int, int, int, int, int, int, int)
gl::ValidateCopyTexture3DANGLE(gl::Context*, unsigned int, int, gl::TextureTarget, unsigned int, int, int, unsigned int, unsigned char, unsigned char, unsigned char)
gl::ValidateCopyTextureCHROMIUM(gl::Context*, unsigned int, int, gl::TextureTarget, unsigned int, int, int, unsigned int, unsigned char, unsigned char, unsigned char)
gl::ValidateCoverFillPathCHROMIUM(gl::Context*, unsigned int, unsigned int)
gl::ValidateCoverFillPathInstancedCHROMIUM(gl::Context*, int, unsigned int, void const*, unsigned int, unsigned int, unsigned int, float const*)
gl::ValidateCoverPathCHROMIUM(gl::Context*, unsigned int, unsigned int)
gl::ValidateCoverStrokePathCHROMIUM(gl::Context*, unsigned int, unsigned int)
gl::ValidateCoverStrokePathInstancedCHROMIUM(gl::Context*, int, unsigned int, void const*, unsigned int, unsigned int, unsigned int, float const*)
gl::ValidateCoverageModulationCHROMIUM(gl::Context*, unsigned int)
gl::ValidateCreateProgram(gl::Context*)
gl::ValidateCreateShader(gl::Context*, gl::ShaderType)
gl::ValidateCreateShaderProgramv(gl::Context*, gl::ShaderType, int, char const* const*)
gl::ValidateCullFace(gl::Context*, gl::CullFaceMode)
gl::ValidateCurrentPaletteMatrixOES(gl::Context*, unsigned int)
gl::ValidateDebugMessageCallbackKHR(gl::Context*, void (*)(unsigned int, unsigned int, unsigned int, unsigned int, int, char const*, void const*), void const*)
gl::ValidateDebugMessageControlKHR(gl::Context*, unsigned int, unsigned int, unsigned int, int, unsigned int const*, unsigned char)
gl::ValidateDebugMessageInsertKHR(gl::Context*, unsigned int, unsigned int, unsigned int, unsigned int, int, char const*)
gl::ValidateDeleteBuffers(gl::Context*, int, unsigned int const*)
gl::ValidateDeleteFencesNV(gl::Context*, int, unsigned int const*)
gl::ValidateDeleteFramebuffers(gl::Context*, int, unsigned int const*)
gl::ValidateDeleteFramebuffersOES(gl::Context*, int, unsigned int const*)
gl::ValidateDeletePathsCHROMIUM(gl::Context*, unsigned int, int)
gl::ValidateDeleteProgram(gl::Context*, unsigned int)
gl::ValidateDeleteProgramPipelines(gl::Context*, int, unsigned int const*)
gl::ValidateDeleteQueries(gl::Context*, int, unsigned int const*)
gl::ValidateDeleteQueriesEXT(gl::Context*, int, unsigned int const*)
gl::ValidateDeleteRenderbuffers(gl::Context*, int, unsigned int const*)
gl::ValidateDeleteRenderbuffersOES(gl::Context*, int, unsigned int const*)
gl::ValidateDeleteSamplers(gl::Context*, int, unsigned int const*)
gl::ValidateDeleteShader(gl::Context*, unsigned int)
gl::ValidateDeleteSync(gl::Context*, __GLsync*)
gl::ValidateDeleteTextures(gl::Context*, int, unsigned int const*)
gl::ValidateDeleteTransformFeedbacks(gl::Context*, int, unsigned int const*)
gl::ValidateDeleteVertexArrays(gl::Context*, int, unsigned int const*)
gl::ValidateDeleteVertexArraysOES(gl::Context*, int, unsigned int const*)
gl::ValidateDepthFunc(gl::Context*, unsigned int)
gl::ValidateDepthMask(gl::Context*, unsigned char)
gl::ValidateDepthRangef(gl::Context*, float, float)
gl::ValidateDepthRangex(gl::Context*, int, int)
gl::ValidateDetachShader(gl::Context*, unsigned int, unsigned int)
gl::ValidateDisable(gl::Context*, unsigned int)
gl::ValidateDisableClientState(gl::Context*, gl::ClientVertexArrayType)
gl::ValidateDisableVertexAttribArray(gl::Context*, unsigned int)
gl::ValidateDiscardFramebufferBase(gl::Context*, unsigned int, int, unsigned int const*, bool)
gl::ValidateDiscardFramebufferEXT(gl::Context*, unsigned int, int, unsigned int const*)
gl::ValidateDispatchCompute(gl::Context*, unsigned int, unsigned int, unsigned int)
gl::ValidateDispatchComputeIndirect(gl::Context*, long)
gl::ValidateDrawArraysCommon(gl::Context*, gl::PrimitiveMode, int, int, int)
gl::ValidateDrawArraysIndirect(gl::Context*, gl::PrimitiveMode, void const*)
gl::ValidateDrawArraysInstanced(gl::Context*, gl::PrimitiveMode, int, int, int)
gl::ValidateDrawArraysInstancedANGLE(gl::Context*, gl::PrimitiveMode, int, int, int)
gl::ValidateDrawArraysInstancedBase(gl::Context*, gl::PrimitiveMode, int, int, int)
gl::ValidateDrawBase(gl::Context*, gl::PrimitiveMode, int)
gl::ValidateDrawBuffers(gl::Context*, int, unsigned int const*)
gl::ValidateDrawBuffersBase(gl::Context*, int, unsigned int const*)
gl::ValidateDrawBuffersEXT(gl::Context*, int, unsigned int const*)
gl::ValidateDrawElements(gl::Context*, gl::PrimitiveMode, int, unsigned int, void const*)
gl::ValidateDrawElementsBase(gl::Context*, gl::PrimitiveMode, unsigned int)
gl::ValidateDrawElementsCommon(gl::Context*, gl::PrimitiveMode, int, unsigned int, void const*, int)
gl::ValidateDrawElementsIndirect(gl::Context*, gl::PrimitiveMode, unsigned int, void const*)
gl::ValidateDrawElementsInstanced(gl::Context*, gl::PrimitiveMode, int, unsigned int, void const*, int)
gl::ValidateDrawElementsInstancedANGLE(gl::Context*, gl::PrimitiveMode, int, unsigned int, void const*, int)
gl::ValidateDrawElementsInstancedBase(gl::Context*, gl::PrimitiveMode, int, unsigned int, void const*, int)
gl::ValidateDrawElementsInstancedCommon(gl::Context*, gl::PrimitiveMode, int, unsigned int, void const*, int)
gl::ValidateDrawIndirectBase(gl::Context*, gl::PrimitiveMode, void const*)
gl::ValidateDrawInstancedANGLE(gl::Context*)
gl::ValidateDrawMode(gl::Context*, gl::PrimitiveMode)
gl::ValidateDrawRangeElements(gl::Context*, gl::PrimitiveMode, unsigned int, unsigned int, int, unsigned int, void const*)
gl::ValidateDrawStates(gl::Context*)
gl::ValidateDrawTexCommon(gl::Context*, float, float)
gl::ValidateDrawTexfOES(gl::Context*, float, float, float, float, float)
gl::ValidateDrawTexfvOES(gl::Context*, float const*)
gl::ValidateDrawTexiOES(gl::Context*, int, int, int, int, int)
gl::ValidateDrawTexivOES(gl::Context*, int const*)
gl::ValidateDrawTexsOES(gl::Context*, short, short, short, short, short)
gl::ValidateDrawTexsvOES(gl::Context*, short const*)
gl::ValidateDrawTexxOES(gl::Context*, int, int, int, int, int)
gl::ValidateDrawTexxvOES(gl::Context*, int const*)
gl::ValidateEGLImageTargetRenderbufferStorageOES(gl::Context*, unsigned int, void*)
gl::ValidateEGLImageTargetTexture2DOES(gl::Context*, gl::TextureType, void*)
gl::ValidateES2TexImageParameters(gl::Context*, gl::TextureTarget, int, unsigned int, bool, bool, int, int, int, int, int, unsigned int, unsigned int, int, void const*)
gl::ValidateES2TexStorageParameters(gl::Context*, gl::TextureType, int, unsigned int, int, int)
gl::ValidateES3CopyTexImage2DParameters(gl::Context*, gl::TextureTarget, int, unsigned int, bool, int, int, int, int, int, int, int, int)
gl::ValidateES3CopyTexImage3DParameters(gl::Context*, gl::TextureType, int, unsigned int, bool, int, int, int, int, int, int, int, int)
gl::ValidateES3CopyTexImageParametersBase(gl::Context*, gl::TextureTarget, int, unsigned int, bool, int, int, int, int, int, int, int, int)
gl::ValidateES3TexImage2DParameters(gl::Context*, gl::TextureTarget, int, unsigned int, bool, bool, int, int, int, int, int, int, int, unsigned int, unsigned int, int, void const*)
gl::ValidateES3TexImage3DParameters(gl::Context*, gl::TextureType, int, unsigned int, bool, bool, int, int, int, int, int, int, int, unsigned int, unsigned int, int, void const*)
gl::ValidateES3TexImageParametersBase(gl::Context*, gl::TextureTarget, int, unsigned int, bool, bool, int, int, int, int, int, int, int, unsigned int, unsigned int, int, void const*)
gl::ValidateES3TexStorage2DParameters(gl::Context*, gl::TextureType, int, unsigned int, int, int, int)
gl::ValidateES3TexStorage3DParameters(gl::Context*, gl::TextureType, int, unsigned int, int, int, int)
gl::ValidateES3TexStorageParametersBase(gl::Context*, gl::TextureType, int, unsigned int, int, int, int)
gl::ValidateEnable(gl::Context*, unsigned int)
gl::ValidateEnableClientState(gl::Context*, gl::ClientVertexArrayType)
gl::ValidateEnableVertexAttribArray(gl::Context*, unsigned int)
gl::ValidateEndQuery(gl::Context*, gl::QueryType)
gl::ValidateEndQueryBase(gl::Context*, gl::QueryType)
gl::ValidateEndQueryEXT(gl::Context*, gl::QueryType)
gl::ValidateEndTransformFeedback(gl::Context*)
gl::ValidateFenceSync(gl::Context*, unsigned int, unsigned int)
gl::ValidateFinish(gl::Context*)
gl::ValidateFinishFenceNV(gl::Context*, unsigned int)
gl::ValidateFlush(gl::Context*)
gl::ValidateFlushMappedBufferRange(gl::Context*, gl::BufferBinding, long, long)
gl::ValidateFlushMappedBufferRangeBase(gl::Context*, gl::BufferBinding, long, long)
gl::ValidateFlushMappedBufferRangeEXT(gl::Context*, gl::BufferBinding, long, long)
gl::ValidateFogCommon(gl::Context*, unsigned int, float const*)
gl::ValidateFogf(gl::Context*, unsigned int, float)
gl::ValidateFogfv(gl::Context*, unsigned int, float const*)
gl::ValidateFogx(gl::Context*, unsigned int, int)
gl::ValidateFogxv(gl::Context*, unsigned int, int const*)
gl::ValidateFramebufferNotMultisampled(gl::Context*, gl::Framebuffer*)
gl::ValidateFramebufferParameteri(gl::Context*, unsigned int, unsigned int, int)
gl::ValidateFramebufferRenderbuffer(gl::Context*, unsigned int, unsigned int, unsigned int, unsigned int)
gl::ValidateFramebufferRenderbufferOES(gl::Context*, unsigned int, unsigned int, unsigned int, unsigned int)
gl::ValidateFramebufferRenderbufferParameters(gl::Context*, unsigned int, unsigned int, unsigned int, unsigned int)
gl::ValidateFramebufferTexture2D(gl::Context*, unsigned int, unsigned int, gl::TextureTarget, unsigned int, int)
gl::ValidateFramebufferTexture2DOES(gl::Context*, unsigned int, unsigned int, gl::TextureTarget, unsigned int, int)
gl::ValidateFramebufferTextureBase(gl::Context*, unsigned int, unsigned int, unsigned int, int)
gl::ValidateFramebufferTextureEXT(gl::Context*, unsigned int, unsigned int, unsigned int, int)
gl::ValidateFramebufferTextureLayer(gl::Context*, unsigned int, unsigned int, unsigned int, int, int)
gl::ValidateFramebufferTextureMultiviewLayeredANGLE(gl::Context*, unsigned int, unsigned int, unsigned int, int, int, int)
gl::ValidateFramebufferTextureMultiviewSideBySideANGLE(gl::Context*, unsigned int, unsigned int, unsigned int, int, int, int const*)
gl::ValidateFrontFace(gl::Context*, unsigned int)
gl::ValidateFrustumf(gl::Context*, float, float, float, float, float, float)
gl::ValidateFrustumx(gl::Context*, int, int, int, int, int, int)
gl::ValidateGenBuffers(gl::Context*, int, unsigned int*)
gl::ValidateGenFencesNV(gl::Context*, int, unsigned int*)
gl::ValidateGenFramebuffers(gl::Context*, int, unsigned int*)
gl::ValidateGenFramebuffersOES(gl::Context*, int, unsigned int*)
gl::ValidateGenOrDelete(gl::Context*, int)
gl::ValidateGenOrDeleteES31(gl::Context*, int)
gl::ValidateGenPathsCHROMIUM(gl::Context*, int)
gl::ValidateGenProgramPipelines(gl::Context*, int, unsigned int*)
gl::ValidateGenQueries(gl::Context*, int, unsigned int*)
gl::ValidateGenQueriesEXT(gl::Context*, int, unsigned int*)
gl::ValidateGenRenderbuffers(gl::Context*, int, unsigned int*)
gl::ValidateGenRenderbuffersOES(gl::Context*, int, unsigned int*)
gl::ValidateGenSamplers(gl::Context*, int, unsigned int*)
gl::ValidateGenTextures(gl::Context*, int, unsigned int*)
gl::ValidateGenTransformFeedbacks(gl::Context*, int, unsigned int*)
gl::ValidateGenVertexArrays(gl::Context*, int, unsigned int*)
gl::ValidateGenVertexArraysOES(gl::Context*, int, unsigned int*)
gl::ValidateGenerateMipmap(gl::Context*, gl::TextureType)
gl::ValidateGenerateMipmapOES(gl::Context*, gl::TextureType)
gl::ValidateGetActiveAttrib(gl::Context*, unsigned int, unsigned int, int, int*, int*, unsigned int*, char*)
gl::ValidateGetActiveUniform(gl::Context*, unsigned int, unsigned int, int, int*, int*, unsigned int*, char*)
gl::ValidateGetActiveUniformBlockName(gl::Context*, unsigned int, unsigned int, int, int*, char*)
gl::ValidateGetActiveUniformBlockiv(gl::Context*, unsigned int, unsigned int, unsigned int, int*)
gl::ValidateGetActiveUniformBlockivBase(gl::Context*, unsigned int, unsigned int, unsigned int, int*)
gl::ValidateGetActiveUniformBlockivRobustANGLE(gl::Context*, unsigned int, unsigned int, unsigned int, int, int*, int*)
gl::ValidateGetActiveUniformsiv(gl::Context*, unsigned int, int, unsigned int const*, unsigned int, int*)
gl::ValidateGetAttachedShaders(gl::Context*, unsigned int, int, int*, unsigned int*)
gl::ValidateGetAttribLocation(gl::Context*, unsigned int, char const*)
gl::ValidateGetBooleani_v(gl::Context*, unsigned int, unsigned int, unsigned char*)
gl::ValidateGetBooleani_vRobustANGLE(gl::Context*, unsigned int, unsigned int, int, int*, unsigned char*)
gl::ValidateGetBooleanv(gl::Context*, unsigned int, unsigned char*)
gl::ValidateGetBooleanvRobustANGLE(gl::Context*, unsigned int, int, int*, unsigned char*)
gl::ValidateGetBufferParameterBase(gl::Context*, gl::BufferBinding, unsigned int, bool, int*)
gl::ValidateGetBufferParameteri64v(gl::Context*, gl::BufferBinding, unsigned int, long*)
gl::ValidateGetBufferParameteri64vRobustANGLE(gl::Context*, gl::BufferBinding, unsigned int, int, int*, long*)
gl::ValidateGetBufferParameteriv(gl::Context*, gl::BufferBinding, unsigned int, int*)
gl::ValidateGetBufferParameterivRobustANGLE(gl::Context*, gl::BufferBinding, unsigned int, int, int*, int*)
gl::ValidateGetBufferPointerv(gl::Context*, gl::BufferBinding, unsigned int, void**)
gl::ValidateGetBufferPointervBase(gl::Context*, gl::BufferBinding, unsigned int, int*, void**)
gl::ValidateGetBufferPointervOES(gl::Context*, gl::BufferBinding, unsigned int, void**)
gl::ValidateGetBufferPointervRobustANGLE(gl::Context*, gl::BufferBinding, unsigned int, int, int*, void**)
gl::ValidateGetClipPlanef(gl::Context*, unsigned int, float*)
gl::ValidateGetClipPlanex(gl::Context*, unsigned int, int*)
gl::ValidateGetDebugMessageLogKHR(gl::Context*, unsigned int, int, unsigned int*, unsigned int*, unsigned int*, unsigned int*, int*, char*)
gl::ValidateGetError(gl::Context*)
gl::ValidateGetFenceivNV(gl::Context*, unsigned int, unsigned int, int*)
gl::ValidateGetFixedv(gl::Context*, unsigned int, int*)
gl::ValidateGetFloatv(gl::Context*, unsigned int, float*)
gl::ValidateGetFloatvRobustANGLE(gl::Context*, unsigned int, int, int*, float*)
gl::ValidateGetFragDataIndexEXT(gl::Context*, unsigned int, char const*)
gl::ValidateGetFragDataLocation(gl::Context*, unsigned int, char const*)
gl::ValidateGetFramebufferAttachmentParameteriv(gl::Context*, unsigned int, unsigned int, unsigned int, int*)
gl::ValidateGetFramebufferAttachmentParameterivBase(gl::Context*, unsigned int, unsigned int, unsigned int, int*)
gl::ValidateGetFramebufferAttachmentParameterivOES(gl::Context*, unsigned int, unsigned int, unsigned int, int*)
gl::ValidateGetFramebufferAttachmentParameterivRobustANGLE(gl::Context*, unsigned int, unsigned int, unsigned int, int, int*, int*)
gl::ValidateGetFramebufferParameteriv(gl::Context*, unsigned int, unsigned int, int*)
gl::ValidateGetFramebufferParameterivRobustANGLE(gl::Context*, unsigned int, unsigned int, int, int*, int*)
gl::ValidateGetGraphicsResetStatusEXT(gl::Context*)
gl::ValidateGetInteger64i_v(gl::Context*, unsigned int, unsigned int, long*)
gl::ValidateGetInteger64i_vRobustANGLE(gl::Context*, unsigned int, unsigned int, int, int*, long*)
gl::ValidateGetInteger64v(gl::Context*, unsigned int, long*)
gl::ValidateGetInteger64vRobustANGLE(gl::Context*, unsigned int, int, int*, long*)
gl::ValidateGetIntegeri_v(gl::Context*, unsigned int, unsigned int, int*)
gl::ValidateGetIntegeri_vRobustANGLE(gl::Context*, unsigned int, unsigned int, int, int*, int*)
gl::ValidateGetIntegerv(gl::Context*, unsigned int, int*)
gl::ValidateGetIntegervRobustANGLE(gl::Context*, unsigned int, int, int*, int*)
gl::ValidateGetInternalFormativBase(gl::Context*, unsigned int, unsigned int, unsigned int, int, int*)
gl::ValidateGetInternalformativ(gl::Context*, unsigned int, unsigned int, unsigned int, int, int*)
gl::ValidateGetInternalformativRobustANGLE(gl::Context*, unsigned int, unsigned int, unsigned int, int, int*, int*)
gl::ValidateGetLightfv(gl::Context*, unsigned int, gl::LightParameter, float*)
gl::ValidateGetLightxv(gl::Context*, unsigned int, gl::LightParameter, int*)
gl::ValidateGetMaterialfv(gl::Context*, unsigned int, gl::MaterialParameter, float*)
gl::ValidateGetMaterialxv(gl::Context*, unsigned int, gl::MaterialParameter, int*)
gl::ValidateGetMultisamplefv(gl::Context*, unsigned int, unsigned int, float*)
gl::ValidateGetMultisamplefvRobustANGLE(gl::Context*, unsigned int, unsigned int, int, int*, float*)
gl::ValidateGetObjectLabelKHR(gl::Context*, unsigned int, unsigned int, int, int*, char*)
gl::ValidateGetObjectPtrLabelKHR(gl::Context*, void const*, int, int*, char*)
gl::ValidateGetPathParameterfvCHROMIUM(gl::Context*, unsigned int, unsigned int, float*)
gl::ValidateGetPathParameterivCHROMIUM(gl::Context*, unsigned int, unsigned int, int*)
gl::ValidateGetPointerv(gl::Context*, unsigned int, void**)
gl::ValidateGetPointervKHR(gl::Context*, unsigned int, void**)
gl::ValidateGetPointervRobustANGLERobustANGLE(gl::Context*, unsigned int, int, int*, void**)
gl::ValidateGetProgramBinary(gl::Context*, unsigned int, int, int*, unsigned int*, void*)
gl::ValidateGetProgramBinaryBase(gl::Context*, unsigned int, int, int*, unsigned int*, void*)
gl::ValidateGetProgramBinaryOES(gl::Context*, unsigned int, int, int*, unsigned int*, void*)
gl::ValidateGetProgramInfoLog(gl::Context*, unsigned int, int, int*, char*)
gl::ValidateGetProgramInterfaceiv(gl::Context*, unsigned int, unsigned int, unsigned int, int*)
gl::ValidateGetProgramInterfaceivRobustANGLE(gl::Context*, unsigned int, unsigned int, unsigned int, int, int*, int*)
gl::ValidateGetProgramPipelineInfoLog(gl::Context*, unsigned int, int, int*, char*)
gl::ValidateGetProgramPipelineiv(gl::Context*, unsigned int, unsigned int, int*)
gl::ValidateGetProgramResourceIndex(gl::Context*, unsigned int, unsigned int, char const*)
gl::ValidateGetProgramResourceLocation(gl::Context*, unsigned int, unsigned int, char const*)
gl::ValidateGetProgramResourceLocationIndexEXT(gl::Context*, unsigned int, unsigned int, char const*)
gl::ValidateGetProgramResourceName(gl::Context*, unsigned int, unsigned int, unsigned int, int, int*, char*)
gl::ValidateGetProgramResourceiv(gl::Context*, unsigned int, unsigned int, unsigned int, int, unsigned int const*, int, int*, int*)
gl::ValidateGetProgramiv(gl::Context*, unsigned int, unsigned int, int*)
gl::ValidateGetProgramivBase(gl::Context*, unsigned int, unsigned int, int*)
gl::ValidateGetProgramivRobustANGLE(gl::Context*, unsigned int, unsigned int, int, int*, int*)
gl::ValidateGetQueryObjectValueBase(gl::Context*, unsigned int, unsigned int, int*)
gl::ValidateGetQueryObjecti64vEXT(gl::Context*, unsigned int, unsigned int, long*)
gl::ValidateGetQueryObjecti64vRobustANGLE(gl::Context*, unsigned int, unsigned int, int, int*, long*)
gl::ValidateGetQueryObjectivEXT(gl::Context*, unsigned int, unsigned int, int*)
gl::ValidateGetQueryObjectivRobustANGLE(gl::Context*, unsigned int, unsigned int, int, int*, int*)
gl::ValidateGetQueryObjectui64vEXT(gl::Context*, unsigned int, unsigned int, unsigned long*)
gl::ValidateGetQueryObjectui64vRobustANGLE(gl::Context*, unsigned int, unsigned int, int, int*, unsigned long*)
gl::ValidateGetQueryObjectuiv(gl::Context*, unsigned int, unsigned int, unsigned int*)
gl::ValidateGetQueryObjectuivEXT(gl::Context*, unsigned int, unsigned int, unsigned int*)
gl::ValidateGetQueryObjectuivRobustANGLE(gl::Context*, unsigned int, unsigned int, int, int*, unsigned int*)
gl::ValidateGetQueryiv(gl::Context*, gl::QueryType, unsigned int, int*)
gl::ValidateGetQueryivBase(gl::Context*, gl::QueryType, unsigned int, int*)
gl::ValidateGetQueryivEXT(gl::Context*, gl::QueryType, unsigned int, int*)
gl::ValidateGetQueryivRobustANGLE(gl::Context*, gl::QueryType, unsigned int, int, int*, int*)
gl::ValidateGetRenderbufferParameteriv(gl::Context*, unsigned int, unsigned int, int*)
gl::ValidateGetRenderbufferParameterivBase(gl::Context*, unsigned int, unsigned int, int*)
gl::ValidateGetRenderbufferParameterivOES(gl::Context*, unsigned int, unsigned int, int*)
gl::ValidateGetRenderbufferParameterivRobustANGLE(gl::Context*, unsigned int, unsigned int, int, int*, int*)
gl::ValidateGetSamplerParameterBase(gl::Context*, unsigned int, unsigned int, int*)
gl::ValidateGetSamplerParameterIivRobustANGLE(gl::Context*, unsigned int, unsigned int, int, int*, int*)
gl::ValidateGetSamplerParameterIuivRobustANGLE(gl::Context*, unsigned int, unsigned int, int, int*, unsigned int*)
gl::ValidateGetSamplerParameterfv(gl::Context*, unsigned int, unsigned int, float*)
gl::ValidateGetSamplerParameterfvRobustANGLE(gl::Context*, unsigned int, unsigned int, unsigned int, int*, float*)
gl::ValidateGetSamplerParameteriv(gl::Context*, unsigned int, unsigned int, int*)
gl::ValidateGetSamplerParameterivRobustANGLE(gl::Context*, unsigned int, unsigned int, int, int*, int*)
gl::ValidateGetShaderInfoLog(gl::Context*, unsigned int, int, int*, char*)
gl::ValidateGetShaderPrecisionFormat(gl::Context*, unsigned int, unsigned int, int*, int*)
gl::ValidateGetShaderSource(gl::Context*, unsigned int, int, int*, char*)
gl::ValidateGetShaderiv(gl::Context*, unsigned int, unsigned int, int*)
gl::ValidateGetShaderivBase(gl::Context*, unsigned int, unsigned int, int*)
gl::ValidateGetShaderivRobustANGLE(gl::Context*, unsigned int, unsigned int, int, int*, int*)
gl::ValidateGetString(gl::Context*, unsigned int)
gl::ValidateGetStringi(gl::Context*, unsigned int, unsigned int)
gl::ValidateGetSynciv(gl::Context*, __GLsync*, unsigned int, int, int*, int*)
gl::ValidateGetTexEnvCommon(gl::Context*, gl::TextureEnvTarget, gl::TextureEnvParameter)
gl::ValidateGetTexEnvfv(gl::Context*, gl::TextureEnvTarget, gl::TextureEnvParameter, float*)
gl::ValidateGetTexEnviv(gl::Context*, gl::TextureEnvTarget, gl::TextureEnvParameter, int*)
gl::ValidateGetTexEnvxv(gl::Context*, gl::TextureEnvTarget, gl::TextureEnvParameter, int*)
gl::ValidateGetTexGenfvOES(gl::Context*, unsigned int, unsigned int, float*)
gl::ValidateGetTexGenivOES(gl::Context*, unsigned int, unsigned int, int*)
gl::ValidateGetTexGenxvOES(gl::Context*, unsigned int, unsigned int, int*)
gl::ValidateGetTexLevelParameterBase(gl::Context*, gl::TextureTarget, int, unsigned int, int*)
gl::ValidateGetTexLevelParameterfv(gl::Context*, gl::TextureTarget, int, unsigned int, float*)
gl::ValidateGetTexLevelParameterfvRobustANGLE(gl::Context*, gl::TextureTarget, int, unsigned int, int, int*, float*)
gl::ValidateGetTexLevelParameteriv(gl::Context*, gl::TextureTarget, int, unsigned int, int*)
gl::ValidateGetTexLevelParameterivRobustANGLE(gl::Context*, gl::TextureTarget, int, unsigned int, int, int*, int*)
gl::ValidateGetTexParameterBase(gl::Context*, gl::TextureType, unsigned int, int*)
gl::ValidateGetTexParameterIivRobustANGLE(gl::Context*, gl::TextureType, unsigned int, int, int*, int*)
gl::ValidateGetTexParameterIuivRobustANGLE(gl::Context*, gl::TextureType, unsigned int, int, int*, unsigned int*)
gl::ValidateGetTexParameterfv(gl::Context*, gl::TextureType, unsigned int, float*)
gl::ValidateGetTexParameterfvRobustANGLE(gl::Context*, gl::TextureType, unsigned int, int, int*, float*)
gl::ValidateGetTexParameteriv(gl::Context*, gl::TextureType, unsigned int, int*)
gl::ValidateGetTexParameterivRobustANGLE(gl::Context*, gl::TextureType, unsigned int, int, int*, int*)
gl::ValidateGetTexParameterxv(gl::Context*, gl::TextureType, unsigned int, int*)
gl::ValidateGetTransformFeedbackVarying(gl::Context*, unsigned int, unsigned int, int, int*, int*, unsigned int*, char*)
gl::ValidateGetTranslatedShaderSourceANGLE(gl::Context*, unsigned int, int, int*, char*)
gl::ValidateGetUniformBase(gl::Context*, unsigned int, int)
gl::ValidateGetUniformBlockIndex(gl::Context*, unsigned int, char const*)
gl::ValidateGetUniformIndices(gl::Context*, unsigned int, int, char const* const*, unsigned int*)
gl::ValidateGetUniformLocation(gl::Context*, unsigned int, char const*)
gl::ValidateGetUniformfv(gl::Context*, unsigned int, int, float*)
gl::ValidateGetUniformfvRobustANGLE(gl::Context*, unsigned int, int, int, int*, float*)
gl::ValidateGetUniformiv(gl::Context*, unsigned int, int, int*)
gl::ValidateGetUniformivRobustANGLE(gl::Context*, unsigned int, int, int, int*, int*)
gl::ValidateGetUniformuiv(gl::Context*, unsigned int, int, unsigned int*)
gl::ValidateGetUniformuivRobustANGLE(gl::Context*, unsigned int, int, int, int*, unsigned int*)
gl::ValidateGetVertexAttribBase(gl::Context*, unsigned int, unsigned int, int*, bool, bool)
gl::ValidateGetVertexAttribIiv(gl::Context*, unsigned int, unsigned int, int*)
gl::ValidateGetVertexAttribIivRobustANGLE(gl::Context*, unsigned int, unsigned int, int, int*, int*)
gl::ValidateGetVertexAttribIuiv(gl::Context*, unsigned int, unsigned int, unsigned int*)
gl::ValidateGetVertexAttribIuivRobustANGLE(gl::Context*, unsigned int, unsigned int, int, int*, unsigned int*)
gl::ValidateGetVertexAttribPointerv(gl::Context*, unsigned int, unsigned int, void**)
gl::ValidateGetVertexAttribPointervRobustANGLE(gl::Context*, unsigned int, unsigned int, int, int*, void**)
gl::ValidateGetVertexAttribfv(gl::Context*, unsigned int, unsigned int, float*)
gl::ValidateGetVertexAttribfvRobustANGLE(gl::Context*, unsigned int, unsigned int, int, int*, float*)
gl::ValidateGetVertexAttribiv(gl::Context*, unsigned int, unsigned int, int*)
gl::ValidateGetVertexAttribivRobustANGLE(gl::Context*, unsigned int, unsigned int, int, int*, int*)
gl::ValidateGetnUniformfvEXT(gl::Context*, unsigned int, int, int, float*)
gl::ValidateGetnUniformfvRobustANGLE(gl::Context*, unsigned int, int, int, int*, float*)
gl::ValidateGetnUniformivEXT(gl::Context*, unsigned int, int, int, int*)
gl::ValidateGetnUniformivRobustANGLE(gl::Context*, unsigned int, int, int, int*, int*)
gl::ValidateGetnUniformuivRobustANGLE(gl::Context*, unsigned int, int, int, int*, unsigned int*)
gl::ValidateHint(gl::Context*, unsigned int, unsigned int)
gl::ValidateIndexedStateQuery(gl::Context*, unsigned int, unsigned int, int*)
gl::ValidateInsertEventMarkerEXT(gl::Context*, int, char const*)
gl::ValidateInvalidateFramebuffer(gl::Context*, unsigned int, int, unsigned int const*)
gl::ValidateInvalidateSubFramebuffer(gl::Context*, unsigned int, int, unsigned int const*, int, int, int, int)
gl::ValidateIsBuffer(gl::Context*, unsigned int)
gl::ValidateIsEnabled(gl::Context*, unsigned int)
gl::ValidateIsFenceNV(gl::Context*, unsigned int)
gl::ValidateIsFramebuffer(gl::Context*, unsigned int)
gl::ValidateIsFramebufferOES(gl::Context*, unsigned int)
gl::ValidateIsPathCHROMIUM(gl::Context*, unsigned int)
gl::ValidateIsProgram(gl::Context*, unsigned int)
gl::ValidateIsProgramPipeline(gl::Context*, unsigned int)
gl::ValidateIsQuery(gl::Context*, unsigned int)
gl::ValidateIsQueryEXT(gl::Context*, unsigned int)
gl::ValidateIsRenderbuffer(gl::Context*, unsigned int)
gl::ValidateIsRenderbufferOES(gl::Context*, unsigned int)
gl::ValidateIsSampler(gl::Context*, unsigned int)
gl::ValidateIsShader(gl::Context*, unsigned int)
gl::ValidateIsSync(gl::Context*, __GLsync*)
gl::ValidateIsTexture(gl::Context*, unsigned int)
gl::ValidateIsTransformFeedback(gl::Context*, unsigned int)
gl::ValidateIsVertexArray(gl::Context*, unsigned int)
gl::ValidateIsVertexArrayOES(gl::Context*, unsigned int)
gl::ValidateLabelLength(gl::Context*, int, char const*)
gl::ValidateLightCaps(gl::Context*, unsigned int)
gl::ValidateLightCommon(gl::Context*, unsigned int, gl::LightParameter, float const*)
gl::ValidateLightModelCommon(gl::Context*, unsigned int)
gl::ValidateLightModelSingleComponent(gl::Context*, unsigned int)
gl::ValidateLightModelf(gl::Context*, unsigned int, float)
gl::ValidateLightModelfv(gl::Context*, unsigned int, float const*)
gl::ValidateLightModelx(gl::Context*, unsigned int, int)
gl::ValidateLightModelxv(gl::Context*, unsigned int, int const*)
gl::ValidateLightSingleComponent(gl::Context*, unsigned int, gl::LightParameter, float)
gl::ValidateLightf(gl::Context*, unsigned int, gl::LightParameter, float)
gl::ValidateLightfv(gl::Context*, unsigned int, gl::LightParameter, float const*)
gl::ValidateLightx(gl::Context*, unsigned int, gl::LightParameter, int)
gl::ValidateLightxv(gl::Context*, unsigned int, gl::LightParameter, int const*)
gl::ValidateLineWidth(gl::Context*, float)
gl::ValidateLineWidthx(gl::Context*, int)
gl::ValidateLinkProgram(gl::Context*, unsigned int)
gl::ValidateLoadIdentity(gl::Context*)
gl::ValidateLoadMatrixf(gl::Context*, float const*)
gl::ValidateLoadMatrixx(gl::Context*, int const*)
gl::ValidateLoadPaletteFromModelViewMatrixOES(gl::Context*)
gl::ValidateLogicOp(gl::Context*, gl::LogicalOperation)
gl::ValidateMapBufferBase(gl::Context*, gl::BufferBinding)
gl::ValidateMapBufferOES(gl::Context*, gl::BufferBinding, unsigned int)
gl::ValidateMapBufferRange(gl::Context*, gl::BufferBinding, long, long, unsigned int)
gl::ValidateMapBufferRangeBase(gl::Context*, gl::BufferBinding, long, long, unsigned int)
gl::ValidateMapBufferRangeEXT(gl::Context*, gl::BufferBinding, long, long, unsigned int)
gl::ValidateMaterialCommon(gl::Context*, unsigned int, gl::MaterialParameter, float const*)
gl::ValidateMaterialQuery(gl::Context*, unsigned int, gl::MaterialParameter)
gl::ValidateMaterialSetting(gl::Context*, unsigned int, gl::MaterialParameter, float const*)
gl::ValidateMaterialSingleComponent(gl::Context*, unsigned int, gl::MaterialParameter, float)
gl::ValidateMaterialf(gl::Context*, unsigned int, gl::MaterialParameter, float)
gl::ValidateMaterialfv(gl::Context*, unsigned int, gl::MaterialParameter, float const*)
gl::ValidateMaterialx(gl::Context*, unsigned int, gl::MaterialParameter, int)
gl::ValidateMaterialxv(gl::Context*, unsigned int, gl::MaterialParameter, int const*)
gl::ValidateMatrixIndexPointerOES(gl::Context*, int, unsigned int, int, void const*)
gl::ValidateMatrixLoadIdentityCHROMIUM(gl::Context*, unsigned int)
gl::ValidateMatrixLoadfCHROMIUM(gl::Context*, unsigned int, float const*)
gl::ValidateMatrixMode(gl::Context*, gl::MatrixType)
gl::ValidateMaxShaderCompilerThreadsKHR(gl::Context*, unsigned int)
gl::ValidateMemoryBarrier(gl::Context*, unsigned int)
gl::ValidateMemoryBarrierByRegion(gl::Context*, unsigned int)
gl::ValidateMultMatrixf(gl::Context*, float const*)
gl::ValidateMultMatrixx(gl::Context*, int const*)
gl::ValidateMultiTexCoord4f(gl::Context*, unsigned int, float, float, float, float)
gl::ValidateMultiTexCoord4x(gl::Context*, unsigned int, int, int, int, int)
gl::ValidateMultitextureUnit(gl::Context*, unsigned int)
gl::ValidateNormal3f(gl::Context*, float, float, float)
gl::ValidateNormal3x(gl::Context*, int, int, int)
gl::ValidateNormalPointer(gl::Context*, unsigned int, int, void const*)
gl::ValidateObjectIdentifierAndName(gl::Context*, unsigned int, unsigned int)
gl::ValidateObjectLabelKHR(gl::Context*, unsigned int, unsigned int, int, char const*)
gl::ValidateObjectPtrLabelKHR(gl::Context*, void const*, int, char const*)
gl::ValidateObjectPtrName(gl::Context*, void const*)
gl::ValidateOrthof(gl::Context*, float, float, float, float, float, float)
gl::ValidateOrthox(gl::Context*, int, int, int, int, int, int)
gl::ValidatePathCommandsCHROMIUM(gl::Context*, unsigned int, int, unsigned char const*, int, unsigned int, void const*)
gl::ValidatePathParameterfCHROMIUM(gl::Context*, unsigned int, unsigned int, float)
gl::ValidatePathParameteriCHROMIUM(gl::Context*, unsigned int, unsigned int, int)
gl::ValidatePathStencilFuncCHROMIUM(gl::Context*, unsigned int, int, unsigned int)
gl::ValidatePauseTransformFeedback(gl::Context*)
gl::ValidatePixelStorei(gl::Context*, unsigned int, int)
gl::ValidatePointParameterCommon(gl::Context*, gl::PointParameter, float const*)
gl::ValidatePointParameterf(gl::Context*, gl::PointParameter, float)
gl::ValidatePointParameterfv(gl::Context*, gl::PointParameter, float const*)
gl::ValidatePointParameterx(gl::Context*, gl::PointParameter, int)
gl::ValidatePointParameterxv(gl::Context*, gl::PointParameter, int const*)
gl::ValidatePointSize(gl::Context*, float)
gl::ValidatePointSizeCommon(gl::Context*, float)
gl::ValidatePointSizePointerOES(gl::Context*, unsigned int, int, void const*)
gl::ValidatePointSizex(gl::Context*, int)
gl::ValidatePolygonOffset(gl::Context*, float, float)
gl::ValidatePolygonOffsetx(gl::Context*, int, int)
gl::ValidatePopDebugGroupKHR(gl::Context*)
gl::ValidatePopGroupMarkerEXT(gl::Context*)
gl::ValidatePopMatrix(gl::Context*)
gl::ValidateProgram(unsigned int)
gl::ValidateProgramBinary(gl::Context*, unsigned int, unsigned int, void const*, int)
gl::ValidateProgramBinaryBase(gl::Context*, unsigned int, unsigned int, void const*, int)
gl::ValidateProgramBinaryOES(gl::Context*, unsigned int, unsigned int, void const*, int)
gl::ValidateProgramContextANGLE(void*, unsigned int)
gl::ValidateProgramParameteri(gl::Context*, unsigned int, unsigned int, int)
gl::ValidateProgramPathFragmentInputGenCHROMIUM(gl::Context*, unsigned int, int, unsigned int, int, float const*)
gl::ValidateProgramPipeline(unsigned int)
gl::ValidateProgramPipelineContextANGLE(void*, unsigned int)
gl::ValidateProgramUniform1f(gl::Context*, unsigned int, int, float)
gl::ValidateProgramUniform1fv(gl::Context*, unsigned int, int, int, float const*)
gl::ValidateProgramUniform1i(gl::Context*, unsigned int, int, int)
gl::ValidateProgramUniform1iv(gl::Context*, unsigned int, int, int, int const*)
gl::ValidateProgramUniform1ui(gl::Context*, unsigned int, int, unsigned int)
gl::ValidateProgramUniform1uiv(gl::Context*, unsigned int, int, int, unsigned int const*)
gl::ValidateProgramUniform2f(gl::Context*, unsigned int, int, float, float)
gl::ValidateProgramUniform2fv(gl::Context*, unsigned int, int, int, float const*)
gl::ValidateProgramUniform2i(gl::Context*, unsigned int, int, int, int)
gl::ValidateProgramUniform2iv(gl::Context*, unsigned int, int, int, int const*)
gl::ValidateProgramUniform2ui(gl::Context*, unsigned int, int, unsigned int, unsigned int)
gl::ValidateProgramUniform2uiv(gl::Context*, unsigned int, int, int, unsigned int const*)
gl::ValidateProgramUniform3f(gl::Context*, unsigned int, int, float, float, float)
gl::ValidateProgramUniform3fv(gl::Context*, unsigned int, int, int, float const*)
gl::ValidateProgramUniform3i(gl::Context*, unsigned int, int, int, int, int)
gl::ValidateProgramUniform3iv(gl::Context*, unsigned int, int, int, int const*)
gl::ValidateProgramUniform3ui(gl::Context*, unsigned int, int, unsigned int, unsigned int, unsigned int)
gl::ValidateProgramUniform3uiv(gl::Context*, unsigned int, int, int, unsigned int const*)
gl::ValidateProgramUniform4f(gl::Context*, unsigned int, int, float, float, float, float)
gl::ValidateProgramUniform4fv(gl::Context*, unsigned int, int, int, float const*)
gl::ValidateProgramUniform4i(gl::Context*, unsigned int, int, int, int, int, int)
gl::ValidateProgramUniform4iv(gl::Context*, unsigned int, int, int, int const*)
gl::ValidateProgramUniform4ui(gl::Context*, unsigned int, int, unsigned int, unsigned int, unsigned int, unsigned int)
gl::ValidateProgramUniform4uiv(gl::Context*, unsigned int, int, int, unsigned int const*)
gl::ValidateProgramUniformMatrix2fv(gl::Context*, unsigned int, int, int, unsigned char, float const*)
gl::ValidateProgramUniformMatrix2x3fv(gl::Context*, unsigned int, int, int, unsigned char, float const*)
gl::ValidateProgramUniformMatrix2x4fv(gl::Context*, unsigned int, int, int, unsigned char, float const*)
gl::ValidateProgramUniformMatrix3fv(gl::Context*, unsigned int, int, int, unsigned char, float const*)
gl::ValidateProgramUniformMatrix3x2fv(gl::Context*, unsigned int, int, int, unsigned char, float const*)
gl::ValidateProgramUniformMatrix3x4fv(gl::Context*, unsigned int, int, int, unsigned char, float const*)
gl::ValidateProgramUniformMatrix4fv(gl::Context*, unsigned int, int, int, unsigned char, float const*)
gl::ValidateProgramUniformMatrix4x2fv(gl::Context*, unsigned int, int, int, unsigned char, float const*)
gl::ValidateProgramUniformMatrix4x3fv(gl::Context*, unsigned int, int, int, unsigned char, float const*)
gl::ValidatePushDebugGroupKHR(gl::Context*, unsigned int, unsigned int, int, char const*)
gl::ValidatePushGroupMarkerEXT(gl::Context*, int, char const*)
gl::ValidatePushMatrix(gl::Context*)
gl::ValidateQueryCounterEXT(gl::Context*, unsigned int, gl::QueryType)
gl::ValidateQueryMatrixxOES(gl::Context*, int*, int*)
gl::ValidateReadBuffer(gl::Context*, unsigned int)
gl::ValidateReadPixels(gl::Context*, int, int, int, int, unsigned int, unsigned int, void*)
gl::ValidateReadPixelsBase(gl::Context*, int, int, int, int, unsigned int, unsigned int, int, int*, int*, int*, void*)
gl::ValidateReadPixelsRobustANGLE(gl::Context*, int, int, int, int, unsigned int, unsigned int, int, int*, int*, int*, void*)
gl::ValidateReadnPixelsEXT(gl::Context*, int, int, int, int, unsigned int, unsigned int, int, void*)
gl::ValidateReadnPixelsRobustANGLE(gl::Context*, int, int, int, int, unsigned int, unsigned int, int, int*, int*, int*, void*)
gl::ValidateReleaseShaderCompiler(gl::Context*)
gl::ValidateRenderbufferStorage(gl::Context*, unsigned int, unsigned int, int, int)
gl::ValidateRenderbufferStorageMultisample(gl::Context*, unsigned int, int, unsigned int, int, int)
gl::ValidateRenderbufferStorageMultisampleANGLE(gl::Context*, unsigned int, int, unsigned int, int, int)
gl::ValidateRenderbufferStorageOES(gl::Context*, unsigned int, int, int, int)
gl::ValidateRenderbufferStorageParametersBase(gl::Context*, unsigned int, int, unsigned int, int, int)
gl::ValidateRequestExtensionANGLE(gl::Context*, char const*)
gl::ValidateResumeTransformFeedback(gl::Context*)
gl::ValidateRobustBufferSize(gl::Context*, int, int)
gl::ValidateRobustCompressedTexImageBase(gl::Context*, int, int)
gl::ValidateRobustEntryPoint(gl::Context*, int)
gl::ValidateRotatef(gl::Context*, float, float, float, float)
gl::ValidateRotatex(gl::Context*, int, int, int, int)
gl::ValidateSampleCoverage(gl::Context*, float, unsigned char)
gl::ValidateSampleCoveragex(gl::Context*, int, unsigned char)
gl::ValidateSampleMaski(gl::Context*, unsigned int, unsigned int)
gl::ValidateSamplerParameterIivRobustANGLE(gl::Context*, unsigned int, unsigned int, int, int const*)
gl::ValidateSamplerParameterIuivRobustANGLE(gl::Context*, unsigned int, unsigned int, int, unsigned int const*)
gl::ValidateSamplerParameterf(gl::Context*, unsigned int, unsigned int, float)
gl::ValidateSamplerParameterfv(gl::Context*, unsigned int, unsigned int, float const*)
gl::ValidateSamplerParameterfvRobustANGLE(gl::Context*, unsigned int, unsigned int, int, float const*)
gl::ValidateSamplerParameteri(gl::Context*, unsigned int, unsigned int, int)
gl::ValidateSamplerParameteriv(gl::Context*, unsigned int, unsigned int, int const*)
gl::ValidateSamplerParameterivRobustANGLE(gl::Context*, unsigned int, unsigned int, int, int const*)
gl::ValidateScalef(gl::Context*, float, float, float)
gl::ValidateScalex(gl::Context*, int, int, int)
gl::ValidateScissor(gl::Context*, int, int, int, int)
gl::ValidateSetFenceNV(gl::Context*, unsigned int, unsigned int)
gl::ValidateShadeModel(gl::Context*, gl::ShadingModel)
gl::ValidateShaderBinary(gl::Context*, int, unsigned int const*, unsigned int, void const*, int)
gl::ValidateShaderSource(gl::Context*, unsigned int, int, char const* const*, int const*)
gl::ValidateSizedGetUniform(gl::Context*, unsigned int, int, int, int*)
gl::ValidateStateQuery(gl::Context*, unsigned int, unsigned int*, unsigned int*)
gl::ValidateStencilFillPathCHROMIUM(gl::Context*, unsigned int, unsigned int, unsigned int)
gl::ValidateStencilFillPathInstancedCHROMIUM(gl::Context*, int, unsigned int, void const*, unsigned int, unsigned int, unsigned int, unsigned int, float const*)
gl::ValidateStencilFunc(gl::Context*, unsigned int, int, unsigned int)
gl::ValidateStencilFuncSeparate(gl::Context*, unsigned int, unsigned int, int, unsigned int)
gl::ValidateStencilMask(gl::Context*, unsigned int)
gl::ValidateStencilMaskSeparate(gl::Context*, unsigned int, unsigned int)
gl::ValidateStencilOp(gl::Context*, unsigned int, unsigned int, unsigned int)
gl::ValidateStencilOpSeparate(gl::Context*, unsigned int, unsigned int, unsigned int, unsigned int)
gl::ValidateStencilStrokePathCHROMIUM(gl::Context*, unsigned int, int, unsigned int)
gl::ValidateStencilStrokePathInstancedCHROMIUM(gl::Context*, int, unsigned int, void const*, unsigned int, int, unsigned int, unsigned int, float const*)
gl::ValidateStencilThenCoverFillPathCHROMIUM(gl::Context*, unsigned int, unsigned int, unsigned int, unsigned int)
gl::ValidateStencilThenCoverFillPathInstancedCHROMIUM(gl::Context*, int, unsigned int, void const*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, float const*)
gl::ValidateStencilThenCoverStrokePathCHROMIUM(gl::Context*, unsigned int, int, unsigned int, unsigned int)
gl::ValidateStencilThenCoverStrokePathInstancedCHROMIUM(gl::Context*, int, unsigned int, void const*, unsigned int, int, unsigned int, unsigned int, unsigned int, float const*)
gl::ValidateTestFenceNV(gl::Context*, unsigned int)
gl::ValidateTexCoordPointer(gl::Context*, int, unsigned int, int, void const*)
gl::ValidateTexEnvCommon(gl::Context*, gl::TextureEnvTarget, gl::TextureEnvParameter, float const*)
gl::ValidateTexEnvf(gl::Context*, gl::TextureEnvTarget, gl::TextureEnvParameter, float)
gl::ValidateTexEnvfv(gl::Context*, gl::TextureEnvTarget, gl::TextureEnvParameter, float const*)
gl::ValidateTexEnvi(gl::Context*, gl::TextureEnvTarget, gl::TextureEnvParameter, int)
gl::ValidateTexEnviv(gl::Context*, gl::TextureEnvTarget, gl::TextureEnvParameter, int const*)
gl::ValidateTexEnvx(gl::Context*, gl::TextureEnvTarget, gl::TextureEnvParameter, int)
gl::ValidateTexEnvxv(gl::Context*, gl::TextureEnvTarget, gl::TextureEnvParameter, int const*)
gl::ValidateTexGenfOES(gl::Context*, unsigned int, unsigned int, float)
gl::ValidateTexGenfvOES(gl::Context*, unsigned int, unsigned int, float const*)
gl::ValidateTexGeniOES(gl::Context*, unsigned int, unsigned int, int)
gl::ValidateTexGenivOES(gl::Context*, unsigned int, unsigned int, int const*)
gl::ValidateTexGenxOES(gl::Context*, unsigned int, unsigned int, int)
gl::ValidateTexGenxvOES(gl::Context*, unsigned int, unsigned int, int const*)
gl::ValidateTexImage2D(gl::Context*, gl::TextureTarget, int, int, int, int, int, unsigned int, unsigned int, void const*)
gl::ValidateTexImage2DRobustANGLE(gl::Context*, gl::TextureTarget, int, int, int, int, int, unsigned int, unsigned int, int, void const*)
gl::ValidateTexImage3D(gl::Context*, gl::TextureType, int, int, int, int, int, int, unsigned int, unsigned int, void const*)
gl::ValidateTexImage3DRobustANGLE(gl::Context*, gl::TextureType, int, int, int, int, int, int, unsigned int, unsigned int, int, void const*)
gl::ValidateTexParameterIivRobustANGLE(gl::Context*, gl::TextureType, unsigned int, int, int const*)
gl::ValidateTexParameterIuivRobustANGLE(gl::Context*, gl::TextureType, unsigned int, int, unsigned int const*)
gl::ValidateTexParameterf(gl::Context*, gl::TextureType, unsigned int, float)
gl::ValidateTexParameterfv(gl::Context*, gl::TextureType, unsigned int, float const*)
gl::ValidateTexParameterfvRobustANGLE(gl::Context*, gl::TextureType, unsigned int, int, float const*)
gl::ValidateTexParameteri(gl::Context*, gl::TextureType, unsigned int, int)
gl::ValidateTexParameteriv(gl::Context*, gl::TextureType, unsigned int, int const*)
gl::ValidateTexParameterivRobustANGLE(gl::Context*, gl::TextureType, unsigned int, int, int const*)
gl::ValidateTexParameterx(gl::Context*, gl::TextureType, unsigned int, int)
gl::ValidateTexParameterxv(gl::Context*, gl::TextureType, unsigned int, int const*)
gl::ValidateTexStorage1DEXT(gl::Context*, unsigned int, int, unsigned int, int)
gl::ValidateTexStorage2D(gl::Context*, gl::TextureType, int, unsigned int, int, int)
gl::ValidateTexStorage2DEXT(gl::Context*, gl::TextureType, int, unsigned int, int, int)
gl::ValidateTexStorage2DMultisample(gl::Context*, gl::TextureType, int, int, int, int, unsigned char)
gl::ValidateTexStorage3D(gl::Context*, gl::TextureType, int, unsigned int, int, int, int)
gl::ValidateTexStorage3DEXT(gl::Context*, gl::TextureType, int, unsigned int, int, int, int)
gl::ValidateTexStorage3DMultisampleOES(gl::Context*, gl::TextureType, int, int, int, int, int, unsigned char)
gl::ValidateTexStorageMultisample(gl::Context*, gl::TextureType, int, int, int, int)
gl::ValidateTexSubImage2D(gl::Context*, gl::TextureTarget, int, int, int, int, int, unsigned int, unsigned int, void const*)
gl::ValidateTexSubImage2DRobustANGLE(gl::Context*, gl::TextureTarget, int, int, int, int, int, unsigned int, unsigned int, int, void const*)
gl::ValidateTexSubImage3D(gl::Context*, gl::TextureType, int, int, int, int, int, int, int, unsigned int, unsigned int, void const*)
gl::ValidateTexSubImage3DRobustANGLE(gl::Context*, gl::TextureType, int, int, int, int, int, int, int, unsigned int, unsigned int, int, void const*)
gl::ValidateTransformFeedbackPrimitiveMode(gl::Context const*, gl::PrimitiveMode, gl::PrimitiveMode)
gl::ValidateTransformFeedbackVaryings(gl::Context*, unsigned int, int, char const* const*, unsigned int)
gl::ValidateTranslatef(gl::Context*, float, float, float)
gl::ValidateTranslatex(gl::Context*, int, int, int)
gl::ValidateUniform(gl::Context*, unsigned int, int, int)
gl::ValidateUniform1f(gl::Context*, int, float)
gl::ValidateUniform1fv(gl::Context*, int, int, float const*)
gl::ValidateUniform1i(gl::Context*, int, int)
gl::ValidateUniform1iv(gl::Context*, int, int, int const*)
gl::ValidateUniform1ivValue(gl::Context*, unsigned int, int, int const*)
gl::ValidateUniform1ui(gl::Context*, int, unsigned int)
gl::ValidateUniform1uiv(gl::Context*, int, int, unsigned int const*)
gl::ValidateUniform2fv(gl::Context*, int, int, float const*)
gl::ValidateUniform2i(gl::Context*, int, int, int)
gl::ValidateUniform2iv(gl::Context*, int, int, int const*)
gl::ValidateUniform2ui(gl::Context*, int, unsigned int, unsigned int)
gl::ValidateUniform2uiv(gl::Context*, int, int, unsigned int const*)
gl::ValidateUniform3f(gl::Context*, int, float, float, float)
gl::ValidateUniform3fv(gl::Context*, int, int, float const*)
gl::ValidateUniform3i(gl::Context*, int, int, int, int)
gl::ValidateUniform3iv(gl::Context*, int, int, int const*)
gl::ValidateUniform3ui(gl::Context*, int, unsigned int, unsigned int, unsigned int)
gl::ValidateUniform3uiv(gl::Context*, int, int, unsigned int const*)
gl::ValidateUniform4f(gl::Context*, int, float, float, float, float)
gl::ValidateUniform4fv(gl::Context*, int, int, float const*)
gl::ValidateUniform4i(gl::Context*, int, int, int, int, int)
gl::ValidateUniform4iv(gl::Context*, int, int, int const*)
gl::ValidateUniform4ui(gl::Context*, int, unsigned int, unsigned int, unsigned int, unsigned int)
gl::ValidateUniform4uiv(gl::Context*, int, int, unsigned int const*)
gl::ValidateUniformBlockBinding(gl::Context*, unsigned int, unsigned int, unsigned int)
gl::ValidateUniformCommonBase(gl::Context*, gl::Program*, int, int, gl::LinkedUniform const**)
gl::ValidateUniformMatrix(gl::Context*, unsigned int, int, int, unsigned char)
gl::ValidateUniformMatrix2fv(gl::Context*, int, int, unsigned char, float const*)
gl::ValidateUniformMatrix2x3fv(gl::Context*, int, int, unsigned char, float const*)
gl::ValidateUniformMatrix2x4fv(gl::Context*, int, int, unsigned char, float const*)
gl::ValidateUniformMatrix3fv(gl::Context*, int, int, unsigned char, float const*)
gl::ValidateUniformMatrix3x2fv(gl::Context*, int, int, unsigned char, float const*)
gl::ValidateUniformMatrix3x4fv(gl::Context*, int, int, unsigned char, float const*)
gl::ValidateUniformMatrix4fv(gl::Context*, int, int, unsigned char, float const*)
gl::ValidateUniformMatrix4x2fv(gl::Context*, int, int, unsigned char, float const*)
gl::ValidateUniformMatrix4x3fv(gl::Context*, int, int, unsigned char, float const*)
gl::ValidateUniformMatrixValue(gl::Context*, unsigned int, unsigned int)
gl::ValidateUnmapBuffer(gl::Context*, gl::BufferBinding)
gl::ValidateUnmapBufferBase(gl::Context*, gl::BufferBinding)
gl::ValidateUnmapBufferOES(gl::Context*, gl::BufferBinding)
gl::ValidateUseProgram(gl::Context*, unsigned int)
gl::ValidateUseProgramStages(gl::Context*, unsigned int, unsigned int, unsigned int)
gl::ValidateValidateProgram(gl::Context*, unsigned int)
gl::ValidateValidateProgramPipeline(gl::Context*, unsigned int)
gl::ValidateVertexAttrib1f(gl::Context*, unsigned int, float)
gl::ValidateVertexAttrib1fv(gl::Context*, unsigned int, float const*)
gl::ValidateVertexAttrib2f(gl::Context*, unsigned int, float, float)
gl::ValidateVertexAttrib2fv(gl::Context*, unsigned int, float const*)
gl::ValidateVertexAttrib3f(gl::Context*, unsigned int, float, float, float)
gl::ValidateVertexAttrib3fv(gl::Context*, unsigned int, float const*)
gl::ValidateVertexAttrib4f(gl::Context*, unsigned int, float, float, float, float)
gl::ValidateVertexAttrib4fv(gl::Context*, unsigned int, float const*)
gl::ValidateVertexAttribBinding(gl::Context*, unsigned int, unsigned int)
gl::ValidateVertexAttribDivisor(gl::Context*, unsigned int, unsigned int)
gl::ValidateVertexAttribDivisorANGLE(gl::Context*, unsigned int, unsigned int)
gl::ValidateVertexAttribFormat(gl::Context*, unsigned int, int, unsigned int, unsigned char, unsigned int)
gl::ValidateVertexAttribI4i(gl::Context*, unsigned int, int, int, int, int)
gl::ValidateVertexAttribI4iv(gl::Context*, unsigned int, int const*)
gl::ValidateVertexAttribI4ui(gl::Context*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
gl::ValidateVertexAttribI4uiv(gl::Context*, unsigned int, unsigned int const*)
gl::ValidateVertexAttribIFormat(gl::Context*, unsigned int, int, unsigned int, unsigned int)
gl::ValidateVertexAttribIPointer(gl::Context*, unsigned int, int, unsigned int, int, void const*)
gl::ValidateVertexAttribIndex(gl::Context*, unsigned int)
gl::ValidateVertexAttribPointer(gl::Context*, unsigned int, int, unsigned int, unsigned char, int, void const*)
gl::ValidateVertexBindingDivisor(gl::Context*, unsigned int, unsigned int)
gl::ValidateVertexFormatBase(gl::Context*, unsigned int, int, unsigned int, unsigned char)
gl::ValidateVertexPointer(gl::Context*, int, unsigned int, int, void const*)
gl::ValidateViewport(gl::Context*, int, int, int, int)
gl::ValidateWaitSync(gl::Context*, __GLsync*, unsigned int, unsigned long)
gl::ValidateWebGLFramebufferAttachmentClearType(gl::Context*, int, unsigned int const*, unsigned long)
gl::ValidateWebGLVertexAttribPointer(gl::Context*, unsigned int, unsigned char, int, void const*, bool)
gl::ValidateWeightPointerOES(gl::Context*, int, unsigned int, int, void const*)
gl::VariableBoolVectorType(unsigned int)
gl::VariableColumnCount(unsigned int)
gl::VariableComponentCount(unsigned int)
gl::VariableComponentType(unsigned int)
gl::VariableExternalSize(unsigned int)
gl::VariableLocation::VariableLocation()
gl::VariableLocation::VariableLocation(unsigned int, unsigned int)
gl::VariableRegisterCount(unsigned int)
gl::VariableRowCount(unsigned int)
gl::VariableSortOrder(unsigned int)
gl::VaryingPacking::VaryingPacking(unsigned int, gl::PackMode)
gl::VaryingPacking::collectAndPackUserVaryings(gl::InfoLog&, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, gl::ProgramVaryingRef, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, gl::ProgramVaryingRef> > > const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)
gl::VaryingPacking::getInactiveVaryingNames() const
gl::VaryingPacking::insert(unsigned int, unsigned int, gl::PackedVarying const&)
gl::VaryingPacking::packUserVaryings(gl::InfoLog&, std::__1::vector<gl::PackedVarying, std::__1::allocator<gl::PackedVarying> > const&)
gl::VaryingPacking::packVarying(gl::PackedVarying const&)
gl::VaryingPacking::~VaryingPacking()
gl::VertexArray::VertexArray(rx::GLImplFactory*, unsigned int, unsigned long, unsigned long)
gl::VertexArray::bindVertexBuffer(gl::Context const*, unsigned long, gl::Buffer*, long, int)
gl::VertexArray::bindVertexBufferImpl(gl::Context const*, unsigned long, gl::Buffer*, long, int)
gl::VertexArray::detachBuffer(gl::Context const*, unsigned int)
gl::VertexArray::enableAttribute(unsigned long, bool)
gl::VertexArray::getLabel() const
gl::VertexArray::getVertexAttribute(unsigned long) const
gl::VertexArray::getVertexBinding(unsigned long) const
gl::VertexArray::hasTransformFeedbackBindingConflict(gl::Context const*) const
gl::VertexArray::id() const
gl::VertexArray::onBindingChanged(gl::Context const*, int)
gl::VertexArray::onDestroy(gl::Context const*)
gl::VertexArray::onSubjectStateChange(gl::Context const*, unsigned long, angle::SubjectMessage)
gl::VertexArray::setElementArrayBuffer(gl::Context const*, gl::Buffer*)
gl::VertexArray::setLabel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
gl::VertexArray::setVertexAttribBinding(gl::Context const*, unsigned long, unsigned int)
gl::VertexArray::setVertexAttribDivisor(gl::Context const*, unsigned long, unsigned int)
gl::VertexArray::setVertexAttribFormat(unsigned long, int, unsigned int, bool, bool, unsigned int)
gl::VertexArray::setVertexAttribPointer(gl::Context const*, unsigned long, gl::Buffer*, int, unsigned int, bool, bool, int, void const*)
gl::VertexArray::setVertexBindingDivisor(unsigned long, unsigned int)
gl::VertexArray::syncState(gl::Context const*)
gl::VertexArray::~VertexArray()
gl::VertexArrayState::VertexArrayState(unsigned long, unsigned long)
gl::VertexArrayState::hasEnabledNullPointerClientArray() const
gl::VertexArrayState::~VertexArrayState()
gl::VertexAttrib1f(unsigned int, float)
gl::VertexAttrib1fContextANGLE(void*, unsigned int, float)
gl::VertexAttrib1fv(unsigned int, float const*)
gl::VertexAttrib1fvContextANGLE(void*, unsigned int, float const*)
gl::VertexAttrib2f(unsigned int, float, float)
gl::VertexAttrib2fContextANGLE(void*, unsigned int, float, float)
gl::VertexAttrib2fv(unsigned int, float const*)
gl::VertexAttrib2fvContextANGLE(void*, unsigned int, float const*)
gl::VertexAttrib3f(unsigned int, float, float, float)
gl::VertexAttrib3fContextANGLE(void*, unsigned int, float, float, float)
gl::VertexAttrib3fv(unsigned int, float const*)
gl::VertexAttrib3fvContextANGLE(void*, unsigned int, float const*)
gl::VertexAttrib4f(unsigned int, float, float, float, float)
gl::VertexAttrib4fContextANGLE(void*, unsigned int, float, float, float, float)
gl::VertexAttrib4fv(unsigned int, float const*)
gl::VertexAttrib4fvContextANGLE(void*, unsigned int, float const*)
gl::VertexAttribBinding(unsigned int, unsigned int)
gl::VertexAttribBindingContextANGLE(void*, unsigned int, unsigned int)
gl::VertexAttribDivisor(unsigned int, unsigned int)
gl::VertexAttribDivisorANGLE(unsigned int, unsigned int)
gl::VertexAttribDivisorANGLEContextANGLE(void*, unsigned int, unsigned int)
gl::VertexAttribDivisorContextANGLE(void*, unsigned int, unsigned int)
gl::VertexAttribFormat(unsigned int, int, unsigned int, unsigned char, unsigned int)
gl::VertexAttribFormatContextANGLE(void*, unsigned int, int, unsigned int, unsigned char, unsigned int)
gl::VertexAttribI4i(unsigned int, int, int, int, int)
gl::VertexAttribI4iContextANGLE(void*, unsigned int, int, int, int, int)
gl::VertexAttribI4iv(unsigned int, int const*)
gl::VertexAttribI4ivContextANGLE(void*, unsigned int, int const*)
gl::VertexAttribI4ui(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
gl::VertexAttribI4uiContextANGLE(void*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
gl::VertexAttribI4uiv(unsigned int, unsigned int const*)
gl::VertexAttribI4uivContextANGLE(void*, unsigned int, unsigned int const*)
gl::VertexAttribIFormat(unsigned int, int, unsigned int, unsigned int)
gl::VertexAttribIFormatContextANGLE(void*, unsigned int, int, unsigned int, unsigned int)
gl::VertexAttribIPointer(unsigned int, int, unsigned int, int, void const*)
gl::VertexAttribIPointerContextANGLE(void*, unsigned int, int, unsigned int, int, void const*)
gl::VertexAttribPointer(unsigned int, int, unsigned int, unsigned char, int, void const*)
gl::VertexAttribPointerContextANGLE(void*, unsigned int, int, unsigned int, unsigned char, int, void const*)
gl::VertexAttribute::VertexAttribute(gl::VertexAttribute&&)
gl::VertexAttribute::VertexAttribute(unsigned int)
gl::VertexAttribute::updateCachedElementLimit(gl::VertexBinding const&)
gl::VertexBinding::VertexBinding()
gl::VertexBinding::VertexBinding(gl::VertexBinding&&)
gl::VertexBinding::VertexBinding(unsigned int)
gl::VertexBinding::onContainerBindingChanged(gl::Context const*, int) const
gl::VertexBinding::setBuffer(gl::Context const*, gl::Buffer*, bool)
gl::VertexBinding::~VertexBinding()
gl::VertexBindingDivisor(unsigned int, unsigned int)
gl::VertexBindingDivisorContextANGLE(void*, unsigned int, unsigned int)
gl::VertexPointer(int, unsigned int, int, void const*)
gl::VertexPointerContextANGLE(void*, int, unsigned int, int, void const*)
gl::Viewport(int, int, int, int)
gl::ViewportContextANGLE(void*, int, int, int, int)
gl::WaitSync(__GLsync*, unsigned int, unsigned long)
gl::WaitSyncContextANGLE(void*, __GLsync*, unsigned int, unsigned long)
gl::WeightPointerOES(int, unsigned int, int, void const*)
gl::WeightPointerOESContextANGLE(void*, int, unsigned int, int, void const*)
gl::WrapMode gl::FromGLenum<gl::WrapMode>(unsigned int)
gl::averageFloat10(unsigned int, unsigned int)
gl::averageFloat11(unsigned int, unsigned int)
gl::convert999E5toRGBFloats(unsigned int, float*, float*, float*)
gl::convertRGBFloatsTo999E5(float, float, float)
gl::float16ToFloat32(unsigned short)
gl::gIsMultiThreadedContext
gl::gSingleThreadedContext
gl::g_exponent
gl::g_mantissa
gl::g_offset
gl::kAllGraphicsShaderTypes
gl::kOffsetZero
gl::operator!=(gl::Extents const&, gl::Extents const&)
gl::operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, gl::Error const&)
gl::operator==(gl::Offset const&, gl::Offset const&)
gl::priv::ShouldCreatePlatformLogMessage(int)
gl::supportsSSE2()::checked
gl::supportsSSE2()::supports
glActiveShaderProgram
glActiveShaderProgramContextANGLE
glActiveShaderProgramEXT
glActiveTexture
glActiveTextureARB
glActiveTextureContextANGLE
glAlphaFunc
glAlphaFuncContextANGLE
glAlphaFuncx
glAlphaFuncxContextANGLE
glAttachShader
glAttachShaderContextANGLE
glBeginConditionalRender
glBeginQuery
glBeginQueryContextANGLE
glBeginQueryEXT
glBeginQueryEXTContextANGLE
glBeginQueryIndexed
glBeginTransformFeedback
glBeginTransformFeedbackContextANGLE
glBeginTransformFeedbackEXT
glBindAttribLocation
glBindAttribLocationARB
glBindAttribLocationContextANGLE
glBindBuffer
glBindBufferBase
glBindBufferBaseContextANGLE
glBindBufferBaseEXT
glBindBufferContextANGLE
glBindBufferRange
glBindBufferRangeContextANGLE
glBindBufferRangeEXT
glBindBuffersBase
glBindBuffersRange
glBindFragDataLocation
glBindFragDataLocationEXT
glBindFragDataLocationEXTContextANGLE
glBindFragDataLocationIndexed
glBindFragDataLocationIndexedEXT
glBindFragDataLocationIndexedEXTContextANGLE
glBindFragmentInputLocationCHROMIUM
glBindFragmentInputLocationCHROMIUMContextANGLE
glBindFramebuffer
glBindFramebufferContextANGLE
glBindFramebufferEXT
glBindFramebufferOES
glBindFramebufferOESContextANGLE
glBindImageTexture
glBindImageTextureContextANGLE
glBindImageTextureEXT
glBindImageTextures
glBindProgramPipeline
glBindProgramPipelineContextANGLE
glBindProgramPipelineEXT
glBindRenderbuffer
glBindRenderbufferContextANGLE
glBindRenderbufferEXT
glBindRenderbufferOES
glBindRenderbufferOESContextANGLE
glBindSampler
glBindSamplerContextANGLE
glBindTexture
glBindTextureContextANGLE
glBindTextureEXT
glBindTextureUnit
glBindTransformFeedback
glBindTransformFeedbackContextANGLE
glBindUniformLocationCHROMIUM
glBindUniformLocationCHROMIUMContextANGLE
glBindVertexArray
glBindVertexArrayContextANGLE
glBindVertexArrayOES
glBindVertexArrayOESContextANGLE
glBindVertexBuffer
glBindVertexBufferContextANGLE
glBindVertexBuffers
glBlendColor
glBlendColorContextANGLE
glBlendEquation
glBlendEquationContextANGLE
glBlendEquationEXT
glBlendEquationSeparate
glBlendEquationSeparateContextANGLE
glBlendEquationSeparateEXT
glBlendEquationSeparatei
glBlendEquationSeparateiARB
glBlendEquationSeparateiEXT
glBlendEquationSeparateiOES
glBlendEquationi
glBlendEquationiARB
glBlendEquationiEXT
glBlendEquationiOES
glBlendFunc
glBlendFuncContextANGLE
glBlendFuncSeparate
glBlendFuncSeparateContextANGLE
glBlendFuncSeparateEXT
glBlendFuncSeparatei
glBlendFuncSeparateiARB
glBlendFuncSeparateiEXT
glBlendFuncSeparateiOES
glBlitFramebuffer
glBlitFramebufferANGLE
glBlitFramebufferANGLEContextANGLE
glBlitFramebufferContextANGLE
glBlitFramebufferEXT
glBlitNamedFramebuffer
glBufferData
glBufferDataContextANGLE
glBufferStorageEXT
glBufferSubData
glBufferSubDataARB
glBufferSubDataContextANGLE
glCheckFramebufferStatus
glCheckFramebufferStatusContextANGLE
glCheckFramebufferStatusEXT
glCheckFramebufferStatusOES
glCheckFramebufferStatusOESContextANGLE
glCheckNamedFramebufferStatus
glCheckNamedFramebufferStatusEXT
glClear
glClearBufferData
glClearBufferSubData
glClearBufferfi
glClearBufferfiContextANGLE
glClearBufferfv
glClearBufferfvContextANGLE
glClearBufferiv
glClearBufferivContextANGLE
glClearBufferuiv
glClearBufferuivContextANGLE
glClearColor
glClearColorContextANGLE
glClearColorx
glClearColorxContextANGLE
glClearContextANGLE
glClearDepthf
glClearDepthfContextANGLE
glClearDepthfOES
glClearDepthx
glClearDepthxContextANGLE
glClearNamedBufferData
glClearNamedBufferDataEXT
glClearNamedBufferSubData
glClearNamedBufferSubDataEXT
glClearNamedFramebufferfi
glClearNamedFramebufferfv
glClearNamedFramebufferiv
glClearNamedFramebufferuiv
glClearStencil
glClearStencilContextANGLE
glClearTexImageEXT
glClearTexSubImage
glClearTexSubImageEXT
glClientActiveTexture
glClientActiveTextureContextANGLE
glClientWaitSync
glClientWaitSyncContextANGLE
glClipControlEXT
glClipPlanef
glClipPlanefContextANGLE
glClipPlanex
glClipPlanexContextANGLE
glColor4f
glColor4fContextANGLE
glColor4ub
glColor4ubContextANGLE
glColor4x
glColor4xContextANGLE
glColorMask
glColorMaskContextANGLE
glColorPointer
glColorPointerContextANGLE
glCompileShader
glCompileShaderARB
glCompileShaderContextANGLE
glCompressedCopyTextureCHROMIUM
glCompressedCopyTextureCHROMIUMContextANGLE
glCompressedTexImage1D
glCompressedTexImage1DARB
glCompressedTexImage2D
glCompressedTexImage2DARB
glCompressedTexImage2DContextANGLE
glCompressedTexImage2DRobustANGLE
glCompressedTexImage2DRobustANGLEContextANGLE
glCompressedTexImage3D
glCompressedTexImage3DARB
glCompressedTexImage3DContextANGLE
glCompressedTexImage3DOES
glCompressedTexImage3DRobustANGLE
glCompressedTexImage3DRobustANGLEContextANGLE
glCompressedTexSubImage1D
glCompressedTexSubImage1DARB
glCompressedTexSubImage2D
glCompressedTexSubImage2DARB
glCompressedTexSubImage2DContextANGLE
glCompressedTexSubImage2DRobustANGLE
glCompressedTexSubImage2DRobustANGLEContextANGLE
glCompressedTexSubImage3D
glCompressedTexSubImage3DARB
glCompressedTexSubImage3DContextANGLE
glCompressedTexSubImage3DOES
glCompressedTexSubImage3DRobustANGLE
glCompressedTexSubImage3DRobustANGLEContextANGLE
glCompressedTextureSubImage1D
glCompressedTextureSubImage1DEXT
glCompressedTextureSubImage2D
glCompressedTextureSubImage2DEXT
glCompressedTextureSubImage3D
glCompressedTextureSubImage3DEXT
glCopyBufferSubData
glCopyBufferSubDataContextANGLE
glCopyImageSubData
glCopyImageSubDataEXT
glCopyImageSubDataOES
glCopyNamedBufferSubData
glCopySubTexture3DANGLE
glCopySubTexture3DANGLEContextANGLE
glCopySubTextureCHROMIUM
glCopySubTextureCHROMIUMContextANGLE
glCopyTexImage1D
glCopyTexImage1DEXT
glCopyTexImage2D
glCopyTexImage2DContextANGLE
glCopyTexImage2DEXT
glCopyTexSubImage1D
glCopyTexSubImage1DEXT
glCopyTexSubImage2D
glCopyTexSubImage2DContextANGLE
glCopyTexSubImage2DEXT
glCopyTexSubImage3D
glCopyTexSubImage3DContextANGLE
glCopyTexSubImage3DEXT
glCopyTexSubImage3DOES
glCopyTexture3DANGLE
glCopyTexture3DANGLEContextANGLE
glCopyTextureCHROMIUM
glCopyTextureCHROMIUM with sourceLevel != 0 not implemented.
glCopyTextureCHROMIUMContextANGLE
glCopyTextureSubImage1D
glCopyTextureSubImage1DEXT
glCopyTextureSubImage2D
glCopyTextureSubImage2DEXT
glCopyTextureSubImage3D
glCopyTextureSubImage3DEXT
glCoverFillPathCHROMIUM
glCoverFillPathCHROMIUMContextANGLE
glCoverFillPathInstancedCHROMIUM
glCoverFillPathInstancedCHROMIUMContextANGLE
glCoverFillPathInstancedNV
glCoverFillPathNV
glCoverStrokePathCHROMIUM
glCoverStrokePathCHROMIUMContextANGLE
glCoverStrokePathInstancedCHROMIUM
glCoverStrokePathInstancedCHROMIUMContextANGLE
glCoverStrokePathInstancedNV
glCoverStrokePathNV
glCoverageModulationCHROMIUM
glCoverageModulationCHROMIUMContextANGLE
glCoverageModulationNV
glCreateFramebuffers
glCreateProgram
glCreateProgramContextANGLE
glCreateProgramPipelines
glCreateRenderbuffers
glCreateSamplers
glCreateShader
glCreateShaderContextANGLE
glCreateShaderProgramv
glCreateShaderProgramvContextANGLE
glCreateShaderProgramvEXT
glCreateTextures
glCreateTransformFeedbacks
glCreateVertexArrays
glCullFace
glCullFaceContextANGLE
glCurrentPaletteMatrixOES
glCurrentPaletteMatrixOESContextANGLE
glDebugMessageCallback
glDebugMessageCallbackARB
glDebugMessageCallbackKHR
glDebugMessageCallbackKHRContextANGLE
glDebugMessageControl
glDebugMessageControlARB
glDebugMessageControlKHR
glDebugMessageControlKHRContextANGLE
glDebugMessageInsert
glDebugMessageInsertARB
glDebugMessageInsertKHR
glDebugMessageInsertKHRContextANGLE
glDeleteBuffers
glDeleteBuffersARB
glDeleteBuffersContextANGLE
glDeleteFencesNV
glDeleteFencesNVContextANGLE
glDeleteFramebuffers
glDeleteFramebuffersContextANGLE
glDeleteFramebuffersEXT
glDeleteFramebuffersOES
glDeleteFramebuffersOESContextANGLE
glDeletePathsCHROMIUM
glDeletePathsCHROMIUMContextANGLE
glDeleteProgram
glDeleteProgramContextANGLE
glDeleteProgramPipelines
glDeleteProgramPipelinesContextANGLE
glDeleteProgramPipelinesEXT
glDeleteQueries
glDeleteQueriesARB
glDeleteQueriesContextANGLE
glDeleteQueriesEXT
glDeleteQueriesEXTContextANGLE
glDeleteRenderbuffers
glDeleteRenderbuffersContextANGLE
glDeleteRenderbuffersEXT
glDeleteRenderbuffersOES
glDeleteRenderbuffersOESContextANGLE
glDeleteSamplers
glDeleteSamplersContextANGLE
glDeleteShader
glDeleteShaderContextANGLE
glDeleteSync
glDeleteSyncContextANGLE
glDeleteTextures
glDeleteTexturesContextANGLE
glDeleteTexturesEXT
glDeleteTransformFeedbacks
glDeleteTransformFeedbacksContextANGLE
glDeleteVertexArrays
glDeleteVertexArraysContextANGLE
glDeleteVertexArraysOES
glDeleteVertexArraysOESContextANGLE
glDepthFunc
glDepthFuncContextANGLE
glDepthMask
glDepthMaskContextANGLE
glDepthRangeArrayv
glDepthRangeIndexed
glDepthRangef
glDepthRangefContextANGLE
glDepthRangefOES
glDepthRangex
glDepthRangexContextANGLE
glDetachShader
glDetachShaderContextANGLE
glDisable
glDisableClientState
glDisableClientStateContextANGLE
glDisableContextANGLE
glDisableVertexArrayAttrib
glDisableVertexArrayAttribEXT
glDisableVertexAttribArray
glDisableVertexAttribArrayARB
glDisableVertexAttribArrayContextANGLE
glDiscardFramebufferEXT
glDiscardFramebufferEXTContextANGLE
glDispatchCompute
glDispatchComputeContextANGLE
glDispatchComputeIndirect
glDispatchComputeIndirectContextANGLE
glDrawArrays
glDrawArraysContextANGLE
glDrawArraysIndirect
glDrawArraysIndirectContextANGLE
glDrawArraysInstanced
glDrawArraysInstancedANGLE
glDrawArraysInstancedANGLEContextANGLE
glDrawArraysInstancedARB
glDrawArraysInstancedBaseInstance
glDrawArraysInstancedBaseInstanceEXT
glDrawArraysInstancedContextANGLE
glDrawArraysInstancedEXT
glDrawBuffers
glDrawBuffersARB
glDrawBuffersContextANGLE
glDrawBuffersEXT
glDrawBuffersEXTContextANGLE
glDrawElements
glDrawElementsBaseVertex
glDrawElementsBaseVertexEXT
glDrawElementsBaseVertexOES
glDrawElementsContextANGLE
glDrawElementsIndirect
glDrawElementsIndirectContextANGLE
glDrawElementsInstanced
glDrawElementsInstancedANGLE
glDrawElementsInstancedANGLEContextANGLE
glDrawElementsInstancedARB
glDrawElementsInstancedBaseInstance
glDrawElementsInstancedBaseInstanceEXT
glDrawElementsInstancedBaseVertex
glDrawElementsInstancedBaseVertexBaseInstance
glDrawElementsInstancedBaseVertexBaseInstanceEXT
glDrawElementsInstancedBaseVertexEXT
glDrawElementsInstancedBaseVertexOES
glDrawElementsInstancedContextANGLE
glDrawElementsInstancedEXT
glDrawRangeElements
glDrawRangeElementsBaseVertex
glDrawRangeElementsBaseVertexEXT
glDrawRangeElementsBaseVertexOES
glDrawRangeElementsContextANGLE
glDrawRangeElementsEXT
glDrawTexfOES
glDrawTexfOESContextANGLE
glDrawTexfvOES
glDrawTexfvOESContextANGLE
glDrawTexiOES
glDrawTexiOESContextANGLE
glDrawTexivOES
glDrawTexivOESContextANGLE
glDrawTexsOES
glDrawTexsOESContextANGLE
glDrawTexsvOES
glDrawTexsvOESContextANGLE
glDrawTexxOES
glDrawTexxOESContextANGLE
glDrawTexxvOES
glDrawTexxvOESContextANGLE
glDrawTransformFeedback
glDrawTransformFeedbackEXT
glDrawTransformFeedbackInstanced
glDrawTransformFeedbackInstancedEXT
glDrawTransformFeedbackStream
glDrawTransformFeedbackStreamInstanced
glEGLImageTargetRenderbufferStorageOES
glEGLImageTargetRenderbufferStorageOESContextANGLE
glEGLImageTargetTexture2DOES
glEGLImageTargetTexture2DOESContextANGLE
glEnable
glEnableClientState
glEnableClientStateContextANGLE
glEnableContextANGLE
glEnableVertexArrayAttrib
glEnableVertexArrayAttribEXT
glEnableVertexAttribArray
glEnableVertexAttribArrayARB
glEnableVertexAttribArrayContextANGLE
glEndConditionalRender
glEndQuery
glEndQueryContextANGLE
glEndQueryEXT
glEndQueryEXTContextANGLE
glEndQueryIndexed
glEndTransformFeedback
glEndTransformFeedbackContextANGLE
glEndTransformFeedbackEXT
glFenceSync
glFenceSync failed to create a GLsync object.
glFenceSyncContextANGLE
glFinish
glFinishContextANGLE
glFinishFenceNV
glFinishFenceNVContextANGLE
glFlush
glFlushContextANGLE
glFlushMappedBufferRange
glFlushMappedBufferRangeContextANGLE
glFlushMappedBufferRangeEXT
glFlushMappedBufferRangeEXTContextANGLE
glFlushMappedNamedBufferRange
glFlushMappedNamedBufferRangeEXT
glFogf
glFogfContextANGLE
glFogfv
glFogfvContextANGLE
glFogx
glFogxContextANGLE
glFogxv
glFogxvContextANGLE
glFramebufferParameteri
glFramebufferParameteriContextANGLE
glFramebufferRenderbuffer
glFramebufferRenderbufferContextANGLE
glFramebufferRenderbufferEXT
glFramebufferRenderbufferOES
glFramebufferRenderbufferOESContextANGLE
glFramebufferTexture
glFramebufferTexture1D
glFramebufferTexture1DEXT
glFramebufferTexture2D
glFramebufferTexture2DContextANGLE
glFramebufferTexture2DEXT
glFramebufferTexture2DOES
glFramebufferTexture2DOESContextANGLE
glFramebufferTexture3D
glFramebufferTexture3DEXT
glFramebufferTexture3DOES
glFramebufferTextureARB
glFramebufferTextureEXT
glFramebufferTextureEXTContextANGLE
glFramebufferTextureLayer
glFramebufferTextureLayerARB
glFramebufferTextureLayerContextANGLE
glFramebufferTextureLayerEXT
glFramebufferTextureMultiviewLayeredANGLE
glFramebufferTextureMultiviewLayeredANGLEContextANGLE
glFramebufferTextureMultiviewSideBySideANGLE
glFramebufferTextureMultiviewSideBySideANGLEContextANGLE
glFramebufferTextureOES
glFrontFace
glFrontFaceContextANGLE
glFrustumf
glFrustumfContextANGLE
glFrustumx
glFrustumxContextANGLE
glGenBuffers
glGenBuffersContextANGLE
glGenFencesNV
glGenFencesNVContextANGLE
glGenFramebuffers
glGenFramebuffersContextANGLE
glGenFramebuffersEXT
glGenFramebuffersOES
glGenFramebuffersOESContextANGLE
glGenPathsCHROMIUM
glGenPathsCHROMIUMContextANGLE
glGenProgramPipelines
glGenProgramPipelinesContextANGLE
glGenProgramPipelinesEXT
glGenQueries
glGenQueriesContextANGLE
glGenQueriesEXT
glGenQueriesEXTContextANGLE
glGenRenderbuffers
glGenRenderbuffersContextANGLE
glGenRenderbuffersEXT
glGenRenderbuffersOES
glGenRenderbuffersOESContextANGLE
glGenSamplers
glGenSamplersContextANGLE
glGenTextures
glGenTexturesContextANGLE
glGenTexturesEXT
glGenTransformFeedbacks
glGenTransformFeedbacksContextANGLE
glGenVertexArrays
glGenVertexArraysContextANGLE
glGenVertexArraysOES
glGenVertexArraysOESContextANGLE
glGenerateMipmap
glGenerateMipmapContextANGLE
glGenerateMipmapEXT
glGenerateMipmapOES
glGenerateMipmapOESContextANGLE
glGenerateTextureMipmap
glGenerateTextureMipmapEXT
glGetActiveAtomicCounterBufferiv
glGetActiveAttrib
glGetActiveAttribARB
glGetActiveAttribContextANGLE
glGetActiveSubroutineName
glGetActiveSubroutineUniformName
glGetActiveSubroutineUniformiv
glGetActiveUniform
glGetActiveUniformARB
glGetActiveUniformBlockName
glGetActiveUniformBlockNameContextANGLE
glGetActiveUniformBlockiv
glGetActiveUniformBlockivContextANGLE
glGetActiveUniformBlockivRobustANGLE
glGetActiveUniformBlockivRobustANGLEContextANGLE
glGetActiveUniformContextANGLE
glGetActiveUniformName
glGetActiveUniformsiv
glGetActiveUniformsivContextANGLE
glGetAttachedShaders
glGetAttachedShadersContextANGLE
glGetAttribLocation
glGetAttribLocationARB
glGetAttribLocationContextANGLE
glGetBooleani_v
glGetBooleani_vContextANGLE
glGetBooleani_vRobustANGLE
glGetBooleani_vRobustANGLEContextANGLE
glGetBooleanv
glGetBooleanvContextANGLE
glGetBooleanvRobustANGLE
glGetBooleanvRobustANGLEContextANGLE
glGetBufferParameteri64v
glGetBufferParameteri64vContextANGLE
glGetBufferParameteri64vRobustANGLE
glGetBufferParameteri64vRobustANGLEContextANGLE
glGetBufferParameteriv
glGetBufferParameterivARB
glGetBufferParameterivContextANGLE
glGetBufferParameterivRobustANGLE
glGetBufferParameterivRobustANGLEContextANGLE
glGetBufferPointerv
glGetBufferPointervARB
glGetBufferPointervContextANGLE
glGetBufferPointervOES
glGetBufferPointervOESContextANGLE
glGetBufferPointervRobustANGLE
glGetBufferPointervRobustANGLEContextANGLE
glGetBufferSubData
glGetBufferSubDataARB
glGetClipPlanef
glGetClipPlanefContextANGLE
glGetClipPlanex
glGetClipPlanexContextANGLE
glGetCompressedTexImage
glGetCompressedTexImageARB
glGetCompressedTextureImage
glGetCompressedTextureImageEXT
glGetCompressedTextureSubImage
glGetDebugMessageLog
glGetDebugMessageLogARB
glGetDebugMessageLogKHR
glGetDebugMessageLogKHRContextANGLE
glGetDoublei_vEXT
glGetError
glGetErrorContextANGLE
glGetFenceivNV
glGetFenceivNVContextANGLE
glGetFixedv
glGetFixedvContextANGLE
glGetFloati_vEXT
glGetFloati_vOES
glGetFloatv
glGetFloatvContextANGLE
glGetFloatvRobustANGLE
glGetFloatvRobustANGLEContextANGLE
glGetFragDataIndex
glGetFragDataIndexEXT
glGetFragDataIndexEXTContextANGLE
glGetFragDataLocation
glGetFragDataLocationContextANGLE
glGetFragDataLocationEXT
glGetFramebufferAttachmentParameteriv
glGetFramebufferAttachmentParameterivContextANGLE
glGetFramebufferAttachmentParameterivEXT
glGetFramebufferAttachmentParameterivOES
glGetFramebufferAttachmentParameterivOESContextANGLE
glGetFramebufferAttachmentParameterivRobustANGLE
glGetFramebufferAttachmentParameterivRobustANGLEContextANGLE
glGetFramebufferParameteriv
glGetFramebufferParameterivContextANGLE
glGetFramebufferParameterivEXT
glGetFramebufferParameterivRobustANGLE
glGetFramebufferParameterivRobustANGLEContextANGLE
glGetGraphicsResetStatus
glGetGraphicsResetStatusARB
glGetGraphicsResetStatusEXT
glGetGraphicsResetStatusEXTContextANGLE
glGetGraphicsResetStatusKHR
glGetInteger64i_v
glGetInteger64i_vContextANGLE
glGetInteger64i_vRobustANGLE
glGetInteger64i_vRobustANGLEContextANGLE
glGetInteger64v
glGetInteger64vContextANGLE
glGetInteger64vRobustANGLE
glGetInteger64vRobustANGLEContextANGLE
glGetIntegeri_v
glGetIntegeri_vContextANGLE
glGetIntegeri_vEXT
glGetIntegeri_vRobustANGLE
glGetIntegeri_vRobustANGLEContextANGLE
glGetIntegerv
glGetIntegervContextANGLE
glGetIntegervRobustANGLE
glGetIntegervRobustANGLEContextANGLE
glGetInternalformatSampleivNV
glGetInternalformati64v
glGetInternalformativ
glGetInternalformativContextANGLE
glGetInternalformativRobustANGLE
glGetInternalformativRobustANGLEContextANGLE
glGetLightfv
glGetLightfvContextANGLE
glGetLightxv
glGetLightxvContextANGLE
glGetMaterialfv
glGetMaterialfvContextANGLE
glGetMaterialxv
glGetMaterialxvContextANGLE
glGetMultisamplefv
glGetMultisamplefvContextANGLE
glGetMultisamplefvRobustANGLE
glGetMultisamplefvRobustANGLEContextANGLE
glGetNamedBufferParameteri64v
glGetNamedBufferParameteriv
glGetNamedBufferParameterivEXT
glGetNamedBufferPointerv
glGetNamedBufferPointervEXT
glGetNamedBufferSubData
glGetNamedBufferSubDataEXT
glGetNamedFramebufferAttachmentParameteriv
glGetNamedFramebufferAttachmentParameterivEXT
glGetNamedFramebufferParameteriv
glGetNamedFramebufferParameterivEXT
glGetNamedRenderbufferParameteriv
glGetNamedRenderbufferParameterivEXT
glGetObjectLabel
glGetObjectLabelEXT
glGetObjectLabelKHR
glGetObjectLabelKHRContextANGLE
glGetObjectPtrLabel
glGetObjectPtrLabelKHR
glGetObjectPtrLabelKHRContextANGLE
glGetPathParameterfvCHROMIUM
glGetPathParameterfvCHROMIUMContextANGLE
glGetPathParameterfvNV
glGetPathParameterivCHROMIUM
glGetPathParameterivCHROMIUMContextANGLE
glGetPathParameterivNV
glGetPointerv
glGetPointervContextANGLE
glGetPointervEXT
glGetPointervKHR
glGetPointervKHRContextANGLE
glGetPointervRobustANGLERobustANGLE
glGetPointervRobustANGLERobustANGLEContextANGLE
glGetProgramBinary
glGetProgramBinaryContextANGLE
glGetProgramBinaryOES
glGetProgramBinaryOESContextANGLE
glGetProgramInfoLog
glGetProgramInfoLogContextANGLE
glGetProgramInterfaceiv
glGetProgramInterfaceivContextANGLE
glGetProgramInterfaceivRobustANGLE
glGetProgramInterfaceivRobustANGLEContextANGLE
glGetProgramPipelineInfoLog
glGetProgramPipelineInfoLogContextANGLE
glGetProgramPipelineInfoLogEXT
glGetProgramPipelineiv
glGetProgramPipelineivContextANGLE
glGetProgramPipelineivEXT
glGetProgramResourceIndex
glGetProgramResourceIndexContextANGLE
glGetProgramResourceLocation
glGetProgramResourceLocationContextANGLE
glGetProgramResourceLocationIndex
glGetProgramResourceLocationIndexEXT
glGetProgramResourceLocationIndexEXTContextANGLE
glGetProgramResourceName
glGetProgramResourceNameContextANGLE
glGetProgramResourceiv
glGetProgramResourceivContextANGLE
glGetProgramStageiv
glGetProgramiv
glGetProgramivARB
glGetProgramivContextANGLE
glGetProgramivRobustANGLE
glGetProgramivRobustANGLEContextANGLE
glGetQueryBufferObjecti64v
glGetQueryBufferObjectiv
glGetQueryBufferObjectui64v
glGetQueryBufferObjectuiv
glGetQueryIndexediv
glGetQueryObjecti64v
glGetQueryObjecti64vEXT
glGetQueryObjecti64vEXTContextANGLE
glGetQueryObjecti64vRobustANGLE
glGetQueryObjecti64vRobustANGLEContextANGLE
glGetQueryObjectiv
glGetQueryObjectivARB
glGetQueryObjectivEXT
glGetQueryObjectivEXTContextANGLE
glGetQueryObjectivRobustANGLE
glGetQueryObjectivRobustANGLEContextANGLE
glGetQueryObjectui64v
glGetQueryObjectui64vEXT
glGetQueryObjectui64vEXTContextANGLE
glGetQueryObjectui64vRobustANGLE
glGetQueryObjectui64vRobustANGLEContextANGLE
glGetQueryObjectuiv
glGetQueryObjectuivARB
glGetQueryObjectuivContextANGLE
glGetQueryObjectuivEXT
glGetQueryObjectuivEXTContextANGLE
glGetQueryObjectuivRobustANGLE
glGetQueryObjectuivRobustANGLEContextANGLE
glGetQueryiv
glGetQueryivContextANGLE
glGetQueryivEXT
glGetQueryivEXTContextANGLE
glGetQueryivRobustANGLE
glGetQueryivRobustANGLEContextANGLE
glGetRenderbufferParameteriv
glGetRenderbufferParameterivContextANGLE
glGetRenderbufferParameterivEXT
glGetRenderbufferParameterivOES
glGetRenderbufferParameterivOESContextANGLE
glGetRenderbufferParameterivRobustANGLE
glGetRenderbufferParameterivRobustANGLEContextANGLE
glGetSamplerParameterIiv
glGetSamplerParameterIivEXT
glGetSamplerParameterIivOES
glGetSamplerParameterIivRobustANGLE
glGetSamplerParameterIivRobustANGLEContextANGLE
glGetSamplerParameterIuiv
glGetSamplerParameterIuivEXT
glGetSamplerParameterIuivOES
glGetSamplerParameterIuivRobustANGLE
glGetSamplerParameterIuivRobustANGLEContextANGLE
glGetSamplerParameterfv
glGetSamplerParameterfvContextANGLE
glGetSamplerParameterfvRobustANGLE
glGetSamplerParameterfvRobustANGLEContextANGLE
glGetSamplerParameteriv
glGetSamplerParameterivContextANGLE
glGetSamplerParameterivRobustANGLE
glGetSamplerParameterivRobustANGLEContextANGLE
glGetShaderInfoLog
glGetShaderInfoLogContextANGLE
glGetShaderPrecisionFormat
glGetShaderPrecisionFormatContextANGLE
glGetShaderSource
glGetShaderSourceARB
glGetShaderSourceContextANGLE
glGetShaderiv
glGetShaderivContextANGLE
glGetShaderivRobustANGLE
glGetShaderivRobustANGLEContextANGLE
glGetString
glGetStringContextANGLE
glGetStringi
glGetStringiContextANGLE
glGetSubroutineIndex
glGetSubroutineUniformLocation
glGetSynciv
glGetSyncivContextANGLE
glGetTexEnvfv
glGetTexEnvfvContextANGLE
glGetTexEnviv
glGetTexEnvivContextANGLE
glGetTexEnvxv
glGetTexEnvxvContextANGLE
glGetTexGenfvOES
glGetTexGenfvOESContextANGLE
glGetTexGenivOES
glGetTexGenivOESContextANGLE
glGetTexGenxvOES
glGetTexGenxvOESContextANGLE
glGetTexLevelParameterfv
glGetTexLevelParameterfvContextANGLE
glGetTexLevelParameterfvRobustANGLE
glGetTexLevelParameterfvRobustANGLEContextANGLE
glGetTexLevelParameteriv
glGetTexLevelParameterivContextANGLE
glGetTexLevelParameterivRobustANGLE
glGetTexLevelParameterivRobustANGLEContextANGLE
glGetTexParameterIiv
glGetTexParameterIivEXT
glGetTexParameterIivOES
glGetTexParameterIivRobustANGLE
glGetTexParameterIivRobustANGLEContextANGLE
glGetTexParameterIuiv
glGetTexParameterIuivEXT
glGetTexParameterIuivOES
glGetTexParameterIuivRobustANGLE
glGetTexParameterIuivRobustANGLEContextANGLE
glGetTexParameterfv
glGetTexParameterfvContextANGLE
glGetTexParameterfvRobustANGLE
glGetTexParameterfvRobustANGLEContextANGLE
glGetTexParameteriv
glGetTexParameterivContextANGLE
glGetTexParameterivRobustANGLE
glGetTexParameterivRobustANGLEContextANGLE
glGetTexParameterxv
glGetTexParameterxvContextANGLE
glGetTextureImage
glGetTextureImageEXT
glGetTextureLevelParameterfv
glGetTextureLevelParameterfvEXT
glGetTextureLevelParameteriv
glGetTextureLevelParameterivEXT
glGetTextureParameterIiv
glGetTextureParameterIivEXT
glGetTextureParameterIuiv
glGetTextureParameterIuivEXT
glGetTextureParameterfv
glGetTextureParameterfvEXT
glGetTextureParameteriv
glGetTextureParameterivEXT
glGetTextureSubImage
glGetTransformFeedbackVarying
glGetTransformFeedbackVaryingContextANGLE
glGetTransformFeedbackVaryingEXT
glGetTransformFeedbacki64_v
glGetTransformFeedbacki_v
glGetTransformFeedbackiv
glGetTranslatedShaderSourceANGLE
glGetTranslatedShaderSourceANGLEContextANGLE
glGetUniformBlockIndex
glGetUniformBlockIndexContextANGLE
glGetUniformIndices
glGetUniformIndicesContextANGLE
glGetUniformLocation
glGetUniformLocationARB
glGetUniformLocationContextANGLE
glGetUniformSubroutineuiv
glGetUniformfv
glGetUniformfvARB
glGetUniformfvContextANGLE
glGetUniformfvRobustANGLE
glGetUniformfvRobustANGLEContextANGLE
glGetUniformiv
glGetUniformivARB
glGetUniformivContextANGLE
glGetUniformivRobustANGLE
glGetUniformivRobustANGLEContextANGLE
glGetUniformuiv
glGetUniformuivContextANGLE
glGetUniformuivEXT
glGetUniformuivRobustANGLE
glGetUniformuivRobustANGLEContextANGLE
glGetVertexArrayIndexed64iv
glGetVertexArrayIndexediv
glGetVertexArrayiv
glGetVertexAttribIiv
glGetVertexAttribIivContextANGLE
glGetVertexAttribIivEXT
glGetVertexAttribIivRobustANGLE
glGetVertexAttribIivRobustANGLEContextANGLE
glGetVertexAttribIuiv
glGetVertexAttribIuivContextANGLE
glGetVertexAttribIuivEXT
glGetVertexAttribIuivRobustANGLE
glGetVertexAttribIuivRobustANGLEContextANGLE
glGetVertexAttribLdv
glGetVertexAttribLdvEXT
glGetVertexAttribPointerv
glGetVertexAttribPointervARB
glGetVertexAttribPointervContextANGLE
glGetVertexAttribPointervRobustANGLE
glGetVertexAttribPointervRobustANGLEContextANGLE
glGetVertexAttribdv
glGetVertexAttribdvARB
glGetVertexAttribfv
glGetVertexAttribfvARB
glGetVertexAttribfvContextANGLE
glGetVertexAttribfvRobustANGLE
glGetVertexAttribfvRobustANGLEContextANGLE
glGetVertexAttribiv
glGetVertexAttribivARB
glGetVertexAttribivContextANGLE
glGetVertexAttribivRobustANGLE
glGetVertexAttribivRobustANGLEContextANGLE
glGetnCompressedTexImage
glGetnCompressedTexImageARB
glGetnTexImageARB
glGetnUniformdvARB
glGetnUniformfvARB
glGetnUniformfvEXT
glGetnUniformfvEXTContextANGLE
glGetnUniformfvKHR
glGetnUniformfvRobustANGLE
glGetnUniformfvRobustANGLEContextANGLE
glGetnUniformivARB
glGetnUniformivEXT
glGetnUniformivEXTContextANGLE
glGetnUniformivKHR
glGetnUniformivRobustANGLE
glGetnUniformivRobustANGLEContextANGLE
glGetnUniformuiv
glGetnUniformuivARB
glGetnUniformuivKHR
glGetnUniformuivRobustANGLE
glGetnUniformuivRobustANGLEContextANGLE
glHint
glHintContextANGLE
glInsertEventMarkerEXT
glInsertEventMarkerEXTContextANGLE
glInvalidateBufferData
glInvalidateBufferSubData
glInvalidateFramebuffer
glInvalidateFramebufferContextANGLE
glInvalidateNamedFramebufferData
glInvalidateNamedFramebufferSubData
glInvalidateSubFramebuffer
glInvalidateSubFramebufferContextANGLE
glInvalidateTexImage
glInvalidateTexSubImage
glIsBuffer
glIsBufferContextANGLE
glIsEnabled
glIsEnabledContextANGLE
glIsFenceNV
glIsFenceNVContextANGLE
glIsFramebuffer
glIsFramebufferContextANGLE
glIsFramebufferEXT
glIsFramebufferOES
glIsFramebufferOESContextANGLE
glIsPathCHROMIUM
glIsPathCHROMIUMContextANGLE
glIsProgram
glIsProgramContextANGLE
glIsProgramPipeline
glIsProgramPipelineContextANGLE
glIsProgramPipelineEXT
glIsQuery
glIsQueryContextANGLE
glIsQueryEXT
glIsQueryEXTContextANGLE
glIsRenderbuffer
glIsRenderbufferContextANGLE
glIsRenderbufferEXT
glIsRenderbufferOES
glIsRenderbufferOESContextANGLE
glIsSampler
glIsSamplerContextANGLE
glIsShader
glIsShaderContextANGLE
glIsSync
glIsSyncContextANGLE
glIsTexture
glIsTextureContextANGLE
glIsTransformFeedback
glIsTransformFeedbackContextANGLE
glIsVertexArray
glIsVertexArrayContextANGLE
glIsVertexArrayOES
glIsVertexArrayOESContextANGLE
glLightModelf
glLightModelfContextANGLE
glLightModelfv
glLightModelfvContextANGLE
glLightModelx
glLightModelxContextANGLE
glLightModelxv
glLightModelxvContextANGLE
glLightf
glLightfContextANGLE
glLightfv
glLightfvContextANGLE
glLightx
glLightxContextANGLE
glLightxv
glLightxvContextANGLE
glLineWidth
glLineWidthContextANGLE
glLineWidthx
glLineWidthxContextANGLE
glLinkProgram
glLinkProgramARB
glLinkProgramContextANGLE
glLoadIdentity
glLoadIdentityContextANGLE
glLoadMatrixf
glLoadMatrixfContextANGLE
glLoadMatrixx
glLoadMatrixxContextANGLE
glLoadPaletteFromModelViewMatrixOES
glLoadPaletteFromModelViewMatrixOESContextANGLE
glLogicOp
glLogicOpContextANGLE
glMapBufferOES
glMapBufferOESContextANGLE
glMapBufferRange
glMapBufferRangeContextANGLE
glMapBufferRangeEXT
glMapBufferRangeEXTContextANGLE
glMapNamedBuffer
glMapNamedBufferEXT
glMapNamedBufferRange
glMapNamedBufferRangeEXT
glMaterialf
glMaterialfContextANGLE
glMaterialfv
glMaterialfvContextANGLE
glMaterialx
glMaterialxContextANGLE
glMaterialxv
glMaterialxvContextANGLE
glMatrixIndexPointerOES
glMatrixIndexPointerOESContextANGLE
glMatrixLoadIdentityCHROMIUM
glMatrixLoadIdentityCHROMIUMContextANGLE
glMatrixLoadfCHROMIUM
glMatrixLoadfCHROMIUMContextANGLE
glMatrixLoadfEXT
glMatrixMode
glMatrixModeContextANGLE
glMaxShaderCompilerThreadsKHR
glMaxShaderCompilerThreadsKHRContextANGLE
glMemoryBarrier
glMemoryBarrierByRegion
glMemoryBarrierByRegionContextANGLE
glMemoryBarrierContextANGLE
glMemoryBarrierEXT
glMinSampleShading
glMinSampleShadingARB
glMinSampleShadingOES
glMultMatrixf
glMultMatrixfContextANGLE
glMultMatrixx
glMultMatrixxContextANGLE
glMultiDrawArrays
glMultiDrawArraysEXT
glMultiDrawArraysIndirect
glMultiDrawArraysIndirectEXT
glMultiDrawElements
glMultiDrawElementsBaseVertex
glMultiDrawElementsBaseVertexEXT
glMultiDrawElementsEXT
glMultiDrawElementsIndirect
glMultiDrawElementsIndirectEXT
glMultiTexCoord4f
glMultiTexCoord4fContextANGLE
glMultiTexCoord4x
glMultiTexCoord4xContextANGLE
glNamedBufferData
glNamedBufferDataEXT
glNamedBufferStorage
glNamedBufferStorageEXT
glNamedBufferSubData
glNamedBufferSubDataEXT
glNamedFramebufferDrawBuffer
glNamedFramebufferDrawBuffers
glNamedFramebufferParameteri
glNamedFramebufferParameteriEXT
glNamedFramebufferReadBuffer
glNamedFramebufferRenderbuffer
glNamedFramebufferRenderbufferEXT
glNamedFramebufferTexture
glNamedFramebufferTextureEXT
glNamedFramebufferTextureLayer
glNamedFramebufferTextureLayerEXT
glNamedRenderbufferStorage
glNamedRenderbufferStorageEXT
glNamedRenderbufferStorageMultisample
glNamedRenderbufferStorageMultisampleEXT
glNormal3f
glNormal3fContextANGLE
glNormal3x
glNormal3xContextANGLE
glNormalPointer
glNormalPointerContextANGLE
glObjectLabelKHR
glObjectLabelKHRContextANGLE
glObjectPtrLabel
glObjectPtrLabelKHR
glObjectPtrLabelKHRContextANGLE
glOrthof
glOrthofContextANGLE
glOrthox
glOrthoxContextANGLE
glPatchParameterfv
glPatchParameteri
glPatchParameteriEXT
glPatchParameteriOES
glPathCommandsCHROMIUM
glPathCommandsCHROMIUMContextANGLE
glPathCommandsNV
glPathParameterfCHROMIUM
glPathParameterfCHROMIUMContextANGLE
glPathParameterfNV
glPathParameteriCHROMIUM
glPathParameteriCHROMIUMContextANGLE
glPathParameteriNV
glPathStencilFuncCHROMIUM
glPathStencilFuncCHROMIUMContextANGLE
glPathStencilFuncNV
glPauseTransformFeedback
glPauseTransformFeedbackContextANGLE
glPixelStorei
glPixelStoreiContextANGLE
glPointParameterf
glPointParameterfARB
glPointParameterfContextANGLE
glPointParameterfEXT
glPointParameterfv
glPointParameterfvARB
glPointParameterfvContextANGLE
glPointParameterfvEXT
glPointParameteri
glPointParameteriv
glPointParameterx
glPointParameterxContextANGLE
glPointParameterxv
glPointParameterxvContextANGLE
glPointSize
glPointSizeContextANGLE
glPointSizePointerOES
glPointSizePointerOESContextANGLE
glPointSizex
glPointSizexContextANGLE
glPolygonOffset
glPolygonOffsetContextANGLE
glPolygonOffsetEXT
glPolygonOffsetx
glPolygonOffsetxContextANGLE
glPopDebugGroupKHR
glPopDebugGroupKHRContextANGLE
glPopGroupMarkerEXT
glPopGroupMarkerEXTContextANGLE
glPopMatrix
glPopMatrixContextANGLE
glPrimitiveBoundingBox
glPrimitiveBoundingBoxARB
glPrimitiveBoundingBoxEXT
glPrimitiveBoundingBoxOES
glPrimitiveRestartIndex
glProgramBinary
glProgramBinaryContextANGLE
glProgramBinaryOES
glProgramBinaryOESContextANGLE
glProgramParameteri
glProgramParameteriARB
glProgramParameteriContextANGLE
glProgramParameteriEXT
glProgramPathFragmentInputGenCHROMIUM
glProgramPathFragmentInputGenCHROMIUMContextANGLE
glProgramPathFragmentInputGenNV
glProgramUniform1d
glProgramUniform1dEXT
glProgramUniform1dv
glProgramUniform1dvEXT
glProgramUniform1f
glProgramUniform1fContextANGLE
glProgramUniform1fEXT
glProgramUniform1fv
glProgramUniform1fvContextANGLE
glProgramUniform1fvEXT
glProgramUniform1i
glProgramUniform1iContextANGLE
glProgramUniform1iEXT
glProgramUniform1iv
glProgramUniform1ivContextANGLE
glProgramUniform1ivEXT
glProgramUniform1ui
glProgramUniform1uiContextANGLE
glProgramUniform1uiEXT
glProgramUniform1uiv
glProgramUniform1uivContextANGLE
glProgramUniform1uivEXT
glProgramUniform2d
glProgramUniform2dEXT
glProgramUniform2dv
glProgramUniform2dvEXT
glProgramUniform2f
glProgramUniform2fContextANGLE
glProgramUniform2fEXT
glProgramUniform2fv
glProgramUniform2fvContextANGLE
glProgramUniform2fvEXT
glProgramUniform2i
glProgramUniform2iContextANGLE
glProgramUniform2iEXT
glProgramUniform2iv
glProgramUniform2ivContextANGLE
glProgramUniform2ivEXT
glProgramUniform2ui
glProgramUniform2uiContextANGLE
glProgramUniform2uiEXT
glProgramUniform2uiv
glProgramUniform2uivContextANGLE
glProgramUniform2uivEXT
glProgramUniform3d
glProgramUniform3dEXT
glProgramUniform3dv
glProgramUniform3dvEXT
glProgramUniform3f
glProgramUniform3fContextANGLE
glProgramUniform3fEXT
glProgramUniform3fv
glProgramUniform3fvContextANGLE
glProgramUniform3fvEXT
glProgramUniform3i
glProgramUniform3iContextANGLE
glProgramUniform3iEXT
glProgramUniform3iv
glProgramUniform3ivContextANGLE
glProgramUniform3ivEXT
glProgramUniform3ui
glProgramUniform3uiContextANGLE
glProgramUniform3uiEXT
glProgramUniform3uiv
glProgramUniform3uivContextANGLE
glProgramUniform3uivEXT
glProgramUniform4d
glProgramUniform4dEXT
glProgramUniform4dv
glProgramUniform4dvEXT
glProgramUniform4f
glProgramUniform4fContextANGLE
glProgramUniform4fEXT
glProgramUniform4fv
glProgramUniform4fvContextANGLE
glProgramUniform4fvEXT
glProgramUniform4i
glProgramUniform4iContextANGLE
glProgramUniform4iEXT
glProgramUniform4iv
glProgramUniform4ivContextANGLE
glProgramUniform4ivEXT
glProgramUniform4ui
glProgramUniform4uiContextANGLE
glProgramUniform4uiEXT
glProgramUniform4uiv
glProgramUniform4uivContextANGLE
glProgramUniform4uivEXT
glProgramUniformMatrix2dv
glProgramUniformMatrix2dvEXT
glProgramUniformMatrix2fv
glProgramUniformMatrix2fvContextANGLE
glProgramUniformMatrix2fvEXT
glProgramUniformMatrix2x3dv
glProgramUniformMatrix2x3dvEXT
glProgramUniformMatrix2x3fv
glProgramUniformMatrix2x3fvContextANGLE
glProgramUniformMatrix2x3fvEXT
glProgramUniformMatrix2x4dv
glProgramUniformMatrix2x4dvEXT
glProgramUniformMatrix2x4fv
glProgramUniformMatrix2x4fvContextANGLE
glProgramUniformMatrix2x4fvEXT
glProgramUniformMatrix3dv
glProgramUniformMatrix3dvEXT
glProgramUniformMatrix3fv
glProgramUniformMatrix3fvContextANGLE
glProgramUniformMatrix3fvEXT
glProgramUniformMatrix3x2dv
glProgramUniformMatrix3x2dvEXT
glProgramUniformMatrix3x2fv
glProgramUniformMatrix3x2fvContextANGLE
glProgramUniformMatrix3x2fvEXT
glProgramUniformMatrix3x4dv
glProgramUniformMatrix3x4dvEXT
glProgramUniformMatrix3x4fv
glProgramUniformMatrix3x4fvContextANGLE
glProgramUniformMatrix3x4fvEXT
glProgramUniformMatrix4dv
glProgramUniformMatrix4dvEXT
glProgramUniformMatrix4fv
glProgramUniformMatrix4fvContextANGLE
glProgramUniformMatrix4fvEXT
glProgramUniformMatrix4x2dv
glProgramUniformMatrix4x2dvEXT
glProgramUniformMatrix4x2fv
glProgramUniformMatrix4x2fvContextANGLE
glProgramUniformMatrix4x2fvEXT
glProgramUniformMatrix4x3dv
glProgramUniformMatrix4x3dvEXT
glProgramUniformMatrix4x3fv
glProgramUniformMatrix4x3fvContextANGLE
glProgramUniformMatrix4x3fvEXT
glProvokingVertex
glProvokingVertexEXT
glPushDebugGroup
glPushDebugGroupKHR
glPushDebugGroupKHRContextANGLE
glPushGroupMarkerEXT
glPushGroupMarkerEXTContextANGLE
glPushMatrix
glPushMatrixContextANGLE
glQueryCounterEXT
glQueryCounterEXTContextANGLE
glQueryMatrixxOES
glQueryMatrixxOESContextANGLE
glReadBuffer
glReadBufferContextANGLE
glReadPixels
glReadPixelsContextANGLE
glReadPixelsRobustANGLE
glReadPixelsRobustANGLEContextANGLE
glReadnPixelsARB
glReadnPixelsEXT
glReadnPixelsEXTContextANGLE
glReadnPixelsKHR
glReadnPixelsRobustANGLE
glReadnPixelsRobustANGLEContextANGLE
glReleaseShaderCompiler
glReleaseShaderCompilerContextANGLE
glRenderbufferStorage
glRenderbufferStorageContextANGLE
glRenderbufferStorageEXT
glRenderbufferStorageMultisample
glRenderbufferStorageMultisampleANGLE
glRenderbufferStorageMultisampleANGLEContextANGLE
glRenderbufferStorageMultisampleContextANGLE
glRenderbufferStorageMultisampleEXT
glRenderbufferStorageOES
glRenderbufferStorageOESContextANGLE
glRequestExtensionANGLE
glRequestExtensionANGLEContextANGLE
glResumeTransformFeedback
glResumeTransformFeedbackContextANGLE
glRotatef
glRotatefContextANGLE
glRotatex
glRotatexContextANGLE
glSampleCoverage
glSampleCoverageARB
glSampleCoverageContextANGLE
glSampleCoveragex
glSampleCoveragexContextANGLE
glSampleMaski
glSampleMaskiContextANGLE
glSamplerParameterIiv
glSamplerParameterIivEXT
glSamplerParameterIivOES
glSamplerParameterIivRobustANGLE
glSamplerParameterIivRobustANGLEContextANGLE
glSamplerParameterIuiv
glSamplerParameterIuivEXT
glSamplerParameterIuivOES
glSamplerParameterIuivRobustANGLE
glSamplerParameterIuivRobustANGLEContextANGLE
glSamplerParameterf
glSamplerParameterfContextANGLE
glSamplerParameterfv
glSamplerParameterfvContextANGLE
glSamplerParameterfvRobustANGLE
glSamplerParameterfvRobustANGLEContextANGLE
glSamplerParameteri
glSamplerParameteriContextANGLE
glSamplerParameteriv
glSamplerParameterivContextANGLE
glSamplerParameterivRobustANGLE
glSamplerParameterivRobustANGLEContextANGLE
glScalef
glScalefContextANGLE
glScalex
glScalexContextANGLE
glScissor
glScissorArrayvOES
glScissorContextANGLE
glScissorIndexed
glScissorIndexedOES
glScissorIndexedv
glScissorIndexedvOES
glSetFenceNV
glSetFenceNVContextANGLE
glShadeModel
glShadeModelContextANGLE
glShaderBinary
glShaderBinaryContextANGLE
glShaderSource
glShaderSourceARB
glShaderSourceContextANGLE
glShaderStorageBlockBinding
glStencilFillPathCHROMIUM
glStencilFillPathCHROMIUMContextANGLE
glStencilFillPathInstancedCHROMIUM
glStencilFillPathInstancedCHROMIUMContextANGLE
glStencilFillPathInstancedNV
glStencilFillPathNV
glStencilFunc
glStencilFuncContextANGLE
glStencilFuncSeparate
glStencilFuncSeparateContextANGLE
glStencilMask
glStencilMaskContextANGLE
glStencilMaskSeparate
glStencilMaskSeparateContextANGLE
glStencilOp
glStencilOpContextANGLE
glStencilOpSeparate
glStencilOpSeparateContextANGLE
glStencilStrokePathCHROMIUM
glStencilStrokePathCHROMIUMContextANGLE
glStencilStrokePathInstancedCHROMIUM
glStencilStrokePathInstancedCHROMIUMContextANGLE
glStencilStrokePathInstancedNV
glStencilStrokePathNV
glStencilThenCoverFillPathCHROMIUM
glStencilThenCoverFillPathCHROMIUMContextANGLE
glStencilThenCoverFillPathInstancedCHROMIUM
glStencilThenCoverFillPathInstancedCHROMIUMContextANGLE
glStencilThenCoverFillPathInstancedNV
glStencilThenCoverFillPathNV
glStencilThenCoverStrokePathCHROMIUM
glStencilThenCoverStrokePathCHROMIUMContextANGLE
glStencilThenCoverStrokePathInstancedCHROMIUM
glStencilThenCoverStrokePathInstancedCHROMIUMContextANGLE
glStencilThenCoverStrokePathInstancedNV
glStencilThenCoverStrokePathNV
glTestFenceNV
glTestFenceNVContextANGLE
glTexBufferRange
glTexBufferRangeEXT
glTexBufferRangeOES
glTexCoordPointer
glTexCoordPointerContextANGLE
glTexEnvf
glTexEnvfContextANGLE
glTexEnvfv
glTexEnvfvContextANGLE
glTexEnvi
glTexEnviContextANGLE
glTexEnviv
glTexEnvivContextANGLE
glTexEnvx
glTexEnvxContextANGLE
glTexEnvxv
glTexEnvxvContextANGLE
glTexGenfOES
glTexGenfOESContextANGLE
glTexGenfvOES
glTexGenfvOESContextANGLE
glTexGeniOES
glTexGeniOESContextANGLE
glTexGenivOES
glTexGenivOESContextANGLE
glTexGenxOES
glTexGenxOESContextANGLE
glTexGenxvOES
glTexGenxvOESContextANGLE
glTexImage2D
glTexImage2DContextANGLE
glTexImage2DMultisample
glTexImage2DRobustANGLE
glTexImage2DRobustANGLEContextANGLE
glTexImage3D
glTexImage3DContextANGLE
glTexImage3DMultisample
glTexImage3DRobustANGLE
glTexImage3DRobustANGLEContextANGLE
glTexParameterIiv
glTexParameterIivEXT
glTexParameterIivOES
glTexParameterIivRobustANGLE
glTexParameterIivRobustANGLEContextANGLE
glTexParameterIuiv
glTexParameterIuivEXT
glTexParameterIuivOES
glTexParameterIuivRobustANGLE
glTexParameterIuivRobustANGLEContextANGLE
glTexParameterf
glTexParameterfContextANGLE
glTexParameterfv
glTexParameterfvContextANGLE
glTexParameterfvRobustANGLE
glTexParameterfvRobustANGLEContextANGLE
glTexParameteri
glTexParameteriContextANGLE
glTexParameteriv
glTexParameterivContextANGLE
glTexParameterivRobustANGLE
glTexParameterivRobustANGLEContextANGLE
glTexParameterx
glTexParameterxContextANGLE
glTexParameterxv
glTexParameterxvContextANGLE
glTexStorage1DEXT
glTexStorage1DEXTContextANGLE
glTexStorage2D
glTexStorage2DContextANGLE
glTexStorage2DEXT
glTexStorage2DEXTContextANGLE
glTexStorage2DMultisample
glTexStorage2DMultisampleContextANGLE
glTexStorage3D
glTexStorage3DContextANGLE
glTexStorage3DEXT
glTexStorage3DEXTContextANGLE
glTexStorage3DMultisample
glTexStorage3DMultisampleOES
glTexStorage3DMultisampleOESContextANGLE
glTexSubImage1DEXT
glTexSubImage2D
glTexSubImage2DContextANGLE
glTexSubImage2DEXT
glTexSubImage2DRobustANGLE
glTexSubImage2DRobustANGLEContextANGLE
glTexSubImage3D
glTexSubImage3DContextANGLE
glTexSubImage3DEXT
glTexSubImage3DOES
glTexSubImage3DRobustANGLE
glTexSubImage3DRobustANGLEContextANGLE
glTextureBarrier
glTextureBufferEXT
glTextureBufferRange
glTextureBufferRangeEXT
glTextureParameterIiv
glTextureParameterIivEXT
glTextureParameterIuiv
glTextureParameterIuivEXT
glTextureParameterf
glTextureParameterfEXT
glTextureParameterfv
glTextureParameterfvEXT
glTextureParameteri
glTextureParameteriEXT
glTextureParameteriv
glTextureParameterivEXT
glTextureStorage1D
glTextureStorage1DEXT
glTextureStorage2D
glTextureStorage2DEXT
glTextureStorage2DMultisample
glTextureStorage2DMultisampleEXT
glTextureStorage3D
glTextureStorage3DEXT
glTextureStorage3DMultisample
glTextureStorage3DMultisampleEXT
glTextureSubImage1D
glTextureSubImage1DEXT
glTextureSubImage2D
glTextureSubImage2DEXT
glTextureSubImage3D
glTextureSubImage3DEXT
glTextureViewEXT
glTextureViewOES
glTransformFeedbackBufferBase
glTransformFeedbackBufferRange
glTransformFeedbackVaryings
glTransformFeedbackVaryingsContextANGLE
glTransformFeedbackVaryingsEXT
glTranslatef
glTranslatefContextANGLE
glTranslatex
glTranslatexContextANGLE
glUniform1f
glUniform1fContextANGLE
glUniform1fv
glUniform1fvContextANGLE
glUniform1i
glUniform1iContextANGLE
glUniform1iv
glUniform1ivContextANGLE
glUniform1ui
glUniform1uiContextANGLE
glUniform1uiv
glUniform1uivContextANGLE
glUniform1uivEXT
glUniform2f
glUniform2fContextANGLE
glUniform2fv
glUniform2fvContextANGLE
glUniform2i
glUniform2iContextANGLE
glUniform2iv
glUniform2ivContextANGLE
glUniform2ui
glUniform2uiContextANGLE
glUniform2uiv
glUniform2uivContextANGLE
glUniform2uivEXT
glUniform3f
glUniform3fContextANGLE
glUniform3fv
glUniform3fvContextANGLE
glUniform3i
glUniform3iContextANGLE
glUniform3iv
glUniform3ivContextANGLE
glUniform3ui
glUniform3uiContextANGLE
glUniform3uiv
glUniform3uivContextANGLE
glUniform3uivEXT
glUniform4f
glUniform4fContextANGLE
glUniform4fv
glUniform4fvContextANGLE
glUniform4i
glUniform4iContextANGLE
glUniform4iv
glUniform4ivContextANGLE
glUniform4ui
glUniform4uiContextANGLE
glUniform4uiv
glUniform4uivContextANGLE
glUniform4uivEXT
glUniformBlockBinding
glUniformBlockBindingContextANGLE
glUniformMatrix2dv
glUniformMatrix2fv
glUniformMatrix2fvARB
glUniformMatrix2fvContextANGLE
glUniformMatrix2x3dv
glUniformMatrix2x3fv
glUniformMatrix2x3fvContextANGLE
glUniformMatrix2x4dv
glUniformMatrix2x4fv
glUniformMatrix2x4fvContextANGLE
glUniformMatrix3dv
glUniformMatrix3fv
glUniformMatrix3fvARB
glUniformMatrix3fvContextANGLE
glUniformMatrix3x2dv
glUniformMatrix3x2fv
glUniformMatrix3x2fvContextANGLE
glUniformMatrix3x4dv
glUniformMatrix3x4fv
glUniformMatrix3x4fvContextANGLE
glUniformMatrix4dv
glUniformMatrix4fv
glUniformMatrix4fvARB
glUniformMatrix4fvContextANGLE
glUniformMatrix4x2dv
glUniformMatrix4x2fv
glUniformMatrix4x2fvContextANGLE
glUniformMatrix4x3dv
glUniformMatrix4x3fv
glUniformMatrix4x3fvContextANGLE
glUniformSubroutinesuiv
glUnmapBuffer
glUnmapBufferARB
glUnmapBufferContextANGLE
glUnmapBufferOES
glUnmapBufferOESContextANGLE
glUnmapNamedBuffer
glUnmapNamedBufferEXT
glUseProgram
glUseProgramContextANGLE
glUseProgramStages
glUseProgramStagesContextANGLE
glUseProgramStagesEXT
glValidateProgram
glValidateProgramARB
glValidateProgramContextANGLE
glValidateProgramPipeline
glValidateProgramPipelineContextANGLE
glValidateProgramPipelineEXT
glVertexArrayAttribBinding
glVertexArrayAttribFormat
glVertexArrayAttribIFormat
glVertexArrayAttribLFormat
glVertexArrayBindingDivisor
glVertexArrayElementBuffer
glVertexArrayVertexBuffer
glVertexArrayVertexBuffers
glVertexAttrib1d
glVertexAttrib1dARB
glVertexAttrib1dv
glVertexAttrib1dvARB
glVertexAttrib1f
glVertexAttrib1fARB
glVertexAttrib1fContextANGLE
glVertexAttrib1fv
glVertexAttrib1fvARB
glVertexAttrib1fvContextANGLE
glVertexAttrib1s
glVertexAttrib1sARB
glVertexAttrib1sv
glVertexAttrib1svARB
glVertexAttrib2d
glVertexAttrib2dARB
glVertexAttrib2dv
glVertexAttrib2dvARB
glVertexAttrib2f
glVertexAttrib2fARB
glVertexAttrib2fContextANGLE
glVertexAttrib2fv
glVertexAttrib2fvARB
glVertexAttrib2fvContextANGLE
glVertexAttrib2s
glVertexAttrib2sARB
glVertexAttrib2sv
glVertexAttrib2svARB
glVertexAttrib3d
glVertexAttrib3dARB
glVertexAttrib3dv
glVertexAttrib3dvARB
glVertexAttrib3f
glVertexAttrib3fARB
glVertexAttrib3fContextANGLE
glVertexAttrib3fv
glVertexAttrib3fvARB
glVertexAttrib3fvContextANGLE
glVertexAttrib3s
glVertexAttrib3sARB
glVertexAttrib3sv
glVertexAttrib3svARB
glVertexAttrib4Nbv
glVertexAttrib4NbvARB
glVertexAttrib4Niv
glVertexAttrib4NivARB
glVertexAttrib4Nsv
glVertexAttrib4NsvARB
glVertexAttrib4Nub
glVertexAttrib4NubARB
glVertexAttrib4Nubv
glVertexAttrib4NubvARB
glVertexAttrib4Nuiv
glVertexAttrib4NuivARB
glVertexAttrib4Nusv
glVertexAttrib4NusvARB
glVertexAttrib4bv
glVertexAttrib4bvARB
glVertexAttrib4d
glVertexAttrib4dARB
glVertexAttrib4dv
glVertexAttrib4dvARB
glVertexAttrib4f
glVertexAttrib4fARB
glVertexAttrib4fContextANGLE
glVertexAttrib4fv
glVertexAttrib4fvARB
glVertexAttrib4fvContextANGLE
glVertexAttrib4iv
glVertexAttrib4ivARB
glVertexAttrib4s
glVertexAttrib4sARB
glVertexAttrib4sv
glVertexAttrib4svARB
glVertexAttrib4ubv
glVertexAttrib4ubvARB
glVertexAttrib4uiv
glVertexAttrib4uivARB
glVertexAttrib4usv
glVertexAttrib4usvARB
glVertexAttribBinding
glVertexAttribBindingContextANGLE
glVertexAttribDivisor
glVertexAttribDivisorANGLE
glVertexAttribDivisorANGLEContextANGLE
glVertexAttribDivisorARB
glVertexAttribDivisorContextANGLE
glVertexAttribDivisorEXT
glVertexAttribFormat
glVertexAttribFormatContextANGLE
glVertexAttribI1i
glVertexAttribI1iEXT
glVertexAttribI1iv
glVertexAttribI1ivEXT
glVertexAttribI1ui
glVertexAttribI1uiEXT
glVertexAttribI1uiv
glVertexAttribI1uivEXT
glVertexAttribI2i
glVertexAttribI2iEXT
glVertexAttribI2iv
glVertexAttribI2ivEXT
glVertexAttribI2ui
glVertexAttribI2uiEXT
glVertexAttribI2uiv
glVertexAttribI2uivEXT
glVertexAttribI3i
glVertexAttribI3iEXT
glVertexAttribI3iv
glVertexAttribI3ivEXT
glVertexAttribI3ui
glVertexAttribI3uiEXT
glVertexAttribI3uiv
glVertexAttribI3uivEXT
glVertexAttribI4bv
glVertexAttribI4bvEXT
glVertexAttribI4i
glVertexAttribI4iContextANGLE
glVertexAttribI4iEXT
glVertexAttribI4iv
glVertexAttribI4ivContextANGLE
glVertexAttribI4ivEXT
glVertexAttribI4sv
glVertexAttribI4svEXT
glVertexAttribI4ubv
glVertexAttribI4ubvEXT
glVertexAttribI4ui
glVertexAttribI4uiContextANGLE
glVertexAttribI4uiEXT
glVertexAttribI4uiv
glVertexAttribI4uivContextANGLE
glVertexAttribI4uivEXT
glVertexAttribI4usv
glVertexAttribI4usvEXT
glVertexAttribIFormat
glVertexAttribIFormatContextANGLE
glVertexAttribIPointer
glVertexAttribIPointerContextANGLE
glVertexAttribIPointerEXT
glVertexAttribL1d
glVertexAttribL1dEXT
glVertexAttribL1dv
glVertexAttribL1dvEXT
glVertexAttribL2d
glVertexAttribL2dEXT
glVertexAttribL2dv
glVertexAttribL2dvEXT
glVertexAttribL3d
glVertexAttribL3dEXT
glVertexAttribL3dv
glVertexAttribL3dvEXT
glVertexAttribL4d
glVertexAttribL4dEXT
glVertexAttribL4dv
glVertexAttribL4dvEXT
glVertexAttribLFormat
glVertexAttribLPointer
glVertexAttribLPointerEXT
glVertexAttribP1ui
glVertexAttribP1uiv
glVertexAttribP2ui
glVertexAttribP2uiv
glVertexAttribP3ui
glVertexAttribP3uiv
glVertexAttribP4ui
glVertexAttribP4uiv
glVertexAttribPointer
glVertexAttribPointerARB
glVertexAttribPointerContextANGLE
glVertexBindingDivisor
glVertexBindingDivisorContextANGLE
glVertexPointer
glVertexPointerContextANGLE
glViewport
glViewportArrayv
glViewportArrayvOES
glViewportContextANGLE
glViewportIndexedf
glViewportIndexedfOES
glViewportIndexedfv
glViewportIndexedfvOES
glWaitSync
glWaitSyncContextANGLE
glWeightPointerOES
glWeightPointerOESContextANGLE
glXGetProcAddressARB
glXQueryExtensionsString returned NULL
gl_BackColor
gl_BackSecondaryColor
gl_BaseInstance
gl_BaseInstanceARB
gl_BaseVertex
gl_BaseVertexARB
gl_BoundingBoxOES
gl_ClipDistance
gl_ClipDistance array size
gl_ClipVertex
gl_Color
gl_CullDistance
gl_CullDistance array size
gl_DepthRange
gl_DepthRangeParameters
gl_DeviceIndex
gl_DrawID
gl_DrawIDARB
gl_FogCoord
gl_FogFragCoord
gl_FragCoord can only be declared invariant if and only if gl_Position is declared invariant.
gl_FragCoord origin is upper left
gl_FragCoord pixel center is integer
gl_FragCoord redeclarations must match across shaders
gl_FragDepthEXT
gl_FragStencilRefARB
gl_FrontColor
gl_FrontSecondaryColor
gl_HelperInvocation
gl_InstanceId
gl_InstanceIndex
gl_LastFragColor
gl_LastFragColorARM
gl_LastFragData
gl_Layer
gl_MaxAtomicCounterBufferSize
gl_MaxClipDistances
gl_MaxCombinedAtomicCounterBuffers
gl_MaxCombinedAtomicCounters
gl_MaxCombinedImageUniforms
gl_MaxCombinedShaderOutputResources
gl_MaxComputeAtomicCounterBuffers
gl_MaxComputeAtomicCounters
gl_MaxComputeImageUniforms
gl_MaxComputeTextureImageUnits
gl_MaxComputeUniformComponents
gl_MaxComputeWorkGroupCount
gl_MaxCullDistances
gl_MaxDualSourceDrawBuffersEXT
gl_MaxFragmentAtomicCounterBuffers
gl_MaxFragmentAtomicCounters
gl_MaxFragmentImageUniforms
gl_MaxFragmentInputVectors
gl_MaxFragmentUniformVectors
gl_MaxGeometryAtomicCounterBuffers
gl_MaxGeometryAtomicCounters
gl_MaxGeometryImageUniforms
gl_MaxGeometryInputComponents
gl_MaxGeometryOutputComponents
gl_MaxGeometryTextureImageUnits
gl_MaxGeometryTotalOutputComponents
gl_MaxGeometryUniformComponents
gl_MaxProgramTexelOffset
gl_MaxTextureCoords
gl_MaxTextureImageUnits
gl_MaxTransformFeedbackBuffers
gl_MaxTransformFeedbackBuffers is %d
gl_MaxTransformFeedbackInterleavedComponents
gl_MaxTransformFeedbackInterleavedComponents is %d
gl_MaxVaryingVectors
gl_MaxVertexAtom!
gl_MaxVertexAtomicCounterBuffers
gl_MaxVertexAtomicCounters
gl_MaxVertexAttribs
gl_MaxVertexImageUniforms
gl_MaxVertexOutputVectors
gl_MaxVertexTextureImageUnits
gl_MaxVertexUniformVectors
gl_MaxViewports
gl_MinProgramTexelOffset
gl_MultiTexCoord0
gl_MultiTexCoord1
gl_MultiTexCoord2
gl_MultiTexCoord3
gl_MultiTexCoord4
gl_MultiTexCoord5
gl_MultiTexCoord6
gl_MultiTexCoord7
gl_Normal
gl_NumSamples
gl_NumSubgroups
gl_PatchVerticesIn
gl_PerFragment
gl_PerVertex
gl_PointCoord can only be declared invariant if and only if gl_PointSize is declared invariant.
gl_PointSize
gl_Position
gl_Position = vec4((a_texcoord * 2.0) - 1.0, 0.0, 1.0);
gl_PrimitiveID
gl_SampleID
gl_SampleMask
gl_SampleMaskIn
gl_SamplePosition
gl_ScopeDevice
gl_ScopeInvocation
gl_ScopeSubgroup
gl_ScopeWorkgroup
gl_SecondaryColor
gl_SecondaryFragColorEXT
gl_SecondaryFragDataEXT
gl_SemanticsAcquire
gl_SemanticsAcquire must not be used with (image) atomic store
gl_SemanticsAcquireRelease must not be used with (image) atomic load/store
gl_SemanticsMakeAvailable
gl_SemanticsMakeAvailable requires gl_SemanticsRelease or gl_SemanticsAcquireRelease
gl_SemanticsMakeVisible
gl_SemanticsMakeVisible requires gl_SemanticsAcquire or gl_SemanticsAcquireRelease
gl_SemanticsRelaxed
gl_SemanticsRelease
gl_SemanticsRelease must not be used with (image) atomic load
gl_StorageSemanticsBuffer
gl_StorageSemanticsImage
gl_StorageSemanticsNone
gl_StorageSemanticsOutput
gl_StorageSemanticsShared
gl_SubGroupEqMaskARB
gl_SubGroupGeMaskARB
gl_SubGroupGtMaskARB
gl_SubGroupInvocationARB
gl_SubGroupLeMaskARB
gl_SubGroupLtMaskARB
gl_SubGroupSizeARB
gl_SubgroupEqMask
gl_SubgroupGeMask
gl_SubgroupGtMask
gl_SubgroupID
gl_SubgroupInvocationID
gl_SubgroupLeMask
gl_SubgroupLtMask
gl_SubgroupSize
gl_TessCoord
gl_TessLevelInner
gl_TessLevelOuter
gl_TexCoord
gl_TexCoord array size
gl_Vertex
gl_VertexId
gl_VertexIndex
gl_ViewIndex
gl_ViewportIndex
gl_egl::GLComponentTypeToEGLColorComponentType(unsigned int)
gl_out
global
global const initializers must be constant
global storage input qualifier cannot be used in a compute shader
global storage output qualifier cannot be used in a compute shader
global variable initializers must be constant expressions
global variable initializers should be constant expressions (uniforms and globals are allowed in global initializers for legacy compatibility)
global_state.cpp
glslang::(anonymous namespace)::gMutex
glslang::(anonymous namespace)::op_add(int, int)
glslang::(anonymous namespace)::op_and(int, int)
glslang::(anonymous namespace)::op_cmpl(int)
glslang::(anonymous namespace)::op_div(int, int)
glslang::(anonymous namespace)::op_eq(int, int)
glslang::(anonymous namespace)::op_ge(int, int)
glslang::(anonymous namespace)::op_gt(int, int)
glslang::(anonymous namespace)::op_le(int, int)
glslang::(anonymous namespace)::op_logand(int, int)
glslang::(anonymous namespace)::op_logor(int, int)
glslang::(anonymous namespace)::op_lt(int, int)
glslang::(anonymous namespace)::op_mod(int, int)
glslang::(anonymous namespace)::op_mul(int, int)
glslang::(anonymous namespace)::op_ne(int, int)
glslang::(anonymous namespace)::op_neg(int)
glslang::(anonymous namespace)::op_not(int)
glslang::(anonymous namespace)::op_or(int, int)
glslang::(anonymous namespace)::op_pos(int)
glslang::(anonymous namespace)::op_shl(int, int)
glslang::(anonymous namespace)::op_shr(int, int)
glslang::(anonymous namespace)::op_sub(int, int)
glslang::(anonymous namespace)::op_xor(int, int)
glslang::AEP_geometry_point_size
glslang::AEP_geometry_shader
glslang::AEP_gpu_shader5
glslang::AEP_primitive_bounding_box
glslang::AEP_shader_io_blocks
glslang::AEP_tessellation_point_size
glslang::AEP_tessellation_shader
glslang::AEP_texture_buffer
glslang::AEP_texture_cube_map_array
glslang::BuiltInVariable(char const*, char const*, glslang::TBuiltInVariable, glslang::TSymbolTable&)
glslang::BuiltInVariable(char const*, glslang::TBuiltInVariable, glslang::TSymbolTable&)
glslang::DefaultTBuiltInResource
glslang::E_GL_ARB_compute_shader
glslang::E_GL_ARB_derivative_control
glslang::E_GL_ARB_enhanced_layouts
glslang::E_GL_ARB_shader_atomic_counters
glslang::E_GL_ARB_shader_ballot
glslang::E_GL_ARB_shader_draw_parameters
glslang::E_GL_ARB_shader_group_vote
glslang::E_GL_ARB_shader_image_load_store
glslang::E_GL_ARB_shader_stencil_export
glslang::E_GL_ARB_shader_texture_lod
glslang::E_GL_ARB_shader_viewport_layer_array
glslang::E_GL_ARB_shading_language_420pack
glslang::E_GL_ARB_sparse_texture2
glslang::E_GL_ARB_sparse_texture_clamp
glslang::E_GL_ARB_tessellation_shader
glslang::E_GL_ARB_texture_rectangle
glslang::E_GL_ARB_viewport_array
glslang::E_GL_EXT_control_flow_attributes
glslang::E_GL_EXT_device_group
glslang::E_GL_EXT_frag_depth
glslang::E_GL_EXT_multiview
glslang::E_GL_EXT_nonuniform_qualifier
glslang::E_GL_EXT_samplerless_texture_functions
glslang::E_GL_EXT_shader_atomic_int64
glslang::E_GL_EXT_shader_texture_lod
glslang::E_GL_EXT_shadow_samplers
glslang::E_GL_GOOGLE_cpp_style_line_directive
glslang::E_GL_GOOGLE_include_directive
glslang::E_GL_KHR_memory_scope_semantics
glslang::E_GL_KHR_shader_subgroup_arithmetic
glslang::E_GL_KHR_shader_subgroup_ballot
glslang::E_GL_KHR_shader_subgroup_basic
glslang::E_GL_KHR_shader_subgroup_clustered
glslang::E_GL_KHR_shader_subgroup_quad
glslang::E_GL_KHR_shader_subgroup_shuffle
glslang::E_GL_KHR_shader_subgroup_shuffle_relative
glslang::E_GL_KHR_shader_subgroup_vote
glslang::E_GL_OES_EGL_image_external
glslang::E_GL_OES_EGL_image_external_essl3
glslang::E_GL_OES_sample_variables
glslang::E_GL_OES_shader_image_atomic
glslang::E_GL_OES_shader_multisample_interpolation
glslang::E_GL_OES_standard_derivatives
glslang::E_GL_OES_texture_storage_multisample_2d_array
glslang::GetBuiltInVariableString(glslang::TBuiltInVariable)
glslang::GetGlobalLock()
glslang::GetKhronosToolId()
glslang::GetThreadPoolAllocator()
glslang::GlslangToSpv(glslang::TIntermediate const&, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >&, glslang::SpvOptions*)
glslang::GlslangToSpv(glslang::TIntermediate const&, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >&, spv::SpvBuildLogger*, glslang::SpvOptions*)
glslang::InitGlobalLock()
glslang::InitProcess()
glslang::InitThread()
glslang::InitializePoolIndex()
glslang::OS_AllocTLSIndex()
glslang::OS_GetTLSValue(void*)
glslang::OS_SetTLSValue(void*, void*)
glslang::OVR_multiview_EXTs
glslang::OutputConstantUnion(TInfoSink&, glslang::TIntermTyped const*, glslang::TConstUnionArray const&, glslang::TOutputTraverser::EExtraOutput, int)
glslang::OutputTreeText(TInfoSink&, TIntermNode const*, int)
glslang::PoolIndex
glslang::PropagateNoContraction(glslang::TIntermediate const&)
glslang::PureOperatorBuiltins
glslang::ReleaseGlobalLock()
glslang::SetThreadPoolAllocator(glslang::TPoolAllocator*)
glslang::SpecialQualifier(char const*, glslang::TStorageQualifier, glslang::TBuiltInVariable, glslang::TSymbolTable&)
glslang::TAnonMember::clone() const
glslang::TAnonMember::dump(TInfoSink&) const
glslang::TAnonMember::getAnonContainer() const
glslang::TAnonMember::getAnonId() const
glslang::TAnonMember::getAsAnonMember() const
glslang::TAnonMember::getMemberNumber() const
glslang::TAnonMember::getType() const
glslang::TAnonMember::getWritableType()
glslang::TAnonMember::~TAnonMember()
glslang::TBuiltInIdTraverser::visitSymbol(glslang::TIntermSymbol*)
glslang::TBuiltInIdTraverser::~TBuiltInIdTraverser()
glslang::TBuiltInParseables::TBuiltInParseables()
glslang::TBuiltInParseables::getCommonString() const
glslang::TBuiltInParseables::getStageString(EShLanguage) const
glslang::TBuiltInParseables::~TBuiltInParseables()
glslang::TBuiltIns::TBuiltIns()
glslang::TBuiltIns::add2ndGenerationSamplingImaging(int, EProfile, glslang::SpvVersion const&)
glslang::TBuiltIns::addGatherFunctions(glslang::TSampler, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&, int, EProfile)
glslang::TBuiltIns::addImageFunctions(glslang::TSampler, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&, int, EProfile)
glslang::TBuiltIns::addImageFunctions(glslang::TSampler, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&, int, EProfile)::atomicFunc
glslang::TBuiltIns::addQueryFunctions(glslang::TSampler, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&, int, EProfile)
glslang::TBuiltIns::addSamplingFunctions(glslang::TSampler, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&, int, EProfile)
glslang::TBuiltIns::addSubpassSampling(glslang::TSampler, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&, int, EProfile)
glslang::TBuiltIns::identifyBuiltIns(int, EProfile, glslang::SpvVersion const&, EShLanguage, glslang::TSymbolTable&)
glslang::TBuiltIns::identifyBuiltIns(int, EProfile, glslang::SpvVersion const&, EShLanguage, glslang::TSymbolTable&, TBuiltInResource const&)
glslang::TBuiltIns::initialize(TBuiltInResource const&, int, EProfile, glslang::SpvVersion const&, EShLanguage)
glslang::TBuiltIns::initialize(int, EProfile, glslang::SpvVersion const&)
glslang::TBuiltIns::~TBuiltIns()
glslang::TCall::TCall(glslang::TCall const&)
glslang::TCall::TCall(std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&)
glslang::TConstTraverser::visitAggregate(glslang::TVisit, glslang::TIntermAggregate*)
glslang::TConstTraverser::visitConstantUnion(glslang::TIntermConstantUnion*)
glslang::TConstTraverser::~TConstTraverser()
glslang::TConstUnion::operator%(glslang::TConstUnion const&) const
glslang::TConstUnion::operator&(glslang::TConstUnion const&) const
glslang::TConstUnion::operator<<(glslang::TConstUnion const&) const
glslang::TConstUnion::operator==(glslang::TConstUnion const&) const
glslang::TConstUnion::operator>>(glslang::TConstUnion const&) const
glslang::TConstUnion::operator^(glslang::TConstUnion const&) const
glslang::TConstUnion::operator|(glslang::TConstUnion const&) const
glslang::TConstUnionArray::TConstUnionArray(glslang::TConstUnionArray const&, int, int)
glslang::TConstUnionArray::TConstUnionArray(int)
glslang::TConstUnionArray::~TConstUnionArray()
glslang::TDeferredCompiler::compile(TIntermNode*, int, EProfile)
glslang::TDeferredCompiler::~TDeferredCompiler()
glslang::TFunction::TFunction(glslang::TFunction const&)
glslang::TFunction::TFunction(std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const*, glslang::TType const&, glslang::TOperator)
glslang::TFunction::addParameter(glslang::TParameter&)
glslang::TFunction::addPrefix(char const*)
glslang::TFunction::addThisParameter(glslang::TType&, char const*)
glslang::TFunction::clone() const
glslang::TFunction::dump(TInfoSink&) const
glslang::TFunction::getAsFunction()
glslang::TFunction::getAsFunction() const
glslang::TFunction::getBuiltInOp() const
glslang::TFunction::getDeclaredBuiltInType() const
glslang::TFunction::getDefaultParamCount() const
glslang::TFunction::getFixedParamCount() const
glslang::TFunction::getMangledName() const
glslang::TFunction::getParamCount() const
glslang::TFunction::getType() const
glslang::TFunction::getWritableType()
glslang::TFunction::hasIllegalImplicitThis() const
glslang::TFunction::hasImplicitThis() const
glslang::TFunction::isDefined() const
glslang::TFunction::isPrototyped() const
glslang::TFunction::operator[](int)
glslang::TFunction::operator[](int) const
glslang::TFunction::relateToOperator(glslang::TOperator)
glslang::TFunction::removePrefix(std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&)
glslang::TFunction::setDefined()
glslang::TFunction::setIllegalImplicitThis()
glslang::TFunction::setImplicitThis()
glslang::TFunction::setPrototyped()
glslang::TFunction::~TFunction()
glslang::TIndexTraverser::visitAggregate(glslang::TVisit, glslang::TIntermAggregate*)
glslang::TIndexTraverser::visitSymbol(glslang::TIntermSymbol*)
glslang::TIndexTraverser::~TIndexTraverser()
glslang::TInductiveTraverser::visitAggregate(glslang::TVisit, glslang::TIntermAggregate*)
glslang::TInductiveTraverser::visitBinary(glslang::TVisit, glslang::TIntermBinary*)
glslang::TInductiveTraverser::visitUnary(glslang::TVisit, glslang::TIntermUnary*)
glslang::TInductiveTraverser::~TInductiveTraverser()
glslang::TInfoSinkBase::append(char const*)
glslang::TInfoSinkBase::append(std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&)
glslang::TInfoSinkBase::append(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
glslang::TInfoSinkBase::location(glslang::TSourceLoc const&)
glslang::TInfoSinkBase::operator<<(int)
glslang::TInfoSinkBase::operator<<(unsigned int)
glslang::TInfoSinkBase::prefix(glslang::TPrefixType)
glslang::TInputScanner::advance()
glslang::TInputScanner::consumeComment()
glslang::TInputScanner::consumeWhiteSpace(bool&)
glslang::TInputScanner::scanVersion(int&, EProfile&, bool&)
glslang::TInputScanner::unget()
glslang::TInputScanner::~TInputScanner()
glslang::TIntermAggregate::getAsAggregate()
glslang::TIntermAggregate::getAsAggregate() const
glslang::TIntermAggregate::getName() const
glslang::TIntermAggregate::getQualifierList()
glslang::TIntermAggregate::getQualifierList() const
glslang::TIntermAggregate::getSequence()
glslang::TIntermAggregate::getSequence() const
glslang::TIntermAggregate::isUserDefined()
glslang::TIntermAggregate::setName(std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&)
glslang::TIntermAggregate::setOperator(glslang::TOperator)
glslang::TIntermAggregate::setPragmaTable(glslang::TPragmaTable const&)
glslang::TIntermAggregate::setUserDefined()
glslang::TIntermAggregate::traverse(glslang::TIntermTraverser*)
glslang::TIntermAggregate::~TIntermAggregate()
glslang::TIntermBinary::getAsBinaryNode()
glslang::TIntermBinary::getAsBinaryNode() const
glslang::TIntermBinary::getLeft() const
glslang::TIntermBinary::getRight() const
glslang::TIntermBinary::setLeft(glslang::TIntermTyped*)
glslang::TIntermBinary::setRight(glslang::TIntermTyped*)
glslang::TIntermBinary::traverse(glslang::TIntermTraverser*)
glslang::TIntermBinary::updatePrecision()
glslang::TIntermBinary::~TIntermBinary()
glslang::TIntermBranch::getAsBranchNode()
glslang::TIntermBranch::getAsBranchNode() const
glslang::TIntermBranch::traverse(glslang::TIntermTraverser*)
glslang::TIntermBranch::~TIntermBranch()
glslang::TIntermConstantUnion::fold(glslang::TOperator, glslang::TIntermTyped const*) const
glslang::TIntermConstantUnion::fold(glslang::TOperator, glslang::TType const&) const
glslang::TIntermConstantUnion::getAsConstantUnion()
glslang::TIntermConstantUnion::getAsConstantUnion() const
glslang::TIntermConstantUnion::traverse(glslang::TIntermTraverser*)
glslang::TIntermConstantUnion::~TIntermConstantUnion()
glslang::TIntermLoop::getAsLoopNode()
glslang::TIntermLoop::getAsLoopNode() const
glslang::TIntermLoop::traverse(glslang::TIntermTraverser*)
glslang::TIntermLoop::~TIntermLoop()
glslang::TIntermMethod::TIntermMethod(glslang::TIntermTyped*, glslang::TType const&, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&)
glslang::TIntermMethod::getAsMethodNode()
glslang::TIntermMethod::getAsMethodNode() const
glslang::TIntermMethod::getMethodName() const
glslang::TIntermMethod::getObject() const
glslang::TIntermMethod::traverse(glslang::TIntermTraverser*)
glslang::TIntermMethod::~TIntermMethod()
glslang::TIntermOperator::crackTexture(glslang::TSampler, glslang::TCrackedTextureOp&) const
glslang::TIntermOperator::getAsOperator()
glslang::TIntermOperator::getAsOperator() const
glslang::TIntermOperator::getCompleteString() const
glslang::TIntermOperator::isConstructor() const
glslang::TIntermOperator::modifiesState() const
glslang::TIntermSelection::getAsSelectionNode()
glslang::TIntermSelection::getAsSelectionNode() const
glslang::TIntermSelection::getCondition() const
glslang::TIntermSelection::getFalseBlock() const
glslang::TIntermSelection::getTrueBlock() const
glslang::TIntermSelection::traverse(glslang::TIntermTraverser*)
glslang::TIntermSelection::~TIntermSelection()
glslang::TIntermSwitch::getAsSwitchNode()
glslang::TIntermSwitch::getAsSwitchNode() const
glslang::TIntermSwitch::getBody() const
glslang::TIntermSwitch::getCondition() const
glslang::TIntermSwitch::traverse(glslang::TIntermTraverser*)
glslang::TIntermSwitch::~TIntermSwitch()
glslang::TIntermSymbol::changeId(int)
glslang::TIntermSymbol::getAsSymbolNode()
glslang::TIntermSymbol::getAsSymbolNode() const
glslang::TIntermSymbol::getId() const
glslang::TIntermSymbol::getName() const
glslang::TIntermSymbol::switchId(int)
glslang::TIntermSymbol::traverse(glslang::TIntermTraverser*)
glslang::TIntermSymbol::~TIntermSymbol()
glslang::TIntermTraverser::incrementDepth(TIntermNode*)
glslang::TIntermTraverser::visitAggregate(glslang::TVisit, glslang::TIntermAggregate*)
glslang::TIntermTraverser::visitBinary(glslang::TVisit, glslang::TIntermBinary*)
glslang::TIntermTraverser::visitBranch(glslang::TVisit, glslang::TIntermBranch*)
glslang::TIntermTraverser::visitConstantUnion(glslang::TIntermConstantUnion*)
glslang::TIntermTraverser::visitLoop(glslang::TVisit, glslang::TIntermLoop*)
glslang::TIntermTraverser::visitSelection(glslang::TVisit, glslang::TIntermSelection*)
glslang::TIntermTraverser::visitSwitch(glslang::TVisit, glslang::TIntermSwitch*)
glslang::TIntermTraverser::visitSymbol(glslang::TIntermSymbol*)
glslang::TIntermTraverser::visitUnary(glslang::TVisit, glslang::TIntermUnary*)
glslang::TIntermTraverser::~TIntermTraverser()
glslang::TIntermTyped* glslang::TIntermediate::addSwizzle<int>(glslang::TSwizzleSelectors<int>&, glslang::TSourceLoc const&)
glslang::TIntermTyped::getAsTyped()
glslang::TIntermTyped::getAsTyped() const
glslang::TIntermTyped::getBasicType() const
glslang::TIntermTyped::getMatrixCols() const
glslang::TIntermTyped::getMatrixRows() const
glslang::TIntermTyped::getQualifier()
glslang::TIntermTyped::getQualifier() const
glslang::TIntermTyped::getType() const
glslang::TIntermTyped::getVectorSize() const
glslang::TIntermTyped::getWritableType()
glslang::TIntermTyped::isArray() const
glslang::TIntermTyped::isFloatingDomain() const
glslang::TIntermTyped::isIntegerDomain() const
glslang::TIntermTyped::isMatrix() const
glslang::TIntermTyped::isScalar() const
glslang::TIntermTyped::isStruct() const
glslang::TIntermTyped::isVector() const
glslang::TIntermTyped::propagatePrecision(glslang::TPrecisionQualifier)
glslang::TIntermTyped::setType(glslang::TType const&)
glslang::TIntermTyped::~TIntermTyped()
glslang::TIntermUnary::getAsUnaryNode()
glslang::TIntermUnary::getAsUnaryNode() const
glslang::TIntermUnary::getOperand()
glslang::TIntermUnary::getOperand() const
glslang::TIntermUnary::setOperand(glslang::TIntermTyped*)
glslang::TIntermUnary::traverse(glslang::TIntermTraverser*)
glslang::TIntermUnary::updatePrecision()
glslang::TIntermUnary::~TIntermUnary()
glslang::TIntermediate::TIntermediate(EShLanguage, int, EProfile)
glslang::TIntermediate::addAssign(glslang::TOperator, glslang::TIntermTyped*, glslang::TIntermTyped*, glslang::TSourceLoc)
glslang::TIntermediate::addBiShapeConversion(glslang::TOperator, glslang::TIntermTyped*&, glslang::TIntermTyped*&)
glslang::TIntermediate::addBinaryMath(glslang::TOperator, glslang::TIntermTyped*, glslang::TIntermTyped*, glslang::TSourceLoc)
glslang::TIntermediate::addBranch(glslang::TOperator, glslang::TIntermTyped*, glslang::TSourceLoc const&)
glslang::TIntermediate::addBranch(glslang::TOperator, glslang::TSourceLoc const&)
glslang::TIntermediate::addBuiltInFunctionCall(glslang::TSourceLoc const&, glslang::TOperator, bool, TIntermNode*, glslang::TType const&)
glslang::TIntermediate::addComma(glslang::TIntermTyped*, glslang::TIntermTyped*, glslang::TSourceLoc const&)
glslang::TIntermediate::addConstantUnion(bool, glslang::TSourceLoc const&, bool) const
glslang::TIntermediate::addConstantUnion(double, glslang::TBasicType, glslang::TSourceLoc const&, bool) const
glslang::TIntermediate::addConstantUnion(glslang::TConstUnionArray const&, glslang::TType const&, glslang::TSourceLoc const&, bool) const
glslang::TIntermediate::addConstantUnion(int, glslang::TSourceLoc const&, bool) const
glslang::TIntermediate::addConstantUnion(long long, glslang::TSourceLoc const&, bool) const
glslang::TIntermediate::addConstantUnion(short, glslang::TSourceLoc const&, bool) const
glslang::TIntermediate::addConstantUnion(unsigned int, glslang::TSourceLoc const&, bool) const
glslang::TIntermediate::addConstantUnion(unsigned long long, glslang::TSourceLoc const&, bool) const
glslang::TIntermediate::addConstantUnion(unsigned short, glslang::TSourceLoc const&, bool) const
glslang::TIntermediate::addConversion(glslang::TOperator, glslang::TIntermTyped*, glslang::TIntermTyped*) const
glslang::TIntermediate::addConversion(glslang::TOperator, glslang::TType const&, glslang::TIntermTyped*) const
glslang::TIntermediate::addIndex(glslang::TOperator, glslang::TIntermTyped*, glslang::TIntermTyped*, glslang::TSourceLoc)
glslang::TIntermediate::addLoop(TIntermNode*, glslang::TIntermTyped*, glslang::TIntermTyped*, bool, glslang::TSourceLoc const&)
glslang::TIntermediate::addMethod(glslang::TIntermTyped*, glslang::TType const&, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const*, glslang::TSourceLoc const&)
glslang::TIntermediate::addRequestedExtension(char const*)
glslang::TIntermediate::addSelection(glslang::TIntermTyped*, glslang::TIntermNodePair, glslang::TSourceLoc const&)
glslang::TIntermediate::addSelection(glslang::TIntermTyped*, glslang::TIntermTyped*, glslang::TIntermTyped*, glslang::TSourceLoc const&)
glslang::TIntermediate::addShapeConversion(glslang::TType const&, glslang::TIntermTyped*)
glslang::TIntermediate::addSymbol(glslang::TType const&, glslang::TSourceLoc const&)
glslang::TIntermediate::addSymbol(glslang::TVariable const&, glslang::TSourceLoc const&)
glslang::TIntermediate::addSymbol(int, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&, glslang::TType const&, glslang::TConstUnionArray const&, glslang::TIntermTyped*, glslang::TSourceLoc const&)
glslang::TIntermediate::addSymbolLinkageNode(glslang::TIntermAggregate*&, glslang::TSymbol const&)
glslang::TIntermediate::addSymbolLinkageNodes(glslang::TIntermAggregate*&, EShLanguage, glslang::TSymbolTable&)
glslang::TIntermediate::addToCallGraph(TInfoSink&, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&)
glslang::TIntermediate::addUnaryMath(glslang::TOperator, glslang::TIntermTyped*, glslang::TSourceLoc)
glslang::TIntermediate::addUniShapeConversion(glslang::TOperator, glslang::TType const&, glslang::TIntermTyped*)
glslang::TIntermediate::addUsedConstantId(int)
glslang::TIntermediate::addUsedLocation(glslang::TQualifier const&, glslang::TType const&, bool&)
glslang::TIntermediate::addUsedOffsets(int, int, int)
glslang::TIntermediate::addXfbBufferOffset(glslang::TType const&)
glslang::TIntermediate::canImplicitlyPromote(glslang::TBasicType, glslang::TBasicType, glslang::TOperator) const
glslang::TIntermediate::checkCallGraphBodies(TInfoSink&, bool)
glslang::TIntermediate::checkCallGraphCycles(TInfoSink&)
glslang::TIntermediate::checkLocationRange(int, glslang::TIoRange const&, glslang::TType const&, bool&)
glslang::TIntermediate::computeTypeLocationSize(glslang::TType const&, EShLanguage)
glslang::TIntermediate::computeTypeXfbSize(glslang::TType const&, bool&) const
glslang::TIntermediate::createConversion(glslang::TBasicType, glslang::TIntermTyped*) const
glslang::TIntermediate::extensionRequested(char const*) const
glslang::TIntermediate::finalCheck(TInfoSink&, bool)
glslang::TIntermediate::finalCheck(TInfoSink&, bool)::TFinalLinkTraverser::visitSymbol(glslang::TIntermSymbol*)
glslang::TIntermediate::finalCheck(TInfoSink&, bool)::TFinalLinkTraverser::~TFinalLinkTraverser()
glslang::TIntermediate::findLValueBase(glslang::TIntermTyped const*, bool)
glslang::TIntermediate::fold(glslang::TIntermAggregate*)
glslang::TIntermediate::foldConstructor(glslang::TIntermAggregate*)
glslang::TIntermediate::foldDereference(glslang::TIntermTyped*, int, glslang::TSourceLoc const&)
glslang::TIntermediate::foldSwizzle(glslang::TIntermTyped*, glslang::TSwizzleSelectors<int>&, glslang::TSourceLoc const&)
glslang::TIntermediate::getBaseAlignment(glslang::TType const&, int&, int&, bool, bool)
glslang::TIntermediate::getBaseAlignmentScalar(glslang::TType const&, int&)
glslang::TIntermediate::getConversionDestinatonType(glslang::TBasicType, glslang::TBasicType, glslang::TOperator) const
glslang::TIntermediate::getResourceName(glslang::TResourceType)
glslang::TIntermediate::growAggregate(TIntermNode*, TIntermNode*)
glslang::TIntermediate::growAggregate(TIntermNode*, TIntermNode*, glslang::TSourceLoc const&)
glslang::TIntermediate::improperStraddle(glslang::TType const&, int, int)
glslang::TIntermediate::inOutLocationCheck(TInfoSink&)
glslang::TIntermediate::isFPConversion(glslang::TBasicType, glslang::TBasicType) const
glslang::TIntermediate::isFPIntegralConversion(glslang::TBasicType, glslang::TBasicType) const
glslang::TIntermediate::isFPPromotion(glslang::TBasicType, glslang::TBasicType) const
glslang::TIntermediate::isIntegralConversion(glslang::TBasicType, glslang::TBasicType) const
glslang::TIntermediate::isIntegralPromotion(glslang::TBasicType, glslang::TBasicType) const
glslang::TIntermediate::isNonuniformPropagating(glslang::TOperator) const
glslang::TIntermediate::isSpecializationOperation(glslang::TIntermOperator const&) const
glslang::TIntermediate::makeAggregate(TIntermNode*)
glslang::TIntermediate::makeAggregate(TIntermNode*, glslang::TSourceLoc const&)
glslang::TIntermediate::mapTypeToConstructorOp(glslang::TType const&) const
glslang::TIntermediate::merge(TInfoSink&, glslang::TIntermediate&)
glslang::TIntermediate::mergeBodies(TInfoSink&, glslang::TVector<TIntermNode*>&, glslang::TVector<TIntermNode*> const&)
glslang::TIntermediate::mergeCallGraphs(TInfoSink&, glslang::TIntermediate&)
glslang::TIntermediate::mergeErrorCheck(TInfoSink&, glslang::TIntermSymbol const&, glslang::TIntermSymbol const&, bool)
glslang::TIntermediate::mergeImplicitArraySizes(glslang::TType&, glslang::TType const&)
glslang::TIntermediate::mergeLinkerObjects(TInfoSink&, glslang::TVector<TIntermNode*>&, glslang::TVector<TIntermNode*> const&)
glslang::TIntermediate::mergeModes(TInfoSink&, glslang::TIntermediate&)
glslang::TIntermediate::mergeTrees(TInfoSink&, glslang::TIntermediate&)
glslang::TIntermediate::output(TInfoSink&, bool)
glslang::TIntermediate::parseConstTree(TIntermNode*, glslang::TConstUnionArray, glslang::TOperator, glslang::TType const&, bool)
glslang::TIntermediate::postProcess(TIntermNode*, EShLanguage)
glslang::TIntermediate::promote(glslang::TIntermOperator*)
glslang::TIntermediate::promoteAggregate(glslang::TIntermAggregate&)
glslang::TIntermediate::promoteBinary(glslang::TIntermBinary&)
glslang::TIntermediate::promoteConstantUnion(glslang::TBasicType, glslang::TIntermConstantUnion*) const
glslang::TIntermediate::promoteUnary(glslang::TIntermUnary&)
glslang::TIntermediate::pushSelector(glslang::TVector<TIntermNode*>&, int const&, glslang::TSourceLoc const&)
glslang::TIntermediate::seedIdMap(glslang::TMap<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, int, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > > >&, int&)
glslang::TIntermediate::setAggregateOperator(TIntermNode*, glslang::TOperator, glslang::TType const&, glslang::TSourceLoc)
glslang::TIntermediate::userOutputUsed() const
glslang::TIntermediate::~TIntermediate()
glslang::TOutputTraverser::visitAggregate(glslang::TVisit, glslang::TIntermAggregate*)
glslang::TOutputTraverser::visitBinary(glslang::TVisit, glslang::TIntermBinary*)
glslang::TOutputTraverser::visitBranch(glslang::TVisit, glslang::TIntermBranch*)
glslang::TOutputTraverser::visitConstantUnion(glslang::TIntermConstantUnion*)
glslang::TOutputTraverser::visitLoop(glslang::TVisit, glslang::TIntermLoop*)
glslang::TOutputTraverser::visitSelection(glslang::TVisit, glslang::TIntermSelection*)
glslang::TOutputTraverser::visitSwitch(glslang::TVisit, glslang::TIntermSwitch*)
glslang::TOutputTraverser::visitSymbol(glslang::TIntermSymbol*)
glslang::TOutputTraverser::visitUnary(glslang::TVisit, glslang::TIntermUnary*)
glslang::TOutputTraverser::~TOutputTraverser()
glslang::TParseContext::TParseContext(glslang::TSymbolTable&, glslang::TIntermediate&, bool, int, EProfile, glslang::SpvVersion const&, EShLanguage, TInfoSink&, bool, EShMessages, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const*)
glslang::TParseContext::addConstructor(glslang::TSourceLoc const&, TIntermNode*, glslang::TType const&)
glslang::TParseContext::addInputArgumentConversions(glslang::TFunction const&, TIntermNode*&) const
glslang::TParseContext::addOutputArgumentConversions(glslang::TFunction const&, glslang::TIntermAggregate&) const
glslang::TParseContext::addQualifierToExisting(glslang::TSourceLoc const&, glslang::TQualifier, glslang::TVector<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >*>&)
glslang::TParseContext::addQualifierToExisting(glslang::TSourceLoc const&, glslang::TQualifier, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&)
glslang::TParseContext::addSwitch(glslang::TSourceLoc const&, glslang::TIntermTyped*, glslang::TIntermAggregate*)
glslang::TParseContext::arrayError(glslang::TSourceLoc const&, glslang::TType const&)
glslang::TParseContext::arrayLimitCheck(glslang::TSourceLoc const&, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&, int)
glslang::TParseContext::arrayObjectCheck(glslang::TSourceLoc const&, glslang::TType const&, char const*)
glslang::TParseContext::arrayOfArrayVersionCheck(glslang::TSourceLoc const&, glslang::TArraySizes const*)
glslang::TParseContext::arrayQualifierError(glslang::TSourceLoc const&, glslang::TQualifier const&)
glslang::TParseContext::arraySizeCheck(glslang::TSourceLoc const&, glslang::TIntermTyped*, glslang::TArraySize&)
glslang::TParseContext::arraySizeRequiredCheck(glslang::TSourceLoc const&, glslang::TArraySizes const&)
glslang::TParseContext::arraySizesCheck(glslang::TSourceLoc const&, glslang::TQualifier const&, glslang::TArraySizes*, glslang::TIntermTyped const*, bool)
glslang::TParseContext::assignError(glslang::TSourceLoc const&, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >)
glslang::TParseContext::atomicUintCheck(glslang::TSourceLoc const&, glslang::TType const&, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&)
glslang::TParseContext::attributeFromName(std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&) const
glslang::TParseContext::binaryOpError(glslang::TSourceLoc const&, char const*, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >)
glslang::TParseContext::blockQualifierCheck(glslang::TSourceLoc const&, glslang::TQualifier const&, bool)
glslang::TParseContext::blockStageIoCheck(glslang::TSourceLoc const&, glslang::TQualifier const&)
glslang::TParseContext::boolCheck(glslang::TSourceLoc const&, glslang::TIntermTyped const*)
glslang::TParseContext::boolCheck(glslang::TSourceLoc const&, glslang::TPublicType const&)
glslang::TParseContext::builtInOpCheck(glslang::TSourceLoc const&, glslang::TFunction const&, glslang::TIntermOperator&)
glslang::TParseContext::checkIoArraysConsistency(glslang::TSourceLoc const&, bool, bool)
glslang::TParseContext::checkNoShaderLayouts(glslang::TSourceLoc const&, glslang::TShaderQualifiers const&)
glslang::TParseContext::checkPrecisionQualifier(glslang::TSourceLoc const&, glslang::TPrecisionQualifier)
glslang::TParseContext::checkRuntimeSizable(glslang::TSourceLoc const&, glslang::TIntermTyped const&)
glslang::TParseContext::computeBuiltinPrecisions(glslang::TIntermTyped&, glslang::TFunction const&)
glslang::TParseContext::constantIndexExpressionCheck(TIntermNode*)
glslang::TParseContext::constantValueCheck(glslang::TIntermTyped*, char const*)
glslang::TParseContext::constructAggregate(TIntermNode*, glslang::TType const&, int, glslang::TSourceLoc const&)
glslang::TParseContext::constructBuiltIn(glslang::TType const&, glslang::TOperator, glslang::TIntermTyped*, glslang::TSourceLoc const&, bool)
glslang::TParseContext::constructorError(glslang::TSourceLoc const&, TIntermNode*, glslang::TFunction&, glslang::TOperator, glslang::TType&)
glslang::TParseContext::constructorTextureSamplerError(glslang::TSourceLoc const&, glslang::TFunction const&)
glslang::TParseContext::containsFieldWithBasicType(glslang::TType const&, glslang::TBasicType)
glslang::TParseContext::convertInitializerList(glslang::TSourceLoc const&, glslang::TType const&, glslang::TIntermTyped*)
glslang::TParseContext::declareArray(glslang::TSourceLoc const&, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&, glslang::TType const&, glslang::TSymbol*&)
glslang::TParseContext::declareBlock(glslang::TSourceLoc const&, glslang::TVector<glslang::TTypeLoc>&, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const*, glslang::TArraySizes*)
glslang::TParseContext::declareNonArray(glslang::TSourceLoc const&, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&, glslang::TType const&)
glslang::TParseContext::declareTypeDefaults(glslang::TSourceLoc const&, glslang::TPublicType const&)
glslang::TParseContext::declareVariable(glslang::TSourceLoc const&, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >&, glslang::TPublicType const&, glslang::TArraySizes*, glslang::TIntermTyped*)
glslang::TParseContext::executeInitializer(glslang::TSourceLoc const&, glslang::TIntermTyped*, glslang::TVariable*)
glslang::TParseContext::findFunction(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)
glslang::TParseContext::findFunction120(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)
glslang::TParseContext::findFunction400(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)
glslang::TParseContext::findFunctionExplicitTypes(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)
glslang::TParseContext::finish()
glslang::TParseContext::fixBlockLocations(glslang::TSourceLoc const&, glslang::TQualifier&, glslang::TVector<glslang::TTypeLoc>&, bool, bool)
glslang::TParseContext::fixBlockUniformOffsets(glslang::TQualifier&, glslang::TVector<glslang::TTypeLoc>&)
glslang::TParseContext::fixBlockXfbOffsets(glslang::TQualifier&, glslang::TVector<glslang::TTypeLoc>&)
glslang::TParseContext::fixIoArraySize(glslang::TSourceLoc const&, glslang::TType&)
glslang::TParseContext::fixOffset(glslang::TSourceLoc const&, glslang::TSymbol&)
glslang::TParseContext::getDefaultPrecision(glslang::TPublicType&)
glslang::TParseContext::globalCheck(glslang::TSourceLoc const&, char const*)
glslang::TParseContext::globalQualifierFixCheck(glslang::TSourceLoc const&, glslang::TQualifier&)
glslang::TParseContext::globalQualifierTypeCheck(glslang::TSourceLoc const&, glslang::TQualifier const&, glslang::TPublicType const&)
glslang::TParseContext::handleBinaryMath(glslang::TSourceLoc const&, char const*, glslang::TOperator, glslang::TIntermTyped*, glslang::TIntermTyped*)
glslang::TParseContext::handleBracketDereference(glslang::TSourceLoc const&, glslang::TIntermTyped*, glslang::TIntermTyped*)
glslang::TParseContext::handleBuiltInFunctionCall(glslang::TSourceLoc, TIntermNode*, glslang::TFunction const&)
glslang::TParseContext::handleConstructorCall(glslang::TSourceLoc const&, glslang::TPublicType const&)
glslang::TParseContext::handleDotDereference(glslang::TSourceLoc const&, glslang::TIntermTyped*, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&)
glslang::TParseContext::handleFunctionCall(glslang::TSourceLoc const&, glslang::TFunction*, TIntermNode*)
glslang::TParseContext::handleFunctionDeclarator(glslang::TSourceLoc const&, glslang::TFunction&, bool)
glslang::TParseContext::handleFunctionDefinition(glslang::TSourceLoc const&, glslang::TFunction&)
glslang::TParseContext::handleIndexLimits(glslang::TSourceLoc const&, glslang::TIntermTyped*, glslang::TIntermTyped*)
glslang::TParseContext::handleIoResizeArrayAccess(glslang::TSourceLoc const&, glslang::TIntermTyped*)
glslang::TParseContext::handleLengthMethod(glslang::TSourceLoc const&, glslang::TFunction*, TIntermNode*)
glslang::TParseContext::handleLoopAttributes(glslang::TList<glslang::TAttributeArgs> const&, TIntermNode*)
glslang::TParseContext::handlePragma(glslang::TSourceLoc const&, glslang::TVector<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > > const&)
glslang::TParseContext::handlePrecisionQualifier(glslang::TSourceLoc const&, glslang::TQualifier&, glslang::TPrecisionQualifier)
glslang::TParseContext::handleReturnValue(glslang::TSourceLoc const&, glslang::TIntermTyped*)
glslang::TParseContext::handleSelectionAttributes(glslang::TList<glslang::TAttributeArgs> const&, TIntermNode*)
glslang::TParseContext::handleSwitchAttributes(glslang::TList<glslang::TAttributeArgs> const&, TIntermNode*)
glslang::TParseContext::handleUnaryMath(glslang::TSourceLoc const&, char const*, glslang::TOperator, glslang::TIntermTyped*)
glslang::TParseContext::handleVariable(glslang::TSourceLoc const&, glslang::TSymbol*, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const*)
glslang::TParseContext::inductiveLoopBodyCheck(TIntermNode*, int, glslang::TSymbolTable&)
glslang::TParseContext::inductiveLoopCheck(glslang::TSourceLoc const&, TIntermNode*, glslang::TIntermLoop*)
glslang::TParseContext::integerCheck(glslang::TIntermTyped const*, char const*)
glslang::TParseContext::ioArrayCheck(glslang::TSourceLoc const&, glslang::TType const&, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&)
glslang::TParseContext::lValueErrorCheck(glslang::TSourceLoc const&, char const*, glslang::TIntermTyped*)
glslang::TParseContext::layoutObjectCheck(glslang::TSourceLoc const&, glslang::TSymbol const&)
glslang::TParseContext::layoutQualifierCheck(glslang::TSourceLoc const&, glslang::TQualifier const&)
glslang::TParseContext::layoutTypeCheck(glslang::TSourceLoc const&, glslang::TType const&)
glslang::TParseContext::limitCheck(glslang::TSourceLoc const&, int, char const*, char const*)
glslang::TParseContext::lineContinuationCheck(glslang::TSourceLoc const&, bool)
glslang::TParseContext::lineDirectiveShouldSetNextLine() const
glslang::TParseContext::makeAttributes(std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&) const
glslang::TParseContext::makeAttributes(std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&, TIntermNode*) const
glslang::TParseContext::makeEditable(glslang::TSymbol*&)
glslang::TParseContext::makeInternalVariable(char const*, glslang::TType const&) const
glslang::TParseContext::memberQualifierCheck(glslang::TPublicType&)
glslang::TParseContext::memorySemanticsCheck(glslang::TSourceLoc const&, glslang::TFunction const&, glslang::TIntermOperator const&)
glslang::TParseContext::mergeAttributes(glslang::TList<glslang::TAttributeArgs>*, glslang::TList<glslang::TAttributeArgs>*) const
glslang::TParseContext::mergeObjectLayoutQualifiers(glslang::TQualifier&, glslang::TQualifier const&, bool)
glslang::TParseContext::mergeQualifiers(glslang::TSourceLoc const&, glslang::TQualifier&, glslang::TQualifier const&, bool)
glslang::TParseContext::nestedBlockCheck(glslang::TSourceLoc const&)
glslang::TParseContext::nestedStructCheck(glslang::TSourceLoc const&)
glslang::TParseContext::nonOpBuiltInCheck(glslang::TSourceLoc const&, glslang::TFunction const&, glslang::TIntermAggregate&)
glslang::TParseContext::opaqueCheck(glslang::TSourceLoc const&, glslang::TType const&, char const*)
glslang::TParseContext::paramCheckFix(glslang::TSourceLoc const&, glslang::TQualifier const&, glslang::TType&)
glslang::TParseContext::paramCheckFixStorage(glslang::TSourceLoc const&, glslang::TStorageQualifier const&, glslang::TType&)
glslang::TParseContext::parameterTypeCheck(glslang::TSourceLoc const&, glslang::TStorageQualifier, glslang::TType const&)
glslang::TParseContext::parseShaderStrings(glslang::TPpContext&, glslang::TInputScanner&, bool)
glslang::TParseContext::parserError(char const*)
glslang::TParseContext::precisionQualifierCheck(glslang::TSourceLoc const&, glslang::TBasicType, glslang::TQualifier&)
glslang::TParseContext::rValueErrorCheck(glslang::TSourceLoc const&, char const*, glslang::TIntermTyped*)
glslang::TParseContext::redeclareBuiltinBlock(glslang::TSourceLoc const&, glslang::TVector<glslang::TTypeLoc>&, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const*, glslang::TArraySizes*)
glslang::TParseContext::redeclareBuiltinVariable(glslang::TSourceLoc const&, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&, glslang::TQualifier const&, glslang::TShaderQualifiers const&)
glslang::TParseContext::reservedErrorCheck(glslang::TSourceLoc const&, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&)
glslang::TParseContext::reservedPpErrorCheck(glslang::TSourceLoc const&, char const*, char const*)
glslang::TParseContext::samplerCheck(glslang::TSourceLoc const&, glslang::TType const&, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&, glslang::TIntermTyped*)
glslang::TParseContext::samplerConstructorLocationCheck(glslang::TSourceLoc const&, char const*, TIntermNode*)
glslang::TParseContext::setDefaultPrecision(glslang::TSourceLoc const&, glslang::TPublicType&, glslang::TPrecisionQualifier)
glslang::TParseContext::setLayoutQualifier(glslang::TSourceLoc const&, glslang::TPublicType&, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >&)
glslang::TParseContext::setLayoutQualifier(glslang::TSourceLoc const&, glslang::TPublicType&, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >&, glslang::TIntermTyped const*)
glslang::TParseContext::setLimits(TBuiltInResource const&)
glslang::TParseContext::specializationCheck(glslang::TSourceLoc const&, glslang::TType const&, char const*)
glslang::TParseContext::storage16BitAssignmentCheck(glslang::TSourceLoc const&, glslang::TType const&, char const*)
glslang::TParseContext::structArrayCheck(glslang::TSourceLoc const&, glslang::TType const&)
glslang::TParseContext::structTypeCheck(glslang::TSourceLoc const&, glslang::TPublicType&)
glslang::TParseContext::updateStandaloneQualifierDefaults(glslang::TSourceLoc const&, glslang::TPublicType const&)
glslang::TParseContext::variableCheck(glslang::TIntermTyped*&)
glslang::TParseContext::voidErrorCheck(glslang::TSourceLoc const&, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&, glslang::TBasicType)
glslang::TParseContext::wrapupSwitchSubsequence(glslang::TIntermAggregate*, TIntermNode*)
glslang::TParseContext::~TParseContext()
glslang::TParseContextBase::TParseContextBase(glslang::TSymbolTable&, glslang::TIntermediate&, bool, int, EProfile, glslang::SpvVersion const&, EShLanguage, TInfoSink&, bool, EShMessages, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const*)
glslang::TParseContextBase::checkIndex(glslang::TSourceLoc const&, glslang::TType const&, int&)
glslang::TParseContextBase::error(glslang::TSourceLoc const&, char const*, char const*, char const*, ...)
glslang::TParseContextBase::finalizeGlobalUniformBlockLayout(glslang::TVariable&)
glslang::TParseContextBase::finish()
glslang::TParseContextBase::getEditableVariable(char const*)
glslang::TParseContextBase::getGlobalUniformBlockName() const
glslang::TParseContextBase::growGlobalUniformBlock(glslang::TSourceLoc const&, glslang::TType&, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&, glslang::TVector<glslang::TTypeLoc>*)
glslang::TParseContextBase::lValueErrorCheck(glslang::TSourceLoc const&, char const*, glslang::TIntermTyped*)
glslang::TParseContextBase::makeEditable(glslang::TSymbol*&)
glslang::TParseContextBase::notifyErrorDirective(int, char const*)
glslang::TParseContextBase::notifyExtensionDirective(int, char const*, char const*)
glslang::TParseContextBase::notifyLineDirective(int, int, bool, int, char const*)
glslang::TParseContextBase::notifyVersion(int, int, char const*)
glslang::TParseContextBase::outputMessage(glslang::TSourceLoc const&, char const*, char const*, char const*, glslang::TPrefixType, __va_list_tag*)
glslang::TParseContextBase::parseSwizzleSelector(glslang::TSourceLoc const&, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&, int, glslang::TSwizzleSelectors<int>&)
glslang::TParseContextBase::ppError(glslang::TSourceLoc const&, char const*, char const*, char const*, ...)
glslang::TParseContextBase::ppWarn(glslang::TSourceLoc const&, char const*, char const*, char const*, ...)
glslang::TParseContextBase::rValueErrorCheck(glslang::TSourceLoc const&, char const*, glslang::TIntermTyped*)
glslang::TParseContextBase::renameShaderFunction(std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >*&) const
glslang::TParseContextBase::selectFunction(glslang::TVector<glslang::TFunction const*>, glslang::TFunction const&, std::__1::function<bool (glslang::TType const&, glslang::TType const&, glslang::TOperator, int)>, std::__1::function<bool (glslang::TType const&, glslang::TType const&, glslang::TType const&)>, bool&)
glslang::TParseContextBase::setErrorCallback(std::__1::function<void (int, char const*)> const&)
glslang::TParseContextBase::setExtensionCallback(std::__1::function<void (int, char const*, char const*)> const&)
glslang::TParseContextBase::setLineCallback(std::__1::function<void (int, int, bool, int, char const*)> const&)
glslang::TParseContextBase::setPragmaCallback(std::__1::function<void (int, glslang::TVector<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > > const&)> const&)
glslang::TParseContextBase::setUniformBlockDefaults(glslang::TType&) const
glslang::TParseContextBase::setVersionCallback(std::__1::function<void (int, int, char const*)> const&)
glslang::TParseContextBase::trackLinkage(glslang::TSymbol&)
glslang::TParseContextBase::warn(glslang::TSourceLoc const&, char const*, char const*, char const*, ...)
glslang::TParseContextBase::~TParseContextBase()
glslang::TParseVersions::checkDeprecated(glslang::TSourceLoc const&, int, int, char const*)
glslang::TParseVersions::checkExtensionStage(glslang::TSourceLoc const&, char const*)
glslang::TParseVersions::checkExtensionsRequested(glslang::TSourceLoc const&, int, char const* const*, char const*)
glslang::TParseVersions::doubleCheck(glslang::TSourceLoc const&, char const*)
glslang::TParseVersions::explicitFloat32Check(glslang::TSourceLoc const&, char const*, bool)
glslang::TParseVersions::explicitFloat32Check(glslang::TSourceLoc const&, char const*, bool)::extensions
glslang::TParseVersions::explicitFloat64Check(glslang::TSourceLoc const&, char const*, bool)
glslang::TParseVersions::explicitFloat64Check(glslang::TSourceLoc const&, char const*, bool)::extensions
glslang::TParseVersions::explicitInt16Check(glslang::TSourceLoc const&, char const*, bool)
glslang::TParseVersions::explicitInt16Check(glslang::TSourceLoc const&, char const*, bool)::extensions
glslang::TParseVersions::explicitInt32Check(glslang::TSourceLoc const&, char const*, bool)
glslang::TParseVersions::explicitInt32Check(glslang::TSourceLoc const&, char const*, bool)::extensions
glslang::TParseVersions::explicitInt8Check(glslang::TSourceLoc const&, char const*, bool)
glslang::TParseVersions::explicitInt8Check(glslang::TSourceLoc const&, char const*, bool)::extensions
glslang::TParseVersions::extensionTurnedOn(char const*)
glslang::TParseVersions::extensionsTurnedOn(int, char const* const*)
glslang::TParseVersions::float16Arithmetic()
glslang::TParseVersions::float16Arithmetic()::extensions
glslang::TParseVersions::float16Check(glslang::TSourceLoc const&, char const*, bool)
glslang::TParseVersions::float16Check(glslang::TSourceLoc const&, char const*, bool)::extensions
glslang::TParseVersions::float16ScalarVectorCheck(glslang::TSourceLoc const&, char const*, bool)
glslang::TParseVersions::float16ScalarVectorCheck(glslang::TSourceLoc const&, char const*, bool)::extensions
glslang::TParseVersions::fullIntegerCheck(glslang::TSourceLoc const&, char const*)
glslang::TParseVersions::getExtensionBehavior(char const*)
glslang::TParseVersions::getPreamble(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&)
glslang::TParseVersions::initializeExtensionBehavior()
glslang::TParseVersions::int16Arithmetic()
glslang::TParseVersions::int16Arithmetic()::extensions
glslang::TParseVersions::int16ScalarVectorCheck(glslang::TSourceLoc const&, char const*, bool)
glslang::TParseVersions::int16ScalarVectorCheck(glslang::TSourceLoc const&, char const*, bool)::extensions
glslang::TParseVersions::int64Check(glslang::TSourceLoc const&, char const*, bool)
glslang::TParseVersions::int64Check(glslang::TSourceLoc const&, char const*, bool)::extensions
glslang::TParseVersions::int8Arithmetic()
glslang::TParseVersions::int8Arithmetic()::extensions
glslang::TParseVersions::int8ScalarVectorCheck(glslang::TSourceLoc const&, char const*, bool)
glslang::TParseVersions::int8ScalarVectorCheck(glslang::TSourceLoc const&, char const*, bool)::extensions
glslang::TParseVersions::ppRequireExtensions(glslang::TSourceLoc const&, int, char const* const*, char const*)
glslang::TParseVersions::profileRequires(glslang::TSourceLoc const&, int, int, char const*, char const*)
glslang::TParseVersions::profileRequires(glslang::TSourceLoc const&, int, int, int, char const* const*, char const*)
glslang::TParseVersions::requireExtensions(glslang::TSourceLoc const&, int, char const* const*, char const*)
glslang::TParseVersions::requireFloat16Arithmetic(glslang::TSourceLoc const&, char const*, char const*)
glslang::TParseVersions::requireFloat16Arithmetic(glslang::TSourceLoc const&, char const*, char const*)::extensions
glslang::TParseVersions::requireInt16Arithmetic(glslang::TSourceLoc const&, char const*, char const*)
glslang::TParseVersions::requireInt16Arithmetic(glslang::TSourceLoc const&, char const*, char const*)::extensions
glslang::TParseVersions::requireInt8Arithmetic(glslang::TSourceLoc const&, char const*, char const*)
glslang::TParseVersions::requireInt8Arithmetic(glslang::TSourceLoc const&, char const*, char const*)::extensions
glslang::TParseVersions::requireNotRemoved(glslang::TSourceLoc const&, int, int, char const*)
glslang::TParseVersions::requireProfile(glslang::TSourceLoc const&, int, char const*)
glslang::TParseVersions::requireSpv(glslang::TSourceLoc const&, char const*)
glslang::TParseVersions::requireStage(glslang::TSourceLoc const&, EShLanguage, char const*)
glslang::TParseVersions::requireStage(glslang::TSourceLoc const&, EShLanguageMask, char const*)
glslang::TParseVersions::requireVulkan(glslang::TSourceLoc const&, char const*)
glslang::TParseVersions::spvRemoved(glslang::TSourceLoc const&, char const*)
glslang::TParseVersions::unimplemented(glslang::TSourceLoc const&, char const*)
glslang::TParseVersions::updateExtensionBehavior(char const*, glslang::TExtensionBehavior)
glslang::TParseVersions::updateExtensionBehavior(int, char const*, char const*)
glslang::TParseVersions::vulkanRemoved(glslang::TSourceLoc const&, char const*)
glslang::TParseVersions::~TParseVersions()
glslang::TPoolAllocator::TPoolAllocator(int, int)
glslang::TPoolAllocator::allocate(unsigned long)
glslang::TPoolAllocator::pop()
glslang::TPoolAllocator::push()
glslang::TPoolAllocator::~TPoolAllocator()
glslang::TPpContext::CPPdefine(glslang::TPpToken*)
glslang::TPpContext::CPPelse(int, glslang::TPpToken*)
glslang::TPpContext::CPPerror(glslang::TPpToken*)
glslang::TPpContext::CPPextension(glslang::TPpToken*)
glslang::TPpContext::CPPif(glslang::TPpToken*)
glslang::TPpContext::CPPifdef(int, glslang::TPpToken*)
glslang::TPpContext::CPPinclude(glslang::TPpToken*)
glslang::TPpContext::CPPline(glslang::TPpToken*)
glslang::TPpContext::CPPpragma(glslang::TPpToken*)
glslang::TPpContext::CPPundef(glslang::TPpToken*)
glslang::TPpContext::CPPversion(glslang::TPpToken*)
glslang::TPpContext::MacroExpand(glslang::TPpToken*, bool, bool)
glslang::TPpContext::PrescanMacroArg(glslang::TPpContext::TokenStream&, glslang::TPpToken*, bool)
glslang::TPpContext::TPpContext(glslang::TParseContextBase&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, glslang::TShader::Includer&)
glslang::TPpContext::TokenStream::getToken(glslang::TParseContextBase&, glslang::TPpToken*)
glslang::TPpContext::TokenStream::peekUntokenizedPasting()
glslang::TPpContext::TokenStream::putToken(int, glslang::TPpToken*)
glslang::TPpContext::TokenizableIncludeFile::TokenizableIncludeFile(glslang::TSourceLoc const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, glslang::TShader::Includer::IncludeResult*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, glslang::TPpContext*)
glslang::TPpContext::TokenizableIncludeFile::getch()
glslang::TPpContext::TokenizableIncludeFile::notifyActivated()
glslang::TPpContext::TokenizableIncludeFile::notifyDeleted()
glslang::TPpContext::TokenizableIncludeFile::scan(glslang::TPpToken*)
glslang::TPpContext::TokenizableIncludeFile::ungetch()
glslang::TPpContext::TokenizableIncludeFile::~TokenizableIncludeFile()
glslang::TPpContext::UngetToken(int, glslang::TPpToken*)
glslang::TPpContext::characterLiteral(glslang::TPpToken*)
glslang::TPpContext::eval(int, int, bool, int&, bool&, glslang::TPpToken*)
glslang::TPpContext::evalToToken(int, bool, int&, bool&, glslang::TPpToken*)
glslang::TPpContext::extraTokenCheck(int, glslang::TPpToken*, int)
glslang::TPpContext::lFloatConst(int, int, glslang::TPpToken*)
glslang::TPpContext::pop_include()
glslang::TPpContext::pushTokenStreamInput(glslang::TPpContext::TokenStream&, bool)
glslang::TPpContext::readCPPline(glslang::TPpToken*)
glslang::TPpContext::setInput(glslang::TInputScanner&, bool)
glslang::TPpContext::tInput::endOfReplacementList()
glslang::TPpContext::tInput::isMacroInput()
glslang::TPpContext::tInput::notifyActivated()
glslang::TPpContext::tInput::notifyDeleted()
glslang::TPpContext::tInput::peekPasting()
glslang::TPpContext::tInput::~tInput()
glslang::TPpContext::tMacroInput::endOfReplacementList()
glslang::TPpContext::tMacroInput::getch()
glslang::TPpContext::tMacroInput::isMacroInput()
glslang::TPpContext::tMacroInput::peekPasting()
glslang::TPpContext::tMacroInput::scan(glslang::TPpToken*)
glslang::TPpContext::tMacroInput::ungetch()
glslang::TPpContext::tMacroInput::~tMacroInput()
glslang::TPpContext::tMarkerInput::getch()
glslang::TPpContext::tMarkerInput::scan(glslang::TPpToken*)
glslang::TPpContext::tMarkerInput::ungetch()
glslang::TPpContext::tMarkerInput::~tMarkerInput()
glslang::TPpContext::tStringInput::getch()
glslang::TPpContext::tStringInput::scan(glslang::TPpToken*)
glslang::TPpContext::tStringInput::scan(glslang::TPpToken*)::Int64_Extensions
glslang::TPpContext::tStringInput::ungetch()
glslang::TPpContext::tStringInput::~tStringInput()
glslang::TPpContext::tTokenInput::getch()
glslang::TPpContext::tTokenInput::peekPasting()
glslang::TPpContext::tTokenInput::scan(glslang::TPpToken*)
glslang::TPpContext::tTokenInput::ungetch()
glslang::TPpContext::tTokenInput::~tTokenInput()
glslang::TPpContext::tUngotTokenInput::getch()
glslang::TPpContext::tUngotTokenInput::scan(glslang::TPpToken*)
glslang::TPpContext::tUngotTokenInput::ungetch()
glslang::TPpContext::tUngotTokenInput::~tUngotTokenInput()
glslang::TPpContext::tZeroInput::getch()
glslang::TPpContext::tZeroInput::scan(glslang::TPpToken*)
glslang::TPpContext::tZeroInput::ungetch()
glslang::TPpContext::tZeroInput::~tZeroInput()
glslang::TPpContext::tokenPaste(int, glslang::TPpToken&)
glslang::TPpContext::tokenize(glslang::TPpToken&)
glslang::TPpContext::~TPpContext()
glslang::TPrecisionManager::~TPrecisionManager()
glslang::TProcesses::addProcess(char const*)
glslang::TProgram::TProgram()
glslang::TProgram::getInfoLog()
glslang::TProgram::link(EShMessages)
glslang::TProgram::linkStage(EShLanguage, EShMessages)
glslang::TProgram::~TProgram()
glslang::TRemapIdTraverser::visitSymbol(glslang::TIntermSymbol*)
glslang::TRemapIdTraverser::~TRemapIdTraverser()
glslang::TSampler::getString() const
glslang::TScanContext::deleteKeywordMap()
glslang::TScanContext::fillInKeywordMap()
glslang::TScanContext::firstGenerationImage(bool)
glslang::TScanContext::identifierOrType()
glslang::TScanContext::secondGenerationImage()
glslang::TScanContext::tokenize(glslang::TPpContext*, glslang::TParserToken&)
glslang::TScanContext::tokenizeIdentifier()
glslang::TScanContext::~TScanContext()
glslang::TShader::ForbidIncluder::releaseInclude(glslang::TShader::Includer::IncludeResult*)
glslang::TShader::ForbidIncluder::~ForbidIncluder()
glslang::TShader::Includer::includeLocal(char const*, char const*, unsigned long)
glslang::TShader::Includer::includeSystem(char const*, char const*, unsigned long)
glslang::TShader::Includer::~Includer()
glslang::TShader::TShader(EShLanguage)
glslang::TShader::getInfoDebugLog()
glslang::TShader::getInfoLog()
glslang::TShader::parse(TBuiltInResource const*, int, EProfile, bool, bool, EShMessages, glslang::TShader::Includer&)
glslang::TShader::setEntryPoint(char const*)
glslang::TShader::setStringsWithLengths(char const* const*, int const*, int)
glslang::TShader::~TShader()
glslang::TShaderQualifiers::merge(glslang::TShaderQualifiers const&)
glslang::TSmallArrayVector::operator==(glslang::TSmallArrayVector const&) const
glslang::TSmallArrayVector::push_back(unsigned int, glslang::TIntermTyped*)
glslang::TSmallArrayVector::~TSmallArrayVector()
glslang::TSourceLoc::getStringNameOrNum(bool) const
glslang::TStringAtomMap::TStringAtomMap()
glslang::TStringAtomMap::addAtomFixed(char const*, int)
glslang::TStringAtomMap::getAtom(char const*) const
glslang::TSymbol::TSymbol(glslang::TSymbol const&)
glslang::TSymbol::addPrefix(char const*)
glslang::TSymbol::changeName(std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const*)
glslang::TSymbol::getAsAnonMember() const
glslang::TSymbol::getAsFunction()
glslang::TSymbol::getAsFunction() const
glslang::TSymbol::getAsVariable()
glslang::TSymbol::getAsVariable() const
glslang::TSymbol::getExtensions() const
glslang::TSymbol::getMangledName() const
glslang::TSymbol::getName() const
glslang::TSymbol::getNumExtensions() const
glslang::TSymbol::getUniqueId() const
glslang::TSymbol::isReadOnly() const
glslang::TSymbol::makeReadOnly()
glslang::TSymbol::setExtensions(int, char const* const*)
glslang::TSymbol::setUniqueId(int)
glslang::TSymbol::~TSymbol()
glslang::TSymbolTable::copyTable(glslang::TSymbolTable const&)
glslang::TSymbolTable::copyUpDeferredInsert(glslang::TSymbol*)
glslang::TSymbolTable::insert(glslang::TSymbol&)
glslang::TSymbolTable::setPreviousDefaultPrecisions(glslang::TPrecisionQualifier*)
glslang::TSymbolTable::setVariableExtensions(char const*, int, char const* const*)
glslang::TSymbolTableLevel::clone() const
glslang::TSymbolTableLevel::findFunctionNameList(std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&, glslang::TVector<glslang::TFunction const*>&)
glslang::TSymbolTableLevel::findFunctionVariableName(std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&, bool&) const
glslang::TSymbolTableLevel::getPreviousDefaultPrecisions(glslang::TPrecisionQualifier*)
glslang::TSymbolTableLevel::hasFunctionName(std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&) const
glslang::TSymbolTableLevel::insert(glslang::TSymbol&, bool)
glslang::TSymbolTableLevel::insertAnonymousMembers(glslang::TSymbol&, int)
glslang::TSymbolTableLevel::readOnly()
glslang::TSymbolTableLevel::relateToOperator(char const*, glslang::TOperator)
glslang::TSymbolTableLevel::setFunctionExtensions(char const*, int, char const* const*)
glslang::TSymbolTableLevel::~TSymbolTableLevel()
glslang::TType::TType(glslang::TPublicType const&)
glslang::TType::TType(glslang::TType const&, int, bool)
glslang::TType::TType(glslang::TVector<glslang::TTypeLoc>*, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&)
glslang::TType::TType(glslang::TVector<glslang::TTypeLoc>*, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&, glslang::TQualifier const&)
glslang::TType::adoptImplicitArraySizes(bool)
glslang::TType::buildMangledName(std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >&) const
glslang::TType::computeNumComponents() const
glslang::TType::contains16BitInt() const
glslang::TType::contains8BitInt() const
glslang::TType::containsArray() const
glslang::TType::containsBasicType(glslang::TBasicType) const
glslang::TType::containsBuiltIn() const
glslang::TType::containsNonOpaque() const
glslang::TType::containsOpaque() const
glslang::TType::containsSpecializationSize() const
glslang::TType::containsStructure() const
glslang::TType::containsUnsizedArray() const
glslang::TType::copyArrayInnerSizes(glslang::TArraySizes const*)
glslang::TType::copyArraySizes(glslang::TArraySizes const&)
glslang::TType::deepCopy(glslang::TType const&, glslang::TMap<glslang::TVector<glslang::TTypeLoc>*, glslang::TVector<glslang::TTypeLoc>*, std::__1::less<glslang::TVector<glslang::TTypeLoc>*> >&)
glslang::TType::getArraySizes()
glslang::TType::getArraySizes() const
glslang::TType::getBasicType() const
glslang::TType::getBasicTypeString() const
glslang::TType::getCompleteString() const
glslang::TType::getCumulativeArraySize() const
glslang::TType::getFieldName() const
glslang::TType::getImplicitArraySize() const
glslang::TType::getMatrixCols() const
glslang::TType::getMatrixRows() const
glslang::TType::getOuterArrayNode() const
glslang::TType::getOuterArraySize() const
glslang::TType::getQualifier()
glslang::TType::getQualifier() const
glslang::TType::getSampler()
glslang::TType::getSampler() const
glslang::TType::getTypeName() const
glslang::TType::getVectorSize() const
glslang::TType::hiddenMember() const
glslang::TType::hideMember()
glslang::TType::isArray() const
glslang::TType::isArrayOfArrays() const
glslang::TType::isArrayVariablyIndexed() const
glslang::TType::isBuiltIn() const
glslang::TType::isFloatingDomain() const
glslang::TType::isImage() const
glslang::TType::isIntegerDomain() const
glslang::TType::isMatrix() const
glslang::TType::isOpaque() const
glslang::TType::isScalar() const
glslang::TType::isScalarOrVec1() const
glslang::TType::isSizedArray() const
glslang::TType::isStruct() const
glslang::TType::isSubpass() const
glslang::TType::isTexture() const
glslang::TType::isUnsizedArray() const
glslang::TType::isVector() const
glslang::TType::operator==(glslang::TType const&) const
glslang::TType::sameStructType(glslang::TType const&) const
glslang::TType::setArrayVariablyIndexed()
glslang::TType::setFieldName(std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&)
glslang::TType::updateImplicitArraySize(int)
glslang::TType::~TType()
glslang::TUserIdTraverser::visitSymbol(glslang::TIntermSymbol*)
glslang::TUserIdTraverser::~TUserIdTraverser()
glslang::TVariable::TVariable(glslang::TVariable const&)
glslang::TVariable::clone() const
glslang::TVariable::dump(TInfoSink&) const
glslang::TVariable::getAnonId() const
glslang::TVariable::getAsVariable()
glslang::TVariable::getAsVariable() const
glslang::TVariable::getConstArray() const
glslang::TVariable::getConstSubtree() const
glslang::TVariable::getType() const
glslang::TVariable::getWritableConstArray()
glslang::TVariable::getWritableType()
glslang::TVariable::isUserType() const
glslang::TVariable::setAnonId(int)
glslang::TVariable::setConstArray(glslang::TConstUnionArray const&)
glslang::TVariable::setConstSubtree(glslang::TIntermTyped*)
glslang::TVariable::~TVariable()
glslang::TextureUpgradeAndSamplerRemovalTransform::visitAggregate(glslang::TVisit, glslang::TIntermAggregate*)
glslang::TextureUpgradeAndSamplerRemovalTransform::visitSymbol(glslang::TIntermSymbol*)
glslang::TextureUpgradeAndSamplerRemovalTransform::~TextureUpgradeAndSamplerRemovalTransform()
glslang::ThreadInitializeIndex
glslang::binop
glslang::post_depth_coverageEXTs
glslang::unop
glslang_binary_double_output
glslang_finalize(sh::TParseContext*)
glslang_initialize(sh::TParseContext*)
glslang_lex.cpp
glslang_parse(sh::TParseContext*)
glslang_scan(unsigned long, char const* const*, int const*, sh::TParseContext*)
glslang_tab.cpp
go,
goto
gpu.angle
greaterThan
greaterThanEqual
groupMemoryBarri
guard variable for MakeStaticString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)::strings
guard variable for angle::GetExecutableDirectory()::exeDir
guard variable for angle::GetExecutablePath()::exePath
guard variable for egl::(anonymous namespace)::GetANGLEPlatformDisplayMap()::displays
guard variable for egl::(anonymous namespace)::GetDevicePlatformDisplayMap()::displays
guard variable for egl::(anonymous namespace)::GetWindowSurfaces()::windowSurfaces
guard variable for egl::Display::GetClientExtensionString()::clientExtensionsString
guard variable for egl::Display::GetClientExtensions()::clientExtensions
guard variable for egl::GetDeviceSet()::devices
guard variable for gl::Format::Invalid()::invalid
guard variable for gl::GetAllSizedInternalFormats()::formatSet
guard variable for gl::GetExtensionInfoMap()::extensionInfo
guard variable for gl::GetInternalFormatInfo(unsigned int, unsigned int)::defaultInternalFormat
guard variable for gl::GetInternalFormatMap()::formatMap
guard variable for gl::GetSizedInternalFormatInfo(unsigned int)::defaultInternalFormat
guard variable for gl::GetTypeInfo(unsigned int)::defaultInfo
guard variable for gl::GetTypeInfo(unsigned int)::info
guard variable for rx::nativegl::GetInternalFormatInfo(unsigned int, rx::StandardGL)::defaultInternalFormat
guard variable for rx::nativegl::GetInternalFormatMap()::formatMap
guard variable for spvutils::HexFloat<spvutils::FloatProxy<float>, spvutils::HexFloatTraits<spvutils::FloatProxy<float> > >::getRoundedNormalizedSignificand<spvutils::HexFloat<spvutils::FloatProxy<spvutils::Float16>, spvutils::HexFloatTraits<spvutils::FloatProxy<spvutils::Float16> > > >(spvutils::round_direction, bool*)::first_rounded_bit
guard variable for spvutils::HexFloat<spvutils::FloatProxy<float>, spvutils::HexFloatTraits<spvutils::FloatProxy<float> > >::getRoundedNormalizedSignificand<spvutils::HexFloat<spvutils::FloatProxy<spvutils::Float16>, spvutils::HexFloatTraits<spvutils::FloatProxy<spvutils::Float16> > > >(spvutils::round_direction, bool*)::last_significant_bit
guard variable for std::__1::__cloc()::result
guard variable for std::__1::__time_get_c_storage<char>::__X() const::s
guard variable for std::__1::__time_get_c_storage<char>::__am_pm() const::am_pm
guard variable for std::__1::__time_get_c_storage<char>::__c() const::s
guard variable for std::__1::__time_get_c_storage<char>::__months() const::months
guard variable for std::__1::__time_get_c_storage<char>::__r() const::s
guard variable for std::__1::__time_get_c_storage<char>::__weeks() const::weeks
guard variable for std::__1::__time_get_c_storage<char>::__x() const::s
guard variable for std::__1::__time_get_c_storage<wchar_t>::__X() const::s
guard variable for std::__1::__time_get_c_storage<wchar_t>::__am_pm() const::am_pm
guard variable for std::__1::__time_get_c_storage<wchar_t>::__c() const::s
guard variable for std::__1::__time_get_c_storage<wchar_t>::__months() const::months
guard variable for std::__1::__time_get_c_storage<wchar_t>::__r() const::s
guard variable for std::__1::__time_get_c_storage<wchar_t>::__weeks() const::weeks
guard variable for std::__1::__time_get_c_storage<wchar_t>::__x() const::s
guard variable for std::__1::init_am_pm()::am_pm
guard variable for std::__1::init_months()::months
guard variable for std::__1::init_wam_pm()::am_pm
guard variable for std::__1::init_weeks()::weeks
guard variable for std::__1::init_wmonths()::months
guard variable for std::__1::init_wweeks()::weeks
guard variable for std::__1::iostream_category()::s
guard variable for std::__1::locale::__global()::g
guard variable for std::__1::locale::classic()::c
h
h!!
h#:
h6
h7
h8
h:<
h?<
hB/
hQ/
hY>
hZ>
half
half float literal
half float matrix
half float vector
half floating-point suffix
halfBitsToInt16
halfBitsToUint16
halfRenderAreaHeight
hash.cpp
header name too long
hexadecimal literal too big
hexadecimal literal too long
highp
highp   in uint  gl_NumSubgroups;highp   in uint  gl_SubgroupID;
highp   vec4  gl_FragCoord;        bool  gl_FrontFacing;mediump vec2  gl_PointCoord;highp   float gl_FragDepth;
highp   vec4  gl_Position;mediump float gl_PointSize;
highp float gl_FragDepthEXT;
highp float near;highp float far;highp float diff;
highp int
highp ivec2 textureSize(samplerExternalOES, int lod);vec4 texture(samplerExternalOES, vec2);vec4 texture(samplerExternalOES, vec2, float bias);vec4 textureProj(samplerExternalOES, vec3);vec4 textureProj(samplerExternalOES, vec3, float bias);vec4 textureProj(samplerExternalOES, vec4);vec4 textureProj(samplerExternalOES, vec4, float bias);vec4 texelFetch(samplerExternalOES, ivec2, int lod);
highp precision qualifier
highp uint
highp uint packSnorm2x16(vec2);      vec2 unpackSnorm2x16(highp uint);highp uint packHalf2x16(vec2);
highp uint packSnorm4x8(vec4);highp uint packUnorm4x8(vec4);
highp uint packUnorm2x16(vec2);vec2 unpackUnorm2x16(highp uint);
highp vec4  gl_Position;highp float gl_PointSize;
hint requires OES_standard_derivatives.
histogramBoolean
histogramCustomCounts
histogramEnumeration
histogramSparse
hlsl-offsets
hvec2
hvec3
hvec4
hy2
i
i16
i32vec2
i32vec3
i32vec4
i64
i7
i8
i?7
iMulExtended
iT>
iU>
iV>
iW>
iX>
iY>
iZ>
i[>
i\>
i]>
i`7
ia7
icCounterBuffersA
identifier not previously declared
identifier_list
identifiers containing consecutive underscores ("__") are reserved
identifiers containing consecutive underscores ("__") are reserved, and an error if version <= 300
identifiers containing two consecutive underscores (__) are reserved as possible future keywords
identifiers starting with "gl_" are reserved
if
if (
if (clamp(v_texcoord, vec2(0.0), vec2(1.0)) != v_texcoord)
if (u_multiply_alpha)
if (u_unmultiply_alpha && color.a != 0.0)
if level is zero and the texture is incomplete, it must have all of its faces specified at level zero.
if level is zero and the texture is incomplete, it must have no mip levels specified except zero.
ifdef
ifndef
iimage1D
iimage1DArray
iimage2D
iimage2DArray
iimage2DMS
iimage2DMSArray
iimage2DRect
iimage3D
iimageBuffer
iimageCube
iimageCubeArray
illegal - vector component fields not from the same set
illegal type argument for default precision qualifier
illegal type for precision qualifier
illegal use of escape character
illegal use of type 'void'
illegal vector field selection
im>
image binding greater than gl_MaxImageUnits
image load store
image load-store format
image uniform
image variables not declared 'writeonly' and without a format layout qualifier
imageAtomic
imageAtomicAdd
imageAtomicAdd(volatile coherent
imageAtomicAnd
imageAtomicAnd(volatile coherent
imageAtomicCompSwap
imageAtomicCompSwap(volatile coherent
imageAtomicExchange
imageAtomicLoad
imageAtomicLoad(volatile coherent
imageAtomicMax
imageAtomicMax(volatile coherent
imageAtomicMin
imageAtomicMin(volatile coherent
imageAtomicOr
imageAtomicOr(volatile coherent
imageAtomicStore
imageAtomicXor
imageAtomicXor(volatile coherent
imageLoad
imageQuerySamples
imageQuerySize
imageSamples(readonly writeonly volatile coherent
imageSize
imageSize must be 0 if no texture data is provided.
imageSize must be at least
imageSize(readonly writeonly volatile coherent
imageStore
imageStore(0n2C3imageStore(0j2C3imageStore(0p2C3greaterThanEqualtextureProj(0R3Bgl_LastFragColortextureProjLodOf
imageformats.cpp
implementation_version
implicitly sized array constructor must have at least one argument
implicitly sized array of arrays constructor argument dimensionality is too low
implicitly sized array of arrays constructor argument is not an array
implicitly sized array supported in GLSL ES 3.00 and above only
implicitly sized arrays need to be initialized
imulExtended
imulExtended(0C0C0C0C
imulExtended(1C1C1C1C
imulExtended(2C2C2C2C
imulExtended(3C3C3C3C
in    highp uvec3 gl_NumWorkGroups;const highp uvec3 gl_WorkGroupSize = uvec3(1,1,1);in highp uvec3 gl_WorkGroupID;in highp uvec3 gl_LocalInvocationID;in highp uvec3 gl_GlobalInvocationID;in highp uint gl_LocalInvocationIndex;
in float gl_ClipDistance[];
in float gl_CullDistance[];bool gl_HelperInvocation;
in float gl_FogFragCoord;in vec4  gl_TexCoord[];in vec4  gl_Color;in vec4  gl_SecondaryColor;
in for stage inputs
in gl_PerFragment {in float gl_FogFragCoord;in vec4  gl_TexCoord[];in vec4  gl_Color;in vec4  gl_SecondaryColor;};
in gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize;} gl_in[];in highp int gl_PrimitiveIDIn;in highp int gl_InvocationID;out gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize;};out highp int gl_PrimitiveID;out highp int gl_Layer;
in gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize;} gl_in[gl_MaxPatchVertices];
in gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];
in highp int gl_DeviceIndex;
in highp int gl_DeviceIndex;in highp int gl_ViewIndex;
in highp int gl_PatchVerticesIn;in highp int gl_PrimitiveID;in highp int gl_InvocationID;out gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize;
in highp int gl_PatchVerticesIn;in highp int gl_PrimitiveID;in highp vec3 gl_TessCoord;patch in highp float gl_TessLevelOuter[4];patch in highp float gl_TessLevelInner[2];out gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize;
in highp int gl_VertexID;in highp int gl_InstanceID;
in highp int gl_VertexIndex;in highp int gl_InstanceIndex;
in int gl_BaseVertex;in int gl_BaseInstance;in int gl_DrawID;
in int gl_BaseVertexARB;in int gl_BaseInstanceARB;in int gl_DrawIDARB;
in int gl_InvocationID;
in int gl_PatchVerticesIn;in int gl_PrimitiveID;in int gl_InvocationID;out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];
in int gl_PatchVerticesIn;in int gl_PrimitiveID;in vec3 gl_TessCoord;patch in float gl_TessLevelOuter[4];patch in float gl_TessLevelInner[2];out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];
in int gl_VertexIndex;in int gl_InstanceIndex;
in mediump uint  gl_SubgroupSize;in mediump uint  gl_SubgroupInvocationID;in highp   uvec4 gl_SubgroupEqMask;in highp   uvec4 gl_SubgroupGeMask;in highp   uvec4 gl_SubgroupGtMask;in highp   uvec4 gl_SubgroupLeMask;in highp   uvec4 gl_SubgroupLtMask;
in type qualifier supported in GLSL ES 3.10 only
in vec4  gl_Color;in vec4  gl_SecondaryColor;in vec3  gl_Normal;in vec4  gl_Vertex;in vec4  gl_MultiTexCoord0;in vec4  gl_MultiTexCoord1;in vec4  gl_MultiTexCoord2;in vec4  gl_MultiTexCoord3;in vec4  gl_MultiTexCoord4;in vec4  gl_MultiTexCoord5;in vec4  gl_MultiTexCoord6;in vec4  gl_MultiTexCoord7;in float gl_FogCoord;
in xfb mode
in/out must appear before const
inclusive-or
inclusive_or_expression
incomplete method syntax
inconsistent input primitive for array size of
inconsistent output number of vertices for array size of
incorrect directive, expected identifier
index =
index expression is negative
index is greater than or equal to the number of ATOMIC_COUNTER_BUFFER indexed binding points.
index is greater than or equal to the number of SHADER_STORAGE_BUFFER indexed binding points.
index is greater than or equal to the number of TRANSFORM_FEEDBACK_BUFFER indexed binding points.
index is greater than or equal to the number of UNIFORM_BUFFER indexed binding points.
index is outside the valid range for GL_ATOMIC_COUNTER_BUFFER_BINDING
index is outside the valid range for GL_SHADER_STORAGE_BUFFER_BINDING
index layout qualifier on fragment output
index must be less than the number of extension strings.
index must be less than the number of requestable extension strings.
index=
indexable
indirect index
indirect is not a multiple of the size, in basic machine units, of uint
inductive loop index modified
inductive loop requires a scalar 'int' or 'float' loop index
inductive-loop condition requires the form "loop-index <comparison-op> constant-expression"
inductive-loop init-declaration requires the form "type-specifier loop-index = constant-expression"
inductive-loop termination requires the form "loop-index++, loop-index--, loop-index += constant-expression, or loop-index -= constant-expression"
init-expression in a switch statement must be a scalar integer
initGlobals
init_declarator_list
initialize first child with second child
initializeContents
initializer list
initializer requires a variable, not a member
initializer_list
inout
input primitive =
input_attachment_index
input_attachment_index=
instance_disp
instance_extensions
int
int    mix(int    x, int    y, bool  a);ivec2  mix(ivec2  x, ivec2  y, bvec2 a);ivec3  mix(ivec3  x, ivec3  y, bvec3 a);ivec4  mix(ivec4  x, ivec4  y, bvec4 a);uint   mix(uint   x, uint   y, bool  a);uvec2  mix(uvec2  x, uvec2  y, bvec2 a);uvec3  mix(uvec3  x, uvec3  y, bvec3 a);uvec4  mix(uvec4  x, uvec4  y, bvec4 a);bool   mix(bool   x, bool   y, bool  a);bvec2  mix(bvec2  x, bvec2  y, bvec2 a);bvec3  mix(bvec3  x, bvec3  y, bvec3 a);bvec4  mix(bvec4  x, bvec4  y, bvec4 a);
int   floatBitsToInt(highp float value);ivec2 floatBitsToInt(highp vec2  value);ivec3 floatBitsToInt(highp vec3  value);ivec4 floatBitsToInt(highp vec4  value);uint  floatBitsToUint(highp float value);uvec2 floatBitsToUint(highp vec2  value);uvec3 floatBitsToUint(highp vec3  value);uvec4 floatBitsToUint(highp vec4  value);float intBitsToFloat(highp int   value);vec2  intBitsToFloat(highp ivec2 value);vec3  intBitsToFloat(highp ivec3 value);vec4  intBitsToFloat(highp ivec4 value);float uintBitsToFloat(highp uint  value);vec2  uintBitsToFloat(highp uvec2 value);vec3  uintBitsToFloat(highp uvec3 value);vec4  uintBitsToFloat(highp uvec4 value);
int abs(  int x);ivec2 abs(ivec2 x);ivec3 abs(ivec3 x);ivec4 abs(ivec4 x);  int sign(  int x);ivec2 sign(ivec2 x);ivec3 sign(ivec3 x);ivec4 sign(ivec4 x);float trunc(float x);vec2  trunc(vec2  x);vec3  trunc(vec3  x);vec4  trunc(vec4  x);float round(float x);vec2  round(vec2  x);vec3  round(vec3  x);vec4  round(vec4  x);float roundEven(float x);vec2  roundEven(vec2  x);vec3  roundEven(vec3  x);vec4  roundEven(vec4  x);float modf(float, out float);vec2  modf(vec2,  out vec2 );vec3  modf(vec3,  out vec3 );vec4  modf(vec4,  out vec4 );  int min(int    x, int y);ivec2 min(ivec2  x, int y);ivec3 min(ivec3  x, int y);ivec4 min(ivec4  x, int y);ivec2 min(ivec2  x, ivec2  y);ivec3 min(ivec3  x, ivec3  y);ivec4 min(ivec4  x, ivec4  y); uint min(uint   x, uint y);uvec2 min(uvec2  x, uint y);uvec3 min(uvec3  x, uint y);uvec4 min(uvec4  x, uint y);uvec2 min(uvec2  x, uvec2  y);uvec3 min(uvec3  x, uvec3  y);uvec4 min(uvec4  x, uvec4  y);  int max(int    x, int y);ivec2 max(ivec2  x, int y);ivec3 max(ivec3  x, int y);ivec4 max(ivec4  x, int y);ivec2 max(ivec2  x, ivec2  y);ivec3 max(ivec3  x, ivec3  y);ivec4 max(ivec4  x, ivec4  y); uint max(uint   x, uint y);uvec2 max(uvec2  x, uint y);uvec3 max(uvec3  x, uint y);uvec4 max(uvec4  x, uint y);uvec2 max(uvec2  x, uvec2  y);uvec3 max(uvec3  x, uvec3  y);uvec4 max(uvec4  x, uvec4  y);int    clamp(int x, int minVal, int maxVal);ivec2  clamp(ivec2  x, int minVal, int maxVal);ivec3  clamp(ivec3  x, int minVal, int maxVal);ivec4  clamp(ivec4  x, int minVal, int maxVal);ivec2  clamp(ivec2  x, ivec2  minVal, ivec2  maxVal);ivec3  clamp(ivec3  x, ivec3  minVal, ivec3  maxVal);ivec4  clamp(ivec4  x, ivec4  minVal, ivec4  maxVal);uint   clamp(uint x, uint minVal, uint maxVal);uvec2  clamp(uvec2  x, uint minVal, uint maxVal);uvec3  clamp(uvec3  x, uint minVal, uint maxVal);uvec4  clamp(uvec4  x, uint minVal, uint maxVal);uvec2  clamp(uvec2  x, uvec2  minVal, uvec2  maxVal);uvec3  clamp(uvec3  x, uvec3  minVal, uvec3  maxVal);uvec4  clamp(uvec4  x, uvec4  minVal, uvec4  maxVal);float mix(float x, float y, bool  a);vec2  mix(vec2  x, vec2  y, bvec2 a);vec3  mix(vec3  x, vec3  y, bvec3 a);vec4  mix(vec4  x, vec4  y, bvec4 a);bool  isnan(float x);bvec2 isnan(vec2  x);bvec3 isnan(vec3  x);bvec4 isnan(vec4  x);bool  isinf(float x);bvec2 isinf(vec2  x);bvec3 isinf(vec3  x);bvec4 isinf(vec4  x);
int abs_emu(int x) { return x * sign(x); }
int bitCount(  int);ivec2 bitCount(ivec2);ivec3 bitCount(ivec3);ivec4 bitCount(ivec4);  int bitCount( uint);ivec2 bitCount(uvec2);ivec3 bitCount(uvec3);ivec4 bitCount(uvec4);  int findMSB(highp   int);ivec2 findMSB(highp ivec2);ivec3 findMSB(highp ivec3);ivec4 findMSB(highp ivec4);  int findMSB(highp  uint);ivec2 findMSB(highp uvec2);ivec3 findMSB(highp uvec3);ivec4 findMSB(highp uvec4);
int bitfieldExtract(  int, int, int);ivec2 bitfieldExtract(ivec2, int, int);ivec3 bitfieldExtract(ivec3, int, int);ivec4 bitfieldExtract(ivec4, int, int); uint bitfieldExtract( uint, int, int);uvec2 bitfieldExtract(uvec2, int, int);uvec3 bitfieldExtract(uvec3, int, int);uvec4 bitfieldExtract(uvec4, int, int);  int bitfieldInsert(  int base,   int, int, int);ivec2 bitfieldInsert(ivec2 base, ivec2, int, int);ivec3 bitfieldInsert(ivec3 base, ivec3, int, int);ivec4 bitfieldInsert(ivec4 base, ivec4, int, int); uint bitfieldInsert( uint base,  uint, int, int);uvec2 bitfieldInsert(uvec2 base, uvec2, int, int);uvec3 bitfieldInsert(uvec3 base, uvec3, int, int);uvec4 bitfieldInsert(uvec4 base, uvec4, int, int);
int findLSB(  int);ivec2 findLSB(ivec2);ivec3 findLSB(ivec3);ivec4 findLSB(ivec4);  int findLSB( uint);ivec2 findLSB(uvec2);ivec3 findLSB(uvec3);ivec4 findLSB(uvec4);
int gl::(anonymous namespace)::GetVariableLocation<sh::OutputVariable>(std::__1::vector<sh::OutputVariable, std::__1::allocator<sh::OutputVariable> > const&, std::__1::vector<gl::VariableLocation, std::__1::allocator<gl::VariableLocation> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
int gl::CastFromGLintStateValue<int, bool>(unsigned int, bool)
int gl::CastFromGLintStateValue<int, int>(unsigned int, int)
int gl::CastFromGLintStateValue<int, unsigned int>(unsigned int, unsigned int)
int gl::CastFromStateValue<int, float>(unsigned int, float)
int gl::CastFromStateValue<int, int>(unsigned int, int)
int gl::CastFromStateValue<int, long>(unsigned int, long)
int gl::CastFromStateValue<int, unsigned char>(unsigned int, unsigned char)
int gl::CastFromStateValue<int, unsigned int>(unsigned int, unsigned int)
int gl::CastQueryValueTo<int, float>(unsigned int, float)
int gl::CastQueryValueTo<int, int>(unsigned int, int)
int gl_VertexID;
int sparseImageLoadARB(readonly volatile coherent
int std::__1::__get_up_to_n_digits<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >&, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, unsigned int&, std::__1::ctype<char> const&, int)
int std::__1::__get_up_to_n_digits<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >&, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, unsigned int&, std::__1::ctype<wchar_t> const&, int)
int textureQueryLevels(
int webgl_int_clamp(int value, int minValue, int maxValue) { return ((value < minValue) ? minValue : ((value > maxValue) ? maxValue : value)); }
int64_t abs(int64_t);i64vec2 abs(i64vec2);i64vec3 abs(i64vec3);i64vec4 abs(i64vec4);int64_t sign(int64_t);i64vec2 sign(i64vec2);i64vec3 sign(i64vec3);i64vec4 sign(i64vec4);int64_t  min(int64_t,  int64_t);i64vec2  min(i64vec2,  int64_t);i64vec3  min(i64vec3,  int64_t);i64vec4  min(i64vec4,  int64_t);i64vec2  min(i64vec2,  i64vec2);i64vec3  min(i64vec3,  i64vec3);i64vec4  min(i64vec4,  i64vec4);uint64_t min(uint64_t, uint64_t);u64vec2  min(u64vec2,  uint64_t);u64vec3  min(u64vec3,  uint64_t);u64vec4  min(u64vec4,  uint64_t);u64vec2  min(u64vec2,  u64vec2);u64vec3  min(u64vec3,  u64vec3);u64vec4  min(u64vec4,  u64vec4);int64_t  max(int64_t,  int64_t);i64vec2  max(i64vec2,  int64_t);i64vec3  max(i64vec3,  int64_t);i64vec4  max(i64vec4,  int64_t);i64vec2  max(i64vec2,  i64vec2);i64vec3  max(i64vec3,  i64vec3);i64vec4  max(i64vec4,  i64vec4);uint64_t max(uint64_t, uint64_t);u64vec2  max(u64vec2,  uint64_t);u64vec3  max(u64vec3,  uint64_t);u64vec4  max(u64vec4,  uint64_t);u64vec2  max(u64vec2,  u64vec2);u64vec3  max(u64vec3,  u64vec3);u64vec4  max(u64vec4,  u64vec4);int64_t  clamp(int64_t,  int64_t,  int64_t);i64vec2  clamp(i64vec2,  int64_t,  int64_t);i64vec3  clamp(i64vec3,  int64_t,  int64_t);i64vec4  clamp(i64vec4,  int64_t,  int64_t);i64vec2  clamp(i64vec2,  i64vec2,  i64vec2);i64vec3  clamp(i64vec3,  i64vec3,  i64vec3);i64vec4  clamp(i64vec4,  i64vec4,  i64vec4);uint64_t clamp(uint64_t, uint64_t, uint64_t);u64vec2  clamp(u64vec2,  uint64_t, uint64_t);u64vec3  clamp(u64vec3,  uint64_t, uint64_t);u64vec4  clamp(u64vec4,  uint64_t, uint64_t);u64vec2  clamp(u64vec2,  u64vec2,  u64vec2);u64vec3  clamp(u64vec3,  u64vec3,  u64vec3);u64vec4  clamp(u64vec4,  u64vec4,  u64vec4);int64_t  mix(int64_t,  int64_t,  bool);i64vec2  mix(i64vec2,  i64vec2,  bvec2);i64vec3  mix(i64vec3,  i64vec3,  bvec3);i64vec4  mix(i64vec4,  i64vec4,  bvec4);uint64_t mix(uint64_t, uint64_t, bool);u64vec2  mix(u64vec2,  u64vec2,  bvec2);u64vec3  mix(u64vec3,  u64vec3,  bvec3);u64vec4  mix(u64vec4,  u64vec4,  bvec4);int64_t doubleBitsToInt64(double);i64vec2 doubleBitsToInt64(dvec2);i64vec3 doubleBitsToInt64(dvec3);i64vec4 doubleBitsToInt64(dvec4);uint64_t doubleBitsToUint64(double);u64vec2  doubleBitsToUint64(dvec2);u64vec3  doubleBitsToUint64(dvec3);u64vec4  doubleBitsToUint64(dvec4);double int64BitsToDouble(int64_t);dvec2  int64BitsToDouble(i64vec2);dvec3  int64BitsToDouble(i64vec3);dvec4  int64BitsToDouble(i64vec4);double uint64BitsToDouble(uint64_t);dvec2  uint64BitsToDouble(u64vec2);dvec3  uint64BitsToDouble(u64vec3);dvec4  uint64BitsToDouble(u64vec4);int64_t  packInt2x32(ivec2);uint64_t packUint2x32(uvec2);ivec2    unpackInt2x32(int64_t);uvec2    unpackUint2x32(uint64_t);bvec2 lessThan(i64vec2, i64vec2);bvec3 lessThan(i64vec3, i64vec3);bvec4 lessThan(i64vec4, i64vec4);bvec2 lessThan(u64vec2, u64vec2);bvec3 lessThan(u64vec3, u64vec3);bvec4 lessThan(u64vec4, u64vec4);bvec2 lessThanEqual(i64vec2, i64vec2);bvec3 lessThanEqual(i64vec3, i64vec3);bvec4 lessThanEqual(i64vec4, i64vec4);bvec2 lessThanEqual(u64vec2, u64vec2);bvec3 lessThanEqual(u64vec3, u64vec3);bvec4 lessThanEqual(u64vec4, u64vec4);bvec2 greaterThan(i64vec2, i64vec2);bvec3 greaterThan(i64vec3, i64vec3);bvec4 greaterThan(i64vec4, i64vec4);bvec2 greaterThan(u64vec2, u64vec2);bvec3 greaterThan(u64vec3, u64vec3);bvec4 greaterThan(u64vec4, u64vec4);bvec2 greaterThanEqual(i64vec2, i64vec2);bvec3 greaterThanEqual(i64vec3, i64vec3);bvec4 greaterThanEqual(i64vec4, i64vec4);bvec2 greaterThanEqual(u64vec2, u64vec2);bvec3 greaterThanEqual(u64vec3, u64vec3);bvec4 greaterThanEqual(u64vec4, u64vec4);bvec2 equal(i64vec2, i64vec2);bvec3 equal(i64vec3, i64vec3);bvec4 equal(i64vec4, i64vec4);bvec2 equal(u64vec2, u64vec2);bvec3 equal(u64vec3, u64vec3);bvec4 equal(u64vec4, u64vec4);bvec2 notEqual(i64vec2, i64vec2);bvec3 notEqual(i64vec3, i64vec3);bvec4 notEqual(i64vec4, i64vec4);bvec2 notEqual(u64vec2, u64vec2);bvec3 notEqual(u64vec3, u64vec3);bvec4 notEqual(u64vec4, u64vec4);int   findLSB(int64_t);ivec2 findLSB(i64vec2);ivec3 findLSB(i64vec3);ivec4 findLSB(i64vec4);int   findLSB(uint64_t);ivec2 findLSB(u64vec2);ivec3 findLSB(u64vec3);ivec4 findLSB(u64vec4);int   findMSB(int64_t);ivec2 findMSB(i64vec2);ivec3 findMSB(i64vec3);ivec4 findMSB(i64vec4);int   findMSB(uint64_t);ivec2 findMSB(u64vec2);ivec3 findMSB(u64vec3);ivec4 findMSB(u64vec4);
int8_t abs(int8_t);i8vec2 abs(i8vec2);i8vec3 abs(i8vec3);i8vec4 abs(i8vec4);int8_t sign(int8_t);i8vec2 sign(i8vec2);i8vec3 sign(i8vec3);i8vec4 sign(i8vec4);int8_t min(int8_t x, int8_t y);i8vec2 min(i8vec2 x, int8_t y);i8vec3 min(i8vec3 x, int8_t y);i8vec4 min(i8vec4 x, int8_t y);i8vec2 min(i8vec2 x, i8vec2 y);i8vec3 min(i8vec3 x, i8vec3 y);i8vec4 min(i8vec4 x, i8vec4 y);uint8_t min(uint8_t x, uint8_t y);u8vec2 min(u8vec2 x, uint8_t y);u8vec3 min(u8vec3 x, uint8_t y);u8vec4 min(u8vec4 x, uint8_t y);u8vec2 min(u8vec2 x, u8vec2 y);u8vec3 min(u8vec3 x, u8vec3 y);u8vec4 min(u8vec4 x, u8vec4 y);int8_t max(int8_t x, int8_t y);i8vec2 max(i8vec2 x, int8_t y);i8vec3 max(i8vec3 x, int8_t y);i8vec4 max(i8vec4 x, int8_t y);i8vec2 max(i8vec2 x, i8vec2 y);i8vec3 max(i8vec3 x, i8vec3 y);i8vec4 max(i8vec4 x, i8vec4 y);uint8_t max(uint8_t x, uint8_t y);u8vec2 max(u8vec2 x, uint8_t y);u8vec3 max(u8vec3 x, uint8_t y);u8vec4 max(u8vec4 x, uint8_t y);u8vec2 max(u8vec2 x, u8vec2 y);u8vec3 max(u8vec3 x, u8vec3 y);u8vec4 max(u8vec4 x, u8vec4 y);int8_t    clamp(int8_t x, int8_t minVal, int8_t maxVal);i8vec2  clamp(i8vec2  x, int8_t minVal, int8_t maxVal);i8vec3  clamp(i8vec3  x, int8_t minVal, int8_t maxVal);i8vec4  clamp(i8vec4  x, int8_t minVal, int8_t maxVal);i8vec2  clamp(i8vec2  x, i8vec2  minVal, i8vec2  maxVal);i8vec3  clamp(i8vec3  x, i8vec3  minVal, i8vec3  maxVal);i8vec4  clamp(i8vec4  x, i8vec4  minVal, i8vec4  maxVal);uint8_t   clamp(uint8_t x, uint8_t minVal, uint8_t maxVal);u8vec2  clamp(u8vec2  x, uint8_t minVal, uint8_t maxVal);u8vec3  clamp(u8vec3  x, uint8_t minVal, uint8_t maxVal);u8vec4  clamp(u8vec4  x, uint8_t minVal, uint8_t maxVal);u8vec2  clamp(u8vec2  x, u8vec2  minVal, u8vec2  maxVal);u8vec3  clamp(u8vec3  x, u8vec3  minVal, u8vec3  maxVal);u8vec4  clamp(u8vec4  x, u8vec4  minVal, u8vec4  maxVal);int8_t  mix(int8_t,  int8_t,  bool);i8vec2  mix(i8vec2,  i8vec2,  bvec2);i8vec3  mix(i8vec3,  i8vec3,  bvec3);i8vec4  mix(i8vec4,  i8vec4,  bvec4);uint8_t mix(uint8_t, uint8_t, bool);u8vec2  mix(u8vec2,  u8vec2,  bvec2);u8vec3  mix(u8vec3,  u8vec3,  bvec3);u8vec4  mix(u8vec4,  u8vec4,  bvec4);bvec2 lessThan(i8vec2, i8vec2);bvec3 lessThan(i8vec3, i8vec3);bvec4 lessThan(i8vec4, i8vec4);bvec2 lessThan(u8vec2, u8vec2);bvec3 lessThan(u8vec3, u8vec3);bvec4 lessThan(u8vec4, u8vec4);bvec2 lessThanEqual(i8vec2, i8vec2);bvec3 lessThanEqual(i8vec3, i8vec3);bvec4 lessThanEqual(i8vec4, i8vec4);bvec2 lessThanEqual(u8vec2, u8vec2);bvec3 lessThanEqual(u8vec3, u8vec3);bvec4 lessThanEqual(u8vec4, u8vec4);bvec2 greaterThan(i8vec2, i8vec2);bvec3 greaterThan(i8vec3, i8vec3);bvec4 greaterThan(i8vec4, i8vec4);bvec2 greaterThan(u8vec2, u8vec2);bvec3 greaterThan(u8vec3, u8vec3);bvec4 greaterThan(u8vec4, u8vec4);bvec2 greaterThanEqual(i8vec2, i8vec2);bvec3 greaterThanEqual(i8vec3, i8vec3);bvec4 greaterThanEqual(i8vec4, i8vec4);bvec2 greaterThanEqual(u8vec2, u8vec2);bvec3 greaterThanEqual(u8vec3, u8vec3);bvec4 greaterThanEqual(u8vec4, u8vec4);bvec2 equal(i8vec2, i8vec2);bvec3 equal(i8vec3, i8vec3);bvec4 equal(i8vec4, i8vec4);bvec2 equal(u8vec2, u8vec2);bvec3 equal(u8vec3, u8vec3);bvec4 equal(u8vec4, u8vec4);bvec2 notEqual(i8vec2, i8vec2);bvec3 notEqual(i8vec3, i8vec3);bvec4 notEqual(i8vec4, i8vec4);bvec2 notEqual(u8vec2, u8vec2);bvec3 notEqual(u8vec3, u8vec3);bvec4 notEqual(u8vec4, u8vec4);  int8_t bitfieldExtract(  int8_t, int8_t, int8_t);i8vec2 bitfieldExtract(i8vec2, int8_t, int8_t);i8vec3 bitfieldExtract(i8vec3, int8_t, int8_t);i8vec4 bitfieldExtract(i8vec4, int8_t, int8_t); uint8_t bitfieldExtract( uint8_t, int8_t, int8_t);u8vec2 bitfieldExtract(u8vec2, int8_t, int8_t);u8vec3 bitfieldExtract(u8vec3, int8_t, int8_t);u8vec4 bitfieldExtract(u8vec4, int8_t, int8_t);  int8_t bitfieldInsert(  int8_t base,   int8_t, int8_t, int8_t);i8vec2 bitfieldInsert(i8vec2 base, i8vec2, int8_t, int8_t);i8vec3 bitfieldInsert(i8vec3 base, i8vec3, int8_t, int8_t);i8vec4 bitfieldInsert(i8vec4 base, i8vec4, int8_t, int8_t); uint8_t bitfieldInsert( uint8_t base,  uint8_t, int8_t, int8_t);u8vec2 bitfieldInsert(u8vec2 base, u8vec2, int8_t, int8_t);u8vec3 bitfieldInsert(u8vec3 base, u8vec3, int8_t, int8_t);u8vec4 bitfieldInsert(u8vec4 base, u8vec4, int8_t, int8_t);  int8_t bitCount(  int8_t);i8vec2 bitCount(i8vec2);i8vec3 bitCount(i8vec3);i8vec4 bitCount(i8vec4);  int8_t bitCount( uint8_t);i8vec2 bitCount(u8vec2);i8vec3 bitCount(u8vec3);i8vec4 bitCount(u8vec4);  int8_t findLSB(  int8_t);i8vec2 findLSB(i8vec2);i8vec3 findLSB(i8vec3);i8vec4 findLSB(i8vec4);  int8_t findLSB( uint8_t);i8vec2 findLSB(u8vec2);i8vec3 findLSB(u8vec3);i8vec4 findLSB(u8vec4);  int8_t findMSB(  int8_t);i8vec2 findMSB(i8vec2);i8vec3 findMSB(i8vec3);i8vec4 findMSB(i8vec4);  int8_t findMSB( uint8_t);i8vec2 findMSB(u8vec2);i8vec3 findMSB(u8vec3);i8vec4 findMSB(u8vec4);int16_t abs(int16_t);i16vec2 abs(i16vec2);i16vec3 abs(i16vec3);i16vec4 abs(i16vec4);int16_t sign(int16_t);i16vec2 sign(i16vec2);i16vec3 sign(i16vec3);i16vec4 sign(i16vec4);int16_t min(int16_t x, int16_t y);i16vec2 min(i16vec2 x, int16_t y);i16vec3 min(i16vec3 x, int16_t y);i16vec4 min(i16vec4 x, int16_t y);i16vec2 min(i16vec2 x, i16vec2 y);i16vec3 min(i16vec3 x, i16vec3 y);i16vec4 min(i16vec4 x, i16vec4 y);uint16_t min(uint16_t x, uint16_t y);u16vec2 min(u16vec2 x, uint16_t y);u16vec3 min(u16vec3 x, uint16_t y);u16vec4 min(u16vec4 x, uint16_t y);u16vec2 min(u16vec2 x, u16vec2 y);u16vec3 min(u16vec3 x, u16vec3 y);u16vec4 min(u16vec4 x, u16vec4 y);int16_t max(int16_t x, int16_t y);i16vec2 max(i16vec2 x, int16_t y);i16vec3 max(i16vec3 x, int16_t y);i16vec4 max(i16vec4 x, int16_t y);i16vec2 max(i16vec2 x, i16vec2 y);i16vec3 max(i16vec3 x, i16vec3 y);i16vec4 max(i16vec4 x, i16vec4 y);uint16_t max(uint16_t x, uint16_t y);u16vec2 max(u16vec2 x, uint16_t y);u16vec3 max(u16vec3 x, uint16_t y);u16vec4 max(u16vec4 x, uint16_t y);u16vec2 max(u16vec2 x, u16vec2 y);u16vec3 max(u16vec3 x, u16vec3 y);u16vec4 max(u16vec4 x, u16vec4 y);int16_t    clamp(int16_t x, int16_t minVal, int16_t maxVal);i16vec2  clamp(i16vec2  x, int16_t minVal, int16_t maxVal);i16vec3  clamp(i16vec3  x, int16_t minVal, int16_t maxVal);i16vec4  clamp(i16vec4  x, int16_t minVal, int16_t maxVal);i16vec2  clamp(i16vec2  x, i16vec2  minVal, i16vec2  maxVal);i16vec3  clamp(i16vec3  x, i16vec3  minVal, i16vec3  maxVal);i16vec4  clamp(i16vec4  x, i16vec4  minVal, i16vec4  maxVal);uint16_t   clamp(uint16_t x, uint16_t minVal, uint16_t maxVal);u16vec2  clamp(u16vec2  x, uint16_t minVal, uint16_t maxVal);u16vec3  clamp(u16vec3  x, uint16_t minVal, uint16_t maxVal);u16vec4  clamp(u16vec4  x, uint16_t minVal, uint16_t maxVal);u16vec2  clamp(u16vec2  x, u16vec2  minVal, u16vec2  maxVal);u16vec3  clamp(u16vec3  x, u16vec3  minVal, u16vec3  maxVal);u16vec4  clamp(u16vec4  x, u16vec4  minVal, u16vec4  maxVal);int16_t  mix(int16_t,  int16_t,  bool);i16vec2  mix(i16vec2,  i16vec2,  bvec2);i16vec3  mix(i16vec3,  i16vec3,  bvec3);i16vec4  mix(i16vec4,  i16vec4,  bvec4);uint16_t mix(uint16_t, uint16_t, bool);u16vec2  mix(u16vec2,  u16vec2,  bvec2);u16vec3  mix(u16vec3,  u16vec3,  bvec3);u16vec4  mix(u16vec4,  u16vec4,  bvec4);float16_t frexp(float16_t, out int16_t);f16vec2   frexp(f16vec2,   out i16vec2);f16vec3   frexp(f16vec3,   out i16vec3);f16vec4   frexp(f16vec4,   out i16vec4);float16_t ldexp(float16_t, int16_t);f16vec2   ldexp(f16vec2,   i16vec2);f16vec3   ldexp(f16vec3,   i16vec3);f16vec4   ldexp(f16vec4,   i16vec4);int16_t halfBitsToInt16(float16_t);i16vec2 halfBitsToInt16(f16vec2);i16vec3 halhBitsToInt16(f16vec3);i16vec4 halfBitsToInt16(f16vec4);uint16_t halfBitsToUint16(float16_t);u16vec2  halfBitsToUint16(f16vec2);u16vec3  halfBitsToUint16(f16vec3);u16vec4  halfBitsToUint16(f16vec4);int16_t float16BitsToInt16(float16_t);i16vec2 float16BitsToInt16(f16vec2);i16vec3 float16BitsToInt16(f16vec3);i16vec4 float16BitsToInt16(f16vec4);uint16_t float16BitsToUint16(float16_t);u16vec2  float16BitsToUint16(f16vec2);u16vec3  float16BitsToUint16(f16vec3);u16vec4  float16BitsToUint16(f16vec4);float16_t int16BitsToFloat16(int16_t);f16vec2   int16BitsToFloat16(i16vec2);f16vec3   int16BitsToFloat16(i16vec3);f16vec4   int16BitsToFloat16(i16vec4);float16_t uint16BitsToFloat16(uint16_t);f16vec2   uint16BitsToFloat16(u16vec2);f16vec3   uint16BitsToFloat16(u16vec3);f16vec4   uint16BitsToFloat16(u16vec4);float16_t int16BitsToHalf(int16_t);f16vec2   int16BitsToHalf(i16vec2);f16vec3   int16BitsToHalf(i16vec3);f16vec4   int16BitsToHalf(i16vec4);float16_t uint16BitsToHalf(uint16_t);f16vec2   uint16BitsToHalf(u16vec2);f16vec3   uint16BitsToHalf(u16vec3);f16vec4   uint16BitsToHalf(u16vec4);int      packInt2x16(i16vec2);uint     packUint2x16(u16vec2);int64_t  packInt4x16(i16vec4);uint64_t packUint4x16(u16vec4);i16vec2  unpackInt2x16(int);u16vec2  unpackUint2x16(uint);i16vec4  unpackInt4x16(int64_t);u16vec4  unpackUint4x16(uint64_t);bvec2 lessThan(i16vec2, i16vec2);bvec3 lessThan(i16vec3, i16vec3);bvec4 lessThan(i16vec4, i16vec4);bvec2 lessThan(u16vec2, u16vec2);bvec3 lessThan(u16vec3, u16vec3);bvec4 lessThan(u16vec4, u16vec4);bvec2 lessThanEqual(i16vec2, i16vec2);bvec3 lessThanEqual(i16vec3, i16vec3);bvec4 lessThanEqual(i16vec4, i16vec4);bvec2 lessThanEqual(u16vec2, u16vec2);bvec3 lessThanEqual(u16vec3, u16vec3);bvec4 lessThanEqual(u16vec4, u16vec4);bvec2 greaterThan(i16vec2, i16vec2);bvec3 greaterThan(i16vec3, i16vec3);bvec4 greaterThan(i16vec4, i16vec4);bvec2 greaterThan(u16vec2, u16vec2);bvec3 greaterThan(u16vec3, u16vec3);bvec4 greaterThan(u16vec4, u16vec4);bvec2 greaterThanEqual(i16vec2, i16vec2);bvec3 greaterThanEqual(i16vec3, i16vec3);bvec4 greaterThanEqual(i16vec4, i16vec4);bvec2 greaterThanEqual(u16vec2, u16vec2);bvec3 greaterThanEqual(u16vec3, u16vec3);bvec4 greaterThanEqual(u16vec4, u16vec4);bvec2 equal(i16vec2, i16vec2);bvec3 equal(i16vec3, i16vec3);bvec4 equal(i16vec4, i16vec4);bvec2 equal(u16vec2, u16vec2);bvec3 equal(u16vec3, u16vec3);bvec4 equal(u16vec4, u16vec4);bvec2 notEqual(i16vec2, i16vec2);bvec3 notEqual(i16vec3, i16vec3);bvec4 notEqual(i16vec4, i16vec4);bvec2 notEqual(u16vec2, u16vec2);bvec3 notEqual(u16vec3, u16vec3);bvec4 notEqual(u16vec4, u16vec4);  int16_t bitfieldExtract(  int16_t, int16_t, int16_t);i16vec2 bitfieldExtract(i16vec2, int16_t, int16_t);i16vec3 bitfieldExtract(i16vec3, int16_t, int16_t);i16vec4 bitfieldExtract(i16vec4, int16_t, int16_t); uint16_t bitfieldExtract( uint16_t, int16_t, int16_t);u16vec2 bitfieldExtract(u16vec2, int16_t, int16_t);u16vec3 bitfieldExtract(u16vec3, int16_t, int16_t);u16vec4 bitfieldExtract(u16vec4, int16_t, int16_t);  int16_t bitfieldInsert(  int16_t base,   int16_t, int16_t, int16_t);i16vec2 bitfieldInsert(i16vec2 base, i16vec2, int16_t, int16_t);i16vec3 bitfieldInsert(i16vec3 base, i16vec3, int16_t, int16_t);i16vec4 bitfieldInsert(i16vec4 base, i16vec4, int16_t, int16_t); uint16_t bitfieldInsert( uint16_t base,  uint16_t, int16_t, int16_t);u16vec2 bitfieldInsert(u16vec2 base, u16vec2, int16_t, int16_t);u16vec3 bitfieldInsert(u16vec3 base, u16vec3, int16_t, int16_t);u16vec4 bitfieldInsert(u16vec4 base, u16vec4, int16_t, int16_t);  int16_t bitCount(  int16_t);i16vec2 bitCount(i16vec2);i16vec3 bitCount(i16vec3);i16vec4 bitCount(i16vec4);  int16_t bitCount( uint16_t);i16vec2 bitCount(u16vec2);i16vec3 bitCount(u16vec3);i16vec4 bitCount(u16vec4);  int16_t findLSB(  int16_t);i16vec2 findLSB(i16vec2);i16vec3 findLSB(i16vec3);i16vec4 findLSB(i16vec4);  int16_t findLSB( uint16_t);i16vec2 findLSB(u16vec2);i16vec3 findLSB(u16vec3);i16vec4 findLSB(u16vec4);  int16_t findMSB(  int16_t);i16vec2 findMSB(i16vec2);i16vec3 findMSB(i16vec3);i16vec4 findMSB(i16vec4);  int16_t findMSB( uint16_t);i16vec2 findMSB(u16vec2);i16vec3 findMSB(u16vec3);i16vec4 findMSB(u16vec4);int16_t  pack16(i8vec2);uint16_t pack16(u8vec2);int32_t  pack32(i8vec4);uint32_t pack32(u8vec4);int32_t  pack32(i16vec2);uint32_t pack32(u16vec2);int64_t  pack64(i16vec4);uint64_t pack64(u16vec4);int64_t  pack64(i32vec2);uint64_t pack64(u32vec2);i8vec2   unpack8(int16_t);u8vec2   unpack8(uint16_t);i8vec4   unpack8(int32_t);u8vec4   unpack8(uint32_t);i16vec2  unpack16(int32_t);u16vec2  unpack16(uint32_t);i16vec4  unpack16(int64_t);u16vec4  unpack16(uint64_t);i32vec2  unpack32(int64_t);u32vec2  unpack32(uint64_t);float64_t radians(float64_t);f64vec2   radians(f64vec2);f64vec3   radians(f64vec3);f64vec4   radians(f64vec4);float64_t degrees(float64_t);f64vec2   degrees(f64vec2);f64vec3   degrees(f64vec3);f64vec4   degrees(f64vec4);float64_t sin(float64_t);f64vec2   sin(f64vec2);f64vec3   sin(f64vec3);f64vec4   sin(f64vec4);float64_t cos(float64_t);f64vec2   cos(f64vec2);f64vec3   cos(f64vec3);f64vec4   cos(f64vec4);float64_t tan(float64_t);f64vec2   tan(f64vec2);f64vec3   tan(f64vec3);f64vec4   tan(f64vec4);float64_t asin(float64_t);f64vec2   asin(f64vec2);f64vec3   asin(f64vec3);f64vec4   asin(f64vec4);float64_t acos(float64_t);f64vec2   acos(f64vec2);f64vec3   acos(f64vec3);f64vec4   acos(f64vec4);float64_t atan(float64_t, float64_t);f64vec2   atan(f64vec2,   f64vec2);f64vec3   atan(f64vec3,   f64vec3);f64vec4   atan(f64vec4,   f64vec4);float64_t atan(float64_t);f64vec2   atan(f64vec2);f64vec3   atan(f64vec3);f64vec4   atan(f64vec4);float64_t sinh(float64_t);f64vec2   sinh(f64vec2);f64vec3   sinh(f64vec3);f64vec4   sinh(f64vec4);float64_t cosh(float64_t);f64vec2   cosh(f64vec2);f64vec3   cosh(f64vec3);f64vec4   cosh(f64vec4);float64_t tanh(float64_t);f64vec2   tanh(f64vec2);f64vec3   tanh(f64vec3);f64vec4   tanh(f64vec4);float64_t asinh(float64_t);f64vec2   asinh(f64vec2);f64vec3   asinh(f64vec3);f64vec4   asinh(f64vec4);float64_t acosh(float64_t);f64vec2   acosh(f64vec2);f64vec3   acosh(f64vec3);f64vec4   acosh(f64vec4);float64_t atanh(float64_t);f64vec2   atanh(f64vec2);f64vec3   atanh(f64vec3);f64vec4   atanh(f64vec4);float64_t pow(float64_t, float64_t);f64vec2   pow(f64vec2,   f64vec2);f64vec3   pow(f64vec3,   f64vec3);f64vec4   pow(f64vec4,   f64vec4);float64_t exp(float64_t);f64vec2   exp(f64vec2);f64vec3   exp(f64vec3);f64vec4   exp(f64vec4);float64_t log(float64_t);f64vec2   log(f64vec2);f64vec3   log(f64vec3);f64vec4   log(f64vec4);float64_t exp2(float64_t);f64vec2   exp2(f64vec2);f64vec3   exp2(f64vec3);f64vec4   exp2(f64vec4);float64_t log2(float64_t);f64vec2   log2(f64vec2);f64vec3   log2(f64vec3);f64vec4   log2(f64vec4);
int;
int_constant(sh::TParseContext*)
integer modulus operator supported in GLSL ES 3.00 and above only
integer overflow
integer_expression
interface block has no fields
interface blocks supported in GLSL ES 3.00 and above only
intermOut.cpp
internal error
internal image format requires a floating image type
internal image format requires an integer image type
internal image format requires an unsigned image type
internal max is %d
internal tokenizer error
internalformat is an ETC2/EAC format and target is not GL_TEXTURE_2D_ARRAY.
internalformat is not a supported compressed internal format.
interpolateAtCentroid
interpolateAtOffset
interpolateAtSample
interpolation qualifiers must appear before storage and precision qualifiers
interpolation_qualifier
invalid GL colorspace
invalid attribute: 0x
invalid character
invalid directive
invalid directive name
invalid directive:
invalid expression
invalid extension behavior
invalid extension directive
invalid extension name
invalid file number
invalid layout qualifier
invalid layout qualifier combination
invalid layout qualifier: cannot be used here
invalid layout qualifier: location requires an argument
invalid layout qualifier: not supported
invalid layout qualifier: only valid on program inputs and outputs
invalid layout qualifier: only valid on program outputs
invalid layout qualifier: only valid on shader inputs, outputs, and uniforms
invalid layout qualifier: only valid when used with 'in' in a compute shader global layout declaration
invalid layout qualifier: only valid when used with a fragment shader output in ESSL version >= 3.00 and EXT_blend_func_extended is enabled
invalid layout qualifier: only valid when used with atomic counters
invalid layout qualifier: only valid when used with images
invalid layout qualifier: only valid when used with opaque types or blocks
invalid line directive
invalid line number
invalid method
invalid number
invalid parameter qualifier
invalid pragma value - 'on' or 'off' expected
invalid preprocessor command
invalid primitive type for 'in' layout
invalid primitive type for 'out' layout
invalid qualifier combination
invalid qualifier on interface block member
invalid qualifier on shader storage block member
invalid qualifier on struct member
invalid qualifier on uniform block member
invalid qualifier: can be only used with function parameters
invalid qualifier: global layout can only be set for blocks
invalid qualifier: interface blocks must be uniform in version lower than GLSL ES 3.10
invalid qualifier: interface blocks must be uniform or buffer
invalid target: 0x
invalid value: Value must be at least 1 and no greater than
invalid version directive
invalid version number
invariant
invariant declaration specifies layout
invariant declaration specifies precision
invariant declaration specifies qualifier
invariant gl_Position;
invariant qualifier must appear before interpolation, storage, and precision qualifiers
invariant varying
invariant_qualifier
inverse
inverse sqrt
inversesqrt
invocation operation
invocations
invocations =
invocations can only be declared in 'in' layout in a geometry shader
invocations contradicts to the earlier declaration
iomapper.cpp
ios.cpp
ios_base::clear
iostream
iostream.cpp
ip,
is being used for
is not requestable.
is too big to fit
isNonZero = exponent < -25.0;    v = v * exp2(-exponent);    v = sign(v) * floor(abs(v));    return v * exp2(exponent) * (float
isNonZero = greaterThanEqual(exponent, vec
isampler1D
isampler1DArray
isampler2D
isampler2DArray
isampler2DMS
isampler2DMSArray
isampler2DRect
isampler3D
isamplerBuffer
isamplerCube
isamplerCubeArray
isfinite
isinf
isnan
isolines
isubpassInput
isubpassInputMS
it7
iteration_statement
iteration_statement_nonattributed
itexture1D
itexture1DArray
itexture2D
itexture2DArray
itexture2DMS
itexture2DMSArray
itexture2DRect
itexture3D
itextureBuffer
itextureCube
itextureCubeArray
itu_601
itu_601_full_range
itu_709
j
j7
j8
jL>
jM>
jN2
jO7
jU7
jW5
j]>
jump_statement
k
k7
k8
kIntClampBegin
kIntClampDefinition
kIntClampEnd
kK>
kL>
kM>
kN>
kO>
kP>
kQ>
kR>
kS>
key and binary must both be null or both non-null.
keysize and binarysize must always be valid pointers.
kill
l
l-value of swizzle cannot have duplicate components
l-value required
l6
l7
l8
l>@
l?@
l@@
lA@
lB@
lC@
lD@
lE@
lO>
lT7
lV5
l^4
label statement nested inside control flow
last case/default label not followed by statements
layer is negative.
layout (
layout (local_size_x=
layout qualifier only valid for interface blocks
layout qualifiers supported in GLSL ES 3.00 and above
layout(
layout(@@ DEFAULT-UNIFORMS-SET-BINDING @@) uniform defaultUniforms{
layout(binding=X) is required
layout(location = 0) out vec4 webgl_FragColor;
layout(location = 0) out vec4 webgl_FragData[gl_MaxDrawBuffers];
layout_qualifier
layout_qualifier_id
layout_qualifier_id_list
ld-linux-x86-64.so.2
ldexp
left of '[' is not of type array, matrix, or vector
left shift second child into first child
left-shift
length can only be called on arrays
lessThan
lessThanEqual
level is negative.
libGL.so.1
libGLESv2.so
libGLESv2_autogen.cpp
libX11.so.6
libc.so.6
libdl.so.2
libgcc_s.so.1
libm.so.6
libpthread.so.0
library_path
libxcb.so.1
light_attenuation_consts
light_attenuation_linears
light_attenuation_quadratics
light_directions
light_model_scene_ambient
light_model_two_sided
light_spotlight_cutoff_angles
light_spotlight_exponents
limit must be non-negative.
limitation
limitations
limits.cpp
line
line_strip
lines_adjacency
linkProgram
linkValidate.cpp
lj,
lm,
ln'
load_functions_table_autogen.cpp
loader
loader.c
loader_activate_instance_layer_extensions
loader_add_dev_ext_table() can't reallocate func_name memory
loader_add_dev_ext_table:  Could not insert into hash table; is it full?
loader_add_dev_ext_table: Failed to allocate memory for func_name %s
loader_add_dev_ext_table: Failed to allocate memory for list index
loader_add_dev_ext_table: Failed to reallocate memory for list index
loader_add_device_extensions
loader_add_device_extensions: Error getting physical device extension info count from library %s
loader_add_env_layers
loader_add_implicit_layer
loader_add_implicit_layer: Disabling implicit layer %s for using an old API version %d.%d versus application requested %d.%d
loader_add_instance_extensions
loader_add_instance_extensions: Error getting Instance extension count from %s
loader_add_instance_extensions: Error getting Instance extensions from %s
loader_add_instance_extensions: Failed to add %s to Instance extension list
loader_add_layer_names_to_list
loader_add_layer_names_to_list: Unable to find layer %s
loader_add_layer_properties
loader_add_layer_properties: %s invalid layer manifest file version %d.%d.%d.  May cause errors.
loader_add_layer_properties: 'layers' tag not supported until file version 1.0.1, but %s is reporting version %s
loader_add_layer_properties: Can not find 'layer' object in manifest JSON file %s.  Skipping this file.
loader_add_layer_properties: Can not find 'layers' array element %d object in manifest JSON file %s.  Skipping this file
loader_add_layer_properties: Multiple 'layer' nodes are deprecated starting in file version "1.0.1".  Please use 'layers' : [] array instead in %s.
loader_add_legacy_std_val_layer.std_validation_names
loader_add_meta_layer
loader_add_meta_layer: Failed to find layer name %s component layer %s to activate
loader_add_phys_dev_ext_table() can't allocate list memory
loader_add_phys_dev_ext_table() can't allocate memory for func_name
loader_add_phys_dev_ext_table() can't reallocate list memory
loader_add_phys_dev_ext_table() couldn't insert into hash table; is it full?
loader_add_to_dev_ext_list
loader_add_to_dev_ext_list: Failed to allocate space for device extension entrypoint %d name
loader_add_to_dev_ext_list: Failed to allocate space for device extension entrypoint list in list %d
loader_add_to_dev_ext_list: Failed to reallocate space for device extension list
loader_add_to_ext_list
loader_add_to_ext_list: Failed to reallocate space for extension list
loader_add_to_layer_list
loader_add_to_layer_list: Explicit layer %s is using an old API version %u.%u versus application requested %u.%u
loader_add_to_layer_list: Realloc failed for when attempting to add new layer
loader_create_device_chain
loader_create_device_chain: Failed to find 'vkCreateDevice' in layer %s
loader_create_device_chain: Failed to find 'vkGetInstanceProcAddr' in layer %s.  Skipping layer.
loader_create_instance_chain
loader_create_instance_chain: Failed to find 'vkCreateInstance'
loader_create_instance_chain: Failed to find 'vkGetInstanceProcAddr' in layer %s
loader_create_logical_device
loader_create_logical_device: Failed to alloc struct loader_device
loader_deactivate_layers
loader_delete_layer_properties
loader_destroy_generic_list
loader_destroy_layer_list
loader_destroy_logical_device
loader_dev_ext_gpa
loader_device_heap_alloc
loader_enable_instance_layers
loader_enable_instance_layers: Failed to initialize application version of the layer list
loader_enable_instance_layers: Failed to initialize expanded version of the layer list
loader_find_layer_name_add_list
loader_find_layer_name_add_list: Failed to find layer name %s to activate
loader_free_library
loader_get_dev_ext_trampoline
loader_get_fullpath
loader_get_icd_and_device
loader_get_icd_loader_instance_extensions
loader_get_instance
loader_get_json
loader_get_json: Failed to open JSON file %s
loader_get_json: Failed to parse JSON file %s, this is usually because something ran out of memory.
loader_get_json: Failed to read JSON file %s.
loader_get_json: Received invalid JSON file
loader_get_manifest_files
loader_get_manifest_files: Can not get manifest files with NULL location, env_override=%s
loader_get_manifest_files: Failed to allocate space for manifest file %d list
loader_get_manifest_files: Failed to allocate space for manifest file name list
loader_get_manifest_files: Failed to reallocate space for manifest file name list
loader_get_next_layer_property
loader_get_next_layer_property: Out of memory can not add any layer properties to list
loader_get_next_layer_property: realloc failed for layer list
loader_get_phys_dev_ext_termin
loader_get_phys_dev_ext_tramp
loader_gpa_device_internal
loader_gpa_instance_internal
loader_gpa_instance_internal() unrecognized name %s
loader_gpdpa_instance_internal
loader_gpdpa_instance_internal() unrecognized name %s
loader_gpdpa_instance_terminator
loader_gpdpa_instance_terminator() unrecognized name %s
loader_icd_init_entries
loader_icd_scan
loader_icd_scan: Can not find 'ICD' object in ICD JSON file %s.  Skipping ICD JSON
loader_icd_scan: Failed retrieving ICD JSON %s 'api_version' field.  Skipping ICD JSON.
loader_icd_scan: Failed retrieving ICD JSON %s 'file_format_version' field.  Skipping ICD JSON
loader_icd_scan: Failed retrieving ICD JSON %s 'library_path' field.  Skipping ICD JSON.
loader_icd_scan: Failed to add ICD JSON %s.  Skipping ICD JSON.
loader_icd_scan: Failed to find 'library_path' object in ICD JSON file %s.  Skipping ICD JSON.
loader_icd_scan: ICD JSON %s 'library_path' field is empty.  Skipping ICD JSON.
loader_icd_scan: ICD JSON %s does not have a 'file_format_version' field. Skipping ICD JSON.
loader_icd_scan: ICD JSON %s does not have an 'api_version' field.
loader_icd_scan: Unexpected manifest file version (expected 1.0.0 or 1.0.1), may cause errors
loader_implicit_layer_scan
loader_init_device_dispatch_table
loader_init_device_extension_dispatch_table
loader_init_dispatch_dev_ext
loader_init_generic_list
loader_init_generic_list: Failed to allocate space for generic list
loader_init_instance_core_dispatch_table
loader_init_instance_extension_dispatch_table
loader_init_library
loader_initialize
loader_instance_heap_alloc
loader_instance_heap_free
loader_instance_heap_realloc
loader_instance_tls_heap_alloc
loader_instance_tls_heap_free
loader_is_implicit_layer_enabled
loader_json_lock
loader_layer_scan
loader_lock
loader_log
loader_lookup_device_dispatch_table
loader_lookup_instance_dispatch_table
loader_major_version
loader_make_version
loader_minor_version
loader_phys_dev_ext_gpa
loader_platform_combine_path
loader_read_json_layer
loader_remove_logical_device
loader_scanned_icd_add:  Failed querying 'vkCreateInstance' via dlsym/loadlibrary for ICD %s
loader_scanned_icd_add: Attempt to retrieve either 'vkGetInstanceProcAddr' or 'vk_icdGetInstanceProcAddr' from ICD %s failed.
loader_scanned_icd_add: Could not get 'vkCreateInstance' via 'vk_icdGetInstanceProcAddr' for ICD %s
loader_scanned_icd_add: Could not get 'vkEnumerateInstanceExtensionProperties' via 'vk_icdGetInstanceProcAddr' for ICD %s
loader_scanned_icd_add: Could not get 'vkEnumerateInstanceExtensionProperties' via dlsym/loadlibrary for ICD %s
loader_scanned_icd_add: ICD %s doesn't support interface version compatible with loader, skip this ICD.
loader_scanned_icd_add: Out of memory can't add ICD %s
loader_scanned_icd_add: Realloc failed on icd library list for ICD %s
loader_scanned_icd_add: Using deprecated ICD interface of 'vkGetInstanceProcAddr' instead of 'vk_icdGetInstanceProcAddr' for ICD %s
loader_scanned_icd_clear
loader_scanned_icd_init: Realloc failed for layer list when attempting to add new layer
loader_validate_device_extensions
loader_validate_device_extensions: Device extension %s not supported by selected physical device or enabled layers.
loader_validate_device_extensions: Device ppEnabledExtensionNames contains string that is too long or is badly formed
loader_validate_instance_extensions
loader_validate_instance_extensions: Extension %s not found in list of known instance extensions.
loader_validate_instance_extensions: Instance extension %s not supported by available ICDs or enabled layers.
loader_validate_instance_extensions: Instance ppEnabledExtensionNames contains string that is too long or is badly formed
loader_validate_layers
loader_validate_layers: Device ppEnabledLayerNames contains string that is too long or is badly formed
loader_validate_layers: Layer %d does not exist in the list of available layers
loadimage.cpp
loadimage_etc.cpp
local function declaration
local function prototype declarations are not allowed
local_size
local_size = (
local_size id
local_size ids = (
local_size_
local_size_x
local_size_x_id
local_size_y
local_size_y and local_size_z.
local_size_y_id
local_size_z
local_size_z_id
locale not supported
locale.cpp
location =
location is too large
location must not be set for atomic_uint
location must only be specified for a single input or output variable
location on block member
location qualifier on in/out block
location qualifier on input
location qualifier on output
location qualifier on uniform or buffer
location/component/index
location=
log
log10
log2
logError
logInfo
logWarning
logf
logical-and
logical-or
logical-xor
logical_and_expression
logical_or_expression
logical_xor_expression
long double std::__1::__num_get_float<long double>(char const*, char const*, unsigned int&)
long gl::CastFromGLintStateValue<long, unsigned int>(unsigned int, unsigned int)
long gl::CastFromStateValue<long, long>(unsigned int, long)
long gl::CastFromStateValue<long, unsigned char>(unsigned int, unsigned char)
long gl::CastFromStateValue<long, unsigned int>(unsigned int, unsigned int)
long long std::__1::__num_get_signed_integral<long long>(char const*, char const*, unsigned int&, int)
long std::__1::__num_get_signed_integral<long>(char const*, char const*, unsigned int&, int)
lowp
lowp   int bitCount(  int);lowp ivec2 bitCount(ivec2);lowp ivec3 bitCount(ivec3);lowp ivec4 bitCount(ivec4);lowp   int bitCount( uint);lowp ivec2 bitCount(uvec2);lowp ivec3 bitCount(uvec3);lowp ivec4 bitCount(uvec4);lowp   int findMSB(highp   int);lowp ivec2 findMSB(highp ivec2);lowp ivec3 findMSB(highp ivec3);lowp ivec4 findMSB(highp ivec4);lowp   int findMSB(highp  uint);lowp ivec2 findMSB(highp uvec2);lowp ivec3 findMSB(highp uvec3);lowp ivec4 findMSB(highp uvec4);
lowp   int findLSB(  int);lowp ivec2 findLSB(ivec2);lowp ivec3 findLSB(ivec3);lowp ivec4 findLSB(ivec4);lowp   int findLSB( uint);lowp ivec2 findLSB(uvec2);lowp ivec3 findLSB(uvec3);lowp ivec4 findLSB(uvec4);
lowp precision qualifier
lx2
m
m%>
m) {
m0>
m2=
m7
m7>
m8
mX7
macro expansion
macro invocation chain too deep
macro name is reserved
macro name with a double underscore is reserved - unintented behavior is possible
macro undefined while being invoked
main
main function cannot return a value
malloc
mat2   outerProduct(vec2 c, vec2 r);mat3   outerProduct(vec3 c, vec3 r);mat4   outerProduct(vec4 c, vec4 r);mat2x3 outerProduct(vec3 c, vec2 r);mat3x2 outerProduct(vec2 c, vec3 r);mat2x4 outerProduct(vec4 c, vec2 r);mat4x2 outerProduct(vec2 c, vec4 r);mat3x4 outerProduct(vec4 c, vec3 r);mat4x3 outerProduct(vec3 c, vec4 r);mat2   transpose(mat2   m);mat3   transpose(mat3   m);mat4   transpose(mat4   m);mat2x3 transpose(mat3x2 m);mat3x2 transpose(mat2x3 m);mat2x4 transpose(mat4x2 m);mat4x2 transpose(mat2x4 m);mat3x4 transpose(mat4x3 m);mat4x3 transpose(mat3x4 m);mat2x3 matrixCompMult(mat2x3, mat2x3);mat2x4 matrixCompMult(mat2x4, mat2x4);mat3x2 matrixCompMult(mat3x2, mat3x2);mat3x4 matrixCompMult(mat3x4, mat3x4);mat4x2 matrixCompMult(mat4x2, mat4x2);mat4x3 matrixCompMult(mat4x3, mat4x3);
mat2 matrixCompMult(mat2 x, mat2 y);mat3 matrixCompMult(mat3 x, mat3 y);mat4 matrixCompMult(mat4 x, mat4 y);
material_ambient
material_diffuse
material_emissive
material_specular
material_specular_exponent
mathutil.cpp
matrix constructed from matrix can only have one argument
matrix field selection out of range
matrix index out of range '%d'
matrix mult second child into first child
matrix of
matrix or packing qualifiers can only be used on a uniform or buffer
matrix scale second child into first child
matrix swizzle
matrix-multiply
matrix-scale
matrix-times-vector
matrixCompMult
matrix_utils.cpp
max_vertices
max_vertices =
max_vertices can only be declared in 'out' layout in a geometry shader
max_vertices contradicts to the earlier declaration
maximum nesting depth exceeded
mbrtowc
mbsnrtowcs
mbsrtowcs
mbtowc
mediump
mediump precision qualifier
mediump vec2 unpackHalf2x16(highp uint);
mediump vec4 gl_FragCoord;        bool gl_FrontFacing;mediump vec4 gl_FragColor;mediump vec2 gl_PointCoord;
mediump vec4 unpackSnorm4x8(highp uint);mediump vec4 unpackUnorm4x8(highp uint);
member cannot contradict block
member cannot contradict block (or what block inherited from global)
member of block cannot be or contain a sampler, image, or atomic_uint type
member of block cannot have a packing layout qualifier
member of nameless block was not redeclared
member of uniform or buffer block cannot have an auxiliary or interpolation qualifier
member storage qualifier cannot contradict block storage qualifier
memchr
memcmp
memcpy
memmove
memory exhausted
memory qualifiers cannot be used on this type
memory.cpp
memoryBarrier
memoryBarrierAtomicCounter
memoryBarrierBuffer
memoryBarrierImage
memoryBarrierShared
memset
message controls must be EGL_TRUE or EGL_FALSE.
method does not accept any arguments
method takes no parameters
methods supported in GLSL ES 3.00 and above only
mf>
mh>
min
mismatched statements
mismatching ternary operator operand types '
missing #endif
missing input primitive declaration before calling length on gl_in
missing input primitive declaration before indexing gl_in.
missing parenthesis
missing user function; linker needs to catch that
mix
mod
mod second child into first child
modf
modff
modulo
modulo second child into first child
money_get error
monotonicallyIncreasingTime
move second child to first child
msc is null
mul
multiple prototypes for same function
multiplicative_expression
multiply second child into first child
multiviewBaseViewLayerIndex
murmurhash
murmurhash.c
must be 0, 1, 2, or 3:
must be a compile-time constant:
must be a multiple of size of first component
must be a multiple of the member's alignment
must be followed by a header name
must be followed by macro name
must be followed by version number
must be greater than 0
must be less than or equal to
must be qualified as flat
must by followed by an integral literal
must explicitly specify all locations when using multiple fragment outputs
must occur first in shader
must specify 'location' to use 'component'
must use 'flat' interpolation here
mutex.cpp
n
n must be 1 when GL is bound to the default framebuffer
n'
n.:
n7
n8
nA<
nK7
nQ>
nY<
n_rects cannot be greater than zero when rects is NULL.
n_rects cannot be negative.
name is not a valid buffer.
name is not a valid framebuffer.
name is not a valid program.
name is not a valid query.
name is not a valid renderbuffer.
name is not a valid sampler.
name is not a valid shader.
name is not a valid sync.
name is not a valid texture.
name is not a valid transform feedback.
name is not a valid vertex array.
nameless block contains a member that already has a name at global scope
names beginning with "GL_" can't be (un)defined:
names containing consecutive underscores are reserved, and an error if version <= 300:
names containing consecutive underscores are reserved:
namespace
native_display should be a valid EGL device if platform equals EGL_PLATFORM_DEVICE_EXT
ne>
near
negViewportYScale
negation
new.cpp
newlocale
no binding specified
no declaration found for redeclaration
no longer supported in
no matching overloaded function found
no operation '%s' exists that takes a left-hand operand of type '%s' and a right operand of type '%s' (or there is no acceptable conversion)
no operation '%s' exists that takes an operand of type %s (or there is no acceptable conversion)
no qualifiers allowed for function return
no statement between the last label and the end of the switch statement
no such field in interface block
no such field in structure
noContraction
node is still EOpNull!
noinline
noise
noise1
noise2
noise3
noise4
non-constant global initializer (needs GL_EXT_shader_non_constant_global_initializers)
non-constant initializer
non-constant offset argument
non-literal layout-id value
non-matching or non-convertible constant type for const initializer
non-opaque uniform variables need a layout(location=L)
non-opaque uniforms outside a block
non-uniform struct contains a sampler or image:
non-uniform struct contains an atomic_uint:
non-virtual thunk to egl::Image::getLabel() const
non-virtual thunk to egl::Image::setLabel(void*)
non-virtual thunk to egl::Image::~Image()
non-virtual thunk to egl::PbufferSurface::~PbufferSurface()
non-virtual thunk to egl::Surface::getAttachmentFormat(unsigned int, gl::ImageIndex const&) const
non-virtual thunk to egl::Surface::getAttachmentImpl() const
non-virtual thunk to egl::Surface::getAttachmentSamples(gl::ImageIndex const&) const
non-virtual thunk to egl::Surface::getAttachmentSize(gl::ImageIndex const&) const
non-virtual thunk to egl::Surface::getId() const
non-virtual thunk to egl::Surface::initState(gl::ImageIndex const&) const
non-virtual thunk to egl::Surface::isRenderable(gl::Context const*, unsigned int, gl::ImageIndex const&) const
non-virtual thunk to egl::Surface::onAttach(gl::Context const*)
non-virtual thunk to egl::Surface::onDetach(gl::Context const*)
non-virtual thunk to egl::Surface::setInitState(gl::ImageIndex const&, gl::InitState)
non-virtual thunk to egl::Surface::~Surface()
non-virtual thunk to egl::WindowSurface::~WindowSurface()
non-virtual thunk to gl::Buffer::getLabel() const
non-virtual thunk to gl::Buffer::setLabel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
non-virtual thunk to gl::Buffer::~Buffer()
non-virtual thunk to gl::Context::onSubjectStateChange(gl::Context const*, unsigned long, angle::SubjectMessage)
non-virtual thunk to gl::Context::~Context()
non-virtual thunk to gl::Framebuffer::getLabel() const
non-virtual thunk to gl::Framebuffer::setLabel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
non-virtual thunk to gl::Framebuffer::~Framebuffer()
non-virtual thunk to gl::ProgramPipeline::getLabel() const
non-virtual thunk to gl::ProgramPipeline::setLabel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
non-virtual thunk to gl::ProgramPipeline::~ProgramPipeline()
non-virtual thunk to gl::Query::getLabel() const
non-virtual thunk to gl::Query::setLabel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
non-virtual thunk to gl::Query::~Query()
non-virtual thunk to gl::Renderbuffer::getAttachmentFormat(unsigned int, gl::ImageIndex const&) const
non-virtual thunk to gl::Renderbuffer::getAttachmentImpl() const
non-virtual thunk to gl::Renderbuffer::getAttachmentSamples(gl::ImageIndex const&) const
non-virtual thunk to gl::Renderbuffer::getAttachmentSize(gl::ImageIndex const&) const
non-virtual thunk to gl::Renderbuffer::getId() const
non-virtual thunk to gl::Renderbuffer::getLabel() const
non-virtual thunk to gl::Renderbuffer::initState(gl::ImageIndex const&) const
non-virtual thunk to gl::Renderbuffer::isRenderable(gl::Context const*, unsigned int, gl::ImageIndex const&) const
non-virtual thunk to gl::Renderbuffer::onAttach(gl::Context const*)
non-virtual thunk to gl::Renderbuffer::onDetach(gl::Context const*)
non-virtual thunk to gl::Renderbuffer::setInitState(gl::ImageIndex const&, gl::InitState)
non-virtual thunk to gl::Renderbuffer::setLabel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
non-virtual thunk to gl::Renderbuffer::~Renderbuffer()
non-virtual thunk to gl::Sampler::getLabel() const
non-virtual thunk to gl::Sampler::setLabel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
non-virtual thunk to gl::Sampler::~Sampler()
non-virtual thunk to gl::Sync::getLabel() const
non-virtual thunk to gl::Sync::setLabel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
non-virtual thunk to gl::Sync::~Sync()
non-virtual thunk to gl::Texture::getAttachmentFormat(unsigned int, gl::ImageIndex const&) const
non-virtual thunk to gl::Texture::getAttachmentImpl() const
non-virtual thunk to gl::Texture::getAttachmentSamples(gl::ImageIndex const&) const
non-virtual thunk to gl::Texture::getAttachmentSize(gl::ImageIndex const&) const
non-virtual thunk to gl::Texture::getId() const
non-virtual thunk to gl::Texture::getLabel() const
non-virtual thunk to gl::Texture::initState(gl::ImageIndex const&) const
non-virtual thunk to gl::Texture::isRenderable(gl::Context const*, unsigned int, gl::ImageIndex const&) const
non-virtual thunk to gl::Texture::onAttach(gl::Context const*)
non-virtual thunk to gl::Texture::onDetach(gl::Context const*)
non-virtual thunk to gl::Texture::onSubjectStateChange(gl::Context const*, unsigned long, angle::SubjectMessage)
non-virtual thunk to gl::Texture::setInitState(gl::ImageIndex const&, gl::InitState)
non-virtual thunk to gl::Texture::setLabel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
non-virtual thunk to gl::Texture::~Texture()
non-virtual thunk to gl::TransformFeedback::getLabel() const
non-virtual thunk to gl::TransformFeedback::setLabel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
non-virtual thunk to gl::TransformFeedback::~TransformFeedback()
non-virtual thunk to gl::VertexArray::getLabel() const
non-virtual thunk to gl::VertexArray::setLabel(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
non-virtual thunk to gl::VertexArray::~VertexArray()
non-virtual thunk to rx::ContextVk::handleError(VkResult, char const*, unsigned int)
non-virtual thunk to rx::ContextVk::~ContextVk()
non-virtual thunk to rx::DisplayVk::handleError(VkResult, char const*, unsigned int)
non-virtual thunk to rx::DisplayVk::~DisplayVk()
non-virtual thunk to rx::DisplayVkXcb::~DisplayVkXcb()
non-virtual thunk to sh::TIntermAggregate::getSequence()
non-virtual thunk to sh::TIntermAggregate::getSequence() const
non-virtual thunk to sh::TIntermAggregate::~TIntermAggregate()
non-virtual thunk to sh::TIntermBlock::getSequence()
non-virtual thunk to sh::TIntermBlock::getSequence() const
non-virtual thunk to sh::TIntermBlock::~TIntermBlock()
non-virtual thunk to sh::TIntermDeclaration::getSequence()
non-virtual thunk to sh::TIntermDeclaration::getSequence() const
non-virtual thunk to sh::TIntermDeclaration::~TIntermDeclaration()
non-virtual thunk to std::__1::basic_iostream<char, std::__1::char_traits<char> >::~basic_iostream()
non-virtual thunk to std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringstream()
non-void function must return a value
non_uniform_qualifier
none
nonportable when expanded from macros for preprocessor expression
nonprivate
nonuniform
nonuniformEXT
noperspective
not
not allowed in nested scope
not allowed in this version
not allowed on block or structure members
not allowed to specify yuv qualifier when using depth or multiple color fragment outputs
not allowed when generating SPIR-V
not allowed when using GLSL for Vulkan
not available. Falling back to
not enough data provided for construction
not implemented
not supported for these tokens
not supported for this version or the enabled extensions
not supported in this stage:
not supported with this profile:
notEqual
ns2
nterm
null pointer in arguments.
null_functions.cpp
numViews cannot be greater than GL_MAX_VIEWS_ANGLE.
numViews cannot be less than 1.
num_config cannot be null.
num_groups_x cannot be greater than MAX_COMPUTE_WORK_GROUP_COUNT[0]=
num_groups_y cannot be greater than MAX_COMPUTE_WORK_GROUP_COUNT[1]=
num_groups_z cannot be greater than MAX_COMPUTE_WORK_GROUP_COUNT[2]=
num_views
num_views greater than the value of GL_MAX_VIEWS_OVR
number of invocations must match between compilation units
numeric literal too big
numeric literal too long
n~2
n2
o
o2
o4/
o7
o8
oN7
oQ/
oR4
oV4
octal and hex sequences not supported
octal literal digit too large
octal literal too big
od>
off
offset %d in buffer %d
offset =
offset and size must be multiple of 4.
offset is too large:
offset must be a multiple of 4.
offset must be multiple of value of SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT.
offset must be multiple of value of UNIFORM_BUFFER_OFFSET_ALIGNMENT.
offset on block member
offset/align
offset/align can only be used on a uniform or buffer
offset=
offsets argument
ok>
on
onDestroy
only allowed at global scope
only allowed when generating SPIR-V
only allowed when using GLSL for Vulkan
only applies to block members, not blocks
only apply to images
only one coherent/devicecoherent/queuefamilycoherent/workgroupcoherent/subgroupcoherent qualifier allowed
only one precision qualifier allowed
only outermost dimension of an array of arrays can be a specialization constant
only outermost dimension of an array of arrays can be implicitly sized
only supported on image with format r32f
only supported on image with format r32i or r32ui
only supported on integer images
only uniform, buffer, in, or out blocks are supported
opaque types cannot be output parameters
opendir
operation result is undefined for the values passed in
operator delete(void*)
operator delete(void*, std::align_val_t)
operator delete(void*, std::align_val_t, std::nothrow_t const&)
operator delete(void*, std::nothrow_t const&)
operator delete(void*, unsigned long)
operator delete(void*, unsigned long, std::align_val_t)
operator delete[](void*)
operator delete[](void*, std::align_val_t)
operator delete[](void*, std::align_val_t, std::nothrow_t const&)
operator delete[](void*, std::nothrow_t const&)
operator delete[](void*, unsigned long)
operator delete[](void*, unsigned long, std::align_val_t)
operator new(unsigned long)
operator new(unsigned long, std::align_val_t)
operator new(unsigned long, std::align_val_t, std::nothrow_t const&)
operator new(unsigned long, std::nothrow_t const&)
operator new[](unsigned long)
operator new[](unsigned long, std::align_val_t)
operator new[](unsigned long, std::align_val_t, std::nothrow_t const&)
operator new[](unsigned long, std::nothrow_t const&)
operator<<(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, sh::ImmutableString const&)
optimize
optimize pragma syntax is incorrect
optional.cpp
or7
origin_upper_left
ossource.cpp
ou2
out float gl_ClipDistance[];
out for stage outputs
out gl_PerVertex {highp vec4  gl_Position;highp float gl_PointSize;};
out int gl_FragStencilRefARB;
out int gl_ViewportIndex;
out int gl_ViewportIndex;out int gl_Layer;
out of dynamic memory in yy_create_buffer()
out of dynamic memory in yy_get_next_buffer()
out of dynamic memory in yyensure_buffer_stack()
out of memory
out of range:
out of range: binding must be non-negative
out of range: index layout qualifier can only be 0 or 1
out of range: invocations must be in the range of [1, MAX_GEOMETRY_SHADER_INVOCATIONS_OES]
out of range: location must be non-negative
out of range: max_vertices must be in the range of [0, gl_MaxGeometryOutputVertices]
out of range: num_views must be positive
out of range: offset must be non-negative
out type qualifier supported in GLSL ES 3.10 only
out vec4 angle_SecondaryFragColor;
out vec4 angle_SecondaryFragData[
out vec4 gl_ClipVertex;
outer product
outerProduct
output array locations would exceed MAX_DRAW_BUFFERS
output location must be < MAX_DRAW_BUFFERS
output primitive =
outputUint
overlapping offsets at
overlapping use of location
overloaded functions must have the same parameter precision qualifiers for argument
overloaded functions must have the same parameter storage qualifiers for argument
overloaded functions must have the same return type
overrideWorkaroundsD3D
oz.
p
p5
p6
p7
p8
p[>
pack64
packed
padding
param
parameter:
parameter_declaration
parameter_declarator
parameter_type_specifier
parameters are required but
params.cpp
parseConst.cpp
parse_hex4
parse_string
parse_value
partition
pc>
perf
phys_dev_ext.c
pixel_center_int1
pixel_center_integer
pname requires OpenGL ES 3.0 or GL_EXT_map_buffer_range.
pname requires OpenGL ES 3.0 or GL_OES_mapbuffer.
pname requires OpenGL ES 3.0, GL_OES_mapbuffer or GL_EXT_map_buffer_range.
pname requires OpenGL ES 3.0.
point_distance_attenuation
point_mode
point_rasterization
point_sprite_coord_replace
point_sprite_enabled
pointsize
populate
pos
posix_memalign
post depth coverage
postTranslateCompile
post_coverage_coverage
post_depth_coverage requires early_fragment_tests
postfix_expression
pow
powf
pp_create_buffer(_IO_FILE*, int, void*)
pperror((anonymous namespace)::Context*, char const*)
pplex(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, angle::pp::SourceLocation*, void*)
pplex_destroy(void*)
pppop_buffer_state(void*)
pprestart(_IO_FILE*, void*)
pr>
pragma
pre_instance_functions
precise
precise qualifier must appear first
precise_qualifier
precision highp float;
precision is not supported in fragment shader
precision qualifier must appear as last qualifier
precision statement
precision_qualifier
predefined macro redefined
predefined macro undefined
predefined names can't be (un)defined:
preprocessor directive cannot be preceded by another token
preprocessor evaluation
primary_expression
primitive doesn't match earlier input primitive declaration
primitive doesn't match earlier output primitive declaration
print_array
print_number
print_object
print_string_ptr
print_value
printf
private_typeinfo.cpp
proc_table_autogen.cpp
programInterface must be set to GL_PROGRAM_OUTPUT.
propagateNoContraction.cpp
pthread_cond_broadcast
pthread_cond_wait
pthread_getspecific
pthread_key_create
pthread_key_delete
pthread_mutex_destroy
pthread_mutex_init
pthread_mutex_lock
pthread_mutex_unlock
pthread_mutexattr_init
pthread_mutexattr_settype
pthread_once
pthread_setspecific
public
puts
pw2
q
q7
q8
qM7
qY
q[7
q^?
qb>
qn*
qs7
quads
qualifier has no effect on non-output parameters
qualifier sequence
queryconversions.cpp
queryutils.cpp
queuefamilycoherent
r
r 5
r".
r11f_g11f_b10f
r16
r16_snorm
r16f
r16i
r16ui
r24
r32i
r7
r8
r8_snorm
r8i
r8ui
rP/
rZ5
r^>
r_7
ra>
radians
random.cpp
rb
rcp
readFirstInvocation
readFirstInvocationARB
readInvocation
readInvocationARB
readOffset, writeOffset and size must all be non-negative
readPixels
readPixelsAllAtOnce
readPixelsRowByRow
readdir64
readlink
readonly
realloc
redeclaration of array with a different array dimensions or sizes
redeclaration of array with a different element type
redeclaration of array with size
redeclaration of gl_LastFragData as an array of arrays
redeclaration of gl_LastFragData with size != gl_MaxDrawBuffers
redeclaring non-array as array
redefinition of a function
redefinition of a struct
redefinition of an interface block instance name
redefinition of an interface block member name
redefinition of an interface block name
redefinition of built-in function
reflect
reflection.cpp
refract
refract(3B3B0B
regex.cpp
register_tm_clones
relational_expression
relativeOffset cannot be greater than MAX_VERTEX_ATTRIB_RELATIVE_OFFSET.
renderer_utils.cpp
renderergl_utils.cpp
replicated qualifiers
require
required extension not requested:
requires SPIR-V 1.3
requires an input_attachment_index layout qualifier
requires block, or sampler/image, or atomic-counter type
requires the 'buffer' storage qualifier
requires uniform or buffer storage qualifier
reserve
reserved built-in name
resolveCompile
restrict
return
return rounded;}
rg16
rg16_snorm
rg16f
rg16i
rg16ui
rg32f
rg32i
rg32ui
rg8
rg8_snorm
rg8i
rg8ui
rgb10_a2
rgb_2_yuv
rgba16
rgba16_snorm
rgba16f
rgba16i
rgba16ui
rgba32f
rgba32i
rgba32ui
rgba8_snorm
rgba8i
rgba8ui
right shift second child into first child
right-shift
rn7
roundEven
rounded;
rounded[
roundf
row_major
rr2
runtime-sized array of
rx::(anonymous namespace)::ApplyOffsets(gl::Rectangle const&, std::__1::vector<gl::Offset, std::__1::allocator<gl::Offset> > const&)
rx::(anonymous namespace)::BindFramebufferAttachment(rx::FunctionsGL const*, unsigned int, gl::FramebufferAttachment const*)
rx::(anonymous namespace)::ClipChannelsAlpha(angle::Color<float>*)
rx::(anonymous namespace)::ClipChannelsLuminance(angle::Color<float>*)
rx::(anonymous namespace)::ClipChannelsNoOp(angle::Color<float>*)
rx::(anonymous namespace)::ClipChannelsR(angle::Color<float>*)
rx::(anonymous namespace)::ClipChannelsRG(angle::Color<float>*)
rx::(anonymous namespace)::ClipChannelsRGB(angle::Color<float>*)
rx::(anonymous namespace)::CopyColor(angle::Color<float>*)
rx::(anonymous namespace)::DebugReportCallback(unsigned int, VkDebugReportObjectTypeEXT, unsigned long, unsigned long, int, char const*, char const*, void*)
rx::(anonymous namespace)::EraseLayoutAndQualifierStrings(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
rx::(anonymous namespace)::GetMappedSamplerName(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
rx::(anonymous namespace)::InsertLayoutSpecifierString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
rx::(anonymous namespace)::InsertQualifierSpecifierString(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
rx::(anonymous namespace)::PremultiplyAlpha(angle::Color<float>*)
rx::(anonymous namespace)::RequiresMultiviewClear(gl::FramebufferState const&, bool)
rx::(anonymous namespace)::ScopedGLState::enter(gl::Context const*, gl::Rectangle, int)
rx::(anonymous namespace)::SetClearState(rx::StateManagerGL*, bool, bool, bool, unsigned int*)
rx::(anonymous namespace)::UnmultiplyAlpha(angle::Color<float>*)
rx::(anonymous namespace)::VerifyExtensionsPresent(std::__1::vector<VkExtensionProperties, std::__1::allocator<VkExtensionProperties> > const&, std::__1::vector<char const*, std::__1::allocator<char const*> > const&)
rx::(anonymous namespace)::WriteFloatColor(angle::Color<float> const&, void (*)(unsigned char const*, unsigned char*), unsigned char*)
rx::(anonymous namespace)::WriteUintColor(angle::Color<float> const&, void (*)(unsigned char const*, unsigned char*), unsigned char*)
rx::(anonymous namespace)::kBlackClearColorValue
rx::(anonymous namespace)::kDefaultClearDepthStencilValue
rx::(anonymous namespace)::kLayoutMarkerBegin
rx::(anonymous namespace)::kLineRasterDefine
rx::(anonymous namespace)::kMarkerEnd
rx::(anonymous namespace)::kMaxSizedScissor
rx::(anonymous namespace)::kQualifierMarkerBegin
rx::(anonymous namespace)::kVersionDefine
rx::AllocationTrackerNULL::AllocationTrackerNULL(unsigned long)
rx::AllocationTrackerNULL::updateMemoryAllocation(unsigned long, unsigned long)
rx::AllocationTrackerNULL::~AllocationTrackerNULL()
rx::BlitGL::BlitGL(rx::FunctionsGL const*, rx::WorkaroundsGL const&, rx::StateManagerGL*)
rx::BlitGL::blitColorBufferWithShader(gl::Context const*, gl::Framebuffer const*, gl::Framebuffer const*, gl::Rectangle const&, gl::Rectangle const&, unsigned int)
rx::BlitGL::clearFramebuffer(rx::FramebufferGL*)
rx::BlitGL::clearRenderableTexture(rx::TextureGL*, unsigned int, int, gl::ImageIndex const&, bool*)
rx::BlitGL::clearRenderbuffer(rx::RenderbufferGL*, unsigned int)
rx::BlitGL::copyImageToLUMAWorkaroundTexture(gl::Context const*, unsigned int, gl::TextureType, gl::TextureTarget, unsigned int, unsigned long, gl::Rectangle const&, unsigned int, gl::Framebuffer*)
rx::BlitGL::copySubImageToLUMAWorkaroundTexture(gl::Context const*, unsigned int, gl::TextureType, gl::TextureTarget, unsigned int, unsigned long, gl::Offset const&, gl::Rectangle const&, gl::Framebuffer*)
rx::BlitGL::copySubTexture(gl::Context const*, rx::TextureGL*, unsigned long, unsigned int, rx::TextureGL*, gl::TextureTarget, unsigned long, unsigned int, gl::Extents const&, gl::Rectangle const&, gl::Offset const&, bool, unsigned int, bool, bool, bool, bool*)
rx::BlitGL::copySubTextureCPUReadback(gl::Context const*, rx::TextureGL*, unsigned long, unsigned int, rx::TextureGL*, gl::TextureTarget, unsigned long, unsigned int, unsigned int, gl::Rectangle const&, gl::Offset const&, bool, bool, bool)
rx::BlitGL::copyTexSubImage(rx::TextureGL*, unsigned long, rx::TextureGL*, gl::TextureTarget, unsigned long, gl::Rectangle const&, gl::Offset const&, bool*)
rx::BlitGL::getBlitProgram(gl::Context const*, rx::BlitGL::BlitProgramType, rx::BlitGL::BlitProgram**)
rx::BlitGL::initializeResources()
rx::BlitGL::orphanScratchTextures()
rx::BlitGL::~BlitGL()
rx::BufferGL::BufferGL(gl::BufferState const&, rx::FunctionsGL const*, rx::StateManagerGL*)
rx::BufferGL::copySubData(gl::Context const*, rx::BufferImpl*, long, long, long)
rx::BufferGL::getBufferID() const
rx::BufferGL::getIndexRange(gl::Context const*, unsigned int, unsigned long, unsigned long, bool, gl::IndexRange*)
rx::BufferGL::map(gl::Context const*, unsigned int, void**)
rx::BufferGL::mapRange(gl::Context const*, unsigned long, unsigned long, unsigned int, void**)
rx::BufferGL::setData(gl::Context const*, gl::BufferBinding, void const*, unsigned long, gl::BufferUsage)
rx::BufferGL::setSubData(gl::Context const*, gl::BufferBinding, void const*, unsigned long, unsigned long)
rx::BufferGL::unmap(gl::Context const*, unsigned char*)
rx::BufferGL::~BufferGL()
rx::BufferImpl::destroy(gl::Context const*)
rx::BufferNULL::BufferNULL(gl::BufferState const&, rx::AllocationTrackerNULL*)
rx::BufferNULL::copySubData(gl::Context const*, rx::BufferImpl*, long, long, long)
rx::BufferNULL::getDataPtr()
rx::BufferNULL::getIndexRange(gl::Context const*, unsigned int, unsigned long, unsigned long, bool, gl::IndexRange*)
rx::BufferNULL::map(gl::Context const*, unsigned int, void**)
rx::BufferNULL::mapRange(gl::Context const*, unsigned long, unsigned long, unsigned int, void**)
rx::BufferNULL::setData(gl::Context const*, gl::BufferBinding, void const*, unsigned long, gl::BufferUsage)
rx::BufferNULL::setSubData(gl::Context const*, gl::BufferBinding, void const*, unsigned long, unsigned long)
rx::BufferNULL::unmap(gl::Context const*, unsigned char*)
rx::BufferNULL::~BufferNULL()
rx::BufferVk::BufferVk(gl::BufferState const&)
rx::BufferVk::copySubData(gl::Context const*, rx::BufferImpl*, long, long, long)
rx::BufferVk::copyToBuffer(rx::ContextVk*, VkBuffer_T*, unsigned int, VkBufferCopy const*)
rx::BufferVk::destroy(gl::Context const*)
rx::BufferVk::getIndexRange(gl::Context const*, unsigned int, unsigned long, unsigned long, bool, gl::IndexRange*)
rx::BufferVk::getSize()
rx::BufferVk::map(gl::Context const*, unsigned int, void**)
rx::BufferVk::mapImpl(rx::ContextVk*, void**)
rx::BufferVk::mapRange(gl::Context const*, unsigned long, unsigned long, unsigned int, void**)
rx::BufferVk::setData(gl::Context const*, gl::BufferBinding, void const*, unsigned long, gl::BufferUsage)
rx::BufferVk::setDataImpl(rx::ContextVk*, unsigned char const*, unsigned long, unsigned long)
rx::BufferVk::setSubData(gl::Context const*, gl::BufferBinding, void const*, unsigned long, unsigned long)
rx::BufferVk::unmap(gl::Context const*, unsigned char*)
rx::BufferVk::unmapImpl(rx::ContextVk*)
rx::BufferVk::~BufferVk()
rx::CanMapBufferForRead(rx::FunctionsGL const*)
rx::ClearMultiviewGL::ClearMultiviewGL(rx::FunctionsGL const*, rx::StateManagerGL*)
rx::ClearMultiviewGL::attachTextures(gl::FramebufferState const&, int)
rx::ClearMultiviewGL::clearLayeredFBO(gl::FramebufferState const&, rx::ClearMultiviewGL::ClearCommandType, unsigned int, unsigned int, int, unsigned char const*, float, int)
rx::ClearMultiviewGL::clearMultiviewFBO(gl::FramebufferState const&, gl::Rectangle const&, rx::ClearMultiviewGL::ClearCommandType, unsigned int, unsigned int, int, unsigned char const*, float, int)
rx::ClearMultiviewGL::clearSideBySideFBO(gl::FramebufferState const&, gl::Rectangle const&, rx::ClearMultiviewGL::ClearCommandType, unsigned int, unsigned int, int, unsigned char const*, float, int)
rx::ClearMultiviewGL::detachTextures(gl::FramebufferState const&)
rx::ClearMultiviewGL::~ClearMultiviewGL()
rx::CompilerGL::CompilerGL(rx::FunctionsGL const*)
rx::CompilerGL::getTranslatorOutputType() const
rx::CompilerGL::release()
rx::CompilerGL::~CompilerGL()
rx::CompilerImpl::~CompilerImpl()
rx::CompilerNULL::CompilerNULL()
rx::CompilerNULL::getTranslatorOutputType() const
rx::CompilerNULL::release()
rx::CompilerNULL::~CompilerNULL()
rx::CompilerVk::CompilerVk()
rx::CompilerVk::getTranslatorOutputType() const
rx::CompilerVk::release()
rx::CompilerVk::~CompilerVk()
rx::ContextGL::ContextGL(gl::ContextState const&, std::__1::shared_ptr<rx::RendererGL> const&)
rx::ContextGL::applyNativeWorkarounds(gl::Workarounds*) const
rx::ContextGL::coverFillPath(gl::Path const*, unsigned int)
rx::ContextGL::coverFillPathInstanced(std::__1::vector<gl::Path*, std::__1::allocator<gl::Path*> > const&, unsigned int, unsigned int, float const*)
rx::ContextGL::coverStrokePath(gl::Path const*, unsigned int)
rx::ContextGL::coverStrokePathInstanced(std::__1::vector<gl::Path*, std::__1::allocator<gl::Path*> > const&, unsigned int, unsigned int, float const*)
rx::ContextGL::createBuffer(gl::BufferState const&)
rx::ContextGL::createCompiler()
rx::ContextGL::createFenceNV()
rx::ContextGL::createFramebuffer(gl::FramebufferState const&)
rx::ContextGL::createPaths(int)
rx::ContextGL::createProgram(gl::ProgramState const&)
rx::ContextGL::createProgramPipeline(gl::ProgramPipelineState const&)
rx::ContextGL::createQuery(gl::QueryType)
rx::ContextGL::createRenderbuffer(gl::RenderbufferState const&)
rx::ContextGL::createSampler(gl::SamplerState const&)
rx::ContextGL::createShader(gl::ShaderState const&)
rx::ContextGL::createSync()
rx::ContextGL::createTexture(gl::TextureState const&)
rx::ContextGL::createTransformFeedback(gl::TransformFeedbackState const&)
rx::ContextGL::createVertexArray(gl::VertexArrayState const&)
rx::ContextGL::dispatchCompute(gl::Context const*, unsigned int, unsigned int, unsigned int)
rx::ContextGL::dispatchComputeIndirect(gl::Context const*, long)
rx::ContextGL::drawArrays(gl::Context const*, gl::PrimitiveMode, int, int)
rx::ContextGL::drawArraysIndirect(gl::Context const*, gl::PrimitiveMode, void const*)
rx::ContextGL::drawArraysInstanced(gl::Context const*, gl::PrimitiveMode, int, int, int)
rx::ContextGL::drawElements(gl::Context const*, gl::PrimitiveMode, int, unsigned int, void const*)
rx::ContextGL::drawElementsIndirect(gl::Context const*, gl::PrimitiveMode, unsigned int, void const*)
rx::ContextGL::drawElementsInstanced(gl::Context const*, gl::PrimitiveMode, int, unsigned int, void const*, int)
rx::ContextGL::drawRangeElements(gl::Context const*, gl::PrimitiveMode, unsigned int, unsigned int, int, unsigned int, void const*)
rx::ContextGL::finish(gl::Context const*)
rx::ContextGL::flush(gl::Context const*)
rx::ContextGL::getBlitter() const
rx::ContextGL::getFunctions() const
rx::ContextGL::getGPUDisjoint()
rx::ContextGL::getMultiviewClearer() const
rx::ContextGL::getNativeCaps() const
rx::ContextGL::getNativeExtensions() const
rx::ContextGL::getNativeLimitations() const
rx::ContextGL::getNativeTextureCaps() const
rx::ContextGL::getRendererDescription() const
rx::ContextGL::getResetStatus()
rx::ContextGL::getStateManager()
rx::ContextGL::getTimestamp()
rx::ContextGL::getVendorString() const
rx::ContextGL::getWorkaroundsGL() const
rx::ContextGL::handleError(unsigned int, char const*, char const*, char const*, unsigned int)
rx::ContextGL::initialize()
rx::ContextGL::insertEventMarker(int, char const*)
rx::ContextGL::memoryBarrier(gl::Context const*, unsigned int)
rx::ContextGL::memoryBarrierByRegion(gl::Context const*, unsigned int)
rx::ContextGL::onMakeCurrent(gl::Context const*)
rx::ContextGL::popDebugGroup()
rx::ContextGL::popGroupMarker()
rx::ContextGL::pushDebugGroup(unsigned int, unsigned int, int, char const*)
rx::ContextGL::pushGroupMarker(int, char const*)
rx::ContextGL::stencilFillPath(gl::Path const*, unsigned int, unsigned int)
rx::ContextGL::stencilFillPathInstanced(std::__1::vector<gl::Path*, std::__1::allocator<gl::Path*> > const&, unsigned int, unsigned int, unsigned int, float const*)
rx::ContextGL::stencilStrokePath(gl::Path const*, int, unsigned int)
rx::ContextGL::stencilStrokePathInstanced(std::__1::vector<gl::Path*, std::__1::allocator<gl::Path*> > const&, int, unsigned int, unsigned int, float const*)
rx::ContextGL::stencilThenCoverFillPath(gl::Path const*, unsigned int, unsigned int, unsigned int)
rx::ContextGL::stencilThenCoverFillPathInstanced(std::__1::vector<gl::Path*, std::__1::allocator<gl::Path*> > const&, unsigned int, unsigned int, unsigned int, unsigned int, float const*)
rx::ContextGL::stencilThenCoverStrokePath(gl::Path const*, int, unsigned int, unsigned int)
rx::ContextGL::stencilThenCoverStrokePathInstanced(std::__1::vector<gl::Path*, std::__1::allocator<gl::Path*> > const&, unsigned int, int, unsigned int, unsigned int, float const*)
rx::ContextGL::syncState(gl::Context const*, angle::BitSetT<63ul, unsigned long, unsigned long> const&, angle::BitSetT<63ul, unsigned long, unsigned long> const&)
rx::ContextGL::~ContextGL()
rx::ContextImpl::ContextImpl(gl::ContextState const&)
rx::ContextImpl::applyNativeWorkarounds(gl::Workarounds*) const
rx::ContextImpl::coverFillPath(gl::Path const*, unsigned int)
rx::ContextImpl::coverFillPathInstanced(std::__1::vector<gl::Path*, std::__1::allocator<gl::Path*> > const&, unsigned int, unsigned int, float const*)
rx::ContextImpl::coverStrokePath(gl::Path const*, unsigned int)
rx::ContextImpl::coverStrokePathInstanced(std::__1::vector<gl::Path*, std::__1::allocator<gl::Path*> > const&, unsigned int, unsigned int, float const*)
rx::ContextImpl::onDestroy(gl::Context const*)
rx::ContextImpl::setErrorSet(gl::ErrorSet*)
rx::ContextImpl::setMemoryProgramCache(gl::MemoryProgramCache*)
rx::ContextImpl::stencilFillPath(gl::Path const*, unsigned int, unsigned int)
rx::ContextImpl::stencilFillPathInstanced(std::__1::vector<gl::Path*, std::__1::allocator<gl::Path*> > const&, unsigned int, unsigned int, unsigned int, float const*)
rx::ContextImpl::stencilStrokePath(gl::Path const*, int, unsigned int)
rx::ContextImpl::stencilStrokePathInstanced(std::__1::vector<gl::Path*, std::__1::allocator<gl::Path*> > const&, int, unsigned int, unsigned int, float const*)
rx::ContextImpl::stencilThenCoverFillPath(gl::Path const*, unsigned int, unsigned int, unsigned int)
rx::ContextImpl::stencilThenCoverFillPathInstanced(std::__1::vector<gl::Path*, std::__1::allocator<gl::Path*> > const&, unsigned int, unsigned int, unsigned int, unsigned int, float const*)
rx::ContextImpl::stencilThenCoverStrokePath(gl::Path const*, int, unsigned int, unsigned int)
rx::ContextImpl::stencilThenCoverStrokePathInstanced(std::__1::vector<gl::Path*, std::__1::allocator<gl::Path*> > const&, unsigned int, int, unsigned int, unsigned int, float const*)
rx::ContextImpl::~ContextImpl()
rx::ContextNULL::ContextNULL(gl::ContextState const&, rx::AllocationTrackerNULL*)
rx::ContextNULL::coverFillPath(gl::Path const*, unsigned int)
rx::ContextNULL::coverFillPathInstanced(std::__1::vector<gl::Path*, std::__1::allocator<gl::Path*> > const&, unsigned int, unsigned int, float const*)
rx::ContextNULL::coverStrokePath(gl::Path const*, unsigned int)
rx::ContextNULL::coverStrokePathInstanced(std::__1::vector<gl::Path*, std::__1::allocator<gl::Path*> > const&, unsigned int, unsigned int, float const*)
rx::ContextNULL::createBuffer(gl::BufferState const&)
rx::ContextNULL::createCompiler()
rx::ContextNULL::createFenceNV()
rx::ContextNULL::createFramebuffer(gl::FramebufferState const&)
rx::ContextNULL::createPaths(int)
rx::ContextNULL::createProgram(gl::ProgramState const&)
rx::ContextNULL::createProgramPipeline(gl::ProgramPipelineState const&)
rx::ContextNULL::createQuery(gl::QueryType)
rx::ContextNULL::createRenderbuffer(gl::RenderbufferState const&)
rx::ContextNULL::createSampler(gl::SamplerState const&)
rx::ContextNULL::createShader(gl::ShaderState const&)
rx::ContextNULL::createSync()
rx::ContextNULL::createTexture(gl::TextureState const&)
rx::ContextNULL::createTransformFeedback(gl::TransformFeedbackState const&)
rx::ContextNULL::createVertexArray(gl::VertexArrayState const&)
rx::ContextNULL::dispatchCompute(gl::Context const*, unsigned int, unsigned int, unsigned int)
rx::ContextNULL::dispatchComputeIndirect(gl::Context const*, long)
rx::ContextNULL::drawArrays(gl::Context const*, gl::PrimitiveMode, int, int)
rx::ContextNULL::drawArraysIndirect(gl::Context const*, gl::PrimitiveMode, void const*)
rx::ContextNULL::drawArraysInstanced(gl::Context const*, gl::PrimitiveMode, int, int, int)
rx::ContextNULL::drawElements(gl::Context const*, gl::PrimitiveMode, int, unsigned int, void const*)
rx::ContextNULL::drawElementsIndirect(gl::Context const*, gl::PrimitiveMode, unsigned int, void const*)
rx::ContextNULL::drawElementsInstanced(gl::Context const*, gl::PrimitiveMode, int, unsigned int, void const*, int)
rx::ContextNULL::drawRangeElements(gl::Context const*, gl::PrimitiveMode, unsigned int, unsigned int, int, unsigned int, void const*)
rx::ContextNULL::finish(gl::Context const*)
rx::ContextNULL::flush(gl::Context const*)
rx::ContextNULL::getGPUDisjoint()
rx::ContextNULL::getNativeCaps() const
rx::ContextNULL::getNativeExtensions() const
rx::ContextNULL::getNativeLimitations() const
rx::ContextNULL::getNativeTextureCaps() const
rx::ContextNULL::getRendererDescription() const
rx::ContextNULL::getResetStatus()
rx::ContextNULL::getTimestamp()
rx::ContextNULL::getVendorString() const
rx::ContextNULL::handleError(unsigned int, char const*, char const*, char const*, unsigned int)
rx::ContextNULL::initialize()
rx::ContextNULL::insertEventMarker(int, char const*)
rx::ContextNULL::memoryBarrier(gl::Context const*, unsigned int)
rx::ContextNULL::memoryBarrierByRegion(gl::Context const*, unsigned int)
rx::ContextNULL::onMakeCurrent(gl::Context const*)
rx::ContextNULL::popDebugGroup()
rx::ContextNULL::popGroupMarker()
rx::ContextNULL::pushDebugGroup(unsigned int, unsigned int, int, char const*)
rx::ContextNULL::pushGroupMarker(int, char const*)
rx::ContextNULL::stencilFillPath(gl::Path const*, unsigned int, unsigned int)
rx::ContextNULL::stencilFillPathInstanced(std::__1::vector<gl::Path*, std::__1::allocator<gl::Path*> > const&, unsigned int, unsigned int, unsigned int, float const*)
rx::ContextNULL::stencilStrokePath(gl::Path const*, int, unsigned int)
rx::ContextNULL::stencilStrokePathInstanced(std::__1::vector<gl::Path*, std::__1::allocator<gl::Path*> > const&, int, unsigned int, unsigned int, float const*)
rx::ContextNULL::stencilThenCoverFillPath(gl::Path const*, unsigned int, unsigned int, unsigned int)
rx::ContextNULL::stencilThenCoverFillPathInstanced(std::__1::vector<gl::Path*, std::__1::allocator<gl::Path*> > const&, unsigned int, unsigned int, unsigned int, unsigned int, float const*)
rx::ContextNULL::stencilThenCoverStrokePath(gl::Path const*, int, unsigned int, unsigned int)
rx::ContextNULL::stencilThenCoverStrokePathInstanced(std::__1::vector<gl::Path*, std::__1::allocator<gl::Path*> > const&, unsigned int, int, unsigned int, unsigned int, float const*)
rx::ContextNULL::syncState(gl::Context const*, angle::BitSetT<63ul, unsigned long, unsigned long> const&, angle::BitSetT<63ul, unsigned long, unsigned long> const&)
rx::ContextNULL::~ContextNULL()
rx::ContextVk::ContextVk(gl::ContextState const&, rx::RendererVk*)
rx::ContextVk::createBuffer(gl::BufferState const&)
rx::ContextVk::createCompiler()
rx::ContextVk::createFenceNV()
rx::ContextVk::createFramebuffer(gl::FramebufferState const&)
rx::ContextVk::createPaths(int)
rx::ContextVk::createProgram(gl::ProgramState const&)
rx::ContextVk::createProgramPipeline(gl::ProgramPipelineState const&)
rx::ContextVk::createQuery(gl::QueryType)
rx::ContextVk::createRenderbuffer(gl::RenderbufferState const&)
rx::ContextVk::createSampler(gl::SamplerState const&)
rx::ContextVk::createShader(gl::ShaderState const&)
rx::ContextVk::createSync()
rx::ContextVk::createTexture(gl::TextureState const&)
rx::ContextVk::createTransformFeedback(gl::TransformFeedbackState const&)
rx::ContextVk::createVertexArray(gl::VertexArrayState const&)
rx::ContextVk::dispatchCompute(gl::Context const*, unsigned int, unsigned int, unsigned int)
rx::ContextVk::dispatchComputeIndirect(gl::Context const*, long)
rx::ContextVk::drawArrays(gl::Context const*, gl::PrimitiveMode, int, int)
rx::ContextVk::drawArraysIndirect(gl::Context const*, gl::PrimitiveMode, void const*)
rx::ContextVk::drawArraysInstanced(gl::Context const*, gl::PrimitiveMode, int, int, int)
rx::ContextVk::drawElements(gl::Context const*, gl::PrimitiveMode, int, unsigned int, void const*)
rx::ContextVk::drawElementsIndirect(gl::Context const*, gl::PrimitiveMode, unsigned int, void const*)
rx::ContextVk::drawElementsInstanced(gl::Context const*, gl::PrimitiveMode, int, unsigned int, void const*, int)
rx::ContextVk::drawRangeElements(gl::Context const*, gl::PrimitiveMode, unsigned int, unsigned int, int, unsigned int, void const*)
rx::ContextVk::finish(gl::Context const*)
rx::ContextVk::flush(gl::Context const*)
rx::ContextVk::getActiveTextures() const
rx::ContextVk::getClearColorMask() const
rx::ContextVk::getClearColorValue() const
rx::ContextVk::getClearDepthStencilValue() const
rx::ContextVk::getDevice() const
rx::ContextVk::getDynamicDescriptorPool(unsigned int)
rx::ContextVk::getFeatures() const
rx::ContextVk::getGPUDisjoint()
rx::ContextVk::getNativeCaps() const
rx::ContextVk::getNativeExtensions() const
rx::ContextVk::getNativeLimitations() const
rx::ContextVk::getNativeTextureCaps() const
rx::ContextVk::getQueryPool(gl::QueryType)
rx::ContextVk::getRendererDescription() const
rx::ContextVk::getResetStatus()
rx::ContextVk::getTimestamp()
rx::ContextVk::getVendorString() const
rx::ContextVk::handleDirtyDefaultAttribs(gl::Context const*, gl::DrawCallParams const&, rx::vk::CommandBuffer*)
rx::ContextVk::handleDirtyDescriptorSets(gl::Context const*, gl::DrawCallParams const&, rx::vk::CommandBuffer*)
rx::ContextVk::handleDirtyDriverUniforms(gl::Context const*, gl::DrawCallParams const&, rx::vk::CommandBuffer*)
rx::ContextVk::handleDirtyIndexBuffer(gl::Context const*, gl::DrawCallParams const&, rx::vk::CommandBuffer*)
rx::ContextVk::handleDirtyPipeline(gl::Context const*, gl::DrawCallParams const&, rx::vk::CommandBuffer*)
rx::ContextVk::handleDirtyTextures(gl::Context const*, gl::DrawCallParams const&, rx::vk::CommandBuffer*)
rx::ContextVk::handleDirtyVertexBuffers(gl::Context const*, gl::DrawCallParams const&, rx::vk::CommandBuffer*)
rx::ContextVk::handleError(VkResult, char const*, unsigned int)
rx::ContextVk::initPipeline(gl::DrawCallParams const&)
rx::ContextVk::initialize()
rx::ContextVk::insertEventMarker(int, char const*)
rx::ContextVk::invalidateCurrentPipeline()
rx::ContextVk::invalidateDefaultAttribute(unsigned long)
rx::ContextVk::isViewportFlipEnabledForDrawFBO() const
rx::ContextVk::isViewportFlipEnabledForReadFBO() const
rx::ContextVk::memoryBarrier(gl::Context const*, unsigned int)
rx::ContextVk::memoryBarrierByRegion(gl::Context const*, unsigned int)
rx::ContextVk::onDestroy(gl::Context const*)
rx::ContextVk::onMakeCurrent(gl::Context const*)
rx::ContextVk::popDebugGroup()
rx::ContextVk::popGroupMarker()
rx::ContextVk::pushDebugGroup(unsigned int, unsigned int, int, char const*)
rx::ContextVk::pushGroupMarker(int, char const*)
rx::ContextVk::setupDraw(gl::Context const*, gl::DrawCallParams const&, angle::BitSetT<7ul, unsigned long, unsigned long>, rx::vk::CommandBuffer**)
rx::ContextVk::setupIndexedDraw(gl::Context const*, gl::DrawCallParams const&, rx::vk::CommandBuffer**)
rx::ContextVk::syncState(gl::Context const*, angle::BitSetT<63ul, unsigned long, unsigned long> const&, angle::BitSetT<63ul, unsigned long, unsigned long> const&)
rx::ContextVk::updateActiveTextures(gl::Context const*)
rx::ContextVk::updateColorMask(gl::BlendState const&)
rx::ContextVk::updateDefaultAttribute(unsigned long)
rx::ContextVk::updateScissor(gl::State const&) const
rx::ContextVk::~ContextVk()
rx::CopyImageCHROMIUM(unsigned char const*, unsigned long, unsigned long, unsigned long, void (*)(unsigned char const*, unsigned char*), unsigned char*, unsigned long, unsigned long, unsigned long, void (*)(unsigned char const*, unsigned char*), unsigned int, unsigned int, unsigned long, unsigned long, unsigned long, bool, bool, bool)
rx::DescriptorSetLayoutCache::DescriptorSetLayoutCache()
rx::DescriptorSetLayoutCache::destroy(VkDevice_T*)
rx::DescriptorSetLayoutCache::getDescriptorSetLayout(rx::vk::Context*, rx::vk::DescriptorSetLayoutDesc const&, rx::vk::BindingPointer<rx::vk::DescriptorSetLayout>*)
rx::DescriptorSetLayoutCache::~DescriptorSetLayoutCache()
rx::DeviceImpl::DeviceImpl()
rx::DeviceImpl::~DeviceImpl()
rx::DeviceNULL::DeviceNULL()
rx::DeviceNULL::generateExtensions(egl::DeviceExtensions*) const
rx::DeviceNULL::getDevice(void**)
rx::DeviceNULL::getType()
rx::DeviceNULL::initialize()
rx::DeviceNULL::~DeviceNULL()
rx::DispatchTableGL::initProcsDesktopGL(gl::Version const&, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)
rx::DispatchTableGL::initProcsDesktopGLNULL(gl::Version const&, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)
rx::DispatchTableGL::initProcsGLES(gl::Version const&, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)
rx::DispatchTableGL::initProcsGLESNULL(gl::Version const&, std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)
rx::DispatchTableGL::initProcsSharedExtensions(std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)
rx::DispatchTableGL::initProcsSharedExtensionsNULL(std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)
rx::DisplayGL::DisplayGL(egl::DisplayState const&)
rx::DisplayGL::createImage(egl::ImageState const&, gl::Context const*, unsigned int, egl::AttributeMap const&)
rx::DisplayGL::createStreamProducerD3DTexture(egl::Stream::ConsumerType, egl::AttributeMap const&)
rx::DisplayGL::generateExtensions(egl::DisplayExtensions*) const
rx::DisplayGL::initialize(egl::Display*)
rx::DisplayGL::makeCurrent(egl::Surface*, egl::Surface*, gl::Context*)
rx::DisplayGL::makeCurrentSurfaceless(gl::Context*)
rx::DisplayGL::terminate()
rx::DisplayGL::~DisplayGL()
rx::DisplayGLX::DisplayGLX(egl::DisplayState const&)
rx::DisplayGLX::createContext(gl::ContextState const&, egl::Config const*, gl::Context const*, egl::AttributeMap const&)
rx::DisplayGLX::createContextAttribs(void*, Optional<gl::Version> const&, int, void**) const
rx::DisplayGLX::createDevice()
rx::DisplayGLX::createPbufferFromClientBuffer(egl::SurfaceState const&, unsigned int, void*, egl::AttributeMap const&)
rx::DisplayGLX::createPbufferSurface(egl::SurfaceState const&, egl::AttributeMap const&)
rx::DisplayGLX::createPixmapSurface(egl::SurfaceState const&, unsigned long, egl::AttributeMap const&)
rx::DisplayGLX::createWindowSurface(egl::SurfaceState const&, unsigned long, egl::AttributeMap const&)
rx::DisplayGLX::generateCaps(egl::Caps*) const
rx::DisplayGLX::generateConfigs()
rx::DisplayGLX::generateExtensions(egl::DisplayExtensions*) const
rx::DisplayGLX::getMaxSupportedESVersion() const
rx::DisplayGLX::getVendorString() const
rx::DisplayGLX::initialize(egl::Display*)
rx::DisplayGLX::initializeContext(void*, egl::AttributeMap const&, void**)
rx::DisplayGLX::isValidNativeWindow(unsigned long) const
rx::DisplayGLX::isValidWindowVisualId(unsigned long) const
rx::DisplayGLX::makeCurrent(egl::Surface*, egl::Surface*, gl::Context*)
rx::DisplayGLX::makeCurrentSurfaceless(gl::Context*)
rx::DisplayGLX::restoreLostDevice(egl::Display const*)
rx::DisplayGLX::setSwapInterval(unsigned long, rx::SwapControlData*)
rx::DisplayGLX::syncXCommands() const
rx::DisplayGLX::terminate()
rx::DisplayGLX::testDeviceLost()
rx::DisplayGLX::waitClient(gl::Context const*)
rx::DisplayGLX::waitNative(gl::Context const*, int)
rx::DisplayGLX::~DisplayGLX()
rx::DisplayImpl::DisplayImpl(egl::DisplayState const&)
rx::DisplayImpl::getCaps() const
rx::DisplayImpl::getExtensions() const
rx::DisplayImpl::setBlobCacheFuncs(void (*)(void const*, long, void const*, long), long (*)(void const*, long, void*, long))
rx::DisplayImpl::validateClientBuffer(egl::Config const*, unsigned int, void*, egl::AttributeMap const&) const
rx::DisplayImpl::~DisplayImpl()
rx::DisplayNULL::DisplayNULL(egl::DisplayState const&)
rx::DisplayNULL::createContext(gl::ContextState const&, egl::Config const*, gl::Context const*, egl::AttributeMap const&)
rx::DisplayNULL::createDevice()
rx::DisplayNULL::createImage(egl::ImageState const&, gl::Context const*, unsigned int, egl::AttributeMap const&)
rx::DisplayNULL::createPbufferFromClientBuffer(egl::SurfaceState const&, unsigned int, void*, egl::AttributeMap const&)
rx::DisplayNULL::createPbufferSurface(egl::SurfaceState const&, egl::AttributeMap const&)
rx::DisplayNULL::createPixmapSurface(egl::SurfaceState const&, unsigned long, egl::AttributeMap const&)
rx::DisplayNULL::createStreamProducerD3DTexture(egl::Stream::ConsumerType, egl::AttributeMap const&)
rx::DisplayNULL::createWindowSurface(egl::SurfaceState const&, unsigned long, egl::AttributeMap const&)
rx::DisplayNULL::generateCaps(egl::Caps*) const
rx::DisplayNULL::generateConfigs()
rx::DisplayNULL::generateExtensions(egl::DisplayExtensions*) const
rx::DisplayNULL::getMaxSupportedESVersion() const
rx::DisplayNULL::getVendorString() const
rx::DisplayNULL::initialize(egl::Display*)
rx::DisplayNULL::isValidNativeWindow(unsigned long) const
rx::DisplayNULL::makeCurrent(egl::Surface*, egl::Surface*, gl::Context*)
rx::DisplayNULL::restoreLostDevice(egl::Display const*)
rx::DisplayNULL::terminate()
rx::DisplayNULL::testDeviceLost()
rx::DisplayNULL::waitClient(gl::Context const*)
rx::DisplayNULL::waitNative(gl::Context const*, int)
rx::DisplayNULL::~DisplayNULL()
rx::DisplayVk::DisplayVk(egl::DisplayState const&)
rx::DisplayVk::createContext(gl::ContextState const&, egl::Config const*, gl::Context const*, egl::AttributeMap const&)
rx::DisplayVk::createDevice()
rx::DisplayVk::createImage(egl::ImageState const&, gl::Context const*, unsigned int, egl::AttributeMap const&)
rx::DisplayVk::createPbufferFromClientBuffer(egl::SurfaceState const&, unsigned int, void*, egl::AttributeMap const&)
rx::DisplayVk::createPbufferSurface(egl::SurfaceState const&, egl::AttributeMap const&)
rx::DisplayVk::createPixmapSurface(egl::SurfaceState const&, unsigned long, egl::AttributeMap const&)
rx::DisplayVk::createStreamProducerD3DTexture(egl::Stream::ConsumerType, egl::AttributeMap const&)
rx::DisplayVk::createWindowSurface(egl::SurfaceState const&, unsigned long, egl::AttributeMap const&)
rx::DisplayVk::generateCaps(egl::Caps*) const
rx::DisplayVk::generateExtensions(egl::DisplayExtensions*) const
rx::DisplayVk::getEGLError(int)
rx::DisplayVk::getMaxSupportedESVersion() const
rx::DisplayVk::getScratchBuffer(unsigned long, angle::MemoryBuffer**) const
rx::DisplayVk::getVendorString() const
rx::DisplayVk::handleError(VkResult, char const*, unsigned int)
rx::DisplayVk::initialize(egl::Display*)
rx::DisplayVk::makeCurrent(egl::Surface*, egl::Surface*, gl::Context*)
rx::DisplayVk::restoreLostDevice(egl::Display const*)
rx::DisplayVk::terminate()
rx::DisplayVk::testDeviceLost()
rx::DisplayVk::waitClient(gl::Context const*)
rx::DisplayVk::waitNative(gl::Context const*, int)
rx::DisplayVk::~DisplayVk()
rx::DisplayVkXcb::DisplayVkXcb(egl::DisplayState const&)
rx::DisplayVkXcb::checkConfigSupport(egl::Config*)
rx::DisplayVkXcb::createWindowSurfaceVk(egl::SurfaceState const&, unsigned long, int, int)
rx::DisplayVkXcb::generateConfigs()
rx::DisplayVkXcb::generateConfigs()::kColorFormats
rx::DisplayVkXcb::generateConfigs()::kSampleCounts
rx::DisplayVkXcb::getWSIName() const
rx::DisplayVkXcb::initialize(egl::Display*)
rx::DisplayVkXcb::isValidNativeWindow(unsigned long) const
rx::DisplayVkXcb::terminate()
rx::DisplayVkXcb::~DisplayVkXcb()
rx::DummyCheckFramebufferStatus(unsigned int)
rx::DummyGetProgramiv(unsigned int, unsigned int, int*)
rx::DummyGetShaderiv(unsigned int, unsigned int, int*)
rx::FenceNVGL::FenceNVGL(rx::FunctionsGL const*)
rx::FenceNVGL::finish(gl::Context const*)
rx::FenceNVGL::set(gl::Context const*, unsigned int)
rx::FenceNVGL::test(gl::Context const*, unsigned char*)
rx::FenceNVGL::~FenceNVGL()
rx::FenceNVNULL::FenceNVNULL()
rx::FenceNVNULL::finish(gl::Context const*)
rx::FenceNVNULL::set(gl::Context const*, unsigned int)
rx::FenceNVNULL::test(gl::Context const*, unsigned char*)
rx::FenceNVNULL::~FenceNVNULL()
rx::FenceNVVk::FenceNVVk()
rx::FenceNVVk::finish(gl::Context const*)
rx::FenceNVVk::set(gl::Context const*, unsigned int)
rx::FenceNVVk::test(gl::Context const*, unsigned char*)
rx::FenceNVVk::~FenceNVVk()
rx::FramebufferAttachmentObjectImpl::getAttachmentRenderTarget(gl::Context const*, unsigned int, gl::ImageIndex const&, rx::FramebufferAttachmentRenderTarget**)
rx::FramebufferAttachmentObjectImpl::initializeContents(gl::Context const*, gl::ImageIndex const&)
rx::FramebufferGL::FramebufferGL(gl::FramebufferState const&, unsigned int, bool)
rx::FramebufferGL::blit(gl::Context const*, gl::Rectangle const&, gl::Rectangle const&, unsigned int, unsigned int)
rx::FramebufferGL::checkStatus(gl::Context const*) const
rx::FramebufferGL::clear(gl::Context const*, unsigned int)
rx::FramebufferGL::clearBufferfi(gl::Context const*, unsigned int, int, float, int)
rx::FramebufferGL::clearBufferfv(gl::Context const*, unsigned int, int, float const*)
rx::FramebufferGL::clearBufferiv(gl::Context const*, unsigned int, int, int const*)
rx::FramebufferGL::clearBufferuiv(gl::Context const*, unsigned int, int, unsigned int const*)
rx::FramebufferGL::destroy(gl::Context const*)
rx::FramebufferGL::discard(gl::Context const*, unsigned long, unsigned int const*)
rx::FramebufferGL::getFramebufferID() const
rx::FramebufferGL::getImplementationColorReadFormat(gl::Context const*) const
rx::FramebufferGL::getImplementationColorReadType(gl::Context const*) const
rx::FramebufferGL::getSamplePosition(gl::Context const*, unsigned long, float*) const
rx::FramebufferGL::invalidate(gl::Context const*, unsigned long, unsigned int const*)
rx::FramebufferGL::invalidateSub(gl::Context const*, unsigned long, unsigned int const*, gl::Rectangle const&)
rx::FramebufferGL::isDefault() const
rx::FramebufferGL::maskOutInactiveOutputDrawBuffers(gl::Context const*, unsigned int, angle::BitSetT<8ul, unsigned long, unsigned long>)
rx::FramebufferGL::readPixels(gl::Context const*, gl::Rectangle const&, unsigned int, unsigned int, void*)
rx::FramebufferGL::readPixelsAllAtOnce(gl::Context const*, gl::Rectangle const&, unsigned int, unsigned int, gl::PixelPackState const&, unsigned char*, bool) const
rx::FramebufferGL::readPixelsRowByRow(gl::Context const*, gl::Rectangle const&, unsigned int, unsigned int, gl::PixelPackState const&, unsigned char*) const
rx::FramebufferGL::syncClearBufferState(gl::Context const*, unsigned int, int)
rx::FramebufferGL::syncClearState(gl::Context const*, unsigned int)
rx::FramebufferGL::syncState(gl::Context const*, angle::BitSetT<19ul, unsigned long, unsigned long> const&)
rx::FramebufferGL::~FramebufferGL()
rx::FramebufferImpl::destroy(gl::Context const*)
rx::FramebufferNULL::FramebufferNULL(gl::FramebufferState const&)
rx::FramebufferNULL::blit(gl::Context const*, gl::Rectangle const&, gl::Rectangle const&, unsigned int, unsigned int)
rx::FramebufferNULL::checkStatus(gl::Context const*) const
rx::FramebufferNULL::clear(gl::Context const*, unsigned int)
rx::FramebufferNULL::clearBufferfi(gl::Context const*, unsigned int, int, float, int)
rx::FramebufferNULL::clearBufferfv(gl::Context const*, unsigned int, int, float const*)
rx::FramebufferNULL::clearBufferiv(gl::Context const*, unsigned int, int, int const*)
rx::FramebufferNULL::clearBufferuiv(gl::Context const*, unsigned int, int, unsigned int const*)
rx::FramebufferNULL::discard(gl::Context const*, unsigned long, unsigned int const*)
rx::FramebufferNULL::getImplementationColorReadFormat(gl::Context const*) const
rx::FramebufferNULL::getImplementationColorReadType(gl::Context const*) const
rx::FramebufferNULL::getSamplePosition(gl::Context const*, unsigned long, float*) const
rx::FramebufferNULL::invalidate(gl::Context const*, unsigned long, unsigned int const*)
rx::FramebufferNULL::invalidateSub(gl::Context const*, unsigned long, unsigned int const*, gl::Rectangle const&)
rx::FramebufferNULL::readPixels(gl::Context const*, gl::Rectangle const&, unsigned int, unsigned int, void*)
rx::FramebufferNULL::syncState(gl::Context const*, angle::BitSetT<19ul, unsigned long, unsigned long> const&)
rx::FramebufferNULL::~FramebufferNULL()
rx::FramebufferVk::CreateDefaultFBO(rx::RendererVk*, gl::FramebufferState const&, rx::WindowSurfaceVk*)
rx::FramebufferVk::CreateUserFBO(rx::RendererVk*, gl::FramebufferState const&)
rx::FramebufferVk::blit(gl::Context const*, gl::Rectangle const&, gl::Rectangle const&, unsigned int, unsigned int)
rx::FramebufferVk::blitWithCommand(rx::ContextVk*, gl::Rectangle const&, gl::Rectangle const&, rx::RenderTargetVk*, rx::RenderTargetVk*, unsigned int, bool, bool, bool, bool, bool)
rx::FramebufferVk::blitWithCopy(rx::ContextVk*, gl::Rectangle const&, rx::RenderTargetVk*, rx::RenderTargetVk*, bool, bool)
rx::FramebufferVk::blitWithReadback(rx::ContextVk*, gl::Rectangle const&, VkImageAspectFlagBits, rx::RenderTargetVk*, rx::RenderTargetVk*)
rx::FramebufferVk::checkStatus(gl::Context const*) const
rx::FramebufferVk::clear(gl::Context const*, unsigned int)
rx::FramebufferVk::clearBufferfi(gl::Context const*, unsigned int, int, float, int)
rx::FramebufferVk::clearBufferfv(gl::Context const*, unsigned int, int, float const*)
rx::FramebufferVk::clearBufferiv(gl::Context const*, unsigned int, int, int const*)
rx::FramebufferVk::clearBufferuiv(gl::Context const*, unsigned int, int, unsigned int const*)
rx::FramebufferVk::clearWithClearAttachments(rx::ContextVk*, bool, bool, bool)
rx::FramebufferVk::clearWithDraw(rx::ContextVk*, unsigned int)
rx::FramebufferVk::destroy(gl::Context const*)
rx::FramebufferVk::discard(gl::Context const*, unsigned long, unsigned int const*)
rx::FramebufferVk::getColorReadRenderTarget() const
rx::FramebufferVk::getEmulatedAlphaAttachmentMask()
rx::FramebufferVk::getFramebuffer(rx::ContextVk*, rx::vk::Framebuffer**)
rx::FramebufferVk::getImplementationColorReadFormat(gl::Context const*) const
rx::FramebufferVk::getImplementationColorReadType(gl::Context const*) const
rx::FramebufferVk::getReadImageExtents() const
rx::FramebufferVk::getRenderPassDesc()
rx::FramebufferVk::getSamplePosition(gl::Context const*, unsigned long, float*) const
rx::FramebufferVk::invalidate(gl::Context const*, unsigned long, unsigned int const*)
rx::FramebufferVk::invalidateSub(gl::Context const*, unsigned long, unsigned int const*, gl::Rectangle const&)
rx::FramebufferVk::readPixels(gl::Context const*, gl::Rectangle const&, unsigned int, unsigned int, void*)
rx::FramebufferVk::readPixelsImpl(rx::ContextVk*, gl::Rectangle const&, rx::PackPixelsParams const&, VkImageAspectFlagBits, rx::RenderTargetVk*, void*)
rx::FramebufferVk::startNewRenderPass(rx::ContextVk*, rx::vk::CommandBuffer**)
rx::FramebufferVk::syncState(gl::Context const*, angle::BitSetT<19ul, unsigned long, unsigned long> const&)
rx::FramebufferVk::~FramebufferVk()
rx::FunctionsGL::FunctionsGL()
rx::FunctionsGL::hasExtension(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
rx::FunctionsGL::hasGLESExtension(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
rx::FunctionsGL::hasGLExtension(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
rx::FunctionsGL::initialize(egl::AttributeMap const&)
rx::FunctionsGL::initializeDummyFunctionsForNULLDriver(std::__1::set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)
rx::FunctionsGL::isAtLeastGL(gl::Version const&) const
rx::FunctionsGL::isAtLeastGLES(gl::Version const&) const
rx::FunctionsGL::isAtMostGL(gl::Version const&) const
rx::FunctionsGL::~FunctionsGL()
rx::FunctionsGLGLX::loadProcAddress(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
rx::FunctionsGLGLX::~FunctionsGLGLX()
rx::FunctionsGLX::FunctionsGLX()
rx::FunctionsGLX::chooseFBConfig(int const*, int*) const
rx::FunctionsGLX::createContext(XVisualInfo*, void*, bool) const
rx::FunctionsGLX::createContextAttribsARB(void*, void*, int, int const*) const
rx::FunctionsGLX::createPbuffer(void*, int const*) const
rx::FunctionsGLX::createWindow(void*, unsigned long, int const*) const
rx::FunctionsGLX::destroyContext(void*) const
rx::FunctionsGLX::destroyPbuffer(unsigned long) const
rx::FunctionsGLX::destroyWindow(unsigned long) const
rx::FunctionsGLX::getClientString(int) const
rx::FunctionsGLX::getDisplay() const
rx::FunctionsGLX::getFBConfigAttrib(void*, int, int*) const
rx::FunctionsGLX::getVisualFromFBConfig(void*) const
rx::FunctionsGLX::hasExtension(char const*) const
rx::FunctionsGLX::initialize(_XDisplay*, int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
rx::FunctionsGLX::makeCurrent(unsigned long, void*) const
rx::FunctionsGLX::queryDrawable(unsigned long, int, unsigned int*) const
rx::FunctionsGLX::sLibHandle
rx::FunctionsGLX::swapBuffers(unsigned long) const
rx::FunctionsGLX::swapIntervalEXT(unsigned long, int) const
rx::FunctionsGLX::swapIntervalMESA(int) const
rx::FunctionsGLX::swapIntervalSGI(int) const
rx::FunctionsGLX::terminate()
rx::FunctionsGLX::waitGL() const
rx::FunctionsGLX::waitX() const
rx::FunctionsGLX::~FunctionsGLX()
rx::GenerateContextCreationToTry(int, bool)
rx::GetAvailableValidationLayers(std::__1::vector<VkLayerProperties, std::__1::allocator<VkLayerProperties> > const&, bool, char const* const**, unsigned int*)
rx::GetBlitGL(gl::Context const*)
rx::GetFormatFromFormatType(unsigned int, unsigned int)
rx::GetFunctionsGL(gl::Context const*)
rx::GetImageLayerCount(gl::TextureType)
rx::GetMatrixUniform(unsigned int, float*, float const*, bool)
rx::GetMultiviewClearer(gl::Context const*)
rx::GetStateManagerGL(gl::Context const*)
rx::GetUniformBufferDescriptorCount()
rx::GetVendorID(rx::FunctionsGL const*)
rx::GetVendorString(unsigned int)
rx::GetWorkaroundsGL(gl::Context const*)
rx::GlslangWrapper::GetShaderCode(rx::vk::Context*, gl::Caps const&, bool, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >*, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >*)
rx::GlslangWrapper::GetShaderCodeImpl(rx::vk::Context*, gl::Caps const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >*, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >*)
rx::GlslangWrapper::GetShaderSource(gl::ProgramState const&, gl::ProgramLinkedResources const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
rx::GlslangWrapper::GetShaderSource(gl::ProgramState const&, gl::ProgramLinkedResources const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)::kDriverBlockLayoutString
rx::GlslangWrapper::Initialize()
rx::GlslangWrapper::Release()
rx::HasValidationLayer(std::__1::vector<VkLayerProperties, std::__1::allocator<VkLayerProperties> > const&, char const*)
rx::IgnoreX11Errors(_XDisplay*, XErrorEvent*)
rx::ImageNULL::ImageNULL(egl::ImageState const&)
rx::ImageNULL::initialize(egl::Display const*)
rx::ImageNULL::orphan(gl::Context const*, egl::ImageSibling*)
rx::ImageNULL::~ImageNULL()
rx::IncompleteTextureSet::IncompleteTextureSet()
rx::IncompleteTextureSet::getIncompleteTexture(gl::Context const*, gl::TextureType, rx::MultisampleTextureInitializer*, gl::Texture**)
rx::IncompleteTextureSet::getIncompleteTexture(gl::Context const*, gl::TextureType, rx::MultisampleTextureInitializer*, gl::Texture**)::color
rx::IncompleteTextureSet::onDestroy(gl::Context const*)
rx::IncompleteTextureSet::~IncompleteTextureSet()
rx::LinkEvent::~LinkEvent()
rx::LinkEventDone::isLinking()
rx::LinkEventDone::wait(gl::Context const*)
rx::LinkEventDone::~LinkEventDone()
rx::MapBufferRangeWithFallback(rx::FunctionsGL const*, unsigned int, unsigned long, unsigned long, unsigned int)
rx::OffscreenSurfaceVk::AttachmentImage::destroy(egl::Display const*)
rx::OffscreenSurfaceVk::AttachmentImage::initialize(rx::DisplayVk*, int, int, rx::vk::Format const&)
rx::OffscreenSurfaceVk::OffscreenSurfaceVk(egl::SurfaceState const&, int, int)
rx::OffscreenSurfaceVk::bindTexImage(gl::Context const*, gl::Texture*, int)
rx::OffscreenSurfaceVk::createDefaultFramebuffer(gl::Context const*, gl::FramebufferState const&)
rx::OffscreenSurfaceVk::destroy(egl::Display const*)
rx::OffscreenSurfaceVk::getAttachmentRenderTarget(gl::Context const*, unsigned int, gl::ImageIndex const&, rx::FramebufferAttachmentRenderTarget**)
rx::OffscreenSurfaceVk::getHeight() const
rx::OffscreenSurfaceVk::getSwapBehavior() const
rx::OffscreenSurfaceVk::getSyncValues(unsigned long*, unsigned long*, unsigned long*)
rx::OffscreenSurfaceVk::getWidth() const
rx::OffscreenSurfaceVk::initialize(egl::Display const*)
rx::OffscreenSurfaceVk::initializeContents(gl::Context const*, gl::ImageIndex const&)
rx::OffscreenSurfaceVk::initializeImpl(rx::DisplayVk*)
rx::OffscreenSurfaceVk::isPostSubBufferSupported() const
rx::OffscreenSurfaceVk::postSubBuffer(gl::Context const*, int, int, int, int)
rx::OffscreenSurfaceVk::querySurfacePointerANGLE(int, void**)
rx::OffscreenSurfaceVk::releaseTexImage(gl::Context const*, int)
rx::OffscreenSurfaceVk::setSwapInterval(int)
rx::OffscreenSurfaceVk::swap(gl::Context const*)
rx::OffscreenSurfaceVk::~OffscreenSurfaceVk()
rx::PackPixels(rx::PackPixelsParams const&, angle::Format const&, int, unsigned char const*, unsigned char*)
rx::PackPixelsParams::PackPixelsParams()
rx::PackPixelsParams::PackPixelsParams(gl::Rectangle const&, angle::Format const&, unsigned int, bool, gl::Buffer*, long)
rx::PathGL::PathGL(rx::FunctionsGL const*, unsigned int)
rx::PathGL::setCommands(int, unsigned char const*, int, unsigned int, void const*)
rx::PathGL::setPathParameter(unsigned int, float)
rx::PathGL::~PathGL()
rx::PathNULL::PathNULL()
rx::PathNULL::setCommands(int, unsigned char const*, int, unsigned int, void const*)
rx::PathNULL::setPathParameter(unsigned int, float)
rx::PathNULL::~PathNULL()
rx::PbufferSurfaceGLX::PbufferSurfaceGLX(egl::SurfaceState const&, int, int, bool, rx::FunctionsGLX const&, void*)
rx::PbufferSurfaceGLX::bindTexImage(gl::Context const*, gl::Texture*, int)
rx::PbufferSurfaceGLX::checkForResize()
rx::PbufferSurfaceGLX::getDrawable() const
rx::PbufferSurfaceGLX::getHeight() const
rx::PbufferSurfaceGLX::getSwapBehavior() const
rx::PbufferSurfaceGLX::getWidth() const
rx::PbufferSurfaceGLX::initialize(egl::Display const*)
rx::PbufferSurfaceGLX::isPostSubBufferSupported() const
rx::PbufferSurfaceGLX::makeCurrent()
rx::PbufferSurfaceGLX::postSubBuffer(gl::Context const*, int, int, int, int)
rx::PbufferSurfaceGLX::querySurfacePointerANGLE(int, void**)
rx::PbufferSurfaceGLX::releaseTexImage(gl::Context const*, int)
rx::PbufferSurfaceGLX::setSwapInterval(int)
rx::PbufferSurfaceGLX::swap(gl::Context const*)
rx::PbufferSurfaceGLX::~PbufferSurfaceGLX()
rx::PipelineCache::PipelineCache()
rx::PipelineCache::destroy(VkDevice_T*)
rx::PipelineCache::getPipeline(rx::vk::Context*, rx::vk::PipelineCache const&, rx::vk::RenderPass const&, rx::vk::PipelineLayout const&, angle::BitSetT<16ul, unsigned long, unsigned long> const&, rx::vk::ShaderModule const&, rx::vk::ShaderModule const&, rx::vk::PipelineDesc const&, rx::vk::ObjectAndSerial<rx::vk::Pipeline>**)
rx::PipelineCache::~PipelineCache()
rx::PipelineLayoutCache::PipelineLayoutCache()
rx::PipelineLayoutCache::destroy(VkDevice_T*)
rx::PipelineLayoutCache::getPipelineLayout(rx::vk::Context*, rx::vk::PipelineLayoutDesc const&, std::__1::array<rx::vk::BindingPointer<rx::vk::DescriptorSetLayout>, 3ul> const&, rx::vk::BindingPointer<rx::vk::PipelineLayout>*)
rx::PipelineLayoutCache::~PipelineLayoutCache()
rx::PixelBuffer::flushUpdatesToImage(rx::ContextVk*, unsigned int, rx::vk::ImageHelper*, rx::vk::CommandBuffer*)
rx::PixelBuffer::stageSubresourceUpdate(rx::ContextVk*, gl::ImageIndex const&, gl::Extents const&, gl::Offset const&, gl::InternalFormat const&, gl::PixelUnpackState const&, unsigned int, unsigned char const*)
rx::PixelBuffer::stageSubresourceUpdateAndGetData(rx::ContextVk*, unsigned long, gl::ImageIndex const&, gl::Extents const&, gl::Offset const&, unsigned char**)
rx::PixelBuffer::stageSubresourceUpdateFromFramebuffer(gl::Context const*, gl::ImageIndex const&, gl::Rectangle const&, gl::Offset const&, gl::Extents const&, gl::InternalFormat const&, rx::FramebufferVk*)
rx::ProgramGL::ProgramGL(gl::ProgramState const&, rx::FunctionsGL const*, rx::WorkaroundsGL const&, rx::StateManagerGL*, bool)
rx::ProgramGL::checkLinkStatus(gl::InfoLog&)
rx::ProgramGL::enableLayeredRenderingPath(int) const
rx::ProgramGL::enableSideBySideRenderingPath() const
rx::ProgramGL::getAtomicCounterBufferSizeMap(std::__1::map<int, unsigned int, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, unsigned int> > >*) const
rx::ProgramGL::getUniformBlockMemberInfo(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockMemberInfo*) const
rx::ProgramGL::getUniformfv(gl::Context const*, int, float*) const
rx::ProgramGL::getUniformiv(gl::Context const*, int, int*) const
rx::ProgramGL::getUniformuiv(gl::Context const*, int, unsigned int*) const
rx::ProgramGL::link(gl::Context const*, gl::ProgramLinkedResources const&, gl::InfoLog&)
rx::ProgramGL::linkImpl(gl::Context const*, gl::ProgramLinkedResources const&, gl::InfoLog&)
rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)
rx::ProgramGL::load(gl::Context const*, gl::InfoLog&, gl::BinaryInputStream*)
rx::ProgramGL::markUnusedUniformLocations(std::__1::vector<gl::VariableLocation, std::__1::allocator<gl::VariableLocation> >*, std::__1::vector<gl::SamplerBinding, std::__1::allocator<gl::SamplerBinding> >*, std::__1::vector<gl::ImageBinding, std::__1::allocator<gl::ImageBinding> >*)
rx::ProgramGL::postLink()
rx::ProgramGL::postLink()::kQueryProperties
rx::ProgramGL::save(gl::Context const*, gl::BinaryOutputStream*)
rx::ProgramGL::setBinaryRetrievableHint(bool)
rx::ProgramGL::setPathFragmentInputGen(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int, int, float const*)
rx::ProgramGL::setSeparable(bool)
rx::ProgramGL::setUniform1fv(int, int, float const*)
rx::ProgramGL::setUniform1iv(int, int, int const*)
rx::ProgramGL::setUniform1uiv(int, int, unsigned int const*)
rx::ProgramGL::setUniform2fv(int, int, float const*)
rx::ProgramGL::setUniform2iv(int, int, int const*)
rx::ProgramGL::setUniform2uiv(int, int, unsigned int const*)
rx::ProgramGL::setUniform3fv(int, int, float const*)
rx::ProgramGL::setUniform3iv(int, int, int const*)
rx::ProgramGL::setUniform3uiv(int, int, unsigned int const*)
rx::ProgramGL::setUniform4fv(int, int, float const*)
rx::ProgramGL::setUniform4iv(int, int, int const*)
rx::ProgramGL::setUniform4uiv(int, int, unsigned int const*)
rx::ProgramGL::setUniformBlockBinding(unsigned int, unsigned int)
rx::ProgramGL::setUniformMatrix2fv(int, int, unsigned char, float const*)
rx::ProgramGL::setUniformMatrix2x3fv(int, int, unsigned char, float const*)
rx::ProgramGL::setUniformMatrix2x4fv(int, int, unsigned char, float const*)
rx::ProgramGL::setUniformMatrix3fv(int, int, unsigned char, float const*)
rx::ProgramGL::setUniformMatrix3x2fv(int, int, unsigned char, float const*)
rx::ProgramGL::setUniformMatrix3x4fv(int, int, unsigned char, float const*)
rx::ProgramGL::setUniformMatrix4fv(int, int, unsigned char, float const*)
rx::ProgramGL::setUniformMatrix4x2fv(int, int, unsigned char, float const*)
rx::ProgramGL::setUniformMatrix4x3fv(int, int, unsigned char, float const*)
rx::ProgramGL::syncState(gl::Context const*, angle::BitSetT<32ul, unsigned long, unsigned long> const&)
rx::ProgramGL::validate(gl::Caps const&, gl::InfoLog*)
rx::ProgramGL::~ProgramGL()
rx::ProgramImpl::destroy(gl::Context const*)
rx::ProgramImpl::markUnusedUniformLocations(std::__1::vector<gl::VariableLocation, std::__1::allocator<gl::VariableLocation> >*, std::__1::vector<gl::SamplerBinding, std::__1::allocator<gl::SamplerBinding> >*, std::__1::vector<gl::ImageBinding, std::__1::allocator<gl::ImageBinding> >*)
rx::ProgramImpl::syncState(gl::Context const*, angle::BitSetT<32ul, unsigned long, unsigned long> const&)
rx::ProgramNULL::ProgramNULL(gl::ProgramState const&)
rx::ProgramNULL::getUniformfv(gl::Context const*, int, float*) const
rx::ProgramNULL::getUniformiv(gl::Context const*, int, int*) const
rx::ProgramNULL::getUniformuiv(gl::Context const*, int, unsigned int*) const
rx::ProgramNULL::link(gl::Context const*, gl::ProgramLinkedResources const&, gl::InfoLog&)
rx::ProgramNULL::load(gl::Context const*, gl::InfoLog&, gl::BinaryInputStream*)
rx::ProgramNULL::save(gl::Context const*, gl::BinaryOutputStream*)
rx::ProgramNULL::setBinaryRetrievableHint(bool)
rx::ProgramNULL::setPathFragmentInputGen(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int, int, float const*)
rx::ProgramNULL::setSeparable(bool)
rx::ProgramNULL::setUniform1fv(int, int, float const*)
rx::ProgramNULL::setUniform1iv(int, int, int const*)
rx::ProgramNULL::setUniform1uiv(int, int, unsigned int const*)
rx::ProgramNULL::setUniform2fv(int, int, float const*)
rx::ProgramNULL::setUniform2iv(int, int, int const*)
rx::ProgramNULL::setUniform2uiv(int, int, unsigned int const*)
rx::ProgramNULL::setUniform3fv(int, int, float const*)
rx::ProgramNULL::setUniform3iv(int, int, int const*)
rx::ProgramNULL::setUniform3uiv(int, int, unsigned int const*)
rx::ProgramNULL::setUniform4fv(int, int, float const*)
rx::ProgramNULL::setUniform4iv(int, int, int const*)
rx::ProgramNULL::setUniform4uiv(int, int, unsigned int const*)
rx::ProgramNULL::setUniformMatrix2fv(int, int, unsigned char, float const*)
rx::ProgramNULL::setUniformMatrix2x3fv(int, int, unsigned char, float const*)
rx::ProgramNULL::setUniformMatrix2x4fv(int, int, unsigned char, float const*)
rx::ProgramNULL::setUniformMatrix3fv(int, int, unsigned char, float const*)
rx::ProgramNULL::setUniformMatrix3x2fv(int, int, unsigned char, float const*)
rx::ProgramNULL::setUniformMatrix3x4fv(int, int, unsigned char, float const*)
rx::ProgramNULL::setUniformMatrix4fv(int, int, unsigned char, float const*)
rx::ProgramNULL::setUniformMatrix4x2fv(int, int, unsigned char, float const*)
rx::ProgramNULL::setUniformMatrix4x3fv(int, int, unsigned char, float const*)
rx::ProgramNULL::validate(gl::Caps const&, gl::InfoLog*)
rx::ProgramNULL::~ProgramNULL()
rx::ProgramPipelineGL::ProgramPipelineGL(gl::ProgramPipelineState const&, rx::FunctionsGL const*)
rx::ProgramPipelineGL::~ProgramPipelineGL()
rx::ProgramPipelineImpl::destroy(rx::ContextImpl const*)
rx::ProgramPipelineNULL::ProgramPipelineNULL(gl::ProgramPipelineState const&)
rx::ProgramPipelineNULL::~ProgramPipelineNULL()
rx::ProgramPipelineVk::ProgramPipelineVk(gl::ProgramPipelineState const&)
rx::ProgramPipelineVk::~ProgramPipelineVk()
rx::ProgramVk::ProgramVk(gl::ProgramState const&)
rx::ProgramVk::ShaderInfo::getShaders(rx::ContextVk*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool, rx::vk::ObjectAndSerial<rx::vk::ShaderModule> const**, rx::vk::ObjectAndSerial<rx::vk::ShaderModule> const**)
rx::ProgramVk::destroy(gl::Context const*)
rx::ProgramVk::getUniformfv(gl::Context const*, int, float*) const
rx::ProgramVk::getUniformiv(gl::Context const*, int, int*) const
rx::ProgramVk::getUniformuiv(gl::Context const*, int, unsigned int*) const
rx::ProgramVk::initDefaultUniformBlocks(gl::Context const*)
rx::ProgramVk::initShaders(rx::ContextVk*, gl::DrawCallParams const&, rx::vk::ObjectAndSerial<rx::vk::ShaderModule> const**, rx::vk::ObjectAndSerial<rx::vk::ShaderModule> const**, rx::vk::PipelineLayout const**)
rx::ProgramVk::link(gl::Context const*, gl::ProgramLinkedResources const&, gl::InfoLog&)
rx::ProgramVk::linkImpl(gl::Context const*, gl::ProgramLinkedResources const&, gl::InfoLog&)
rx::ProgramVk::load(gl::Context const*, gl::InfoLog&, gl::BinaryInputStream*)
rx::ProgramVk::reset(rx::ContextVk*)
rx::ProgramVk::save(gl::Context const*, gl::BinaryOutputStream*)
rx::ProgramVk::setBinaryRetrievableHint(bool)
rx::ProgramVk::setPathFragmentInputGen(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int, int, float const*)
rx::ProgramVk::setSeparable(bool)
rx::ProgramVk::setUniform1fv(int, int, float const*)
rx::ProgramVk::setUniform1iv(int, int, int const*)
rx::ProgramVk::setUniform1uiv(int, int, unsigned int const*)
rx::ProgramVk::setUniform2fv(int, int, float const*)
rx::ProgramVk::setUniform2iv(int, int, int const*)
rx::ProgramVk::setUniform2uiv(int, int, unsigned int const*)
rx::ProgramVk::setUniform3fv(int, int, float const*)
rx::ProgramVk::setUniform3iv(int, int, int const*)
rx::ProgramVk::setUniform3uiv(int, int, unsigned int const*)
rx::ProgramVk::setUniform4fv(int, int, float const*)
rx::ProgramVk::setUniform4iv(int, int, int const*)
rx::ProgramVk::setUniform4uiv(int, int, unsigned int const*)
rx::ProgramVk::setUniformMatrix2fv(int, int, unsigned char, float const*)
rx::ProgramVk::setUniformMatrix2x3fv(int, int, unsigned char, float const*)
rx::ProgramVk::setUniformMatrix2x4fv(int, int, unsigned char, float const*)
rx::ProgramVk::setUniformMatrix3fv(int, int, unsigned char, float const*)
rx::ProgramVk::setUniformMatrix3x2fv(int, int, unsigned char, float const*)
rx::ProgramVk::setUniformMatrix3x4fv(int, int, unsigned char, float const*)
rx::ProgramVk::setUniformMatrix4fv(int, int, unsigned char, float const*)
rx::ProgramVk::setUniformMatrix4x2fv(int, int, unsigned char, float const*)
rx::ProgramVk::setUniformMatrix4x3fv(int, int, unsigned char, float const*)
rx::ProgramVk::updateDefaultUniformsDescriptorSet(rx::ContextVk*)
rx::ProgramVk::updateDescriptorSets(rx::ContextVk*, gl::DrawCallParams const&, rx::vk::CommandBuffer*)
rx::ProgramVk::updateTexturesDescriptorSet(rx::ContextVk*)
rx::ProgramVk::updateUniforms(rx::ContextVk*)
rx::ProgramVk::validate(gl::Caps const&, gl::InfoLog*)
rx::ProgramVk::~ProgramVk()
rx::QueryImpl::onDestroy(gl::Context const*)
rx::QueryNULL::QueryNULL(gl::QueryType)
rx::QueryNULL::begin(gl::Context const*)
rx::QueryNULL::end(gl::Context const*)
rx::QueryNULL::getResult(gl::Context const*, int*)
rx::QueryNULL::getResult(gl::Context const*, long*)
rx::QueryNULL::getResult(gl::Context const*, unsigned int*)
rx::QueryNULL::getResult(gl::Context const*, unsigned long*)
rx::QueryNULL::isResultAvailable(gl::Context const*, bool*)
rx::QueryNULL::queryCounter(gl::Context const*)
rx::QueryNULL::~QueryNULL()
rx::QueryVk::QueryVk(gl::QueryType)
rx::QueryVk::begin(gl::Context const*)
rx::QueryVk::end(gl::Context const*)
rx::QueryVk::getResult(gl::Context const*, int*)
rx::QueryVk::getResult(gl::Context const*, long*)
rx::QueryVk::getResult(gl::Context const*, unsigned int*)
rx::QueryVk::getResult(gl::Context const*, unsigned long*)
rx::QueryVk::isResultAvailable(gl::Context const*, bool*)
rx::QueryVk::onDestroy(gl::Context const*)
rx::QueryVk::queryCounter(gl::Context const*)
rx::QueryVk::~QueryVk()
rx::RenderPassCache::RenderPassCache()
rx::RenderPassCache::destroy(VkDevice_T*)
rx::RenderPassCache::getCompatibleRenderPass(rx::vk::Context*, rx::Serial, rx::vk::RenderPassDesc const&, rx::vk::RenderPass**)
rx::RenderPassCache::getRenderPassWithOps(rx::vk::Context*, rx::Serial, rx::vk::RenderPassDesc const&, rx::vk::AttachmentOpsArray const&, rx::vk::RenderPass**)
rx::RenderPassCache::~RenderPassCache()
rx::RenderTargetVk::RenderTargetVk(rx::RenderTargetVk&&)
rx::RenderTargetVk::RenderTargetVk(rx::vk::ImageHelper*, rx::vk::ImageView*, unsigned long)
rx::RenderTargetVk::getImage() const
rx::RenderTargetVk::getImageExtents() const
rx::RenderTargetVk::getImageForRead(rx::vk::CommandGraphResource*, VkImageLayout, rx::vk::CommandBuffer*)
rx::RenderTargetVk::getImageForWrite(rx::vk::CommandGraphResource*) const
rx::RenderTargetVk::getImageFormat() const
rx::RenderTargetVk::getImageView() const
rx::RenderTargetVk::onColorDraw(rx::vk::CommandGraphResource*, rx::vk::CommandBuffer*, rx::vk::RenderPassDesc*)
rx::RenderTargetVk::onDepthStencilDraw(rx::vk::CommandGraphResource*, rx::vk::CommandBuffer*, rx::vk::RenderPassDesc*)
rx::RenderTargetVk::updateSwapchainImage(rx::vk::ImageHelper*, rx::vk::ImageView*)
rx::RenderTargetVk::~RenderTargetVk()
rx::RenderbufferGL::RenderbufferGL(gl::RenderbufferState const&, rx::FunctionsGL const*, rx::WorkaroundsGL const&, rx::StateManagerGL*, rx::BlitGL*, gl::TextureCapsMap const&)
rx::RenderbufferGL::getRenderbufferID() const
rx::RenderbufferGL::initializeContents(gl::Context const*, gl::ImageIndex const&)
rx::RenderbufferGL::setStorage(gl::Context const*, unsigned int, unsigned long, unsigned long)
rx::RenderbufferGL::setStorageEGLImageTarget(gl::Context const*, egl::Image*)
rx::RenderbufferGL::setStorageMultisample(gl::Context const*, unsigned long, unsigned int, unsigned long, unsigned long)
rx::RenderbufferGL::~RenderbufferGL()
rx::RenderbufferImpl::onDestroy(gl::Context const*)
rx::RenderbufferNULL::RenderbufferNULL(gl::RenderbufferState const&)
rx::RenderbufferNULL::initializeContents(gl::Context const*, gl::ImageIndex const&)
rx::RenderbufferNULL::setStorage(gl::Context const*, unsigned int, unsigned long, unsigned long)
rx::RenderbufferNULL::setStorageEGLImageTarget(gl::Context const*, egl::Image*)
rx::RenderbufferNULL::setStorageMultisample(gl::Context const*, unsigned long, unsigned int, unsigned long, unsigned long)
rx::RenderbufferNULL::~RenderbufferNULL()
rx::RenderbufferVk::RenderbufferVk(gl::RenderbufferState const&)
rx::RenderbufferVk::getAttachmentRenderTarget(gl::Context const*, unsigned int, gl::ImageIndex const&, rx::FramebufferAttachmentRenderTarget**)
rx::RenderbufferVk::initializeContents(gl::Context const*, gl::ImageIndex const&)
rx::RenderbufferVk::onDestroy(gl::Context const*)
rx::RenderbufferVk::setStorage(gl::Context const*, unsigned int, unsigned long, unsigned long)
rx::RenderbufferVk::setStorageEGLImageTarget(gl::Context const*, egl::Image*)
rx::RenderbufferVk::setStorageMultisample(gl::Context const*, unsigned long, unsigned int, unsigned long, unsigned long)
rx::RenderbufferVk::~RenderbufferVk()
rx::RendererGL::RendererGL(std::__1::unique_ptr<rx::FunctionsGL, std::__1::default_delete<rx::FunctionsGL> >, egl::AttributeMap const&)
rx::RendererGL::applyNativeWorkarounds(gl::Workarounds*) const
rx::RendererGL::coverFillPath(gl::ContextState const&, gl::Path const*, unsigned int)
rx::RendererGL::coverFillPathInstanced(gl::ContextState const&, std::__1::vector<gl::Path*, std::__1::allocator<gl::Path*> > const&, unsigned int, unsigned int, float const*)
rx::RendererGL::coverStrokePath(gl::ContextState const&, gl::Path const*, unsigned int)
rx::RendererGL::coverStrokePathInstanced(gl::ContextState const&, std::__1::vector<gl::Path*, std::__1::allocator<gl::Path*> > const&, unsigned int, unsigned int, float const*)
rx::RendererGL::dispatchCompute(gl::Context const*, unsigned int, unsigned int, unsigned int)
rx::RendererGL::dispatchComputeIndirect(gl::Context const*, long)
rx::RendererGL::drawArrays(gl::Context const*, gl::PrimitiveMode, int, int)
rx::RendererGL::drawArraysIndirect(gl::Context const*, gl::PrimitiveMode, void const*)
rx::RendererGL::drawArraysInstanced(gl::Context const*, gl::PrimitiveMode, int, int, int)
rx::RendererGL::drawElements(gl::Context const*, gl::PrimitiveMode, int, unsigned int, void const*)
rx::RendererGL::drawElementsIndirect(gl::Context const*, gl::PrimitiveMode, unsigned int, void const*)
rx::RendererGL::drawElementsInstanced(gl::Context const*, gl::PrimitiveMode, int, unsigned int, void const*, int)
rx::RendererGL::drawRangeElements(gl::Context const*, gl::PrimitiveMode, unsigned int, unsigned int, int, unsigned int, void const*)
rx::RendererGL::finish()
rx::RendererGL::flush()
rx::RendererGL::getGPUDisjoint()
rx::RendererGL::getMaxSupportedESVersion() const
rx::RendererGL::getMultiviewImplementationType() const
rx::RendererGL::getNativeCaps() const
rx::RendererGL::getNativeExtensions() const
rx::RendererGL::getNativeLimitations() const
rx::RendererGL::getNativeTextureCaps() const
rx::RendererGL::getRendererDescription() const
rx::RendererGL::getResetStatus()
rx::RendererGL::getTimestamp()
rx::RendererGL::getVendorString() const
rx::RendererGL::insertEventMarker(int, char const*)
rx::RendererGL::memoryBarrier(unsigned int)
rx::RendererGL::memoryBarrierByRegion(unsigned int)
rx::RendererGL::popDebugGroup()
rx::RendererGL::popGroupMarker()
rx::RendererGL::pushDebugGroup(unsigned int, unsigned int, int, char const*)
rx::RendererGL::pushGroupMarker(int, char const*)
rx::RendererGL::stencilFillPath(gl::ContextState const&, gl::Path const*, unsigned int, unsigned int)
rx::RendererGL::stencilFillPathInstanced(gl::ContextState const&, std::__1::vector<gl::Path*, std::__1::allocator<gl::Path*> > const&, unsigned int, unsigned int, unsigned int, float const*)
rx::RendererGL::stencilStrokePath(gl::ContextState const&, gl::Path const*, int, unsigned int)
rx::RendererGL::stencilStrokePathInstanced(gl::ContextState const&, std::__1::vector<gl::Path*, std::__1::allocator<gl::Path*> > const&, int, unsigned int, unsigned int, float const*)
rx::RendererGL::stencilThenCoverFillPath(gl::ContextState const&, gl::Path const*, unsigned int, unsigned int, unsigned int)
rx::RendererGL::stencilThenCoverFillPathInstanced(gl::ContextState const&, std::__1::vector<gl::Path*, std::__1::allocator<gl::Path*> > const&, unsigned int, unsigned int, unsigned int, unsigned int, float const*)
rx::RendererGL::stencilThenCoverStrokePath(gl::ContextState const&, gl::Path const*, int, unsigned int, unsigned int)
rx::RendererGL::stencilThenCoverStrokePathInstanced(gl::ContextState const&, std::__1::vector<gl::Path*, std::__1::allocator<gl::Path*> > const&, unsigned int, int, unsigned int, unsigned int, float const*)
rx::RendererGL::~RendererGL()
rx::RendererVk::RendererVk()
rx::RendererVk::checkInFlightCommands(rx::vk::Context*)
rx::RendererVk::finish(rx::vk::Context*)
rx::RendererVk::flush(rx::vk::Context*, rx::vk::Semaphore const&, rx::vk::Semaphore const&)
rx::RendererVk::getCommandGraph()
rx::RendererVk::getCommandPool() const
rx::RendererVk::getCompatibleRenderPass(rx::vk::Context*, rx::vk::RenderPassDesc const&, rx::vk::RenderPass**)
rx::RendererVk::getDescriptorSetLayout(rx::vk::Context*, rx::vk::DescriptorSetLayoutDesc const&, rx::vk::BindingPointer<rx::vk::DescriptorSetLayout>*)
rx::RendererVk::getMaxActiveTextures()
rx::RendererVk::getNativeCaps() const
rx::RendererVk::getNativeExtensions() const
rx::RendererVk::getNativeLimitations() const
rx::RendererVk::getNativeTextureCaps() const
rx::RendererVk::getPipeline(rx::vk::Context*, rx::vk::ObjectAndSerial<rx::vk::ShaderModule> const&, rx::vk::ObjectAndSerial<rx::vk::ShaderModule> const&, rx::vk::PipelineLayout const&, rx::vk::PipelineDesc const&, angle::BitSetT<16ul, unsigned long, unsigned long> const&, rx::vk::ObjectAndSerial<rx::vk::Pipeline>**)
rx::RendererVk::getPipelineLayout(rx::vk::Context*, rx::vk::PipelineLayoutDesc const&, std::__1::array<rx::vk::BindingPointer<rx::vk::DescriptorSetLayout>, 3ul> const&, rx::vk::BindingPointer<rx::vk::PipelineLayout>*)
rx::RendererVk::getRendererDescription() const
rx::RendererVk::getShaderLibrary()
rx::RendererVk::getVendorString() const
rx::RendererVk::initPipelineCacheVkKey()
rx::RendererVk::initialize(rx::DisplayVk*, egl::AttributeMap const&, char const*)
rx::RendererVk::initializeDevice(rx::DisplayVk*, unsigned int)
rx::RendererVk::isDeviceLost() const
rx::RendererVk::isSerialInUse(rx::Serial) const
rx::RendererVk::issueShaderSerial()
rx::RendererVk::markDeviceLost()
rx::RendererVk::onDestroy(rx::vk::Context*)
rx::RendererVk::selectPresentQueueForSurface(rx::DisplayVk*, VkSurfaceKHR_T*, unsigned int*)
rx::RendererVk::submitFrame(rx::vk::Context*, VkSubmitInfo const&, rx::vk::CommandBuffer&&)
rx::RendererVk::syncPipelineCacheVk(rx::DisplayVk*)
rx::RendererVk::~RendererVk()
rx::SamplerGL::SamplerGL(gl::SamplerState const&, rx::FunctionsGL const*, rx::StateManagerGL*)
rx::SamplerGL::getSamplerID() const
rx::SamplerGL::syncState(gl::Context const*)
rx::SamplerGL::~SamplerGL()
rx::SamplerImpl::syncState(gl::Context const*)
rx::SamplerNULL::SamplerNULL(gl::SamplerState const&)
rx::SamplerNULL::~SamplerNULL()
rx::SamplerVk::SamplerVk(gl::SamplerState const&)
rx::SamplerVk::~SamplerVk()
rx::ShaderGL::ShaderGL(gl::ShaderState const&, unsigned int, rx::MultiviewImplementationTypeGL, rx::FunctionsGL const*)
rx::ShaderGL::destroy()
rx::ShaderGL::getDebugInfo() const
rx::ShaderGL::getShaderID() const
rx::ShaderGL::postTranslateCompile(gl::ShCompilerInstance*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
rx::ShaderGL::prepareSourceAndReturnOptions(gl::Context const*, std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
rx::ShaderGL::~ShaderGL()
rx::ShaderImpl::destroy()
rx::ShaderNULL::ShaderNULL(gl::ShaderState const&)
rx::ShaderNULL::getDebugInfo() const
rx::ShaderNULL::postTranslateCompile(gl::ShCompilerInstance*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
rx::ShaderNULL::prepareSourceAndReturnOptions(gl::Context const*, std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
rx::ShaderNULL::~ShaderNULL()
rx::ShaderVk::ShaderVk(gl::ShaderState const&)
rx::ShaderVk::getDebugInfo() const
rx::ShaderVk::postTranslateCompile(gl::ShCompilerInstance*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
rx::ShaderVk::prepareSourceAndReturnOptions(gl::Context const*, std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*)
rx::ShaderVk::~ShaderVk()
rx::ShouldApplyLastRowPaddingWorkaround(rx::ContextGL*, gl::Extents const&, gl::PixelStoreStateBase const&, gl::Buffer const*, unsigned int, unsigned int, bool, void const*, bool*)
rx::ShouldUseDebugLayers(egl::AttributeMap const&)
rx::StandardQueryGL::StandardQueryGL(gl::QueryType, rx::FunctionsGL const*, rx::StateManagerGL*)
rx::StandardQueryGL::begin(gl::Context const*)
rx::StandardQueryGL::end(gl::Context const*)
rx::StandardQueryGL::flush(gl::Context const*, bool)
rx::StandardQueryGL::getResult(gl::Context const*, int*)
rx::StandardQueryGL::getResult(gl::Context const*, long*)
rx::StandardQueryGL::getResult(gl::Context const*, unsigned int*)
rx::StandardQueryGL::getResult(gl::Context const*, unsigned long*)
rx::StandardQueryGL::isResultAvailable(gl::Context const*, bool*)
rx::StandardQueryGL::pause(gl::Context const*)
rx::StandardQueryGL::queryCounter(gl::Context const*)
rx::StandardQueryGL::resume(gl::Context const*)
rx::StandardQueryGL::~StandardQueryGL()
rx::StateManagerGL::StateManagerGL(rx::FunctionsGL const*, gl::Caps const&, gl::Extensions const&)
rx::StateManagerGL::activeTexture(unsigned long)
rx::StateManagerGL::applyViewportOffsetsAndSetScissors(gl::Rectangle const&, gl::Framebuffer const&)
rx::StateManagerGL::applyViewportOffsetsAndSetViewports(gl::Rectangle const&, gl::Framebuffer const&)
rx::StateManagerGL::beginQuery(gl::QueryType, rx::QueryGL*, unsigned int)
rx::StateManagerGL::bindBuffer(gl::BufferBinding, unsigned int)
rx::StateManagerGL::bindFramebuffer(unsigned int, unsigned int)
rx::StateManagerGL::bindRenderbuffer(unsigned int, unsigned int)
rx::StateManagerGL::bindSampler(unsigned long, unsigned int)
rx::StateManagerGL::bindTexture(gl::TextureType, unsigned int)
rx::StateManagerGL::bindTransformFeedback(unsigned int, unsigned int)
rx::StateManagerGL::bindVertexArray(unsigned int, unsigned int)
rx::StateManagerGL::deleteBuffer(unsigned int)
rx::StateManagerGL::deleteFramebuffer(unsigned int)
rx::StateManagerGL::deleteProgram(unsigned int)
rx::StateManagerGL::deleteRenderbuffer(unsigned int)
rx::StateManagerGL::deleteSampler(unsigned int)
rx::StateManagerGL::deleteTexture(unsigned int)
rx::StateManagerGL::deleteTransformFeedback(unsigned int)
rx::StateManagerGL::deleteVertexArray(unsigned int)
rx::StateManagerGL::endQuery(gl::QueryType, rx::QueryGL*, unsigned int)
rx::StateManagerGL::forceUseProgram(unsigned int)
rx::StateManagerGL::onMakeCurrent(gl::Context const*)
rx::StateManagerGL::onTransformFeedbackStateChange()
rx::StateManagerGL::pauseAllQueries(gl::Context const*)
rx::StateManagerGL::pauseQuery(gl::Context const*, gl::QueryType)
rx::StateManagerGL::pauseTransformFeedback()
rx::StateManagerGL::resumeAllQueries(gl::Context const*)
rx::StateManagerGL::resumeQuery(gl::Context const*, gl::QueryType)
rx::StateManagerGL::setBlendEnabled(bool)
rx::StateManagerGL::setClearColor(angle::Color<float> const&)
rx::StateManagerGL::setClearDepth(float)
rx::StateManagerGL::setClearStencil(int)
rx::StateManagerGL::setColorMask(bool, bool, bool, bool)
rx::StateManagerGL::setCullFaceEnabled(bool)
rx::StateManagerGL::setDepthMask(bool)
rx::StateManagerGL::setDepthRange(float, float)
rx::StateManagerGL::setDepthTestEnabled(bool)
rx::StateManagerGL::setDispatchComputeState(gl::Context const*)
rx::StateManagerGL::setDrawArraysState(gl::Context const*, int, int, int)
rx::StateManagerGL::setDrawElementsState(gl::Context const*, int, unsigned int, void const*, int, void const**)
rx::StateManagerGL::setDrawIndirectState(gl::Context const*)
rx::StateManagerGL::setFramebufferSRGBEnabled(gl::Context const*, bool)
rx::StateManagerGL::setFramebufferSRGBEnabledForFramebuffer(gl::Context const*, bool, rx::FramebufferGL const*)
rx::StateManagerGL::setGenericShaderState(gl::Context const*)
rx::StateManagerGL::setPixelPackBuffer(gl::Buffer const*)
rx::StateManagerGL::setPixelPackState(gl::PixelPackState const&)
rx::StateManagerGL::setPixelUnpackBuffer(gl::Buffer const*)
rx::StateManagerGL::setPixelUnpackState(gl::PixelUnpackState const&)
rx::StateManagerGL::setPolygonOffsetFillEnabled(bool)
rx::StateManagerGL::setRasterizerDiscardEnabled(bool)
rx::StateManagerGL::setSampleAlphaToCoverageEnabled(bool)
rx::StateManagerGL::setSampleCoverageEnabled(bool)
rx::StateManagerGL::setScissorIndexed(unsigned int, gl::Rectangle const&)
rx::StateManagerGL::setScissorTestEnabled(bool)
rx::StateManagerGL::setSideBySide(bool)
rx::StateManagerGL::setStencilTestEnabled(bool)
rx::StateManagerGL::setViewport(gl::Rectangle const&)
rx::StateManagerGL::setViewportArrayv(unsigned int, std::__1::vector<gl::Rectangle, std::__1::allocator<gl::Rectangle> > const&)
rx::StateManagerGL::setViewportOffsets(std::__1::vector<gl::Offset, std::__1::allocator<gl::Offset> > const&)
rx::StateManagerGL::syncSamplersState(gl::Context const*)
rx::StateManagerGL::syncState(gl::Context const*, angle::BitSetT<63ul, unsigned long, unsigned long> const&, angle::BitSetT<63ul, unsigned long, unsigned long> const&)
rx::StateManagerGL::syncTransformFeedbackState(gl::Context const*)
rx::StateManagerGL::updateMultiviewBaseViewLayerIndexUniform(gl::Program const*, gl::FramebufferState const&) const
rx::StateManagerGL::updateProgramAtomicCounterBufferBindings(gl::Context const*)
rx::StateManagerGL::updateProgramImageBindings(gl::Context const*)
rx::StateManagerGL::updateProgramStorageBufferBindings(gl::Context const*)
rx::StateManagerGL::updateProgramTextureBindings(gl::Context const*)
rx::StateManagerGL::updateProgramUniformBufferBindings(gl::Context const*)
rx::StateManagerGL::useProgram(unsigned int)
rx::StateManagerGL::~StateManagerGL()
rx::SurfaceGL::SurfaceGL(egl::SurfaceState const&)
rx::SurfaceGL::createDefaultFramebuffer(gl::Context const*, gl::FramebufferState const&)
rx::SurfaceGL::getSyncValues(unsigned long*, unsigned long*, unsigned long*)
rx::SurfaceGL::initializeContents(gl::Context const*, gl::ImageIndex const&)
rx::SurfaceGL::unMakeCurrent()
rx::SurfaceGL::~SurfaceGL()
rx::SurfaceImpl::SurfaceImpl(egl::SurfaceState const&)
rx::SurfaceImpl::destroy(egl::Display const*)
rx::SurfaceImpl::getD3DTextureColorFormat() const
rx::SurfaceImpl::setFixedHeight(int)
rx::SurfaceImpl::setFixedWidth(int)
rx::SurfaceImpl::setPresentationTime(long)
rx::SurfaceImpl::swapWithDamage(gl::Context const*, int*, int)
rx::SurfaceImpl::~SurfaceImpl()
rx::SurfaceNULL::SurfaceNULL(egl::SurfaceState const&)
rx::SurfaceNULL::bindTexImage(gl::Context const*, gl::Texture*, int)
rx::SurfaceNULL::createDefaultFramebuffer(gl::Context const*, gl::FramebufferState const&)
rx::SurfaceNULL::getHeight() const
rx::SurfaceNULL::getSwapBehavior() const
rx::SurfaceNULL::getSyncValues(unsigned long*, unsigned long*, unsigned long*)
rx::SurfaceNULL::getWidth() const
rx::SurfaceNULL::initialize(egl::Display const*)
rx::SurfaceNULL::initializeContents(gl::Context const*, gl::ImageIndex const&)
rx::SurfaceNULL::isPostSubBufferSupported() const
rx::SurfaceNULL::postSubBuffer(gl::Context const*, int, int, int, int)
rx::SurfaceNULL::querySurfacePointerANGLE(int, void**)
rx::SurfaceNULL::releaseTexImage(gl::Context const*, int)
rx::SurfaceNULL::setSwapInterval(int)
rx::SurfaceNULL::swap(gl::Context const*)
rx::SurfaceNULL::~SurfaceNULL()
rx::SwapControlData::SwapControlData()
rx::SyncGL::SyncGL(rx::FunctionsGL const*)
rx::SyncGL::clientWait(gl::Context const*, unsigned int, unsigned long, unsigned int*)
rx::SyncGL::getStatus(gl::Context const*, int*)
rx::SyncGL::serverWait(gl::Context const*, unsigned int, unsigned long)
rx::SyncGL::set(gl::Context const*, unsigned int, unsigned int)
rx::SyncGL::~SyncGL()
rx::SyncNULL::SyncNULL()
rx::SyncNULL::clientWait(gl::Context const*, unsigned int, unsigned long, unsigned int*)
rx::SyncNULL::getStatus(gl::Context const*, int*)
rx::SyncNULL::serverWait(gl::Context const*, unsigned int, unsigned long)
rx::SyncNULL::set(gl::Context const*, unsigned int, unsigned int)
rx::SyncNULL::~SyncNULL()
rx::SyncProviderGL::init(gl::Context const*, gl::QueryType)
rx::SyncProviderGLQuery::flush(gl::Context const*, bool, bool*)
rx::SyncProviderGLQuery::init(gl::Context const*, gl::QueryType)
rx::SyncProviderGLQuery::~SyncProviderGLQuery()
rx::SyncProviderGLSync::flush(gl::Context const*, bool, bool*)
rx::SyncProviderGLSync::~SyncProviderGLSync()
rx::SyncQueryGL::IsSupported(rx::FunctionsGL const*)
rx::SyncQueryGL::SyncQueryGL(gl::QueryType, rx::FunctionsGL const*)
rx::SyncQueryGL::begin(gl::Context const*)
rx::SyncQueryGL::end(gl::Context const*)
rx::SyncQueryGL::getResult(gl::Context const*, int*)
rx::SyncQueryGL::getResult(gl::Context const*, long*)
rx::SyncQueryGL::getResult(gl::Context const*, unsigned int*)
rx::SyncQueryGL::getResult(gl::Context const*, unsigned long*)
rx::SyncQueryGL::isResultAvailable(gl::Context const*, bool*)
rx::SyncQueryGL::pause(gl::Context const*)
rx::SyncQueryGL::queryCounter(gl::Context const*)
rx::SyncQueryGL::resume(gl::Context const*)
rx::SyncQueryGL::~SyncQueryGL()
rx::SyncVk::SyncVk()
rx::SyncVk::clientWait(gl::Context const*, unsigned int, unsigned long, unsigned int*)
rx::SyncVk::getStatus(gl::Context const*, int*)
rx::SyncVk::serverWait(gl::Context const*, unsigned int, unsigned long)
rx::SyncVk::set(gl::Context const*, unsigned int, unsigned int)
rx::SyncVk::~SyncVk()
rx::TextureGL::TextureGL(gl::TextureState const&, unsigned int)
rx::TextureGL::bindTexImage(gl::Context const*, egl::Surface*)
rx::TextureGL::copyImage(gl::Context const*, gl::ImageIndex const&, gl::Rectangle const&, unsigned int, gl::Framebuffer*)
rx::TextureGL::copySubImage(gl::Context const*, gl::ImageIndex const&, gl::Offset const&, gl::Rectangle const&, gl::Framebuffer*)
rx::TextureGL::copySubTexture(gl::Context const*, gl::ImageIndex const&, gl::Offset const&, unsigned long, gl::Box const&, bool, bool, bool, gl::Texture const*)
rx::TextureGL::copySubTextureHelper(gl::Context const*, gl::TextureTarget, unsigned long, gl::Offset const&, unsigned long, gl::Rectangle const&, gl::InternalFormat const&, bool, bool, bool, gl::Texture const*)
rx::TextureGL::copyTexture(gl::Context const*, gl::ImageIndex const&, unsigned int, unsigned int, unsigned long, bool, bool, bool, gl::Texture const*)
rx::TextureGL::generateMipmap(gl::Context const*)
rx::TextureGL::getType() const
rx::TextureGL::initializeContents(gl::Context const*, gl::ImageIndex const&)
rx::TextureGL::onDestroy(gl::Context const*)
rx::TextureGL::releaseTexImage(gl::Context const*)
rx::TextureGL::setBaseLevel(gl::Context const*, unsigned int)
rx::TextureGL::setCompressedImage(gl::Context const*, gl::ImageIndex const&, unsigned int, gl::Extents const&, gl::PixelUnpackState const&, unsigned long, unsigned char const*)
rx::TextureGL::setCompressedSubImage(gl::Context const*, gl::ImageIndex const&, gl::Box const&, unsigned int, gl::PixelUnpackState const&, unsigned long, unsigned char const*)
rx::TextureGL::setEGLImageTarget(gl::Context const*, gl::TextureType, egl::Image*)
rx::TextureGL::setImage(gl::Context const*, gl::ImageIndex const&, unsigned int, gl::Extents const&, unsigned int, unsigned int, gl::PixelUnpackState const&, unsigned char const*)
rx::TextureGL::setImageExternal(gl::Context const*, gl::TextureType, egl::Stream*, egl::Stream::GLTextureDescription const&)
rx::TextureGL::setImageHelper(gl::Context const*, gl::TextureTarget, unsigned long, unsigned int, gl::Extents const&, unsigned int, unsigned int, unsigned char const*)
rx::TextureGL::setLevelInfo(gl::Context const*, gl::TextureType, unsigned long, unsigned long, rx::LevelInfoGL const&)
rx::TextureGL::setMagFilter(gl::Context const*, unsigned int)
rx::TextureGL::setMinFilter(gl::Context const*, unsigned int)
rx::TextureGL::setStorage(gl::Context const*, gl::TextureType, unsigned long, unsigned int, gl::Extents const&)
rx::TextureGL::setStorageMultisample(gl::Context const*, gl::TextureType, int, int, gl::Extents const&, bool)
rx::TextureGL::setSubImage(gl::Context const*, gl::ImageIndex const&, gl::Box const&, unsigned int, unsigned int, gl::PixelUnpackState const&, gl::Buffer*, unsigned char const*)
rx::TextureGL::setSubImagePaddingWorkaround(gl::Context const*, gl::TextureTarget, unsigned long, gl::Box const&, unsigned int, unsigned int, gl::PixelUnpackState const&, gl::Buffer const*, unsigned char const*)
rx::TextureGL::setSubImageRowByRowWorkaround(gl::Context const*, gl::TextureTarget, unsigned long, gl::Box const&, unsigned int, unsigned int, gl::PixelUnpackState const&, gl::Buffer const*, unsigned char const*)
rx::TextureGL::setSwizzle(gl::Context const*, int*)
rx::TextureGL::syncState(gl::Context const*, angle::BitSetT<21ul, unsigned long, unsigned long> const&)
rx::TextureGL::syncTextureStateSwizzle(rx::FunctionsGL const*, unsigned int, unsigned int, unsigned int*)
rx::TextureGL::~TextureGL()
rx::TextureImpl::TextureImpl(gl::TextureState const&)
rx::TextureImpl::copy3DSubTexture(gl::Context const*, gl::TextureTarget, gl::Offset const&, unsigned long, unsigned long, gl::Box const&, bool, bool, bool, gl::Texture const*)
rx::TextureImpl::copy3DTexture(gl::Context const*, gl::TextureTarget, unsigned int, unsigned int, unsigned long, unsigned long, bool, bool, bool, gl::Texture const*)
rx::TextureImpl::copyCompressedTexture(gl::Context const*, gl::Texture const*)
rx::TextureImpl::copySubTexture(gl::Context const*, gl::ImageIndex const&, gl::Offset const&, unsigned long, gl::Box const&, bool, bool, bool, gl::Texture const*)
rx::TextureImpl::copyTexture(gl::Context const*, gl::ImageIndex const&, unsigned int, unsigned int, unsigned long, bool, bool, bool, gl::Texture const*)
rx::TextureImpl::onDestroy(gl::Context const*)
rx::TextureImpl::~TextureImpl()
rx::TextureNULL::TextureNULL(gl::TextureState const&)
rx::TextureNULL::bindTexImage(gl::Context const*, egl::Surface*)
rx::TextureNULL::copyImage(gl::Context const*, gl::ImageIndex const&, gl::Rectangle const&, unsigned int, gl::Framebuffer*)
rx::TextureNULL::copySubImage(gl::Context const*, gl::ImageIndex const&, gl::Offset const&, gl::Rectangle const&, gl::Framebuffer*)
rx::TextureNULL::generateMipmap(gl::Context const*)
rx::TextureNULL::initializeContents(gl::Context const*, gl::ImageIndex const&)
rx::TextureNULL::releaseTexImage(gl::Context const*)
rx::TextureNULL::setBaseLevel(gl::Context const*, unsigned int)
rx::TextureNULL::setCompressedImage(gl::Context const*, gl::ImageIndex const&, unsigned int, gl::Extents const&, gl::PixelUnpackState const&, unsigned long, unsigned char const*)
rx::TextureNULL::setCompressedSubImage(gl::Context const*, gl::ImageIndex const&, gl::Box const&, unsigned int, gl::PixelUnpackState const&, unsigned long, unsigned char const*)
rx::TextureNULL::setEGLImageTarget(gl::Context const*, gl::TextureType, egl::Image*)
rx::TextureNULL::setImage(gl::Context const*, gl::ImageIndex const&, unsigned int, gl::Extents const&, unsigned int, unsigned int, gl::PixelUnpackState const&, unsigned char const*)
rx::TextureNULL::setImageExternal(gl::Context const*, gl::TextureType, egl::Stream*, egl::Stream::GLTextureDescription const&)
rx::TextureNULL::setStorage(gl::Context const*, gl::TextureType, unsigned long, unsigned int, gl::Extents const&)
rx::TextureNULL::setStorageMultisample(gl::Context const*, gl::TextureType, int, int, gl::Extents const&, bool)
rx::TextureNULL::setSubImage(gl::Context const*, gl::ImageIndex const&, gl::Box const&, unsigned int, unsigned int, gl::PixelUnpackState const&, gl::Buffer*, unsigned char const*)
rx::TextureNULL::syncState(gl::Context const*, angle::BitSetT<21ul, unsigned long, unsigned long> const&)
rx::TextureNULL::~TextureNULL()
rx::TextureVk::TextureVk(gl::TextureState const&, rx::RendererVk*)
rx::TextureVk::bindTexImage(gl::Context const*, egl::Surface*)
rx::TextureVk::copyImage(gl::Context const*, gl::ImageIndex const&, gl::Rectangle const&, unsigned int, gl::Framebuffer*)
rx::TextureVk::copyImageDataToBuffer(rx::ContextVk*, unsigned long, unsigned int, gl::Rectangle const&, unsigned char**)
rx::TextureVk::copySubImage(gl::Context const*, gl::ImageIndex const&, gl::Offset const&, gl::Rectangle const&, gl::Framebuffer*)
rx::TextureVk::copySubImageImpl(gl::Context const*, gl::ImageIndex const&, gl::Offset const&, gl::Rectangle const&, gl::InternalFormat const&, gl::Framebuffer*)
rx::TextureVk::copySubTexture(gl::Context const*, gl::ImageIndex const&, gl::Offset const&, unsigned long, gl::Box const&, bool, bool, bool, gl::Texture const*)
rx::TextureVk::copySubTextureImpl(rx::ContextVk*, gl::ImageIndex const&, gl::Offset const&, gl::InternalFormat const&, unsigned long, gl::Rectangle const&, bool, bool, bool, rx::TextureVk*)
rx::TextureVk::copyTexture(gl::Context const*, gl::ImageIndex const&, unsigned int, unsigned int, unsigned long, bool, bool, bool, gl::Texture const*)
rx::TextureVk::ensureImageInitialized(rx::ContextVk*)
rx::TextureVk::generateMipmap(gl::Context const*)
rx::TextureVk::generateMipmapLevelsWithCPU(rx::ContextVk*, angle::Format const&, unsigned int, unsigned int, unsigned int, unsigned long, unsigned long, unsigned long, unsigned char*)
rx::TextureVk::generateMipmapsWithCPU(gl::Context const*)
rx::TextureVk::getAttachmentRenderTarget(gl::Context const*, unsigned int, gl::ImageIndex const&, rx::FramebufferAttachmentRenderTarget**)
rx::TextureVk::getImageView() const
rx::TextureVk::getSampler() const
rx::TextureVk::initCubeMapRenderTargets(rx::ContextVk*)
rx::TextureVk::initImage(rx::ContextVk*, rx::vk::Format const&, gl::Extents const&, unsigned int, rx::vk::CommandBuffer*)
rx::TextureVk::initializeContents(gl::Context const*, gl::ImageIndex const&)
rx::TextureVk::onDestroy(gl::Context const*)
rx::TextureVk::redefineImage(gl::Context const*, gl::ImageIndex const&, gl::InternalFormat const&, gl::Extents const&)
rx::TextureVk::releaseImage(gl::Context const*, rx::RendererVk*)
rx::TextureVk::releaseTexImage(gl::Context const*)
rx::TextureVk::setBaseLevel(gl::Context const*, unsigned int)
rx::TextureVk::setCompressedImage(gl::Context const*, gl::ImageIndex const&, unsigned int, gl::Extents const&, gl::PixelUnpackState const&, unsigned long, unsigned char const*)
rx::TextureVk::setCompressedSubImage(gl::Context const*, gl::ImageIndex const&, gl::Box const&, unsigned int, gl::PixelUnpackState const&, unsigned long, unsigned char const*)
rx::TextureVk::setEGLImageTarget(gl::Context const*, gl::TextureType, egl::Image*)
rx::TextureVk::setImage(gl::Context const*, gl::ImageIndex const&, unsigned int, gl::Extents const&, unsigned int, unsigned int, gl::PixelUnpackState const&, unsigned char const*)
rx::TextureVk::setImageExternal(gl::Context const*, gl::TextureType, egl::Stream*, egl::Stream::GLTextureDescription const&)
rx::TextureVk::setStorage(gl::Context const*, gl::TextureType, unsigned long, unsigned int, gl::Extents const&)
rx::TextureVk::setStorageMultisample(gl::Context const*, gl::TextureType, int, int, gl::Extents const&, bool)
rx::TextureVk::setSubImage(gl::Context const*, gl::ImageIndex const&, gl::Box const&, unsigned int, unsigned int, gl::PixelUnpackState const&, gl::Buffer*, unsigned char const*)
rx::TextureVk::syncState(gl::Context const*, angle::BitSetT<21ul, unsigned long, unsigned long> const&)
rx::TextureVk::~TextureVk()
rx::TransformFeedbackGL::TransformFeedbackGL(gl::TransformFeedbackState const&, rx::FunctionsGL const*, rx::StateManagerGL*)
rx::TransformFeedbackGL::begin(gl::PrimitiveMode)
rx::TransformFeedbackGL::bindGenericBuffer(gl::BindingPointer<gl::Buffer> const&)
rx::TransformFeedbackGL::bindIndexedBuffer(unsigned long, gl::OffsetBindingPointer<gl::Buffer> const&)
rx::TransformFeedbackGL::end()
rx::TransformFeedbackGL::getTransformFeedbackID() const
rx::TransformFeedbackGL::pause()
rx::TransformFeedbackGL::resume()
rx::TransformFeedbackGL::syncActiveState(bool, gl::PrimitiveMode) const
rx::TransformFeedbackGL::syncPausedState(bool) const
rx::TransformFeedbackGL::~TransformFeedbackGL()
rx::TransformFeedbackNULL::TransformFeedbackNULL(gl::TransformFeedbackState const&)
rx::TransformFeedbackNULL::begin(gl::PrimitiveMode)
rx::TransformFeedbackNULL::bindGenericBuffer(gl::BindingPointer<gl::Buffer> const&)
rx::TransformFeedbackNULL::bindIndexedBuffer(unsigned long, gl::OffsetBindingPointer<gl::Buffer> const&)
rx::TransformFeedbackNULL::end()
rx::TransformFeedbackNULL::pause()
rx::TransformFeedbackNULL::resume()
rx::TransformFeedbackNULL::~TransformFeedbackNULL()
rx::TransformFeedbackVk::TransformFeedbackVk(gl::TransformFeedbackState const&)
rx::TransformFeedbackVk::begin(gl::PrimitiveMode)
rx::TransformFeedbackVk::bindGenericBuffer(gl::BindingPointer<gl::Buffer> const&)
rx::TransformFeedbackVk::bindIndexedBuffer(unsigned long, gl::OffsetBindingPointer<gl::Buffer> const&)
rx::TransformFeedbackVk::end()
rx::TransformFeedbackVk::pause()
rx::TransformFeedbackVk::resume()
rx::TransformFeedbackVk::~TransformFeedbackVk()
rx::VertexArrayGL::VertexArrayGL(gl::VertexArrayState const&, rx::FunctionsGL const*, rx::StateManagerGL*)
rx::VertexArrayGL::applyActiveAttribLocationsMask(angle::BitSetT<16ul, unsigned long, unsigned long> const&)
rx::VertexArrayGL::applyNumViewsToDivisor(int)
rx::VertexArrayGL::destroy(gl::Context const*)
rx::VertexArrayGL::getAppliedElementArrayBufferID() const
rx::VertexArrayGL::getVertexArrayID() const
rx::VertexArrayGL::streamAttributes(gl::Context const*, angle::BitSetT<16ul, unsigned long, unsigned long> const&, int, gl::IndexRange const&) const
rx::VertexArrayGL::syncDirtyAttrib(gl::Context const*, unsigned long, angle::BitSetT<4ul, unsigned long, unsigned long> const&)
rx::VertexArrayGL::syncDrawArraysState(gl::Context const*, angle::BitSetT<16ul, unsigned long, unsigned long> const&, int, int, int) const
rx::VertexArrayGL::syncDrawElementsState(gl::Context const*, angle::BitSetT<16ul, unsigned long, unsigned long> const&, int, unsigned int, void const*, int, bool, void const**) const
rx::VertexArrayGL::syncIndexData(gl::Context const*, int, unsigned int, void const*, bool, bool, gl::IndexRange*, void const**) const
rx::VertexArrayGL::syncState(gl::Context const*, angle::BitSetT<50ul, unsigned long, unsigned long> const&, std::__1::array<angle::BitSetT<4ul, unsigned long, unsigned long>, 16ul> const&, std::__1::array<angle::BitSetT<2ul, unsigned long, unsigned long>, 16ul> const&)
rx::VertexArrayGL::updateAttribFormat(unsigned long)
rx::VertexArrayGL::updateAttribPointer(gl::Context const*, unsigned long)
rx::VertexArrayGL::~VertexArrayGL()
rx::VertexArrayImpl::destroy(gl::Context const*)
rx::VertexArrayImpl::syncState(gl::Context const*, angle::BitSetT<50ul, unsigned long, unsigned long> const&, std::__1::array<angle::BitSetT<4ul, unsigned long, unsigned long>, 16ul> const&, std::__1::array<angle::BitSetT<2ul, unsigned long, unsigned long>, 16ul> const&)
rx::VertexArrayImpl::~VertexArrayImpl()
rx::VertexArrayNULL::VertexArrayNULL(gl::VertexArrayState const&)
rx::VertexArrayNULL::~VertexArrayNULL()
rx::VertexArrayVk::VertexArrayVk(gl::VertexArrayState const&, rx::RendererVk*)
rx::VertexArrayVk::convertVertexBuffer(rx::ContextVk*, rx::BufferVk*, gl::VertexBinding const&, unsigned long)
rx::VertexArrayVk::destroy(gl::Context const*)
rx::VertexArrayVk::getPackedInputDescriptions(rx::vk::PipelineDesc*)
rx::VertexArrayVk::handleLineLoop(rx::ContextVk*, gl::DrawCallParams const&)
rx::VertexArrayVk::syncDirtyAttrib(rx::ContextVk*, gl::VertexAttribute const&, gl::VertexBinding const&, unsigned long)
rx::VertexArrayVk::syncState(gl::Context const*, angle::BitSetT<50ul, unsigned long, unsigned long> const&, std::__1::array<angle::BitSetT<4ul, unsigned long, unsigned long>, 16ul> const&, std::__1::array<angle::BitSetT<2ul, unsigned long, unsigned long>, 16ul> const&)
rx::VertexArrayVk::updateClientAttribs(gl::Context const*, gl::DrawCallParams const&)
rx::VertexArrayVk::updateDefaultAttrib(rx::RendererVk*, unsigned long, VkBuffer_T*, unsigned int)
rx::VertexArrayVk::updateIndexTranslation(rx::ContextVk*, gl::DrawCallParams const&)
rx::VertexArrayVk::~VertexArrayVk()
rx::VulkanResultString(VkResult)
rx::WindowSurfaceGLX::WindowSurfaceGLX(egl::SurfaceState const&, rx::FunctionsGLX const&, rx::DisplayGLX*, unsigned long, _XDisplay*, void*)
rx::WindowSurfaceGLX::bindTexImage(gl::Context const*, gl::Texture*, int)
rx::WindowSurfaceGLX::checkForResize()
rx::WindowSurfaceGLX::getDrawable() const
rx::WindowSurfaceGLX::getHeight() const
rx::WindowSurfaceGLX::getSwapBehavior() const
rx::WindowSurfaceGLX::getWidth() const
rx::WindowSurfaceGLX::initialize(egl::Display const*)
rx::WindowSurfaceGLX::isPostSubBufferSupported() const
rx::WindowSurfaceGLX::makeCurrent()
rx::WindowSurfaceGLX::postSubBuffer(gl::Context const*, int, int, int, int)
rx::WindowSurfaceGLX::querySurfacePointerANGLE(int, void**)
rx::WindowSurfaceGLX::releaseTexImage(gl::Context const*, int)
rx::WindowSurfaceGLX::setSwapInterval(int)
rx::WindowSurfaceGLX::swap(gl::Context const*)
rx::WindowSurfaceGLX::~WindowSurfaceGLX()
rx::WindowSurfaceVk::WindowSurfaceVk(egl::SurfaceState const&, unsigned long, int, int)
rx::WindowSurfaceVk::bindTexImage(gl::Context const*, gl::Texture*, int)
rx::WindowSurfaceVk::createDefaultFramebuffer(gl::Context const*, gl::FramebufferState const&)
rx::WindowSurfaceVk::destroy(egl::Display const*)
rx::WindowSurfaceVk::getAttachmentRenderTarget(gl::Context const*, unsigned int, gl::ImageIndex const&, rx::FramebufferAttachmentRenderTarget**)
rx::WindowSurfaceVk::getCurrentFramebuffer(rx::vk::Context*, rx::vk::RenderPass const&, rx::vk::Framebuffer**)
rx::WindowSurfaceVk::getHeight() const
rx::WindowSurfaceVk::getSwapBehavior() const
rx::WindowSurfaceVk::getSyncValues(unsigned long*, unsigned long*, unsigned long*)
rx::WindowSurfaceVk::getWidth() const
rx::WindowSurfaceVk::initialize(egl::Display const*)
rx::WindowSurfaceVk::initializeContents(gl::Context const*, gl::ImageIndex const&)
rx::WindowSurfaceVk::initializeImpl(rx::DisplayVk*)
rx::WindowSurfaceVk::isPostSubBufferSupported() const
rx::WindowSurfaceVk::postSubBuffer(gl::Context const*, int, int, int, int)
rx::WindowSurfaceVk::querySurfacePointerANGLE(int, void**)
rx::WindowSurfaceVk::releaseTexImage(gl::Context const*, int)
rx::WindowSurfaceVk::setSwapInterval(int)
rx::WindowSurfaceVk::swap(gl::Context const*)
rx::WindowSurfaceVk::swapImpl(rx::DisplayVk*)
rx::WindowSurfaceVk::swapWithDamage(gl::Context const*, int*, int)
rx::WindowSurfaceVk::~WindowSurfaceVk()
rx::WindowSurfaceVkXcb::WindowSurfaceVkXcb(egl::SurfaceState const&, unsigned long, int, int, xcb_connection_t*)
rx::WindowSurfaceVkXcb::createSurfaceVk(rx::vk::Context*, gl::Extents*)
rx::WindowSurfaceVkXcb::~WindowSurfaceVkXcb()
rx::egl_vk::GenerateConfigs(unsigned int const*, unsigned long, unsigned int const*, unsigned long, int const*, unsigned long, rx::DisplayVk*)
rx::egl_vk::kConfigDepthStencilFormats
rx::g_VkICDPathEnv
rx::g_VkLoaderLayersPathEnv
rx::g_VkStdValidationLayerName
rx::g_VkValidationLayerNames
rx::glActiveShaderProgramNULL(unsigned int, unsigned int)
rx::glActiveTextureNULL(unsigned int)
rx::glAttachShaderNULL(unsigned int, unsigned int)
rx::glBeginConditionalRenderNULL(unsigned int, unsigned int)
rx::glBeginQueryIndexedNULL(unsigned int, unsigned int, unsigned int)
rx::glBeginQueryNULL(unsigned int, unsigned int)
rx::glBeginTransformFeedbackNULL(unsigned int)
rx::glBindAttribLocationNULL(unsigned int, unsigned int, char const*)
rx::glBindBufferBaseNULL(unsigned int, unsigned int, unsigned int)
rx::glBindBufferNULL(unsigned int, unsigned int)
rx::glBindBufferRangeNULL(unsigned int, unsigned int, unsigned int, long, long)
rx::glBindBuffersBaseNULL(unsigned int, unsigned int, int, unsigned int const*)
rx::glBindBuffersRangeNULL(unsigned int, unsigned int, int, unsigned int const*, long const*, long const*)
rx::glBindFragDataLocationIndexedNULL(unsigned int, unsigned int, unsigned int, char const*)
rx::glBindFragDataLocationNULL(unsigned int, unsigned int, char const*)
rx::glBindFramebufferNULL(unsigned int, unsigned int)
rx::glBindImageTextureNULL(unsigned int, unsigned int, int, unsigned char, int, unsigned int, unsigned int)
rx::glBindImageTexturesNULL(unsigned int, int, unsigned int const*)
rx::glBindProgramPipelineNULL(unsigned int)
rx::glBindRenderbufferNULL(unsigned int, unsigned int)
rx::glBindSamplerNULL(unsigned int, unsigned int)
rx::glBindSamplersNULL(unsigned int, int, unsigned int const*)
rx::glBindTextureNULL(unsigned int, unsigned int)
rx::glBindTextureUnitNULL(unsigned int, unsigned int)
rx::glBindTexturesNULL(unsigned int, int, unsigned int const*)
rx::glBindTransformFeedbackNULL(unsigned int, unsigned int)
rx::glBindVertexArrayNULL(unsigned int)
rx::glBindVertexBufferNULL(unsigned int, unsigned int, long, int)
rx::glBindVertexBuffersNULL(unsigned int, int, unsigned int const*, long const*, int const*)
rx::glBlendBarrierNULL()
rx::glBlendColorNULL(float, float, float, float)
rx::glBlendEquationNULL(unsigned int)
rx::glBlendEquationSeparateNULL(unsigned int, unsigned int)
rx::glBlendEquationSeparateiNULL(unsigned int, unsigned int, unsigned int)
rx::glBlendEquationiNULL(unsigned int, unsigned int)
rx::glBlendFuncNULL(unsigned int, unsigned int)
rx::glBlendFuncSeparateNULL(unsigned int, unsigned int, unsigned int, unsigned int)
rx::glBlendFuncSeparateiNULL(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
rx::glBlendFunciNULL(unsigned int, unsigned int, unsigned int)
rx::glBlitFramebufferNULL(int, int, int, int, int, int, int, int, unsigned int, unsigned int)
rx::glBlitNamedFramebufferNULL(unsigned int, unsigned int, int, int, int, int, int, int, int, int, unsigned int, unsigned int)
rx::glBufferDataNULL(unsigned int, long, void const*, unsigned int)
rx::glBufferStorageNULL(unsigned int, long, void const*, unsigned int)
rx::glBufferSubDataNULL(unsigned int, long, long, void const*)
rx::glCheckFramebufferStatusNULL(unsigned int)
rx::glCheckNamedFramebufferStatusNULL(unsigned int, unsigned int)
rx::glClampColorNULL(unsigned int, unsigned int)
rx::glClearBufferDataNULL(unsigned int, unsigned int, unsigned int, unsigned int, void const*)
rx::glClearBufferSubDataNULL(unsigned int, unsigned int, long, long, unsigned int, unsigned int, void const*)
rx::glClearBufferfiNULL(unsigned int, int, float, int)
rx::glClearBufferfvNULL(unsigned int, int, float const*)
rx::glClearBufferivNULL(unsigned int, int, int const*)
rx::glClearBufferuivNULL(unsigned int, int, unsigned int const*)
rx::glClearColorNULL(float, float, float, float)
rx::glClearDepthNULL(double)
rx::glClearDepthfNULL(float)
rx::glClearNULL(unsigned int)
rx::glClearNamedBufferDataNULL(unsigned int, unsigned int, unsigned int, unsigned int, void const*)
rx::glClearNamedBufferSubDataNULL(unsigned int, unsigned int, long, long, unsigned int, unsigned int, void const*)
rx::glClearNamedFramebufferfiNULL(unsigned int, unsigned int, int, float, int)
rx::glClearNamedFramebufferfvNULL(unsigned int, unsigned int, int, float const*)
rx::glClearNamedFramebufferivNULL(unsigned int, unsigned int, int, int const*)
rx::glClearNamedFramebufferuivNULL(unsigned int, unsigned int, int, unsigned int const*)
rx::glClearStencilNULL(int)
rx::glClearTexImageNULL(unsigned int, int, unsigned int, unsigned int, void const*)
rx::glClearTexSubImageNULL(unsigned int, int, int, int, int, int, int, int, unsigned int, unsigned int, void const*)
rx::glClientWaitSyncNULL(__GLsync*, unsigned int, unsigned long)
rx::glClipControlNULL(unsigned int, unsigned int)
rx::glColorMaskNULL(unsigned char, unsigned char, unsigned char, unsigned char)
rx::glColorMaskiNULL(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)
rx::glCompileShaderNULL(unsigned int)
rx::glCompressedTexImage1DNULL(unsigned int, int, unsigned int, int, int, int, void const*)
rx::glCompressedTexImage2DNULL(unsigned int, int, unsigned int, int, int, int, int, void const*)
rx::glCompressedTexImage3DNULL(unsigned int, int, unsigned int, int, int, int, int, int, void const*)
rx::glCompressedTexSubImage1DNULL(unsigned int, int, int, int, unsigned int, int, void const*)
rx::glCompressedTexSubImage2DNULL(unsigned int, int, int, int, int, int, unsigned int, int, void const*)
rx::glCompressedTexSubImage3DNULL(unsigned int, int, int, int, int, int, int, int, unsigned int, int, void const*)
rx::glCompressedTextureSubImage1DNULL(unsigned int, int, int, int, unsigned int, int, void const*)
rx::glCompressedTextureSubImage2DNULL(unsigned int, int, int, int, int, int, unsigned int, int, void const*)
rx::glCompressedTextureSubImage3DNULL(unsigned int, int, int, int, int, int, int, int, unsigned int, int, void const*)
rx::glCopyBufferSubDataNULL(unsigned int, unsigned int, long, long, long)
rx::glCopyImageSubDataNULL(unsigned int, unsigned int, int, int, int, int, unsigned int, unsigned int, int, int, int, int, int, int, int)
rx::glCopyNamedBufferSubDataNULL(unsigned int, unsigned int, long, long, long)
rx::glCopyTexImage1DNULL(unsigned int, int, unsigned int, int, int, int, int)
rx::glCopyTexImage2DNULL(unsigned int, int, unsigned int, int, int, int, int, int)
rx::glCopyTexSubImage1DNULL(unsigned int, int, int, int, int, int)
rx::glCopyTexSubImage2DNULL(unsigned int, int, int, int, int, int, int, int)
rx::glCopyTexSubImage3DNULL(unsigned int, int, int, int, int, int, int, int, int)
rx::glCopyTextureSubImage1DNULL(unsigned int, int, int, int, int, int)
rx::glCopyTextureSubImage2DNULL(unsigned int, int, int, int, int, int, int, int)
rx::glCopyTextureSubImage3DNULL(unsigned int, int, int, int, int, int, int, int, int)
rx::glCoverFillPathInstancedNVNULL(int, unsigned int, void const*, unsigned int, unsigned int, unsigned int, float const*)
rx::glCoverFillPathNVNULL(unsigned int, unsigned int)
rx::glCoverStrokePathInstancedNVNULL(int, unsigned int, void const*, unsigned int, unsigned int, unsigned int, float const*)
rx::glCoverStrokePathNVNULL(unsigned int, unsigned int)
rx::glCoverageModulationNVNULL(unsigned int)
rx::glCreateBuffersNULL(int, unsigned int*)
rx::glCreateFramebuffersNULL(int, unsigned int*)
rx::glCreateProgramNULL()
rx::glCreateProgramPipelinesNULL(int, unsigned int*)
rx::glCreateQueriesNULL(unsigned int, int, unsigned int*)
rx::glCreateRenderbuffersNULL(int, unsigned int*)
rx::glCreateSamplersNULL(int, unsigned int*)
rx::glCreateShaderNULL(unsigned int)
rx::glCreateShaderProgramvNULL(unsigned int, int, char const* const*)
rx::glCreateTexturesNULL(unsigned int, int, unsigned int*)
rx::glCreateTransformFeedbacksNULL(int, unsigned int*)
rx::glCreateVertexArraysNULL(int, unsigned int*)
rx::glCullFaceNULL(unsigned int)
rx::glDebugMessageCallbackNULL(void (*)(unsigned int, unsigned int, unsigned int, unsigned int, int, char const*, void const*), void const*)
rx::glDebugMessageControlNULL(unsigned int, unsigned int, unsigned int, int, unsigned int const*, unsigned char)
rx::glDebugMessageInsertNULL(unsigned int, unsigned int, unsigned int, unsigned int, int, char const*)
rx::glDeleteBuffersNULL(int, unsigned int const*)
rx::glDeleteFencesNVNULL(int, unsigned int const*)
rx::glDeleteFramebuffersNULL(int, unsigned int const*)
rx::glDeletePathsNVNULL(unsigned int, int)
rx::glDeleteProgramNULL(unsigned int)
rx::glDeleteProgramPipelinesNULL(int, unsigned int const*)
rx::glDeleteQueriesNULL(int, unsigned int const*)
rx::glDeleteRenderbuffersNULL(int, unsigned int const*)
rx::glDeleteSamplersNULL(int, unsigned int const*)
rx::glDeleteShaderNULL(unsigned int)
rx::glDeleteSyncNULL(__GLsync*)
rx::glDeleteTexturesNULL(int, unsigned int const*)
rx::glDeleteTransformFeedbacksNULL(int, unsigned int const*)
rx::glDeleteVertexArraysNULL(int, unsigned int const*)
rx::glDepthFuncNULL(unsigned int)
rx::glDepthMaskNULL(unsigned char)
rx::glDepthRangeArrayvNULL(unsigned int, int, double const*)
rx::glDepthRangeIndexedNULL(unsigned int, double, double)
rx::glDepthRangeNULL(double, double)
rx::glDepthRangefNULL(float, float)
rx::glDetachShaderNULL(unsigned int, unsigned int)
rx::glDisableNULL(unsigned int)
rx::glDisableVertexArrayAttribNULL(unsigned int, unsigned int)
rx::glDisableVertexAttribArrayNULL(unsigned int)
rx::glDisableiNULL(unsigned int, unsigned int)
rx::glDiscardFramebufferEXTNULL(unsigned int, int, unsigned int const*)
rx::glDispatchComputeIndirectNULL(long)
rx::glDispatchComputeNULL(unsigned int, unsigned int, unsigned int)
rx::glDrawArraysIndirectNULL(unsigned int, void const*)
rx::glDrawArraysInstancedBaseInstanceNULL(unsigned int, int, int, int, unsigned int)
rx::glDrawArraysInstancedNULL(unsigned int, int, int, int)
rx::glDrawArraysNULL(unsigned int, int, int)
rx::glDrawBufferNULL(unsigned int)
rx::glDrawBuffersNULL(int, unsigned int const*)
rx::glDrawElementsBaseVertexNULL(unsigned int, int, unsigned int, void const*, int)
rx::glDrawElementsIndirectNULL(unsigned int, unsigned int, void const*)
rx::glDrawElementsInstancedBaseInstanceNULL(unsigned int, int, unsigned int, void const*, int, unsigned int)
rx::glDrawElementsInstancedBaseVertexBaseInstanceNULL(unsigned int, int, unsigned int, void const*, int, int, unsigned int)
rx::glDrawElementsInstancedBaseVertexNULL(unsigned int, int, unsigned int, void const*, int, int)
rx::glDrawElementsInstancedNULL(unsigned int, int, unsigned int, void const*, int)
rx::glDrawElementsNULL(unsigned int, int, unsigned int, void const*)
rx::glDrawRangeElementsBaseVertexNULL(unsigned int, unsigned int, unsigned int, int, unsigned int, void const*, int)
rx::glDrawRangeElementsNULL(unsigned int, unsigned int, unsigned int, int, unsigned int, void const*)
rx::glDrawTransformFeedbackInstancedNULL(unsigned int, unsigned int, int)
rx::glDrawTransformFeedbackNULL(unsigned int, unsigned int)
rx::glDrawTransformFeedbackStreamInstancedNULL(unsigned int, unsigned int, unsigned int, int)
rx::glDrawTransformFeedbackStreamNULL(unsigned int, unsigned int, unsigned int)
rx::glEGLImageTargetRenderbufferStorageOESNULL(unsigned int, void*)
rx::glEGLImageTargetTexture2DOESNULL(unsigned int, void*)
rx::glEnableNULL(unsigned int)
rx::glEnableVertexArrayAttribNULL(unsigned int, unsigned int)
rx::glEnableVertexAttribArrayNULL(unsigned int)
rx::glEnableiNULL(unsigned int, unsigned int)
rx::glEndConditionalRenderNULL()
rx::glEndQueryIndexedNULL(unsigned int, unsigned int)
rx::glEndQueryNULL(unsigned int)
rx::glEndTransformFeedbackNULL()
rx::glFenceSyncNULL(unsigned int, unsigned int)
rx::glFinishFenceNVNULL(unsigned int)
rx::glFinishNULL()
rx::glFlushMappedBufferRangeNULL(unsigned int, long, long)
rx::glFlushMappedNamedBufferRangeNULL(unsigned int, long, long)
rx::glFlushNULL()
rx::glFramebufferParameteriNULL(unsigned int, unsigned int, int)
rx::glFramebufferRenderbufferNULL(unsigned int, unsigned int, unsigned int, unsigned int)
rx::glFramebufferTexture1DNULL(unsigned int, unsigned int, unsigned int, unsigned int, int)
rx::glFramebufferTexture2DNULL(unsigned int, unsigned int, unsigned int, unsigned int, int)
rx::glFramebufferTexture3DNULL(unsigned int, unsigned int, unsigned int, unsigned int, int, int)
rx::glFramebufferTextureLayerNULL(unsigned int, unsigned int, unsigned int, int, int)
rx::glFramebufferTextureNULL(unsigned int, unsigned int, unsigned int, int)
rx::glFrontFaceNULL(unsigned int)
rx::glGenBuffersNULL(int, unsigned int*)
rx::glGenFencesNVNULL(int, unsigned int*)
rx::glGenFramebuffersNULL(int, unsigned int*)
rx::glGenPathsNVNULL(int)
rx::glGenProgramPipelinesNULL(int, unsigned int*)
rx::glGenQueriesNULL(int, unsigned int*)
rx::glGenRenderbuffersNULL(int, unsigned int*)
rx::glGenSamplersNULL(int, unsigned int*)
rx::glGenTexturesNULL(int, unsigned int*)
rx::glGenTransformFeedbacksNULL(int, unsigned int*)
rx::glGenVertexArraysNULL(int, unsigned int*)
rx::glGenerateMipmapNULL(unsigned int)
rx::glGenerateTextureMipmapNULL(unsigned int)
rx::glGetActiveAtomicCounterBufferivNULL(unsigned int, unsigned int, unsigned int, int*)
rx::glGetActiveAttribNULL(unsigned int, unsigned int, int, int*, int*, unsigned int*, char*)
rx::glGetActiveSubroutineNameNULL(unsigned int, unsigned int, unsigned int, int, int*, char*)
rx::glGetActiveSubroutineUniformNameNULL(unsigned int, unsigned int, unsigned int, int, int*, char*)
rx::glGetActiveSubroutineUniformivNULL(unsigned int, unsigned int, unsigned int, unsigned int, int*)
rx::glGetActiveUniformBlockNameNULL(unsigned int, unsigned int, int, int*, char*)
rx::glGetActiveUniformBlockivNULL(unsigned int, unsigned int, unsigned int, int*)
rx::glGetActiveUniformNULL(unsigned int, unsigned int, int, int*, int*, unsigned int*, char*)
rx::glGetActiveUniformNameNULL(unsigned int, unsigned int, int, int*, char*)
rx::glGetActiveUniformsivNULL(unsigned int, int, unsigned int const*, unsigned int, int*)
rx::glGetAttachedShadersNULL(unsigned int, int, int*, unsigned int*)
rx::glGetAttribLocationNULL(unsigned int, char const*)
rx::glGetBooleani_vNULL(unsigned int, unsigned int, unsigned char*)
rx::glGetBooleanvNULL(unsigned int, unsigned char*)
rx::glGetBufferParameteri64vNULL(unsigned int, unsigned int, long*)
rx::glGetBufferParameterivNULL(unsigned int, unsigned int, int*)
rx::glGetBufferPointervNULL(unsigned int, unsigned int, void**)
rx::glGetBufferSubDataNULL(unsigned int, long, long, void*)
rx::glGetCompressedTexImageNULL(unsigned int, int, void*)
rx::glGetCompressedTextureImageNULL(unsigned int, int, int, void*)
rx::glGetCompressedTextureSubImageNULL(unsigned int, int, int, int, int, int, int, int, int, void*)
rx::glGetDebugMessageLogNULL(unsigned int, int, unsigned int*, unsigned int*, unsigned int*, unsigned int*, int*, char*)
rx::glGetDoublei_vNULL(unsigned int, unsigned int, double*)
rx::glGetDoublevNULL(unsigned int, double*)
rx::glGetErrorNULL()
rx::glGetFenceivNVNULL(unsigned int, unsigned int, int*)
rx::glGetFloati_vNULL(unsigned int, unsigned int, float*)
rx::glGetFloatvNULL(unsigned int, float*)
rx::glGetFragDataIndexNULL(unsigned int, char const*)
rx::glGetFragDataLocationNULL(unsigned int, char const*)
rx::glGetFramebufferAttachmentParameterivNULL(unsigned int, unsigned int, unsigned int, int*)
rx::glGetFramebufferParameterivNULL(unsigned int, unsigned int, int*)
rx::glGetGraphicsResetStatusNULL()
rx::glGetInteger64i_vNULL(unsigned int, unsigned int, long*)
rx::glGetInteger64vNULL(unsigned int, long*)
rx::glGetIntegeri_vNULL(unsigned int, unsigned int, int*)
rx::glGetIntegervNULL(unsigned int, int*)
rx::glGetInternalformatSampleivNVNULL(unsigned int, unsigned int, int, unsigned int, int, int*)
rx::glGetInternalformati64vNULL(unsigned int, unsigned int, unsigned int, int, long*)
rx::glGetInternalformativNULL(unsigned int, unsigned int, unsigned int, int, int*)
rx::glGetMultisamplefvNULL(unsigned int, unsigned int, float*)
rx::glGetNamedBufferParameteri64vNULL(unsigned int, unsigned int, long*)
rx::glGetNamedBufferParameterivNULL(unsigned int, unsigned int, int*)
rx::glGetNamedBufferPointervNULL(unsigned int, unsigned int, void**)
rx::glGetNamedBufferSubDataNULL(unsigned int, long, long, void*)
rx::glGetNamedFramebufferAttachmentParameterivNULL(unsigned int, unsigned int, unsigned int, int*)
rx::glGetNamedFramebufferParameterivNULL(unsigned int, unsigned int, int*)
rx::glGetNamedRenderbufferParameterivNULL(unsigned int, unsigned int, int*)
rx::glGetObjectLabelNULL(unsigned int, unsigned int, int, int*, char*)
rx::glGetObjectPtrLabelNULL(void const*, int, int*, char*)
rx::glGetPathParameterfvNVNULL(unsigned int, unsigned int, float*)
rx::glGetPathParameterivNVNULL(unsigned int, unsigned int, int*)
rx::glGetPointervNULL(unsigned int, void**)
rx::glGetProgramBinaryNULL(unsigned int, int, int*, unsigned int*, void*)
rx::glGetProgramInfoLogNULL(unsigned int, int, int*, char*)
rx::glGetProgramInterfaceivNULL(unsigned int, unsigned int, unsigned int, int*)
rx::glGetProgramPipelineInfoLogNULL(unsigned int, int, int*, char*)
rx::glGetProgramPipelineivNULL(unsigned int, unsigned int, int*)
rx::glGetProgramResourceIndexNULL(unsigned int, unsigned int, char const*)
rx::glGetProgramResourceLocationIndexNULL(unsigned int, unsigned int, char const*)
rx::glGetProgramResourceLocationNULL(unsigned int, unsigned int, char const*)
rx::glGetProgramResourceNameNULL(unsigned int, unsigned int, unsigned int, int, int*, char*)
rx::glGetProgramResourceivNULL(unsigned int, unsigned int, unsigned int, int, unsigned int const*, int, int*, int*)
rx::glGetProgramStageivNULL(unsigned int, unsigned int, unsigned int, int*)
rx::glGetProgramivNULL(unsigned int, unsigned int, int*)
rx::glGetQueryBufferObjecti64vNULL(unsigned int, unsigned int, unsigned int, long)
rx::glGetQueryBufferObjectivNULL(unsigned int, unsigned int, unsigned int, long)
rx::glGetQueryBufferObjectui64vNULL(unsigned int, unsigned int, unsigned int, long)
rx::glGetQueryBufferObjectuivNULL(unsigned int, unsigned int, unsigned int, long)
rx::glGetQueryIndexedivNULL(unsigned int, unsigned int, unsigned int, int*)
rx::glGetQueryObjecti64vNULL(unsigned int, unsigned int, long*)
rx::glGetQueryObjectivNULL(unsigned int, unsigned int, int*)
rx::glGetQueryObjectui64vNULL(unsigned int, unsigned int, unsigned long*)
rx::glGetQueryObjectuivNULL(unsigned int, unsigned int, unsigned int*)
rx::glGetQueryivNULL(unsigned int, unsigned int, int*)
rx::glGetRenderbufferParameterivNULL(unsigned int, unsigned int, int*)
rx::glGetSamplerParameterIivNULL(unsigned int, unsigned int, int*)
rx::glGetSamplerParameterIuivNULL(unsigned int, unsigned int, unsigned int*)
rx::glGetSamplerParameterfvNULL(unsigned int, unsigned int, float*)
rx::glGetSamplerParameterivNULL(unsigned int, unsigned int, int*)
rx::glGetShaderInfoLogNULL(unsigned int, int, int*, char*)
rx::glGetShaderPrecisionFormatNULL(unsigned int, unsigned int, int*, int*)
rx::glGetShaderSourceNULL(unsigned int, int, int*, char*)
rx::glGetShaderivNULL(unsigned int, unsigned int, int*)
rx::glGetStringNULL(unsigned int)
rx::glGetStringiNULL(unsigned int, unsigned int)
rx::glGetSubroutineIndexNULL(unsigned int, unsigned int, char const*)
rx::glGetSubroutineUniformLocationNULL(unsigned int, unsigned int, char const*)
rx::glGetSyncivNULL(__GLsync*, unsigned int, int, int*, int*)
rx::glGetTexImageNULL(unsigned int, int, unsigned int, unsigned int, void*)
rx::glGetTexLevelParameterfvNULL(unsigned int, int, unsigned int, float*)
rx::glGetTexLevelParameterivNULL(unsigned int, int, unsigned int, int*)
rx::glGetTexParameterIivNULL(unsigned int, unsigned int, int*)
rx::glGetTexParameterIuivNULL(unsigned int, unsigned int, unsigned int*)
rx::glGetTexParameterfvNULL(unsigned int, unsigned int, float*)
rx::glGetTexParameterivNULL(unsigned int, unsigned int, int*)
rx::glGetTextureImageNULL(unsigned int, int, unsigned int, unsigned int, int, void*)
rx::glGetTextureLevelParameterfvNULL(unsigned int, int, unsigned int, float*)
rx::glGetTextureLevelParameterivNULL(unsigned int, int, unsigned int, int*)
rx::glGetTextureParameterIivNULL(unsigned int, unsigned int, int*)
rx::glGetTextureParameterIuivNULL(unsigned int, unsigned int, unsigned int*)
rx::glGetTextureParameterfvNULL(unsigned int, unsigned int, float*)
rx::glGetTextureParameterivNULL(unsigned int, unsigned int, int*)
rx::glGetTextureSubImageNULL(unsigned int, int, int, int, int, int, int, int, unsigned int, unsigned int, int, void*)
rx::glGetTransformFeedbackVaryingNULL(unsigned int, unsigned int, int, int*, int*, unsigned int*, char*)
rx::glGetTransformFeedbacki64_vNULL(unsigned int, unsigned int, unsigned int, long*)
rx::glGetTransformFeedbacki_vNULL(unsigned int, unsigned int, unsigned int, int*)
rx::glGetTransformFeedbackivNULL(unsigned int, unsigned int, int*)
rx::glGetUniformBlockIndexNULL(unsigned int, char const*)
rx::glGetUniformIndicesNULL(unsigned int, int, char const* const*, unsigned int*)
rx::glGetUniformLocationNULL(unsigned int, char const*)
rx::glGetUniformSubroutineuivNULL(unsigned int, int, unsigned int*)
rx::glGetUniformdvNULL(unsigned int, int, double*)
rx::glGetUniformfvNULL(unsigned int, int, float*)
rx::glGetUniformivNULL(unsigned int, int, int*)
rx::glGetUniformuivNULL(unsigned int, int, unsigned int*)
rx::glGetVertexArrayIndexed64ivNULL(unsigned int, unsigned int, unsigned int, long*)
rx::glGetVertexArrayIndexedivNULL(unsigned int, unsigned int, unsigned int, int*)
rx::glGetVertexArrayivNULL(unsigned int, unsigned int, int*)
rx::glGetVertexAttribIivNULL(unsigned int, unsigned int, int*)
rx::glGetVertexAttribIuivNULL(unsigned int, unsigned int, unsigned int*)
rx::glGetVertexAttribLdvNULL(unsigned int, unsigned int, double*)
rx::glGetVertexAttribPointervNULL(unsigned int, unsigned int, void**)
rx::glGetVertexAttribdvNULL(unsigned int, unsigned int, double*)
rx::glGetVertexAttribfvNULL(unsigned int, unsigned int, float*)
rx::glGetVertexAttribivNULL(unsigned int, unsigned int, int*)
rx::glGetnCompressedTexImageNULL(unsigned int, int, int, void*)
rx::glGetnTexImageNULL(unsigned int, int, unsigned int, unsigned int, int, void*)
rx::glGetnUniformdvNULL(unsigned int, int, int, double*)
rx::glGetnUniformfvNULL(unsigned int, int, int, float*)
rx::glGetnUniformivNULL(unsigned int, int, int, int*)
rx::glGetnUniformuivNULL(unsigned int, int, int, unsigned int*)
rx::glHintNULL(unsigned int, unsigned int)
rx::glInsertEventMarkerEXTNULL(int, char const*)
rx::glInvalidateBufferDataNULL(unsigned int)
rx::glInvalidateBufferSubDataNULL(unsigned int, long, long)
rx::glInvalidateFramebufferNULL(unsigned int, int, unsigned int const*)
rx::glInvalidateNamedFramebufferDataNULL(unsigned int, int, unsigned int const*)
rx::glInvalidateNamedFramebufferSubDataNULL(unsigned int, int, unsigned int const*, int, int, int, int)
rx::glInvalidateSubFramebufferNULL(unsigned int, int, unsigned int const*, int, int, int, int)
rx::glInvalidateTexImageNULL(unsigned int, int)
rx::glInvalidateTexSubImageNULL(unsigned int, int, int, int, int, int, int, int)
rx::glIsBufferNULL(unsigned int)
rx::glIsEnabledNULL(unsigned int)
rx::glIsEnablediNULL(unsigned int, unsigned int)
rx::glIsFenceNVNULL(unsigned int)
rx::glIsFramebufferNULL(unsigned int)
rx::glIsPathNVNULL(unsigned int)
rx::glIsProgramNULL(unsigned int)
rx::glIsProgramPipelineNULL(unsigned int)
rx::glIsQueryNULL(unsigned int)
rx::glIsRenderbufferNULL(unsigned int)
rx::glIsSamplerNULL(unsigned int)
rx::glIsShaderNULL(unsigned int)
rx::glIsSyncNULL(__GLsync*)
rx::glIsTextureNULL(unsigned int)
rx::glIsTransformFeedbackNULL(unsigned int)
rx::glIsVertexArrayNULL(unsigned int)
rx::glLineWidthNULL(float)
rx::glLinkProgramNULL(unsigned int)
rx::glLogicOpNULL(unsigned int)
rx::glMapBufferNULL(unsigned int, unsigned int)
rx::glMapBufferRangeNULL(unsigned int, long, long, unsigned int)
rx::glMapNamedBufferNULL(unsigned int, unsigned int)
rx::glMapNamedBufferRangeNULL(unsigned int, long, long, unsigned int)
rx::glMatrixLoadfEXTNULL(unsigned int, float const*)
rx::glMemoryBarrierByRegionNULL(unsigned int)
rx::glMemoryBarrierNULL(unsigned int)
rx::glMinSampleShadingNULL(float)
rx::glMultiDrawArraysIndirectNULL(unsigned int, void const*, int, int)
rx::glMultiDrawArraysNULL(unsigned int, int const*, int const*, int)
rx::glMultiDrawElementsBaseVertexNULL(unsigned int, int const*, unsigned int, void const* const*, int, int const*)
rx::glMultiDrawElementsIndirectNULL(unsigned int, unsigned int, void const*, int, int)
rx::glMultiDrawElementsNULL(unsigned int, int const*, unsigned int, void const* const*, int)
rx::glNamedBufferDataNULL(unsigned int, long, void const*, unsigned int)
rx::glNamedBufferStorageNULL(unsigned int, long, void const*, unsigned int)
rx::glNamedBufferSubDataNULL(unsigned int, long, long, void const*)
rx::glNamedFramebufferDrawBufferNULL(unsigned int, unsigned int)
rx::glNamedFramebufferDrawBuffersNULL(unsigned int, int, unsigned int const*)
rx::glNamedFramebufferParameteriNULL(unsigned int, unsigned int, int)
rx::glNamedFramebufferReadBufferNULL(unsigned int, unsigned int)
rx::glNamedFramebufferRenderbufferNULL(unsigned int, unsigned int, unsigned int, unsigned int)
rx::glNamedFramebufferTextureLayerNULL(unsigned int, unsigned int, unsigned int, int, int)
rx::glNamedFramebufferTextureNULL(unsigned int, unsigned int, unsigned int, int)
rx::glNamedRenderbufferStorageMultisampleNULL(unsigned int, int, unsigned int, int, int)
rx::glNamedRenderbufferStorageNULL(unsigned int, unsigned int, int, int)
rx::glObjectLabelNULL(unsigned int, unsigned int, int, char const*)
rx::glObjectPtrLabelNULL(void const*, int, char const*)
rx::glPatchParameterfvNULL(unsigned int, float const*)
rx::glPatchParameteriNULL(unsigned int, int)
rx::glPathCommandsNVNULL(unsigned int, int, unsigned char const*, int, unsigned int, void const*)
rx::glPathParameterfNVNULL(unsigned int, unsigned int, float)
rx::glPathParameteriNVNULL(unsigned int, unsigned int, int)
rx::glPathStencilFuncNVNULL(unsigned int, int, unsigned int)
rx::glPauseTransformFeedbackNULL()
rx::glPixelStorefNULL(unsigned int, float)
rx::glPixelStoreiNULL(unsigned int, int)
rx::glPointParameterfNULL(unsigned int, float)
rx::glPointParameterfvNULL(unsigned int, float const*)
rx::glPointParameteriNULL(unsigned int, int)
rx::glPointParameterivNULL(unsigned int, int const*)
rx::glPointSizeNULL(float)
rx::glPolygonModeNULL(unsigned int, unsigned int)
rx::glPolygonOffsetNULL(float, float)
rx::glPopDebugGroupNULL()
rx::glPopGroupMarkerEXTNULL()
rx::glPrimitiveBoundingBoxNULL(float, float, float, float, float, float, float, float)
rx::glPrimitiveRestartIndexNULL(unsigned int)
rx::glProgramBinaryNULL(unsigned int, unsigned int, void const*, int)
rx::glProgramParameteriNULL(unsigned int, unsigned int, int)
rx::glProgramPathFragmentInputGenNVNULL(unsigned int, int, unsigned int, int, float const*)
rx::glProgramUniform1dNULL(unsigned int, int, double)
rx::glProgramUniform1dvNULL(unsigned int, int, int, double const*)
rx::glProgramUniform1fNULL(unsigned int, int, float)
rx::glProgramUniform1fvNULL(unsigned int, int, int, float const*)
rx::glProgramUniform1iNULL(unsigned int, int, int)
rx::glProgramUniform1ivNULL(unsigned int, int, int, int const*)
rx::glProgramUniform1uiNULL(unsigned int, int, unsigned int)
rx::glProgramUniform1uivNULL(unsigned int, int, int, unsigned int const*)
rx::glProgramUniform2dNULL(unsigned int, int, double, double)
rx::glProgramUniform2dvNULL(unsigned int, int, int, double const*)
rx::glProgramUniform2fNULL(unsigned int, int, float, float)
rx::glProgramUniform2fvNULL(unsigned int, int, int, float const*)
rx::glProgramUniform2iNULL(unsigned int, int, int, int)
rx::glProgramUniform2ivNULL(unsigned int, int, int, int const*)
rx::glProgramUniform2uiNULL(unsigned int, int, unsigned int, unsigned int)
rx::glProgramUniform2uivNULL(unsigned int, int, int, unsigned int const*)
rx::glProgramUniform3dNULL(unsigned int, int, double, double, double)
rx::glProgramUniform3dvNULL(unsigned int, int, int, double const*)
rx::glProgramUniform3fNULL(unsigned int, int, float, float, float)
rx::glProgramUniform3fvNULL(unsigned int, int, int, float const*)
rx::glProgramUniform3iNULL(unsigned int, int, int, int, int)
rx::glProgramUniform3ivNULL(unsigned int, int, int, int const*)
rx::glProgramUniform3uiNULL(unsigned int, int, unsigned int, unsigned int, unsigned int)
rx::glProgramUniform3uivNULL(unsigned int, int, int, unsigned int const*)
rx::glProgramUniform4dNULL(unsigned int, int, double, double, double, double)
rx::glProgramUniform4dvNULL(unsigned int, int, int, double const*)
rx::glProgramUniform4fNULL(unsigned int, int, float, float, float, float)
rx::glProgramUniform4fvNULL(unsigned int, int, int, float const*)
rx::glProgramUniform4iNULL(unsigned int, int, int, int, int, int)
rx::glProgramUniform4ivNULL(unsigned int, int, int, int const*)
rx::glProgramUniform4uiNULL(unsigned int, int, unsigned int, unsigned int, unsigned int, unsigned int)
rx::glProgramUniform4uivNULL(unsigned int, int, int, unsigned int const*)
rx::glProgramUniformMatrix2dvNULL(unsigned int, int, int, unsigned char, double const*)
rx::glProgramUniformMatrix2fvNULL(unsigned int, int, int, unsigned char, float const*)
rx::glProgramUniformMatrix2x3dvNULL(unsigned int, int, int, unsigned char, double const*)
rx::glProgramUniformMatrix2x3fvNULL(unsigned int, int, int, unsigned char, float const*)
rx::glProgramUniformMatrix2x4dvNULL(unsigned int, int, int, unsigned char, double const*)
rx::glProgramUniformMatrix2x4fvNULL(unsigned int, int, int, unsigned char, float const*)
rx::glProgramUniformMatrix3dvNULL(unsigned int, int, int, unsigned char, double const*)
rx::glProgramUniformMatrix3fvNULL(unsigned int, int, int, unsigned char, float const*)
rx::glProgramUniformMatrix3x2dvNULL(unsigned int, int, int, unsigned char, double const*)
rx::glProgramUniformMatrix3x2fvNULL(unsigned int, int, int, unsigned char, float const*)
rx::glProgramUniformMatrix3x4dvNULL(unsigned int, int, int, unsigned char, double const*)
rx::glProgramUniformMatrix3x4fvNULL(unsigned int, int, int, unsigned char, float const*)
rx::glProgramUniformMatrix4dvNULL(unsigned int, int, int, unsigned char, double const*)
rx::glProgramUniformMatrix4fvNULL(unsigned int, int, int, unsigned char, float const*)
rx::glProgramUniformMatrix4x2dvNULL(unsigned int, int, int, unsigned char, double const*)
rx::glProgramUniformMatrix4x2fvNULL(unsigned int, int, int, unsigned char, float const*)
rx::glProgramUniformMatrix4x3dvNULL(unsigned int, int, int, unsigned char, double const*)
rx::glProgramUniformMatrix4x3fvNULL(unsigned int, int, int, unsigned char, float const*)
rx::glProvokingVertexNULL(unsigned int)
rx::glPushDebugGroupNULL(unsigned int, unsigned int, int, char const*)
rx::glPushGroupMarkerEXTNULL(int, char const*)
rx::glQueryCounterNULL(unsigned int, unsigned int)
rx::glReadBufferNULL(unsigned int)
rx::glReadPixelsNULL(int, int, int, int, unsigned int, unsigned int, void*)
rx::glReadnPixelsNULL(int, int, int, int, unsigned int, unsigned int, int, void*)
rx::glReleaseShaderCompilerNULL()
rx::glRenderbufferStorageMultisampleNULL(unsigned int, int, unsigned int, int, int)
rx::glRenderbufferStorageNULL(unsigned int, unsigned int, int, int)
rx::glResumeTransformFeedbackNULL()
rx::glSampleCoverageNULL(float, unsigned char)
rx::glSampleMaskiNULL(unsigned int, unsigned int)
rx::glSamplerParameterIivNULL(unsigned int, unsigned int, int const*)
rx::glSamplerParameterIuivNULL(unsigned int, unsigned int, unsigned int const*)
rx::glSamplerParameterfNULL(unsigned int, unsigned int, float)
rx::glSamplerParameterfvNULL(unsigned int, unsigned int, float const*)
rx::glSamplerParameteriNULL(unsigned int, unsigned int, int)
rx::glSamplerParameterivNULL(unsigned int, unsigned int, int const*)
rx::glScissorArrayvNULL(unsigned int, int, int const*)
rx::glScissorIndexedNULL(unsigned int, int, int, int, int)
rx::glScissorIndexedvNULL(unsigned int, int const*)
rx::glScissorNULL(int, int, int, int)
rx::glSetFenceNVNULL(unsigned int, unsigned int)
rx::glShaderBinaryNULL(int, unsigned int const*, unsigned int, void const*, int)
rx::glShaderSourceNULL(unsigned int, int, char const* const*, int const*)
rx::glShaderStorageBlockBindingNULL(unsigned int, unsigned int, unsigned int)
rx::glStencilFillPathInstancedNVNULL(int, unsigned int, void const*, unsigned int, unsigned int, unsigned int, unsigned int, float const*)
rx::glStencilFillPathNVNULL(unsigned int, unsigned int, unsigned int)
rx::glStencilFuncNULL(unsigned int, int, unsigned int)
rx::glStencilFuncSeparateNULL(unsigned int, unsigned int, int, unsigned int)
rx::glStencilMaskNULL(unsigned int)
rx::glStencilMaskSeparateNULL(unsigned int, unsigned int)
rx::glStencilOpNULL(unsigned int, unsigned int, unsigned int)
rx::glStencilOpSeparateNULL(unsigned int, unsigned int, unsigned int, unsigned int)
rx::glStencilStrokePathInstancedNVNULL(int, unsigned int, void const*, unsigned int, int, unsigned int, unsigned int, float const*)
rx::glStencilStrokePathNVNULL(unsigned int, int, unsigned int)
rx::glStencilThenCoverFillPathInstancedNVNULL(int, unsigned int, void const*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, float const*)
rx::glStencilThenCoverFillPathNVNULL(unsigned int, unsigned int, unsigned int, unsigned int)
rx::glStencilThenCoverStrokePathInstancedNVNULL(int, unsigned int, void const*, unsigned int, int, unsigned int, unsigned int, unsigned int, float const*)
rx::glStencilThenCoverStrokePathNVNULL(unsigned int, int, unsigned int, unsigned int)
rx::glTestFenceNVNULL(unsigned int)
rx::glTexBufferNULL(unsigned int, unsigned int, unsigned int)
rx::glTexBufferRangeNULL(unsigned int, unsigned int, unsigned int, long, long)
rx::glTexImage1DNULL(unsigned int, int, int, int, int, unsigned int, unsigned int, void const*)
rx::glTexImage2DMultisampleNULL(unsigned int, int, unsigned int, int, int, unsigned char)
rx::glTexImage2DNULL(unsigned int, int, int, int, int, int, unsigned int, unsigned int, void const*)
rx::glTexImage3DMultisampleNULL(unsigned int, int, unsigned int, int, int, int, unsigned char)
rx::glTexImage3DNULL(unsigned int, int, int, int, int, int, int, unsigned int, unsigned int, void const*)
rx::glTexParameterIivNULL(unsigned int, unsigned int, int const*)
rx::glTexParameterIuivNULL(unsigned int, unsigned int, unsigned int const*)
rx::glTexParameterfNULL(unsigned int, unsigned int, float)
rx::glTexParameterfvNULL(unsigned int, unsigned int, float const*)
rx::glTexParameteriNULL(unsigned int, unsigned int, int)
rx::glTexParameterivNULL(unsigned int, unsigned int, int const*)
rx::glTexStorage1DNULL(unsigned int, int, unsigned int, int)
rx::glTexStorage2DMultisampleNULL(unsigned int, int, unsigned int, int, int, unsigned char)
rx::glTexStorage2DNULL(unsigned int, int, unsigned int, int, int)
rx::glTexStorage3DMultisampleNULL(unsigned int, int, unsigned int, int, int, int, unsigned char)
rx::glTexStorage3DNULL(unsigned int, int, unsigned int, int, int, int)
rx::glTexSubImage1DNULL(unsigned int, int, int, int, unsigned int, unsigned int, void const*)
rx::glTexSubImage2DNULL(unsigned int, int, int, int, int, int, unsigned int, unsigned int, void const*)
rx::glTexSubImage3DNULL(unsigned int, int, int, int, int, int, int, int, unsigned int, unsigned int, void const*)
rx::glTextureBarrierNULL()
rx::glTextureBufferNULL(unsigned int, unsigned int, unsigned int)
rx::glTextureBufferRangeNULL(unsigned int, unsigned int, unsigned int, long, long)
rx::glTextureParameterIivNULL(unsigned int, unsigned int, int const*)
rx::glTextureParameterIuivNULL(unsigned int, unsigned int, unsigned int const*)
rx::glTextureParameterfNULL(unsigned int, unsigned int, float)
rx::glTextureParameterfvNULL(unsigned int, unsigned int, float const*)
rx::glTextureParameteriNULL(unsigned int, unsigned int, int)
rx::glTextureParameterivNULL(unsigned int, unsigned int, int const*)
rx::glTextureStorage1DNULL(unsigned int, int, unsigned int, int)
rx::glTextureStorage2DMultisampleNULL(unsigned int, int, unsigned int, int, int, unsigned char)
rx::glTextureStorage2DNULL(unsigned int, int, unsigned int, int, int)
rx::glTextureStorage3DMultisampleNULL(unsigned int, int, unsigned int, int, int, int, unsigned char)
rx::glTextureStorage3DNULL(unsigned int, int, unsigned int, int, int, int)
rx::glTextureSubImage1DNULL(unsigned int, int, int, int, unsigned int, unsigned int, void const*)
rx::glTextureSubImage2DNULL(unsigned int, int, int, int, int, int, unsigned int, unsigned int, void const*)
rx::glTextureSubImage3DNULL(unsigned int, int, int, int, int, int, int, int, unsigned int, unsigned int, void const*)
rx::glTextureViewNULL(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
rx::glTransformFeedbackBufferBaseNULL(unsigned int, unsigned int, unsigned int)
rx::glTransformFeedbackBufferRangeNULL(unsigned int, unsigned int, unsigned int, long, long)
rx::glTransformFeedbackVaryingsNULL(unsigned int, int, char const* const*, unsigned int)
rx::glUniform1dNULL(int, double)
rx::glUniform1dvNULL(int, int, double const*)
rx::glUniform1fNULL(int, float)
rx::glUniform1fvNULL(int, int, float const*)
rx::glUniform1iNULL(int, int)
rx::glUniform1ivNULL(int, int, int const*)
rx::glUniform1uiNULL(int, unsigned int)
rx::glUniform1uivNULL(int, int, unsigned int const*)
rx::glUniform2dNULL(int, double, double)
rx::glUniform2dvNULL(int, int, double const*)
rx::glUniform2fNULL(int, float, float)
rx::glUniform2fvNULL(int, int, float const*)
rx::glUniform2iNULL(int, int, int)
rx::glUniform2ivNULL(int, int, int const*)
rx::glUniform2uiNULL(int, unsigned int, unsigned int)
rx::glUniform2uivNULL(int, int, unsigned int const*)
rx::glUniform3dNULL(int, double, double, double)
rx::glUniform3dvNULL(int, int, double const*)
rx::glUniform3fNULL(int, float, float, float)
rx::glUniform3fvNULL(int, int, float const*)
rx::glUniform3iNULL(int, int, int, int)
rx::glUniform3ivNULL(int, int, int const*)
rx::glUniform3uiNULL(int, unsigned int, unsigned int, unsigned int)
rx::glUniform3uivNULL(int, int, unsigned int const*)
rx::glUniform4dNULL(int, double, double, double, double)
rx::glUniform4dvNULL(int, int, double const*)
rx::glUniform4fNULL(int, float, float, float, float)
rx::glUniform4fvNULL(int, int, float const*)
rx::glUniform4iNULL(int, int, int, int, int)
rx::glUniform4ivNULL(int, int, int const*)
rx::glUniform4uiNULL(int, unsigned int, unsigned int, unsigned int, unsigned int)
rx::glUniform4uivNULL(int, int, unsigned int const*)
rx::glUniformBlockBindingNULL(unsigned int, unsigned int, unsigned int)
rx::glUniformMatrix2dvNULL(int, int, unsigned char, double const*)
rx::glUniformMatrix2fvNULL(int, int, unsigned char, float const*)
rx::glUniformMatrix2x3dvNULL(int, int, unsigned char, double const*)
rx::glUniformMatrix2x3fvNULL(int, int, unsigned char, float const*)
rx::glUniformMatrix2x4dvNULL(int, int, unsigned char, double const*)
rx::glUniformMatrix2x4fvNULL(int, int, unsigned char, float const*)
rx::glUniformMatrix3dvNULL(int, int, unsigned char, double const*)
rx::glUniformMatrix3fvNULL(int, int, unsigned char, float const*)
rx::glUniformMatrix3x2dvNULL(int, int, unsigned char, double const*)
rx::glUniformMatrix3x2fvNULL(int, int, unsigned char, float const*)
rx::glUniformMatrix3x4dvNULL(int, int, unsigned char, double const*)
rx::glUniformMatrix3x4fvNULL(int, int, unsigned char, float const*)
rx::glUniformMatrix4dvNULL(int, int, unsigned char, double const*)
rx::glUniformMatrix4fvNULL(int, int, unsigned char, float const*)
rx::glUniformMatrix4x2dvNULL(int, int, unsigned char, double const*)
rx::glUniformMatrix4x2fvNULL(int, int, unsigned char, float const*)
rx::glUniformMatrix4x3dvNULL(int, int, unsigned char, double const*)
rx::glUniformMatrix4x3fvNULL(int, int, unsigned char, float const*)
rx::glUniformSubroutinesuivNULL(unsigned int, int, unsigned int const*)
rx::glUnmapBufferNULL(unsigned int)
rx::glUnmapNamedBufferNULL(unsigned int)
rx::glUseProgramNULL(unsigned int)
rx::glUseProgramStagesNULL(unsigned int, unsigned int, unsigned int)
rx::glValidateProgramNULL(unsigned int)
rx::glValidateProgramPipelineNULL(unsigned int)
rx::glVertexArrayAttribBindingNULL(unsigned int, unsigned int, unsigned int)
rx::glVertexArrayAttribFormatNULL(unsigned int, unsigned int, int, unsigned int, unsigned char, unsigned int)
rx::glVertexArrayAttribIFormatNULL(unsigned int, unsigned int, int, unsigned int, unsigned int)
rx::glVertexArrayAttribLFormatNULL(unsigned int, unsigned int, int, unsigned int, unsigned int)
rx::glVertexArrayBindingDivisorNULL(unsigned int, unsigned int, unsigned int)
rx::glVertexArrayElementBufferNULL(unsigned int, unsigned int)
rx::glVertexArrayVertexBufferNULL(unsigned int, unsigned int, unsigned int, long, int)
rx::glVertexArrayVertexBuffersNULL(unsigned int, unsigned int, int, unsigned int const*, long const*, int const*)
rx::glVertexAttrib1dNULL(unsigned int, double)
rx::glVertexAttrib1dvNULL(unsigned int, double const*)
rx::glVertexAttrib1fNULL(unsigned int, float)
rx::glVertexAttrib1fvNULL(unsigned int, float const*)
rx::glVertexAttrib1sNULL(unsigned int, short)
rx::glVertexAttrib1svNULL(unsigned int, short const*)
rx::glVertexAttrib2dNULL(unsigned int, double, double)
rx::glVertexAttrib2dvNULL(unsigned int, double const*)
rx::glVertexAttrib2fNULL(unsigned int, float, float)
rx::glVertexAttrib2fvNULL(unsigned int, float const*)
rx::glVertexAttrib2sNULL(unsigned int, short, short)
rx::glVertexAttrib2svNULL(unsigned int, short const*)
rx::glVertexAttrib3dNULL(unsigned int, double, double, double)
rx::glVertexAttrib3dvNULL(unsigned int, double const*)
rx::glVertexAttrib3fNULL(unsigned int, float, float, float)
rx::glVertexAttrib3fvNULL(unsigned int, float const*)
rx::glVertexAttrib3sNULL(unsigned int, short, short, short)
rx::glVertexAttrib3svNULL(unsigned int, short const*)
rx::glVertexAttrib4NbvNULL(unsigned int, signed char const*)
rx::glVertexAttrib4NivNULL(unsigned int, int const*)
rx::glVertexAttrib4NsvNULL(unsigned int, short const*)
rx::glVertexAttrib4NubNULL(unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)
rx::glVertexAttrib4NubvNULL(unsigned int, unsigned char const*)
rx::glVertexAttrib4NuivNULL(unsigned int, unsigned int const*)
rx::glVertexAttrib4NusvNULL(unsigned int, unsigned short const*)
rx::glVertexAttrib4bvNULL(unsigned int, signed char const*)
rx::glVertexAttrib4dNULL(unsigned int, double, double, double, double)
rx::glVertexAttrib4dvNULL(unsigned int, double const*)
rx::glVertexAttrib4fNULL(unsigned int, float, float, float, float)
rx::glVertexAttrib4fvNULL(unsigned int, float const*)
rx::glVertexAttrib4ivNULL(unsigned int, int const*)
rx::glVertexAttrib4sNULL(unsigned int, short, short, short, short)
rx::glVertexAttrib4svNULL(unsigned int, short const*)
rx::glVertexAttrib4ubvNULL(unsigned int, unsigned char const*)
rx::glVertexAttrib4uivNULL(unsigned int, unsigned int const*)
rx::glVertexAttrib4usvNULL(unsigned int, unsigned short const*)
rx::glVertexAttribBindingNULL(unsigned int, unsigned int)
rx::glVertexAttribDivisorNULL(unsigned int, unsigned int)
rx::glVertexAttribFormatNULL(unsigned int, int, unsigned int, unsigned char, unsigned int)
rx::glVertexAttribI1iNULL(unsigned int, int)
rx::glVertexAttribI1ivNULL(unsigned int, int const*)
rx::glVertexAttribI1uiNULL(unsigned int, unsigned int)
rx::glVertexAttribI1uivNULL(unsigned int, unsigned int const*)
rx::glVertexAttribI2iNULL(unsigned int, int, int)
rx::glVertexAttribI2ivNULL(unsigned int, int const*)
rx::glVertexAttribI2uiNULL(unsigned int, unsigned int, unsigned int)
rx::glVertexAttribI2uivNULL(unsigned int, unsigned int const*)
rx::glVertexAttribI3iNULL(unsigned int, int, int, int)
rx::glVertexAttribI3ivNULL(unsigned int, int const*)
rx::glVertexAttribI3uiNULL(unsigned int, unsigned int, unsigned int, unsigned int)
rx::glVertexAttribI3uivNULL(unsigned int, unsigned int const*)
rx::glVertexAttribI4bvNULL(unsigned int, signed char const*)
rx::glVertexAttribI4iNULL(unsigned int, int, int, int, int)
rx::glVertexAttribI4ivNULL(unsigned int, int const*)
rx::glVertexAttribI4svNULL(unsigned int, short const*)
rx::glVertexAttribI4ubvNULL(unsigned int, unsigned char const*)
rx::glVertexAttribI4uiNULL(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
rx::glVertexAttribI4uivNULL(unsigned int, unsigned int const*)
rx::glVertexAttribI4usvNULL(unsigned int, unsigned short const*)
rx::glVertexAttribIFormatNULL(unsigned int, int, unsigned int, unsigned int)
rx::glVertexAttribIPointerNULL(unsigned int, int, unsigned int, int, void const*)
rx::glVertexAttribL1dNULL(unsigned int, double)
rx::glVertexAttribL1dvNULL(unsigned int, double const*)
rx::glVertexAttribL2dNULL(unsigned int, double, double)
rx::glVertexAttribL2dvNULL(unsigned int, double const*)
rx::glVertexAttribL3dNULL(unsigned int, double, double, double)
rx::glVertexAttribL3dvNULL(unsigned int, double const*)
rx::glVertexAttribL4dNULL(unsigned int, double, double, double, double)
rx::glVertexAttribL4dvNULL(unsigned int, double const*)
rx::glVertexAttribLFormatNULL(unsigned int, int, unsigned int, unsigned int)
rx::glVertexAttribLPointerNULL(unsigned int, int, unsigned int, int, void const*)
rx::glVertexAttribP1uiNULL(unsigned int, unsigned int, unsigned char, unsigned int)
rx::glVertexAttribP1uivNULL(unsigned int, unsigned int, unsigned char, unsigned int const*)
rx::glVertexAttribP2uiNULL(unsigned int, unsigned int, unsigned char, unsigned int)
rx::glVertexAttribP2uivNULL(unsigned int, unsigned int, unsigned char, unsigned int const*)
rx::glVertexAttribP3uiNULL(unsigned int, unsigned int, unsigned char, unsigned int)
rx::glVertexAttribP3uivNULL(unsigned int, unsigned int, unsigned char, unsigned int const*)
rx::glVertexAttribP4uiNULL(unsigned int, unsigned int, unsigned char, unsigned int)
rx::glVertexAttribP4uivNULL(unsigned int, unsigned int, unsigned char, unsigned int const*)
rx::glVertexAttribPointerNULL(unsigned int, int, unsigned int, unsigned char, int, void const*)
rx::glVertexBindingDivisorNULL(unsigned int, unsigned int)
rx::glViewportArrayvNULL(unsigned int, int, float const*)
rx::glViewportIndexedfNULL(unsigned int, float, float, float, float)
rx::glViewportIndexedfvNULL(unsigned int, float const*)
rx::glViewportNULL(int, int, int, int)
rx::glWaitSyncNULL(__GLsync*, unsigned int, unsigned long)
rx::gl_vk::GetColorComponentFlags(bool, bool, bool, bool)
rx::gl_vk::GetCullMode(gl::RasterizerState const&)
rx::gl_vk::GetExtent(gl::Extents const&, VkExtent3D*)
rx::gl_vk::GetFilter(unsigned int)
rx::gl_vk::GetFrontFace(unsigned int, bool)
rx::gl_vk::GetImageType(gl::TextureType)
rx::gl_vk::GetImageViewType(gl::TextureType)
rx::gl_vk::GetIndexType(unsigned int)
rx::gl_vk::GetOffset(gl::Offset const&, VkOffset3D*)
rx::gl_vk::GetPrimitiveTopology(gl::PrimitiveMode)
rx::gl_vk::GetRect(gl::Rectangle const&)
rx::gl_vk::GetSamplerAddressMode(unsigned int)
rx::gl_vk::GetSamplerMipmapMode(unsigned int)
rx::gl_vk::GetSamples(int)
rx::gl_vk::GetSwizzle(unsigned int)
rx::nativegl::BuildInternalFormatInfoMap()
rx::nativegl::ExtsOnly(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
rx::nativegl::ExtsOnly(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&)
rx::nativegl::GetCompressedSubTexImageFormat(rx::FunctionsGL const*, rx::WorkaroundsGL const&, unsigned int)
rx::nativegl::GetCompressedTexImageFormat(rx::FunctionsGL const*, rx::WorkaroundsGL const&, unsigned int)
rx::nativegl::GetCopyTexImageImageFormat(rx::FunctionsGL const*, rx::WorkaroundsGL const&, unsigned int, unsigned int)
rx::nativegl::GetInternalFormatInfo(unsigned int, rx::StandardGL)
rx::nativegl::GetInternalFormatInfo(unsigned int, rx::StandardGL)::defaultInternalFormat
rx::nativegl::GetInternalFormatMap()::formatMap
rx::nativegl::GetNativeInternalFormat(rx::FunctionsGL const*, rx::WorkaroundsGL const&, gl::InternalFormat const&)
rx::nativegl::GetReadPixelsFormat(rx::FunctionsGL const*, rx::WorkaroundsGL const&, unsigned int, unsigned int)
rx::nativegl::GetRenderbufferFormat(rx::FunctionsGL const*, rx::WorkaroundsGL const&, unsigned int)
rx::nativegl::GetTexImageFormat(rx::FunctionsGL const*, rx::WorkaroundsGL const&, unsigned int, unsigned int, unsigned int)
rx::nativegl::GetTexStorageFormat(rx::FunctionsGL const*, rx::WorkaroundsGL const&, unsigned int)
rx::nativegl::GetTexSubImageFormat(rx::FunctionsGL const*, rx::WorkaroundsGL const&, unsigned int, unsigned int)
rx::nativegl::InsertFormatMapping(std::__1::map<unsigned int, rx::nativegl::InternalFormatInfo, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, rx::nativegl::InternalFormatInfo> > >*, unsigned int, rx::nativegl::SupportRequirement const&, rx::nativegl::SupportRequirement const&, rx::nativegl::SupportRequirement const&, rx::nativegl::SupportRequirement const&, rx::nativegl::SupportRequirement const&, rx::nativegl::SupportRequirement const&, rx::nativegl::SupportRequirement const&)
rx::nativegl::InternalFormat::~InternalFormat()
rx::nativegl::SupportRequirement::SupportRequirement(rx::nativegl::SupportRequirement const&)
rx::nativegl::SupportRequirement::~SupportRequirement()
rx::nativegl::SupportsFenceSync(rx::FunctionsGL const*)
rx::nativegl::SupportsNativeRendering(rx::FunctionsGL const*, gl::TextureType, unsigned int)
rx::nativegl::SupportsOcclusionQueries(rx::FunctionsGL const*)
rx::nativegl::UseTexImage2D(gl::TextureType)
rx::nativegl::UseTexImage3D(gl::TextureType)
rx::nativegl_gl::ApplyWorkarounds(rx::FunctionsGL const*, gl::Workarounds*)
rx::nativegl_gl::GenerateCaps(rx::FunctionsGL const*, rx::WorkaroundsGL const&, gl::Caps*, gl::TextureCapsMap*, gl::Extensions*, gl::Version*, rx::MultiviewImplementationTypeGL*)
rx::nativegl_gl::GenerateWorkarounds(rx::FunctionsGL const*, rx::WorkaroundsGL*)
rx::nativegl_gl::MeetsRequirements(rx::FunctionsGL const*, rx::nativegl::SupportRequirement const&)
rx::vk::AllocateBufferMemory(rx::vk::Context*, unsigned int, unsigned int*, rx::vk::Buffer*, rx::vk::DeviceMemory*)
rx::vk::AllocateImageMemory(rx::vk::Context*, unsigned int, rx::vk::Image*, rx::vk::DeviceMemory*)
rx::vk::Buffer::Buffer()
rx::vk::Buffer::destroy(VkDevice_T*)
rx::vk::Buffer::init(rx::vk::Context*, VkBufferCreateInfo const&)
rx::vk::BufferAndMemory::BufferAndMemory()
rx::vk::BufferAndMemory::BufferAndMemory(rx::vk::Buffer&&, rx::vk::DeviceMemory&&)
rx::vk::BufferAndMemory::BufferAndMemory(rx::vk::BufferAndMemory&&)
rx::vk::BufferHelper::BufferHelper()
rx::vk::BufferHelper::init(rx::ContextVk*, VkBufferCreateInfo const&, unsigned int)
rx::vk::BufferHelper::release(rx::RendererVk*)
rx::vk::BufferHelper::~BufferHelper()
rx::vk::CommandBuffer::CommandBuffer()
rx::vk::CommandBuffer::begin(rx::vk::Context*, VkCommandBufferBeginInfo const&)
rx::vk::CommandBuffer::beginQuery(VkQueryPool_T*, unsigned int, unsigned int)
rx::vk::CommandBuffer::beginRenderPass(VkRenderPassBeginInfo const&, VkSubpassContents)
rx::vk::CommandBuffer::bindDescriptorSets(VkPipelineBindPoint, rx::vk::PipelineLayout const&, unsigned int, unsigned int, VkDescriptorSet_T* const*, unsigned int, unsigned int const*)
rx::vk::CommandBuffer::bindIndexBuffer(VkBuffer_T* const&, unsigned long, VkIndexType)
rx::vk::CommandBuffer::bindPipeline(VkPipelineBindPoint, rx::vk::Pipeline const&)
rx::vk::CommandBuffer::bindVertexBuffers(unsigned int, unsigned int, VkBuffer_T* const*, unsigned long const*)
rx::vk::CommandBuffer::blitImage(rx::vk::Image const&, VkImageLayout, rx::vk::Image const&, VkImageLayout, unsigned int, VkImageBlit*, VkFilter)
rx::vk::CommandBuffer::clearAttachments(unsigned int, VkClearAttachment const*, unsigned int, VkClearRect const*)
rx::vk::CommandBuffer::clearColorImage(rx::vk::Image const&, VkImageLayout, VkClearColorValue const&, unsigned int, VkImageSubresourceRange const*)
rx::vk::CommandBuffer::clearDepthStencilImage(rx::vk::Image const&, VkImageLayout, VkClearDepthStencilValue const&, unsigned int, VkImageSubresourceRange const*)
rx::vk::CommandBuffer::copyBuffer(VkBuffer_T* const&, VkBuffer_T* const&, unsigned int, VkBufferCopy const*)
rx::vk::CommandBuffer::copyBuffer(rx::vk::Buffer const&, rx::vk::Buffer const&, unsigned int, VkBufferCopy const*)
rx::vk::CommandBuffer::copyBufferToImage(VkBuffer_T*, rx::vk::Image const&, VkImageLayout, unsigned int, VkBufferImageCopy const*)
rx::vk::CommandBuffer::copyImage(rx::vk::Image const&, VkImageLayout, rx::vk::Image const&, VkImageLayout, unsigned int, VkImageCopy const*)
rx::vk::CommandBuffer::copyImageToBuffer(rx::vk::Image const&, VkImageLayout, VkBuffer_T*, unsigned int, VkBufferImageCopy const*)
rx::vk::CommandBuffer::destroy(VkDevice_T*)
rx::vk::CommandBuffer::end(rx::vk::Context*)
rx::vk::CommandBuffer::endQuery(VkQueryPool_T*, unsigned int)
rx::vk::CommandBuffer::endRenderPass()
rx::vk::CommandBuffer::executeCommands(unsigned int, rx::vk::CommandBuffer const*)
rx::vk::CommandBuffer::init(rx::vk::Context*, VkCommandBufferAllocateInfo const&)
rx::vk::CommandBuffer::pipelineBarrier(unsigned int, unsigned int, unsigned int, unsigned int, VkMemoryBarrier const*, unsigned int, VkBufferMemoryBarrier const*, unsigned int, VkImageMemoryBarrier const*)
rx::vk::CommandBuffer::pushConstants(rx::vk::PipelineLayout const&, unsigned int, unsigned int, unsigned int, void const*)
rx::vk::CommandBuffer::releaseHandle()
rx::vk::CommandBuffer::resetQueryPool(VkQueryPool_T*, unsigned int, unsigned int)
rx::vk::CommandGraph::CommandGraph(bool)
rx::vk::CommandGraph::allocateNode(bool, rx::vk::CommandGraphNodeFunction)
rx::vk::CommandGraph::dumpGraphDotFile(std::__1::basic_ostream<char, std::__1::char_traits<char> >&) const
rx::vk::CommandGraph::empty() const
rx::vk::CommandGraph::setNewBarrier(rx::vk::CommandGraphNode*)
rx::vk::CommandGraph::submitCommands(rx::vk::Context*, rx::Serial, rx::RenderPassCache*, rx::vk::CommandPool*, rx::vk::CommandBuffer*)
rx::vk::CommandGraph::~CommandGraph()
rx::vk::CommandGraphNode::beginInsideRenderPassRecording(rx::vk::Context*, rx::vk::CommandBuffer**)
rx::vk::CommandGraphNode::visitAndExecute(rx::vk::Context*, rx::Serial, rx::RenderPassCache*, rx::vk::CommandBuffer*)
rx::vk::CommandGraphResource::CommandGraphResource(rx::vk::CommandGraphResourceType)
rx::vk::CommandGraphResource::addReadDependency(rx::vk::CommandGraphResource*)
rx::vk::CommandGraphResource::addWriteDependency(rx::vk::CommandGraphResource*)
rx::vk::CommandGraphResource::appendToStartedRenderPass(rx::RendererVk*, rx::vk::CommandBuffer**)
rx::vk::CommandGraphResource::beginQuery(rx::vk::Context*, rx::vk::QueryPool const*, unsigned int)
rx::vk::CommandGraphResource::beginRenderPass(rx::vk::Context*, rx::vk::Framebuffer const&, gl::Rectangle const&, rx::vk::RenderPassDesc const&, std::__1::vector<VkClearValue, std::__1::allocator<VkClearValue> > const&, rx::vk::CommandBuffer**)
rx::vk::CommandGraphResource::endQuery(rx::vk::Context*, rx::vk::QueryPool const*, unsigned int)
rx::vk::CommandGraphResource::finishCurrentCommands(rx::RendererVk*)
rx::vk::CommandGraphResource::getRenderPassRenderArea() const
rx::vk::CommandGraphResource::getStoredQueueSerial() const
rx::vk::CommandGraphResource::hasPendingWork(rx::RendererVk*) const
rx::vk::CommandGraphResource::isResourceInUse(rx::RendererVk*) const
rx::vk::CommandGraphResource::onWriteImpl(rx::vk::CommandGraphNode*, rx::Serial)
rx::vk::CommandGraphResource::recordCommands(rx::vk::Context*, rx::vk::CommandBuffer**)
rx::vk::CommandGraphResource::~CommandGraphResource()
rx::vk::CommandPool::CommandPool()
rx::vk::CommandPool::destroy(VkDevice_T*)
rx::vk::CommandPool::init(rx::vk::Context*, VkCommandPoolCreateInfo const&)
rx::vk::Context::Context(rx::RendererVk*)
rx::vk::Context::getDevice() const
rx::vk::Context::~Context()
rx::vk::DescriptorPool::DescriptorPool()
rx::vk::DescriptorPool::allocateDescriptorSets(rx::vk::Context*, VkDescriptorSetAllocateInfo const&, VkDescriptorSet_T**)
rx::vk::DescriptorPool::destroy(VkDevice_T*)
rx::vk::DescriptorPool::init(rx::vk::Context*, VkDescriptorPoolCreateInfo const&)
rx::vk::DescriptorSetLayout::DescriptorSetLayout()
rx::vk::DescriptorSetLayout::destroy(VkDevice_T*)
rx::vk::DescriptorSetLayout::init(rx::vk::Context*, VkDescriptorSetLayoutCreateInfo const&)
rx::vk::DescriptorSetLayoutDesc::DescriptorSetLayoutDesc()
rx::vk::DescriptorSetLayoutDesc::update(unsigned int, VkDescriptorType, unsigned int)
rx::vk::DescriptorSetLayoutDesc::~DescriptorSetLayoutDesc()
rx::vk::DeviceMemory::DeviceMemory()
rx::vk::DeviceMemory::destroy(VkDevice_T*)
rx::vk::DeviceMemory::map(rx::vk::Context*, unsigned long, unsigned long, unsigned int, unsigned char**) const
rx::vk::DeviceMemory::unmap(VkDevice_T*) const
rx::vk::DynamicBuffer::DynamicBuffer(unsigned int, unsigned long)
rx::vk::DynamicBuffer::allocate(rx::vk::Context*, unsigned long, unsigned char**, VkBuffer_T**, unsigned long*, bool*)
rx::vk::DynamicBuffer::destroy(VkDevice_T*)
rx::vk::DynamicBuffer::flush(rx::vk::Context*)
rx::vk::DynamicBuffer::getCurrentBufferHandle() const
rx::vk::DynamicBuffer::init(unsigned long, rx::RendererVk*)
rx::vk::DynamicBuffer::invalidate(rx::vk::Context*)
rx::vk::DynamicBuffer::release(rx::RendererVk*)
rx::vk::DynamicBuffer::releaseRetainedBuffers(rx::RendererVk*)
rx::vk::DynamicBuffer::~DynamicBuffer()
rx::vk::DynamicDescriptorPool::DynamicDescriptorPool()
rx::vk::DynamicDescriptorPool::allocateSets(rx::vk::Context*, VkDescriptorSetLayout_T* const*, unsigned int, VkDescriptorSet_T**)
rx::vk::DynamicDescriptorPool::destroy(VkDevice_T*)
rx::vk::DynamicDescriptorPool::init(rx::vk::Context*, VkDescriptorPoolSize const&)
rx::vk::DynamicDescriptorPool::~DynamicDescriptorPool()
rx::vk::DynamicQueryPool::DynamicQueryPool()
rx::vk::DynamicQueryPool::allocateNewPool(rx::vk::Context*)
rx::vk::DynamicQueryPool::allocateQuery(rx::vk::Context*, rx::vk::QueryHelper*)
rx::vk::DynamicQueryPool::destroy(VkDevice_T*)
rx::vk::DynamicQueryPool::freeQuery(rx::vk::Context*, rx::vk::QueryHelper*)
rx::vk::DynamicQueryPool::init(rx::vk::Context*, VkQueryType, unsigned int)
rx::vk::DynamicQueryPool::~DynamicQueryPool()
rx::vk::Fence::Fence()
rx::vk::Fence::destroy(VkDevice_T*)
rx::vk::Fence::getStatus(VkDevice_T*) const
rx::vk::Fence::init(rx::vk::Context*, VkFenceCreateInfo const&)
rx::vk::Format::angleFormat() const
rx::vk::Format::bufferFormat() const
rx::vk::Format::initBufferFallback(VkPhysicalDevice_T*, rx::vk::BufferFormatInitInfo const*, int)
rx::vk::Format::initTextureFallback(VkPhysicalDevice_T*, rx::vk::TextureFormatInitInfo const*, int)
rx::vk::Format::initialize(VkPhysicalDevice_T*, angle::Format const&)
rx::vk::Format::initialize(VkPhysicalDevice_T*, angle::Format const&)::kInfo
rx::vk::Format::textureFormat() const
rx::vk::FormatTable::FormatTable()
rx::vk::FormatTable::initialize(VkPhysicalDevice_T*, gl::TextureCapsMap*, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >*)
rx::vk::FormatTable::operator[](angle::FormatID) const
rx::vk::FormatTable::operator[](unsigned int) const
rx::vk::FormatTable::~FormatTable()
rx::vk::Framebuffer::Framebuffer()
rx::vk::Framebuffer::destroy(VkDevice_T*)
rx::vk::Framebuffer::init(rx::vk::Context*, VkFramebufferCreateInfo const&)
rx::vk::Framebuffer::setHandle(VkFramebuffer_T*)
rx::vk::FramebufferHelper::FramebufferHelper()
rx::vk::FramebufferHelper::init(rx::ContextVk*, VkFramebufferCreateInfo const&)
rx::vk::FramebufferHelper::release(rx::RendererVk*)
rx::vk::FramebufferHelper::~FramebufferHelper()
rx::vk::GarbageObject::GarbageObject(rx::vk::GarbageObject const&)
rx::vk::GarbageObject::destroy(VkDevice_T*)
rx::vk::GarbageObject::destroyIfComplete(VkDevice_T*, rx::Serial)
rx::vk::GarbageObject::operator=(rx::vk::GarbageObject const&)
rx::vk::GenerateCaps(VkPhysicalDeviceProperties const&, VkPhysicalDeviceFeatures const&, gl::TextureCapsMap const&, gl::Caps*, gl::Extensions*, gl::Limitations*)
rx::vk::GetDepthStencilAspectFlags(angle::Format const&)
rx::vk::GetDepthStencilAspectFlagsForCopy(bool, bool)
rx::vk::GetFormatAspectFlags(angle::Format const&)
rx::vk::GetFormatProperties(VkPhysicalDevice_T*, VkFormat, VkFormatProperties*)
rx::vk::GetMandatoryFormatSupport(VkFormat)
rx::vk::Image::Image()
rx::vk::Image::destroy(VkDevice_T*)
rx::vk::Image::init(rx::vk::Context*, VkImageCreateInfo const&)
rx::vk::Image::reset()
rx::vk::Image::setHandle(VkImage_T*)
rx::vk::ImageHelper::Copy(rx::vk::ImageHelper*, rx::vk::ImageHelper*, gl::Offset const&, gl::Offset const&, gl::Extents const&, unsigned int, rx::vk::CommandBuffer*)
rx::vk::ImageHelper::ImageHelper()
rx::vk::ImageHelper::ImageHelper(rx::vk::ImageHelper&&)
rx::vk::ImageHelper::changeLayoutWithStages(unsigned int, VkImageLayout, unsigned int, unsigned int, rx::vk::CommandBuffer*)
rx::vk::ImageHelper::clearColor(VkClearColorValue const&, unsigned int, unsigned int, rx::vk::CommandBuffer*)
rx::vk::ImageHelper::clearColorLayer(VkClearColorValue const&, unsigned int, unsigned int, unsigned int, unsigned int, rx::vk::CommandBuffer*)
rx::vk::ImageHelper::clearDepthStencil(unsigned int, VkClearDepthStencilValue const&, rx::vk::CommandBuffer*)
rx::vk::ImageHelper::destroy(VkDevice_T*)
rx::vk::ImageHelper::generateMipmapsWithBlit(rx::ContextVk*, unsigned int)
rx::vk::ImageHelper::getAspectFlags() const
rx::vk::ImageHelper::getExtents() const
rx::vk::ImageHelper::getFormat() const
rx::vk::ImageHelper::getImage() const
rx::vk::ImageHelper::getSamples() const
rx::vk::ImageHelper::getSize(gl::ImageIndex const&) const
rx::vk::ImageHelper::init(rx::vk::Context*, gl::TextureType, gl::Extents const&, rx::vk::Format const&, int, unsigned int, unsigned int)
rx::vk::ImageHelper::init2DWeakReference(VkImage_T*, gl::Extents const&, rx::vk::Format const&, int)
rx::vk::ImageHelper::initImageView(rx::vk::Context*, gl::TextureType, unsigned int, gl::SwizzleState const&, rx::vk::ImageView*, unsigned int)
rx::vk::ImageHelper::initLayerImageView(rx::vk::Context*, gl::TextureType, unsigned int, gl::SwizzleState const&, rx::vk::ImageView*, unsigned int, unsigned int, unsigned int)
rx::vk::ImageHelper::initMemory(rx::vk::Context*, rx::vk::MemoryProperties const&, unsigned int)
rx::vk::ImageHelper::release(rx::RendererVk*)
rx::vk::ImageHelper::resetImageWeakReference()
rx::vk::ImageHelper::~ImageHelper()
rx::vk::ImageView::ImageView()
rx::vk::ImageView::destroy(VkDevice_T*)
rx::vk::ImageView::init(rx::vk::Context*, VkImageViewCreateInfo const&)
rx::vk::InitShaderAndSerial(rx::vk::Context*, rx::vk::ObjectAndSerial<rx::vk::ShaderModule>*, unsigned int const*, unsigned long)
rx::vk::LineLoopHelper::Draw(unsigned int, rx::vk::CommandBuffer*)
rx::vk::LineLoopHelper::LineLoopHelper(rx::RendererVk*)
rx::vk::LineLoopHelper::destroy(VkDevice_T*)
rx::vk::LineLoopHelper::getIndexBufferForDrawArrays(rx::ContextVk*, gl::DrawCallParams const&, VkBuffer_T**, unsigned long*)
rx::vk::LineLoopHelper::getIndexBufferForElementArrayBuffer(rx::ContextVk*, rx::BufferVk*, unsigned int, int, long, VkBuffer_T**, unsigned long*)
rx::vk::LineLoopHelper::streamIndices(rx::ContextVk*, unsigned int, int, unsigned char const*, VkBuffer_T**, unsigned long*)
rx::vk::LineLoopHelper::~LineLoopHelper()
rx::vk::MemoryProperties::MemoryProperties()
rx::vk::MemoryProperties::destroy()
rx::vk::MemoryProperties::init(VkPhysicalDevice_T*)
rx::vk::Pipeline::Pipeline()
rx::vk::Pipeline::destroy(VkDevice_T*)
rx::vk::Pipeline::initGraphics(rx::vk::Context*, VkGraphicsPipelineCreateInfo const&, rx::vk::PipelineCache const&)
rx::vk::PipelineCache::PipelineCache()
rx::vk::PipelineCache::destroy(VkDevice_T*)
rx::vk::PipelineCache::getCacheData(rx::vk::Context*, unsigned long*, void*)
rx::vk::PipelineCache::init(rx::vk::Context*, VkPipelineCacheCreateInfo const&)
rx::vk::PipelineDesc::PipelineDesc()
rx::vk::PipelineDesc::getRenderPassDesc() const
rx::vk::PipelineDesc::initDefaults()
rx::vk::PipelineDesc::initializePipeline(rx::vk::Context*, rx::vk::PipelineCache const&, rx::vk::RenderPass const&, rx::vk::PipelineLayout const&, angle::BitSetT<16ul, unsigned long, unsigned long> const&, rx::vk::ShaderModule const&, rx::vk::ShaderModule const&, rx::vk::Pipeline*) const
rx::vk::PipelineDesc::operator delete(void*)
rx::vk::PipelineDesc::operator new(unsigned long)
rx::vk::PipelineDesc::updateBlendColor(angle::Color<float> const&)
rx::vk::PipelineDesc::updateBlendEnabled(bool)
rx::vk::PipelineDesc::updateBlendEquations(gl::BlendState const&)
rx::vk::PipelineDesc::updateBlendFuncs(gl::BlendState const&)
rx::vk::PipelineDesc::updateColorWriteMask(unsigned int, angle::BitSetT<8ul, unsigned long, unsigned long> const&)
rx::vk::PipelineDesc::updateCullMode(gl::RasterizerState const&)
rx::vk::PipelineDesc::updateDepthFunc(gl::DepthStencilState const&)
rx::vk::PipelineDesc::updateDepthRange(float, float)
rx::vk::PipelineDesc::updateDepthTestEnabled(gl::DepthStencilState const&, gl::Framebuffer const*)
rx::vk::PipelineDesc::updateDepthWriteEnabled(gl::DepthStencilState const&, gl::Framebuffer const*)
rx::vk::PipelineDesc::updateFrontFace(gl::RasterizerState const&, bool)
rx::vk::PipelineDesc::updateLineWidth(float)
rx::vk::PipelineDesc::updatePolygonOffset(gl::RasterizerState const&)
rx::vk::PipelineDesc::updatePolygonOffsetFillEnabled(bool)
rx::vk::PipelineDesc::updateRenderPassDesc(rx::vk::RenderPassDesc const&)
rx::vk::PipelineDesc::updateScissor(gl::Rectangle const&, bool, gl::Rectangle const&)
rx::vk::PipelineDesc::updateShaders(rx::Serial, rx::Serial)
rx::vk::PipelineDesc::updateStencilBackFuncs(int, gl::DepthStencilState const&)
rx::vk::PipelineDesc::updateStencilBackOps(gl::DepthStencilState const&)
rx::vk::PipelineDesc::updateStencilBackWriteMask(gl::DepthStencilState const&, gl::Framebuffer const*)
rx::vk::PipelineDesc::updateStencilFrontFuncs(int, gl::DepthStencilState const&)
rx::vk::PipelineDesc::updateStencilFrontOps(gl::DepthStencilState const&)
rx::vk::PipelineDesc::updateStencilFrontWriteMask(gl::DepthStencilState const&, gl::Framebuffer const*)
rx::vk::PipelineDesc::updateStencilTestEnabled(gl::DepthStencilState const&, gl::Framebuffer const*)
rx::vk::PipelineDesc::updateTopology(gl::PrimitiveMode)
rx::vk::PipelineDesc::updateVertexInputInfo(std::__1::array<rx::vk::PackedVertexInputBindingDesc, 16ul> const&, std::__1::array<rx::vk::PackedVertexInputAttributeDesc, 16ul> const&)
rx::vk::PipelineDesc::updateViewport(rx::FramebufferVk*, gl::Rectangle const&, float, float, bool)
rx::vk::PipelineDesc::~PipelineDesc()
rx::vk::PipelineLayout::PipelineLayout()
rx::vk::PipelineLayout::destroy(VkDevice_T*)
rx::vk::PipelineLayout::init(rx::vk::Context*, VkPipelineLayoutCreateInfo const&)
rx::vk::PipelineLayoutDesc::PipelineLayoutDesc()
rx::vk::PipelineLayoutDesc::updateDescriptorSetLayout(unsigned int, rx::vk::DescriptorSetLayoutDesc const&)
rx::vk::PipelineLayoutDesc::updatePushConstantRange(gl::ShaderType, unsigned int, unsigned int)
rx::vk::PipelineLayoutDesc::~PipelineLayoutDesc()
rx::vk::QueryHelper::QueryHelper()
rx::vk::QueryHelper::~QueryHelper()
rx::vk::QueryPool::QueryPool()
rx::vk::QueryPool::destroy(VkDevice_T*)
rx::vk::QueryPool::getResults(rx::vk::Context*, unsigned int, unsigned int, unsigned long, void*, unsigned long, unsigned int) const
rx::vk::QueryPool::init(rx::vk::Context*, VkQueryPoolCreateInfo const&)
rx::vk::RenderPass::RenderPass()
rx::vk::RenderPass::destroy(VkDevice_T*)
rx::vk::RenderPass::init(rx::vk::Context*, VkRenderPassCreateInfo const&)
rx::vk::RenderPassDesc::RenderPassDesc()
rx::vk::RenderPassDesc::attachmentCount() const
rx::vk::RenderPassDesc::operator=(rx::vk::RenderPassDesc const&)
rx::vk::RenderPassDesc::packColorAttachment(rx::vk::ImageHelper const&)
rx::vk::RenderPassDesc::packDepthStencilAttachment(rx::vk::ImageHelper const&)
rx::vk::RenderPassDesc::~RenderPassDesc()
rx::vk::Sampler::Sampler()
rx::vk::Sampler::destroy(VkDevice_T*)
rx::vk::Sampler::init(rx::vk::Context*, VkSamplerCreateInfo const&)
rx::vk::Semaphore::Semaphore()
rx::vk::Semaphore::destroy(VkDevice_T*)
rx::vk::Semaphore::init(rx::vk::Context*)
rx::vk::ShaderLibrary::ShaderLibrary()
rx::vk::ShaderLibrary::destroy(VkDevice_T*)
rx::vk::ShaderLibrary::getShader(rx::vk::Context*, rx::vk::InternalShaderID, rx::vk::ObjectAndSerial<rx::vk::ShaderModule> const**)
rx::vk::ShaderLibrary::~ShaderLibrary()
rx::vk::ShaderModule::ShaderModule()
rx::vk::ShaderModule::destroy(VkDevice_T*)
rx::vk::StagingBuffer::StagingBuffer()
rx::vk::StagingBuffer::destroy(VkDevice_T*)
rx::vk::StagingBuffer::dumpResources(rx::Serial, std::__1::vector<rx::vk::GarbageObject, std::__1::allocator<rx::vk::GarbageObject> >*)
rx::vk::StagingBuffer::init(rx::vk::Context*, unsigned long, rx::vk::StagingUsage)
rx::vk::operator!=(rx::vk::Format const&, rx::vk::Format const&)
rx::vk::priv::(anonymous namespace)::kFullScreenQuad_vert
rx::vk::priv::(anonymous namespace)::kPushConstantColor_frag
rx::vk::priv::(anonymous namespace)::kShaderBlobs
rx::vk::priv::GetInternalShaderBlob(rx::vk::InternalShaderID)
r}2
r=
s
s count exceeds
s must be uniform
s of
s%p
s7
s8
s97
sQ(
sW>
s^>
s`>
sample
sampler binding greater than maximum texture units
sampler binding not less than gl_MaxCombinedTextureImageUnits
sampler constructor must appear at point of use
sampler uniform value out of range
sampler-constructor cannot make an array of samplers
sampler-constructor first argument must be a scalar textureXXX type
sampler-constructor first argument must match type and dimensionality of constructor type
sampler-constructor requires two arguments
sampler-constructor second argument must be a scalar type 'sampler'
sampler/image
sampler/image types can only be used in uniform variables or function parameters:
sampler/texture/image requires layout(binding=X)
sampler1DArrayShadow
sampler1DShadow
sampler2DArrayShadow
sampler2DRectShadow
sampler2DShadow
sampler3DRect
samplerCubeArrayShadow
samplerCubeShadow
samplerExternalOES
samplerShadow
samplers and atomic_uints cannot be output parameters
saturate
sbc is null
scalar integer expression required
scalar swizzle
secure_getenv
selecting output stream
selection_rest_statement
selection_statement
selection_statement_nonattributed
semUnequal must not be gl_SemanticsRelease or gl_SemanticsAcquireRelease
semUnequal must not include multiple of gl_SemanticsRelease, gl_SemanticsAcquire, or gl_SemanticsAcquireRelease
sequence operator is not allowed for void, arrays, or structs containing arrays
set = 0, binding =
set = 0, binding = 0
set = 0, binding = 1
set = 1, binding =
set = 2, binding = 0
set is too large
set=
setPresentationTime implementation missing.
setStorage
setStorageMultisample is unimplemented.
setSubImagePaddingWorkaround
setSubImageRowByRowWorkaround
setenv
setupLoaderTermPhysDevGroups
setupLoaderTermPhysDevGroups:  Failed during dispatch call of 'EnumeratePhysicalDeviceGroups' to ICD %d to get content.
setupLoaderTermPhysDevGroups:  Failed during dispatch call of 'EnumeratePhysicalDeviceGroups' to ICD %d to get count.
setupLoaderTermPhysDevGroups:  Failed during dispatch call of 'EnumeratePhysicalDevices' to ICD %d to get plain phys dev count.
setupLoaderTermPhysDevGroups:  Failed to allocate new physical device group array of size %d
setupLoaderTermPhysDevGroups:  Failed to allocate physical device group Terminator object %d
setupLoaderTermPhysDevGroups:  Failed to find GPU %d in group %d returned by 'EnumeratePhysicalDeviceGroups' in list returned by 'EnumeratePhysicalDevices'
setupLoaderTermPhysDevGroups:  Loader failed to setup physical device terminator info before calling 'EnumeratePhysicalDeviceGroups'.
setupLoaderTermPhysDevs
setupLoaderTermPhysDevs:  Call to ICD %d's 'vkEnumeratePhysicalDevices' failed with error 0x%08x
setupLoaderTermPhysDevs:  Failed to allocate new physical device array of size %d
setupLoaderTermPhysDevs:  Failed to allocate physical device terminator object %d
setupLoaderTermPhysDevs:  Failed to detect any valid GPUs in the current config
setupLoaderTrampPhysDevGroups
setupLoaderTrampPhysDevGroups:  Failed during dispatch call of 'EnumeratePhysicalDeviceGroupsKHR' to lower layers or loader to get count.
setupLoaderTrampPhysDevGroups:  Failed to allocate new physical device group array of size %d
setupLoaderTrampPhysDevGroups:  Failed to allocate physical device group trampoline object %d
setupLoaderTrampPhysDevGroups:  Failed to find GPU %d in group %d returned by 'EnumeratePhysicalDeviceGroupsKHR' in list returned by 'EnumeratePhysicalDevices'
setupLoaderTrampPhysDevs
setupLoaderTrampPhysDevs:  Failed during dispatch call of 'vkEnumeratePhysicalDevices' to lower layers or loader to get content.
setupLoaderTrampPhysDevs:  Failed during dispatch call of 'vkEnumeratePhysicalDevices' to lower layers or loader to get count.
setupLoaderTrampPhysDevs:  Failed to allocate new physical device array of size %d
setupLoaderTrampPhysDevs:  Failed to allocate physical device trampoline object %d
sf5
sh::(anonymous namespace)::AddANGLEPositionVaryingDeclaration(sh::TIntermBlock*, sh::TSymbolTable*, sh::TQualifier)
sh::(anonymous namespace)::AddAndTrueToLoopConditionTraverser::visitLoop(sh::Visit, sh::TIntermLoop*)
sh::(anonymous namespace)::AddAndTrueToLoopConditionTraverser::~AddAndTrueToLoopConditionTraverser()
sh::(anonymous namespace)::AddArrayZeroInitForLoop(sh::TIntermTyped const*, bool, sh::TVector<sh::TIntermNode*>*, sh::TSymbolTable*)
sh::(anonymous namespace)::AddArrayZeroInitStatementList(sh::TIntermTyped const*, bool, bool, sh::TVector<sh::TIntermNode*>*, sh::TSymbolTable*)
sh::(anonymous namespace)::AddNodeUseStatements(sh::TIntermTyped*, sh::TVector<sh::TIntermNode*>*)
sh::(anonymous namespace)::AddZeroInitSequence(sh::TIntermTyped const*, bool, bool, sh::TVector<sh::TIntermNode*>*, sh::TSymbolTable*)
sh::(anonymous namespace)::ArrayBoundsClamperMarker::visitBinary(sh::Visit, sh::TIntermBinary*)
sh::(anonymous namespace)::ArrayBoundsClamperMarker::~ArrayBoundsClamperMarker()
sh::(anonymous namespace)::CollectVariableRefCountsTraverser::incrementStructTypeRefCount(sh::TType const&)
sh::(anonymous namespace)::CollectVariableRefCountsTraverser::visitAggregate(sh::Visit, sh::TIntermAggregate*)
sh::(anonymous namespace)::CollectVariableRefCountsTraverser::visitFunctionPrototype(sh::TIntermFunctionPrototype*)
sh::(anonymous namespace)::CollectVariableRefCountsTraverser::visitSymbol(sh::TIntermSymbol*)
sh::(anonymous namespace)::CollectVariableRefCountsTraverser::~CollectVariableRefCountsTraverser()
sh::(anonymous namespace)::CollectVariablesTraverser::recordBuiltInVaryingUsed(sh::TVariable const&, bool*, std::__1::vector<sh::Varying, std::__1::allocator<sh::Varying> >*)
sh::(anonymous namespace)::CollectVariablesTraverser::recordInterfaceBlock(char const*, sh::TType const&, sh::InterfaceBlock*) const
sh::(anonymous namespace)::CollectVariablesTraverser::setBuiltInInfoFromSymbol(sh::TVariable const&, sh::ShaderVariable*)
sh::(anonymous namespace)::CollectVariablesTraverser::setCommonVariableProperties(sh::TType const&, sh::TVariable const&, sh::ShaderVariable*) const
sh::(anonymous namespace)::CollectVariablesTraverser::setFieldOrVariableProperties(sh::TType const&, bool, sh::ShaderVariable*) const
sh::(anonymous namespace)::CollectVariablesTraverser::visitBinary(sh::Visit, sh::TIntermBinary*)
sh::(anonymous namespace)::CollectVariablesTraverser::visitDeclaration(sh::Visit, sh::TIntermDeclaration*)
sh::(anonymous namespace)::CollectVariablesTraverser::visitInvariantDeclaration(sh::Visit, sh::TIntermInvariantDeclaration*)
sh::(anonymous namespace)::CollectVariablesTraverser::visitSymbol(sh::TIntermSymbol*)
sh::(anonymous namespace)::CollectVariablesTraverser::visitSymbol(sh::TIntermSymbol*)::kDiffName
sh::(anonymous namespace)::CollectVariablesTraverser::visitSymbol(sh::TIntermSymbol*)::kFarName
sh::(anonymous namespace)::CollectVariablesTraverser::visitSymbol(sh::TIntermSymbol*)::kNearName
sh::(anonymous namespace)::CollectVariablesTraverser::~CollectVariablesTraverser()
sh::(anonymous namespace)::ContainsReturnTraverser::visitBranch(sh::Visit, sh::TIntermBranch*)
sh::(anonymous namespace)::ContainsReturnTraverser::~ContainsReturnTraverser()
sh::(anonymous namespace)::ContainsSampler(sh::TStructure const*)
sh::(anonymous namespace)::CreateDriverUniformRef(sh::TVariable const*, char const*)
sh::(anonymous namespace)::DeclareDefaultUniformsTraverser::visitDeclaration(sh::Visit, sh::TIntermDeclaration*)
sh::(anonymous namespace)::DeclareDefaultUniformsTraverser::visitSymbol(sh::TIntermSymbol*)
sh::(anonymous namespace)::DeclareDefaultUniformsTraverser::~DeclareDefaultUniformsTraverser()
sh::(anonymous namespace)::DeclareStructTypesTraverser::visitDeclaration(sh::Visit, sh::TIntermDeclaration*)
sh::(anonymous namespace)::DeclareStructTypesTraverser::~DeclareStructTypesTraverser()
sh::(anonymous namespace)::DoWhileRewriter::visitBlock(sh::Visit, sh::TIntermBlock*)
sh::(anonymous namespace)::DoWhileRewriter::~DoWhileRewriter()
sh::(anonymous namespace)::ExpandStructArrayVariable(sh::ShaderVariable const&, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<sh::ShaderVariable, std::__1::allocator<sh::ShaderVariable> >*)
sh::(anonymous namespace)::ExpandStructVariable(sh::ShaderVariable const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<sh::ShaderVariable, std::__1::allocator<sh::ShaderVariable> >*)
sh::(anonymous namespace)::ExpandVariable(sh::ShaderVariable const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::vector<sh::ShaderVariable, std::__1::allocator<sh::ShaderVariable> >*)
sh::(anonymous namespace)::FindVariableInInterfaceBlock(sh::ImmutableString const&, sh::TInterfaceBlock const*, std::__1::vector<sh::InterfaceBlock, std::__1::allocator<sh::InterfaceBlock> >*)
sh::(anonymous namespace)::FlipBuiltinVariable(sh::TIntermBlock*, sh::TVector<sh::TIntermNode*>*, sh::TIntermTyped*, sh::TSymbolTable*, sh::TVariable const*, sh::ImmutableString const&, sh::TIntermTyped*)
sh::(anonymous namespace)::FoldExpressionsTraverser::visitAggregate(sh::Visit, sh::TIntermAggregate*)
sh::(anonymous namespace)::FoldExpressionsTraverser::visitBinary(sh::Visit, sh::TIntermBinary*)
sh::(anonymous namespace)::FoldExpressionsTraverser::visitSwizzle(sh::Visit, sh::TIntermSwizzle*)
sh::(anonymous namespace)::FoldExpressionsTraverser::visitTernary(sh::Visit, sh::TIntermTernary*)
sh::(anonymous namespace)::FoldExpressionsTraverser::visitUnary(sh::Visit, sh::TIntermUnary*)
sh::(anonymous namespace)::FoldExpressionsTraverser::~FoldExpressionsTraverser()
sh::(anonymous namespace)::GLFragColorBroadcastTraverser::visitSymbol(sh::TIntermSymbol*)
sh::(anonymous namespace)::GLFragColorBroadcastTraverser::~GLFragColorBroadcastTraverser()
sh::(anonymous namespace)::GetMatrix(sh::TConstantUnion const*, unsigned int const&)
sh::(anonymous namespace)::GetMatrix(sh::TConstantUnion const*, unsigned int const&, unsigned int const&)
sh::(anonymous namespace)::GetParameterTypeQualifierFromSortedSequence(sh::TVector<sh::TQualifierWrapperBase const*> const&, sh::TDiagnostics*)
sh::(anonymous namespace)::GetStructSamplerParameterType(sh::TSymbolTable*, sh::TVariable const&)
sh::(anonymous namespace)::GetVariableTypeQualifierFromSortedSequence(sh::TVector<sh::TQualifierWrapperBase const*> const&, sh::TDiagnostics*)
sh::(anonymous namespace)::InitializeLocalsTraverser::visitDeclaration(sh::Visit, sh::TIntermDeclaration*)
sh::(anonymous namespace)::InitializeLocalsTraverser::~InitializeLocalsTraverser()
sh::(anonymous namespace)::InsertUseCode(sh::InterfaceBlock const&, sh::TIntermTyped*, sh::TVector<sh::TIntermNode*>*)
sh::(anonymous namespace)::IsEmptyBlock(sh::TIntermNode*)
sh::(anonymous namespace)::MarkActive(sh::ShaderVariable*)
sh::(anonymous namespace)::MaxDepthTraverser::~MaxDepthTraverser()
sh::(anonymous namespace)::PruneEmptyCasesTraverser::visitSwitch(sh::Visit, sh::TIntermSwitch*)
sh::(anonymous namespace)::PruneEmptyCasesTraverser::~PruneEmptyCasesTraverser()
sh::(anonymous namespace)::PruneNoOpsTraverser::visitBlock(sh::Visit, sh::TIntermBlock*)
sh::(anonymous namespace)::PruneNoOpsTraverser::visitDeclaration(sh::Visit, sh::TIntermDeclaration*)
sh::(anonymous namespace)::PruneNoOpsTraverser::visitLoop(sh::Visit, sh::TIntermLoop*)
sh::(anonymous namespace)::PruneNoOpsTraverser::~PruneNoOpsTraverser()
sh::(anonymous namespace)::RecordConstantPrecisionTraverser::visitConstantUnion(sh::TIntermConstantUnion*)
sh::(anonymous namespace)::RecordConstantPrecisionTraverser::~RecordConstantPrecisionTraverser()
sh::(anonymous namespace)::RemoveArrayLengthTraverser::visitUnary(sh::Visit, sh::TIntermUnary*)
sh::(anonymous namespace)::RemoveArrayLengthTraverser::~RemoveArrayLengthTraverser()
sh::(anonymous namespace)::RemoveInvariantDeclarationTraverser::visitInvariantDeclaration(sh::Visit, sh::TIntermInvariantDeclaration*)
sh::(anonymous namespace)::RemoveInvariantDeclarationTraverser::~RemoveInvariantDeclarationTraverser()
sh::(anonymous namespace)::RemovePowTraverser::visitAggregate(sh::Visit, sh::TIntermAggregate*)
sh::(anonymous namespace)::RemovePowTraverser::~RemovePowTraverser()
sh::(anonymous namespace)::RemoveUnreferencedVariablesTraverser::decrementStructTypeRefCount(sh::TType const&)
sh::(anonymous namespace)::RemoveUnreferencedVariablesTraverser::traverseBlock(sh::TIntermBlock*)
sh::(anonymous namespace)::RemoveUnreferencedVariablesTraverser::traverseLoop(sh::TIntermLoop*)
sh::(anonymous namespace)::RemoveUnreferencedVariablesTraverser::visitAggregate(sh::Visit, sh::TIntermAggregate*)
sh::(anonymous namespace)::RemoveUnreferencedVariablesTraverser::visitDeclaration(sh::Visit, sh::TIntermDeclaration*)
sh::(anonymous namespace)::RemoveUnreferencedVariablesTraverser::visitSymbol(sh::TIntermSymbol*)
sh::(anonymous namespace)::RemoveUnreferencedVariablesTraverser::~RemoveUnreferencedVariablesTraverser()
sh::(anonymous namespace)::ReplaceVariableTraverser::visitSymbol(sh::TIntermSymbol*)
sh::(anonymous namespace)::ReplaceVariableTraverser::~ReplaceVariableTraverser()
sh::(anonymous namespace)::RewriteAssignToSwizzledTraverser::visitBinary(sh::Visit, sh::TIntermBinary*)
sh::(anonymous namespace)::RewriteAssignToSwizzledTraverser::~RewriteAssignToSwizzledTraverser()
sh::(anonymous namespace)::RoundingHelperWriter::writeCompoundAssignmentHelper(sh::TInfoSinkBase&, char const*, char const*, char const*, char const*)
sh::(anonymous namespace)::RoundingHelperWriter::~RoundingHelperWriter()
sh::(anonymous namespace)::RoundingHelperWriterESSL::getTypeString(char const*)
sh::(anonymous namespace)::RoundingHelperWriterESSL::~RoundingHelperWriterESSL()
sh::(anonymous namespace)::RoundingHelperWriterGLSL::getTypeString(char const*)
sh::(anonymous namespace)::RoundingHelperWriterGLSL::writeFloatRoundingHelpers(sh::TInfoSinkBase&)
sh::(anonymous namespace)::RoundingHelperWriterGLSL::writeMatrixRoundingHelper(sh::TInfoSinkBase&, unsigned int, unsigned int, char const*)
sh::(anonymous namespace)::RoundingHelperWriterGLSL::writeVectorRoundingHelpers(sh::TInfoSinkBase&, unsigned int)
sh::(anonymous namespace)::RoundingHelperWriterGLSL::~RoundingHelperWriterGLSL()
sh::(anonymous namespace)::RoundingHelperWriterHLSL::getTypeString(char const*)
sh::(anonymous namespace)::RoundingHelperWriterHLSL::writeFloatRoundingHelpers(sh::TInfoSinkBase&)
sh::(anonymous namespace)::RoundingHelperWriterHLSL::writeMatrixRoundingHelper(sh::TInfoSinkBase&, unsigned int, unsigned int, char const*)
sh::(anonymous namespace)::RoundingHelperWriterHLSL::writeVectorRoundingHelpers(sh::TInfoSinkBase&, unsigned int)
sh::(anonymous namespace)::RoundingHelperWriterHLSL::~RoundingHelperWriterHLSL()
sh::(anonymous namespace)::ScalarizeArgsTraverser::scalarizeArgs(sh::TIntermAggregate*, bool, bool)
sh::(anonymous namespace)::ScalarizeArgsTraverser::visitAggregate(sh::Visit, sh::TIntermAggregate*)
sh::(anonymous namespace)::ScalarizeArgsTraverser::visitBlock(sh::Visit, sh::TIntermBlock*)
sh::(anonymous namespace)::ScalarizeArgsTraverser::~ScalarizeArgsTraverser()
sh::(anonymous namespace)::SeparateDeclarationsTraverser::visitDeclaration(sh::Visit, sh::TIntermDeclaration*)
sh::(anonymous namespace)::SeparateDeclarationsTraverser::~SeparateDeclarationsTraverser()
sh::(anonymous namespace)::SetUnionArrayFromMatrix(angle::Matrix<float> const&, sh::TConstantUnion*)
sh::(anonymous namespace)::SimplifyLoopConditionsTraverser::traverseLoop(sh::TIntermLoop*)
sh::(anonymous namespace)::SimplifyLoopConditionsTraverser::visitAggregate(sh::Visit, sh::TIntermAggregate*)
sh::(anonymous namespace)::SimplifyLoopConditionsTraverser::visitBinary(sh::Visit, sh::TIntermBinary*)
sh::(anonymous namespace)::SimplifyLoopConditionsTraverser::visitDeclaration(sh::Visit, sh::TIntermDeclaration*)
sh::(anonymous namespace)::SimplifyLoopConditionsTraverser::visitTernary(sh::Visit, sh::TIntermTernary*)
sh::(anonymous namespace)::SimplifyLoopConditionsTraverser::visitUnary(sh::Visit, sh::TIntermUnary*)
sh::(anonymous namespace)::SimplifyLoopConditionsTraverser::~SimplifyLoopConditionsTraverser()
sh::(anonymous namespace)::SortSequence(sh::TVector<sh::TQualifierWrapperBase const*>&)
sh::(anonymous namespace)::SplitSequenceOperatorTraverser::visitAggregate(sh::Visit, sh::TIntermAggregate*)
sh::(anonymous namespace)::SplitSequenceOperatorTraverser::visitBinary(sh::Visit, sh::TIntermBinary*)
sh::(anonymous namespace)::SplitSequenceOperatorTraverser::visitTernary(sh::Visit, sh::TIntermTernary*)
sh::(anonymous namespace)::SplitSequenceOperatorTraverser::visitUnary(sh::Visit, sh::TIntermUnary*)
sh::(anonymous namespace)::SplitSequenceOperatorTraverser::~SplitSequenceOperatorTraverser()
sh::(anonymous namespace)::SymbolFinder::visitSymbol(sh::TIntermSymbol*)
sh::(anonymous namespace)::SymbolFinder::~SymbolFinder()
sh::(anonymous namespace)::TOutputTraverser::visitAggregate(sh::Visit, sh::TIntermAggregate*)
sh::(anonymous namespace)::TOutputTraverser::visitBinary(sh::Visit, sh::TIntermBinary*)
sh::(anonymous namespace)::TOutputTraverser::visitBlock(sh::Visit, sh::TIntermBlock*)
sh::(anonymous namespace)::TOutputTraverser::visitBranch(sh::Visit, sh::TIntermBranch*)
sh::(anonymous namespace)::TOutputTraverser::visitCase(sh::Visit, sh::TIntermCase*)
sh::(anonymous namespace)::TOutputTraverser::visitConstantUnion(sh::TIntermConstantUnion*)
sh::(anonymous namespace)::TOutputTraverser::visitDeclaration(sh::Visit, sh::TIntermDeclaration*)
sh::(anonymous namespace)::TOutputTraverser::visitFunctionDefinition(sh::Visit, sh::TIntermFunctionDefinition*)
sh::(anonymous namespace)::TOutputTraverser::visitFunctionPrototype(sh::TIntermFunctionPrototype*)
sh::(anonymous namespace)::TOutputTraverser::visitIfElse(sh::Visit, sh::TIntermIfElse*)
sh::(anonymous namespace)::TOutputTraverser::visitInvariantDeclaration(sh::Visit, sh::TIntermInvariantDeclaration*)
sh::(anonymous namespace)::TOutputTraverser::visitLoop(sh::Visit, sh::TIntermLoop*)
sh::(anonymous namespace)::TOutputTraverser::visitSwitch(sh::Visit, sh::TIntermSwitch*)
sh::(anonymous namespace)::TOutputTraverser::visitSwizzle(sh::Visit, sh::TIntermSwizzle*)
sh::(anonymous namespace)::TOutputTraverser::visitSymbol(sh::TIntermSymbol*)
sh::(anonymous namespace)::TOutputTraverser::visitTernary(sh::Visit, sh::TIntermTernary*)
sh::(anonymous namespace)::TOutputTraverser::visitUnary(sh::Visit, sh::TIntermUnary*)
sh::(anonymous namespace)::TOutputTraverser::~TOutputTraverser()
sh::(anonymous namespace)::Traverser::CreateStructSamplerFunctionVisitor::getNameFromIndex(sh::TFunction const*, unsigned long)
sh::(anonymous namespace)::Traverser::CreateStructSamplerFunctionVisitor::traverse(sh::TFunction const*)
sh::(anonymous namespace)::Traverser::CreateStructSamplerFunctionVisitor::visitNonStructParam(sh::TFunction const*, unsigned long)
sh::(anonymous namespace)::Traverser::CreateStructSamplerFunctionVisitor::visitSamplerInStructParam(sh::ImmutableString const&, sh::TField const*)
sh::(anonymous namespace)::Traverser::CreateStructSamplerFunctionVisitor::visitStructParam(sh::TFunction const*, unsigned long)
sh::(anonymous namespace)::Traverser::CreateStructSamplerFunctionVisitor::~CreateStructSamplerFunctionVisitor()
sh::(anonymous namespace)::Traverser::GetFieldName(sh::ImmutableString const&, sh::TField const*, unsigned int)
sh::(anonymous namespace)::Traverser::GetSamplerArgumentsVisitor::getNameFromIndex(sh::TFunction const*, unsigned long)
sh::(anonymous namespace)::Traverser::GetSamplerArgumentsVisitor::visitNonStructParam(sh::TFunction const*, unsigned long)
sh::(anonymous namespace)::Traverser::GetSamplerArgumentsVisitor::visitSamplerInStructParam(sh::ImmutableString const&, sh::TField const*)
sh::(anonymous namespace)::Traverser::GetSamplerArgumentsVisitor::visitStructParam(sh::TFunction const*, unsigned long)
sh::(anonymous namespace)::Traverser::GetSamplerArgumentsVisitor::~GetSamplerArgumentsVisitor()
sh::(anonymous namespace)::Traverser::GetStructSamplerNameFromTypedNode(sh::TIntermTyped*)
sh::(anonymous namespace)::Traverser::StructSamplerFunctionVisitor::traverse(sh::TFunction const*)
sh::(anonymous namespace)::Traverser::StructSamplerFunctionVisitor::traverseStructContainingSamplers(sh::ImmutableString const&, sh::TType const&)
sh::(anonymous namespace)::Traverser::StructSamplerFunctionVisitor::~StructSamplerFunctionVisitor()
sh::(anonymous namespace)::Traverser::extractFieldSamplers(sh::ImmutableString const&, sh::TField const*, sh::TType const&, sh::TVector<sh::TIntermNode*>*)
sh::(anonymous namespace)::Traverser::extractFieldSamplersImpl(sh::ImmutableString const&, sh::TField const*, sh::TVector<sh::TIntermNode*>*)
sh::(anonymous namespace)::Traverser::visitAggregate(sh::Visit, sh::TIntermAggregate*)
sh::(anonymous namespace)::Traverser::visitBinary(sh::Visit, sh::TIntermBinary*)
sh::(anonymous namespace)::Traverser::visitDeclaration(sh::Visit, sh::TIntermDeclaration*)
sh::(anonymous namespace)::Traverser::visitFunctionDefinition(sh::Visit, sh::TIntermFunctionDefinition*)
sh::(anonymous namespace)::Traverser::visitFunctionPrototype(sh::TIntermFunctionPrototype*)
sh::(anonymous namespace)::Traverser::visitUnary(sh::Visit, sh::TIntermUnary*)
sh::(anonymous namespace)::Traverser::~Traverser()
sh::(anonymous namespace)::UnfoldShortCircuitASTTraverser::visitBinary(sh::Visit, sh::TIntermBinary*)
sh::(anonymous namespace)::UnfoldShortCircuitASTTraverser::~UnfoldShortCircuitASTTraverser()
sh::(anonymous namespace)::ValidateConstIndexExpr::visitSymbol(sh::TIntermSymbol*)
sh::(anonymous namespace)::ValidateConstIndexExpr::~ValidateConstIndexExpr()
sh::(anonymous namespace)::ValidateGlobalInitializerTraverser::visitAggregate(sh::Visit, sh::TIntermAggregate*)
sh::(anonymous namespace)::ValidateGlobalInitializerTraverser::visitBinary(sh::Visit, sh::TIntermBinary*)
sh::(anonymous namespace)::ValidateGlobalInitializerTraverser::visitConstantUnion(sh::TIntermConstantUnion*)
sh::(anonymous namespace)::ValidateGlobalInitializerTraverser::visitSymbol(sh::TIntermSymbol*)
sh::(anonymous namespace)::ValidateGlobalInitializerTraverser::visitUnary(sh::Visit, sh::TIntermUnary*)
sh::(anonymous namespace)::ValidateGlobalInitializerTraverser::~ValidateGlobalInitializerTraverser()
sh::(anonymous namespace)::ValidateLimitationsTraverser::visitBinary(sh::Visit, sh::TIntermBinary*)
sh::(anonymous namespace)::ValidateLimitationsTraverser::visitLoop(sh::Visit, sh::TIntermLoop*)
sh::(anonymous namespace)::ValidateLimitationsTraverser::visitSymbol(sh::TIntermSymbol*)
sh::(anonymous namespace)::ValidateLimitationsTraverser::~ValidateLimitationsTraverser()
sh::(anonymous namespace)::ValidateOutputsTraverser::visitSymbol(sh::TIntermSymbol*)
sh::(anonymous namespace)::ValidateOutputsTraverser::~ValidateOutputsTraverser()
sh::(anonymous namespace)::ValidateShaderInterface(sh::TDiagnostics*, std::__1::vector<sh::TIntermSymbol const*, std::__1::allocator<sh::TIntermSymbol const*> >&, bool)
sh::(anonymous namespace)::ValidateSwitch::visitAggregate(sh::Visit, sh::TIntermAggregate*)
sh::(anonymous namespace)::ValidateSwitch::visitBinary(sh::Visit, sh::TIntermBinary*)
sh::(anonymous namespace)::ValidateSwitch::visitBlock(sh::Visit, sh::TIntermBlock*)
sh::(anonymous namespace)::ValidateSwitch::visitBranch(sh::Visit, sh::TIntermBranch*)
sh::(anonymous namespace)::ValidateSwitch::visitCase(sh::Visit, sh::TIntermCase*)
sh::(anonymous namespace)::ValidateSwitch::visitConstantUnion(sh::TIntermConstantUnion*)
sh::(anonymous namespace)::ValidateSwitch::visitDeclaration(sh::Visit, sh::TIntermDeclaration*)
sh::(anonymous namespace)::ValidateSwitch::visitIfElse(sh::Visit, sh::TIntermIfElse*)
sh::(anonymous namespace)::ValidateSwitch::visitLoop(sh::Visit, sh::TIntermLoop*)
sh::(anonymous namespace)::ValidateSwitch::visitSwitch(sh::Visit, sh::TIntermSwitch*)
sh::(anonymous namespace)::ValidateSwitch::visitSwizzle(sh::Visit, sh::TIntermSwizzle*)
sh::(anonymous namespace)::ValidateSwitch::visitSymbol(sh::TIntermSymbol*)
sh::(anonymous namespace)::ValidateSwitch::visitTernary(sh::Visit, sh::TIntermTernary*)
sh::(anonymous namespace)::ValidateSwitch::visitUnary(sh::Visit, sh::TIntermUnary*)
sh::(anonymous namespace)::ValidateSwitch::~ValidateSwitch()
sh::(anonymous namespace)::ValidateVaryingLocationsTraverser::visitDeclaration(sh::Visit, sh::TIntermDeclaration*)
sh::(anonymous namespace)::ValidateVaryingLocationsTraverser::visitFunctionDefinition(sh::Visit, sh::TIntermFunctionDefinition*)
sh::(anonymous namespace)::ValidateVaryingLocationsTraverser::~ValidateVaryingLocationsTraverser()
sh::(anonymous namespace)::VariablePacker::checkExpandedVariablesWithinPackingLimits(unsigned int, std::__1::vector<sh::ShaderVariable, std::__1::allocator<sh::ShaderVariable> >*)
sh::(anonymous namespace)::VectorizeVectorScalarArithmeticTraverser::visitAggregate(sh::Visit, sh::TIntermAggregate*)
sh::(anonymous namespace)::VectorizeVectorScalarArithmeticTraverser::visitBinary(sh::Visit, sh::TIntermBinary*)
sh::(anonymous namespace)::VectorizeVectorScalarArithmeticTraverser::~VectorizeVectorScalarArithmeticTraverser()
sh::(anonymous namespace)::isInitialized
sh::(anonymous namespace)::kAngleFrlString
sh::(anonymous namespace)::kAngleFrmString
sh::(anonymous namespace)::kDepthRange
sh::(anonymous namespace)::kDriverUniformNames
sh::(anonymous namespace)::kEmptyName
sh::(anonymous namespace)::kEmulatedDepthRangeParams
sh::(anonymous namespace)::kFlippedFragCoordName
sh::(anonymous namespace)::kFlippedPointCoordName
sh::(anonymous namespace)::kGlFragDataString
sh::(anonymous namespace)::kHalfRenderAreaHeight
sh::(anonymous namespace)::kHashedNamePrefix
sh::(anonymous namespace)::kInitGlobalsString
sh::(anonymous namespace)::kInstanceIDVariableName
sh::(anonymous namespace)::kMainString
sh::(anonymous namespace)::kMultiviewBaseViewLayerIndexVariableName
sh::(anonymous namespace)::kNegViewportYScale
sh::(anonymous namespace)::kParamXName
sh::(anonymous namespace)::kParamYName
sh::(anonymous namespace)::kPrefix
sh::(anonymous namespace)::kSpecifiedMultipleTimes
sh::(anonymous namespace)::kUnhashedNamePrefix
sh::(anonymous namespace)::kViewIDVariableName
sh::(anonymous namespace)::kViewport
sh::(anonymous namespace)::kViewportYScale
sh::AddAndTrueToLoopCondition(sh::TIntermNode*)
sh::ArrayBoundsClamper::ArrayBoundsClamper()
sh::ArrayBoundsClamper::MarkIndirectArrayBoundsForClamping(sh::TIntermNode*)
sh::ArrayBoundsClamper::OutputClampingFunctionDefinition(sh::TInfoSinkBase&) const
sh::ArrayBoundsClamper::SetClampingStrategy(ShArrayIndexClampingStrategy)
sh::ArrayString(sh::TType const&)
sh::Attribute::Attribute()
sh::Attribute::Attribute(sh::Attribute const&)
sh::Attribute::operator=(sh::Attribute const&)
sh::Attribute::~Attribute()
sh::BlockLayoutEncoder::~BlockLayoutEncoder()
sh::BuiltInFunction::kFunction_EmitVertex_
sh::BuiltInFunction::kFunction_EndPrimitive_
sh::BuiltInFunction::kFunction_abs_0B
sh::BuiltInFunction::kFunction_abs_0C
sh::BuiltInFunction::kFunction_abs_1B
sh::BuiltInFunction::kFunction_abs_1C
sh::BuiltInFunction::kFunction_abs_2B
sh::BuiltInFunction::kFunction_abs_2C
sh::BuiltInFunction::kFunction_abs_3B
sh::BuiltInFunction::kFunction_abs_3C
sh::BuiltInFunction::kFunction_acos_0B
sh::BuiltInFunction::kFunction_acos_1B
sh::BuiltInFunction::kFunction_acos_2B
sh::BuiltInFunction::kFunction_acos_3B
sh::BuiltInFunction::kFunction_acosh_0B
sh::BuiltInFunction::kFunction_acosh_1B
sh::BuiltInFunction::kFunction_acosh_2B
sh::BuiltInFunction::kFunction_acosh_3B
sh::BuiltInFunction::kFunction_all_1E
sh::BuiltInFunction::kFunction_all_2E
sh::BuiltInFunction::kFunction_all_3E
sh::BuiltInFunction::kFunction_any_1E
sh::BuiltInFunction::kFunction_any_2E
sh::BuiltInFunction::kFunction_any_3E
sh::BuiltInFunction::kFunction_asin_0B
sh::BuiltInFunction::kFunction_asin_1B
sh::BuiltInFunction::kFunction_asin_2B
sh::BuiltInFunction::kFunction_asin_3B
sh::BuiltInFunction::kFunction_asinh_0B
sh::BuiltInFunction::kFunction_asinh_1B
sh::BuiltInFunction::kFunction_asinh_2B
sh::BuiltInFunction::kFunction_asinh_3B
sh::BuiltInFunction::kFunction_atan_0B
sh::BuiltInFunction::kFunction_atan_0B0B
sh::BuiltInFunction::kFunction_atan_1B
sh::BuiltInFunction::kFunction_atan_1B1B
sh::BuiltInFunction::kFunction_atan_2B
sh::BuiltInFunction::kFunction_atan_2B2B
sh::BuiltInFunction::kFunction_atan_3B
sh::BuiltInFunction::kFunction_atan_3B3B
sh::BuiltInFunction::kFunction_atanh_0B
sh::BuiltInFunction::kFunction_atanh_1B
sh::BuiltInFunction::kFunction_atanh_2B
sh::BuiltInFunction::kFunction_atanh_3B
sh::BuiltInFunction::kFunction_atomicAdd_0C0C
sh::BuiltInFunction::kFunction_atomicAdd_0D0D
sh::BuiltInFunction::kFunction_atomicAnd_0C0C
sh::BuiltInFunction::kFunction_atomicAnd_0D0D
sh::BuiltInFunction::kFunction_atomicCompSwap_0C0C0C
sh::BuiltInFunction::kFunction_atomicCompSwap_0D0D0D
sh::BuiltInFunction::kFunction_atomicCounterDecrement_0F
sh::BuiltInFunction::kFunction_atomicCounterIncrement_0F
sh::BuiltInFunction::kFunction_atomicCounter_0F
sh::BuiltInFunction::kFunction_atomicExchange_0C0C
sh::BuiltInFunction::kFunction_atomicExchange_0D0D
sh::BuiltInFunction::kFunction_atomicMax_0C0C
sh::BuiltInFunction::kFunction_atomicMax_0D0D
sh::BuiltInFunction::kFunction_atomicMin_0C0C
sh::BuiltInFunction::kFunction_atomicMin_0D0D
sh::BuiltInFunction::kFunction_atomicOr_0C0C
sh::BuiltInFunction::kFunction_atomicOr_0D0D
sh::BuiltInFunction::kFunction_atomicXor_0C0C
sh::BuiltInFunction::kFunction_atomicXor_0D0D
sh::BuiltInFunction::kFunction_barrier_
sh::BuiltInFunction::kFunction_bitCount_0C
sh::BuiltInFunction::kFunction_bitCount_0D
sh::BuiltInFunction::kFunction_bitCount_1C
sh::BuiltInFunction::kFunction_bitCount_1D
sh::BuiltInFunction::kFunction_bitCount_2C
sh::BuiltInFunction::kFunction_bitCount_2D
sh::BuiltInFunction::kFunction_bitCount_3C
sh::BuiltInFunction::kFunction_bitCount_3D
sh::BuiltInFunction::kFunction_bitfieldExtract_0C0C0C
sh::BuiltInFunction::kFunction_bitfieldExtract_0D0C0C
sh::BuiltInFunction::kFunction_bitfieldExtract_1C0C0C
sh::BuiltInFunction::kFunction_bitfieldExtract_1D0C0C
sh::BuiltInFunction::kFunction_bitfieldExtract_2C0C0C
sh::BuiltInFunction::kFunction_bitfieldExtract_2D0C0C
sh::BuiltInFunction::kFunction_bitfieldExtract_3C0C0C
sh::BuiltInFunction::kFunction_bitfieldExtract_3D0C0C
sh::BuiltInFunction::kFunction_bitfieldInsert_0C0C0C0C
sh::BuiltInFunction::kFunction_bitfieldInsert_0D0D0C0C
sh::BuiltInFunction::kFunction_bitfieldInsert_1C1C0C0C
sh::BuiltInFunction::kFunction_bitfieldInsert_1D1D0C0C
sh::BuiltInFunction::kFunction_bitfieldInsert_2C2C0C0C
sh::BuiltInFunction::kFunction_bitfieldInsert_2D2D0C0C
sh::BuiltInFunction::kFunction_bitfieldInsert_3C3C0C0C
sh::BuiltInFunction::kFunction_bitfieldInsert_3D3D0C0C
sh::BuiltInFunction::kFunction_bitfieldReverse_0C
sh::BuiltInFunction::kFunction_bitfieldReverse_0D
sh::BuiltInFunction::kFunction_bitfieldReverse_1C
sh::BuiltInFunction::kFunction_bitfieldReverse_1D
sh::BuiltInFunction::kFunction_bitfieldReverse_2C
sh::BuiltInFunction::kFunction_bitfieldReverse_2D
sh::BuiltInFunction::kFunction_bitfieldReverse_3C
sh::BuiltInFunction::kFunction_bitfieldReverse_3D
sh::BuiltInFunction::kFunction_ceil_0B
sh::BuiltInFunction::kFunction_ceil_1B
sh::BuiltInFunction::kFunction_ceil_2B
sh::BuiltInFunction::kFunction_ceil_3B
sh::BuiltInFunction::kFunction_clamp_0B0B0B
sh::BuiltInFunction::kFunction_clamp_0C0C0C
sh::BuiltInFunction::kFunction_clamp_0D0D0D
sh::BuiltInFunction::kFunction_clamp_1B0B0B
sh::BuiltInFunction::kFunction_clamp_1B1B1B
sh::BuiltInFunction::kFunction_clamp_1C0C0C
sh::BuiltInFunction::kFunction_clamp_1C1C1C
sh::BuiltInFunction::kFunction_clamp_1D0D0D
sh::BuiltInFunction::kFunction_clamp_1D1D1D
sh::BuiltInFunction::kFunction_clamp_2B0B0B
sh::BuiltInFunction::kFunction_clamp_2B2B2B
sh::BuiltInFunction::kFunction_clamp_2C0C0C
sh::BuiltInFunction::kFunction_clamp_2C2C2C
sh::BuiltInFunction::kFunction_clamp_2D0D0D
sh::BuiltInFunction::kFunction_clamp_2D2D2D
sh::BuiltInFunction::kFunction_clamp_3B0B0B
sh::BuiltInFunction::kFunction_clamp_3B3B3B
sh::BuiltInFunction::kFunction_clamp_3C0C0C
sh::BuiltInFunction::kFunction_clamp_3C3C3C
sh::BuiltInFunction::kFunction_clamp_3D0D0D
sh::BuiltInFunction::kFunction_clamp_3D3D3D
sh::BuiltInFunction::kFunction_cos_0B
sh::BuiltInFunction::kFunction_cos_1B
sh::BuiltInFunction::kFunction_cos_2B
sh::BuiltInFunction::kFunction_cos_3B
sh::BuiltInFunction::kFunction_cosh_0B
sh::BuiltInFunction::kFunction_cosh_1B
sh::BuiltInFunction::kFunction_cosh_2B
sh::BuiltInFunction::kFunction_cosh_3B
sh::BuiltInFunction::kFunction_cross_2B2B
sh::BuiltInFunction::kFunction_dFdxExt_0B
sh::BuiltInFunction::kFunction_dFdxExt_1B
sh::BuiltInFunction::kFunction_dFdxExt_2B
sh::BuiltInFunction::kFunction_dFdxExt_3B
sh::BuiltInFunction::kFunction_dFdx_0B
sh::BuiltInFunction::kFunction_dFdx_1B
sh::BuiltInFunction::kFunction_dFdx_2B
sh::BuiltInFunction::kFunction_dFdx_3B
sh::BuiltInFunction::kFunction_dFdyExt_0B
sh::BuiltInFunction::kFunction_dFdyExt_1B
sh::BuiltInFunction::kFunction_dFdyExt_2B
sh::BuiltInFunction::kFunction_dFdyExt_3B
sh::BuiltInFunction::kFunction_dFdy_0B
sh::BuiltInFunction::kFunction_dFdy_1B
sh::BuiltInFunction::kFunction_dFdy_2B
sh::BuiltInFunction::kFunction_dFdy_3B
sh::BuiltInFunction::kFunction_degrees_0B
sh::BuiltInFunction::kFunction_degrees_1B
sh::BuiltInFunction::kFunction_degrees_2B
sh::BuiltInFunction::kFunction_degrees_3B
sh::BuiltInFunction::kFunction_determinant_5B
sh::BuiltInFunction::kFunction_determinant_AB
sh::BuiltInFunction::kFunction_determinant_FB
sh::BuiltInFunction::kFunction_distance_0B0B
sh::BuiltInFunction::kFunction_distance_1B1B
sh::BuiltInFunction::kFunction_distance_2B2B
sh::BuiltInFunction::kFunction_distance_3B3B
sh::BuiltInFunction::kFunction_dot_0B0B
sh::BuiltInFunction::kFunction_dot_1B1B
sh::BuiltInFunction::kFunction_dot_2B2B
sh::BuiltInFunction::kFunction_dot_3B3B
sh::BuiltInFunction::kFunction_equal_1B1B
sh::BuiltInFunction::kFunction_equal_1C1C
sh::BuiltInFunction::kFunction_equal_1D1D
sh::BuiltInFunction::kFunction_equal_1E1E
sh::BuiltInFunction::kFunction_equal_2B2B
sh::BuiltInFunction::kFunction_equal_2C2C
sh::BuiltInFunction::kFunction_equal_2D2D
sh::BuiltInFunction::kFunction_equal_2E2E
sh::BuiltInFunction::kFunction_equal_3B3B
sh::BuiltInFunction::kFunction_equal_3C3C
sh::BuiltInFunction::kFunction_equal_3D3D
sh::BuiltInFunction::kFunction_equal_3E3E
sh::BuiltInFunction::kFunction_exp2_0B
sh::BuiltInFunction::kFunction_exp2_1B
sh::BuiltInFunction::kFunction_exp2_2B
sh::BuiltInFunction::kFunction_exp2_3B
sh::BuiltInFunction::kFunction_exp_0B
sh::BuiltInFunction::kFunction_exp_1B
sh::BuiltInFunction::kFunction_exp_2B
sh::BuiltInFunction::kFunction_exp_3B
sh::BuiltInFunction::kFunction_faceforward_0B0B0B
sh::BuiltInFunction::kFunction_faceforward_1B1B1B
sh::BuiltInFunction::kFunction_faceforward_2B2B2B
sh::BuiltInFunction::kFunction_faceforward_3B3B3B
sh::BuiltInFunction::kFunction_findLSB_0C
sh::BuiltInFunction::kFunction_findLSB_0D
sh::BuiltInFunction::kFunction_findLSB_1C
sh::BuiltInFunction::kFunction_findLSB_1D
sh::BuiltInFunction::kFunction_findLSB_2C
sh::BuiltInFunction::kFunction_findLSB_2D
sh::BuiltInFunction::kFunction_findLSB_3C
sh::BuiltInFunction::kFunction_findLSB_3D
sh::BuiltInFunction::kFunction_findMSB_0C
sh::BuiltInFunction::kFunction_findMSB_0D
sh::BuiltInFunction::kFunction_findMSB_1C
sh::BuiltInFunction::kFunction_findMSB_1D
sh::BuiltInFunction::kFunction_findMSB_2C
sh::BuiltInFunction::kFunction_findMSB_2D
sh::BuiltInFunction::kFunction_findMSB_3C
sh::BuiltInFunction::kFunction_findMSB_3D
sh::BuiltInFunction::kFunction_floatBitsToInt_0B
sh::BuiltInFunction::kFunction_floatBitsToInt_1B
sh::BuiltInFunction::kFunction_floatBitsToInt_2B
sh::BuiltInFunction::kFunction_floatBitsToInt_3B
sh::BuiltInFunction::kFunction_floatBitsToUint_0B
sh::BuiltInFunction::kFunction_floatBitsToUint_1B
sh::BuiltInFunction::kFunction_floatBitsToUint_2B
sh::BuiltInFunction::kFunction_floatBitsToUint_3B
sh::BuiltInFunction::kFunction_floor_0B
sh::BuiltInFunction::kFunction_floor_1B
sh::BuiltInFunction::kFunction_floor_2B
sh::BuiltInFunction::kFunction_floor_3B
sh::BuiltInFunction::kFunction_fract_0B
sh::BuiltInFunction::kFunction_fract_1B
sh::BuiltInFunction::kFunction_fract_2B
sh::BuiltInFunction::kFunction_fract_3B
sh::BuiltInFunction::kFunction_frexp_0B0C
sh::BuiltInFunction::kFunction_frexp_1B1C
sh::BuiltInFunction::kFunction_frexp_2B2C
sh::BuiltInFunction::kFunction_frexp_3B3C
sh::BuiltInFunction::kFunction_fwidthExt_0B
sh::BuiltInFunction::kFunction_fwidthExt_1B
sh::BuiltInFunction::kFunction_fwidthExt_2B
sh::BuiltInFunction::kFunction_fwidthExt_3B
sh::BuiltInFunction::kFunction_fwidth_0B
sh::BuiltInFunction::kFunction_fwidth_1B
sh::BuiltInFunction::kFunction_fwidth_2B
sh::BuiltInFunction::kFunction_fwidth_3B
sh::BuiltInFunction::kFunction_greaterThanEqual_1B1B
sh::BuiltInFunction::kFunction_greaterThanEqual_1C1C
sh::BuiltInFunction::kFunction_greaterThanEqual_1D1D
sh::BuiltInFunction::kFunction_greaterThanEqual_2B2B
sh::BuiltInFunction::kFunction_greaterThanEqual_2C2C
sh::BuiltInFunction::kFunction_greaterThanEqual_2D2D
sh::BuiltInFunction::kFunction_greaterThanEqual_3B3B
sh::BuiltInFunction::kFunction_greaterThanEqual_3C3C
sh::BuiltInFunction::kFunction_greaterThanEqual_3D3D
sh::BuiltInFunction::kFunction_greaterThan_1B1B
sh::BuiltInFunction::kFunction_greaterThan_1C1C
sh::BuiltInFunction::kFunction_greaterThan_1D1D
sh::BuiltInFunction::kFunction_greaterThan_2B2B
sh::BuiltInFunction::kFunction_greaterThan_2C2C
sh::BuiltInFunction::kFunction_greaterThan_2D2D
sh::BuiltInFunction::kFunction_greaterThan_3B3B
sh::BuiltInFunction::kFunction_greaterThan_3C3C
sh::BuiltInFunction::kFunction_greaterThan_3D3D
sh::BuiltInFunction::kFunction_groupMemoryBarrier_
sh::BuiltInFunction::kFunction_imageLoad_0f1C
sh::BuiltInFunction::kFunction_imageLoad_0g1C
sh::BuiltInFunction::kFunction_imageLoad_0h1C
sh::BuiltInFunction::kFunction_imageLoad_0i2C
sh::BuiltInFunction::kFunction_imageLoad_0j2C
sh::BuiltInFunction::kFunction_imageLoad_0k2C
sh::BuiltInFunction::kFunction_imageLoad_0l2C
sh::BuiltInFunction::kFunction_imageLoad_0m2C
sh::BuiltInFunction::kFunction_imageLoad_0n2C
sh::BuiltInFunction::kFunction_imageLoad_0o2C
sh::BuiltInFunction::kFunction_imageLoad_0p2C
sh::BuiltInFunction::kFunction_imageLoad_0q2C
sh::BuiltInFunction::kFunction_imageSize_0f
sh::BuiltInFunction::kFunction_imageSize_0g
sh::BuiltInFunction::kFunction_imageSize_0h
sh::BuiltInFunction::kFunction_imageSize_0i
sh::BuiltInFunction::kFunction_imageSize_0j
sh::BuiltInFunction::kFunction_imageSize_0k
sh::BuiltInFunction::kFunction_imageSize_0l
sh::BuiltInFunction::kFunction_imageSize_0m
sh::BuiltInFunction::kFunction_imageSize_0n
sh::BuiltInFunction::kFunction_imageSize_0o
sh::BuiltInFunction::kFunction_imageSize_0p
sh::BuiltInFunction::kFunction_imageSize_0q
sh::BuiltInFunction::kFunction_imageStore_0f1C3B
sh::BuiltInFunction::kFunction_imageStore_0g1C3C
sh::BuiltInFunction::kFunction_imageStore_0h1C3D
sh::BuiltInFunction::kFunction_imageStore_0i2C3B
sh::BuiltInFunction::kFunction_imageStore_0j2C3C
sh::BuiltInFunction::kFunction_imageStore_0k2C3D
sh::BuiltInFunction::kFunction_imageStore_0l2C3B
sh::BuiltInFunction::kFunction_imageStore_0m2C3C
sh::BuiltInFunction::kFunction_imageStore_0n2C3D
sh::BuiltInFunction::kFunction_imageStore_0o2C3B
sh::BuiltInFunction::kFunction_imageStore_0p2C3C
sh::BuiltInFunction::kFunction_imageStore_0q2C3D
sh::BuiltInFunction::kFunction_imulExtended_0C0C0C0C
sh::BuiltInFunction::kFunction_imulExtended_1C1C1C1C
sh::BuiltInFunction::kFunction_imulExtended_2C2C2C2C
sh::BuiltInFunction::kFunction_imulExtended_3C3C3C3C
sh::BuiltInFunction::kFunction_intBitsToFloat_0C
sh::BuiltInFunction::kFunction_intBitsToFloat_1C
sh::BuiltInFunction::kFunction_intBitsToFloat_2C
sh::BuiltInFunction::kFunction_intBitsToFloat_3C
sh::BuiltInFunction::kFunction_inverse_5B
sh::BuiltInFunction::kFunction_inverse_AB
sh::BuiltInFunction::kFunction_inverse_FB
sh::BuiltInFunction::kFunction_inversesqrt_0B
sh::BuiltInFunction::kFunction_inversesqrt_1B
sh::BuiltInFunction::kFunction_inversesqrt_2B
sh::BuiltInFunction::kFunction_inversesqrt_3B
sh::BuiltInFunction::kFunction_isinf_0B
sh::BuiltInFunction::kFunction_isinf_1B
sh::BuiltInFunction::kFunction_isinf_2B
sh::BuiltInFunction::kFunction_isinf_3B
sh::BuiltInFunction::kFunction_isnan_0B
sh::BuiltInFunction::kFunction_isnan_1B
sh::BuiltInFunction::kFunction_isnan_2B
sh::BuiltInFunction::kFunction_isnan_3B
sh::BuiltInFunction::kFunction_ldexp_0B0C
sh::BuiltInFunction::kFunction_ldexp_1B1C
sh::BuiltInFunction::kFunction_ldexp_2B2C
sh::BuiltInFunction::kFunction_ldexp_3B3C
sh::BuiltInFunction::kFunction_length_0B
sh::BuiltInFunction::kFunction_length_1B
sh::BuiltInFunction::kFunction_length_2B
sh::BuiltInFunction::kFunction_length_3B
sh::BuiltInFunction::kFunction_lessThanEqual_1B1B
sh::BuiltInFunction::kFunction_lessThanEqual_1C1C
sh::BuiltInFunction::kFunction_lessThanEqual_1D1D
sh::BuiltInFunction::kFunction_lessThanEqual_2B2B
sh::BuiltInFunction::kFunction_lessThanEqual_2C2C
sh::BuiltInFunction::kFunction_lessThanEqual_2D2D
sh::BuiltInFunction::kFunction_lessThanEqual_3B3B
sh::BuiltInFunction::kFunction_lessThanEqual_3C3C
sh::BuiltInFunction::kFunction_lessThanEqual_3D3D
sh::BuiltInFunction::kFunction_lessThan_1B1B
sh::BuiltInFunction::kFunction_lessThan_1C1C
sh::BuiltInFunction::kFunction_lessThan_1D1D
sh::BuiltInFunction::kFunction_lessThan_2B2B
sh::BuiltInFunction::kFunction_lessThan_2C2C
sh::BuiltInFunction::kFunction_lessThan_2D2D
sh::BuiltInFunction::kFunction_lessThan_3B3B
sh::BuiltInFunction::kFunction_lessThan_3C3C
sh::BuiltInFunction::kFunction_lessThan_3D3D
sh::BuiltInFunction::kFunction_log2_0B
sh::BuiltInFunction::kFunction_log2_1B
sh::BuiltInFunction::kFunction_log2_2B
sh::BuiltInFunction::kFunction_log2_3B
sh::BuiltInFunction::kFunction_log_0B
sh::BuiltInFunction::kFunction_log_1B
sh::BuiltInFunction::kFunction_log_2B
sh::BuiltInFunction::kFunction_log_3B
sh::BuiltInFunction::kFunction_matrixCompMult_5B5B
sh::BuiltInFunction::kFunction_matrixCompMult_6B6B
sh::BuiltInFunction::kFunction_matrixCompMult_7B7B
sh::BuiltInFunction::kFunction_matrixCompMult_9B9B
sh::BuiltInFunction::kFunction_matrixCompMult_ABAB
sh::BuiltInFunction::kFunction_matrixCompMult_BBBB
sh::BuiltInFunction::kFunction_matrixCompMult_DBDB
sh::BuiltInFunction::kFunction_matrixCompMult_EBEB
sh::BuiltInFunction::kFunction_matrixCompMult_FBFB
sh::BuiltInFunction::kFunction_max_0B0B
sh::BuiltInFunction::kFunction_max_0C0C
sh::BuiltInFunction::kFunction_max_0D0D
sh::BuiltInFunction::kFunction_max_1B0B
sh::BuiltInFunction::kFunction_max_1B1B
sh::BuiltInFunction::kFunction_max_1C0C
sh::BuiltInFunction::kFunction_max_1C1C
sh::BuiltInFunction::kFunction_max_1D0D
sh::BuiltInFunction::kFunction_max_1D1D
sh::BuiltInFunction::kFunction_max_2B0B
sh::BuiltInFunction::kFunction_max_2B2B
sh::BuiltInFunction::kFunction_max_2C0C
sh::BuiltInFunction::kFunction_max_2C2C
sh::BuiltInFunction::kFunction_max_2D0D
sh::BuiltInFunction::kFunction_max_2D2D
sh::BuiltInFunction::kFunction_max_3B0B
sh::BuiltInFunction::kFunction_max_3B3B
sh::BuiltInFunction::kFunction_max_3C0C
sh::BuiltInFunction::kFunction_max_3C3C
sh::BuiltInFunction::kFunction_max_3D0D
sh::BuiltInFunction::kFunction_max_3D3D
sh::BuiltInFunction::kFunction_memoryBarrierAtomicCounter_
sh::BuiltInFunction::kFunction_memoryBarrierBuffer_
sh::BuiltInFunction::kFunction_memoryBarrierImage_
sh::BuiltInFunction::kFunction_memoryBarrierShared_
sh::BuiltInFunction::kFunction_memoryBarrier_
sh::BuiltInFunction::kFunction_min_0B0B
sh::BuiltInFunction::kFunction_min_0C0C
sh::BuiltInFunction::kFunction_min_0D0D
sh::BuiltInFunction::kFunction_min_1B0B
sh::BuiltInFunction::kFunction_min_1B1B
sh::BuiltInFunction::kFunction_min_1C0C
sh::BuiltInFunction::kFunction_min_1C1C
sh::BuiltInFunction::kFunction_min_1D0D
sh::BuiltInFunction::kFunction_min_1D1D
sh::BuiltInFunction::kFunction_min_2B0B
sh::BuiltInFunction::kFunction_min_2B2B
sh::BuiltInFunction::kFunction_min_2C0C
sh::BuiltInFunction::kFunction_min_2C2C
sh::BuiltInFunction::kFunction_min_2D0D
sh::BuiltInFunction::kFunction_min_2D2D
sh::BuiltInFunction::kFunction_min_3B0B
sh::BuiltInFunction::kFunction_min_3B3B
sh::BuiltInFunction::kFunction_min_3C0C
sh::BuiltInFunction::kFunction_min_3C3C
sh::BuiltInFunction::kFunction_min_3D0D
sh::BuiltInFunction::kFunction_min_3D3D
sh::BuiltInFunction::kFunction_mix_0B0B0B
sh::BuiltInFunction::kFunction_mix_0B0B0E
sh::BuiltInFunction::kFunction_mix_1B1B0B
sh::BuiltInFunction::kFunction_mix_1B1B1B
sh::BuiltInFunction::kFunction_mix_1B1B1E
sh::BuiltInFunction::kFunction_mix_2B2B0B
sh::BuiltInFunction::kFunction_mix_2B2B2B
sh::BuiltInFunction::kFunction_mix_2B2B2E
sh::BuiltInFunction::kFunction_mix_3B3B0B
sh::BuiltInFunction::kFunction_mix_3B3B3B
sh::BuiltInFunction::kFunction_mix_3B3B3E
sh::BuiltInFunction::kFunction_mod_0B0B
sh::BuiltInFunction::kFunction_mod_1B0B
sh::BuiltInFunction::kFunction_mod_1B1B
sh::BuiltInFunction::kFunction_mod_2B0B
sh::BuiltInFunction::kFunction_mod_2B2B
sh::BuiltInFunction::kFunction_mod_3B0B
sh::BuiltInFunction::kFunction_mod_3B3B
sh::BuiltInFunction::kFunction_modf_0B0B
sh::BuiltInFunction::kFunction_modf_1B1B
sh::BuiltInFunction::kFunction_modf_2B2B
sh::BuiltInFunction::kFunction_modf_3B3B
sh::BuiltInFunction::kFunction_normalize_0B
sh::BuiltInFunction::kFunction_normalize_1B
sh::BuiltInFunction::kFunction_normalize_2B
sh::BuiltInFunction::kFunction_normalize_3B
sh::BuiltInFunction::kFunction_notEqual_1B1B
sh::BuiltInFunction::kFunction_notEqual_1C1C
sh::BuiltInFunction::kFunction_notEqual_1D1D
sh::BuiltInFunction::kFunction_notEqual_1E1E
sh::BuiltInFunction::kFunction_notEqual_2B2B
sh::BuiltInFunction::kFunction_notEqual_2C2C
sh::BuiltInFunction::kFunction_notEqual_2D2D
sh::BuiltInFunction::kFunction_notEqual_2E2E
sh::BuiltInFunction::kFunction_notEqual_3B3B
sh::BuiltInFunction::kFunction_notEqual_3C3C
sh::BuiltInFunction::kFunction_notEqual_3D3D
sh::BuiltInFunction::kFunction_notEqual_3E3E
sh::BuiltInFunction::kFunction_notFunc_1E
sh::BuiltInFunction::kFunction_notFunc_2E
sh::BuiltInFunction::kFunction_notFunc_3E
sh::BuiltInFunction::kFunction_outerProduct_1B1B
sh::BuiltInFunction::kFunction_outerProduct_1B2B
sh::BuiltInFunction::kFunction_outerProduct_1B3B
sh::BuiltInFunction::kFunction_outerProduct_2B1B
sh::BuiltInFunction::kFunction_outerProduct_2B2B
sh::BuiltInFunction::kFunction_outerProduct_2B3B
sh::BuiltInFunction::kFunction_outerProduct_3B1B
sh::BuiltInFunction::kFunction_outerProduct_3B2B
sh::BuiltInFunction::kFunction_outerProduct_3B3B
sh::BuiltInFunction::kFunction_packHalf2x16_1B
sh::BuiltInFunction::kFunction_packSnorm2x16_1B
sh::BuiltInFunction::kFunction_packSnorm4x8_3B
sh::BuiltInFunction::kFunction_packUnorm2x16_1B
sh::BuiltInFunction::kFunction_packUnorm4x8_3B
sh::BuiltInFunction::kFunction_pow_0B0B
sh::BuiltInFunction::kFunction_pow_1B1B
sh::BuiltInFunction::kFunction_pow_2B2B
sh::BuiltInFunction::kFunction_pow_3B3B
sh::BuiltInFunction::kFunction_radians_0B
sh::BuiltInFunction::kFunction_radians_1B
sh::BuiltInFunction::kFunction_radians_2B
sh::BuiltInFunction::kFunction_radians_3B
sh::BuiltInFunction::kFunction_reflect_0B0B
sh::BuiltInFunction::kFunction_reflect_1B1B
sh::BuiltInFunction::kFunction_reflect_2B2B
sh::BuiltInFunction::kFunction_reflect_3B3B
sh::BuiltInFunction::kFunction_refract_0B0B0B
sh::BuiltInFunction::kFunction_refract_1B1B0B
sh::BuiltInFunction::kFunction_refract_2B2B0B
sh::BuiltInFunction::kFunction_refract_3B3B0B
sh::BuiltInFunction::kFunction_rgb_2_yuv_2B0G
sh::BuiltInFunction::kFunction_roundEven_0B
sh::BuiltInFunction::kFunction_roundEven_1B
sh::BuiltInFunction::kFunction_roundEven_2B
sh::BuiltInFunction::kFunction_roundEven_3B
sh::BuiltInFunction::kFunction_round_0B
sh::BuiltInFunction::kFunction_round_1B
sh::BuiltInFunction::kFunction_round_2B
sh::BuiltInFunction::kFunction_round_3B
sh::BuiltInFunction::kFunction_sign_0B
sh::BuiltInFunction::kFunction_sign_0C
sh::BuiltInFunction::kFunction_sign_1B
sh::BuiltInFunction::kFunction_sign_1C
sh::BuiltInFunction::kFunction_sign_2B
sh::BuiltInFunction::kFunction_sign_2C
sh::BuiltInFunction::kFunction_sign_3B
sh::BuiltInFunction::kFunction_sign_3C
sh::BuiltInFunction::kFunction_sin_0B
sh::BuiltInFunction::kFunction_sin_1B
sh::BuiltInFunction::kFunction_sin_2B
sh::BuiltInFunction::kFunction_sin_3B
sh::BuiltInFunction::kFunction_sinh_0B
sh::BuiltInFunction::kFunction_sinh_1B
sh::BuiltInFunction::kFunction_sinh_2B
sh::BuiltInFunction::kFunction_sinh_3B
sh::BuiltInFunction::kFunction_smoothstep_0B0B0B
sh::BuiltInFunction::kFunction_smoothstep_0B0B1B
sh::BuiltInFunction::kFunction_smoothstep_0B0B2B
sh::BuiltInFunction::kFunction_smoothstep_0B0B3B
sh::BuiltInFunction::kFunction_smoothstep_1B1B1B
sh::BuiltInFunction::kFunction_smoothstep_2B2B2B
sh::BuiltInFunction::kFunction_smoothstep_3B3B3B
sh::BuiltInFunction::kFunction_sqrt_0B
sh::BuiltInFunction::kFunction_sqrt_1B
sh::BuiltInFunction::kFunction_sqrt_2B
sh::BuiltInFunction::kFunction_sqrt_3B
sh::BuiltInFunction::kFunction_step_0B0B
sh::BuiltInFunction::kFunction_step_0B1B
sh::BuiltInFunction::kFunction_step_0B2B
sh::BuiltInFunction::kFunction_step_0B3B
sh::BuiltInFunction::kFunction_step_1B1B
sh::BuiltInFunction::kFunction_step_2B2B
sh::BuiltInFunction::kFunction_step_3B3B
sh::BuiltInFunction::kFunction_tan_0B
sh::BuiltInFunction::kFunction_tan_1B
sh::BuiltInFunction::kFunction_tan_2B
sh::BuiltInFunction::kFunction_tan_3B
sh::BuiltInFunction::kFunction_tanh_0B
sh::BuiltInFunction::kFunction_tanh_1B
sh::BuiltInFunction::kFunction_tanh_2B
sh::BuiltInFunction::kFunction_tanh_3B
sh::BuiltInFunction::kFunction_texelFetchOffset_0H1C0C1C
sh::BuiltInFunction::kFunction_texelFetchOffset_0I2C0C2C
sh::BuiltInFunction::kFunction_texelFetchOffset_0K2C0C1C
sh::BuiltInFunction::kFunction_texelFetchOffset_0Q1C0C1C
sh::BuiltInFunction::kFunction_texelFetchOffset_0R2C0C2C
sh::BuiltInFunction::kFunction_texelFetchOffset_0T2C0C1C
sh::BuiltInFunction::kFunction_texelFetchOffset_0W1C0C1C
sh::BuiltInFunction::kFunction_texelFetchOffset_0X2C0C2C
sh::BuiltInFunction::kFunction_texelFetchOffset_0Z2C0C1C
sh::BuiltInFunction::kFunction_texelFetch_0H1C0C
sh::BuiltInFunction::kFunction_texelFetch_0I2C0C
sh::BuiltInFunction::kFunction_texelFetch_0K2C0C
sh::BuiltInFunction::kFunction_texelFetch_0L1C0C
sh::BuiltInFunction::kFunction_texelFetch_0M1C0C
sh::BuiltInFunction::kFunction_texelFetch_0O1C0C
sh::BuiltInFunction::kFunction_texelFetch_0P2C0C
sh::BuiltInFunction::kFunction_texelFetch_0Q1C0C
sh::BuiltInFunction::kFunction_texelFetch_0R2C0C
sh::BuiltInFunction::kFunction_texelFetch_0T2C0C
sh::BuiltInFunction::kFunction_texelFetch_0U1C0C
sh::BuiltInFunction::kFunction_texelFetch_0V2C0C
sh::BuiltInFunction::kFunction_texelFetch_0W1C0C
sh::BuiltInFunction::kFunction_texelFetch_0X2C0C
sh::BuiltInFunction::kFunction_texelFetch_0Z2C0C
sh::BuiltInFunction::kFunction_texelFetch_0a1C0C
sh::BuiltInFunction::kFunction_texelFetch_0b2C0C
sh::BuiltInFunction::kFunction_texture2DGradEXT_0H1B1B1B
sh::BuiltInFunction::kFunction_texture2DLodEXT_0H1B0B
sh::BuiltInFunction::kFunction_texture2DLod_0H1B0B
sh::BuiltInFunction::kFunction_texture2DProjGradEXT_0H2B1B1B
sh::BuiltInFunction::kFunction_texture2DProjGradEXT_0H3B1B1B
sh::BuiltInFunction::kFunction_texture2DProjLodEXT_0H2B0B
sh::BuiltInFunction::kFunction_texture2DProjLodEXT_0H3B0B
sh::BuiltInFunction::kFunction_texture2DProjLod_0H2B0B
sh::BuiltInFunction::kFunction_texture2DProjLod_0H3B0B
sh::BuiltInFunction::kFunction_texture2DProj_0H2B
sh::BuiltInFunction::kFunction_texture2DProj_0H2B0B
sh::BuiltInFunction::kFunction_texture2DProj_0H3B
sh::BuiltInFunction::kFunction_texture2DProj_0H3B0B
sh::BuiltInFunction::kFunction_texture2DProj_0L2B
sh::BuiltInFunction::kFunction_texture2DProj_0L3B
sh::BuiltInFunction::kFunction_texture2DRectProj_0N2B
sh::BuiltInFunction::kFunction_texture2DRectProj_0N3B
sh::BuiltInFunction::kFunction_texture2DRect_0N1B
sh::BuiltInFunction::kFunction_texture2D_0H1B
sh::BuiltInFunction::kFunction_texture2D_0H1B0B
sh::BuiltInFunction::kFunction_texture2D_0L1B
sh::BuiltInFunction::kFunction_textureCubeGradEXT_0J2B2B2B
sh::BuiltInFunction::kFunction_textureCubeLodEXT_0J2B0B
sh::BuiltInFunction::kFunction_textureCubeLod_0J2B0B
sh::BuiltInFunction::kFunction_textureCube_0J2B
sh::BuiltInFunction::kFunction_textureCube_0J2B0B
sh::BuiltInFunction::kFunction_textureGatherOffset_0H1B1C
sh::BuiltInFunction::kFunction_textureGatherOffset_0H1B1C0C
sh::BuiltInFunction::kFunction_textureGatherOffset_0K2B1C
sh::BuiltInFunction::kFunction_textureGatherOffset_0K2B1C0C
sh::BuiltInFunction::kFunction_textureGatherOffset_0Q1B1C
sh::BuiltInFunction::kFunction_textureGatherOffset_0Q1B1C0C
sh::BuiltInFunction::kFunction_textureGatherOffset_0T2B1C
sh::BuiltInFunction::kFunction_textureGatherOffset_0T2B1C0C
sh::BuiltInFunction::kFunction_textureGatherOffset_0W1B1C
sh::BuiltInFunction::kFunction_textureGatherOffset_0W1B1C0C
sh::BuiltInFunction::kFunction_textureGatherOffset_0Z2B1C
sh::BuiltInFunction::kFunction_textureGatherOffset_0Z2B1C0C
sh::BuiltInFunction::kFunction_textureGatherOffset_0c1B0B1C
sh::BuiltInFunction::kFunction_textureGatherOffset_0e2B0B1C
sh::BuiltInFunction::kFunction_textureGather_0H1B
sh::BuiltInFunction::kFunction_textureGather_0H1B0C
sh::BuiltInFunction::kFunction_textureGather_0J2B
sh::BuiltInFunction::kFunction_textureGather_0J2B0C
sh::BuiltInFunction::kFunction_textureGather_0K2B
sh::BuiltInFunction::kFunction_textureGather_0K2B0C
sh::BuiltInFunction::kFunction_textureGather_0Q1B
sh::BuiltInFunction::kFunction_textureGather_0Q1B0C
sh::BuiltInFunction::kFunction_textureGather_0S2B
sh::BuiltInFunction::kFunction_textureGather_0S2B0C
sh::BuiltInFunction::kFunction_textureGather_0T2B
sh::BuiltInFunction::kFunction_textureGather_0T2B0C
sh::BuiltInFunction::kFunction_textureGather_0W1B
sh::BuiltInFunction::kFunction_textureGather_0W1B0C
sh::BuiltInFunction::kFunction_textureGather_0Y2B
sh::BuiltInFunction::kFunction_textureGather_0Y2B0C
sh::BuiltInFunction::kFunction_textureGather_0Z2B
sh::BuiltInFunction::kFunction_textureGather_0Z2B0C
sh::BuiltInFunction::kFunction_textureGather_0c1B
sh::BuiltInFunction::kFunction_textureGather_0c1B0B
sh::BuiltInFunction::kFunction_textureGather_0d2B
sh::BuiltInFunction::kFunction_textureGather_0d2B0B
sh::BuiltInFunction::kFunction_textureGather_0e2B
sh::BuiltInFunction::kFunction_textureGather_0e2B0B
sh::BuiltInFunction::kFunction_textureGradOffset_0H1B1B1B1C
sh::BuiltInFunction::kFunction_textureGradOffset_0I2B2B2B2C
sh::BuiltInFunction::kFunction_textureGradOffset_0K2B1B1B1C
sh::BuiltInFunction::kFunction_textureGradOffset_0Q1B1B1B1C
sh::BuiltInFunction::kFunction_textureGradOffset_0R2B2B2B2C
sh::BuiltInFunction::kFunction_textureGradOffset_0T2B1B1B1C
sh::BuiltInFunction::kFunction_textureGradOffset_0W1B1B1B1C
sh::BuiltInFunction::kFunction_textureGradOffset_0X2B2B2B2C
sh::BuiltInFunction::kFunction_textureGradOffset_0Z2B1B1B1C
sh::BuiltInFunction::kFunction_textureGradOffset_0c2B1B1B1C
sh::BuiltInFunction::kFunction_textureGradOffset_0e3B1B1B1C
sh::BuiltInFunction::kFunction_textureGrad_0H1B1B1B
sh::BuiltInFunction::kFunction_textureGrad_0I2B2B2B
sh::BuiltInFunction::kFunction_textureGrad_0J2B2B2B
sh::BuiltInFunction::kFunction_textureGrad_0K2B1B1B
sh::BuiltInFunction::kFunction_textureGrad_0Q1B1B1B
sh::BuiltInFunction::kFunction_textureGrad_0R2B2B2B
sh::BuiltInFunction::kFunction_textureGrad_0S2B2B2B
sh::BuiltInFunction::kFunction_textureGrad_0T2B1B1B
sh::BuiltInFunction::kFunction_textureGrad_0W1B1B1B
sh::BuiltInFunction::kFunction_textureGrad_0X2B2B2B
sh::BuiltInFunction::kFunction_textureGrad_0Y2B2B2B
sh::BuiltInFunction::kFunction_textureGrad_0Z2B1B1B
sh::BuiltInFunction::kFunction_textureGrad_0c2B1B1B
sh::BuiltInFunction::kFunction_textureGrad_0d3B2B2B
sh::BuiltInFunction::kFunction_textureGrad_0e3B1B1B
sh::BuiltInFunction::kFunction_textureLodOffset_0H1B0B1C
sh::BuiltInFunction::kFunction_textureLodOffset_0I2B0B2C
sh::BuiltInFunction::kFunction_textureLodOffset_0K2B0B1C
sh::BuiltInFunction::kFunction_textureLodOffset_0Q1B0B1C
sh::BuiltInFunction::kFunction_textureLodOffset_0R2B0B2C
sh::BuiltInFunction::kFunction_textureLodOffset_0T2B0B1C
sh::BuiltInFunction::kFunction_textureLodOffset_0W1B0B1C
sh::BuiltInFunction::kFunction_textureLodOffset_0X2B0B2C
sh::BuiltInFunction::kFunction_textureLodOffset_0Z2B0B1C
sh::BuiltInFunction::kFunction_textureLodOffset_0c2B0B1C
sh::BuiltInFunction::kFunction_textureLod_0H1B0B
sh::BuiltInFunction::kFunction_textureLod_0I2B0B
sh::BuiltInFunction::kFunction_textureLod_0J2B0B
sh::BuiltInFunction::kFunction_textureLod_0K2B0B
sh::BuiltInFunction::kFunction_textureLod_0Q1B0B
sh::BuiltInFunction::kFunction_textureLod_0R2B0B
sh::BuiltInFunction::kFunction_textureLod_0S2B0B
sh::BuiltInFunction::kFunction_textureLod_0T2B0B
sh::BuiltInFunction::kFunction_textureLod_0W1B0B
sh::BuiltInFunction::kFunction_textureLod_0X2B0B
sh::BuiltInFunction::kFunction_textureLod_0Y2B0B
sh::BuiltInFunction::kFunction_textureLod_0Z2B0B
sh::BuiltInFunction::kFunction_textureLod_0c2B0B
sh::BuiltInFunction::kFunction_textureOffset_0H1B1C
sh::BuiltInFunction::kFunction_textureOffset_0H1B1C0B
sh::BuiltInFunction::kFunction_textureOffset_0I2B2C
sh::BuiltInFunction::kFunction_textureOffset_0I2B2C0B
sh::BuiltInFunction::kFunction_textureOffset_0K2B1C
sh::BuiltInFunction::kFunction_textureOffset_0K2B1C0B
sh::BuiltInFunction::kFunction_textureOffset_0Q1B1C
sh::BuiltInFunction::kFunction_textureOffset_0Q1B1C0B
sh::BuiltInFunction::kFunction_textureOffset_0R2B2C
sh::BuiltInFunction::kFunction_textureOffset_0R2B2C0B
sh::BuiltInFunction::kFunction_textureOffset_0T2B1C
sh::BuiltInFunction::kFunction_textureOffset_0T2B1C0B
sh::BuiltInFunction::kFunction_textureOffset_0W1B1C
sh::BuiltInFunction::kFunction_textureOffset_0W1B1C0B
sh::BuiltInFunction::kFunction_textureOffset_0X2B2C
sh::BuiltInFunction::kFunction_textureOffset_0X2B2C0B
sh::BuiltInFunction::kFunction_textureOffset_0Z2B1C
sh::BuiltInFunction::kFunction_textureOffset_0Z2B1C0B
sh::BuiltInFunction::kFunction_textureOffset_0c2B1C
sh::BuiltInFunction::kFunction_textureOffset_0c2B1C0B
sh::BuiltInFunction::kFunction_textureProjGradOffset_0H2B1B1B1C
sh::BuiltInFunction::kFunction_textureProjGradOffset_0H3B1B1B1C
sh::BuiltInFunction::kFunction_textureProjGradOffset_0I3B2B2B2C
sh::BuiltInFunction::kFunction_textureProjGradOffset_0Q2B1B1B1C
sh::BuiltInFunction::kFunction_textureProjGradOffset_0Q3B1B1B1C
sh::BuiltInFunction::kFunction_textureProjGradOffset_0R3B2B2B2C
sh::BuiltInFunction::kFunction_textureProjGradOffset_0W2B1B1B1C
sh::BuiltInFunction::kFunction_textureProjGradOffset_0W3B1B1B1C
sh::BuiltInFunction::kFunction_textureProjGradOffset_0X3B2B2B2C
sh::BuiltInFunction::kFunction_textureProjGradOffset_0c3B1B1B1C
sh::BuiltInFunction::kFunction_textureProjGrad_0H2B1B1B
sh::BuiltInFunction::kFunction_textureProjGrad_0H3B1B1B
sh::BuiltInFunction::kFunction_textureProjGrad_0I3B2B2B
sh::BuiltInFunction::kFunction_textureProjGrad_0Q2B1B1B
sh::BuiltInFunction::kFunction_textureProjGrad_0Q3B1B1B
sh::BuiltInFunction::kFunction_textureProjGrad_0R3B2B2B
sh::BuiltInFunction::kFunction_textureProjGrad_0W2B1B1B
sh::BuiltInFunction::kFunction_textureProjGrad_0W3B1B1B
sh::BuiltInFunction::kFunction_textureProjGrad_0X3B2B2B
sh::BuiltInFunction::kFunction_textureProjGrad_0c3B1B1B
sh::BuiltInFunction::kFunction_textureProjLodOffset_0H2B0B1C
sh::BuiltInFunction::kFunction_textureProjLodOffset_0H3B0B1C
sh::BuiltInFunction::kFunction_textureProjLodOffset_0I3B0B2C
sh::BuiltInFunction::kFunction_textureProjLodOffset_0Q2B0B1C
sh::BuiltInFunction::kFunction_textureProjLodOffset_0Q3B0B1C
sh::BuiltInFunction::kFunction_textureProjLodOffset_0R3B0B2C
sh::BuiltInFunction::kFunction_textureProjLodOffset_0W2B0B1C
sh::BuiltInFunction::kFunction_textureProjLodOffset_0W3B0B1C
sh::BuiltInFunction::kFunction_textureProjLodOffset_0X3B0B2C
sh::BuiltInFunction::kFunction_textureProjLodOffset_0c3B0B1C
sh::BuiltInFunction::kFunction_textureProjLod_0H2B0B
sh::BuiltInFunction::kFunction_textureProjLod_0H3B0B
sh::BuiltInFunction::kFunction_textureProjLod_0I3B0B
sh::BuiltInFunction::kFunction_textureProjLod_0Q2B0B
sh::BuiltInFunction::kFunction_textureProjLod_0Q3B0B
sh::BuiltInFunction::kFunction_textureProjLod_0R3B0B
sh::BuiltInFunction::kFunction_textureProjLod_0W2B0B
sh::BuiltInFunction::kFunction_textureProjLod_0W3B0B
sh::BuiltInFunction::kFunction_textureProjLod_0X3B0B
sh::BuiltInFunction::kFunction_textureProjLod_0c3B0B
sh::BuiltInFunction::kFunction_textureProjOffset_0H2B1C
sh::BuiltInFunction::kFunction_textureProjOffset_0H2B1C0B
sh::BuiltInFunction::kFunction_textureProjOffset_0H3B1C
sh::BuiltInFunction::kFunction_textureProjOffset_0H3B1C0B
sh::BuiltInFunction::kFunction_textureProjOffset_0I3B2C
sh::BuiltInFunction::kFunction_textureProjOffset_0I3B2C0B
sh::BuiltInFunction::kFunction_textureProjOffset_0Q2B1C
sh::BuiltInFunction::kFunction_textureProjOffset_0Q2B1C0B
sh::BuiltInFunction::kFunction_textureProjOffset_0Q3B1C
sh::BuiltInFunction::kFunction_textureProjOffset_0Q3B1C0B
sh::BuiltInFunction::kFunction_textureProjOffset_0R3B2C
sh::BuiltInFunction::kFunction_textureProjOffset_0R3B2C0B
sh::BuiltInFunction::kFunction_textureProjOffset_0W2B1C
sh::BuiltInFunction::kFunction_textureProjOffset_0W2B1C0B
sh::BuiltInFunction::kFunction_textureProjOffset_0W3B1C
sh::BuiltInFunction::kFunction_textureProjOffset_0W3B1C0B
sh::BuiltInFunction::kFunction_textureProjOffset_0X3B2C
sh::BuiltInFunction::kFunction_textureProjOffset_0X3B2C0B
sh::BuiltInFunction::kFunction_textureProjOffset_0c3B1C
sh::BuiltInFunction::kFunction_textureProjOffset_0c3B1C0B
sh::BuiltInFunction::kFunction_textureProj_0H2B
sh::BuiltInFunction::kFunction_textureProj_0H2B0B
sh::BuiltInFunction::kFunction_textureProj_0H3B
sh::BuiltInFunction::kFunction_textureProj_0H3B0B
sh::BuiltInFunction::kFunction_textureProj_0I3B
sh::BuiltInFunction::kFunction_textureProj_0I3B0B
sh::BuiltInFunction::kFunction_textureProj_0L2B
sh::BuiltInFunction::kFunction_textureProj_0L2B0B
sh::BuiltInFunction::kFunction_textureProj_0L3B
sh::BuiltInFunction::kFunction_textureProj_0L3B0B
sh::BuiltInFunction::kFunction_textureProj_0M2B
sh::BuiltInFunction::kFunction_textureProj_0M2B0B
sh::BuiltInFunction::kFunction_textureProj_0M3B
sh::BuiltInFunction::kFunction_textureProj_0M3B0B
sh::BuiltInFunction::kFunction_textureProj_0N2B
sh::BuiltInFunction::kFunction_textureProj_0N3B
sh::BuiltInFunction::kFunction_textureProj_0Q2B
sh::BuiltInFunction::kFunction_textureProj_0Q2B0B
sh::BuiltInFunction::kFunction_textureProj_0Q3B
sh::BuiltInFunction::kFunction_textureProj_0Q3B0B
sh::BuiltInFunction::kFunction_textureProj_0R3B
sh::BuiltInFunction::kFunction_textureProj_0R3B0B
sh::BuiltInFunction::kFunction_textureProj_0W2B
sh::BuiltInFunction::kFunction_textureProj_0W2B0B
sh::BuiltInFunction::kFunction_textureProj_0W3B
sh::BuiltInFunction::kFunction_textureProj_0W3B0B
sh::BuiltInFunction::kFunction_textureProj_0X3B
sh::BuiltInFunction::kFunction_textureProj_0X3B0B
sh::BuiltInFunction::kFunction_textureProj_0c3B
sh::BuiltInFunction::kFunction_textureProj_0c3B0B
sh::BuiltInFunction::kFunction_textureSize_0H0C
sh::BuiltInFunction::kFunction_textureSize_0I0C
sh::BuiltInFunction::kFunction_textureSize_0J0C
sh::BuiltInFunction::kFunction_textureSize_0K0C
sh::BuiltInFunction::kFunction_textureSize_0L0C
sh::BuiltInFunction::kFunction_textureSize_0M0C
sh::BuiltInFunction::kFunction_textureSize_0O
sh::BuiltInFunction::kFunction_textureSize_0P
sh::BuiltInFunction::kFunction_textureSize_0Q0C
sh::BuiltInFunction::kFunction_textureSize_0R0C
sh::BuiltInFunction::kFunction_textureSize_0S0C
sh::BuiltInFunction::kFunction_textureSize_0T0C
sh::BuiltInFunction::kFunction_textureSize_0U
sh::BuiltInFunction::kFunction_textureSize_0V
sh::BuiltInFunction::kFunction_textureSize_0W0C
sh::BuiltInFunction::kFunction_textureSize_0X0C
sh::BuiltInFunction::kFunction_textureSize_0Y0C
sh::BuiltInFunction::kFunction_textureSize_0Z0C
sh::BuiltInFunction::kFunction_textureSize_0a
sh::BuiltInFunction::kFunction_textureSize_0b
sh::BuiltInFunction::kFunction_textureSize_0c0C
sh::BuiltInFunction::kFunction_textureSize_0d0C
sh::BuiltInFunction::kFunction_textureSize_0e0C
sh::BuiltInFunction::kFunction_texture_0H1B
sh::BuiltInFunction::kFunction_texture_0H1B0B
sh::BuiltInFunction::kFunction_texture_0I2B
sh::BuiltInFunction::kFunction_texture_0I2B0B
sh::BuiltInFunction::kFunction_texture_0J2B
sh::BuiltInFunction::kFunction_texture_0J2B0B
sh::BuiltInFunction::kFunction_texture_0K2B
sh::BuiltInFunction::kFunction_texture_0K2B0B
sh::BuiltInFunction::kFunction_texture_0L1B
sh::BuiltInFunction::kFunction_texture_0L1B0B
sh::BuiltInFunction::kFunction_texture_0M1B
sh::BuiltInFunction::kFunction_texture_0M1B0B
sh::BuiltInFunction::kFunction_texture_0N1B
sh::BuiltInFunction::kFunction_texture_0Q1B
sh::BuiltInFunction::kFunction_texture_0Q1B0B
sh::BuiltInFunction::kFunction_texture_0R2B
sh::BuiltInFunction::kFunction_texture_0R2B0B
sh::BuiltInFunction::kFunction_texture_0S2B
sh::BuiltInFunction::kFunction_texture_0S2B0B
sh::BuiltInFunction::kFunction_texture_0T2B
sh::BuiltInFunction::kFunction_texture_0T2B0B
sh::BuiltInFunction::kFunction_texture_0W1B
sh::BuiltInFunction::kFunction_texture_0W1B0B
sh::BuiltInFunction::kFunction_texture_0X2B
sh::BuiltInFunction::kFunction_texture_0X2B0B
sh::BuiltInFunction::kFunction_texture_0Y2B
sh::BuiltInFunction::kFunction_texture_0Y2B0B
sh::BuiltInFunction::kFunction_texture_0Z2B
sh::BuiltInFunction::kFunction_texture_0Z2B0B
sh::BuiltInFunction::kFunction_texture_0c2B
sh::BuiltInFunction::kFunction_texture_0c2B0B
sh::BuiltInFunction::kFunction_texture_0d3B
sh::BuiltInFunction::kFunction_texture_0d3B0B
sh::BuiltInFunction::kFunction_texture_0e3B
sh::BuiltInFunction::kFunction_transpose_5B
sh::BuiltInFunction::kFunction_transpose_6B
sh::BuiltInFunction::kFunction_transpose_7B
sh::BuiltInFunction::kFunction_transpose_9B
sh::BuiltInFunction::kFunction_transpose_AB
sh::BuiltInFunction::kFunction_transpose_BB
sh::BuiltInFunction::kFunction_transpose_DB
sh::BuiltInFunction::kFunction_transpose_EB
sh::BuiltInFunction::kFunction_transpose_FB
sh::BuiltInFunction::kFunction_trunc_0B
sh::BuiltInFunction::kFunction_trunc_1B
sh::BuiltInFunction::kFunction_trunc_2B
sh::BuiltInFunction::kFunction_trunc_3B
sh::BuiltInFunction::kFunction_uaddCarry_0D0D0D
sh::BuiltInFunction::kFunction_uaddCarry_1D1D1D
sh::BuiltInFunction::kFunction_uaddCarry_2D2D2D
sh::BuiltInFunction::kFunction_uaddCarry_3D3D3D
sh::BuiltInFunction::kFunction_uintBitsToFloat_0D
sh::BuiltInFunction::kFunction_uintBitsToFloat_1D
sh::BuiltInFunction::kFunction_uintBitsToFloat_2D
sh::BuiltInFunction::kFunction_uintBitsToFloat_3D
sh::BuiltInFunction::kFunction_umulExtended_0D0D0D0D
sh::BuiltInFunction::kFunction_umulExtended_1D1D1D1D
sh::BuiltInFunction::kFunction_umulExtended_2D2D2D2D
sh::BuiltInFunction::kFunction_umulExtended_3D3D3D3D
sh::BuiltInFunction::kFunction_unpackHalf2x16_0D
sh::BuiltInFunction::kFunction_unpackSnorm2x16_0D
sh::BuiltInFunction::kFunction_unpackSnorm4x8_0D
sh::BuiltInFunction::kFunction_unpackUnorm2x16_0D
sh::BuiltInFunction::kFunction_unpackUnorm4x8_0D
sh::BuiltInFunction::kFunction_usubBorrow_0D0D0D
sh::BuiltInFunction::kFunction_usubBorrow_1D1D1D
sh::BuiltInFunction::kFunction_usubBorrow_2D2D2D
sh::BuiltInFunction::kFunction_usubBorrow_3D3D3D
sh::BuiltInFunction::kFunction_yuv_2_rgb_2B0G
sh::BuiltInFunctionEmulator::BuiltInFunctionEmulationMarker::visitAggregate(sh::Visit, sh::TIntermAggregate*)
sh::BuiltInFunctionEmulator::BuiltInFunctionEmulationMarker::visitUnary(sh::Visit, sh::TIntermUnary*)
sh::BuiltInFunctionEmulator::BuiltInFunctionEmulationMarker::~BuiltInFunctionEmulationMarker()
sh::BuiltInFunctionEmulator::BuiltInFunctionEmulator()
sh::BuiltInFunctionEmulator::WriteEmulatedFunctionName(sh::TInfoSinkBase&, char const*)
sh::BuiltInFunctionEmulator::addEmulatedFunction(sh::TSymbolUniqueId const&, char const*)
sh::BuiltInFunctionEmulator::addEmulatedFunctionWithDependency(sh::TSymbolUniqueId const&, sh::TSymbolUniqueId const&, char const*)
sh::BuiltInFunctionEmulator::cleanup()
sh::BuiltInFunctionEmulator::isOutputEmpty() const
sh::BuiltInFunctionEmulator::markBuiltInFunctionsForEmulation(sh::TIntermNode*)
sh::BuiltInFunctionEmulator::outputEmulatedFunctions(sh::TInfoSinkBase&) const
sh::BuiltInFunctionEmulator::setFunctionCalled(int)
sh::BuiltInId::abs_Int1
sh::BuiltInId::atan_Float1_Float1
sh::BuiltInId::gl_DepthRangeParameters
sh::BuiltInId::gl_PerVertex
sh::BuiltInId::gl_PerVertexOutBlock
sh::BuiltInId::isnan_Float1
sh::BuiltInId::isnan_Float2
sh::BuiltInId::isnan_Float3
sh::BuiltInId::isnan_Float4
sh::BuiltInId::packHalf2x16_Float2
sh::BuiltInId::packSnorm2x16_Float2
sh::BuiltInId::packUnorm2x16_Float2
sh::BuiltInId::unpackHalf2x16_UInt1
sh::BuiltInId::unpackSnorm2x16_UInt1
sh::BuiltInId::unpackUnorm2x16_UInt1
sh::BuiltInName::diff
sh::BuiltInName::far
sh::BuiltInName::gl_DepthRange
sh::BuiltInName::gl_DepthRangeParameters
sh::BuiltInName::gl_FragData
sh::BuiltInName::gl_FragDepthEXT
sh::BuiltInName::gl_LastFragData
sh::BuiltInName::gl_MaxAtomicCounterBindings
sh::BuiltInName::gl_MaxAtomicCounterBufferSize
sh::BuiltInName::gl_MaxCombinedAtomicCounterBuffers
sh::BuiltInName::gl_MaxCombinedAtomicCounters
sh::BuiltInName::gl_MaxCombinedImageUniforms
sh::BuiltInName::gl_MaxCombinedShaderOutputResources
sh::BuiltInName::gl_MaxCombinedTextureImageUnits
sh::BuiltInName::gl_MaxComputeAtomicCounterBuffers
sh::BuiltInName::gl_MaxComputeAtomicCounters
sh::BuiltInName::gl_MaxComputeImageUniforms
sh::BuiltInName::gl_MaxComputeTextureImageUnits
sh::BuiltInName::gl_MaxComputeUniformComponents
sh::BuiltInName::gl_MaxComputeWorkGroupCount
sh::BuiltInName::gl_MaxComputeWorkGroupSize
sh::BuiltInName::gl_MaxDrawBuffers
sh::BuiltInName::gl_MaxDualSourceDrawBuffersEXT
sh::BuiltInName::gl_MaxFragmentAtomicCounterBuffers
sh::BuiltInName::gl_MaxFragmentAtomicCounters
sh::BuiltInName::gl_MaxFragmentImageUniforms
sh::BuiltInName::gl_MaxFragmentInputVectors
sh::BuiltInName::gl_MaxFragmentUniformVectors
sh::BuiltInName::gl_MaxGeometryAtomicCounterBuffers
sh::BuiltInName::gl_MaxGeometryAtomicCounters
sh::BuiltInName::gl_MaxGeometryImageUniforms
sh::BuiltInName::gl_MaxGeometryInputComponents
sh::BuiltInName::gl_MaxGeometryOutputComponents
sh::BuiltInName::gl_MaxGeometryOutputVertices
sh::BuiltInName::gl_MaxGeometryTextureImageUnits
sh::BuiltInName::gl_MaxGeometryTotalOutputComponents
sh::BuiltInName::gl_MaxGeometryUniformComponents
sh::BuiltInName::gl_MaxImageUnits
sh::BuiltInName::gl_MaxProgramTexelOffset
sh::BuiltInName::gl_MaxTextureImageUnits
sh::BuiltInName::gl_MaxVaryingVectors
sh::BuiltInName::gl_MaxVertexAtomicCounterBuffers
sh::BuiltInName::gl_MaxVertexAtomicCounters
sh::BuiltInName::gl_MaxVertexAttribs
sh::BuiltInName::gl_MaxVertexImageUniforms
sh::BuiltInName::gl_MaxVertexOutputVectors
sh::BuiltInName::gl_MaxVertexTextureImageUnits
sh::BuiltInName::gl_MaxVertexUniformVectors
sh::BuiltInName::gl_MinProgramTexelOffset
sh::BuiltInName::gl_PerVertex
sh::BuiltInName::gl_Position
sh::BuiltInName::gl_SecondaryFragDataEXT
sh::BuiltInName::gl_in
sh::BuiltInName::near
sh::BuiltInParameters::p0B0B0B
sh::BuiltInParameters::p0B0B0E
sh::BuiltInParameters::p0B0B1B
sh::BuiltInParameters::p0B0B2B
sh::BuiltInParameters::p0B0B3B
sh::BuiltInParameters::p0B0C
sh::BuiltInParameters::p0B1B
sh::BuiltInParameters::p0B2B
sh::BuiltInParameters::p0B3B
sh::BuiltInParameters::p0B_o_0B
sh::BuiltInParameters::p0B_o_0C
sh::BuiltInParameters::p0C0C0C0C
sh::BuiltInParameters::p0C0C_o_0C_o_0C
sh::BuiltInParameters::p0D0C0C
sh::BuiltInParameters::p0D0D0C0C
sh::BuiltInParameters::p0D0D0D
sh::BuiltInParameters::p0D0D_o_0D_o_0D
sh::BuiltInParameters::p0F
sh::BuiltInParameters::p0H0C
sh::BuiltInParameters::p0H1B0B1C
sh::BuiltInParameters::p0H1B0C
sh::BuiltInParameters::p0H1B1B1B1C
sh::BuiltInParameters::p0H1B1C0B
sh::BuiltInParameters::p0H1B1C0C
sh::BuiltInParameters::p0H1C0C1C
sh::BuiltInParameters::p0H2B0B1C
sh::BuiltInParameters::p0H2B1B1B1C
sh::BuiltInParameters::p0H2B1C0B
sh::BuiltInParameters::p0H3B0B1C
sh::BuiltInParameters::p0H3B1B1B1C
sh::BuiltInParameters::p0H3B1C0B
sh::BuiltInParameters::p0I0C
sh::BuiltInParameters::p0I2B0B2C
sh::BuiltInParameters::p0I2B2B2B2C
sh::BuiltInParameters::p0I2B2C0B
sh::BuiltInParameters::p0I2C0C2C
sh::BuiltInParameters::p0I3B0B2C
sh::BuiltInParameters::p0I3B2B2B2C
sh::BuiltInParameters::p0I3B2C0B
sh::BuiltInParameters::p0J0C
sh::BuiltInParameters::p0J2B0B
sh::BuiltInParameters::p0J2B0C
sh::BuiltInParameters::p0J2B2B2B
sh::BuiltInParameters::p0K0C
sh::BuiltInParameters::p0K2B0B1C
sh::BuiltInParameters::p0K2B0C
sh::BuiltInParameters::p0K2B1B1B1C
sh::BuiltInParameters::p0K2B1C0B
sh::BuiltInParameters::p0K2B1C0C
sh::BuiltInParameters::p0K2C0C1C
sh::BuiltInParameters::p0L0C
sh::BuiltInParameters::p0L1B0B
sh::BuiltInParameters::p0L1C0C
sh::BuiltInParameters::p0L2B0B
sh::BuiltInParameters::p0L3B0B
sh::BuiltInParameters::p0M0C
sh::BuiltInParameters::p0M1B0B
sh::BuiltInParameters::p0M1C0C
sh::BuiltInParameters::p0M2B0B
sh::BuiltInParameters::p0M3B0B
sh::BuiltInParameters::p0N1B
sh::BuiltInParameters::p0N2B
sh::BuiltInParameters::p0N3B
sh::BuiltInParameters::p0O1C0C
sh::BuiltInParameters::p0P2C0C
sh::BuiltInParameters::p0Q0C
sh::BuiltInParameters::p0Q1B0B1C
sh::BuiltInParameters::p0Q1B0C
sh::BuiltInParameters::p0Q1B1B1B1C
sh::BuiltInParameters::p0Q1B1C0B
sh::BuiltInParameters::p0Q1B1C0C
sh::BuiltInParameters::p0Q1C0C1C
sh::BuiltInParameters::p0Q2B0B1C
sh::BuiltInParameters::p0Q2B1B1B1C
sh::BuiltInParameters::p0Q2B1C0B
sh::BuiltInParameters::p0Q3B0B1C
sh::BuiltInParameters::p0Q3B1B1B1C
sh::BuiltInParameters::p0Q3B1C0B
sh::BuiltInParameters::p0R0C
sh::BuiltInParameters::p0R2B0B2C
sh::BuiltInParameters::p0R2B2B2B2C
sh::BuiltInParameters::p0R2B2C0B
sh::BuiltInParameters::p0R2C0C2C
sh::BuiltInParameters::p0R3B0B2C
sh::BuiltInParameters::p0R3B2B2B2C
sh::BuiltInParameters::p0R3B2C0B
sh::BuiltInParameters::p0S0C
sh::BuiltInParameters::p0S2B0B
sh::BuiltInParameters::p0S2B0C
sh::BuiltInParameters::p0S2B2B2B
sh::BuiltInParameters::p0T0C
sh::BuiltInParameters::p0T2B0B1C
sh::BuiltInParameters::p0T2B0C
sh::BuiltInParameters::p0T2B1B1B1C
sh::BuiltInParameters::p0T2B1C0B
sh::BuiltInParameters::p0T2B1C0C
sh::BuiltInParameters::p0T2C0C1C
sh::BuiltInParameters::p0U1C0C
sh::BuiltInParameters::p0V2C0C
sh::BuiltInParameters::p0W0C
sh::BuiltInParameters::p0W1B0B1C
sh::BuiltInParameters::p0W1B0C
sh::BuiltInParameters::p0W1B1B1B1C
sh::BuiltInParameters::p0W1B1C0B
sh::BuiltInParameters::p0W1B1C0C
sh::BuiltInParameters::p0W1C0C1C
sh::BuiltInParameters::p0W2B0B1C
sh::BuiltInParameters::p0W2B1B1B1C
sh::BuiltInParameters::p0W2B1C0B
sh::BuiltInParameters::p0W3B0B1C
sh::BuiltInParameters::p0W3B1B1B1C
sh::BuiltInParameters::p0W3B1C0B
sh::BuiltInParameters::p0X0C
sh::BuiltInParameters::p0X2B0B2C
sh::BuiltInParameters::p0X2B2B2B2C
sh::BuiltInParameters::p0X2B2C0B
sh::BuiltInParameters::p0X2C0C2C
sh::BuiltInParameters::p0X3B0B2C
sh::BuiltInParameters::p0X3B2B2B2C
sh::BuiltInParameters::p0X3B2C0B
sh::BuiltInParameters::p0Y0C
sh::BuiltInParameters::p0Y2B0B
sh::BuiltInParameters::p0Y2B0C
sh::BuiltInParameters::p0Y2B2B2B
sh::BuiltInParameters::p0Z0C
sh::BuiltInParameters::p0Z2B0B1C
sh::BuiltInParameters::p0Z2B0C
sh::BuiltInParameters::p0Z2B1B1B1C
sh::BuiltInParameters::p0Z2B1C0B
sh::BuiltInParameters::p0Z2B1C0C
sh::BuiltInParameters::p0Z2C0C1C
sh::BuiltInParameters::p0a1C0C
sh::BuiltInParameters::p0b2C0C
sh::BuiltInParameters::p0c0C
sh::BuiltInParameters::p0c1B0B1C
sh::BuiltInParameters::p0c2B0B1C
sh::BuiltInParameters::p0c2B1B1B1C
sh::BuiltInParameters::p0c2B1C0B
sh::BuiltInParameters::p0c3B0B1C
sh::BuiltInParameters::p0c3B1B1B1C
sh::BuiltInParameters::p0c3B1C0B
sh::BuiltInParameters::p0d0C
sh::BuiltInParameters::p0d2B0B
sh::BuiltInParameters::p0d3B0B
sh::BuiltInParameters::p0d3B2B2B
sh::BuiltInParameters::p0e0C
sh::BuiltInParameters::p0e2B0B1C
sh::BuiltInParameters::p0e3B1B1B1C
sh::BuiltInParameters::p0f1C3B
sh::BuiltInParameters::p0g1C3C
sh::BuiltInParameters::p0h1C3D
sh::BuiltInParameters::p0i2C3B
sh::BuiltInParameters::p0j2C3C
sh::BuiltInParameters::p0k2C3D
sh::BuiltInParameters::p0l2C3B
sh::BuiltInParameters::p0m2C3C
sh::BuiltInParameters::p0n2C3D
sh::BuiltInParameters::p0o2C3B
sh::BuiltInParameters::p0p2C3C
sh::BuiltInParameters::p0q2C3D
sh::BuiltInParameters::p1B0B0B
sh::BuiltInParameters::p1B1B0B
sh::BuiltInParameters::p1B1B1B
sh::BuiltInParameters::p1B1B1E
sh::BuiltInParameters::p1B1C
sh::BuiltInParameters::p1B2B
sh::BuiltInParameters::p1B3B
sh::BuiltInParameters::p1B_o_1B
sh::BuiltInParameters::p1B_o_1C
sh::BuiltInParameters::p1C0C0C
sh::BuiltInParameters::p1C1C0C0C
sh::BuiltInParameters::p1C1C1C
sh::BuiltInParameters::p1C1C_o_1C_o_1C
sh::BuiltInParameters::p1D0C0C
sh::BuiltInParameters::p1D0D0D
sh::BuiltInParameters::p1D1D0C0C
sh::BuiltInParameters::p1D1D1D
sh::BuiltInParameters::p1D1D_o_1D_o_1D
sh::BuiltInParameters::p1E1E
sh::BuiltInParameters::p2B0B0B
sh::BuiltInParameters::p2B0G
sh::BuiltInParameters::p2B1B
sh::BuiltInParameters::p2B2B0B
sh::BuiltInParameters::p2B2B2B
sh::BuiltInParameters::p2B2B2E
sh::BuiltInParameters::p2B2C
sh::BuiltInParameters::p2B3B
sh::BuiltInParameters::p2B_o_2B
sh::BuiltInParameters::p2B_o_2C
sh::BuiltInParameters::p2C0C0C
sh::BuiltInParameters::p2C2C0C0C
sh::BuiltInParameters::p2C2C2C
sh::BuiltInParameters::p2C2C_o_2C_o_2C
sh::BuiltInParameters::p2D0C0C
sh::BuiltInParameters::p2D0D0D
sh::BuiltInParameters::p2D2D0C0C
sh::BuiltInParameters::p2D2D2D
sh::BuiltInParameters::p2D2D_o_2D_o_2D
sh::BuiltInParameters::p2E2E
sh::BuiltInParameters::p3B0B0B
sh::BuiltInParameters::p3B1B
sh::BuiltInParameters::p3B2B
sh::BuiltInParameters::p3B3B0B
sh::BuiltInParameters::p3B3B3B
sh::BuiltInParameters::p3B3B3E
sh::BuiltInParameters::p3B3C
sh::BuiltInParameters::p3B_o_3B
sh::BuiltInParameters::p3B_o_3C
sh::BuiltInParameters::p3C0C0C
sh::BuiltInParameters::p3C3C0C0C
sh::BuiltInParameters::p3C3C3C
sh::BuiltInParameters::p3C3C_o_3C_o_3C
sh::BuiltInParameters::p3D0C0C
sh::BuiltInParameters::p3D0D0D
sh::BuiltInParameters::p3D3D0C0C
sh::BuiltInParameters::p3D3D3D
sh::BuiltInParameters::p3D3D_o_3D_o_3D
sh::BuiltInParameters::p3E3E
sh::BuiltInParameters::p5B5B
sh::BuiltInParameters::p6B6B
sh::BuiltInParameters::p7B7B
sh::BuiltInParameters::p9B9B
sh::BuiltInParameters::pABAB
sh::BuiltInParameters::pBBBB
sh::BuiltInParameters::pDBDB
sh::BuiltInParameters::pEBEB
sh::BuiltInParameters::pFBFB
sh::BuiltInParameters::p_io_0C0C0C
sh::BuiltInParameters::p_io_0D0D0D
sh::BuiltInVariable::gl_FragColor()
sh::BuiltInVariable::gl_FragCoord()
sh::BuiltInVariable::gl_FragDepth()
sh::BuiltInVariable::gl_InstanceID()
sh::BuiltInVariable::gl_LayerVS()
sh::BuiltInVariable::gl_PointCoord()
sh::BuiltInVariable::gl_PointSize()
sh::BuiltInVariable::gl_Position()
sh::BuiltInVariable::gl_SecondaryFragColorEXT()
sh::BuiltInVariable::gl_ViewID_OVR()
sh::BuiltInVariable::gl_ViewportIndex()
sh::BuiltInVariable::kVar_gl_FragColor
sh::BuiltInVariable::kVar_gl_FragCoord
sh::BuiltInVariable::kVar_gl_FragDepth
sh::BuiltInVariable::kVar_gl_FrontFacing
sh::BuiltInVariable::kVar_gl_GlobalInvocationID
sh::BuiltInVariable::kVar_gl_InstanceID
sh::BuiltInVariable::kVar_gl_InvocationID
sh::BuiltInVariable::kVar_gl_LastFragColor
sh::BuiltInVariable::kVar_gl_LastFragColorARM
sh::BuiltInVariable::kVar_gl_Layer
sh::BuiltInVariable::kVar_gl_LayerGS
sh::BuiltInVariable::kVar_gl_LayerVS
sh::BuiltInVariable::kVar_gl_LocalInvocationID
sh::BuiltInVariable::kVar_gl_LocalInvocationIndex
sh::BuiltInVariable::kVar_gl_NumWorkGroups
sh::BuiltInVariable::kVar_gl_PointCoord
sh::BuiltInVariable::kVar_gl_PointSize
sh::BuiltInVariable::kVar_gl_Position
sh::BuiltInVariable::kVar_gl_PrimitiveID
sh::BuiltInVariable::kVar_gl_PrimitiveIDGS
sh::BuiltInVariable::kVar_gl_PrimitiveIDIn
sh::BuiltInVariable::kVar_gl_SecondaryFragColorEXT
sh::BuiltInVariable::kVar_gl_VertexID
sh::BuiltInVariable::kVar_gl_ViewID_OVR
sh::BuiltInVariable::kVar_gl_ViewID_OVRESSL1
sh::BuiltInVariable::kVar_gl_ViewportIndex
sh::BuiltInVariable::kVar_gl_WorkGroupID
sh::BuiltInVariable::kVar_gl_WorkGroupSize
sh::BuiltInVariable::kVar_pt0B
sh::BuiltInVariable::kVar_pt0C
sh::BuiltInVariable::kVar_pt0D
sh::BuiltInVariable::kVar_pt0E
sh::BuiltInVariable::kVar_pt0F
sh::BuiltInVariable::kVar_pt0G
sh::BuiltInVariable::kVar_pt0H
sh::BuiltInVariable::kVar_pt0I
sh::BuiltInVariable::kVar_pt0J
sh::BuiltInVariable::kVar_pt0K
sh::BuiltInVariable::kVar_pt0L
sh::BuiltInVariable::kVar_pt0M
sh::BuiltInVariable::kVar_pt0N
sh::BuiltInVariable::kVar_pt0O
sh::BuiltInVariable::kVar_pt0P
sh::BuiltInVariable::kVar_pt0Q
sh::BuiltInVariable::kVar_pt0R
sh::BuiltInVariable::kVar_pt0S
sh::BuiltInVariable::kVar_pt0T
sh::BuiltInVariable::kVar_pt0U
sh::BuiltInVariable::kVar_pt0V
sh::BuiltInVariable::kVar_pt0W
sh::BuiltInVariable::kVar_pt0X
sh::BuiltInVariable::kVar_pt0Y
sh::BuiltInVariable::kVar_pt0Z
sh::BuiltInVariable::kVar_pt0a
sh::BuiltInVariable::kVar_pt0b
sh::BuiltInVariable::kVar_pt0c
sh::BuiltInVariable::kVar_pt0d
sh::BuiltInVariable::kVar_pt0e
sh::BuiltInVariable::kVar_pt0f
sh::BuiltInVariable::kVar_pt0g
sh::BuiltInVariable::kVar_pt0h
sh::BuiltInVariable::kVar_pt0i
sh::BuiltInVariable::kVar_pt0j
sh::BuiltInVariable::kVar_pt0k
sh::BuiltInVariable::kVar_pt0l
sh::BuiltInVariable::kVar_pt0m
sh::BuiltInVariable::kVar_pt0n
sh::BuiltInVariable::kVar_pt0o
sh::BuiltInVariable::kVar_pt0p
sh::BuiltInVariable::kVar_pt0q
sh::BuiltInVariable::kVar_pt1B
sh::BuiltInVariable::kVar_pt1C
sh::BuiltInVariable::kVar_pt1D
sh::BuiltInVariable::kVar_pt1E
sh::BuiltInVariable::kVar_pt2B
sh::BuiltInVariable::kVar_pt2C
sh::BuiltInVariable::kVar_pt2D
sh::BuiltInVariable::kVar_pt2E
sh::BuiltInVariable::kVar_pt3B
sh::BuiltInVariable::kVar_pt3C
sh::BuiltInVariable::kVar_pt3D
sh::BuiltInVariable::kVar_pt3E
sh::BuiltInVariable::kVar_pt5B
sh::BuiltInVariable::kVar_pt6B
sh::BuiltInVariable::kVar_pt7B
sh::BuiltInVariable::kVar_pt9B
sh::BuiltInVariable::kVar_ptAB
sh::BuiltInVariable::kVar_ptBB
sh::BuiltInVariable::kVar_ptDB
sh::BuiltInVariable::kVar_ptEB
sh::BuiltInVariable::kVar_ptFB
sh::BuiltInVariable::kVar_pt_io_0C
sh::BuiltInVariable::kVar_pt_io_0D
sh::BuiltInVariable::kVar_pt_o_0B
sh::BuiltInVariable::kVar_pt_o_0C
sh::BuiltInVariable::kVar_pt_o_0D
sh::BuiltInVariable::kVar_pt_o_1B
sh::BuiltInVariable::kVar_pt_o_1C
sh::BuiltInVariable::kVar_pt_o_1D
sh::BuiltInVariable::kVar_pt_o_2B
sh::BuiltInVariable::kVar_pt_o_2C
sh::BuiltInVariable::kVar_pt_o_2D
sh::BuiltInVariable::kVar_pt_o_3B
sh::BuiltInVariable::kVar_pt_o_3C
sh::BuiltInVariable::kVar_pt_o_3D
sh::CallDAG::CallDAG()
sh::CallDAG::CallDAGCreator::assignIndicesInternal(sh::CallDAG::CallDAGCreator::CreatorFunctionData*)
sh::CallDAG::CallDAGCreator::fillDataStructures(std::__1::vector<sh::CallDAG::Record, std::__1::allocator<sh::CallDAG::Record> >*, std::__1::map<int, int, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, int> > >*)
sh::CallDAG::CallDAGCreator::visitAggregate(sh::Visit, sh::TIntermAggregate*)
sh::CallDAG::CallDAGCreator::visitFunctionDefinition(sh::Visit, sh::TIntermFunctionDefinition*)
sh::CallDAG::CallDAGCreator::visitFunctionPrototype(sh::TIntermFunctionPrototype*)
sh::CallDAG::CallDAGCreator::~CallDAGCreator()
sh::CallDAG::InvalidIndex
sh::CallDAG::clear()
sh::CallDAG::findIndex(sh::TSymbolUniqueId const&) const
sh::CallDAG::getRecordFromIndex(unsigned long) const
sh::CallDAG::init(sh::TIntermNode*, sh::TDiagnostics*)
sh::CallDAG::size() const
sh::CallDAG::~CallDAG()
sh::CanBeInvariantESSL1(sh::TQualifier)
sh::CanBeInvariantESSL3OrGreater(sh::TQualifier)
sh::ClampFragDepth(sh::TIntermBlock*, sh::TSymbolTable*)
sh::ClampPointSize(sh::TIntermBlock*, float, sh::TSymbolTable*)
sh::CollectVariables(sh::TIntermBlock*, std::__1::vector<sh::Attribute, std::__1::allocator<sh::Attribute> >*, std::__1::vector<sh::OutputVariable, std::__1::allocator<sh::OutputVariable> >*, std::__1::vector<sh::Uniform, std::__1::allocator<sh::Uniform> >*, std::__1::vector<sh::Varying, std::__1::allocator<sh::Varying> >*, std::__1::vector<sh::Varying, std::__1::allocator<sh::Varying> >*, std::__1::vector<sh::InterfaceBlock, std::__1::allocator<sh::InterfaceBlock> >*, std::__1::vector<sh::InterfaceBlock, std::__1::allocator<sh::InterfaceBlock> >*, std::__1::vector<sh::InterfaceBlock, std::__1::allocator<sh::InterfaceBlock> >*, unsigned long (*)(char const*, unsigned long), sh::TSymbolTable*, unsigned int, std::__1::map<sh::TExtension, sh::TBehavior, std::__1::less<sh::TExtension>, std::__1::allocator<std::__1::pair<sh::TExtension const, sh::TBehavior> > > const&)
sh::Compile(void*, char const* const*, unsigned long, unsigned long)
sh::ConstructCompiler(unsigned int, ShShaderSpec, ShShaderOutput)
sh::ConstructCompiler(unsigned int, ShShaderSpec, ShShaderOutput, ShBuiltInResources const*)
sh::CreateBoolNode(bool)
sh::CreateBuiltInFunctionCallNode(char const*, sh::TVector<sh::TIntermNode*>*, sh::TSymbolTable const&, int)
sh::CreateIndexNode(int)
sh::CreateInitCode(sh::TIntermTyped const*, bool, bool, sh::TSymbolTable*)
sh::CreateInternalFunctionDefinitionNode(sh::TFunction const&, sh::TIntermBlock*)
sh::CreateInternalFunctionPrototypeNode(sh::TFunction const&)
sh::CreateTempAssignmentNode(sh::TVariable const*, sh::TIntermTyped*)
sh::CreateTempInitDeclarationNode(sh::TVariable const*, sh::TIntermTyped*)
sh::CreateTempSymbolNode(sh::TVariable const*)
sh::CreateTempVariable(sh::TSymbolTable*, sh::TType const*)
sh::CreateTempVariable(sh::TSymbolTable*, sh::TType const*, sh::TQualifier)
sh::CreateZeroNode(sh::TType const&)
sh::DeclareAndInitBuiltinsForInstancedMultiview(sh::TIntermBlock*, unsigned int, unsigned int, unsigned long, ShShaderOutput, sh::TSymbolTable*)
sh::DeclareGlobalVariable(sh::TIntermBlock*, sh::TVariable const*)
sh::DeclareTempVariable(sh::TSymbolTable*, sh::TIntermTyped*, sh::TQualifier, sh::TIntermDeclaration**)
sh::DeferGlobalInitializers(sh::TIntermBlock*, bool, bool, bool, sh::TSymbolTable*)
sh::DeleteCompiler(sh::TCompiler*)
sh::Destruct(void*)
sh::DetachProcess()
sh::EmulateGLFragColorBroadcast(sh::TIntermBlock*, int, std::__1::vector<sh::OutputVariable, std::__1::allocator<sh::OutputVariable> >*, sh::TSymbolTable*, int)
sh::EmulatePrecision::EmulatePrecision(sh::TSymbolTable*)
sh::EmulatePrecision::SupportedInLanguage(ShShaderOutput)
sh::EmulatePrecision::createCompoundAssignmentFunctionCallNode(sh::TIntermTyped*, sh::TIntermTyped*, char const*)
sh::EmulatePrecision::createRoundingFunctionCallNode(sh::TIntermTyped*)
sh::EmulatePrecision::getInternalFunction(sh::ImmutableString const&, sh::TType const&, sh::TVector<sh::TIntermNode*>*, sh::TVector<sh::TVariable const*> const&, bool)
sh::EmulatePrecision::visitAggregate(sh::Visit, sh::TIntermAggregate*)
sh::EmulatePrecision::visitBinary(sh::Visit, sh::TIntermBinary*)
sh::EmulatePrecision::visitDeclaration(sh::Visit, sh::TIntermDeclaration*)
sh::EmulatePrecision::visitInvariantDeclaration(sh::Visit, sh::TIntermInvariantDeclaration*)
sh::EmulatePrecision::visitSymbol(sh::TIntermSymbol*)
sh::EmulatePrecision::visitUnary(sh::Visit, sh::TIntermUnary*)
sh::EmulatePrecision::writeEmulationHelpers(sh::TInfoSinkBase&, int, ShShaderOutput)
sh::EmulatePrecision::~EmulatePrecision()
sh::EnsureBlock(sh::TIntermNode*)
sh::Finalize()
sh::FindMain(sh::TIntermBlock*)
sh::FindMainBody(sh::TIntermBlock*)
sh::FindMainIndex(sh::TIntermBlock*)
sh::FindSymbolNode(sh::TIntermNode*, sh::ImmutableString const&)
sh::FoldExpressions(sh::TIntermBlock*, sh::TDiagnostics*)
sh::GLVariablePrecision(sh::TType const&)
sh::GLVariableType(sh::TType const&)
sh::GetAttributes(void*)
sh::GetBehaviorString(sh::TBehavior)
sh::GetBuiltInResourcesString(void*)
sh::GetComputeShaderLocalGroupSize(void*)
sh::GetExtensionByName(char const*)
sh::GetExtensionNameString(sh::TExtension)
sh::GetGeometryShaderInputPrimitiveType(void*)
sh::GetGeometryShaderInvocations(void*)
sh::GetGeometryShaderMaxVertices(void*)
sh::GetGeometryShaderOutputPrimitiveType(void*)
sh::GetGlobalMaxTokenSize(ShShaderSpec)
sh::GetInfoLog(void*)
sh::GetInputVaryings(void*)
sh::GetInterpolationType(sh::TQualifier)
sh::GetObjectCode(void*)
sh::GetOutputVariables(void*)
sh::GetOutputVaryings(void*)
sh::GetShaderStorageBlocks(void*)
sh::GetShaderVersion(void*)
sh::GetTypeName(sh::TType const&, unsigned long (*)(char const*, unsigned long), std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >*)
sh::GetTypePackingComponentsPerRow(unsigned int)
sh::GetUniformBlockInfo(std::__1::vector<sh::Uniform, std::__1::allocator<sh::Uniform> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockLayoutEncoder*, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, sh::BlockMemberInfo, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, sh::BlockMemberInfo> > >*)
sh::GetUniformBlocks(void*)
sh::GetUniforms(void*)
sh::GetVertexShaderNumViews(void*)
sh::HasValidGeometryShaderInputPrimitiveType(void*)
sh::HasValidGeometryShaderMaxVertices(void*)
sh::HasValidGeometryShaderOutputPrimitiveType(void*)
sh::HashName(sh::ImmutableString const&, unsigned long (*)(char const*, unsigned long), std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >*)
sh::HashName(sh::TSymbol const*, unsigned long (*)(char const*, unsigned long), std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >*)
sh::ImmutableString::FowlerNollVoHash<8ul>::kFnvOffsetBasis
sh::ImmutableString::FowlerNollVoHash<8ul>::kFnvPrime
sh::ImmutableString::mangledNameHash() const
sh::ImmutableStringBuilder::appendDecimal(unsigned int const&)
sh::ImmutableStringBuilder::operator sh::ImmutableString()
sh::ImmutableStringBuilder::operator<<(char const&)
sh::ImmutableStringBuilder::operator<<(char const*)
sh::ImmutableStringBuilder::operator<<(sh::ImmutableString const&)
sh::InitBuiltInAbsFunctionEmulatorForGLSLWorkarounds(sh::BuiltInFunctionEmulator*, unsigned int)
sh::InitBuiltInAtanFunctionEmulatorForGLSLWorkarounds(sh::BuiltInFunctionEmulator*)
sh::InitBuiltInAtanFunctionEmulatorForGLSLWorkarounds(sh::BuiltInFunctionEmulator*)::ids
sh::InitBuiltInFunctionEmulatorForGLSLMissingFunctions(sh::BuiltInFunctionEmulator*, unsigned int, int)
sh::InitBuiltInIsnanFunctionEmulatorForGLSLWorkarounds(sh::BuiltInFunctionEmulator*, int)
sh::InitBuiltInResources(ShBuiltInResources*)
sh::InitExtensionBehavior(ShBuiltInResources const&, std::__1::map<sh::TExtension, sh::TBehavior, std::__1::less<sh::TExtension>, std::__1::allocator<std::__1::pair<sh::TExtension const, sh::TBehavior> > >&)
sh::InitProcess()
sh::Initialize()
sh::InitializeUninitializedLocals(sh::TIntermBlock*, int, bool, bool, sh::TSymbolTable*)
sh::InitializeVariables(sh::TIntermBlock*, std::__1::vector<sh::ShaderVariable, std::__1::allocator<sh::ShaderVariable> > const&, sh::TSymbolTable*, int, std::__1::map<sh::TExtension, sh::TBehavior, std::__1::less<sh::TExtension>, std::__1::allocator<std::__1::pair<sh::TExtension const, sh::TBehavior> > > const&, bool, bool)
sh::InterfaceBlock::InterfaceBlock()
sh::InterfaceBlock::InterfaceBlock(sh::InterfaceBlock const&)
sh::InterfaceBlock::fieldMappedPrefix() const
sh::InterfaceBlock::fieldPrefix() const
sh::InterfaceBlock::operator=(sh::InterfaceBlock const&)
sh::InterfaceBlock::~InterfaceBlock()
sh::InterfaceBlockField::InterfaceBlockField()
sh::InterfaceBlockField::InterfaceBlockField(sh::InterfaceBlockField const&)
sh::InterfaceBlockField::~InterfaceBlockField()
sh::IntermNodePatternMatcher::IntermNodePatternMatcher(unsigned int)
sh::IntermNodePatternMatcher::match(sh::TIntermAggregate*, sh::TIntermNode*)
sh::IntermNodePatternMatcher::match(sh::TIntermBinary*, sh::TIntermNode*, bool)
sh::IntermNodePatternMatcher::match(sh::TIntermDeclaration*)
sh::IntermNodePatternMatcher::match(sh::TIntermTernary*)
sh::IntermNodePatternMatcher::match(sh::TIntermUnary*)
sh::InterpolationTypesMatch(sh::InterpolationType, sh::InterpolationType)
sh::IsASTDepthBelowLimit(sh::TIntermNode*, int)
sh::IsExtensionEnabled(std::__1::map<sh::TExtension, sh::TBehavior, std::__1::less<sh::TExtension>, std::__1::allocator<std::__1::pair<sh::TExtension const, sh::TBehavior> > > const&, sh::TExtension)
sh::IsGLSL130OrNewer(ShShaderOutput)
sh::IsGLSL410OrOlder(ShShaderOutput)
sh::IsGeometryShaderInput(unsigned int, sh::TQualifier)
sh::IsOutputESSL(ShShaderOutput)
sh::IsOutputGLSL(ShShaderOutput)
sh::IsOutputHLSL(ShShaderOutput)
sh::IsOutputVulkan(ShShaderOutput)
sh::IsVarying(sh::TQualifier)
sh::IsVaryingIn(sh::TQualifier)
sh::IsVaryingOut(sh::TQualifier)
sh::JoinLayoutQualifiers(sh::TLayoutQualifier, sh::TLayoutQualifier, sh::TSourceLoc const&, sh::TDiagnostics*)
sh::NameEmbeddedStructUniforms(sh::TIntermBlock*, sh::TSymbolTable*)
sh::NeedsToWriteLayoutQualifier(sh::TType const&)
sh::NumericLexFloat32OutOfRangeToInfinity(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
sh::OutputTree(sh::TIntermNode*, sh::TInfoSinkBase&)
sh::OutputVariable::OutputVariable()
sh::OutputVariable::OutputVariable(sh::OutputVariable const&)
sh::OutputVariable::operator=(sh::OutputVariable const&)
sh::OutputVariable::~OutputVariable()
sh::PaParseStrings(unsigned long, char const* const*, int const*, sh::TParseContext*)
sh::PerformanceDiagnostics::PerformanceDiagnostics(sh::TDiagnostics*)
sh::PruneEmptyCases(sh::TIntermBlock*)
sh::PruneNoOps(sh::TIntermBlock*, sh::TSymbolTable*)
sh::RecordConstantPrecision(sh::TIntermNode*, sh::TSymbolTable*)
sh::ReferenceBuiltInVariable(sh::ImmutableString const&, sh::TSymbolTable const&, int)
sh::ReferenceGlobalVariable(sh::ImmutableString const&, sh::TSymbolTable const&)
sh::RegenerateStructNames::visitBlock(sh::Visit, sh::TIntermBlock*)
sh::RegenerateStructNames::visitSymbol(sh::TIntermSymbol*)
sh::RegenerateStructNames::~RegenerateStructNames()
sh::RemoveArrayLengthMethod(sh::TIntermBlock*)
sh::RemoveInvariant(unsigned int, int, ShShaderOutput, unsigned long)
sh::RemoveInvariantDeclaration(sh::TIntermNode*)
sh::RemovePow(sh::TIntermNode*, sh::TSymbolTable*)
sh::RemoveUnreferencedVariables(sh::TIntermBlock*, sh::TSymbolTable*)
sh::ReplaceVariable(sh::TIntermBlock*, sh::TVariable const*, sh::TVariable const*)
sh::ReplaceVariableWithTyped(sh::TIntermBlock*, sh::TVariable const*, sh::TIntermTyped const*)
sh::ResetExtensionBehavior(std::__1::map<sh::TExtension, sh::TBehavior, std::__1::less<sh::TExtension>, std::__1::allocator<std::__1::pair<sh::TExtension const, sh::TBehavior> > >&)
sh::RewriteDoWhile(sh::TIntermNode*, sh::TSymbolTable*)
sh::RewriteRepeatedAssignToSwizzled(sh::TIntermBlock*)
sh::RewriteStructSamplers(sh::TIntermBlock*, sh::TSymbolTable*)
sh::RewriteTexelFetchOffset(sh::TIntermNode*, sh::TSymbolTable const&, int)
sh::RewriteUnaryMinusOperatorFloat(sh::TIntermNode*)
sh::RunAtTheEndOfShader(sh::TIntermBlock*, sh::TIntermNode*, sh::TSymbolTable*)
sh::ScalarizeVecAndMatConstructorArgs(sh::TIntermBlock*, unsigned int, bool, sh::TSymbolTable*)
sh::SeparateDeclarations(sh::TIntermNode*)
sh::ShaderOutputTypeToGLSLVersion(ShShaderOutput)
sh::ShaderVariable::ShaderVariable()
sh::ShaderVariable::ShaderVariable(sh::ShaderVariable const&)
sh::ShaderVariable::ShaderVariable(unsigned int)
sh::ShaderVariable::getArraySizeProduct() const
sh::ShaderVariable::getBasicTypeElementCount() const
sh::ShaderVariable::getNestedArraySize(unsigned int) const
sh::ShaderVariable::indexIntoArray(unsigned int)
sh::ShaderVariable::isBuiltIn() const
sh::ShaderVariable::operator=(sh::ShaderVariable const&)
sh::ShaderVariable::~ShaderVariable()
sh::SimplifyLoopConditions(sh::TIntermNode*, unsigned int, sh::TSymbolTable*)
sh::SplitSequenceOperator(sh::TIntermNode*, int, sh::TSymbolTable*)
sh::StaticType::Helpers::kInstance<(sh::TBasicType)0, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)2, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)2, (unsigned char)2>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)2, (unsigned char)3>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)2, (unsigned char)4>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)3, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)3, (unsigned char)2>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)3, (unsigned char)3>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)3, (unsigned char)4>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)4, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)4, (unsigned char)2>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)4, (unsigned char)3>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)4, (unsigned char)4>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)13, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)13, (unsigned char)2, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)13, (unsigned char)3, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)13, (unsigned char)4, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)1, (sh::TPrecision)2, (sh::TQualifier)19, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)1, (sh::TPrecision)2, (sh::TQualifier)20, (unsigned char)4, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)1, (sh::TPrecision)2, (sh::TQualifier)22, (unsigned char)2, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)1, (sh::TPrecision)2, (sh::TQualifier)23, (unsigned char)4, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)1, (sh::TPrecision)2, (sh::TQualifier)27, (unsigned char)4, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)1, (sh::TPrecision)2, (sh::TQualifier)31, (unsigned char)4, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)1, (sh::TPrecision)3, (sh::TQualifier)18, (unsigned char)4, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)1, (sh::TPrecision)3, (sh::TQualifier)25, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)10, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)11, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)12, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)13, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)14, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)15, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)16, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)17, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)18, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)19, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)2, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)2, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)2, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)2, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)3, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)2, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)4, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)2, (sh::TPrecision)0, (sh::TQualifier)13, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)2, (sh::TPrecision)0, (sh::TQualifier)13, (unsigned char)2, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)2, (sh::TPrecision)0, (sh::TQualifier)13, (unsigned char)3, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)2, (sh::TPrecision)0, (sh::TQualifier)13, (unsigned char)4, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)2, (sh::TPrecision)0, (sh::TQualifier)14, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)2, (sh::TPrecision)2, (sh::TQualifier)0, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)2, (sh::TPrecision)2, (sh::TQualifier)2, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)2, (sh::TPrecision)3, (sh::TQualifier)0, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)2, (sh::TPrecision)3, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)2, (sh::TPrecision)3, (sh::TQualifier)16, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)2, (sh::TPrecision)3, (sh::TQualifier)17, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)2, (sh::TPrecision)3, (sh::TQualifier)2, (unsigned char)3, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)2, (sh::TPrecision)3, (sh::TQualifier)29, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)2, (sh::TPrecision)3, (sh::TQualifier)30, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)2, (sh::TPrecision)3, (sh::TQualifier)58, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)2, (sh::TPrecision)3, (sh::TQualifier)59, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)2, (sh::TPrecision)3, (sh::TQualifier)6, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)2, (sh::TPrecision)3, (sh::TQualifier)60, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)2, (sh::TPrecision)3, (sh::TQualifier)61, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)20, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)21, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)22, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)23, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)24, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)25, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)26, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)27, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)28, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)29, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)3, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)3, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)2, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)3, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)3, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)3, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)4, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)3, (sh::TPrecision)0, (sh::TQualifier)13, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)3, (sh::TPrecision)0, (sh::TQualifier)13, (unsigned char)2, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)3, (sh::TPrecision)0, (sh::TQualifier)13, (unsigned char)3, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)3, (sh::TPrecision)0, (sh::TQualifier)13, (unsigned char)4, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)3, (sh::TPrecision)0, (sh::TQualifier)14, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)3, (sh::TPrecision)0, (sh::TQualifier)44, (unsigned char)3, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)3, (sh::TPrecision)0, (sh::TQualifier)45, (unsigned char)3, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)3, (sh::TPrecision)0, (sh::TQualifier)46, (unsigned char)3, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)3, (sh::TPrecision)0, (sh::TQualifier)47, (unsigned char)3, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)3, (sh::TPrecision)0, (sh::TQualifier)48, (unsigned char)3, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)3, (sh::TPrecision)0, (sh::TQualifier)49, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)3, (sh::TPrecision)3, (sh::TQualifier)29, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)30, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)31, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)32, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)33, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)34, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)35, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)36, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)37, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)38, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)39, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)4, (sh::TPrecision)0, (sh::TQualifier)0, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)4, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)4, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)2, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)4, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)3, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)4, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)4, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)4, (sh::TPrecision)0, (sh::TQualifier)21, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)40, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)41, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)42, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)5, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)6, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)7, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)8, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kInstance<(sh::TBasicType)9, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)0, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)2, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)2, (unsigned char)2>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)2, (unsigned char)3>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)2, (unsigned char)4>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)3, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)3, (unsigned char)2>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)3, (unsigned char)3>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)3, (unsigned char)4>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)4, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)4, (unsigned char)2>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)4, (unsigned char)3>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)4, (unsigned char)4>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)13, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)13, (unsigned char)2, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)13, (unsigned char)3, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)1, (sh::TPrecision)0, (sh::TQualifier)13, (unsigned char)4, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)1, (sh::TPrecision)2, (sh::TQualifier)19, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)1, (sh::TPrecision)2, (sh::TQualifier)20, (unsigned char)4, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)1, (sh::TPrecision)2, (sh::TQualifier)22, (unsigned char)2, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)1, (sh::TPrecision)2, (sh::TQualifier)23, (unsigned char)4, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)1, (sh::TPrecision)2, (sh::TQualifier)27, (unsigned char)4, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)1, (sh::TPrecision)2, (sh::TQualifier)31, (unsigned char)4, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)1, (sh::TPrecision)3, (sh::TQualifier)18, (unsigned char)4, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)1, (sh::TPrecision)3, (sh::TQualifier)25, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)10, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)11, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)12, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)13, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)14, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)15, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)16, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)17, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)18, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)19, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)2, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)2, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)2, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)2, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)3, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)2, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)4, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)2, (sh::TPrecision)0, (sh::TQualifier)13, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)2, (sh::TPrecision)0, (sh::TQualifier)13, (unsigned char)2, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)2, (sh::TPrecision)0, (sh::TQualifier)13, (unsigned char)3, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)2, (sh::TPrecision)0, (sh::TQualifier)13, (unsigned char)4, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)2, (sh::TPrecision)0, (sh::TQualifier)14, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)2, (sh::TPrecision)2, (sh::TQualifier)0, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)2, (sh::TPrecision)2, (sh::TQualifier)2, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)2, (sh::TPrecision)3, (sh::TQualifier)0, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)2, (sh::TPrecision)3, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)2, (sh::TPrecision)3, (sh::TQualifier)16, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)2, (sh::TPrecision)3, (sh::TQualifier)17, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)2, (sh::TPrecision)3, (sh::TQualifier)2, (unsigned char)3, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)2, (sh::TPrecision)3, (sh::TQualifier)29, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)2, (sh::TPrecision)3, (sh::TQualifier)30, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)2, (sh::TPrecision)3, (sh::TQualifier)58, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)2, (sh::TPrecision)3, (sh::TQualifier)59, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)2, (sh::TPrecision)3, (sh::TQualifier)6, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)2, (sh::TPrecision)3, (sh::TQualifier)60, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)2, (sh::TPrecision)3, (sh::TQualifier)61, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)20, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)21, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)22, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)23, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)24, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)25, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)26, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)27, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)28, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)29, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)3, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)3, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)2, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)3, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)3, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)3, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)4, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)3, (sh::TPrecision)0, (sh::TQualifier)13, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)3, (sh::TPrecision)0, (sh::TQualifier)13, (unsigned char)2, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)3, (sh::TPrecision)0, (sh::TQualifier)13, (unsigned char)3, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)3, (sh::TPrecision)0, (sh::TQualifier)13, (unsigned char)4, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)3, (sh::TPrecision)0, (sh::TQualifier)14, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)3, (sh::TPrecision)0, (sh::TQualifier)44, (unsigned char)3, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)3, (sh::TPrecision)0, (sh::TQualifier)45, (unsigned char)3, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)3, (sh::TPrecision)0, (sh::TQualifier)46, (unsigned char)3, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)3, (sh::TPrecision)0, (sh::TQualifier)47, (unsigned char)3, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)3, (sh::TPrecision)0, (sh::TQualifier)48, (unsigned char)3, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)3, (sh::TPrecision)0, (sh::TQualifier)49, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)3, (sh::TPrecision)3, (sh::TQualifier)29, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)30, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)31, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)32, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)33, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)34, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)35, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)36, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)37, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)38, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)39, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)4, (sh::TPrecision)0, (sh::TQualifier)0, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)4, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)4, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)2, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)4, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)3, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)4, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)4, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)4, (sh::TPrecision)0, (sh::TQualifier)21, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)40, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)41, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)42, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)5, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)6, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)7, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)8, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::StaticType::Helpers::kMangledNameInstance<(sh::TBasicType)9, (sh::TPrecision)0, (sh::TQualifier)1, (unsigned char)1, (unsigned char)1>
sh::Std140BlockEncoder::Std140BlockEncoder()
sh::Std140BlockEncoder::advanceOffset(unsigned int, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > const&, bool, int, int)
sh::Std140BlockEncoder::enterAggregateType()
sh::Std140BlockEncoder::exitAggregateType()
sh::Std140BlockEncoder::getBlockLayoutInfo(unsigned int, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > const&, bool, int*, int*)
sh::Std140BlockEncoder::~Std140BlockEncoder()
sh::TCompiler::Init(ShBuiltInResources const&)
sh::TCompiler::TCompiler(unsigned int, ShShaderSpec, ShShaderOutput)
sh::TCompiler::checkAndSimplifyAST(sh::TIntermBlock*, sh::TParseContext const&, unsigned long)
sh::TCompiler::checkCallDepth()
sh::TCompiler::checkShaderVersion(sh::TParseContext*)
sh::TCompiler::clearResults()
sh::TCompiler::compile(char const* const*, unsigned long, unsigned long)
sh::TCompiler::compileTreeImpl(char const* const*, unsigned long, unsigned long)
sh::TCompiler::getArrayBoundsClamper() const
sh::TCompiler::getArrayIndexClampingStrategy() const
sh::TCompiler::getAsCompiler()
sh::TCompiler::getBuiltInFunctionEmulator() const
sh::TCompiler::getExtensionBehavior() const
sh::TCompiler::getResources() const
sh::TCompiler::initBuiltInFunctionEmulator(sh::BuiltInFunctionEmulator*, unsigned long)
sh::TCompiler::initializeGLPosition(sh::TIntermBlock*)
sh::TCompiler::initializeOutputVariables(sh::TIntermBlock*)
sh::TCompiler::internalTagUsedFunction(unsigned long)
sh::TCompiler::isVaryingDefined(char const*)
sh::TCompiler::setResourceString()
sh::TCompiler::shouldCollectVariables(unsigned long)
sh::TCompiler::useAllMembersInUnusedStandardAndSharedBlocks(sh::TIntermBlock*)
sh::TCompiler::writePragma(unsigned long)
sh::TCompiler::~TCompiler()
sh::TConstantUnion::TConstantUnion()
sh::TConstantUnion::add(sh::TConstantUnion const&, sh::TConstantUnion const&, sh::TDiagnostics*, sh::TSourceLoc const&)
sh::TConstantUnion::cast(sh::TBasicType, sh::TConstantUnion const&)
sh::TConstantUnion::getBConst() const
sh::TConstantUnion::getFConst() const
sh::TConstantUnion::getIConst() const
sh::TConstantUnion::getUConst() const
sh::TConstantUnion::getYuvCscStandardEXTConst() const
sh::TConstantUnion::lshift(sh::TConstantUnion const&, sh::TConstantUnion const&, sh::TDiagnostics*, sh::TSourceLoc const&)
sh::TConstantUnion::mul(sh::TConstantUnion const&, sh::TConstantUnion const&, sh::TDiagnostics*, sh::TSourceLoc const&)
sh::TConstantUnion::operator!=(sh::TConstantUnion const&) const
sh::TConstantUnion::operator&&(sh::TConstantUnion const&) const
sh::TConstantUnion::operator&(sh::TConstantUnion const&) const
sh::TConstantUnion::operator<(sh::TConstantUnion const&) const
sh::TConstantUnion::operator==(int) const
sh::TConstantUnion::operator==(unsigned int) const
sh::TConstantUnion::operator>(sh::TConstantUnion const&) const
sh::TConstantUnion::operator^(sh::TConstantUnion const&) const
sh::TConstantUnion::operator|(sh::TConstantUnion const&) const
sh::TConstantUnion::operator||(sh::TConstantUnion const&) const
sh::TConstantUnion::rshift(sh::TConstantUnion const&, sh::TConstantUnion const&, sh::TDiagnostics*, sh::TSourceLoc const&)
sh::TConstantUnion::sub(sh::TConstantUnion const&, sh::TConstantUnion const&, sh::TDiagnostics*, sh::TSourceLoc const&)
sh::TDeclarator::TDeclarator(sh::ImmutableString const&, sh::TSourceLoc const&)
sh::TDeclarator::TDeclarator(sh::ImmutableString const&, sh::TVector<unsigned int> const*, sh::TSourceLoc const&)
sh::TDeclarator::isArray() const
sh::TDiagnostics::TDiagnostics(sh::TInfoSinkBase&)
sh::TDiagnostics::error(angle::pp::SourceLocation const&, char const*, char const*)
sh::TDiagnostics::error(sh::TSourceLoc const&, char const*, char const*)
sh::TDiagnostics::globalError(char const*)
sh::TDiagnostics::print(angle::pp::Diagnostics::ID, angle::pp::SourceLocation const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
sh::TDiagnostics::resetErrorCount()
sh::TDiagnostics::warning(angle::pp::SourceLocation const&, char const*, char const*)
sh::TDiagnostics::warning(sh::TSourceLoc const&, char const*, char const*)
sh::TDiagnostics::writeInfo(sh::Severity, angle::pp::SourceLocation const&, char const*, char const*)
sh::TDiagnostics::~TDiagnostics()
sh::TDirectiveHandler::TDirectiveHandler(std::__1::map<sh::TExtension, sh::TBehavior, std::__1::less<sh::TExtension>, std::__1::allocator<std::__1::pair<sh::TExtension const, sh::TBehavior> > >&, sh::TDiagnostics&, int&, unsigned int, bool)
sh::TDirectiveHandler::handleError(angle::pp::SourceLocation const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
sh::TDirectiveHandler::handleExtension(angle::pp::SourceLocation const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
sh::TDirectiveHandler::handleExtension(angle::pp::SourceLocation const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)::kExtAll
sh::TDirectiveHandler::handlePragma(angle::pp::SourceLocation const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)
sh::TDirectiveHandler::handlePragma(angle::pp::SourceLocation const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)::kAll
sh::TDirectiveHandler::handlePragma(angle::pp::SourceLocation const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)::kDebug
sh::TDirectiveHandler::handlePragma(angle::pp::SourceLocation const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)::kDebugShaderPrecision
sh::TDirectiveHandler::handlePragma(angle::pp::SourceLocation const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)::kInvariant
sh::TDirectiveHandler::handlePragma(angle::pp::SourceLocation const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)::kOff
sh::TDirectiveHandler::handlePragma(angle::pp::SourceLocation const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)::kOn
sh::TDirectiveHandler::handlePragma(angle::pp::SourceLocation const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool)::kOptimize
sh::TDirectiveHandler::handleVersion(angle::pp::SourceLocation const&, int)
sh::TDirectiveHandler::~TDirectiveHandler()
sh::TExtensionGLSL::TExtensionGLSL(ShShaderOutput)
sh::TExtensionGLSL::checkOperator(sh::TIntermOperator*)
sh::TExtensionGLSL::getEnabledExtensions() const
sh::TExtensionGLSL::getRequiredExtensions() const
sh::TExtensionGLSL::visitAggregate(sh::Visit, sh::TIntermAggregate*)
sh::TExtensionGLSL::visitUnary(sh::Visit, sh::TIntermUnary*)
sh::TExtensionGLSL::~TExtensionGLSL()
sh::TFieldListCollection::TFieldListCollection(sh::TVector<sh::TField*> const*)
sh::TFieldListCollection::calculateObjectSize() const
sh::TFunction::TFunction(sh::TSymbolTable*, sh::ImmutableString const&, sh::SymbolType, sh::TType const*, bool)
sh::TFunction::addParameter(sh::TVariable const*)
sh::TFunction::buildMangledName() const
sh::TFunction::hasSamplerInStructParams() const
sh::TFunction::isMain() const
sh::TFunction::shareParameters(sh::TFunction const&)
sh::TFunctionLookup::CreateConstructor(sh::TType const*)
sh::TFunctionLookup::CreateFunctionCall(sh::ImmutableString const&, sh::TSymbol const*)
sh::TFunctionLookup::GetMangledName(char const*, sh::TVector<sh::TIntermNode*> const&)
sh::TFunctionLookup::addArgument(sh::TIntermTyped*)
sh::TFunctionLookup::arguments()
sh::TFunctionLookup::constructorType() const
sh::TFunctionLookup::getMangledName() const
sh::TFunctionLookup::isConstructor() const
sh::TFunctionLookup::name() const
sh::TFunctionLookup::setThisNode(sh::TIntermTyped*)
sh::TFunctionLookup::symbol() const
sh::TFunctionLookup::thisNode() const
sh::TInfoSinkBase& sh::TInfoSinkBase::operator<< <int>(int const&)
sh::TInfoSinkBase& sh::TInfoSinkBase::operator<< <unsigned int>(unsigned int const&)
sh::TInfoSinkBase::location(int, int)
sh::TInfoSinkBase::operator<<(float)
sh::TInfoSinkBase::operator<<(sh::ImmutableString const&)
sh::TInfoSinkBase::operator<<(sh::TType const&)
sh::TInfoSinkBase::prefix(sh::Severity)
sh::TInterfaceBlock::TInterfaceBlock(sh::TSymbolTable*, sh::ImmutableString const&, sh::TVector<sh::TField*> const*, sh::TLayoutQualifier const&, sh::SymbolType, sh::TExtension)
sh::TInterfaceBlock::TInterfaceBlock(sh::TSymbolUniqueId const&, sh::ImmutableString const&, sh::TExtension, sh::TVector<sh::TField*> const*)
sh::TIntermAggregate::CreateBuiltInFunctionCall(sh::TFunction const&, sh::TVector<sh::TIntermNode*>*)
sh::TIntermAggregate::CreateConstructor(sh::TType const&, sh::TVector<sh::TIntermNode*>*)
sh::TIntermAggregate::CreateFunctionCall(sh::TFunction const&, sh::TVector<sh::TIntermNode*>*)
sh::TIntermAggregate::CreateRawFunctionCall(sh::TFunction const&, sh::TVector<sh::TIntermNode*>*)
sh::TIntermAggregate::TIntermAggregate(sh::TIntermAggregate const&)
sh::TIntermAggregate::deepCopy() const
sh::TIntermAggregate::fold(sh::TDiagnostics*)
sh::TIntermAggregate::functionName() const
sh::TIntermAggregate::getAsAggregate()
sh::TIntermAggregate::getChildCount() const
sh::TIntermAggregate::getChildNode(unsigned long) const
sh::TIntermAggregate::getConstantValue() const
sh::TIntermAggregate::getSequence()
sh::TIntermAggregate::getSequence() const
sh::TIntermAggregate::hasConstantValue() const
sh::TIntermAggregate::hasSideEffects() const
sh::TIntermAggregate::replaceChildNode(sh::TIntermNode*, sh::TIntermNode*)
sh::TIntermAggregate::setPrecisionAndQualifier()
sh::TIntermAggregate::setPrecisionForSpecialBuiltInOp()
sh::TIntermAggregate::traverse(sh::TIntermTraverser*)
sh::TIntermAggregate::visit(sh::Visit, sh::TIntermTraverser*)
sh::TIntermAggregate::~TIntermAggregate()
sh::TIntermAggregateBase::insertChildNodes(unsigned long, sh::TVector<sh::TIntermNode*> const&)
sh::TIntermAggregateBase::replaceChildNodeWithMultiple(sh::TIntermNode*, sh::TVector<sh::TIntermNode*> const&)
sh::TIntermBinary::CreateComma(sh::TIntermTyped*, sh::TIntermTyped*, int)
sh::TIntermBinary::GetMulAssignOpBasedOnOperands(sh::TType const&, sh::TType const&)
sh::TIntermBinary::GetMulOpBasedOnOperands(sh::TType const&, sh::TType const&)
sh::TIntermBinary::TIntermBinary(TOperator, sh::TIntermTyped*, sh::TIntermTyped*)
sh::TIntermBinary::deepCopy() const
sh::TIntermBinary::fold(sh::TDiagnostics*)
sh::TIntermBinary::getAsBinaryNode()
sh::TIntermBinary::getChildCount() const
sh::TIntermBinary::getChildNode(unsigned long) const
sh::TIntermBinary::getConstantValue() const
sh::TIntermBinary::getIndexStructFieldName() const
sh::TIntermBinary::hasConstantValue() const
sh::TIntermBinary::hasSideEffects() const
sh::TIntermBinary::promote()
sh::TIntermBinary::replaceChildNode(sh::TIntermNode*, sh::TIntermNode*)
sh::TIntermBinary::traverse(sh::TIntermTraverser*)
sh::TIntermBinary::visit(sh::Visit, sh::TIntermTraverser*)
sh::TIntermBinary::~TIntermBinary()
sh::TIntermBlock::appendStatement(sh::TIntermNode*)
sh::TIntermBlock::getAsBlock()
sh::TIntermBlock::getChildCount() const
sh::TIntermBlock::getChildNode(unsigned long) const
sh::TIntermBlock::getSequence()
sh::TIntermBlock::getSequence() const
sh::TIntermBlock::replaceChildNode(sh::TIntermNode*, sh::TIntermNode*)
sh::TIntermBlock::traverse(sh::TIntermTraverser*)
sh::TIntermBlock::visit(sh::Visit, sh::TIntermTraverser*)
sh::TIntermBlock::~TIntermBlock()
sh::TIntermBranch::getAsBranchNode()
sh::TIntermBranch::getChildCount() const
sh::TIntermBranch::getChildNode(unsigned long) const
sh::TIntermBranch::replaceChildNode(sh::TIntermNode*, sh::TIntermNode*)
sh::TIntermBranch::visit(sh::Visit, sh::TIntermTraverser*)
sh::TIntermBranch::~TIntermBranch()
sh::TIntermCase::getAsCaseNode()
sh::TIntermCase::getChildCount() const
sh::TIntermCase::getChildNode(unsigned long) const
sh::TIntermCase::replaceChildNode(sh::TIntermNode*, sh::TIntermNode*)
sh::TIntermCase::visit(sh::Visit, sh::TIntermTraverser*)
sh::TIntermCase::~TIntermCase()
sh::TIntermConstantUnion::FoldAggregateBuiltIn(sh::TIntermAggregate*, sh::TDiagnostics*)
sh::TIntermConstantUnion::FoldBinary(TOperator, sh::TConstantUnion const*, sh::TType const&, sh::TConstantUnion const*, sh::TType const&, sh::TDiagnostics*, sh::TSourceLoc const&)
sh::TIntermConstantUnion::deepCopy() const
sh::TIntermConstantUnion::foldUnaryComponentWise(TOperator, sh::TDiagnostics*)
sh::TIntermConstantUnion::foldUnaryNonComponentWise(TOperator)
sh::TIntermConstantUnion::getAsConstantUnion()
sh::TIntermConstantUnion::getChildCount() const
sh::TIntermConstantUnion::getChildNode(unsigned long) const
sh::TIntermConstantUnion::getConstantValue() const
sh::TIntermConstantUnion::hasConstantValue() const
sh::TIntermConstantUnion::hasSideEffects() const
sh::TIntermConstantUnion::replaceChildNode(sh::TIntermNode*, sh::TIntermNode*)
sh::TIntermConstantUnion::traverse(sh::TIntermTraverser*)
sh::TIntermConstantUnion::visit(sh::Visit, sh::TIntermTraverser*)
sh::TIntermConstantUnion::~TIntermConstantUnion()
sh::TIntermDeclaration::appendDeclarator(sh::TIntermTyped*)
sh::TIntermDeclaration::getAsDeclarationNode()
sh::TIntermDeclaration::getChildCount() const
sh::TIntermDeclaration::getChildNode(unsigned long) const
sh::TIntermDeclaration::getSequence()
sh::TIntermDeclaration::getSequence() const
sh::TIntermDeclaration::replaceChildNode(sh::TIntermNode*, sh::TIntermNode*)
sh::TIntermDeclaration::visit(sh::Visit, sh::TIntermTraverser*)
sh::TIntermDeclaration::~TIntermDeclaration()
sh::TIntermExpression::TIntermExpression(sh::TType const&)
sh::TIntermExpression::getType() const
sh::TIntermExpression::~TIntermExpression()
sh::TIntermFunctionDefinition::getAsFunctionDefinition()
sh::TIntermFunctionDefinition::getChildCount() const
sh::TIntermFunctionDefinition::getChildNode(unsigned long) const
sh::TIntermFunctionDefinition::replaceChildNode(sh::TIntermNode*, sh::TIntermNode*)
sh::TIntermFunctionDefinition::traverse(sh::TIntermTraverser*)
sh::TIntermFunctionDefinition::visit(sh::Visit, sh::TIntermTraverser*)
sh::TIntermFunctionDefinition::~TIntermFunctionDefinition()
sh::TIntermFunctionPrototype::TIntermFunctionPrototype(sh::TFunction const*)
sh::TIntermFunctionPrototype::deepCopy() const
sh::TIntermFunctionPrototype::getAsFunctionPrototypeNode()
sh::TIntermFunctionPrototype::getChildCount() const
sh::TIntermFunctionPrototype::getChildNode(unsigned long) const
sh::TIntermFunctionPrototype::getType() const
sh::TIntermFunctionPrototype::hasSideEffects() const
sh::TIntermFunctionPrototype::replaceChildNode(sh::TIntermNode*, sh::TIntermNode*)
sh::TIntermFunctionPrototype::traverse(sh::TIntermTraverser*)
sh::TIntermFunctionPrototype::visit(sh::Visit, sh::TIntermTraverser*)
sh::TIntermFunctionPrototype::~TIntermFunctionPrototype()
sh::TIntermIfElse::TIntermIfElse(sh::TIntermTyped*, sh::TIntermBlock*, sh::TIntermBlock*)
sh::TIntermIfElse::getAsIfElseNode()
sh::TIntermIfElse::getChildCount() const
sh::TIntermIfElse::getChildNode(unsigned long) const
sh::TIntermIfElse::replaceChildNode(sh::TIntermNode*, sh::TIntermNode*)
sh::TIntermIfElse::visit(sh::Visit, sh::TIntermTraverser*)
sh::TIntermIfElse::~TIntermIfElse()
sh::TIntermInvariantDeclaration::TIntermInvariantDeclaration(sh::TIntermSymbol*, sh::TSourceLoc const&)
sh::TIntermInvariantDeclaration::getAsInvariantDeclarationNode()
sh::TIntermInvariantDeclaration::getChildCount() const
sh::TIntermInvariantDeclaration::getChildNode(unsigned long) const
sh::TIntermInvariantDeclaration::replaceChildNode(sh::TIntermNode*, sh::TIntermNode*)
sh::TIntermInvariantDeclaration::visit(sh::Visit, sh::TIntermTraverser*)
sh::TIntermInvariantDeclaration::~TIntermInvariantDeclaration()
sh::TIntermLoop::TIntermLoop(sh::TLoopType, sh::TIntermNode*, sh::TIntermTyped*, sh::TIntermTyped*, sh::TIntermBlock*)
sh::TIntermLoop::getAsLoopNode()
sh::TIntermLoop::getChildCount() const
sh::TIntermLoop::getChildNode(unsigned long) const
sh::TIntermLoop::replaceChildNode(sh::TIntermNode*, sh::TIntermNode*)
sh::TIntermLoop::traverse(sh::TIntermTraverser*)
sh::TIntermLoop::visit(sh::Visit, sh::TIntermTraverser*)
sh::TIntermLoop::~TIntermLoop()
sh::TIntermNode::getAsAggregate()
sh::TIntermNode::getAsBinaryNode()
sh::TIntermNode::getAsBlock()
sh::TIntermNode::getAsBranchNode()
sh::TIntermNode::getAsCaseNode()
sh::TIntermNode::getAsConstantUnion()
sh::TIntermNode::getAsDeclarationNode()
sh::TIntermNode::getAsFunctionDefinition()
sh::TIntermNode::getAsFunctionPrototypeNode()
sh::TIntermNode::getAsIfElseNode()
sh::TIntermNode::getAsInvariantDeclarationNode()
sh::TIntermNode::getAsLoopNode()
sh::TIntermNode::getAsPreprocessorDirective()
sh::TIntermNode::getAsSwitchNode()
sh::TIntermNode::getAsSwizzleNode()
sh::TIntermNode::getAsSymbolNode()
sh::TIntermNode::getAsTernaryNode()
sh::TIntermNode::getAsTyped()
sh::TIntermNode::getAsUnaryNode()
sh::TIntermNode::traverse(sh::TIntermTraverser*)
sh::TIntermNode::~TIntermNode()
sh::TIntermOperator::hasSideEffects() const
sh::TIntermOperator::isAssignment() const
sh::TIntermOperator::isConstructor() const
sh::TIntermOperator::isFunctionCall() const
sh::TIntermOperator::~TIntermOperator()
sh::TIntermPreprocessorDirective::TIntermPreprocessorDirective(sh::PreprocessorDirective, sh::ImmutableString)
sh::TIntermPreprocessorDirective::getAsPreprocessorDirective()
sh::TIntermPreprocessorDirective::getChildCount() const
sh::TIntermPreprocessorDirective::getChildNode(unsigned long) const
sh::TIntermPreprocessorDirective::replaceChildNode(sh::TIntermNode*, sh::TIntermNode*)
sh::TIntermPreprocessorDirective::traverse(sh::TIntermTraverser*)
sh::TIntermPreprocessorDirective::visit(sh::Visit, sh::TIntermTraverser*)
sh::TIntermPreprocessorDirective::~TIntermPreprocessorDirective()
sh::TIntermSwitch::TIntermSwitch(sh::TIntermTyped*, sh::TIntermBlock*)
sh::TIntermSwitch::getAsSwitchNode()
sh::TIntermSwitch::getChildCount() const
sh::TIntermSwitch::getChildNode(unsigned long) const
sh::TIntermSwitch::replaceChildNode(sh::TIntermNode*, sh::TIntermNode*)
sh::TIntermSwitch::visit(sh::Visit, sh::TIntermTraverser*)
sh::TIntermSwitch::~TIntermSwitch()
sh::TIntermSwizzle::TIntermSwizzle(sh::TIntermSwizzle const&)
sh::TIntermSwizzle::TIntermSwizzle(sh::TIntermTyped*, sh::TVector<int> const&)
sh::TIntermSwizzle::deepCopy() const
sh::TIntermSwizzle::fold(sh::TDiagnostics*)
sh::TIntermSwizzle::getAsSwizzleNode()
sh::TIntermSwizzle::getChildCount() const
sh::TIntermSwizzle::getChildNode(unsigned long) const
sh::TIntermSwizzle::hasDuplicateOffsets() const
sh::TIntermSwizzle::hasSideEffects() const
sh::TIntermSwizzle::replaceChildNode(sh::TIntermNode*, sh::TIntermNode*)
sh::TIntermSwizzle::visit(sh::Visit, sh::TIntermTraverser*)
sh::TIntermSwizzle::writeOffsetsAsXYZW(sh::TInfoSinkBase*) const
sh::TIntermSwizzle::~TIntermSwizzle()
sh::TIntermSymbol::TIntermSymbol(sh::TVariable const*)
sh::TIntermSymbol::deepCopy() const
sh::TIntermSymbol::getAsSymbolNode()
sh::TIntermSymbol::getChildCount() const
sh::TIntermSymbol::getChildNode(unsigned long) const
sh::TIntermSymbol::getConstantValue() const
sh::TIntermSymbol::getName() const
sh::TIntermSymbol::getType() const
sh::TIntermSymbol::hasConstantValue() const
sh::TIntermSymbol::hasSideEffects() const
sh::TIntermSymbol::replaceChildNode(sh::TIntermNode*, sh::TIntermNode*)
sh::TIntermSymbol::traverse(sh::TIntermTraverser*)
sh::TIntermSymbol::uniqueId() const
sh::TIntermSymbol::visit(sh::Visit, sh::TIntermTraverser*)
sh::TIntermSymbol::~TIntermSymbol()
sh::TIntermTernary::TIntermTernary(sh::TIntermTernary const&)
sh::TIntermTernary::TIntermTernary(sh::TIntermTyped*, sh::TIntermTyped*, sh::TIntermTyped*)
sh::TIntermTernary::deepCopy() const
sh::TIntermTernary::fold(sh::TDiagnostics*)
sh::TIntermTernary::getAsTernaryNode()
sh::TIntermTernary::getChildCount() const
sh::TIntermTernary::getChildNode(unsigned long) const
sh::TIntermTernary::hasSideEffects() const
sh::TIntermTernary::replaceChildNode(sh::TIntermNode*, sh::TIntermNode*)
sh::TIntermTernary::visit(sh::Visit, sh::TIntermTraverser*)
sh::TIntermTernary::~TIntermTernary()
sh::TIntermTraverser::CompareInsertion(sh::TIntermTraverser::NodeInsertMultipleEntry const&, sh::TIntermTraverser::NodeInsertMultipleEntry const&)
sh::TIntermTraverser::NodeInsertMultipleEntry::NodeInsertMultipleEntry(sh::TIntermBlock*, unsigned long, sh::TVector<sh::TIntermNode*>, sh::TVector<sh::TIntermNode*>)
sh::TIntermTraverser::NodeInsertMultipleEntry::NodeInsertMultipleEntry(sh::TIntermTraverser::NodeInsertMultipleEntry const&)
sh::TIntermTraverser::TIntermTraverser(bool, bool, bool, sh::TSymbolTable*)
sh::TIntermTraverser::getParentBlock() const
sh::TIntermTraverser::insertStatementInParentBlock(sh::TIntermNode*)
sh::TIntermTraverser::insertStatementsInParentBlock(sh::TVector<sh::TIntermNode*> const&)
sh::TIntermTraverser::insertStatementsInParentBlock(sh::TVector<sh::TIntermNode*> const&, sh::TVector<sh::TIntermNode*> const&)
sh::TIntermTraverser::queueReplacement(sh::TIntermNode*, sh::TIntermTraverser::OriginalNode)
sh::TIntermTraverser::queueReplacementWithParent(sh::TIntermNode*, sh::TIntermNode*, sh::TIntermNode*, sh::TIntermTraverser::OriginalNode)
sh::TIntermTraverser::setMaxAllowedDepth(int)
sh::TIntermTraverser::traverseAggregate(sh::TIntermAggregate*)
sh::TIntermTraverser::traverseBinary(sh::TIntermBinary*)
sh::TIntermTraverser::traverseBlock(sh::TIntermBlock*)
sh::TIntermTraverser::traverseFunctionDefinition(sh::TIntermFunctionDefinition*)
sh::TIntermTraverser::traverseLoop(sh::TIntermLoop*)
sh::TIntermTraverser::traverseUnary(sh::TIntermUnary*)
sh::TIntermTraverser::updateTree()
sh::TIntermTraverser::visitAggregate(sh::Visit, sh::TIntermAggregate*)
sh::TIntermTraverser::visitBinary(sh::Visit, sh::TIntermBinary*)
sh::TIntermTraverser::visitBlock(sh::Visit, sh::TIntermBlock*)
sh::TIntermTraverser::visitBranch(sh::Visit, sh::TIntermBranch*)
sh::TIntermTraverser::visitCase(sh::Visit, sh::TIntermCase*)
sh::TIntermTraverser::visitConstantUnion(sh::TIntermConstantUnion*)
sh::TIntermTraverser::visitDeclaration(sh::Visit, sh::TIntermDeclaration*)
sh::TIntermTraverser::visitFunctionDefinition(sh::Visit, sh::TIntermFunctionDefinition*)
sh::TIntermTraverser::visitFunctionPrototype(sh::TIntermFunctionPrototype*)
sh::TIntermTraverser::visitIfElse(sh::Visit, sh::TIntermIfElse*)
sh::TIntermTraverser::visitInvariantDeclaration(sh::Visit, sh::TIntermInvariantDeclaration*)
sh::TIntermTraverser::visitLoop(sh::Visit, sh::TIntermLoop*)
sh::TIntermTraverser::visitPreprocessorDirective(sh::TIntermPreprocessorDirective*)
sh::TIntermTraverser::visitSwitch(sh::Visit, sh::TIntermSwitch*)
sh::TIntermTraverser::visitSwizzle(sh::Visit, sh::TIntermSwizzle*)
sh::TIntermTraverser::visitSymbol(sh::TIntermSymbol*)
sh::TIntermTraverser::visitTernary(sh::Visit, sh::TIntermTernary*)
sh::TIntermTraverser::visitUnary(sh::Visit, sh::TIntermUnary*)
sh::TIntermTraverser::~TIntermTraverser()
sh::TIntermTyped::fold(sh::TDiagnostics*)
sh::TIntermTyped::getAsTyped()
sh::TIntermTyped::getConstantValue() const
sh::TIntermTyped::hasConstantValue() const
sh::TIntermTyped::~TIntermTyped()
sh::TIntermUnary::TIntermUnary(TOperator, sh::TIntermTyped*, sh::TFunction const*)
sh::TIntermUnary::TIntermUnary(sh::TIntermUnary const&)
sh::TIntermUnary::deepCopy() const
sh::TIntermUnary::fold(sh::TDiagnostics*)
sh::TIntermUnary::getAsUnaryNode()
sh::TIntermUnary::getChildCount() const
sh::TIntermUnary::getChildNode(unsigned long) const
sh::TIntermUnary::hasSideEffects() const
sh::TIntermUnary::promote()
sh::TIntermUnary::replaceChildNode(sh::TIntermNode*, sh::TIntermNode*)
sh::TIntermUnary::traverse(sh::TIntermTraverser*)
sh::TIntermUnary::visit(sh::Visit, sh::TIntermTraverser*)
sh::TIntermUnary::~TIntermUnary()
sh::TInterpolationQualifierWrapper::getQualifierString() const
sh::TInterpolationQualifierWrapper::getRank() const
sh::TInterpolationQualifierWrapper::getType() const
sh::TInterpolationQualifierWrapper::~TInterpolationQualifierWrapper()
sh::TInvariantQualifierWrapper::getQualifierString() const
sh::TInvariantQualifierWrapper::getRank() const
sh::TInvariantQualifierWrapper::getType() const
sh::TInvariantQualifierWrapper::~TInvariantQualifierWrapper()
sh::TLValueTrackingTraverser::TLValueTrackingTraverser(bool, bool, bool, sh::TSymbolTable*)
sh::TLValueTrackingTraverser::traverseAggregate(sh::TIntermAggregate*)
sh::TLValueTrackingTraverser::traverseBinary(sh::TIntermBinary*)
sh::TLValueTrackingTraverser::traverseUnary(sh::TIntermUnary*)
sh::TLValueTrackingTraverser::~TLValueTrackingTraverser()
sh::TLayoutQualifierWrapper::getQualifierString() const
sh::TLayoutQualifierWrapper::getRank() const
sh::TLayoutQualifierWrapper::getType() const
sh::TLayoutQualifierWrapper::~TLayoutQualifierWrapper()
sh::TMemoryQualifierWrapper::getQualifierString() const
sh::TMemoryQualifierWrapper::getRank() const
sh::TMemoryQualifierWrapper::getType() const
sh::TMemoryQualifierWrapper::~TMemoryQualifierWrapper()
sh::TOutputESSL::TOutputESSL(sh::TInfoSinkBase&, ShArrayIndexClampingStrategy, unsigned long (*)(char const*, unsigned long), std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >&, sh::TSymbolTable*, unsigned int, int, bool, unsigned long)
sh::TOutputESSL::writeVariablePrecision(sh::TPrecision)
sh::TOutputESSL::~TOutputESSL()
sh::TOutputGLSL::TOutputGLSL(sh::TInfoSinkBase&, ShArrayIndexClampingStrategy, unsigned long (*)(char const*, unsigned long), std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >&, sh::TSymbolTable*, unsigned int, int, ShShaderOutput, unsigned long)
sh::TOutputGLSL::translateTextureFunction(sh::ImmutableString const&)
sh::TOutputGLSL::translateTextureFunction(sh::ImmutableString const&)::legacyToCoreRename
sh::TOutputGLSL::translateTextureFunction(sh::ImmutableString const&)::simpleRename
sh::TOutputGLSL::visitSymbol(sh::TIntermSymbol*)
sh::TOutputGLSL::writeVariablePrecision(sh::TPrecision)
sh::TOutputGLSL::~TOutputGLSL()
sh::TOutputGLSLBase::TOutputGLSLBase(sh::TInfoSinkBase&, ShArrayIndexClampingStrategy, unsigned long (*)(char const*, unsigned long), std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >&, sh::TSymbolTable*, unsigned int, int, ShShaderOutput, unsigned long)
sh::TOutputGLSLBase::declareInterfaceBlock(sh::TInterfaceBlock const*)
sh::TOutputGLSLBase::declareInterfaceBlockLayout(sh::TInterfaceBlock const*)
sh::TOutputGLSLBase::declareStruct(sh::TStructure const*)
sh::TOutputGLSLBase::mapQualifierToString(sh::TQualifier)
sh::TOutputGLSLBase::structDeclared(sh::TStructure const*) const
sh::TOutputGLSLBase::translateTextureFunction(sh::ImmutableString const&)
sh::TOutputGLSLBase::visitAggregate(sh::Visit, sh::TIntermAggregate*)
sh::TOutputGLSLBase::visitBinary(sh::Visit, sh::TIntermBinary*)
sh::TOutputGLSLBase::visitBlock(sh::Visit, sh::TIntermBlock*)
sh::TOutputGLSLBase::visitBranch(sh::Visit, sh::TIntermBranch*)
sh::TOutputGLSLBase::visitCase(sh::Visit, sh::TIntermCase*)
sh::TOutputGLSLBase::visitCodeBlock(sh::TIntermBlock*)
sh::TOutputGLSLBase::visitConstantUnion(sh::TIntermConstantUnion*)
sh::TOutputGLSLBase::visitDeclaration(sh::Visit, sh::TIntermDeclaration*)
sh::TOutputGLSLBase::visitFunctionDefinition(sh::Visit, sh::TIntermFunctionDefinition*)
sh::TOutputGLSLBase::visitFunctionPrototype(sh::TIntermFunctionPrototype*)
sh::TOutputGLSLBase::visitIfElse(sh::Visit, sh::TIntermIfElse*)
sh::TOutputGLSLBase::visitInvariantDeclaration(sh::Visit, sh::TIntermInvariantDeclaration*)
sh::TOutputGLSLBase::visitLoop(sh::Visit, sh::TIntermLoop*)
sh::TOutputGLSLBase::visitPreprocessorDirective(sh::TIntermPreprocessorDirective*)
sh::TOutputGLSLBase::visitSwitch(sh::Visit, sh::TIntermSwitch*)
sh::TOutputGLSLBase::visitSwizzle(sh::Visit, sh::TIntermSwizzle*)
sh::TOutputGLSLBase::visitSymbol(sh::TIntermSymbol*)
sh::TOutputGLSLBase::visitTernary(sh::Visit, sh::TIntermTernary*)
sh::TOutputGLSLBase::visitUnary(sh::Visit, sh::TIntermUnary*)
sh::TOutputGLSLBase::writeBuiltInFunctionTriplet(sh::Visit, TOperator, bool)
sh::TOutputGLSLBase::writeConstantUnion(sh::TType const&, sh::TConstantUnion const*)
sh::TOutputGLSLBase::writeConstructorTriplet(sh::Visit, sh::TType const&)
sh::TOutputGLSLBase::writeFunctionParameters(sh::TFunction const*)
sh::TOutputGLSLBase::writeLayoutQualifier(sh::TIntermTyped*)
sh::TOutputGLSLBase::writeQualifier(sh::TQualifier, sh::TSymbol const*)
sh::TOutputGLSLBase::writeVariableType(sh::TType const&, sh::TSymbol const*)
sh::TOutputGLSLBase::~TOutputGLSLBase()
sh::TOutputVulkanGLSL::TOutputVulkanGLSL(sh::TInfoSinkBase&, ShArrayIndexClampingStrategy, unsigned long (*)(char const*, unsigned long), std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >&, sh::TSymbolTable*, unsigned int, int, ShShaderOutput, unsigned long)
sh::TOutputVulkanGLSL::writeLayoutQualifier(sh::TIntermTyped*)
sh::TOutputVulkanGLSL::writeQualifier(sh::TQualifier, sh::TSymbol const*)
sh::TOutputVulkanGLSL::writeStructType(sh::TStructure const*)
sh::TOutputVulkanGLSL::~TOutputVulkanGLSL()
sh::TParameter::createVariable(sh::TSymbolTable*)
sh::TParseContext::TParseContext(sh::TSymbolTable&, std::__1::map<sh::TExtension, sh::TBehavior, std::__1::less<sh::TExtension>, std::__1::allocator<std::__1::pair<sh::TExtension const, sh::TBehavior> > >&, unsigned int, ShShaderSpec, unsigned long, bool, sh::TDiagnostics*, ShBuiltInResources const&)
sh::TParseContext::addAssign(TOperator, sh::TIntermTyped*, sh::TIntermTyped*, sh::TSourceLoc const&)
sh::TParseContext::addBinaryMath(TOperator, sh::TIntermTyped*, sh::TIntermTyped*, sh::TSourceLoc const&)
sh::TParseContext::addBinaryMathBooleanResult(TOperator, sh::TIntermTyped*, sh::TIntermTyped*, sh::TSourceLoc const&)
sh::TParseContext::addBinaryMathInternal(TOperator, sh::TIntermTyped*, sh::TIntermTyped*, sh::TSourceLoc const&)
sh::TParseContext::addBranch(TOperator, sh::TIntermTyped*, sh::TSourceLoc const&)
sh::TParseContext::addBranch(TOperator, sh::TSourceLoc const&)
sh::TParseContext::addCase(sh::TIntermTyped*, sh::TSourceLoc const&)
sh::TParseContext::addComma(sh::TIntermTyped*, sh::TIntermTyped*, sh::TSourceLoc const&)
sh::TParseContext::addConditionInitializer(sh::TPublicType const&, sh::ImmutableString const&, sh::TIntermTyped*, sh::TSourceLoc const&)
sh::TParseContext::addConstructor(sh::TFunctionLookup*, sh::TSourceLoc const&)
sh::TParseContext::addConstructorFunc(sh::TPublicType const&)
sh::TParseContext::addDefault(sh::TSourceLoc const&)
sh::TParseContext::addEmptyStatement(sh::TSourceLoc const&)
sh::TParseContext::addFieldSelectionExpression(sh::TIntermTyped*, sh::TSourceLoc const&, sh::ImmutableString const&, sh::TSourceLoc const&)
sh::TParseContext::addFullySpecifiedType(sh::TPublicType*)
sh::TParseContext::addFullySpecifiedType(sh::TTypeQualifierBuilder const&, sh::TPublicType const&)
sh::TParseContext::addFunctionCallOrMethod(sh::TFunctionLookup*, sh::TSourceLoc const&)
sh::TParseContext::addFunctionDefinition(sh::TIntermFunctionPrototype*, sh::TIntermBlock*, sh::TSourceLoc const&)
sh::TParseContext::addFunctionPrototypeDeclaration(sh::TFunction const&, sh::TSourceLoc const&)
sh::TParseContext::addIfElse(sh::TIntermTyped*, sh::TIntermNodePair, sh::TSourceLoc const&)
sh::TParseContext::addIndexExpression(sh::TIntermTyped*, sh::TSourceLoc const&, sh::TIntermTyped*)
sh::TParseContext::addInterfaceBlock(sh::TTypeQualifierBuilder const&, sh::TSourceLoc const&, sh::ImmutableString const&, sh::TVector<sh::TField*>*, sh::ImmutableString const&, sh::TSourceLoc const&, sh::TIntermTyped*, sh::TSourceLoc const&)
sh::TParseContext::addLoop(sh::TLoopType, sh::TIntermNode*, sh::TIntermNode*, sh::TIntermTyped*, sh::TIntermNode*, sh::TSourceLoc const&)
sh::TParseContext::addMethod(sh::TFunctionLookup*, sh::TSourceLoc const&)
sh::TParseContext::addNonConstructorFunc(sh::ImmutableString const&, sh::TSymbol const*)
sh::TParseContext::addNonConstructorFunctionCall(sh::TFunctionLookup*, sh::TSourceLoc const&)
sh::TParseContext::addScalarLiteral(sh::TConstantUnion const*, sh::TSourceLoc const&)
sh::TParseContext::addStructDeclaratorList(sh::TPublicType const&, sh::TVector<sh::TDeclarator*> const*)
sh::TParseContext::addStructDeclaratorListWithQualifiers(sh::TTypeQualifierBuilder const&, sh::TPublicType*, sh::TVector<sh::TDeclarator*> const*)
sh::TParseContext::addStructFieldList(sh::TVector<sh::TField*>*, sh::TSourceLoc const&)
sh::TParseContext::addStructure(sh::TSourceLoc const&, sh::TSourceLoc const&, sh::ImmutableString const&, sh::TVector<sh::TField*>*)
sh::TParseContext::addSwitch(sh::TIntermTyped*, sh::TIntermBlock*, sh::TSourceLoc const&)
sh::TParseContext::addTernarySelection(sh::TIntermTyped*, sh::TIntermTyped*, sh::TIntermTyped*, sh::TSourceLoc const&)
sh::TParseContext::addUnaryMath(TOperator, sh::TIntermTyped*, sh::TSourceLoc const&)
sh::TParseContext::addUnaryMathLValue(TOperator, sh::TIntermTyped*, sh::TSourceLoc const&)
sh::TParseContext::appendStatement(sh::TIntermBlock*, sh::TIntermNode*)
sh::TParseContext::assignError(sh::TSourceLoc const&, char const*, sh::TType const&, sh::TType const&)
sh::TParseContext::binaryOpCommonCheck(TOperator, sh::TIntermTyped*, sh::TIntermTyped*, sh::TSourceLoc const&)
sh::TParseContext::binaryOpError(sh::TSourceLoc const&, char const*, sh::TType const&, sh::TType const&)
sh::TParseContext::checkArrayElementIsNotArray(sh::TSourceLoc const&, sh::TPublicType const&)
sh::TParseContext::checkAtomicCounterOffsetDoesNotOverlap(bool, sh::TSourceLoc const&, sh::TType*)
sh::TParseContext::checkAtomicMemoryBuiltinFunctions(sh::TIntermAggregate*)
sh::TParseContext::checkBindingIsValid(sh::TSourceLoc const&, sh::TType const&)
sh::TParseContext::checkCanBeDeclaredWithoutInitializer(sh::TSourceLoc const&, sh::ImmutableString const&, sh::TType*)
sh::TParseContext::checkCanBeLValue(sh::TSourceLoc const&, char const*, sh::TIntermTyped*)
sh::TParseContext::checkCanUseExtension(sh::TSourceLoc const&, sh::TExtension)
sh::TParseContext::checkConstructorArguments(sh::TSourceLoc const&, sh::TVector<sh::TIntermNode*> const&, sh::TType const&)
sh::TParseContext::checkGeometryShaderInputAndSetArraySize(sh::TSourceLoc const&, sh::ImmutableString const&, sh::TType*)
sh::TParseContext::checkImageMemoryAccessForBuiltinFunctions(sh::TIntermAggregate*)
sh::TParseContext::checkImageMemoryAccessForUserDefinedFunctions(sh::TFunction const*, sh::TIntermAggregate const*)
sh::TParseContext::checkIndexLessThan(bool, sh::TSourceLoc const&, int, int, char const*)
sh::TParseContext::checkInputOutputTypeIsValidES3(sh::TQualifier, sh::TPublicType const&, sh::TSourceLoc const&)
sh::TParseContext::checkIsAtGlobalLevel(sh::TSourceLoc const&, char const*)
sh::TParseContext::checkIsBelowStructNestingLimit(sh::TSourceLoc const&, sh::TField const&)
sh::TParseContext::checkIsConst(sh::TIntermTyped*)
sh::TParseContext::checkIsNotOpaqueType(sh::TSourceLoc const&, sh::TTypeSpecifierNonArray const&, char const*)
sh::TParseContext::checkIsNotReserved(sh::TSourceLoc const&, sh::ImmutableString const&)
sh::TParseContext::checkIsParameterQualifierValid(sh::TSourceLoc const&, sh::TTypeQualifierBuilder const&, sh::TType*)
sh::TParseContext::checkIsScalarBool(sh::TSourceLoc const&, sh::TIntermTyped const*)
sh::TParseContext::checkIsScalarInteger(sh::TIntermTyped*, char const*)
sh::TParseContext::checkIsValidArraySize(sh::TSourceLoc const&, sh::TIntermTyped*)
sh::TParseContext::checkIsValidTypeAndQualifierForArray(sh::TSourceLoc const&, sh::TPublicType const&)
sh::TParseContext::checkLocalVariableConstStorageQualifier(sh::TQualifierWrapperBase const&)
sh::TParseContext::checkMemoryQualifierIsNotSpecified(sh::TMemoryQualifier const&, sh::TSourceLoc const&)
sh::TParseContext::checkPrecisionSpecified(sh::TSourceLoc const&, sh::TPrecision, sh::TBasicType)
sh::TParseContext::checkTextureGather(sh::TIntermAggregate*)
sh::TParseContext::checkTextureOffsetConst(sh::TIntermAggregate*)
sh::TParseContext::checkUnsizedArrayConstructorArgumentDimensionality(sh::TVector<sh::TIntermNode*> const&, sh::TType, sh::TSourceLoc const&)
sh::TParseContext::combineStructFieldLists(sh::TVector<sh::TField*>*, sh::TVector<sh::TField*> const*, sh::TSourceLoc const&)
sh::TParseContext::createPrototypeNodeFromFunction(sh::TFunction const&, sh::TSourceLoc const&, bool)
sh::TParseContext::createTypeQualifierBuilder(sh::TSourceLoc const&)
sh::TParseContext::createUnaryMath(TOperator, sh::TIntermTyped*, sh::TSourceLoc const&, sh::TFunction const*)
sh::TParseContext::declarationQualifierErrorCheck(sh::TQualifier, sh::TLayoutQualifier const&, sh::TSourceLoc const&)
sh::TParseContext::declareVariable(sh::TSourceLoc const&, sh::ImmutableString const&, sh::TType const*, sh::TVariable**)
sh::TParseContext::enterStructDeclaration(sh::TSourceLoc const&, sh::ImmutableString const&)
sh::TParseContext::error(sh::TSourceLoc const&, char const*, char const*)
sh::TParseContext::error(sh::TSourceLoc const&, char const*, sh::ImmutableString const&)
sh::TParseContext::executeInitializer(sh::TSourceLoc const&, sh::ImmutableString const&, sh::TType*, sh::TIntermTyped*, sh::TIntermBinary**)
sh::TParseContext::functionCallRValueLValueErrorCheck(sh::TFunction const*, sh::TIntermAggregate*)
sh::TParseContext::getComputeShaderLocalSize() const
sh::TParseContext::getNamedVariable(sh::TSourceLoc const&, sh::ImmutableString const&, sh::TSymbol const*)
sh::TParseContext::isExtensionEnabled(sh::TExtension) const
sh::TParseContext::isMultiplicationTypeCombinationValid(TOperator, sh::TType const&, sh::TType const&)
sh::TParseContext::joinLayoutQualifiers(sh::TLayoutQualifier, sh::TLayoutQualifier, sh::TSourceLoc const&)
sh::TParseContext::nonEmptyDeclarationErrorCheck(sh::TPublicType const&, sh::TSourceLoc const&)
sh::TParseContext::parseArrayDeclarator(sh::TPublicType&, sh::TSourceLoc const&, sh::ImmutableString const&, sh::TSourceLoc const&, sh::TVector<unsigned int> const&, sh::TIntermDeclaration*)
sh::TParseContext::parseArrayInitDeclarator(sh::TPublicType const&, sh::TSourceLoc const&, sh::ImmutableString const&, sh::TSourceLoc const&, sh::TVector<unsigned int> const&, sh::TSourceLoc const&, sh::TIntermTyped*, sh::TIntermDeclaration*)
sh::TParseContext::parseDeclarator(sh::TPublicType&, sh::TSourceLoc const&, sh::ImmutableString const&, sh::TIntermDeclaration*)
sh::TParseContext::parseDefaultPrecisionQualifier(sh::TPrecision, sh::TPublicType const&, sh::TSourceLoc const&)
sh::TParseContext::parseFunctionDeclarator(sh::TSourceLoc const&, sh::TFunction*)
sh::TParseContext::parseFunctionDefinitionHeader(sh::TSourceLoc const&, sh::TFunction const*, sh::TIntermFunctionPrototype**)
sh::TParseContext::parseFunctionHeader(sh::TPublicType const&, sh::ImmutableString const&, sh::TSourceLoc const&)
sh::TParseContext::parseGeometryShaderInputLayoutQualifier(sh::TTypeQualifier const&)
sh::TParseContext::parseGeometryShaderOutputLayoutQualifier(sh::TTypeQualifier const&)
sh::TParseContext::parseGlobalLayoutQualifier(sh::TTypeQualifierBuilder const&)
sh::TParseContext::parseGlobalStorageQualifier(sh::TQualifier, sh::TSourceLoc const&)
sh::TParseContext::parseInOutQualifier(sh::TSourceLoc const&)
sh::TParseContext::parseInQualifier(sh::TSourceLoc const&)
sh::TParseContext::parseInitDeclarator(sh::TPublicType const&, sh::TSourceLoc const&, sh::ImmutableString const&, sh::TSourceLoc const&, sh::TIntermTyped*, sh::TIntermDeclaration*)
sh::TParseContext::parseInvariantDeclaration(sh::TTypeQualifierBuilder const&, sh::TSourceLoc const&, sh::ImmutableString const&, sh::TSymbol const*)
sh::TParseContext::parseLayoutQualifier(sh::ImmutableString const&, sh::TSourceLoc const&)
sh::TParseContext::parseLayoutQualifier(sh::ImmutableString const&, sh::TSourceLoc const&, int, sh::TSourceLoc const&)
sh::TParseContext::parseLocalSize(sh::ImmutableString const&, sh::TSourceLoc const&, int, sh::TSourceLoc const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, sh::WorkGroupSize*)
sh::TParseContext::parseOutQualifier(sh::TSourceLoc const&)
sh::TParseContext::parseParameterArrayDeclarator(sh::ImmutableString const&, sh::TSourceLoc const&, sh::TVector<unsigned int> const&, sh::TSourceLoc const&, sh::TPublicType*)
sh::TParseContext::parseParameterDeclarator(sh::TPublicType const&, sh::ImmutableString const&, sh::TSourceLoc const&)
sh::TParseContext::parseParameterDeclarator(sh::TType*, sh::ImmutableString const&, sh::TSourceLoc const&)
sh::TParseContext::parseSingleArrayDeclaration(sh::TPublicType&, sh::TSourceLoc const&, sh::ImmutableString const&, sh::TSourceLoc const&, sh::TVector<unsigned int> const&)
sh::TParseContext::parseSingleArrayInitDeclaration(sh::TPublicType&, sh::TSourceLoc const&, sh::ImmutableString const&, sh::TSourceLoc const&, sh::TVector<unsigned int> const&, sh::TSourceLoc const&, sh::TIntermTyped*)
sh::TParseContext::parseSingleDeclaration(sh::TPublicType&, sh::TSourceLoc const&, sh::ImmutableString const&)
sh::TParseContext::parseSingleInitDeclaration(sh::TPublicType const&, sh::TSourceLoc const&, sh::ImmutableString const&, sh::TSourceLoc const&, sh::TIntermTyped*)
sh::TParseContext::parseStructArrayDeclarator(sh::ImmutableString const&, sh::TSourceLoc const&, sh::TVector<unsigned int> const*)
sh::TParseContext::parseStructDeclarator(sh::ImmutableString const&, sh::TSourceLoc const&)
sh::TParseContext::parseVariableIdentifier(sh::TSourceLoc const&, sh::ImmutableString const&, sh::TSymbol const*)
sh::TParseContext::parseVaryingQualifier(sh::TSourceLoc const&)
sh::TParseContext::parseVectorFields(sh::TSourceLoc const&, sh::ImmutableString const&, int, sh::TVector<int>*)
sh::TParseContext::setAtomicCounterBindingDefaultOffset(sh::TPublicType const&, sh::TSourceLoc const&)
sh::TParseContext::unaryOpError(sh::TSourceLoc const&, char const*, sh::TType const&)
sh::TParseContext::warning(sh::TSourceLoc const&, char const*, char const*)
sh::TParseContext::~TParseContext()
sh::TPrecisionQualifierWrapper::getQualifierString() const
sh::TPrecisionQualifierWrapper::getRank() const
sh::TPrecisionQualifierWrapper::getType() const
sh::TPrecisionQualifierWrapper::~TPrecisionQualifierWrapper()
sh::TPublicType::clearArrayness()
sh::TPublicType::initialize(sh::TTypeSpecifierNonArray const&, sh::TQualifier)
sh::TPublicType::isAggregate() const
sh::TPublicType::isArray() const
sh::TPublicType::isStructureContainingArrays() const
sh::TPublicType::isStructureContainingType(sh::TBasicType) const
sh::TPublicType::setArraySizes(sh::TVector<unsigned int>*)
sh::TQualifierWrapperBase::~TQualifierWrapperBase()
sh::TShHandleBase::getAsCompiler()
sh::TShHandleBase::~TShHandleBase()
sh::TStorageQualifierWrapper::getQualifierString() const
sh::TStorageQualifierWrapper::getRank() const
sh::TStorageQualifierWrapper::getType() const
sh::TStorageQualifierWrapper::~TStorageQualifierWrapper()
sh::TStructure::TStructure(sh::TSymbolTable*, sh::ImmutableString const&, sh::TVector<sh::TField*> const*, sh::SymbolType)
sh::TStructure::TStructure(sh::TSymbolUniqueId const&, sh::ImmutableString const&, sh::TExtension, sh::TVector<sh::TField*> const*)
sh::TStructure::setName(sh::ImmutableString const&)
sh::TSymbol::getMangledName() const
sh::TSymbol::name() const
sh::TSymbolTable::TSymbolTable()
sh::TSymbolTable::TSymbolTableLevel::insert(sh::TSymbol*)
sh::TSymbolTable::TSymbolTableLevel::insertUnmangled(sh::TFunction*)
sh::TSymbolTable::addInvariantVarying(sh::TVariable const&)
sh::TSymbolTable::atGlobalLevel() const
sh::TSymbolTable::clearCompilationResults()
sh::TSymbolTable::declare(sh::TSymbol*)
sh::TSymbolTable::declareInternal(sh::TSymbol*)
sh::TSymbolTable::declareUserDefinedFunction(sh::TFunction*, bool)
sh::TSymbolTable::find(sh::ImmutableString const&, int) const
sh::TSymbolTable::findBuiltIn(sh::ImmutableString const&, int) const
sh::TSymbolTable::findGlobal(sh::ImmutableString const&) const
sh::TSymbolTable::findUserDefined(sh::ImmutableString const&) const
sh::TSymbolTable::findUserDefinedFunction(sh::ImmutableString const&) const
sh::TSymbolTable::getDefaultPrecision(sh::TBasicType) const
sh::TSymbolTable::getGlInVariableWithArraySize() const
sh::TSymbolTable::getOrCreateVariableMetadata(sh::TVariable const&)
sh::TSymbolTable::getUnmangledBuiltInForShaderVersion(sh::ImmutableString const&, int)
sh::TSymbolTable::gl_FragData() const
sh::TSymbolTable::gl_SecondaryFragDataEXT() const
sh::TSymbolTable::initializeBuiltInVariables(unsigned int, ShShaderSpec, ShBuiltInResources const&)
sh::TSymbolTable::initializeBuiltIns(unsigned int, ShShaderSpec, ShBuiltInResources const&)
sh::TSymbolTable::isEmpty() const
sh::TSymbolTable::isStaticallyUsed(sh::TVariable const&) const
sh::TSymbolTable::isVaryingInvariant(sh::TVariable const&) const
sh::TSymbolTable::kLastBuiltInId
sh::TSymbolTable::markFunctionHasPrototypeDeclaration(sh::ImmutableString const&, bool*) const
sh::TSymbolTable::markStaticRead(sh::TVariable const&)
sh::TSymbolTable::markStaticWrite(sh::TVariable const&)
sh::TSymbolTable::nextUniqueIdValue()
sh::TSymbolTable::pop()
sh::TSymbolTable::push()
sh::TSymbolTable::setDefaultPrecision(sh::TBasicType, sh::TPrecision)
sh::TSymbolTable::setFunctionParameterNamesFromDefinition(sh::TFunction const*, bool*) const
sh::TSymbolTable::setGlInArraySize(unsigned int)
sh::TSymbolTable::setGlobalInvariant(bool)
sh::TSymbolTable::~TSymbolTable()
sh::TSymbolUniqueId::TSymbolUniqueId(sh::TSymbolTable*)
sh::TType::TType(sh::TBasicType, sh::TPrecision, sh::TQualifier, unsigned char, unsigned char)
sh::TType::TType(sh::TBasicType, unsigned char, unsigned char)
sh::TType::TType(sh::TInterfaceBlock const*, sh::TQualifier, sh::TLayoutQualifier)
sh::TType::TType(sh::TPublicType const&)
sh::TType::TType(sh::TStructure const*, bool)
sh::TType::TType(sh::TType const&)
sh::TType::buildMangledName() const
sh::TType::canBeConstructed() const
sh::TType::canReplaceWithConstantUnion() const
sh::TType::getArraySizeProduct() const
sh::TType::getBuiltInTypeNameString() const
sh::TType::getDeepestStructNesting() const
sh::TType::getLocationCount() const
sh::TType::getMangledName() const
sh::TType::getObjectSize() const
sh::TType::getQualifierString() const
sh::TType::isElementTypeOf(sh::TType const&) const
sh::TType::isNamelessStruct() const
sh::TType::isStructureContainingArrays() const
sh::TType::isStructureContainingMatrices() const
sh::TType::isStructureContainingSamplers() const
sh::TType::isStructureContainingType(sh::TBasicType) const
sh::TType::isUnsizedArray() const
sh::TType::makeArray(unsigned int)
sh::TType::makeArrays(sh::TVector<unsigned int> const&)
sh::TType::operator=(sh::TType const&)
sh::TType::operator==(sh::TType const&) const
sh::TType::realize()
sh::TType::setArraySize(unsigned long, unsigned int)
sh::TType::setBasicType(sh::TBasicType)
sh::TType::setInterfaceBlock(sh::TInterfaceBlock const*)
sh::TType::setPrimarySize(unsigned char)
sh::TType::sizeOutermostUnsizedArray(unsigned int)
sh::TType::sizeUnsizedArrays(sh::TVector<unsigned int> const*)
sh::TType::toArrayElementType()
sh::TTypeQualifierBuilder::TTypeQualifierBuilder(sh::TStorageQualifierWrapper const*, int)
sh::TTypeQualifierBuilder::appendQualifier(sh::TQualifierWrapperBase const*)
sh::TTypeQualifierBuilder::checkSequenceIsValid(sh::TDiagnostics*) const
sh::TTypeQualifierBuilder::getParameterTypeQualifier(sh::TDiagnostics*) const
sh::TTypeQualifierBuilder::getVariableTypeQualifier(sh::TDiagnostics*) const
sh::TVariable::TVariable(sh::TSymbolTable*, sh::ImmutableString const&, sh::TType const*, sh::SymbolType, sh::TExtension)
sh::TVersionGLSL::TVersionGLSL(unsigned int, TPragma const&, ShShaderOutput)
sh::TVersionGLSL::visitAggregate(sh::Visit, sh::TIntermAggregate*)
sh::TVersionGLSL::visitDeclaration(sh::Visit, sh::TIntermDeclaration*)
sh::TVersionGLSL::visitFunctionPrototype(sh::TIntermFunctionPrototype*)
sh::TVersionGLSL::visitInvariantDeclaration(sh::Visit, sh::TIntermInvariantDeclaration*)
sh::TVersionGLSL::visitSymbol(sh::TIntermSymbol*)
sh::TVersionGLSL::~TVersionGLSL()
sh::TranslatorESSL::TranslatorESSL(unsigned int, ShShaderSpec)
sh::TranslatorESSL::initBuiltInFunctionEmulator(sh::BuiltInFunctionEmulator*, unsigned long)
sh::TranslatorESSL::shouldFlattenPragmaStdglInvariantAll()
sh::TranslatorESSL::translate(sh::TIntermBlock*, unsigned long, sh::PerformanceDiagnostics*)
sh::TranslatorESSL::writeExtensionBehavior(unsigned long)
sh::TranslatorESSL::~TranslatorESSL()
sh::TranslatorGLSL::TranslatorGLSL(unsigned int, ShShaderSpec, ShShaderOutput)
sh::TranslatorGLSL::initBuiltInFunctionEmulator(sh::BuiltInFunctionEmulator*, unsigned long)
sh::TranslatorGLSL::shouldCollectVariables(unsigned long)
sh::TranslatorGLSL::shouldFlattenPragmaStdglInvariantAll()
sh::TranslatorGLSL::translate(sh::TIntermBlock*, unsigned long, sh::PerformanceDiagnostics*)
sh::TranslatorGLSL::writeExtensionBehavior(sh::TIntermNode*, unsigned long)
sh::TranslatorGLSL::writeVersion(sh::TIntermNode*)
sh::TranslatorGLSL::~TranslatorGLSL()
sh::TranslatorVulkan::TranslatorVulkan(unsigned int, ShShaderSpec)
sh::TranslatorVulkan::shouldFlattenPragmaStdglInvariantAll()
sh::TranslatorVulkan::translate(sh::TIntermBlock*, unsigned long, sh::PerformanceDiagnostics*)
sh::TranslatorVulkan::~TranslatorVulkan()
sh::UnfoldShortCircuitAST(sh::TIntermBlock*)
sh::Uniform::Uniform()
sh::Uniform::Uniform(sh::Uniform const&)
sh::Uniform::operator=(sh::Uniform const&)
sh::Uniform::~Uniform()
sh::UnmangledBuiltIns::ARB_texture_rectangle
sh::UnmangledBuiltIns::EXT_YUV_target
sh::UnmangledBuiltIns::EXT_geometry_shader
sh::UnmangledBuiltIns::EXT_shader_texture_lod
sh::UnmangledBuiltIns::OES_standard_derivatives
sh::UnmangledBuiltIns::UNDEFINED
sh::UseInterfaceBlockFields(sh::TIntermBlock*, std::__1::vector<sh::InterfaceBlock, std::__1::allocator<sh::InterfaceBlock> > const&, sh::TSymbolTable const&)
sh::ValidateGlobalInitializer(sh::TIntermTyped*, int, bool*)
sh::ValidateLimitations(sh::TIntermNode*, unsigned int, sh::TSymbolTable*, sh::TDiagnostics*)
sh::ValidateMaxParameters(sh::TIntermBlock*, unsigned int)
sh::ValidateOutputs(sh::TIntermBlock*, std::__1::map<sh::TExtension, sh::TBehavior, std::__1::less<sh::TExtension>, std::__1::allocator<std::__1::pair<sh::TExtension const, sh::TBehavior> > > const&, int, sh::TDiagnostics*)
sh::ValidateSwitchStatementList(sh::TBasicType, sh::TDiagnostics*, sh::TIntermBlock*, sh::TSourceLoc const&)
sh::ValidateVaryingLocations(sh::TIntermBlock*, sh::TDiagnostics*, unsigned int)
sh::VariableWithLocation::~VariableWithLocation()
sh::Varying::Varying()
sh::Varying::Varying(sh::Varying const&)
sh::Varying::operator=(sh::Varying const&)
sh::Varying::~Varying()
sh::VectorizeVectorScalarArithmetic(sh::TIntermBlock*, sh::TSymbolTable*)
sh::WorkGroupSize::fill(int)
sh::WorkGroupSize::isAnyValueSet() const
sh::WorkGroupSize::isDeclared() const
sh::WorkGroupSize::isWorkGroupSizeMatching(sh::WorkGroupSize const&) const
sh::WorkGroupSize::operator[](unsigned long)
sh::WorkGroupSize::operator[](unsigned long) const
sh::WorkGroupSize::size() const
sh::WriteGeometryShaderLayoutQualifiers(sh::TInfoSinkBase&, sh::TLayoutPrimitiveType, int, sh::TLayoutPrimitiveType, int)
sh::getBasicString(sh::TBasicType)
sh::getBehavior(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)::kDisable
sh::getBehavior(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)::kEnable
sh::getBehavior(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)::kRequire
sh::getBehavior(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)::kWarn
sh::getQualifierString(sh::TQualifier)
sh::getYuvCscStandardEXT(sh::ImmutableString const&)
sh::kEmptyImmutableString
sh::strtof_clamp(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, float*)
sha1.cc
shade_model_flat
shader
shader input/output
shader storage block
shader storage block binding greater than MAX_SHADER_STORAGE_BUFFER_BINDINGS
shaders.
shadow1D
shadow1DGradARB
shadow1DLod
shadow1DProj
shadow1DProjGradARB
shadow1DProjLod
shadow2D
shadow2DEXT
shadow2DGradARB
shadow2DLod
shadow2DProj
shadow2DProjEXT
shadow2DProjGradARB
shadow2DProjLod
shadow2DRect
shadow2DRectGradARB
shadow2DRectProj
shadow2DRectProjGradARB
shared
shared_mutex.cpp
shift exponent is negative or undefined
shift-UBO-binding
shift-image-binding
shift-sampler-binding
shift-ssbo-binding
shift-texture-binding
shift-uav-binding
shift_expression
short
simple_statement
sin
sincos
sinf
single_attribute
single_declaration
single_type_qualifier
sinhf
size=
sizeof
smooth
smooth centroid in
smooth centroid out
smooth in
smooth out
smoothstep
snprintf
source-entrypoint
sparseImageLoad
sparseImageLoadARB
sparseTexel
sparseTexelFetch
sparseTexelFetchARB
sparseTexelFetchOffset
sparseTexelFetchOffsetARB
sparseTexelsResident
sparseTexelsResidentARB
sparseTexture
sparseTextureARB
sparseTextureClamp
sparseTextureClampARB
sparseTextureGather
sparseTextureGatherARB
sparseTextureGatherOffset
sparseTextureGatherOffsetARB
sparseTextureGatherOffsets
sparseTextureGatherOffsetsARB
sparseTextureGrad
sparseTextureGradARB
sparseTextureGradClamp
sparseTextureGradClampARB
sparseTextureGradOffset
sparseTextureGradOffsetARB
sparseTextureGradOffsetClam
sparseTextureGradOffsetClampARB
sparseTextureLod
sparseTextureLodARB
sparseTextureLodOffset
sparseTextureLodOffsetARB
sparseTextureOffset
sparseTextureOffsetARB
sparseTextureOffsetClamp
sparseTextureOffsetClampARB
spec_version
specialization-constant
specialization-constant id already used
specialization-constant id is too large
specified multiple times
sprintf
spv::Block::dump(std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >&) const
spv::Block::~Block()
spv::Builder::AccessChain::AccessChain(spv::Builder::AccessChain const&)
spv::Builder::Builder(unsigned int, unsigned int, spv::SpvBuildLogger*)
spv::Builder::If::If(unsigned int, unsigned int, spv::Builder&)
spv::Builder::If::makeBeginElse()
spv::Builder::If::makeEndIf()
spv::Builder::accessChainGetInferredType()
spv::Builder::accessChainGetLValue()
spv::Builder::accessChainLoad(spv::Decoration, spv::Decoration, unsigned int, spv::MemoryAccessMask, spv::Scope)
spv::Builder::accessChainPushSwizzle(std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >&, unsigned int)
spv::Builder::accessChainStore(unsigned int, spv::MemoryAccessMask, spv::Scope)
spv::Builder::addDecoration(unsigned int, spv::Decoration, char const*)
spv::Builder::addDecoration(unsigned int, spv::Decoration, int)
spv::Builder::addDecorationId(unsigned int, spv::Decoration, unsigned int)
spv::Builder::addEntryPoint(spv::ExecutionModel, spv::Function*, char const*)
spv::Builder::addExecutionMode(spv::Function*, spv::ExecutionMode, int, int, int)
spv::Builder::addExtension(char const*)
spv::Builder::addLine(unsigned int, int, int)
spv::Builder::addMemberDecoration(unsigned int, unsigned int, spv::Decoration, char const*)
spv::Builder::addMemberDecoration(unsigned int, unsigned int, spv::Decoration, int)
spv::Builder::addMemberName(unsigned int, int, char const*)
spv::Builder::addName(unsigned int, char const*)
spv::Builder::addSwitchBreak()
spv::Builder::clearAccessChain()
spv::Builder::closeLoop()
spv::Builder::collapseAccessChain()
spv::Builder::containsType(unsigned int, spv::Op, unsigned int) const
spv::Builder::createAccessChain(spv::StorageClass, unsigned int, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > const&)
spv::Builder::createAndSetNoPredecessorBlock(char const*)
spv::Builder::createArrayLength(unsigned int, unsigned int)
spv::Builder::createBinOp(spv::Op, unsigned int, unsigned int, unsigned int)
spv::Builder::createBranch(spv::Block*)
spv::Builder::createBuiltinCall(unsigned int, unsigned int, int, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > const&)
spv::Builder::createCompositeCompare(spv::Decoration, unsigned int, unsigned int, bool)
spv::Builder::createCompositeConstruct(unsigned int, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > const&)
spv::Builder::createCompositeExtract(unsigned int, unsigned int, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > const&)
spv::Builder::createCompositeExtract(unsigned int, unsigned int, unsigned int)
spv::Builder::createCompositeInsert(unsigned int, unsigned int, unsigned int, unsigned int)
spv::Builder::createConditionalBranch(unsigned int, spv::Block*, spv::Block*)
spv::Builder::createConstructor(spv::Decoration, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > const&, unsigned int)
spv::Builder::createControlBarrier(spv::Scope, spv::Scope, spv::MemorySemanticsMask)
spv::Builder::createFunctionCall(spv::Function*, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > const&)
spv::Builder::createLoad(unsigned int, spv::MemoryAccessMask, spv::Scope)
spv::Builder::createLoopContinue()
spv::Builder::createLoopExit()
spv::Builder::createLoopMerge(spv::Block*, spv::Block*, unsigned int, unsigned int)
spv::Builder::createLvalueSwizzle(unsigned int, unsigned int, unsigned int, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > const&)
spv::Builder::createMatrixConstructor(spv::Decoration, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > const&, unsigned int)
spv::Builder::createMemoryBarrier(unsigned int, unsigned int)
spv::Builder::createNoResultOp(spv::Op)
spv::Builder::createNoResultOp(spv::Op, std::__1::vector<spv::IdImmediate, std::__1::allocator<spv::IdImmediate> > const&)
spv::Builder::createNoResultOp(spv::Op, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > const&)
spv::Builder::createNoResultOp(spv::Op, unsigned int)
spv::Builder::createOp(spv::Op, unsigned int, std::__1::vector<spv::IdImmediate, std::__1::allocator<spv::IdImmediate> > const&)
spv::Builder::createOp(spv::Op, unsigned int, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > const&)
spv::Builder::createRvalueSwizzle(spv::Decoration, unsigned int, unsigned int, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > const&)
spv::Builder::createSelectionMerge(spv::Block*, unsigned int)
spv::Builder::createSpecConstantOp(spv::Op, unsigned int, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > const&, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > const&)
spv::Builder::createStore(unsigned int, unsigned int, spv::MemoryAccessMask, spv::Scope)
spv::Builder::createTextureCall(spv::Decoration, unsigned int, bool, bool, bool, bool, bool, spv::Builder::TextureParameters const&)
spv::Builder::createTextureQueryCall(spv::Op, spv::Builder::TextureParameters const&, bool)
spv::Builder::createTriOp(spv::Op, unsigned int, unsigned int, unsigned int, unsigned int)
spv::Builder::createUnaryOp(spv::Op, unsigned int, unsigned int)
spv::Builder::createUndefined(unsigned int)
spv::Builder::createVariable(spv::StorageClass, unsigned int, char const*)
spv::Builder::createVectorExtractDynamic(unsigned int, unsigned int, unsigned int)
spv::Builder::dump(std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >&) const
spv::Builder::dumpModuleProcesses(std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >&) const
spv::Builder::dumpSourceInstructions(std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >&) const
spv::Builder::endSwitch(std::__1::vector<spv::Block*, std::__1::allocator<spv::Block*> >&)
spv::Builder::findCompositeConstant(spv::Op, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > const&)
spv::Builder::findScalarConstant(spv::Op, spv::Op, unsigned int, unsigned int)
spv::Builder::findScalarConstant(spv::Op, spv::Op, unsigned int, unsigned int, unsigned int)
spv::Builder::findStructConstant(unsigned int, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > const&)
spv::Builder::getContainedTypeId(unsigned int) const
spv::Builder::getContainedTypeId(unsigned int, int) const
spv::Builder::getDerefTypeId(unsigned int) const
spv::Builder::getMostBasicTypeClass(unsigned int) const
spv::Builder::getNumTypeConstituents(unsigned int) const
spv::Builder::getScalarTypeId(unsigned int) const
spv::Builder::import(char const*)
spv::Builder::leaveFunction()
spv::Builder::makeArrayType(unsigned int, unsigned int, int)
spv::Builder::makeBoolConstant(bool, bool)
spv::Builder::makeBoolType()
spv::Builder::makeCompositeConstant(unsigned int, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > const&, bool)
spv::Builder::makeDiscard()
spv::Builder::makeDoubleConstant(double, bool)
spv::Builder::makeEntryPoint(char const*)
spv::Builder::makeFloat16Constant(float, bool)
spv::Builder::makeFloatConstant(float, bool)
spv::Builder::makeFloatType(int)
spv::Builder::makeFpConstant(unsigned int, double, bool)
spv::Builder::makeFunctionEntry(spv::Decoration, unsigned int, char const*, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > const&, std::__1::vector<std::__1::vector<spv::Decoration, std::__1::allocator<spv::Decoration> >, std::__1::allocator<std::__1::vector<spv::Decoration, std::__1::allocator<spv::Decoration> > > > const&, spv::Block**)
spv::Builder::makeFunctionType(unsigned int, std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > const&)
spv::Builder::makeImageType(unsigned int, spv::Dim, bool, bool, bool, unsigned int, spv::ImageFormat)
spv::Builder::makeInt64Constant(unsigned int, unsigned long long, bool)
spv::Builder::makeIntConstant(unsigned int, unsigned int, bool)
spv::Builder::makeIntegerType(int, bool)
spv::Builder::makeMatrixType(unsigned int, int, int)
spv::Builder::makeNewBlock()
spv::Builder::makeNewLoop()
spv::Builder::makePointer(spv::StorageClass, unsigned int)
spv::Builder::makeReturn(bool, unsigned int)
spv::Builder::makeRuntimeArray(unsigned int)
spv::Builder::makeSampledImageType(unsigned int)
spv::Builder::makeSamplerType()
spv::Builder::makeStructResultType(unsigned int, unsigned int)
spv::Builder::makeStructType(std::__1::vector<unsigned int, std::__1::allocator<unsigned int> > const&, char const*)
spv::Builder::makeSwitch(unsigned int, unsigned int, int, std::__1::vector<int, std::__1::allocator<int> > const&, std::__1::vector<int, std::__1::allocator<int> > const&, int, std::__1::vector<spv::Block*, std::__1::allocator<spv::Block*> >&)
spv::Builder::makeVectorType(unsigned int, int)
spv::Builder::makeVoidType()
spv::Builder::nextSwitchSegment(std::__1::vector<spv::Block*, std::__1::allocator<spv::Block*> >&, int)
spv::Builder::postProcess()
spv::Builder::postProcess(spv::Instruction const&)
spv::Builder::postProcessType(spv::Instruction const&, unsigned int)
spv::Builder::promoteScalar(spv::Decoration, unsigned int&, unsigned int&)
spv::Builder::remapDynamicSwizzle()
spv::Builder::setLine(int)
spv::Builder::setSourceFile(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
spv::Builder::smearScalar(spv::Decoration, unsigned int, unsigned int)
spv::Builder::transferAccessChainSwizzle(bool)
spv::Builder::~Builder()
spv::DecorationOperands
spv::DecorationParams
spv::ExecutionModeOperands
spv::ExecutionModeParams
spv::Function::Function(unsigned int, unsigned int, unsigned int, unsigned int, spv::Module&)
spv::Function::dump(std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >&) const
spv::Function::~Function()
spv::FunctionControlParams
spv::ImageOperandsParams
spv::Instruction::addIdOperand(unsigned int)
spv::Instruction::addImmediateOperand(unsigned int)
spv::Instruction::dump(std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >&) const
spv::Instruction::~Instruction()
spv::InstructionDesc
spv::LoopControlParams
spv::MagicNumber
spv::MemoryAccessParams
spv::Module::~Module()
spv::OperandClassParams
spv::SelectionControlParams
spv::SpvBuildLogger::missingFunctionality(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
spv::SpvBuildLogger::~SpvBuildLogger()
spv::inReadableOrder(spv::Block*, std::__1::function<void (spv::Block*)>)
spvutils::HexFloat<spvutils::FloatProxy<float>, spvutils::HexFloatTraits<spvutils::FloatProxy<float> > >::getRoundedNormalizedSignificand<spvutils::HexFloat<spvutils::FloatProxy<spvutils::Float16>, spvutils::HexFloatTraits<spvutils::FloatProxy<spvutils::Float16> > > >(spvutils::round_direction, bool*)::first_rounded_bit
spvutils::HexFloat<spvutils::FloatProxy<float>, spvutils::HexFloatTraits<spvutils::FloatProxy<float> > >::getRoundedNormalizedSignificand<spvutils::HexFloat<spvutils::FloatProxy<spvutils::Float16>, spvutils::HexFloatTraits<spvutils::FloatProxy<spvutils::Float16> > > >(spvutils::round_direction, bool*)::last_significant_bit
spvutils::HexFloat<spvutils::FloatProxy<spvutils::Float16>, spvutils::HexFloatTraits<spvutils::FloatProxy<spvutils::Float16> > >::uint_type spvutils::HexFloat<spvutils::FloatProxy<float>, spvutils::HexFloatTraits<spvutils::FloatProxy<float> > >::getRoundedNormalizedSignificand<spvutils::HexFloat<spvutils::FloatProxy<spvutils::Float16>, spvutils::HexFloatTraits<spvutils::FloatProxy<spvutils::Float16> > > >(spvutils::round_direction, bool*)
sqrt
sqrtf
sscanf
st2
stage:
stages must match when linking into a single stage
statement before the first label
statement_scoped
static
std140
std430
std::__1::(anonymous namespace)::indices
std::__1::(anonymous namespace)::make<std::__1::codecvt<char, char, __mbstate_t>, unsigned int>(unsigned int)::buf
std::__1::(anonymous namespace)::make<std::__1::codecvt<char16_t, char, __mbstate_t>, unsigned int>(unsigned int)::buf
std::__1::(anonymous namespace)::make<std::__1::codecvt<char32_t, char, __mbstate_t>, unsigned int>(unsigned int)::buf
std::__1::(anonymous namespace)::make<std::__1::codecvt<wchar_t, char, __mbstate_t>, unsigned int>(unsigned int)::buf
std::__1::(anonymous namespace)::make<std::__1::collate<char>, unsigned int>(unsigned int)::buf
std::__1::(anonymous namespace)::make<std::__1::collate<wchar_t>, unsigned int>(unsigned int)::buf
std::__1::(anonymous namespace)::make<std::__1::ctype<char>, decltype(nullptr), bool, unsigned int>(decltype(nullptr), bool, unsigned int)::buf
std::__1::(anonymous namespace)::make<std::__1::ctype<wchar_t>, unsigned int>(unsigned int)::buf
std::__1::(anonymous namespace)::make<std::__1::locale::__imp, unsigned int>(unsigned int)::buf
std::__1::(anonymous namespace)::make<std::__1::messages<char>, unsigned int>(unsigned int)::buf
std::__1::(anonymous namespace)::make<std::__1::messages<wchar_t>, unsigned int>(unsigned int)::buf
std::__1::(anonymous namespace)::make<std::__1::money_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >, unsigned int>(unsigned int)::buf
std::__1::(anonymous namespace)::make<std::__1::money_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >, unsigned int>(unsigned int)::buf
std::__1::(anonymous namespace)::make<std::__1::money_put<char, std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > >, unsigned int>(unsigned int)::buf
std::__1::(anonymous namespace)::make<std::__1::money_put<wchar_t, std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >, unsigned int>(unsigned int)::buf
std::__1::(anonymous namespace)::make<std::__1::moneypunct<char, false>, unsigned int>(unsigned int)::buf
std::__1::(anonymous namespace)::make<std::__1::moneypunct<char, true>, unsigned int>(unsigned int)::buf
std::__1::(anonymous namespace)::make<std::__1::moneypunct<wchar_t, false>, unsigned int>(unsigned int)::buf
std::__1::(anonymous namespace)::make<std::__1::moneypunct<wchar_t, true>, unsigned int>(unsigned int)::buf
std::__1::(anonymous namespace)::make<std::__1::num_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >, unsigned int>(unsigned int)::buf
std::__1::(anonymous namespace)::make<std::__1::num_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >, unsigned int>(unsigned int)::buf
std::__1::(anonymous namespace)::make<std::__1::num_put<char, std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > >, unsigned int>(unsigned int)::buf
std::__1::(anonymous namespace)::make<std::__1::num_put<wchar_t, std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >, unsigned int>(unsigned int)::buf
std::__1::(anonymous namespace)::make<std::__1::numpunct<char>, unsigned int>(unsigned int)::buf
std::__1::(anonymous namespace)::make<std::__1::numpunct<wchar_t>, unsigned int>(unsigned int)::buf
std::__1::(anonymous namespace)::make<std::__1::time_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >, unsigned int>(unsigned int)::buf
std::__1::(anonymous namespace)::make<std::__1::time_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >, unsigned int>(unsigned int)::buf
std::__1::(anonymous namespace)::make<std::__1::time_put<char, std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > >, unsigned int>(unsigned int)::buf
std::__1::(anonymous namespace)::make<std::__1::time_put<wchar_t, std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >, unsigned int>(unsigned int)::buf
std::__1::(anonymous namespace)::small_primes
std::__1::__basic_string_common<true>::__throw_length_error() const
std::__1::__basic_string_common<true>::__throw_out_of_range() const
std::__1::__bit_iterator<std::__1::vector<bool, std::__1::allocator<bool> >, false, 0> std::__1::__copy_unaligned<std::__1::vector<bool, std::__1::allocator<bool> >, false>(std::__1::__bit_iterator<std::__1::vector<bool, std::__1::allocator<bool> >, false, 0>, std::__1::__bit_iterator<std::__1::vector<bool, std::__1::allocator<bool> >, false, 0>, std::__1::__bit_iterator<std::__1::vector<bool, std::__1::allocator<bool> >, false, 0>)
std::__1::__call_once(unsigned long volatile&, void*, void (*)(void*))
std::__1::__cerr
std::__1::__check_grouping(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int*, unsigned int*, unsigned int&)
std::__1::__cin
std::__1::__cloc()::result
std::__1::__cout
std::__1::__deque_base<gl::Debug::Message, std::__1::allocator<gl::Debug::Message> >::clear()
std::__1::__do_message::message(int) const
std::__1::__do_nothing(void*)
std::__1::__function::__base<bool (glslang::TType const&, glslang::TType const&, glslang::TOperator, int)>::~__base()
std::__1::__function::__base<bool (glslang::TType const&, glslang::TType const&, glslang::TType const&)>::~__base()
std::__1::__function::__base<bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockMemberInfo*)>::~__base()
std::__1::__function::__base<bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long*)>::~__base()
std::__1::__function::__base<void ()>::~__base()
std::__1::__function::__base<void (spv::Block*)>::~__base()
std::__1::__function::__func<gl::Shader::resolveCompile()::$_0, std::__1::allocator<gl::Shader::resolveCompile()::$_0>, void ()>::__clone() const
std::__1::__function::__func<gl::Shader::resolveCompile()::$_0, std::__1::allocator<gl::Shader::resolveCompile()::$_0>, void ()>::__clone(std::__1::__function::__base<void ()>*) const
std::__1::__function::__func<gl::Shader::resolveCompile()::$_0, std::__1::allocator<gl::Shader::resolveCompile()::$_0>, void ()>::destroy()
std::__1::__function::__func<gl::Shader::resolveCompile()::$_0, std::__1::allocator<gl::Shader::resolveCompile()::$_0>, void ()>::destroy_deallocate()
std::__1::__function::__func<gl::Shader::resolveCompile()::$_0, std::__1::allocator<gl::Shader::resolveCompile()::$_0>, void ()>::operator()()
std::__1::__function::__func<gl::Shader::resolveCompile()::$_0, std::__1::allocator<gl::Shader::resolveCompile()::$_0>, void ()>::~__func()
std::__1::__function::__func<glslang::TParseContext::findFunction400(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_0, std::__1::allocator<glslang::TParseContext::findFunction400(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_0>, bool (glslang::TType const&, glslang::TType const&, glslang::TOperator, int)>::__clone() const
std::__1::__function::__func<glslang::TParseContext::findFunction400(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_0, std::__1::allocator<glslang::TParseContext::findFunction400(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_0>, bool (glslang::TType const&, glslang::TType const&, glslang::TOperator, int)>::__clone(std::__1::__function::__base<bool (glslang::TType const&, glslang::TType const&, glslang::TOperator, int)>*) const
std::__1::__function::__func<glslang::TParseContext::findFunction400(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_0, std::__1::allocator<glslang::TParseContext::findFunction400(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_0>, bool (glslang::TType const&, glslang::TType const&, glslang::TOperator, int)>::destroy()
std::__1::__function::__func<glslang::TParseContext::findFunction400(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_0, std::__1::allocator<glslang::TParseContext::findFunction400(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_0>, bool (glslang::TType const&, glslang::TType const&, glslang::TOperator, int)>::destroy_deallocate()
std::__1::__function::__func<glslang::TParseContext::findFunction400(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_0, std::__1::allocator<glslang::TParseContext::findFunction400(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_0>, bool (glslang::TType const&, glslang::TType const&, glslang::TOperator, int)>::operator()(glslang::TType const&, glslang::TType const&, glslang::TOperator&&, int&&)
std::__1::__function::__func<glslang::TParseContext::findFunction400(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_0, std::__1::allocator<glslang::TParseContext::findFunction400(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_0>, bool (glslang::TType const&, glslang::TType const&, glslang::TOperator, int)>::~__func()
std::__1::__function::__func<glslang::TParseContext::findFunction400(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_1, std::__1::allocator<glslang::TParseContext::findFunction400(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_1>, bool (glslang::TType const&, glslang::TType const&, glslang::TType const&)>::__clone() const
std::__1::__function::__func<glslang::TParseContext::findFunction400(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_1, std::__1::allocator<glslang::TParseContext::findFunction400(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_1>, bool (glslang::TType const&, glslang::TType const&, glslang::TType const&)>::__clone(std::__1::__function::__base<bool (glslang::TType const&, glslang::TType const&, glslang::TType const&)>*) const
std::__1::__function::__func<glslang::TParseContext::findFunction400(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_1, std::__1::allocator<glslang::TParseContext::findFunction400(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_1>, bool (glslang::TType const&, glslang::TType const&, glslang::TType const&)>::destroy()
std::__1::__function::__func<glslang::TParseContext::findFunction400(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_1, std::__1::allocator<glslang::TParseContext::findFunction400(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_1>, bool (glslang::TType const&, glslang::TType const&, glslang::TType const&)>::destroy_deallocate()
std::__1::__function::__func<glslang::TParseContext::findFunction400(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_1, std::__1::allocator<glslang::TParseContext::findFunction400(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_1>, bool (glslang::TType const&, glslang::TType const&, glslang::TType const&)>::operator()(glslang::TType const&, glslang::TType const&, glslang::TType const&)
std::__1::__function::__func<glslang::TParseContext::findFunction400(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_1, std::__1::allocator<glslang::TParseContext::findFunction400(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_1>, bool (glslang::TType const&, glslang::TType const&, glslang::TType const&)>::~__func()
std::__1::__function::__func<glslang::TParseContext::findFunctionExplicitTypes(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_2, std::__1::allocator<glslang::TParseContext::findFunctionExplicitTypes(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_2>, bool (glslang::TType const&, glslang::TType const&, glslang::TOperator, int)>::__clone() const
std::__1::__function::__func<glslang::TParseContext::findFunctionExplicitTypes(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_2, std::__1::allocator<glslang::TParseContext::findFunctionExplicitTypes(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_2>, bool (glslang::TType const&, glslang::TType const&, glslang::TOperator, int)>::__clone(std::__1::__function::__base<bool (glslang::TType const&, glslang::TType const&, glslang::TOperator, int)>*) const
std::__1::__function::__func<glslang::TParseContext::findFunctionExplicitTypes(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_2, std::__1::allocator<glslang::TParseContext::findFunctionExplicitTypes(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_2>, bool (glslang::TType const&, glslang::TType const&, glslang::TOperator, int)>::destroy()
std::__1::__function::__func<glslang::TParseContext::findFunctionExplicitTypes(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_2, std::__1::allocator<glslang::TParseContext::findFunctionExplicitTypes(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_2>, bool (glslang::TType const&, glslang::TType const&, glslang::TOperator, int)>::destroy_deallocate()
std::__1::__function::__func<glslang::TParseContext::findFunctionExplicitTypes(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_2, std::__1::allocator<glslang::TParseContext::findFunctionExplicitTypes(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_2>, bool (glslang::TType const&, glslang::TType const&, glslang::TOperator, int)>::operator()(glslang::TType const&, glslang::TType const&, glslang::TOperator&&, int&&)
std::__1::__function::__func<glslang::TParseContext::findFunctionExplicitTypes(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_2, std::__1::allocator<glslang::TParseContext::findFunctionExplicitTypes(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_2>, bool (glslang::TType const&, glslang::TType const&, glslang::TOperator, int)>::~__func()
std::__1::__function::__func<glslang::TParseContext::findFunctionExplicitTypes(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_3, std::__1::allocator<glslang::TParseContext::findFunctionExplicitTypes(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_3>, bool (glslang::TType const&, glslang::TType const&, glslang::TType const&)>::__clone() const
std::__1::__function::__func<glslang::TParseContext::findFunctionExplicitTypes(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_3, std::__1::allocator<glslang::TParseContext::findFunctionExplicitTypes(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_3>, bool (glslang::TType const&, glslang::TType const&, glslang::TType const&)>::__clone(std::__1::__function::__base<bool (glslang::TType const&, glslang::TType const&, glslang::TType const&)>*) const
std::__1::__function::__func<glslang::TParseContext::findFunctionExplicitTypes(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_3, std::__1::allocator<glslang::TParseContext::findFunctionExplicitTypes(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_3>, bool (glslang::TType const&, glslang::TType const&, glslang::TType const&)>::destroy()
std::__1::__function::__func<glslang::TParseContext::findFunctionExplicitTypes(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_3, std::__1::allocator<glslang::TParseContext::findFunctionExplicitTypes(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_3>, bool (glslang::TType const&, glslang::TType const&, glslang::TType const&)>::destroy_deallocate()
std::__1::__function::__func<glslang::TParseContext::findFunctionExplicitTypes(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_3, std::__1::allocator<glslang::TParseContext::findFunctionExplicitTypes(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_3>, bool (glslang::TType const&, glslang::TType const&, glslang::TType const&)>::operator()(glslang::TType const&, glslang::TType const&, glslang::TType const&)
std::__1::__function::__func<glslang::TParseContext::findFunctionExplicitTypes(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_3, std::__1::allocator<glslang::TParseContext::findFunctionExplicitTypes(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_3>, bool (glslang::TType const&, glslang::TType const&, glslang::TType const&)>::~__func()
std::__1::__function::__func<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_0, std::__1::allocator<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_0>, bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long*)>::__clone() const
std::__1::__function::__func<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_0, std::__1::allocator<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_0>, bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long*)>::__clone(std::__1::__function::__base<bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long*)>*) const
std::__1::__function::__func<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_0, std::__1::allocator<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_0>, bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long*)>::destroy()
std::__1::__function::__func<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_0, std::__1::allocator<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_0>, bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long*)>::destroy_deallocate()
std::__1::__function::__func<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_0, std::__1::allocator<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_0>, bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long*)>::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long*&&)
std::__1::__function::__func<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_0, std::__1::allocator<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_0>, bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long*)>::~__func()
std::__1::__function::__func<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_1, std::__1::allocator<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_1>, bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockMemberInfo*)>::__clone() const
std::__1::__function::__func<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_1, std::__1::allocator<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_1>, bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockMemberInfo*)>::__clone(std::__1::__function::__base<bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockMemberInfo*)>*) const
std::__1::__function::__func<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_1, std::__1::allocator<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_1>, bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockMemberInfo*)>::destroy()
std::__1::__function::__func<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_1, std::__1::allocator<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_1>, bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockMemberInfo*)>::destroy_deallocate()
std::__1::__function::__func<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_1, std::__1::allocator<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_1>, bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockMemberInfo*)>::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockMemberInfo*&&)
std::__1::__function::__func<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_1, std::__1::allocator<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_1>, bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockMemberInfo*)>::~__func()
std::__1::__function::__func<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_2, std::__1::allocator<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_2>, bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long*)>::__clone() const
std::__1::__function::__func<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_2, std::__1::allocator<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_2>, bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long*)>::__clone(std::__1::__function::__base<bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long*)>*) const
std::__1::__function::__func<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_2, std::__1::allocator<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_2>, bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long*)>::destroy()
std::__1::__function::__func<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_2, std::__1::allocator<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_2>, bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long*)>::destroy_deallocate()
std::__1::__function::__func<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_2, std::__1::allocator<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_2>, bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long*)>::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long*&&)
std::__1::__function::__func<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_2, std::__1::allocator<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_2>, bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long*)>::~__func()
std::__1::__function::__func<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_3, std::__1::allocator<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_3>, bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockMemberInfo*)>::__clone() const
std::__1::__function::__func<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_3, std::__1::allocator<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_3>, bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockMemberInfo*)>::__clone(std::__1::__function::__base<bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockMemberInfo*)>*) const
std::__1::__function::__func<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_3, std::__1::allocator<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_3>, bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockMemberInfo*)>::destroy()
std::__1::__function::__func<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_3, std::__1::allocator<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_3>, bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockMemberInfo*)>::destroy_deallocate()
std::__1::__function::__func<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_3, std::__1::allocator<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_3>, bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockMemberInfo*)>::operator()(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockMemberInfo*&&)
std::__1::__function::__func<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_3, std::__1::allocator<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_3>, bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockMemberInfo*)>::~__func()
std::__1::__function::__func<spv::Builder::postProcess()::$_0, std::__1::allocator<spv::Builder::postProcess()::$_0>, void (spv::Block*)>::__clone() const
std::__1::__function::__func<spv::Builder::postProcess()::$_0, std::__1::allocator<spv::Builder::postProcess()::$_0>, void (spv::Block*)>::__clone(std::__1::__function::__base<void (spv::Block*)>*) const
std::__1::__function::__func<spv::Builder::postProcess()::$_0, std::__1::allocator<spv::Builder::postProcess()::$_0>, void (spv::Block*)>::destroy()
std::__1::__function::__func<spv::Builder::postProcess()::$_0, std::__1::allocator<spv::Builder::postProcess()::$_0>, void (spv::Block*)>::destroy_deallocate()
std::__1::__function::__func<spv::Builder::postProcess()::$_0, std::__1::allocator<spv::Builder::postProcess()::$_0>, void (spv::Block*)>::operator()(spv::Block*&&)
std::__1::__function::__func<spv::Builder::postProcess()::$_0, std::__1::allocator<spv::Builder::postProcess()::$_0>, void (spv::Block*)>::~__func()
std::__1::__function::__func<spv::Function::dump(std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >&) const::{lambda(spv::Block const*)#1}, std::__1::allocator<{lambda(spv::Block const*)#1}>, void (spv::Block*)>::__clone() const
std::__1::__function::__func<spv::Function::dump(std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >&) const::{lambda(spv::Block const*)#1}, std::__1::allocator<{lambda(spv::Block const*)#1}>, void (spv::Block*)>::__clone(std::__1::__function::__base<spv::Block*>*) const
std::__1::__function::__func<spv::Function::dump(std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >&) const::{lambda(spv::Block const*)#1}, std::__1::allocator<{lambda(spv::Block const*)#1}>, void (spv::Block*)>::destroy()
std::__1::__function::__func<spv::Function::dump(std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >&) const::{lambda(spv::Block const*)#1}, std::__1::allocator<{lambda(spv::Block const*)#1}>, void (spv::Block*)>::destroy_deallocate()
std::__1::__function::__func<spv::Function::dump(std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >&) const::{lambda(spv::Block const*)#1}, std::__1::allocator<{lambda(spv::Block const*)#1}>, void (spv::Block*)>::operator()(std::__1::allocator<{lambda(spv::Block const*)#1}>&&)
std::__1::__function::__func<spv::Function::dump(std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >&) const::{lambda(spv::Block const*)#1}, std::__1::allocator<{lambda(spv::Block const*)#1}>, void (spv::Block*)>::~__func()
std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<sh::ImmutableString, sh::TSymbol*>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<sh::ImmutableString, sh::TSymbol*>, std::__1::__unordered_map_hasher<sh::ImmutableString, std::__1::__hash_value_type<sh::ImmutableString, sh::TSymbol*>, sh::ImmutableString::FowlerNollVoHash<8ul>, true>, std::__1::__unordered_map_equal<sh::ImmutableString, std::__1::__hash_value_type<sh::ImmutableString, sh::TSymbol*>, std::__1::equal_to<sh::ImmutableString>, true>, pool_allocator<std::__1::__hash_value_type<sh::ImmutableString, sh::TSymbol*> > >::find<sh::ImmutableString>(sh::ImmutableString const&) const
std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, int>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, int>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, int>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, int>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, true>, glslang::pool_allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, int> > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&) const
std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int> > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*> std::__1::__hash_table<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::array<unsigned char, 20ul>, std::__1::__list_iterator<std::__1::pair<std::__1::array<unsigned char, 20ul>, angle::SizedMRUCache<std::__1::array<unsigned char, 20ul>, std::__1::pair<angle::MemoryBuffer, egl::BlobCache::CacheSource> >::ValueAndSize>, void*> >, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<std::__1::array<unsigned char, 20ul>, std::__1::__list_iterator<std::__1::pair<std::__1::array<unsigned char, 20ul>, angle::SizedMRUCache<std::__1::array<unsigned char, 20ul>, std::__1::pair<angle::MemoryBuffer, egl::BlobCache::CacheSource> >::ValueAndSize>, void*> >, std::__1::__unordered_map_hasher<std::__1::array<unsigned char, 20ul>, std::__1::__hash_value_type<std::__1::array<unsigned char, 20ul>, std::__1::__list_iterator<std::__1::pair<std::__1::array<unsigned char, 20ul>, angle::SizedMRUCache<std::__1::array<unsigned char, 20ul>, std::__1::pair<angle::MemoryBuffer, egl::BlobCache::CacheSource> >::ValueAndSize>, void*> >, std::__1::hash<std::__1::array<unsigned char, 20ul> >, true>, std::__1::__unordered_map_equal<std::__1::array<unsigned char, 20ul>, std::__1::__hash_value_type<std::__1::array<unsigned char, 20ul>, std::__1::__list_iterator<std::__1::pair<std::__1::array<unsigned char, 20ul>, angle::SizedMRUCache<std::__1::array<unsigned char, 20ul>, std::__1::pair<angle::MemoryBuffer, egl::BlobCache::CacheSource> >::ValueAndSize>, void*> >, std::__1::equal_to<std::__1::array<unsigned char, 20ul> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::array<unsigned char, 20ul>, std::__1::__list_iterator<std::__1::pair<std::__1::array<unsigned char, 20ul>, angle::SizedMRUCache<std::__1::array<unsigned char, 20ul>, std::__1::pair<angle::MemoryBuffer, egl::BlobCache::CacheSource> >::ValueAndSize>, void*> > > >::find<std::__1::array<unsigned char, 20ul> >(std::__1::array<unsigned char, 20ul> const&)
std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermOperator*>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermOperator*>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermOperator*>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermOperator*>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermOperator*> > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermSymbol const*>, void*>*> std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermSymbol const*>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermSymbol const*>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermSymbol const*>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermSymbol const*> > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__hash_iterator<std::__1::__hash_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*> std::__1::__hash_table<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__hash_table<char const*, (anonymous namespace)::str_hash, (anonymous namespace)::str_eq, std::__1::allocator<char const*> >::__rehash(unsigned long)
std::__1::__hash_table<glslang::TIntermBranch*, std::__1::hash<glslang::TIntermBranch*>, std::__1::equal_to<glslang::TIntermBranch*>, std::__1::allocator<glslang::TIntermBranch*> >::__rehash(unsigned long)
std::__1::__hash_table<glslang::TIntermBranch*, std::__1::hash<glslang::TIntermBranch*>, std::__1::equal_to<glslang::TIntermBranch*>, std::__1::allocator<glslang::TIntermBranch*> >::rehash(unsigned long)
std::__1::__hash_table<int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<int> >::__rehash(unsigned long)
std::__1::__hash_table<int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<int> >::rehash(unsigned long)
std::__1::__hash_table<spv::Block const*, std::__1::hash<spv::Block const*>, std::__1::equal_to<spv::Block const*>, std::__1::allocator<spv::Block const*> >::__rehash(unsigned long)
std::__1::__hash_table<spv::Block const*, std::__1::hash<spv::Block const*>, std::__1::equal_to<spv::Block const*>, std::__1::allocator<spv::Block const*> >::rehash(unsigned long)
std::__1::__hash_table<spv::Block*, std::__1::hash<spv::Block*>, std::__1::equal_to<spv::Block*>, std::__1::allocator<spv::Block*> >::__rehash(unsigned long)
std::__1::__hash_table<spv::Block*, std::__1::hash<spv::Block*>, std::__1::equal_to<spv::Block*>, std::__1::allocator<spv::Block*> >::rehash(unsigned long)
std::__1::__hash_table<spv::Block*, std::__1::hash<spv::Block*>, std::__1::equal_to<spv::Block*>, std::__1::allocator<spv::Block*> >::remove(std::__1::__hash_const_iterator<std::__1::__hash_node<spv::Block*, void*>*>)
std::__1::__hash_table<std::__1::__hash_value_type<char const*, int>, std::__1::__unordered_map_hasher<char const*, std::__1::__hash_value_type<char const*, int>, (anonymous namespace)::str_hash, true>, std::__1::__unordered_map_equal<char const*, std::__1::__hash_value_type<char const*, int>, (anonymous namespace)::str_eq, true>, std::__1::allocator<std::__1::__hash_value_type<char const*, int> > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<glslang::TIntermTyped*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__unordered_map_hasher<glslang::TIntermTyped*, std::__1::__hash_value_type<glslang::TIntermTyped*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::hash<glslang::TIntermTyped*>, true>, std::__1::__unordered_map_equal<glslang::TIntermTyped*, std::__1::__hash_value_type<glslang::TIntermTyped*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<glslang::TIntermTyped*>, true>, std::__1::allocator<std::__1::__hash_value_type<glslang::TIntermTyped*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<glslang::TIntermTyped*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__unordered_map_hasher<glslang::TIntermTyped*, std::__1::__hash_value_type<glslang::TIntermTyped*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::hash<glslang::TIntermTyped*>, true>, std::__1::__unordered_map_equal<glslang::TIntermTyped*, std::__1::__hash_value_type<glslang::TIntermTyped*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<glslang::TIntermTyped*>, true>, std::__1::allocator<std::__1::__hash_value_type<glslang::TIntermTyped*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<glslang::TVector<glslang::TTypeLoc> const*, std::__1::vector<int, std::__1::allocator<int> > >, std::__1::__unordered_map_hasher<glslang::TVector<glslang::TTypeLoc> const*, std::__1::__hash_value_type<glslang::TVector<glslang::TTypeLoc> const*, std::__1::vector<int, std::__1::allocator<int> > >, std::__1::hash<glslang::TVector<glslang::TTypeLoc> const*>, true>, std::__1::__unordered_map_equal<glslang::TVector<glslang::TTypeLoc> const*, std::__1::__hash_value_type<glslang::TVector<glslang::TTypeLoc> const*, std::__1::vector<int, std::__1::allocator<int> > >, std::__1::equal_to<glslang::TVector<glslang::TTypeLoc> const*>, true>, std::__1::allocator<std::__1::__hash_value_type<glslang::TVector<glslang::TTypeLoc> const*, std::__1::vector<int, std::__1::allocator<int> > > > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<glslang::TVector<glslang::TTypeLoc> const*, std::__1::vector<int, std::__1::allocator<int> > >, std::__1::__unordered_map_hasher<glslang::TVector<glslang::TTypeLoc> const*, std::__1::__hash_value_type<glslang::TVector<glslang::TTypeLoc> const*, std::__1::vector<int, std::__1::allocator<int> > >, std::__1::hash<glslang::TVector<glslang::TTypeLoc> const*>, true>, std::__1::__unordered_map_equal<glslang::TVector<glslang::TTypeLoc> const*, std::__1::__hash_value_type<glslang::TVector<glslang::TTypeLoc> const*, std::__1::vector<int, std::__1::allocator<int> > >, std::__1::equal_to<glslang::TVector<glslang::TTypeLoc> const*>, true>, std::__1::allocator<std::__1::__hash_value_type<glslang::TVector<glslang::TTypeLoc> const*, std::__1::vector<int, std::__1::allocator<int> > > > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<glslang::TVector<glslang::TTypeLoc> const*, unsigned int>, std::__1::__unordered_map_hasher<glslang::TVector<glslang::TTypeLoc> const*, std::__1::__hash_value_type<glslang::TVector<glslang::TTypeLoc> const*, unsigned int>, std::__1::hash<glslang::TVector<glslang::TTypeLoc> const*>, true>, std::__1::__unordered_map_equal<glslang::TVector<glslang::TTypeLoc> const*, std::__1::__hash_value_type<glslang::TVector<glslang::TTypeLoc> const*, unsigned int>, std::__1::equal_to<glslang::TVector<glslang::TTypeLoc> const*>, true>, std::__1::allocator<std::__1::__hash_value_type<glslang::TVector<glslang::TTypeLoc> const*, unsigned int> > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<glslang::TVector<glslang::TTypeLoc> const*, unsigned int>, std::__1::__unordered_map_hasher<glslang::TVector<glslang::TTypeLoc> const*, std::__1::__hash_value_type<glslang::TVector<glslang::TTypeLoc> const*, unsigned int>, std::__1::hash<glslang::TVector<glslang::TTypeLoc> const*>, true>, std::__1::__unordered_map_equal<glslang::TVector<glslang::TTypeLoc> const*, std::__1::__hash_value_type<glslang::TVector<glslang::TTypeLoc> const*, unsigned int>, std::__1::equal_to<glslang::TVector<glslang::TTypeLoc> const*>, true>, std::__1::allocator<std::__1::__hash_value_type<glslang::TVector<glslang::TTypeLoc> const*, unsigned int> > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<int, unsigned int>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, unsigned int>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, unsigned int>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, unsigned int> > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<int, unsigned int>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, unsigned int>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, unsigned int>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, unsigned int> > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<rx::vk::AttachmentOpsArray, rx::vk::ObjectAndSerial<rx::vk::RenderPass> >, std::__1::__unordered_map_hasher<rx::vk::AttachmentOpsArray, std::__1::__hash_value_type<rx::vk::AttachmentOpsArray, rx::vk::ObjectAndSerial<rx::vk::RenderPass> >, std::__1::hash<rx::vk::AttachmentOpsArray>, true>, std::__1::__unordered_map_equal<rx::vk::AttachmentOpsArray, std::__1::__hash_value_type<rx::vk::AttachmentOpsArray, rx::vk::ObjectAndSerial<rx::vk::RenderPass> >, std::__1::equal_to<rx::vk::AttachmentOpsArray>, true>, std::__1::allocator<std::__1::__hash_value_type<rx::vk::AttachmentOpsArray, rx::vk::ObjectAndSerial<rx::vk::RenderPass> > > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<rx::vk::AttachmentOpsArray, rx::vk::ObjectAndSerial<rx::vk::RenderPass> >, std::__1::__unordered_map_hasher<rx::vk::AttachmentOpsArray, std::__1::__hash_value_type<rx::vk::AttachmentOpsArray, rx::vk::ObjectAndSerial<rx::vk::RenderPass> >, std::__1::hash<rx::vk::AttachmentOpsArray>, true>, std::__1::__unordered_map_equal<rx::vk::AttachmentOpsArray, std::__1::__hash_value_type<rx::vk::AttachmentOpsArray, rx::vk::ObjectAndSerial<rx::vk::RenderPass> >, std::__1::equal_to<rx::vk::AttachmentOpsArray>, true>, std::__1::allocator<std::__1::__hash_value_type<rx::vk::AttachmentOpsArray, rx::vk::ObjectAndSerial<rx::vk::RenderPass> > > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<rx::vk::DescriptorSetLayoutDesc, rx::vk::RefCounted<rx::vk::DescriptorSetLayout> >, std::__1::__unordered_map_hasher<rx::vk::DescriptorSetLayoutDesc, std::__1::__hash_value_type<rx::vk::DescriptorSetLayoutDesc, rx::vk::RefCounted<rx::vk::DescriptorSetLayout> >, std::__1::hash<rx::vk::DescriptorSetLayoutDesc>, true>, std::__1::__unordered_map_equal<rx::vk::DescriptorSetLayoutDesc, std::__1::__hash_value_type<rx::vk::DescriptorSetLayoutDesc, rx::vk::RefCounted<rx::vk::DescriptorSetLayout> >, std::__1::equal_to<rx::vk::DescriptorSetLayoutDesc>, true>, std::__1::allocator<std::__1::__hash_value_type<rx::vk::DescriptorSetLayoutDesc, rx::vk::RefCounted<rx::vk::DescriptorSetLayout> > > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<rx::vk::DescriptorSetLayoutDesc, rx::vk::RefCounted<rx::vk::DescriptorSetLayout> >, std::__1::__unordered_map_hasher<rx::vk::DescriptorSetLayoutDesc, std::__1::__hash_value_type<rx::vk::DescriptorSetLayoutDesc, rx::vk::RefCounted<rx::vk::DescriptorSetLayout> >, std::__1::hash<rx::vk::DescriptorSetLayoutDesc>, true>, std::__1::__unordered_map_equal<rx::vk::DescriptorSetLayoutDesc, std::__1::__hash_value_type<rx::vk::DescriptorSetLayoutDesc, rx::vk::RefCounted<rx::vk::DescriptorSetLayout> >, std::__1::equal_to<rx::vk::DescriptorSetLayoutDesc>, true>, std::__1::allocator<std::__1::__hash_value_type<rx::vk::DescriptorSetLayoutDesc, rx::vk::RefCounted<rx::vk::DescriptorSetLayout> > > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<rx::vk::PipelineDesc, rx::vk::ObjectAndSerial<rx::vk::Pipeline> >, std::__1::__unordered_map_hasher<rx::vk::PipelineDesc, std::__1::__hash_value_type<rx::vk::PipelineDesc, rx::vk::ObjectAndSerial<rx::vk::Pipeline> >, std::__1::hash<rx::vk::PipelineDesc>, true>, std::__1::__unordered_map_equal<rx::vk::PipelineDesc, std::__1::__hash_value_type<rx::vk::PipelineDesc, rx::vk::ObjectAndSerial<rx::vk::Pipeline> >, std::__1::equal_to<rx::vk::PipelineDesc>, true>, std::__1::allocator<std::__1::__hash_value_type<rx::vk::PipelineDesc, rx::vk::ObjectAndSerial<rx::vk::Pipeline> > > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<rx::vk::PipelineDesc, rx::vk::ObjectAndSerial<rx::vk::Pipeline> >, std::__1::__unordered_map_hasher<rx::vk::PipelineDesc, std::__1::__hash_value_type<rx::vk::PipelineDesc, rx::vk::ObjectAndSerial<rx::vk::Pipeline> >, std::__1::hash<rx::vk::PipelineDesc>, true>, std::__1::__unordered_map_equal<rx::vk::PipelineDesc, std::__1::__hash_value_type<rx::vk::PipelineDesc, rx::vk::ObjectAndSerial<rx::vk::Pipeline> >, std::__1::equal_to<rx::vk::PipelineDesc>, true>, std::__1::allocator<std::__1::__hash_value_type<rx::vk::PipelineDesc, rx::vk::ObjectAndSerial<rx::vk::Pipeline> > > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<rx::vk::PipelineLayoutDesc, rx::vk::RefCounted<rx::vk::PipelineLayout> >, std::__1::__unordered_map_hasher<rx::vk::PipelineLayoutDesc, std::__1::__hash_value_type<rx::vk::PipelineLayoutDesc, rx::vk::RefCounted<rx::vk::PipelineLayout> >, std::__1::hash<rx::vk::PipelineLayoutDesc>, true>, std::__1::__unordered_map_equal<rx::vk::PipelineLayoutDesc, std::__1::__hash_value_type<rx::vk::PipelineLayoutDesc, rx::vk::RefCounted<rx::vk::PipelineLayout> >, std::__1::equal_to<rx::vk::PipelineLayoutDesc>, true>, std::__1::allocator<std::__1::__hash_value_type<rx::vk::PipelineLayoutDesc, rx::vk::RefCounted<rx::vk::PipelineLayout> > > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<rx::vk::PipelineLayoutDesc, rx::vk::RefCounted<rx::vk::PipelineLayout> >, std::__1::__unordered_map_hasher<rx::vk::PipelineLayoutDesc, std::__1::__hash_value_type<rx::vk::PipelineLayoutDesc, rx::vk::RefCounted<rx::vk::PipelineLayout> >, std::__1::hash<rx::vk::PipelineLayoutDesc>, true>, std::__1::__unordered_map_equal<rx::vk::PipelineLayoutDesc, std::__1::__hash_value_type<rx::vk::PipelineLayoutDesc, rx::vk::RefCounted<rx::vk::PipelineLayout> >, std::__1::equal_to<rx::vk::PipelineLayoutDesc>, true>, std::__1::allocator<std::__1::__hash_value_type<rx::vk::PipelineLayoutDesc, rx::vk::RefCounted<rx::vk::PipelineLayout> > > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<rx::vk::RenderPassDesc, std::__1::unordered_map<rx::vk::AttachmentOpsArray, rx::vk::ObjectAndSerial<rx::vk::RenderPass>, std::__1::hash<rx::vk::AttachmentOpsArray>, std::__1::equal_to<rx::vk::AttachmentOpsArray>, std::__1::allocator<std::__1::pair<rx::vk::AttachmentOpsArray const, rx::vk::ObjectAndSerial<rx::vk::RenderPass> > > > >, std::__1::__unordered_map_hasher<rx::vk::RenderPassDesc, std::__1::__hash_value_type<rx::vk::RenderPassDesc, std::__1::unordered_map<rx::vk::AttachmentOpsArray, rx::vk::ObjectAndSerial<rx::vk::RenderPass>, std::__1::hash<rx::vk::AttachmentOpsArray>, std::__1::equal_to<rx::vk::AttachmentOpsArray>, std::__1::allocator<std::__1::pair<rx::vk::AttachmentOpsArray const, rx::vk::ObjectAndSerial<rx::vk::RenderPass> > > > >, std::__1::hash<rx::vk::RenderPassDesc>, true>, std::__1::__unordered_map_equal<rx::vk::RenderPassDesc, std::__1::__hash_value_type<rx::vk::RenderPassDesc, std::__1::unordered_map<rx::vk::AttachmentOpsArray, rx::vk::ObjectAndSerial<rx::vk::RenderPass>, std::__1::hash<rx::vk::AttachmentOpsArray>, std::__1::equal_to<rx::vk::AttachmentOpsArray>, std::__1::allocator<std::__1::pair<rx::vk::AttachmentOpsArray const, rx::vk::ObjectAndSerial<rx::vk::RenderPass> > > > >, std::__1::equal_to<rx::vk::RenderPassDesc>, true>, std::__1::allocator<std::__1::__hash_value_type<rx::vk::RenderPassDesc, std::__1::unordered_map<rx::vk::AttachmentOpsArray, rx::vk::ObjectAndSerial<rx::vk::RenderPass>, std::__1::hash<rx::vk::AttachmentOpsArray>, std::__1::equal_to<rx::vk::AttachmentOpsArray>, std::__1::allocator<std::__1::pair<rx::vk::AttachmentOpsArray const, rx::vk::ObjectAndSerial<rx::vk::RenderPass> > > > > > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<rx::vk::RenderPassDesc, std::__1::unordered_map<rx::vk::AttachmentOpsArray, rx::vk::ObjectAndSerial<rx::vk::RenderPass>, std::__1::hash<rx::vk::AttachmentOpsArray>, std::__1::equal_to<rx::vk::AttachmentOpsArray>, std::__1::allocator<std::__1::pair<rx::vk::AttachmentOpsArray const, rx::vk::ObjectAndSerial<rx::vk::RenderPass> > > > >, std::__1::__unordered_map_hasher<rx::vk::RenderPassDesc, std::__1::__hash_value_type<rx::vk::RenderPassDesc, std::__1::unordered_map<rx::vk::AttachmentOpsArray, rx::vk::ObjectAndSerial<rx::vk::RenderPass>, std::__1::hash<rx::vk::AttachmentOpsArray>, std::__1::equal_to<rx::vk::AttachmentOpsArray>, std::__1::allocator<std::__1::pair<rx::vk::AttachmentOpsArray const, rx::vk::ObjectAndSerial<rx::vk::RenderPass> > > > >, std::__1::hash<rx::vk::RenderPassDesc>, true>, std::__1::__unordered_map_equal<rx::vk::RenderPassDesc, std::__1::__hash_value_type<rx::vk::RenderPassDesc, std::__1::unordered_map<rx::vk::AttachmentOpsArray, rx::vk::ObjectAndSerial<rx::vk::RenderPass>, std::__1::hash<rx::vk::AttachmentOpsArray>, std::__1::equal_to<rx::vk::AttachmentOpsArray>, std::__1::allocator<std::__1::pair<rx::vk::AttachmentOpsArray const, rx::vk::ObjectAndSerial<rx::vk::RenderPass> > > > >, std::__1::equal_to<rx::vk::RenderPassDesc>, true>, std::__1::allocator<std::__1::__hash_value_type<rx::vk::RenderPassDesc, std::__1::unordered_map<rx::vk::AttachmentOpsArray, rx::vk::ObjectAndSerial<rx::vk::RenderPass>, std::__1::hash<rx::vk::AttachmentOpsArray>, std::__1::equal_to<rx::vk::AttachmentOpsArray>, std::__1::allocator<std::__1::pair<rx::vk::AttachmentOpsArray const, rx::vk::ObjectAndSerial<rx::vk::RenderPass> > > > > > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<sh::ImmutableString, sh::TSymbol*>, std::__1::__unordered_map_hasher<sh::ImmutableString, std::__1::__hash_value_type<sh::ImmutableString, sh::TSymbol*>, sh::ImmutableString::FowlerNollVoHash<8ul>, true>, std::__1::__unordered_map_equal<sh::ImmutableString, std::__1::__hash_value_type<sh::ImmutableString, sh::TSymbol*>, std::__1::equal_to<sh::ImmutableString>, true>, pool_allocator<std::__1::__hash_value_type<sh::ImmutableString, sh::TSymbol*> > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<sh::ImmutableString, sh::TSymbol*>, std::__1::__unordered_map_hasher<sh::ImmutableString, std::__1::__hash_value_type<sh::ImmutableString, sh::TSymbol*>, sh::ImmutableString::FowlerNollVoHash<8ul>, true>, std::__1::__unordered_map_equal<sh::ImmutableString, std::__1::__hash_value_type<sh::ImmutableString, sh::TSymbol*>, std::__1::equal_to<sh::ImmutableString>, true>, pool_allocator<std::__1::__hash_value_type<sh::ImmutableString, sh::TSymbol*> > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<std::__1::array<unsigned char, 20ul>, std::__1::__list_iterator<std::__1::pair<std::__1::array<unsigned char, 20ul>, angle::SizedMRUCache<std::__1::array<unsigned char, 20ul>, std::__1::pair<angle::MemoryBuffer, egl::BlobCache::CacheSource> >::ValueAndSize>, void*> >, std::__1::__unordered_map_hasher<std::__1::array<unsigned char, 20ul>, std::__1::__hash_value_type<std::__1::array<unsigned char, 20ul>, std::__1::__list_iterator<std::__1::pair<std::__1::array<unsigned char, 20ul>, angle::SizedMRUCache<std::__1::array<unsigned char, 20ul>, std::__1::pair<angle::MemoryBuffer, egl::BlobCache::CacheSource> >::ValueAndSize>, void*> >, std::__1::hash<std::__1::array<unsigned char, 20ul> >, true>, std::__1::__unordered_map_equal<std::__1::array<unsigned char, 20ul>, std::__1::__hash_value_type<std::__1::array<unsigned char, 20ul>, std::__1::__list_iterator<std::__1::pair<std::__1::array<unsigned char, 20ul>, angle::SizedMRUCache<std::__1::array<unsigned char, 20ul>, std::__1::pair<angle::MemoryBuffer, egl::BlobCache::CacheSource> >::ValueAndSize>, void*> >, std::__1::equal_to<std::__1::array<unsigned char, 20ul> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::array<unsigned char, 20ul>, std::__1::__list_iterator<std::__1::pair<std::__1::array<unsigned char, 20ul>, angle::SizedMRUCache<std::__1::array<unsigned char, 20ul>, std::__1::pair<angle::MemoryBuffer, egl::BlobCache::CacheSource> >::ValueAndSize>, void*> > > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<std::__1::array<unsigned char, 20ul>, std::__1::__list_iterator<std::__1::pair<std::__1::array<unsigned char, 20ul>, angle::SizedMRUCache<std::__1::array<unsigned char, 20ul>, std::__1::pair<angle::MemoryBuffer, egl::BlobCache::CacheSource> >::ValueAndSize>, void*> >, std::__1::__unordered_map_hasher<std::__1::array<unsigned char, 20ul>, std::__1::__hash_value_type<std::__1::array<unsigned char, 20ul>, std::__1::__list_iterator<std::__1::pair<std::__1::array<unsigned char, 20ul>, angle::SizedMRUCache<std::__1::array<unsigned char, 20ul>, std::__1::pair<angle::MemoryBuffer, egl::BlobCache::CacheSource> >::ValueAndSize>, void*> >, std::__1::hash<std::__1::array<unsigned char, 20ul> >, true>, std::__1::__unordered_map_equal<std::__1::array<unsigned char, 20ul>, std::__1::__hash_value_type<std::__1::array<unsigned char, 20ul>, std::__1::__list_iterator<std::__1::pair<std::__1::array<unsigned char, 20ul>, angle::SizedMRUCache<std::__1::array<unsigned char, 20ul>, std::__1::pair<angle::MemoryBuffer, egl::BlobCache::CacheSource> >::ValueAndSize>, void*> >, std::__1::equal_to<std::__1::array<unsigned char, 20ul> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::array<unsigned char, 20ul>, std::__1::__list_iterator<std::__1::pair<std::__1::array<unsigned char, 20ul>, angle::SizedMRUCache<std::__1::array<unsigned char, 20ul>, std::__1::pair<angle::MemoryBuffer, egl::BlobCache::CacheSource> >::ValueAndSize>, void*> > > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<std::__1::array<unsigned char, 20ul>, std::__1::__list_iterator<std::__1::pair<std::__1::array<unsigned char, 20ul>, angle::SizedMRUCache<std::__1::array<unsigned char, 20ul>, std::__1::pair<angle::MemoryBuffer, egl::BlobCache::CacheSource> >::ValueAndSize>, void*> >, std::__1::__unordered_map_hasher<std::__1::array<unsigned char, 20ul>, std::__1::__hash_value_type<std::__1::array<unsigned char, 20ul>, std::__1::__list_iterator<std::__1::pair<std::__1::array<unsigned char, 20ul>, angle::SizedMRUCache<std::__1::array<unsigned char, 20ul>, std::__1::pair<angle::MemoryBuffer, egl::BlobCache::CacheSource> >::ValueAndSize>, void*> >, std::__1::hash<std::__1::array<unsigned char, 20ul> >, true>, std::__1::__unordered_map_equal<std::__1::array<unsigned char, 20ul>, std::__1::__hash_value_type<std::__1::array<unsigned char, 20ul>, std::__1::__list_iterator<std::__1::pair<std::__1::array<unsigned char, 20ul>, angle::SizedMRUCache<std::__1::array<unsigned char, 20ul>, std::__1::pair<angle::MemoryBuffer, egl::BlobCache::CacheSource> >::ValueAndSize>, void*> >, std::__1::equal_to<std::__1::array<unsigned char, 20ul> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::array<unsigned char, 20ul>, std::__1::__list_iterator<std::__1::pair<std::__1::array<unsigned char, 20ul>, angle::SizedMRUCache<std::__1::array<unsigned char, 20ul>, std::__1::pair<angle::MemoryBuffer, egl::BlobCache::CacheSource> >::ValueAndSize>, void*> > > >::remove(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::array<unsigned char, 20ul>, std::__1::__list_iterator<std::__1::pair<std::__1::array<unsigned char, 20ul>, angle::SizedMRUCache<std::__1::array<unsigned char, 20ul>, std::__1::pair<angle::MemoryBuffer, egl::BlobCache::CacheSource> >::ValueAndSize>, void*> >, void*>*>)
std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, int>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, int>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, int>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, true>, glslang::pool_allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, int> > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, int>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, int>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, int>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, true>, glslang::pool_allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, int> > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermOperator*>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermOperator*>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermOperator*>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermOperator*> > >::__node_insert_multi(std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermOperator*>, void*>*)
std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermOperator*>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermOperator*>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermOperator*>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermOperator*> > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermOperator*>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermOperator*>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermOperator*>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermOperator*> > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermSymbol const*>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermSymbol const*>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermSymbol const*>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermSymbol const*> > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermSymbol const*>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermSymbol const*>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermSymbol const*>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermSymbol const*> > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, spv::Function*>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, spv::Function*>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, spv::Function*>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, spv::Function*> > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, spv::Function*>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, spv::Function*>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, spv::Function*>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, spv::Function*> > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int> > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int> > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::Buffer*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Buffer*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Buffer*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::Buffer*> > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::Buffer*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Buffer*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Buffer*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::Buffer*> > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::Buffer*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Buffer*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Buffer*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::Buffer*> > >::remove(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, gl::Buffer*>, void*>*>)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::FenceNV*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::FenceNV*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::FenceNV*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::FenceNV*> > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::FenceNV*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::FenceNV*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::FenceNV*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::FenceNV*> > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::FenceNV*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::FenceNV*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::FenceNV*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::FenceNV*> > >::remove(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, gl::FenceNV*>, void*>*>)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::Framebuffer*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Framebuffer*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Framebuffer*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::Framebuffer*> > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::Framebuffer*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Framebuffer*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Framebuffer*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::Framebuffer*> > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::Framebuffer*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Framebuffer*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Framebuffer*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::Framebuffer*> > >::remove(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, gl::Framebuffer*>, void*>*>)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::InternalFormat>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::InternalFormat>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::InternalFormat>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::InternalFormat> > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::InternalFormat>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::InternalFormat>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::InternalFormat>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::InternalFormat> > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::Path*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Path*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Path*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::Path*> > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::Path*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Path*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Path*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::Path*> > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::Path*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Path*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Path*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::Path*> > >::remove(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, gl::Path*>, void*>*>)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::Program*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Program*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Program*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::Program*> > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::Program*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Program*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Program*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::Program*> > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::Program*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Program*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Program*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::Program*> > >::remove(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, gl::Program*>, void*>*>)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::ProgramPipeline*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::ProgramPipeline*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::ProgramPipeline*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::ProgramPipeline*> > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::ProgramPipeline*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::ProgramPipeline*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::ProgramPipeline*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::ProgramPipeline*> > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::ProgramPipeline*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::ProgramPipeline*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::ProgramPipeline*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::ProgramPipeline*> > >::remove(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, gl::ProgramPipeline*>, void*>*>)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::Query*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Query*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Query*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::Query*> > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::Query*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Query*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Query*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::Query*> > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::Query*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Query*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Query*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::Query*> > >::remove(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, gl::Query*>, void*>*>)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::Renderbuffer*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Renderbuffer*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Renderbuffer*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::Renderbuffer*> > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::Renderbuffer*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Renderbuffer*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Renderbuffer*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::Renderbuffer*> > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::Renderbuffer*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Renderbuffer*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Renderbuffer*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::Renderbuffer*> > >::remove(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, gl::Renderbuffer*>, void*>*>)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::Sampler*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Sampler*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Sampler*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::Sampler*> > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::Sampler*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Sampler*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Sampler*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::Sampler*> > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::Sampler*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Sampler*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Sampler*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::Sampler*> > >::remove(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, gl::Sampler*>, void*>*>)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::Shader*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Shader*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Shader*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::Shader*> > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::Shader*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Shader*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Shader*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::Shader*> > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::Shader*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Shader*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Shader*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::Shader*> > >::remove(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, gl::Shader*>, void*>*>)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::Sync*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Sync*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Sync*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::Sync*> > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::Sync*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Sync*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Sync*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::Sync*> > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::Sync*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Sync*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Sync*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::Sync*> > >::remove(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, gl::Sync*>, void*>*>)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::Texture*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Texture*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Texture*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::Texture*> > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::Texture*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Texture*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Texture*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::Texture*> > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::Texture*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Texture*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::Texture*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::Texture*> > >::remove(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, gl::Texture*>, void*>*>)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::TransformFeedback*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::TransformFeedback*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::TransformFeedback*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::TransformFeedback*> > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::TransformFeedback*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::TransformFeedback*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::TransformFeedback*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::TransformFeedback*> > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::TransformFeedback*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::TransformFeedback*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::TransformFeedback*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::TransformFeedback*> > >::remove(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, gl::TransformFeedback*>, void*>*>)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::VertexArray*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::VertexArray*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::VertexArray*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::VertexArray*> > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::VertexArray*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::VertexArray*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::VertexArray*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::VertexArray*> > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, gl::VertexArray*>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, gl::VertexArray*>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, gl::VertexArray*>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, gl::VertexArray*> > >::remove(std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, gl::VertexArray*>, void*>*>)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned int, gl::InternalFormat, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, gl::InternalFormat> > > >, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned int, gl::InternalFormat, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, gl::InternalFormat> > > >, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned int, gl::InternalFormat, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, gl::InternalFormat> > > >, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned int, gl::InternalFormat, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, gl::InternalFormat> > > > > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned int, gl::InternalFormat, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, gl::InternalFormat> > > >, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned int, gl::InternalFormat, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, gl::InternalFormat> > > >, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned int, gl::InternalFormat, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, gl::InternalFormat> > > >, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned int, gl::InternalFormat, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, gl::InternalFormat> > > > > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, std::__1::vector<spv::Instruction*, std::__1::allocator<spv::Instruction*> > >, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::vector<spv::Instruction*, std::__1::allocator<spv::Instruction*> > >, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::vector<spv::Instruction*, std::__1::allocator<spv::Instruction*> > >, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, std::__1::vector<spv::Instruction*, std::__1::allocator<spv::Instruction*> > > > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::__hash_value_type<unsigned int, std::__1::vector<spv::Instruction*, std::__1::allocator<spv::Instruction*> > >, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::vector<spv::Instruction*, std::__1::allocator<spv::Instruction*> > >, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::vector<spv::Instruction*, std::__1::allocator<spv::Instruction*> > >, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, std::__1::vector<spv::Instruction*, std::__1::allocator<spv::Instruction*> > > > >::rehash(unsigned long)
std::__1::__hash_table<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__rehash(unsigned long)
std::__1::__hash_table<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::rehash(unsigned long)
std::__1::__hash_table<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int> >::__rehash(unsigned long)
std::__1::__hash_table<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int> >::rehash(unsigned long)
std::__1::__iostream_category::message(int) const
std::__1::__iostream_category::name() const
std::__1::__iostream_category::~__iostream_category()
std::__1::__libcpp_asprintf_l(char**, __locale_struct*, char const*, ...)
std::__1::__libcpp_snprintf_l(char*, unsigned long, __locale_struct*, char const*, ...)
std::__1::__libcpp_sscanf_l(char const*, __locale_struct*, char const*, ...)
std::__1::__list_iterator<std::__1::pair<std::__1::array<unsigned char, 20ul>, angle::SizedMRUCache<std::__1::array<unsigned char, 20ul>, std::__1::pair<angle::MemoryBuffer, egl::BlobCache::CacheSource> >::ValueAndSize>, void*> angle::base::MRUCacheBase<std::__1::array<unsigned char, 20ul>, angle::SizedMRUCache<std::__1::array<unsigned char, 20ul>, std::__1::pair<angle::MemoryBuffer, egl::BlobCache::CacheSource> >::ValueAndSize, std::__1::hash<std::__1::array<unsigned char, 20ul> >, angle::base::MRUCacheHashMap>::Put<angle::SizedMRUCache<std::__1::array<unsigned char, 20ul>, std::__1::pair<angle::MemoryBuffer, egl::BlobCache::CacheSource> >::ValueAndSize>(std::__1::array<unsigned char, 20ul> const&, angle::SizedMRUCache<std::__1::array<unsigned char, 20ul>, std::__1::pair<angle::MemoryBuffer, egl::BlobCache::CacheSource> >::ValueAndSize&&)
std::__1::__money_get<char>::__gather_info(bool, std::__1::locale const&, std::__1::money_base::pattern&, char&, char&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, int&)
std::__1::__money_get<wchar_t>::__gather_info(bool, std::__1::locale const&, std::__1::money_base::pattern&, wchar_t&, wchar_t&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >&, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >&, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >&, int&)
std::__1::__money_put<char>::__format(char*, char*&, char*&, unsigned int, char const*, char const*, std::__1::ctype<char> const&, bool, std::__1::money_base::pattern const&, char, char, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int)
std::__1::__money_put<char>::__gather_info(bool, bool, std::__1::locale const&, std::__1::money_base::pattern&, char&, char&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, int&)
std::__1::__money_put<wchar_t>::__format(wchar_t*, wchar_t*&, wchar_t*&, unsigned int, wchar_t const*, wchar_t const*, std::__1::ctype<wchar_t> const&, bool, std::__1::money_base::pattern const&, wchar_t, wchar_t, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> > const&, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> > const&, int)
std::__1::__money_put<wchar_t>::__gather_info(bool, bool, std::__1::locale const&, std::__1::money_base::pattern&, wchar_t&, wchar_t&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >&, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >&, int&)
std::__1::__murmur2_or_cityhash<unsigned long, 64ul>::__hash_len_0_to_16(char const*, unsigned long)
std::__1::__murmur2_or_cityhash<unsigned long, 64ul>::operator()(void const*, unsigned long)
std::__1::__narrow_to_utf8<16ul>::~__narrow_to_utf8()
std::__1::__narrow_to_utf8<32ul>::~__narrow_to_utf8()
std::__1::__next_prime(unsigned long)
std::__1::__num_get<char>::__stage2_float_loop(char, bool&, char&, char*, char*&, char, char, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int*, unsigned int*&, unsigned int&, char*)
std::__1::__num_get<char>::__stage2_float_prep(std::__1::ios_base&, char*, char&, char&)
std::__1::__num_get<char>::__stage2_int_loop(char, int, char*, char*&, unsigned int&, char, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int*, unsigned int*&, char*)
std::__1::__num_get<char>::__stage2_int_prep(std::__1::ios_base&, char*, char&)
std::__1::__num_get<wchar_t>::__stage2_float_loop(wchar_t, bool&, char&, char*, char*&, wchar_t, wchar_t, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int*, unsigned int*&, unsigned int&, wchar_t*)
std::__1::__num_get<wchar_t>::__stage2_float_prep(std::__1::ios_base&, wchar_t*, wchar_t&, wchar_t&)
std::__1::__num_get<wchar_t>::__stage2_int_loop(wchar_t, int, char*, char*&, unsigned int&, wchar_t, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned int*, unsigned int*&, wchar_t*)
std::__1::__num_get<wchar_t>::__stage2_int_prep(std::__1::ios_base&, wchar_t*, wchar_t&)
std::__1::__num_get_base::__src
std::__1::__num_put<char>::__widen_and_group_float(char*, char*, char*, char*, char*&, char*&, std::__1::locale const&)
std::__1::__num_put<char>::__widen_and_group_int(char*, char*, char*, char*, char*&, char*&, std::__1::locale const&)
std::__1::__num_put<wchar_t>::__widen_and_group_float(char*, char*, char*, wchar_t*, wchar_t*&, wchar_t*&, std::__1::locale const&)
std::__1::__num_put<wchar_t>::__widen_and_group_int(char*, char*, char*, wchar_t*, wchar_t*&, wchar_t*&, std::__1::locale const&)
std::__1::__shared_count::~__shared_count()
std::__1::__shared_ptr_emplace<angle::SingleThreadedWaitableEvent, std::__1::allocator<angle::SingleThreadedWaitableEvent> >::__on_zero_shared()
std::__1::__shared_ptr_emplace<angle::SingleThreadedWaitableEvent, std::__1::allocator<angle::SingleThreadedWaitableEvent> >::__on_zero_shared_weak()
std::__1::__shared_ptr_emplace<angle::SingleThreadedWaitableEvent, std::__1::allocator<angle::SingleThreadedWaitableEvent> >::~__shared_ptr_emplace()
std::__1::__shared_ptr_emplace<angle::pp::Macro, std::__1::allocator<angle::pp::Macro> >::__on_zero_shared()
std::__1::__shared_ptr_emplace<angle::pp::Macro, std::__1::allocator<angle::pp::Macro> >::__on_zero_shared_weak()
std::__1::__shared_ptr_emplace<angle::pp::Macro, std::__1::allocator<angle::pp::Macro> >::~__shared_ptr_emplace()
std::__1::__shared_ptr_emplace<gl::CompileTask, std::__1::allocator<gl::CompileTask> >::__on_zero_shared()
std::__1::__shared_ptr_emplace<gl::CompileTask, std::__1::allocator<gl::CompileTask> >::__on_zero_shared_weak()
std::__1::__shared_ptr_emplace<gl::CompileTask, std::__1::allocator<gl::CompileTask> >::~__shared_ptr_emplace()
std::__1::__shared_ptr_pointer<angle::WorkerThreadPool*, std::__1::default_delete<angle::WorkerThreadPool>, std::__1::allocator<angle::WorkerThreadPool> >::__on_zero_shared()
std::__1::__shared_ptr_pointer<angle::WorkerThreadPool*, std::__1::default_delete<angle::WorkerThreadPool>, std::__1::allocator<angle::WorkerThreadPool> >::__on_zero_shared_weak()
std::__1::__shared_ptr_pointer<angle::WorkerThreadPool*, std::__1::default_delete<angle::WorkerThreadPool>, std::__1::allocator<angle::WorkerThreadPool> >::~__shared_ptr_pointer()
std::__1::__shared_ptr_pointer<rx::RendererGL*, std::__1::default_delete<rx::RendererGL>, std::__1::allocator<rx::RendererGL> >::__on_zero_shared()
std::__1::__shared_ptr_pointer<rx::RendererGL*, std::__1::default_delete<rx::RendererGL>, std::__1::allocator<rx::RendererGL> >::__on_zero_shared_weak()
std::__1::__shared_ptr_pointer<rx::RendererGL*, std::__1::default_delete<rx::RendererGL>, std::__1::allocator<rx::RendererGL> >::~__shared_ptr_pointer()
std::__1::__shared_weak_count::__get_deleter(std::type_info const&) const
std::__1::__shared_weak_count::__release_weak()
std::__1::__shared_weak_count::~__shared_weak_count()
std::__1::__split_buffer<bool*, std::__1::allocator<bool*> >::push_back(bool*&&)
std::__1::__split_buffer<bool*, std::__1::allocator<bool*> >::push_front(bool*&&)
std::__1::__split_buffer<bool*, std::__1::allocator<bool*>&>::push_back(bool*&&)
std::__1::__split_buffer<bool*, std::__1::allocator<bool*>&>::push_front(bool* const&)
std::__1::__split_buffer<gl::Debug::Group, std::__1::allocator<gl::Debug::Group>&>::~__split_buffer()
std::__1::__split_buffer<gl::Debug::Message*, std::__1::allocator<gl::Debug::Message*> >::push_back(gl::Debug::Message*&&)
std::__1::__split_buffer<gl::Debug::Message*, std::__1::allocator<gl::Debug::Message*> >::push_front(gl::Debug::Message*&&)
std::__1::__split_buffer<gl::Debug::Message*, std::__1::allocator<gl::Debug::Message*>&>::push_back(gl::Debug::Message*&&)
std::__1::__split_buffer<gl::Debug::Message*, std::__1::allocator<gl::Debug::Message*>&>::push_front(gl::Debug::Message* const&)
std::__1::__split_buffer<gl::HandleAllocator::HandleRange, std::__1::allocator<gl::HandleAllocator::HandleRange>&>::push_back(gl::HandleAllocator::HandleRange&&)
std::__1::__split_buffer<glslang::TShader::Includer::IncludeResult**, std::__1::allocator<glslang::TShader::Includer::IncludeResult**> >::push_back(glslang::TShader::Includer::IncludeResult**&&)
std::__1::__split_buffer<glslang::TShader::Includer::IncludeResult**, std::__1::allocator<glslang::TShader::Includer::IncludeResult**> >::push_front(glslang::TShader::Includer::IncludeResult**&&)
std::__1::__split_buffer<glslang::TShader::Includer::IncludeResult**, std::__1::allocator<glslang::TShader::Includer::IncludeResult**>&>::push_back(glslang::TShader::Includer::IncludeResult**&&)
std::__1::__split_buffer<glslang::TShader::Includer::IncludeResult**, std::__1::allocator<glslang::TShader::Includer::IncludeResult**>&>::push_front(glslang::TShader::Includer::IncludeResult** const&)
std::__1::__split_buffer<spv::Block**, std::__1::allocator<spv::Block**> >::push_back(spv::Block**&&)
std::__1::__split_buffer<spv::Block**, std::__1::allocator<spv::Block**> >::push_front(spv::Block**&&)
std::__1::__split_buffer<spv::Block**, std::__1::allocator<spv::Block**>&>::push_back(spv::Block**&&)
std::__1::__split_buffer<spv::Block**, std::__1::allocator<spv::Block**>&>::push_front(spv::Block** const&)
std::__1::__split_buffer<spv::Builder::LoopBlocks*, std::__1::allocator<spv::Builder::LoopBlocks*> >::push_back(spv::Builder::LoopBlocks*&&)
std::__1::__split_buffer<spv::Builder::LoopBlocks*, std::__1::allocator<spv::Builder::LoopBlocks*> >::push_front(spv::Builder::LoopBlocks*&&)
std::__1::__split_buffer<spv::Builder::LoopBlocks*, std::__1::allocator<spv::Builder::LoopBlocks*>&>::push_back(spv::Builder::LoopBlocks*&&)
std::__1::__split_buffer<spv::Builder::LoopBlocks*, std::__1::allocator<spv::Builder::LoopBlocks*>&>::push_front(spv::Builder::LoopBlocks* const&)
std::__1::__split_buffer<unsigned int*, std::__1::allocator<unsigned int*> >::push_back(unsigned int*&&)
std::__1::__split_buffer<unsigned int*, std::__1::allocator<unsigned int*> >::push_front(unsigned int*&&)
std::__1::__split_buffer<unsigned int*, std::__1::allocator<unsigned int*>&>::push_back(unsigned int*&&)
std::__1::__split_buffer<unsigned int*, std::__1::allocator<unsigned int*>&>::push_front(unsigned int* const&)
std::__1::__start_std_streams
std::__1::__stdinbuf<char>::__getchar(bool)
std::__1::__stdinbuf<char>::imbue(std::__1::locale const&)
std::__1::__stdinbuf<char>::pbackfail(int)
std::__1::__stdinbuf<char>::uflow()
std::__1::__stdinbuf<char>::underflow()
std::__1::__stdinbuf<char>::~__stdinbuf()
std::__1::__stdinbuf<wchar_t>::__getchar(bool)
std::__1::__stdinbuf<wchar_t>::imbue(std::__1::locale const&)
std::__1::__stdinbuf<wchar_t>::pbackfail(unsigned int)
std::__1::__stdinbuf<wchar_t>::uflow()
std::__1::__stdinbuf<wchar_t>::underflow()
std::__1::__stdinbuf<wchar_t>::~__stdinbuf()
std::__1::__stdoutbuf<char>::__stdoutbuf(_IO_FILE*, __mbstate_t*)
std::__1::__stdoutbuf<char>::imbue(std::__1::locale const&)
std::__1::__stdoutbuf<char>::overflow(int)
std::__1::__stdoutbuf<char>::sync()
std::__1::__stdoutbuf<char>::xsputn(char const*, long)
std::__1::__stdoutbuf<char>::~__stdoutbuf()
std::__1::__stdoutbuf<wchar_t>::__stdoutbuf(_IO_FILE*, __mbstate_t*)
std::__1::__stdoutbuf<wchar_t>::imbue(std::__1::locale const&)
std::__1::__stdoutbuf<wchar_t>::overflow(unsigned int)
std::__1::__stdoutbuf<wchar_t>::sync()
std::__1::__stdoutbuf<wchar_t>::xsputn(wchar_t const*, long)
std::__1::__stdoutbuf<wchar_t>::~__stdoutbuf()
std::__1::__throw_runtime_error(char const*)
std::__1::__time_get_c_storage<char>::__X() const
std::__1::__time_get_c_storage<char>::__X() const::s
std::__1::__time_get_c_storage<char>::__am_pm() const
std::__1::__time_get_c_storage<char>::__am_pm() const::am_pm
std::__1::__time_get_c_storage<char>::__c() const
std::__1::__time_get_c_storage<char>::__c() const::s
std::__1::__time_get_c_storage<char>::__months() const
std::__1::__time_get_c_storage<char>::__months() const::months
std::__1::__time_get_c_storage<char>::__r() const
std::__1::__time_get_c_storage<char>::__r() const::s
std::__1::__time_get_c_storage<char>::__weeks() const
std::__1::__time_get_c_storage<char>::__weeks() const::weeks
std::__1::__time_get_c_storage<char>::__x() const
std::__1::__time_get_c_storage<char>::__x() const::s
std::__1::__time_get_c_storage<wchar_t>::__X() const
std::__1::__time_get_c_storage<wchar_t>::__X() const::s
std::__1::__time_get_c_storage<wchar_t>::__am_pm() const
std::__1::__time_get_c_storage<wchar_t>::__am_pm() const::am_pm
std::__1::__time_get_c_storage<wchar_t>::__c() const
std::__1::__time_get_c_storage<wchar_t>::__c() const::s
std::__1::__time_get_c_storage<wchar_t>::__months() const
std::__1::__time_get_c_storage<wchar_t>::__months() const::months
std::__1::__time_get_c_storage<wchar_t>::__r() const
std::__1::__time_get_c_storage<wchar_t>::__r() const::s
std::__1::__time_get_c_storage<wchar_t>::__weeks() const
std::__1::__time_get_c_storage<wchar_t>::__weeks() const::weeks
std::__1::__time_get_c_storage<wchar_t>::__x() const
std::__1::__time_get_c_storage<wchar_t>::__x() const::s
std::__1::__time_put::__do_put(wchar_t*, wchar_t*&, tm const*, char, char) const
std::__1::__tree<egl::Device*, std::__1::less<egl::Device*>, std::__1::allocator<egl::Device*> >::destroy(std::__1::__tree_node<egl::Device*, void*>*)
std::__1::__tree<egl::Image*, std::__1::less<egl::Image*>, std::__1::allocator<egl::Image*> >::destroy(std::__1::__tree_node<egl::Image*, void*>*)
std::__1::__tree<egl::ImageSibling*, std::__1::less<egl::ImageSibling*>, std::__1::allocator<egl::ImageSibling*> >::destroy(std::__1::__tree_node<egl::ImageSibling*, void*>*)
std::__1::__tree<egl::Stream*, std::__1::less<egl::Stream*>, std::__1::allocator<egl::Stream*> >::destroy(std::__1::__tree_node<egl::Stream*, void*>*)
std::__1::__tree<egl::Surface*, std::__1::less<egl::Surface*>, std::__1::allocator<egl::Surface*> >::destroy(std::__1::__tree_node<egl::Surface*, void*>*)
std::__1::__tree<gl::Context*, std::__1::less<gl::Context*>, std::__1::allocator<gl::Context*> >::destroy(std::__1::__tree_node<gl::Context*, void*>*)
std::__1::__tree<gl::Texture*, std::__1::less<gl::Texture*>, std::__1::allocator<gl::Texture*> >::destroy(std::__1::__tree_node<gl::Texture*, void*>*)
std::__1::__tree<int, std::__1::less<int>, std::__1::allocator<int> >::destroy(std::__1::__tree_node<int, void*>*)
std::__1::__tree<sh::CallDAG::CallDAGCreator::CreatorFunctionData*, std::__1::less<sh::CallDAG::CallDAGCreator::CreatorFunctionData*>, std::__1::allocator<sh::CallDAG::CallDAGCreator::CreatorFunctionData*> >::destroy(std::__1::__tree_node<sh::CallDAG::CallDAGCreator::CreatorFunctionData*, void*>*)
std::__1::__tree<sh::EmulatePrecision::TypePair, sh::EmulatePrecision::TypePairComparator, std::__1::allocator<sh::EmulatePrecision::TypePair> >::destroy(std::__1::__tree_node<sh::EmulatePrecision::TypePair, void*>*)
std::__1::__tree<sh::ImmutableString, std::__1::less<sh::ImmutableString>, std::__1::allocator<sh::ImmutableString> >::destroy(std::__1::__tree_node<sh::ImmutableString, void*>*)
std::__1::__tree<sh::TIntermBlock const*, std::__1::less<sh::TIntermBlock const*>, std::__1::allocator<sh::TIntermBlock const*> >::destroy(std::__1::__tree_node<sh::TIntermBlock const*, void*>*)
std::__1::__tree<spv::Capability, std::__1::less<spv::Capability>, std::__1::allocator<spv::Capability> >::destroy(std::__1::__tree_node<spv::Capability, void*>*)
std::__1::__tree<std::__1::__value_type<_XDisplay*, egl::Display*>, std::__1::__map_value_compare<_XDisplay*, std::__1::__value_type<_XDisplay*, egl::Display*>, std::__1::less<_XDisplay*>, true>, std::__1::allocator<std::__1::__value_type<_XDisplay*, egl::Display*> > >::destroy(std::__1::__tree_node<std::__1::__value_type<_XDisplay*, egl::Display*>, void*>*)
std::__1::__tree<std::__1::__value_type<egl::Device*, egl::Display*>, std::__1::__map_value_compare<egl::Device*, std::__1::__value_type<egl::Device*, egl::Display*>, std::__1::less<egl::Device*>, true>, std::__1::allocator<std::__1::__value_type<egl::Device*, egl::Display*> > >::destroy(std::__1::__tree_node<std::__1::__value_type<egl::Device*, egl::Display*>, void*>*)
std::__1::__tree<std::__1::__value_type<gl::IndexRangeCache::IndexRangeKey, gl::IndexRange>, std::__1::__map_value_compare<gl::IndexRangeCache::IndexRangeKey, std::__1::__value_type<gl::IndexRangeCache::IndexRangeKey, gl::IndexRange>, std::__1::less<gl::IndexRangeCache::IndexRangeKey>, true>, std::__1::allocator<std::__1::__value_type<gl::IndexRangeCache::IndexRangeKey, gl::IndexRange> > >::destroy(std::__1::__tree_node<std::__1::__value_type<gl::IndexRangeCache::IndexRangeKey, gl::IndexRange>, void*>*)
std::__1::__tree<std::__1::__value_type<glslang::TVector<glslang::TTypeLoc>*, glslang::TVector<glslang::TTypeLoc>*>, std::__1::__map_value_compare<glslang::TVector<glslang::TTypeLoc>*, std::__1::__value_type<glslang::TVector<glslang::TTypeLoc>*, glslang::TVector<glslang::TTypeLoc>*>, std::__1::less<glslang::TVector<glslang::TTypeLoc>*>, true>, glslang::pool_allocator<std::__1::__value_type<glslang::TVector<glslang::TTypeLoc>*, glslang::TVector<glslang::TTypeLoc>*> > >::destroy(std::__1::__tree_node<std::__1::__value_type<glslang::TVector<glslang::TTypeLoc>*, glslang::TVector<glslang::TTypeLoc>*>, void*>*)
std::__1::__tree<std::__1::__value_type<int, egl::Config>, std::__1::__map_value_compare<int, std::__1::__value_type<int, egl::Config>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, egl::Config> > >::destroy(std::__1::__tree_node<std::__1::__value_type<int, egl::Config>, void*>*)
std::__1::__tree<std::__1::__value_type<int, glslang::TPpContext::MacroSymbol>, std::__1::__map_value_compare<int, std::__1::__value_type<int, glslang::TPpContext::MacroSymbol>, std::__1::less<int>, true>, glslang::pool_allocator<std::__1::__value_type<int, glslang::TPpContext::MacroSymbol> > >::destroy(std::__1::__tree_node<std::__1::__value_type<int, glslang::TPpContext::MacroSymbol>, void*>*)
std::__1::__tree<std::__1::__value_type<int, int>, std::__1::__map_value_compare<int, std::__1::__value_type<int, int>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, int> > >::destroy(std::__1::__tree_node<std::__1::__value_type<int, int>, void*>*)
std::__1::__tree<std::__1::__value_type<int, sh::CallDAG::CallDAGCreator::CreatorFunctionData>, std::__1::__map_value_compare<int, std::__1::__value_type<int, sh::CallDAG::CallDAGCreator::CreatorFunctionData>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, sh::CallDAG::CallDAGCreator::CreatorFunctionData> > >::destroy(std::__1::__tree_node<std::__1::__value_type<int, sh::CallDAG::CallDAGCreator::CreatorFunctionData>, void*>*)
std::__1::__tree<std::__1::__value_type<int, sh::TIntermSymbol const*>, std::__1::__map_value_compare<int, std::__1::__value_type<int, sh::TIntermSymbol const*>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, sh::TIntermSymbol const*> > >::destroy(std::__1::__tree_node<std::__1::__value_type<int, sh::TIntermSymbol const*>, void*>*)
std::__1::__tree<std::__1::__value_type<int, sh::TParseContext::AtomicCounterBindingState>, std::__1::__map_value_compare<int, std::__1::__value_type<int, sh::TParseContext::AtomicCounterBindingState>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, sh::TParseContext::AtomicCounterBindingState> > >::destroy(std::__1::__tree_node<std::__1::__value_type<int, sh::TParseContext::AtomicCounterBindingState>, void*>*)
std::__1::__tree<std::__1::__value_type<int, sh::TSymbolTable::VariableMetadata>, std::__1::__map_value_compare<int, std::__1::__value_type<int, sh::TSymbolTable::VariableMetadata>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, sh::TSymbolTable::VariableMetadata> > >::destroy(std::__1::__tree_node<std::__1::__value_type<int, sh::TSymbolTable::VariableMetadata>, void*>*)
std::__1::__tree<std::__1::__value_type<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::destroy(std::__1::__tree_node<std::__1::__value_type<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, void*>*)
std::__1::__tree<std::__1::__value_type<int, unsigned int>, std::__1::__map_value_compare<int, std::__1::__value_type<int, unsigned int>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, unsigned int> > >::destroy(std::__1::__tree_node<std::__1::__value_type<int, unsigned int>, void*>*)
std::__1::__tree<std::__1::__value_type<int, void*>, std::__1::__map_value_compare<int, std::__1::__value_type<int, void*>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, void*> > >::destroy(std::__1::__tree_node<std::__1::__value_type<int, void*>, void*>*)
std::__1::__tree<std::__1::__value_type<long, long>, std::__1::__map_value_compare<long, std::__1::__value_type<long, long>, std::__1::less<long>, true>, std::__1::allocator<std::__1::__value_type<long, long> > >::destroy(std::__1::__tree_node<std::__1::__value_type<long, long>, void*>*)
std::__1::__tree<std::__1::__value_type<rx::BlitGL::BlitProgramType, rx::BlitGL::BlitProgram>, std::__1::__map_value_compare<rx::BlitGL::BlitProgramType, std::__1::__value_type<rx::BlitGL::BlitProgramType, rx::BlitGL::BlitProgram>, std::__1::less<rx::BlitGL::BlitProgramType>, true>, std::__1::allocator<std::__1::__value_type<rx::BlitGL::BlitProgramType, rx::BlitGL::BlitProgram> > >::destroy(std::__1::__tree_node<std::__1::__value_type<rx::BlitGL::BlitProgramType, rx::BlitGL::BlitProgram>, void*>*)
std::__1::__tree<std::__1::__value_type<rx::vk::CommandGraphNode const*, int>, std::__1::__map_value_compare<rx::vk::CommandGraphNode const*, std::__1::__value_type<rx::vk::CommandGraphNode const*, int>, std::__1::less<rx::vk::CommandGraphNode const*>, true>, std::__1::allocator<std::__1::__value_type<rx::vk::CommandGraphNode const*, int> > >::destroy(std::__1::__tree_node<std::__1::__value_type<rx::vk::CommandGraphNode const*, int>, void*>*)
std::__1::__tree<std::__1::__value_type<sh::ImmutableString, sh::TFunction const*>, std::__1::__map_value_compare<sh::ImmutableString, std::__1::__value_type<sh::ImmutableString, sh::TFunction const*>, std::__1::less<sh::ImmutableString>, true>, pool_allocator<std::__1::__value_type<sh::ImmutableString, sh::TFunction const*> > >::destroy(std::__1::__tree_node<std::__1::__value_type<sh::ImmutableString, sh::TFunction const*>, void*>*)
std::__1::__tree<std::__1::__value_type<sh::TBasicType, sh::TPrecision>, std::__1::__map_value_compare<sh::TBasicType, std::__1::__value_type<sh::TBasicType, sh::TPrecision>, std::__1::less<sh::TBasicType>, true>, pool_allocator<std::__1::__value_type<sh::TBasicType, sh::TPrecision> > >::destroy(std::__1::__tree_node<std::__1::__value_type<sh::TBasicType, sh::TPrecision>, void*>*)
std::__1::__tree<std::__1::__value_type<sh::TExtension, sh::TBehavior>, std::__1::__map_value_compare<sh::TExtension, std::__1::__value_type<sh::TExtension, sh::TBehavior>, std::__1::less<sh::TExtension>, true>, std::__1::allocator<std::__1::__value_type<sh::TExtension, sh::TBehavior> > >::destroy(std::__1::__tree_node<std::__1::__value_type<sh::TExtension, sh::TBehavior>, void*>*)
std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TExtensionBehavior>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TExtensionBehavior>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, true>, glslang::pool_allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TExtensionBehavior> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TExtensionBehavior>, void*>*)
std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TSymbol*>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TSymbol*>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, true>, glslang::pool_allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TSymbol*> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TSymbol*>, void*>*)
std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, int>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, int>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, true>, glslang::pool_allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, int> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, int>, void*>*)
std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, true>, glslang::pool_allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > > > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, void*>*)
std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, gl::ExtensionInfo>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, gl::ExtensionInfo>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, gl::ExtensionInfo> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, gl::ExtensionInfo>, void*>*)
std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, gl::ProgramVaryingRef>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, gl::ProgramVaryingRef>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, gl::ProgramVaryingRef> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, gl::ProgramVaryingRef>, void*>*)
std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, sh::BlockMemberInfo>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, sh::BlockMemberInfo>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, sh::BlockMemberInfo> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, sh::BlockMemberInfo>, void*>*)
std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, sh::InterfaceBlockField*>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, sh::InterfaceBlockField*>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, sh::InterfaceBlockField*> > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, sh::InterfaceBlockField*>, void*>*)
std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, void*>*)
std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<gl::ShaderType, sh::InterfaceBlock const*> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<gl::ShaderType, sh::InterfaceBlock const*> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<gl::ShaderType, sh::InterfaceBlock const*> > > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<gl::ShaderType, sh::InterfaceBlock const*> >, void*>*)
std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<gl::ShaderType, sh::Uniform const*> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<gl::ShaderType, sh::Uniform const*> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<gl::ShaderType, sh::Uniform const*> > > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<gl::ShaderType, sh::Uniform const*> >, void*>*)
std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<angle::pp::Macro> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<angle::pp::Macro> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<angle::pp::Macro> > > >::destroy(std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<angle::pp::Macro> >, void*>*)
std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<angle::pp::Macro> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<angle::pp::Macro> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<angle::pp::Macro> > > >::erase(std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<angle::pp::Macro> >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<angle::pp::Macro> >, void*>*, long>)
std::__1::__tree<std::__1::__value_type<unsigned int, gl::VariableLocation>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, gl::VariableLocation>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, gl::VariableLocation> > >::destroy(std::__1::__tree_node<std::__1::__value_type<unsigned int, gl::VariableLocation>, void*>*)
std::__1::__tree<std::__1::__value_type<unsigned int, rx::nativegl::InternalFormatInfo>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, rx::nativegl::InternalFormatInfo>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, rx::nativegl::InternalFormatInfo> > >::destroy(std::__1::__tree_node<std::__1::__value_type<unsigned int, rx::nativegl::InternalFormatInfo>, void*>*)
std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::destroy(std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, void*>*)
std::__1::__tree<std::__1::__value_type<unsigned int, unsigned int>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned int>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned int> > >::destroy(std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned int>, void*>*)
std::__1::__tree<std::__1::__value_type<unsigned long, egl::Surface*>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, egl::Surface*>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, egl::Surface*> > >::destroy(std::__1::__tree_node<std::__1::__value_type<unsigned long, egl::Surface*>, void*>*)
std::__1::__tree<std::__1::__value_type<unsigned long, int>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, int>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, int> > >::destroy(std::__1::__tree_node<std::__1::__value_type<unsigned long, int>, void*>*)
std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > > >::destroy(std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, void*>*)
std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::destroy(std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*)
std::__1::__tree<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int> >::destroy(std::__1::__tree_node<unsigned int, void*>*)
std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TSymbol*>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TSymbol*>, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TSymbol*>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TSymbol*>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, true>, glslang::pool_allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TSymbol*> > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&) const
std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, int>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, int>, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, int>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, int>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, true>, glslang::pool_allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, int> > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&) const
std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, gl::ExtensionInfo>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, gl::ExtensionInfo>, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, gl::ExtensionInfo>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, gl::ExtensionInfo>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, gl::ExtensionInfo> > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<angle::pp::Macro> >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<angle::pp::Macro> >, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<angle::pp::Macro> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<angle::pp::Macro> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<angle::pp::Macro> > > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
std::__1::__tree_const_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, void*>*, long> std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&) const
std::__1::__tree_const_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, long> std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TExtensionBehavior>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TExtensionBehavior>, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TExtensionBehavior>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TExtensionBehavior>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, true>, glslang::pool_allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TExtensionBehavior> > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&)
std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TSymbol*>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TSymbol*>, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TSymbol*>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TSymbol*>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, true>, glslang::pool_allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TSymbol*> > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&)
std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, true>, glslang::pool_allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > > > >::__emplace_multi<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > > const&>(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > > const&)
std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, sh::BlockMemberInfo>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, sh::BlockMemberInfo>, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, sh::BlockMemberInfo>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, sh::BlockMemberInfo>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, sh::BlockMemberInfo> > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<gl::ShaderType, sh::InterfaceBlock const*> >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<gl::ShaderType, sh::InterfaceBlock const*> >, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<gl::ShaderType, sh::InterfaceBlock const*> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<gl::ShaderType, sh::InterfaceBlock const*> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<gl::ShaderType, sh::InterfaceBlock const*> > > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<gl::ShaderType, sh::Uniform const*> >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<gl::ShaderType, sh::Uniform const*> >, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<gl::ShaderType, sh::Uniform const*> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<gl::ShaderType, sh::Uniform const*> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<gl::ShaderType, sh::Uniform const*> > > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<angle::pp::Macro> >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<angle::pp::Macro> >, void*>*, long> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<angle::pp::Macro> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<angle::pp::Macro> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<angle::pp::Macro> > > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__tree_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, void*>*, long> std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > > >::__emplace_hint_unique_key_args<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&>(std::__1::__tree_const_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, void*>*, long>, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&)
std::__1::__tree_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, long> std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__emplace_multi<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__tree_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, long> std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::find<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TExtensionBehavior>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TExtensionBehavior>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, true>, glslang::pool_allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TExtensionBehavior> > >::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&)
std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TSymbol*>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TSymbol*>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, true>, glslang::pool_allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TSymbol*> > >::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&)
std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, int>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, int>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, true>, glslang::pool_allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, int> > >::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&)
std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, gl::ExtensionInfo>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, gl::ExtensionInfo>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, gl::ExtensionInfo> > >::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, gl::ProgramVaryingRef>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, gl::ProgramVaryingRef>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, gl::ProgramVaryingRef> > >::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, sh::BlockMemberInfo>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, sh::BlockMemberInfo>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, sh::BlockMemberInfo> > >::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<gl::ShaderType, sh::InterfaceBlock const*> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<gl::ShaderType, sh::InterfaceBlock const*> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<gl::ShaderType, sh::InterfaceBlock const*> > > >::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<gl::ShaderType, sh::Uniform const*> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<gl::ShaderType, sh::Uniform const*> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::pair<gl::ShaderType, sh::Uniform const*> > > >::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<angle::pp::Macro> >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<angle::pp::Macro> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::shared_ptr<angle::pp::Macro> > > >::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > > >::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >(std::__1::__tree_const_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, void*>*, long>, std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::__tree_node_base<void*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&)
std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > > >::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&)
std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::__tree_const_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, long>, std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::__tree_node_base<void*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__tree_node_base<void*>*& std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__find_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::__tree_end_node<std::__1::__tree_node_base<void*>*>*&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::__tuple_impl<std::__1::__tuple_indices<0ul, 1ul, 2ul, 3ul>, std::__1::unordered_multimap<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermOperator*, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, glslang::TIntermOperator*> > >, std::__1::unordered_map<glslang::TIntermTyped*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<glslang::TIntermTyped*>, std::__1::equal_to<glslang::TIntermTyped*>, std::__1::allocator<std::__1::pair<glslang::TIntermTyped* const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >, std::__1::unordered_set<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::unordered_set<glslang::TIntermBranch*, std::__1::hash<glslang::TIntermBranch*>, std::__1::equal_to<glslang::TIntermBranch*>, std::__1::allocator<glslang::TIntermBranch*> > >::~__tuple_impl()
std::__1::__vector_base<angle::FixedVector<angle::Mat4, 16ul, std::__1::array<angle::Mat4, 16ul> >, std::__1::allocator<angle::FixedVector<angle::Mat4, 16ul, std::__1::array<angle::Mat4, 16ul> > > >::~__vector_base()
std::__1::__vector_base<gl::Debug::Group, std::__1::allocator<gl::Debug::Group> >::~__vector_base()
std::__1::__vector_base<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::~__vector_base()
std::__1::__vector_base_common<true>::__throw_length_error() const
std::__1::__vector_base_common<true>::__throw_out_of_range() const
std::__1::__wcerr
std::__1::__wcin
std::__1::__wcout
std::__1::__widen_from_utf8<16ul>::~__widen_from_utf8()
std::__1::__widen_from_utf8<32ul>::~__widen_from_utf8()
std::__1::__wrap_iter<sh::TIntermNode**> std::__1::remove_if<std::__1::__wrap_iter<sh::TIntermNode**>, sh::TCompiler::UnusedPredicate>(std::__1::__wrap_iter<sh::TIntermNode**>, std::__1::__wrap_iter<sh::TIntermNode**>, sh::TCompiler::UnusedPredicate)
std::__1::array<angle::Mat4, 16ul>::array()
std::__1::array<angle::Mat4, 16ul>::~array()
std::__1::array<rx::vk::DynamicBuffer, 16ul>::~array()
std::__1::array<std::__1::vector<rx::StateManagerGL::IndexedBufferBinding, std::__1::allocator<rx::StateManagerGL::IndexedBufferBinding> >, 12ul>::~array()
std::__1::basic_ios<char, std::__1::char_traits<char> >::~basic_ios()
std::__1::basic_ios<wchar_t, std::__1::char_traits<wchar_t> >::~basic_ios()
std::__1::basic_iostream<char, std::__1::char_traits<char> >::~basic_iostream()
std::__1::basic_istream<char, std::__1::char_traits<char> >& std::__1::getline<char, std::__1::char_traits<char>, std::__1::allocator<char> >(std::__1::basic_istream<char, std::__1::char_traits<char> >&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, char)
std::__1::basic_istream<char, std::__1::char_traits<char> >::operator>>(double&)
std::__1::basic_istream<char, std::__1::char_traits<char> >::operator>>(int&)
std::__1::basic_istream<char, std::__1::char_traits<char> >::operator>>(unsigned int&)
std::__1::basic_istream<char, std::__1::char_traits<char> >::sentry::sentry(std::__1::basic_istream<char, std::__1::char_traits<char> >&, bool)
std::__1::basic_istream<char, std::__1::char_traits<char> >::~basic_istream()
std::__1::basic_istream<wchar_t, std::__1::char_traits<wchar_t> >::~basic_istream()
std::__1::basic_istringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_istringstream()
std::__1::basic_ostream<char, std::__1::char_traits<char> >& gl::priv::FmtHex<8, int>(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, int)
std::__1::basic_ostream<char, std::__1::char_traits<char> >& gl::priv::FmtHex<8, unsigned int>(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, unsigned int)
std::__1::basic_ostream<char, std::__1::char_traits<char> >& std::__1::__put_character_sequence<char, std::__1::char_traits<char> >(std::__1::basic_ostream<char, std::__1::char_traits<char> >&, char const*, unsigned long)
std::__1::basic_ostream<char, std::__1::char_traits<char> >::flush()
std::__1::basic_ostream<char, std::__1::char_traits<char> >::operator<<(bool)
std::__1::basic_ostream<char, std::__1::char_traits<char> >::operator<<(float)
std::__1::basic_ostream<char, std::__1::char_traits<char> >::operator<<(int)
std::__1::basic_ostream<char, std::__1::char_traits<char> >::operator<<(long)
std::__1::basic_ostream<char, std::__1::char_traits<char> >::operator<<(unsigned int)
std::__1::basic_ostream<char, std::__1::char_traits<char> >::operator<<(unsigned long)
std::__1::basic_ostream<char, std::__1::char_traits<char> >::put(char)
std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry::sentry(std::__1::basic_ostream<char, std::__1::char_traits<char> >&)
std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry::~sentry()
std::__1::basic_ostream<char, std::__1::char_traits<char> >::write(char const*, long)
std::__1::basic_ostream<char, std::__1::char_traits<char> >::~basic_ostream()
std::__1::basic_ostream<wchar_t, std::__1::char_traits<wchar_t> >::flush()
std::__1::basic_ostream<wchar_t, std::__1::char_traits<wchar_t> >::sentry::~sentry()
std::__1::basic_ostream<wchar_t, std::__1::char_traits<wchar_t> >::~basic_ostream()
std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_ostringstream()
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::basic_streambuf()
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::imbue(std::__1::locale const&)
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::overflow(int)
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::pbackfail(int)
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::seekoff(long long, std::__1::ios_base::seekdir, unsigned int)
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::seekpos(std::__1::fpos<__mbstate_t>, unsigned int)
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::setbuf(char*, long)
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::showmanyc()
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::sync()
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::uflow()
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::underflow()
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::xsgetn(char*, long)
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::xsputn(char const*, long)
std::__1::basic_streambuf<char, std::__1::char_traits<char> >::~basic_streambuf()
std::__1::basic_streambuf<wchar_t, std::__1::char_traits<wchar_t> >::basic_streambuf()
std::__1::basic_streambuf<wchar_t, std::__1::char_traits<wchar_t> >::imbue(std::__1::locale const&)
std::__1::basic_streambuf<wchar_t, std::__1::char_traits<wchar_t> >::overflow(unsigned int)
std::__1::basic_streambuf<wchar_t, std::__1::char_traits<wchar_t> >::pbackfail(unsigned int)
std::__1::basic_streambuf<wchar_t, std::__1::char_traits<wchar_t> >::seekoff(long long, std::__1::ios_base::seekdir, unsigned int)
std::__1::basic_streambuf<wchar_t, std::__1::char_traits<wchar_t> >::seekpos(std::__1::fpos<__mbstate_t>, unsigned int)
std::__1::basic_streambuf<wchar_t, std::__1::char_traits<wchar_t> >::setbuf(wchar_t*, long)
std::__1::basic_streambuf<wchar_t, std::__1::char_traits<wchar_t> >::showmanyc()
std::__1::basic_streambuf<wchar_t, std::__1::char_traits<wchar_t> >::sync()
std::__1::basic_streambuf<wchar_t, std::__1::char_traits<wchar_t> >::uflow()
std::__1::basic_streambuf<wchar_t, std::__1::char_traits<wchar_t> >::underflow()
std::__1::basic_streambuf<wchar_t, std::__1::char_traits<wchar_t> >::xsgetn(wchar_t*, long)
std::__1::basic_streambuf<wchar_t, std::__1::char_traits<wchar_t> >::xsputn(wchar_t const*, long)
std::__1::basic_streambuf<wchar_t, std::__1::char_traits<wchar_t> >::~basic_streambuf()
std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > std::__1::operator+<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >(std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&, char const*)
std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >::append(char const*, unsigned long)
std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >::assign(char const*, unsigned long)
std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >::insert(unsigned long, char const*, unsigned long)
std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >::push_back(char)
std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::append(char const*, unsigned long)
std::__1::basic_string<char, std::__1::char_traits<char>, pool_allocator<char> >::push_back(char)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > ToString<int>(int const&)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > ToString<unsigned int>(unsigned int const&)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const* std::__1::__scan_keyword<std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const*, std::__1::ctype<char> >(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >&, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const*, std::__1::ctype<char> const&, unsigned int&, bool)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > std::__1::operator+<char, std::__1::char_traits<char>, std::__1::allocator<char> >(char const*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > std::__1::operator+<char, std::__1::char_traits<char>, std::__1::allocator<char> >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, char const*)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >& std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__append_forward_unsafe<char*>(char*, char*)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__grow_by(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append(char const*)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append(char const*, unsigned long)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::append(unsigned long, char)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::assign(char const*)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::assign(char const*, unsigned long)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::assign(unsigned long, char)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::basic_string(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long, unsigned long, std::__1::allocator<char> const&)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::compare(char const*) const
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::compare(unsigned long, unsigned long, char const*) const
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::compare(unsigned long, unsigned long, char const*, unsigned long) const
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::erase(unsigned long, unsigned long)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::find(char, unsigned long) const
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::insert(unsigned long, char const*)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::insert(unsigned long, char const*, unsigned long)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::operator=(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::push_back(char)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::replace(unsigned long, unsigned long, char const*, unsigned long)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::reserve(unsigned long)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::resize(unsigned long, char)
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::rfind(char, unsigned long) const
std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_string()
std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> > const* std::__1::__scan_keyword<std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> > const*, std::__1::ctype<wchar_t> >(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >&, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> > const*, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> > const*, std::__1::ctype<wchar_t> const&, unsigned int&, bool)
std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >& std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__append_forward_unsafe<wchar_t*>(wchar_t*, wchar_t*)
std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__grow_by(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)
std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__grow_by_and_replace(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, wchar_t const*)
std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__init(unsigned long, wchar_t)
std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__init(wchar_t const*, unsigned long)
std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::append(wchar_t const*, unsigned long)
std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::assign(wchar_t const*)
std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::push_back(wchar_t)
std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::~basic_string()
std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::overflow(int)
std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::pbackfail(int)
std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekoff(long long, std::__1::ios_base::seekdir, unsigned int)
std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::seekpos(std::__1::fpos<__mbstate_t>, unsigned int)
std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str() const
std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::str(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::underflow()
std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringbuf()
std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringstream()
std::__1::cerr
std::__1::cin
std::__1::clog
std::__1::codecvt<char, char, __mbstate_t>::do_always_noconv() const
std::__1::codecvt<char, char, __mbstate_t>::do_encoding() const
std::__1::codecvt<char, char, __mbstate_t>::do_in(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const
std::__1::codecvt<char, char, __mbstate_t>::do_length(__mbstate_t&, char const*, char const*, unsigned long) const
std::__1::codecvt<char, char, __mbstate_t>::do_max_length() const
std::__1::codecvt<char, char, __mbstate_t>::do_out(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const
std::__1::codecvt<char, char, __mbstate_t>::do_unshift(__mbstate_t&, char*, char*, char*&) const
std::__1::codecvt<char, char, __mbstate_t>::id
std::__1::codecvt<char, char, __mbstate_t>::~codecvt()
std::__1::codecvt<char16_t, char, __mbstate_t>::do_always_noconv() const
std::__1::codecvt<char16_t, char, __mbstate_t>::do_encoding() const
std::__1::codecvt<char16_t, char, __mbstate_t>::do_in(__mbstate_t&, char const*, char const*, char const*&, char16_t*, char16_t*, char16_t*&) const
std::__1::codecvt<char16_t, char, __mbstate_t>::do_length(__mbstate_t&, char const*, char const*, unsigned long) const
std::__1::codecvt<char16_t, char, __mbstate_t>::do_max_length() const
std::__1::codecvt<char16_t, char, __mbstate_t>::do_out(__mbstate_t&, char16_t const*, char16_t const*, char16_t const*&, char*, char*, char*&) const
std::__1::codecvt<char16_t, char, __mbstate_t>::do_unshift(__mbstate_t&, char*, char*, char*&) const
std::__1::codecvt<char16_t, char, __mbstate_t>::id
std::__1::codecvt<char16_t, char, __mbstate_t>::~codecvt()
std::__1::codecvt<char32_t, char, __mbstate_t>::do_always_noconv() const
std::__1::codecvt<char32_t, char, __mbstate_t>::do_encoding() const
std::__1::codecvt<char32_t, char, __mbstate_t>::do_in(__mbstate_t&, char const*, char const*, char const*&, char32_t*, char32_t*, char32_t*&) const
std::__1::codecvt<char32_t, char, __mbstate_t>::do_length(__mbstate_t&, char const*, char const*, unsigned long) const
std::__1::codecvt<char32_t, char, __mbstate_t>::do_max_length() const
std::__1::codecvt<char32_t, char, __mbstate_t>::do_out(__mbstate_t&, char32_t const*, char32_t const*, char32_t const*&, char*, char*, char*&) const
std::__1::codecvt<char32_t, char, __mbstate_t>::do_unshift(__mbstate_t&, char*, char*, char*&) const
std::__1::codecvt<char32_t, char, __mbstate_t>::id
std::__1::codecvt<char32_t, char, __mbstate_t>::~codecvt()
std::__1::codecvt<wchar_t, char, __mbstate_t>::do_always_noconv() const
std::__1::codecvt<wchar_t, char, __mbstate_t>::do_encoding() const
std::__1::codecvt<wchar_t, char, __mbstate_t>::do_in(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const
std::__1::codecvt<wchar_t, char, __mbstate_t>::do_length(__mbstate_t&, char const*, char const*, unsigned long) const
std::__1::codecvt<wchar_t, char, __mbstate_t>::do_max_length() const
std::__1::codecvt<wchar_t, char, __mbstate_t>::do_out(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const
std::__1::codecvt<wchar_t, char, __mbstate_t>::do_unshift(__mbstate_t&, char*, char*, char*&) const
std::__1::codecvt<wchar_t, char, __mbstate_t>::id
std::__1::codecvt<wchar_t, char, __mbstate_t>::~codecvt()
std::__1::collate<char>::do_compare(char const*, char const*, char const*, char const*) const
std::__1::collate<char>::do_hash(char const*, char const*) const
std::__1::collate<char>::do_transform(char const*, char const*) const
std::__1::collate<char>::id
std::__1::collate<char>::~collate()
std::__1::collate<wchar_t>::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const
std::__1::collate<wchar_t>::do_hash(wchar_t const*, wchar_t const*) const
std::__1::collate<wchar_t>::do_transform(wchar_t const*, wchar_t const*) const
std::__1::collate<wchar_t>::id
std::__1::collate<wchar_t>::~collate()
std::__1::cout
std::__1::ctype<char>::do_narrow(char const*, char const*, char, char*) const
std::__1::ctype<char>::do_narrow(char, char) const
std::__1::ctype<char>::do_tolower(char) const
std::__1::ctype<char>::do_tolower(char*, char const*) const
std::__1::ctype<char>::do_toupper(char) const
std::__1::ctype<char>::do_toupper(char*, char const*) const
std::__1::ctype<char>::do_widen(char const*, char const*, char*) const
std::__1::ctype<char>::do_widen(char) const
std::__1::ctype<char>::id
std::__1::ctype<char>::~ctype()
std::__1::ctype<wchar_t>::do_is(unsigned short, wchar_t) const
std::__1::ctype<wchar_t>::do_is(wchar_t const*, wchar_t const*, unsigned short*) const
std::__1::ctype<wchar_t>::do_narrow(wchar_t const*, wchar_t const*, char, char*) const
std::__1::ctype<wchar_t>::do_narrow(wchar_t, char) const
std::__1::ctype<wchar_t>::do_scan_is(unsigned short, wchar_t const*, wchar_t const*) const
std::__1::ctype<wchar_t>::do_scan_not(unsigned short, wchar_t const*, wchar_t const*) const
std::__1::ctype<wchar_t>::do_tolower(wchar_t) const
std::__1::ctype<wchar_t>::do_tolower(wchar_t*, wchar_t const*) const
std::__1::ctype<wchar_t>::do_toupper(wchar_t) const
std::__1::ctype<wchar_t>::do_toupper(wchar_t*, wchar_t const*) const
std::__1::ctype<wchar_t>::do_widen(char const*, char const*, wchar_t*) const
std::__1::ctype<wchar_t>::do_widen(char) const
std::__1::ctype<wchar_t>::id
std::__1::ctype<wchar_t>::~ctype()
std::__1::cv
std::__1::deque<bool, std::__1::allocator<bool> >::__add_back_capacity()
std::__1::deque<gl::Debug::Message, std::__1::allocator<gl::Debug::Message> >::__add_back_capacity()
std::__1::deque<glslang::TShader::Includer::IncludeResult*, std::__1::allocator<glslang::TShader::Includer::IncludeResult*> >::__add_back_capacity()
std::__1::deque<spv::Block*, std::__1::allocator<spv::Block*> >::__add_back_capacity()
std::__1::deque<spv::Builder::LoopBlocks, std::__1::allocator<spv::Builder::LoopBlocks> >::__add_back_capacity()
std::__1::deque<unsigned int, std::__1::allocator<unsigned int> >::__add_back_capacity()
std::__1::enable_if<__is_forward_iterator<TIntermNode**>::value&&is_constructible<TIntermNode*, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, void>::type std::__1::vector<TIntermNode*, glslang::pool_allocator<TIntermNode*> >::assign<TIntermNode**>(__is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<char const*>::value&&is_constructible<char, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, std::__1::__wrap_iter<char*> >::type std::__1::vector<char, std::__1::allocator<char> >::insert<char const*>(std::__1::iterator_traits<char const*>, __is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<float*>::value&&is_constructible<float, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, void>::type std::__1::vector<float, std::__1::allocator<float> >::assign<float*>(__is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<glslang::TArraySize*>::value&&is_constructible<glslang::TArraySize, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, void>::type std::__1::vector<glslang::TArraySize, glslang::pool_allocator<glslang::TArraySize> >::assign<glslang::TArraySize*>(__is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<int*>::value&&is_constructible<int, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, void>::type std::__1::vector<int, glslang::pool_allocator<int> >::assign<int*>(__is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<int*>::value&&is_constructible<int, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, void>::type std::__1::vector<int, pool_allocator<int> >::assign<int*>(__is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<rx::vk::CommandGraphNode**>::value&&is_constructible<rx::vk::CommandGraphNode*, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, std::__1::__wrap_iter<rx::vk::CommandGraphNode**> >::type std::__1::vector<rx::vk::CommandGraphNode*, std::__1::allocator<rx::vk::CommandGraphNode*> >::insert<rx::vk::CommandGraphNode**>(std::__1::iterator_traits<rx::vk::CommandGraphNode* const*>, __is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<sh::Attribute*>::value&&is_constructible<sh::Attribute, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, void>::type std::__1::vector<sh::Attribute, std::__1::allocator<sh::Attribute> >::assign<sh::Attribute*>(__is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<sh::InterfaceBlock*>::value&&is_constructible<sh::InterfaceBlock, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, void>::type std::__1::vector<sh::InterfaceBlock, std::__1::allocator<sh::InterfaceBlock> >::assign<sh::InterfaceBlock*>(__is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<sh::InterfaceBlockField*>::value&&is_constructible<sh::InterfaceBlockField, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, void>::type std::__1::vector<sh::InterfaceBlockField, std::__1::allocator<sh::InterfaceBlockField> >::assign<sh::InterfaceBlockField*>(__is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<sh::OutputVariable*>::value&&is_constructible<sh::OutputVariable, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, void>::type std::__1::vector<sh::OutputVariable, std::__1::allocator<sh::OutputVariable> >::assign<sh::OutputVariable*>(__is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<sh::ShaderVariable*>::value&&is_constructible<sh::ShaderVariable, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, void>::type std::__1::vector<sh::ShaderVariable, std::__1::allocator<sh::ShaderVariable> >::assign<sh::ShaderVariable*>(__is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<sh::TIntermNode**>::value&&is_constructible<sh::TIntermNode*, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, std::__1::__wrap_iter<sh::TIntermNode**> >::type std::__1::vector<sh::TIntermNode*, pool_allocator<sh::TIntermNode*> >::insert<sh::TIntermNode**>(std::__1::iterator_traits<sh::TIntermNode* const*>, __is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<sh::TIntermNode**>::value&&is_constructible<sh::TIntermNode*, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, void>::type std::__1::vector<sh::TIntermNode*, pool_allocator<sh::TIntermNode*> >::assign<sh::TIntermNode**>(__is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<sh::Uniform*>::value&&is_constructible<sh::Uniform, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, void>::type std::__1::vector<sh::Uniform, std::__1::allocator<sh::Uniform> >::assign<sh::Uniform*>(__is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<sh::Varying*>::value&&is_constructible<sh::Varying, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, void>::type std::__1::vector<sh::Varying, std::__1::allocator<sh::Varying> >::assign<sh::Varying*>(__is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<std::__1::__bit_iterator<std::__1::vector<bool, std::__1::allocator<bool> >, false, 0ul> >::value, void>::type std::__1::vector<bool, std::__1::allocator<bool> >::__construct_at_end<std::__1::__bit_iterator<std::__1::vector<bool, std::__1::allocator<bool> >, false, 0ul> >(__is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<std::__1::__wrap_iter<TIntermNode* const*> >::value&&is_constructible<TIntermNode*, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, std::__1::__wrap_iter<TIntermNode**> >::type std::__1::vector<TIntermNode*, glslang::pool_allocator<TIntermNode*> >::insert<std::__1::__wrap_iter<TIntermNode* const*> >(std::__1::__wrap_iter<TIntermNode* const*>, __is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<std::__1::__wrap_iter<angle::pp::Token const*> >::value&&is_constructible<angle::pp::Token, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, std::__1::__wrap_iter<angle::pp::Token*> >::type std::__1::vector<angle::pp::Token, std::__1::allocator<angle::pp::Token> >::insert<std::__1::__wrap_iter<angle::pp::Token const*> >(std::__1::__wrap_iter<angle::pp::Token const*>, __is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<std::__1::__wrap_iter<angle::pp::Token const*> >::value&&is_constructible<angle::pp::Token, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, void>::type std::__1::vector<angle::pp::Token, std::__1::allocator<angle::pp::Token> >::assign<std::__1::__wrap_iter<angle::pp::Token const*> >(__is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<std::__1::__wrap_iter<gl::LinkedUniform*> >::value&&is_constructible<gl::LinkedUniform, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, std::__1::__wrap_iter<gl::LinkedUniform*> >::type std::__1::vector<gl::LinkedUniform, std::__1::allocator<gl::LinkedUniform> >::insert<std::__1::__wrap_iter<gl::LinkedUniform*> >(std::__1::__wrap_iter<gl::LinkedUniform const*>, __is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<std::__1::__wrap_iter<gl::UnusedUniform*> >::value&&is_constructible<gl::UnusedUniform, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, std::__1::__wrap_iter<gl::UnusedUniform*> >::type std::__1::vector<gl::UnusedUniform, std::__1::allocator<gl::UnusedUniform> >::insert<std::__1::__wrap_iter<gl::UnusedUniform*> >(std::__1::__wrap_iter<gl::UnusedUniform const*>, __is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<std::__1::__wrap_iter<glslang::TArraySize*> >::value&&is_constructible<glslang::TArraySize, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, std::__1::__wrap_iter<glslang::TArraySize*> >::type std::__1::vector<glslang::TArraySize, glslang::pool_allocator<glslang::TArraySize> >::insert<std::__1::__wrap_iter<glslang::TArraySize*> >(std::__1::__wrap_iter<glslang::TArraySize const*>, __is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<std::__1::__wrap_iter<rx::vk::CommandGraphNode**> >::value&&is_constructible<rx::vk::CommandGraphNode*, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, std::__1::__wrap_iter<rx::vk::CommandGraphNode**> >::type std::__1::vector<rx::vk::CommandGraphNode*, std::__1::allocator<rx::vk::CommandGraphNode*> >::insert<std::__1::__wrap_iter<rx::vk::CommandGraphNode**> >(std::__1::__wrap_iter<rx::vk::CommandGraphNode* const*>, __is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<std::__1::__wrap_iter<sh::InterfaceBlock*> >::value&&is_constructible<sh::InterfaceBlock, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, std::__1::__wrap_iter<sh::InterfaceBlock*> >::type std::__1::vector<sh::InterfaceBlock, std::__1::allocator<sh::InterfaceBlock> >::insert<std::__1::__wrap_iter<sh::InterfaceBlock*> >(std::__1::__wrap_iter<sh::InterfaceBlock const*>, __is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<std::__1::__wrap_iter<sh::TIntermNode* const*> >::value&&is_constructible<sh::TIntermNode*, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, std::__1::__wrap_iter<sh::TIntermNode**> >::type std::__1::vector<sh::TIntermNode*, pool_allocator<sh::TIntermNode*> >::insert<std::__1::__wrap_iter<sh::TIntermNode* const*> >(std::__1::__wrap_iter<sh::TIntermNode* const*>, __is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<std::__1::__wrap_iter<sh::TIntermNode**> >::value&&is_constructible<sh::TIntermNode*, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, std::__1::__wrap_iter<sh::TIntermNode**> >::type std::__1::vector<sh::TIntermNode*, pool_allocator<sh::TIntermNode*> >::insert<std::__1::__wrap_iter<sh::TIntermNode**> >(std::__1::__wrap_iter<sh::TIntermNode* const*>, __is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<std::__1::__wrap_iter<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*> >::value&&is_constructible<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, std::__1::__wrap_iter<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*> >::type std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::insert<std::__1::__wrap_iter<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*> >(std::__1::__wrap_iter<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const*>, __is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<std::__1::__wrap_iter<unsigned int const*> >::value&&is_constructible<unsigned int, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, std::__1::__wrap_iter<unsigned int*> >::type std::__1::vector<unsigned int, pool_allocator<unsigned int> >::insert<std::__1::__wrap_iter<unsigned int const*> >(std::__1::__wrap_iter<unsigned int const*>, __is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<std::__1::__wrap_iter<unsigned int const*> >::value&&is_constructible<unsigned int, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, void>::type std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::assign<std::__1::__wrap_iter<unsigned int const*> >(__is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*>::value&&is_constructible<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, void>::type std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::assign<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >*>(__is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<std::__1::move_iterator<std::__1::__wrap_iter<TIntermNode**> > >::value&&is_constructible<TIntermNode*, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, void>::type std::__1::vector<TIntermNode*, glslang::pool_allocator<TIntermNode*> >::assign<std::__1::move_iterator<std::__1::__wrap_iter<TIntermNode**> > >(__is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*>::value&&is_constructible<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, void>::type std::__1::vector<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::assign<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >*>(__is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<unsigned char*>::value&&is_constructible<unsigned char, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, void>::type std::__1::vector<unsigned char, glslang::pool_allocator<unsigned char> >::assign<unsigned char*>(__is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<unsigned int*>::value&&is_constructible<unsigned int, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, void>::type std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::assign<unsigned int*>(__is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<unsigned long*>::value&&is_constructible<unsigned long, std::__1::iterator_traits<__is_forward_iterator>::reference>::value, void>::type std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::assign<unsigned long*>(__is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<wchar_t const*>::value, void>::type std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__init<wchar_t const*>(__is_forward_iterator, __is_forward_iterator)
std::__1::enable_if<__is_forward_iterator<wchar_t*>::value, void>::type std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >::__init<wchar_t*>(__is_forward_iterator, __is_forward_iterator)
std::__1::error_category::default_error_condition(int) const
std::__1::error_category::equivalent(int, std::__1::error_condition const&) const
std::__1::error_category::equivalent(std::__1::error_code const&, int) const
std::__1::error_category::~error_category()
std::__1::function<void (int, char const*)>::swap(std::__1::function<void (int, char const*)>&)
std::__1::function<void (int, char const*, char const*)>::swap(std::__1::function<void (int, char const*, char const*)>&)
std::__1::function<void (int, glslang::TVector<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > > const&)>::swap(std::__1::function<void (int, glslang::TVector<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > > const&)>&)
std::__1::function<void (int, int, bool, int, char const*)>::swap(std::__1::function<void (int, int, bool, int, char const*)>&)
std::__1::function<void (int, int, char const*)>::swap(std::__1::function<void (int, int, char const*)>&)
std::__1::init_am_pm()::am_pm
std::__1::init_months()::months
std::__1::init_wam_pm()::am_pm
std::__1::init_weeks()::weeks
std::__1::init_wmonths()::months
std::__1::init_wweeks()::weeks
std::__1::ios_base::Init::Init()
std::__1::ios_base::Init::~Init()
std::__1::ios_base::clear(unsigned int)
std::__1::ios_base::failure::~failure()
std::__1::ios_base::getloc() const
std::__1::ios_base::imbue(std::__1::locale const&)
std::__1::ios_base::init(void*)
std::__1::ios_base::~ios_base()
std::__1::iostream_category()::s
std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > std::__1::num_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::__do_get_floating_point<double>(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, unsigned int&, double&) const
std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > std::__1::num_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::__do_get_floating_point<float>(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, unsigned int&, float&) const
std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > std::__1::num_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::__do_get_floating_point<long double>(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, unsigned int&, long double&) const
std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > std::__1::num_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::__do_get_signed<long long>(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, unsigned int&, long long&) const
std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > std::__1::num_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::__do_get_signed<long>(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, unsigned int&, long&) const
std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > std::__1::num_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::__do_get_unsigned<unsigned int>(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, unsigned int&, unsigned int&) const
std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > std::__1::num_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::__do_get_unsigned<unsigned long long>(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, unsigned int&, unsigned long long&) const
std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > std::__1::num_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::__do_get_unsigned<unsigned long>(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, unsigned int&, unsigned long&) const
std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > std::__1::num_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::__do_get_unsigned<unsigned short>(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, unsigned int&, unsigned short&) const
std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > std::__1::num_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::__do_get_floating_point<double>(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, unsigned int&, double&) const
std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > std::__1::num_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::__do_get_floating_point<float>(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, unsigned int&, float&) const
std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > std::__1::num_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::__do_get_floating_point<long double>(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, unsigned int&, long double&) const
std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > std::__1::num_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::__do_get_signed<long long>(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, unsigned int&, long long&) const
std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > std::__1::num_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::__do_get_signed<long>(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, unsigned int&, long&) const
std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > std::__1::num_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::__do_get_unsigned<unsigned int>(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, unsigned int&, unsigned int&) const
std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > std::__1::num_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::__do_get_unsigned<unsigned long long>(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, unsigned int&, unsigned long long&) const
std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > std::__1::num_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::__do_get_unsigned<unsigned long>(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, unsigned int&, unsigned long&) const
std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > std::__1::num_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::__do_get_unsigned<unsigned short>(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, unsigned int&, unsigned short&) const
std::__1::locale::__global()
std::__1::locale::__global()::g
std::__1::locale::__imp::__imp(unsigned long)
std::__1::locale::__imp::make_classic()::buf
std::__1::locale::__imp::make_global()::buf
std::__1::locale::__imp::~__imp()
std::__1::locale::classic()
std::__1::locale::classic()::c
std::__1::locale::facet::__on_zero_shared()
std::__1::locale::facet::~facet()
std::__1::locale::id::__init()
std::__1::locale::id::__next_id
std::__1::locale::locale()
std::__1::locale::locale(std::__1::locale const&)
std::__1::locale::operator=(std::__1::locale const&)
std::__1::locale::use_facet(std::__1::locale::id&) const
std::__1::locale::~locale()
std::__1::map<_XDisplay*, egl::Display*, std::__1::less<_XDisplay*>, std::__1::allocator<std::__1::pair<_XDisplay* const, egl::Display*> > >::~map()
std::__1::map<egl::Device*, egl::Display*, std::__1::less<egl::Device*>, std::__1::allocator<std::__1::pair<egl::Device* const, egl::Display*> > >::~map()
std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, gl::ExtensionInfo, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, gl::ExtensionInfo> > >::~map()
std::__1::map<unsigned int, rx::nativegl::InternalFormatInfo, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, rx::nativegl::InternalFormatInfo> > >::~map()
std::__1::map<unsigned long, egl::Surface*, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<unsigned long const, egl::Surface*> > >::~map()
std::__1::mb_cerr
std::__1::mb_cin
std::__1::mb_cout
std::__1::mb_wcerr
std::__1::mb_wcin
std::__1::mb_wcout
std::__1::messages<char>::do_close(long) const
std::__1::messages<char>::do_get(long, int, int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
std::__1::messages<char>::do_open(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::locale const&) const
std::__1::messages<char>::id
std::__1::messages<char>::~messages()
std::__1::messages<wchar_t>::do_close(long) const
std::__1::messages<wchar_t>::do_get(long, int, int, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> > const&) const
std::__1::messages<wchar_t>::do_open(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::locale const&) const
std::__1::messages<wchar_t>::id
std::__1::messages<wchar_t>::~messages()
std::__1::money_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::__do_get(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >&, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, bool, std::__1::locale const&, unsigned int, unsigned int&, bool&, std::__1::ctype<char> const&, std::__1::unique_ptr<char, void (*)(void*)>&, char*&, char*)
std::__1::money_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::do_get(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, bool, std::__1::ios_base&, unsigned int&, long double&) const
std::__1::money_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::do_get(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, bool, std::__1::ios_base&, unsigned int&, long double&) const::__src
std::__1::money_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::do_get(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, bool, std::__1::ios_base&, unsigned int&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&) const
std::__1::money_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::id
std::__1::money_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::~money_get()
std::__1::money_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::__do_get(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >&, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, bool, std::__1::locale const&, unsigned int, unsigned int&, bool&, std::__1::ctype<wchar_t> const&, std::__1::unique_ptr<wchar_t, void (*)(void*)>&, wchar_t*&, wchar_t*)
std::__1::money_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_get(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, bool, std::__1::ios_base&, unsigned int&, long double&) const
std::__1::money_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_get(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, bool, std::__1::ios_base&, unsigned int&, long double&) const::__src
std::__1::money_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_get(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, bool, std::__1::ios_base&, unsigned int&, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> >&) const
std::__1::money_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::id
std::__1::money_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::~money_get()
std::__1::money_put<char, std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > >::do_put(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, bool, std::__1::ios_base&, char, long double) const
std::__1::money_put<char, std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > >::do_put(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, bool, std::__1::ios_base&, char, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
std::__1::money_put<char, std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > >::id
std::__1::money_put<char, std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > >::~money_put()
std::__1::money_put<wchar_t, std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_put(std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, bool, std::__1::ios_base&, wchar_t, long double) const
std::__1::money_put<wchar_t, std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_put(std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, bool, std::__1::ios_base&, wchar_t, std::__1::basic_string<wchar_t, std::__1::char_traits<wchar_t>, std::__1::allocator<wchar_t> > const&) const
std::__1::money_put<wchar_t, std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::id
std::__1::money_put<wchar_t, std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::~money_put()
std::__1::moneypunct<char, false>::do_curr_symbol() const
std::__1::moneypunct<char, false>::do_decimal_point() const
std::__1::moneypunct<char, false>::do_frac_digits() const
std::__1::moneypunct<char, false>::do_grouping() const
std::__1::moneypunct<char, false>::do_neg_format() const
std::__1::moneypunct<char, false>::do_negative_sign() const
std::__1::moneypunct<char, false>::do_pos_format() const
std::__1::moneypunct<char, false>::do_positive_sign() const
std::__1::moneypunct<char, false>::do_thousands_sep() const
std::__1::moneypunct<char, false>::id
std::__1::moneypunct<char, false>::~moneypunct()
std::__1::moneypunct<char, true>::do_curr_symbol() const
std::__1::moneypunct<char, true>::do_decimal_point() const
std::__1::moneypunct<char, true>::do_frac_digits() const
std::__1::moneypunct<char, true>::do_grouping() const
std::__1::moneypunct<char, true>::do_neg_format() const
std::__1::moneypunct<char, true>::do_negative_sign() const
std::__1::moneypunct<char, true>::do_pos_format() const
std::__1::moneypunct<char, true>::do_positive_sign() const
std::__1::moneypunct<char, true>::do_thousands_sep() const
std::__1::moneypunct<char, true>::id
std::__1::moneypunct<char, true>::~moneypunct()
std::__1::moneypunct<wchar_t, false>::do_curr_symbol() const
std::__1::moneypunct<wchar_t, false>::do_decimal_point() const
std::__1::moneypunct<wchar_t, false>::do_frac_digits() const
std::__1::moneypunct<wchar_t, false>::do_grouping() const
std::__1::moneypunct<wchar_t, false>::do_neg_format() const
std::__1::moneypunct<wchar_t, false>::do_negative_sign() const
std::__1::moneypunct<wchar_t, false>::do_pos_format() const
std::__1::moneypunct<wchar_t, false>::do_positive_sign() const
std::__1::moneypunct<wchar_t, false>::do_thousands_sep() const
std::__1::moneypunct<wchar_t, false>::id
std::__1::moneypunct<wchar_t, false>::~moneypunct()
std::__1::moneypunct<wchar_t, true>::do_curr_symbol() const
std::__1::moneypunct<wchar_t, true>::do_decimal_point() const
std::__1::moneypunct<wchar_t, true>::do_frac_digits() const
std::__1::moneypunct<wchar_t, true>::do_grouping() const
std::__1::moneypunct<wchar_t, true>::do_neg_format() const
std::__1::moneypunct<wchar_t, true>::do_negative_sign() const
std::__1::moneypunct<wchar_t, true>::do_pos_format() const
std::__1::moneypunct<wchar_t, true>::do_positive_sign() const
std::__1::moneypunct<wchar_t, true>::do_thousands_sep() const
std::__1::moneypunct<wchar_t, true>::id
std::__1::moneypunct<wchar_t, true>::~moneypunct()
std::__1::mut
std::__1::num_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::do_get(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, unsigned int&, bool&) const
std::__1::num_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::do_get(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, unsigned int&, double&) const
std::__1::num_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::do_get(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, unsigned int&, float&) const
std::__1::num_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::do_get(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, unsigned int&, long double&) const
std::__1::num_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::do_get(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, unsigned int&, long long&) const
std::__1::num_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::do_get(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, unsigned int&, long&) const
std::__1::num_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::do_get(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, unsigned int&, unsigned int&) const
std::__1::num_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::do_get(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, unsigned int&, unsigned long long&) const
std::__1::num_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::do_get(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, unsigned int&, unsigned long&) const
std::__1::num_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::do_get(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, unsigned int&, unsigned short&) const
std::__1::num_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::do_get(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, unsigned int&, void*&) const
std::__1::num_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::id
std::__1::num_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::~num_get()
std::__1::num_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_get(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, unsigned int&, bool&) const
std::__1::num_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_get(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, unsigned int&, double&) const
std::__1::num_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_get(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, unsigned int&, float&) const
std::__1::num_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_get(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, unsigned int&, long double&) const
std::__1::num_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_get(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, unsigned int&, long long&) const
std::__1::num_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_get(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, unsigned int&, long&) const
std::__1::num_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_get(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, unsigned int&, unsigned int&) const
std::__1::num_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_get(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, unsigned int&, unsigned long long&) const
std::__1::num_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_get(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, unsigned int&, unsigned long&) const
std::__1::num_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_get(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, unsigned int&, unsigned short&) const
std::__1::num_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_get(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, unsigned int&, void*&) const
std::__1::num_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::id
std::__1::num_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::~num_get()
std::__1::num_put<char, std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > >::do_put(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, char, bool) const
std::__1::num_put<char, std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > >::do_put(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, char, double) const
std::__1::num_put<char, std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > >::do_put(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, char, long double) const
std::__1::num_put<char, std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > >::do_put(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, char, long long) const
std::__1::num_put<char, std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > >::do_put(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, char, long) const
std::__1::num_put<char, std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > >::do_put(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, char, unsigned long long) const
std::__1::num_put<char, std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > >::do_put(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, char, unsigned long) const
std::__1::num_put<char, std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > >::do_put(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, char, void const*) const
std::__1::num_put<char, std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > >::id
std::__1::num_put<char, std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > >::~num_put()
std::__1::num_put<wchar_t, std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_put(std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, wchar_t, bool) const
std::__1::num_put<wchar_t, std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_put(std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, wchar_t, double) const
std::__1::num_put<wchar_t, std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_put(std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, wchar_t, long double) const
std::__1::num_put<wchar_t, std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_put(std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, wchar_t, long long) const
std::__1::num_put<wchar_t, std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_put(std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, wchar_t, long) const
std::__1::num_put<wchar_t, std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_put(std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, wchar_t, unsigned long long) const
std::__1::num_put<wchar_t, std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_put(std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, wchar_t, unsigned long) const
std::__1::num_put<wchar_t, std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_put(std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, wchar_t, void const*) const
std::__1::num_put<wchar_t, std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::id
std::__1::num_put<wchar_t, std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::~num_put()
std::__1::numpunct<char>::do_decimal_point() const
std::__1::numpunct<char>::do_falsename() const
std::__1::numpunct<char>::do_grouping() const
std::__1::numpunct<char>::do_thousands_sep() const
std::__1::numpunct<char>::do_truename() const
std::__1::numpunct<char>::id
std::__1::numpunct<char>::~numpunct()
std::__1::numpunct<wchar_t>::do_decimal_point() const
std::__1::numpunct<wchar_t>::do_falsename() const
std::__1::numpunct<wchar_t>::do_grouping() const
std::__1::numpunct<wchar_t>::do_thousands_sep() const
std::__1::numpunct<wchar_t>::do_truename() const
std::__1::numpunct<wchar_t>::id
std::__1::numpunct<wchar_t>::~numpunct()
std::__1::numpunct_byname<char>::~numpunct_byname()
std::__1::numpunct_byname<wchar_t>::~numpunct_byname()
std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > std::__1::__pad_and_output<char, std::__1::char_traits<char> >(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, char const*, char const*, char const*, std::__1::ios_base&, char)
std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > std::__1::__pad_and_output<wchar_t, std::__1::char_traits<wchar_t> >(std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, wchar_t const*, wchar_t const*, wchar_t const*, std::__1::ios_base&, wchar_t)
std::__1::pair<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermOperator*>, void*>*>, std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermOperator*>, void*>*> > std::__1::__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermOperator*>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermOperator*>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermOperator*>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermOperator*> > >::__equal_range_multi<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::pair<std::__1::__tree_iterator<sh::EmulatePrecision::TypePair, std::__1::__tree_node<sh::EmulatePrecision::TypePair, void*>*, long>, bool> std::__1::__tree<sh::EmulatePrecision::TypePair, sh::EmulatePrecision::TypePairComparator, std::__1::allocator<sh::EmulatePrecision::TypePair> >::__emplace_unique_key_args<sh::EmulatePrecision::TypePair, sh::EmulatePrecision::TypePair>(sh::EmulatePrecision::TypePair const&, sh::EmulatePrecision::TypePair&&)
std::__1::pair<std::__1::__tree_iterator<sh::ImmutableString, std::__1::__tree_node<sh::ImmutableString, void*>*, long>, bool> std::__1::__tree<sh::ImmutableString, std::__1::less<sh::ImmutableString>, std::__1::allocator<sh::ImmutableString> >::__emplace_unique_key_args<sh::ImmutableString, sh::ImmutableString>(sh::ImmutableString const&, sh::ImmutableString&&)
std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<gl::IndexRangeCache::IndexRangeKey, gl::IndexRange>, std::__1::__tree_node<std::__1::__value_type<gl::IndexRangeCache::IndexRangeKey, gl::IndexRange>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<gl::IndexRangeCache::IndexRangeKey, gl::IndexRange>, std::__1::__map_value_compare<gl::IndexRangeCache::IndexRangeKey, std::__1::__value_type<gl::IndexRangeCache::IndexRangeKey, gl::IndexRange>, std::__1::less<gl::IndexRangeCache::IndexRangeKey>, true>, std::__1::allocator<std::__1::__value_type<gl::IndexRangeCache::IndexRangeKey, gl::IndexRange> > >::__emplace_unique_key_args<gl::IndexRangeCache::IndexRangeKey, std::__1::piecewise_construct_t const&, std::__1::tuple<gl::IndexRangeCache::IndexRangeKey&&>, std::__1::tuple<> >(gl::IndexRangeCache::IndexRangeKey const&, std::__1::piecewise_construct_t const&, std::__1::tuple<gl::IndexRangeCache::IndexRangeKey&&>&&, std::__1::tuple<>&&)
std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<int, glslang::TPpContext::MacroSymbol>, std::__1::__tree_node<std::__1::__value_type<int, glslang::TPpContext::MacroSymbol>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<int, glslang::TPpContext::MacroSymbol>, std::__1::__map_value_compare<int, std::__1::__value_type<int, glslang::TPpContext::MacroSymbol>, std::__1::less<int>, true>, glslang::pool_allocator<std::__1::__value_type<int, glslang::TPpContext::MacroSymbol> > >::__emplace_unique_key_args<int, std::__1::piecewise_construct_t const&, std::__1::tuple<int const&>, std::__1::tuple<> >(int const&, std::__1::piecewise_construct_t const&, std::__1::tuple<int const&>&&, std::__1::tuple<>&&)
std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<sh::ImmutableString, sh::TFunction const*>, std::__1::__tree_node<std::__1::__value_type<sh::ImmutableString, sh::TFunction const*>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<sh::ImmutableString, sh::TFunction const*>, std::__1::__map_value_compare<sh::ImmutableString, std::__1::__value_type<sh::ImmutableString, sh::TFunction const*>, std::__1::less<sh::ImmutableString>, true>, pool_allocator<std::__1::__value_type<sh::ImmutableString, sh::TFunction const*> > >::__emplace_unique_key_args<sh::ImmutableString, std::__1::piecewise_construct_t const&, std::__1::tuple<sh::ImmutableString const&>, std::__1::tuple<> >(sh::ImmutableString const&, std::__1::piecewise_construct_t const&, std::__1::tuple<sh::ImmutableString const&>&&, std::__1::tuple<>&&)
std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<sh::TBasicType, sh::TPrecision>, std::__1::__tree_node<std::__1::__value_type<sh::TBasicType, sh::TPrecision>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<sh::TBasicType, sh::TPrecision>, std::__1::__map_value_compare<sh::TBasicType, std::__1::__value_type<sh::TBasicType, sh::TPrecision>, std::__1::less<sh::TBasicType>, true>, pool_allocator<std::__1::__value_type<sh::TBasicType, sh::TPrecision> > >::__emplace_unique_key_args<sh::TBasicType, std::__1::piecewise_construct_t const&, std::__1::tuple<sh::TBasicType const&>, std::__1::tuple<> >(sh::TBasicType const&, std::__1::piecewise_construct_t const&, std::__1::tuple<sh::TBasicType const&>&&, std::__1::tuple<>&&)
std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TSymbol*>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TSymbol*>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TSymbol*>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TSymbol*>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, true>, glslang::pool_allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::TSymbol*> > >::__emplace_unique_key_args<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const, glslang::TSymbol*> const&>(std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&, std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const, glslang::TSymbol*> const&)
std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, int>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, int>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, int>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, int>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, true>, glslang::pool_allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, int> > >::__emplace_unique_key_args<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&>, std::__1::tuple<> >(std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&, std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&>&&, std::__1::tuple<>&&)
std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, sh::BlockMemberInfo>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, sh::BlockMemberInfo>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, sh::BlockMemberInfo>, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, sh::BlockMemberInfo>, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, sh::BlockMemberInfo> > >::__emplace_unique_key_args<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>, std::__1::tuple<> >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::piecewise_construct_t const&, std::__1::tuple<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>&&, std::__1::tuple<>&&)
std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, rx::nativegl::InternalFormatInfo>, std::__1::__tree_node<std::__1::__value_type<unsigned int, rx::nativegl::InternalFormatInfo>, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<unsigned int, rx::nativegl::InternalFormatInfo>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, rx::nativegl::InternalFormatInfo>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, rx::nativegl::InternalFormatInfo> > >::__emplace_unique_key_args<unsigned int, std::__1::pair<unsigned int, rx::nativegl::InternalFormatInfo> >(unsigned int const&, std::__1::pair<unsigned int, rx::nativegl::InternalFormatInfo>&&)
std::__1::pair<std::__1::__tree_iterator<std::__1::__value_type<unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, void*>*, long>, bool> std::__1::__tree<std::__1::__value_type<unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::__emplace_unique_impl<std::__1::pair<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >(std::__1::pair<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >&&)
std::__1::pair<std::__1::__tree_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, void*>*, long>, bool> std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > > >::__emplace_unique_key_args<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const&)
std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >::pair(std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > > const&)
std::__1::piecewise_construct
std::__1::set<egl::Device*, std::__1::less<egl::Device*>, std::__1::allocator<egl::Device*> >::~set()
std::__1::set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int> >::~set()
std::__1::system_error::__init(std::__1::error_code const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >)
std::__1::system_error::system_error(std::__1::error_code, char const*)
std::__1::system_error::~system_error()
std::__1::time_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::__get_percent(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >&, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, unsigned int&, std::__1::ctype<char> const&) const
std::__1::time_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::__get_white_space(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >&, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, unsigned int&, std::__1::ctype<char> const&) const
std::__1::time_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::do_date_order() const
std::__1::time_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::do_get(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, unsigned int&, tm*, char, char) const
std::__1::time_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::do_get(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, unsigned int&, tm*, char, char) const::__fm
std::__1::time_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::do_get_date(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, unsigned int&, tm*) const
std::__1::time_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::do_get_monthname(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, unsigned int&, tm*) const
std::__1::time_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::do_get_time(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, unsigned int&, tm*) const
std::__1::time_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::do_get_time(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, unsigned int&, tm*) const::__fmt
std::__1::time_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::do_get_weekday(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, unsigned int&, tm*) const
std::__1::time_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::do_get_year(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, unsigned int&, tm*) const
std::__1::time_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::get(std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, unsigned int&, tm*, char const*, char const*) const
std::__1::time_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::id
std::__1::time_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >::~time_get()
std::__1::time_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::__get_percent(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >&, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, unsigned int&, std::__1::ctype<wchar_t> const&) const
std::__1::time_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::__get_white_space(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >&, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, unsigned int&, std::__1::ctype<wchar_t> const&) const
std::__1::time_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_date_order() const
std::__1::time_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_get(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, unsigned int&, tm*, char, char) const
std::__1::time_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_get(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, unsigned int&, tm*, char, char) const::__fm
std::__1::time_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_get_date(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, unsigned int&, tm*) const
std::__1::time_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_get_monthname(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, unsigned int&, tm*) const
std::__1::time_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_get_time(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, unsigned int&, tm*) const
std::__1::time_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_get_time(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, unsigned int&, tm*) const::__fmt
std::__1::time_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_get_weekday(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, unsigned int&, tm*) const
std::__1::time_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_get_year(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, unsigned int&, tm*) const
std::__1::time_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::get(std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, unsigned int&, tm*, wchar_t const*, wchar_t const*) const
std::__1::time_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::id
std::__1::time_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::~time_get()
std::__1::time_put<char, std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > >::do_put(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> >, std::__1::ios_base&, char, tm const*, char, char) const
std::__1::time_put<char, std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > >::id
std::__1::time_put<char, std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > >::~time_put()
std::__1::time_put<wchar_t, std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::do_put(std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> >, std::__1::ios_base&, wchar_t, tm const*, char, char) const
std::__1::time_put<wchar_t, std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::id
std::__1::time_put<wchar_t, std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >::~time_put()
std::__1::to_string(int)
std::__1::to_string(long long)
std::__1::to_string(unsigned int)
std::__1::unordered_map<char const*, int, (anonymous namespace)::str_hash, (anonymous namespace)::str_eq, std::__1::allocator<std::__1::pair<char const* const, int> > >::operator[](char const*&&)
std::__1::unordered_map<glslang::TIntermTyped*, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<glslang::TIntermTyped*>, std::__1::equal_to<glslang::TIntermTyped*>, std::__1::allocator<std::__1::pair<glslang::TIntermTyped* const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::operator[](glslang::TIntermTyped*&&)
std::__1::unordered_map<glslang::TVector<glslang::TTypeLoc> const*, std::__1::vector<int, std::__1::allocator<int> >, std::__1::hash<glslang::TVector<glslang::TTypeLoc> const*>, std::__1::equal_to<glslang::TVector<glslang::TTypeLoc> const*>, std::__1::allocator<std::__1::pair<glslang::TVector<glslang::TTypeLoc> const* const, std::__1::vector<int, std::__1::allocator<int> > > > >::operator[](glslang::TVector<glslang::TTypeLoc> const* const&)
std::__1::unordered_map<glslang::TVector<glslang::TTypeLoc> const*, std::__1::vector<int, std::__1::allocator<int> >, std::__1::hash<glslang::TVector<glslang::TTypeLoc> const*>, std::__1::equal_to<glslang::TVector<glslang::TTypeLoc> const*>, std::__1::allocator<std::__1::pair<glslang::TVector<glslang::TTypeLoc> const* const, std::__1::vector<int, std::__1::allocator<int> > > > >::operator[](glslang::TVector<glslang::TTypeLoc> const*&&)
std::__1::unordered_map<glslang::TVector<glslang::TTypeLoc> const*, unsigned int, std::__1::hash<glslang::TVector<glslang::TTypeLoc> const*>, std::__1::equal_to<glslang::TVector<glslang::TTypeLoc> const*>, std::__1::allocator<std::__1::pair<glslang::TVector<glslang::TTypeLoc> const* const, unsigned int> > >::operator[](glslang::TVector<glslang::TTypeLoc> const* const&)
std::__1::unordered_map<int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::operator[](int&&)
std::__1::unordered_map<int, unsigned int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, unsigned int> > >::operator[](int const&)
std::__1::unordered_map<int, unsigned int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<int const, unsigned int> > >::operator[](int&&)
std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, glslang::TIntermSymbol const*, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, glslang::TIntermSymbol const*> > >::operator[](std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, spv::Function*, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, spv::Function*> > >::operator[](std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&)
std::__1::unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, unsigned int, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, unsigned int> > >::operator[](std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::__1::unordered_map<unsigned int, gl::Buffer*, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, gl::Buffer*> > >::operator[](unsigned int const&)
std::__1::unordered_map<unsigned int, gl::FenceNV*, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, gl::FenceNV*> > >::operator[](unsigned int const&)
std::__1::unordered_map<unsigned int, gl::Framebuffer*, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, gl::Framebuffer*> > >::operator[](unsigned int const&)
std::__1::unordered_map<unsigned int, gl::InternalFormat, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, gl::InternalFormat> > >::operator[](unsigned int const&)
std::__1::unordered_map<unsigned int, gl::InternalFormat, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, gl::InternalFormat> > >::operator[](unsigned int&&)
std::__1::unordered_map<unsigned int, gl::Path*, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, gl::Path*> > >::operator[](unsigned int const&)
std::__1::unordered_map<unsigned int, gl::Program*, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, gl::Program*> > >::operator[](unsigned int const&)
std::__1::unordered_map<unsigned int, gl::ProgramPipeline*, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, gl::ProgramPipeline*> > >::operator[](unsigned int const&)
std::__1::unordered_map<unsigned int, gl::Query*, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, gl::Query*> > >::operator[](unsigned int const&)
std::__1::unordered_map<unsigned int, gl::Renderbuffer*, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, gl::Renderbuffer*> > >::operator[](unsigned int const&)
std::__1::unordered_map<unsigned int, gl::Sampler*, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, gl::Sampler*> > >::operator[](unsigned int const&)
std::__1::unordered_map<unsigned int, gl::Shader*, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, gl::Shader*> > >::operator[](unsigned int const&)
std::__1::unordered_map<unsigned int, gl::Sync*, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, gl::Sync*> > >::operator[](unsigned int const&)
std::__1::unordered_map<unsigned int, gl::Texture*, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, gl::Texture*> > >::operator[](unsigned int const&)
std::__1::unordered_map<unsigned int, gl::TransformFeedback*, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, gl::TransformFeedback*> > >::operator[](unsigned int const&)
std::__1::unordered_map<unsigned int, gl::VertexArray*, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, gl::VertexArray*> > >::operator[](unsigned int const&)
std::__1::unordered_map<unsigned int, std::__1::unordered_map<unsigned int, gl::InternalFormat, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, gl::InternalFormat> > >, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::unordered_map<unsigned int, gl::InternalFormat, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, gl::InternalFormat> > > > > >::operator[](unsigned int const&)
std::__1::unordered_map<unsigned int, std::__1::unordered_map<unsigned int, gl::InternalFormat, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, gl::InternalFormat> > >, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::unordered_map<unsigned int, gl::InternalFormat, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, gl::InternalFormat> > > > > >::operator[](unsigned int&&)
std::__1::unordered_map<unsigned int, std::__1::unordered_map<unsigned int, gl::InternalFormat, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, gl::InternalFormat> > >, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::unordered_map<unsigned int, gl::InternalFormat, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, gl::InternalFormat> > > > > >::~unordered_map()
std::__1::unordered_map<unsigned int, std::__1::vector<spv::Instruction*, std::__1::allocator<spv::Instruction*> >, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::vector<spv::Instruction*, std::__1::allocator<spv::Instruction*> > > > >::operator[](unsigned int const&)
std::__1::unordered_map<unsigned int, std::__1::vector<spv::Instruction*, std::__1::allocator<spv::Instruction*> >, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<unsigned int const, std::__1::vector<spv::Instruction*, std::__1::allocator<spv::Instruction*> > > > >::operator[](unsigned int&&)
std::__1::utf16_to_utf8(unsigned short const*, unsigned short const*, unsigned short const*&, unsigned char*, unsigned char*, unsigned char*&, unsigned long, std::__1::codecvt_mode)
std::__1::utf8_to_ucs4(unsigned char const*, unsigned char const*, unsigned char const*&, unsigned int*, unsigned int*, unsigned int*&, unsigned long, std::__1::codecvt_mode)
std::__1::utf8_to_ucs4_length(unsigned char const*, unsigned char const*, unsigned long, unsigned long, std::__1::codecvt_mode)
std::__1::utf8_to_utf16(unsigned char const*, unsigned char const*, unsigned char const*&, unsigned short*, unsigned short*, unsigned short*&, unsigned long, std::__1::codecvt_mode)
std::__1::utf8_to_utf16_length(unsigned char const*, unsigned char const*, unsigned long, unsigned long, std::__1::codecvt_mode)
std::__1::vector<TIntermNode*, glslang::pool_allocator<TIntermNode*> >::__append(unsigned long)
std::__1::vector<VkDescriptorSet_T*, std::__1::allocator<VkDescriptorSet_T*> >::__append(unsigned long, VkDescriptorSet_T* const&)
std::__1::vector<VkQueueFamilyProperties, std::__1::allocator<VkQueueFamilyProperties> >::__append(unsigned long)
std::__1::vector<angle::BitSetT<8ul, unsigned int, gl::TextureType>, std::__1::allocator<angle::BitSetT<8ul, unsigned int, gl::TextureType> > >::__append(unsigned long)
std::__1::vector<angle::FixedVector<angle::Mat4, 16ul, std::__1::array<angle::Mat4, 16ul> >, std::__1::allocator<angle::FixedVector<angle::Mat4, 16ul, std::__1::array<angle::Mat4, 16ul> > > >::__append(unsigned long)
std::__1::vector<angle::FixedVector<angle::Mat4, 16ul, std::__1::array<angle::Mat4, 16ul> >, std::__1::allocator<angle::FixedVector<angle::Mat4, 16ul, std::__1::array<angle::Mat4, 16ul> > > >::__swap_out_circular_buffer(std::__1::__split_buffer<angle::FixedVector<angle::Mat4, 16ul, std::__1::array<angle::Mat4, 16ul> >, std::__1::allocator<angle::FixedVector<angle::Mat4, 16ul, std::__1::array<angle::Mat4, 16ul> > >&>&)
std::__1::vector<angle::FixedVector<angle::Mat4, 16ul, std::__1::array<angle::Mat4, 16ul> >, std::__1::allocator<angle::FixedVector<angle::Mat4, 16ul, std::__1::array<angle::Mat4, 16ul> > > >::resize(unsigned long)
std::__1::vector<angle::ObserverBinding, std::__1::allocator<angle::ObserverBinding> >::reserve(unsigned long)
std::__1::vector<bool, std::__1::allocator<bool> >::reserve(unsigned long)
std::__1::vector<bool, std::__1::allocator<bool> >::resize(unsigned long, bool)
std::__1::vector<gl::BindingPointer<gl::Sampler>, std::__1::allocator<gl::BindingPointer<gl::Sampler> > >::__append(unsigned long)
std::__1::vector<gl::BindingPointer<gl::Texture>, std::__1::allocator<gl::BindingPointer<gl::Texture> > >::__append(unsigned long)
std::__1::vector<gl::ClipPlaneParameters, std::__1::allocator<gl::ClipPlaneParameters> >::__append(unsigned long, gl::ClipPlaneParameters const&)
std::__1::vector<gl::Debug::Control, std::__1::allocator<gl::Debug::Control> >::vector(std::__1::vector<gl::Debug::Control, std::__1::allocator<gl::Debug::Control> > const&)
std::__1::vector<gl::HandleAllocator::HandleRange, std::__1::allocator<gl::HandleAllocator::HandleRange> >::insert(std::__1::__wrap_iter<gl::HandleAllocator::HandleRange const*>, gl::HandleAllocator::HandleRange&&)
std::__1::vector<gl::ImageUnit, std::__1::allocator<gl::ImageUnit> >::__append(unsigned long)
std::__1::vector<gl::LightParameters, std::__1::allocator<gl::LightParameters> >::__append(unsigned long)
std::__1::vector<gl::OffsetBindingPointer<gl::Buffer>, std::__1::allocator<gl::OffsetBindingPointer<gl::Buffer> > >::__append(unsigned long)
std::__1::vector<gl::Rectangle, std::__1::allocator<gl::Rectangle> >::assign(unsigned long, gl::Rectangle const&)
std::__1::vector<gl::Rectangle, std::__1::allocator<gl::Rectangle> >::reserve(unsigned long)
std::__1::vector<gl::TextureCoordF, std::__1::allocator<gl::TextureCoordF> >::__append(unsigned long)
std::__1::vector<gl::TextureEnvironmentParameters, std::__1::allocator<gl::TextureEnvironmentParameters> >::__append(unsigned long)
std::__1::vector<gl::VariableLocation, std::__1::allocator<gl::VariableLocation> >::__append(unsigned long)
std::__1::vector<gl::VertexAttribCurrentValueData, std::__1::allocator<gl::VertexAttribCurrentValueData> >::__append(unsigned long)
std::__1::vector<glslang::TParameter, glslang::pool_allocator<glslang::TParameter> >::insert(std::__1::__wrap_iter<glslang::TParameter const*>, glslang::TParameter const&)
std::__1::vector<glslang::TPpContext::TokenStream*, glslang::pool_allocator<glslang::TPpContext::TokenStream*> >::__append(unsigned long)
std::__1::vector<glslang::TStorageQualifier, glslang::pool_allocator<glslang::TStorageQualifier> >::__append(unsigned long)
std::__1::vector<glslang::TXfbBuffer, std::__1::allocator<glslang::TXfbBuffer> >::__append(unsigned long)
std::__1::vector<int, pool_allocator<int> >::__append(unsigned long)
std::__1::vector<int, std::__1::allocator<int> >::__append(unsigned long)
std::__1::vector<int, std::__1::allocator<int> >::__append(unsigned long, int const&)
std::__1::vector<rx::LevelInfoGL, std::__1::allocator<rx::LevelInfoGL> >::__append(unsigned long)
std::__1::vector<rx::StateManagerGL::IndexedBufferBinding, std::__1::allocator<rx::StateManagerGL::IndexedBufferBinding> >::__append(unsigned long)
std::__1::vector<rx::WindowSurfaceVk::SwapchainImage, std::__1::allocator<rx::WindowSurfaceVk::SwapchainImage> >::__append(unsigned long)
std::__1::vector<rx::vk::ImageView, std::__1::allocator<rx::vk::ImageView> >::__append(unsigned long)
std::__1::vector<sh::CallDAG::Record, std::__1::allocator<sh::CallDAG::Record> >::__append(unsigned long)
std::__1::vector<sh::InterfaceBlock, std::__1::allocator<sh::InterfaceBlock> >::reserve(unsigned long)
std::__1::vector<sh::TCompiler::FunctionMetadata, std::__1::allocator<sh::TCompiler::FunctionMetadata> >::__append(unsigned long)
std::__1::vector<sh::TIntermNode*, pool_allocator<sh::TIntermNode*> >::insert(std::__1::__wrap_iter<sh::TIntermNode* const*>, sh::TIntermNode*&&)
std::__1::vector<spv::Instruction*, std::__1::allocator<spv::Instruction*> >::__append(unsigned long)
std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const*, glslang::pool_allocator<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const*> >::__append(unsigned long, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > const* const&)
std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::pool_allocator<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > > >::__swap_out_circular_buffer(std::__1::__split_buffer<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::pool_allocator<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >&>&)
std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__append(unsigned long)
std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::reserve(unsigned long)
std::__1::vector<std::__1::locale::facet*, std::__1::__sso_allocator<std::__1::locale::facet*, 28ul> >::__append(unsigned long)
std::__1::vector<std::__1::vector<angle::pp::Token, std::__1::allocator<angle::pp::Token> >, std::__1::allocator<std::__1::vector<angle::pp::Token, std::__1::allocator<angle::pp::Token> > > >::reserve(unsigned long)
std::__1::vector<std::__1::vector<spv::Decoration, std::__1::allocator<spv::Decoration> >, std::__1::allocator<std::__1::vector<spv::Decoration, std::__1::allocator<spv::Decoration> > > >::__append(unsigned long)
std::__1::vector<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::__append(unsigned long)
std::__1::vector<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >, std::__1::allocator<std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > > >::resize(unsigned long)
std::__1::vector<unsigned char, std::__1::allocator<unsigned char> >::__append(unsigned long, unsigned char const&)
std::__1::vector<unsigned int, pool_allocator<unsigned int> >::insert(std::__1::__wrap_iter<unsigned int const*>, unsigned int const&)
std::__1::vector<unsigned int, pool_allocator<unsigned int> >::insert(std::__1::__wrap_iter<unsigned int const*>, unsigned int&&)
std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::__append(unsigned long)
std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::__append(unsigned long, unsigned int const&)
std::__1::wcerr
std::__1::wcin
std::__1::wclog
std::__1::wcout
std::__libcpp_tls_set failure in __cxa_get_globals()
std::__terminate(void (*)())
std::__throw_bad_alloc()
std::__unexpected(void (*)())
std::bad_alloc
std::bad_alloc::bad_alloc()
std::bad_alloc::what() const
std::bad_alloc::~bad_alloc()
std::bad_array_length::~bad_array_length()
std::bad_array_new_length::~bad_array_new_length()
std::bad_cast
std::bad_cast::bad_cast()
std::bad_cast::what() const
std::bad_cast::~bad_cast()
std::bad_exception
std::bad_exception::what() const
std::bad_exception::~bad_exception()
std::domain_error::~domain_error()
std::exception::~exception()
std::get_new_handler()
std::get_terminate()
std::get_unexpected()
std::invalid_argument::~invalid_argument()
std::length_error::~length_error()
std::logic_error::logic_error(char const*)
std::logic_error::what() const
std::logic_error::~logic_error()
std::nothrow
std::out_of_range::~out_of_range()
std::overflow_error::~overflow_error()
std::range_error::~range_error()
std::runtime_error::runtime_error(char const*)
std::runtime_error::runtime_error(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
std::runtime_error::what() const
std::runtime_error::~runtime_error()
std::terminate()
std::type_info::~type_info()
std::uncaught_exception()
std::underflow_error::~underflow_error()
std_validation_str
stderr
stdexcept.cpp
stdin
stdlib_exception.cpp
stdlib_stdexcept.cpp
stdlib_typeinfo.cpp
stdout
storage qualifier isn't supported in compute shaders
storage qualifier not allowed on function parameter
storage qualifier supported in GLSL ES 3.00 and above only
storage qualifier supported in GLSL ES 3.10 only
storage_qualifier
stpcpy
strchr
strcmp
strcpy
stream=
streamAttributes
strerror_r
strftime_l
stride cannot be greater than MAX_VERTEX_ATTRIB_STRIDE.
stride must be between 0 and MAX_VERTEX_ATTRIB_STRIDE.
string literals not supported
string.cpp
string_utils.cpp
strlen
strncat
strncmp
strncpy
strstr
strstream.cpp
strtod_l
strtof_l
strtok
strtol
strtold_l
strtoll_l
strtoul
strtoull_l
struct
struct gl_DepthRangeParameters {
struct-
struct_declaration
struct_declaration_list
struct_declarator
struct_declarator_list
struct_specifier
structure has no fields
structures containing arrays can't be function return values
structures containing arrays may not be declared constant since they cannot be initialized
sub
subgroup op
subgroupAdd
subgroupAll
subgroupAllEqual
subgroupAnd
subgroupAny
subgroupBallot
subgroupBallotBitCount
subgroupBallotBitExtract
subgroupBallotExclusiveBitCount
subgroupBallotFindLSB
subgroupBallotFindMSB
subgroupBallotInclusiveBitCount
subgroupBarrier
subgroupBroadcast
subgroupBroadcastFirst
subgroupClusteredAdd
subgroupClusteredAnd
subgroupClusteredMax
subgroupClusteredMin
subgroupClusteredMul
subgroupClusteredOr
subgroupClusteredXor
subgroupElect
subgroupExclusiveAdd
subgroupExclusiveAnd
subgroupExclusiveMax
subgroupExclusiveMin
subgroupExclusiveMul
subgroupExclusiveOr
subgroupExclusiveXor
subgroupInclusiveAdd
subgroupInclusiveAnd
subgroupInclusiveMax
subgroupInclusiveMin
subgroupInclusiveMul
subgroupInclusiveOr
subgroupInclusiveXor
subgroupInverseBallot
subgroupMax
subgroupMemoryBarrier
subgroupMemoryBarrierBuffer
subgroupMemoryBarrierImage
subgroupMemoryBarrierShared
subgroupMin
subgroupMul
subgroupOr
subgroupQuadBroadcast
subgroupQuadSwapDiagonal
subgroupQuadSwapHorizontal
subgroupQuadSwapVertical
subgroupShuffle
subgroupShuffleDown
subgroupShuffleUp
subgroupShuffleXor
subgroupXor
subgroupcoherent
subpass input
subpassLoadMS
substituting 'mediump'
subtract
subtract second child into first child
superp
supported in GLSL ES 1.00 only
supported in compute shaders only
supported in vertex shaders only
suppress-warnings
swapWithDamage implementation missing.
switch (
switch_statement
switch_statement_list
switch_statement_nonattributed
syntax error
syntax error, unexpected %s
syntax error, unexpected %s, expecting %s
syntax error, unexpected %s, expecting %s or %s
syntax error, unexpected %s, expecting %s or %s or %s
syntax error, unexpected %s, expecting %s or %s or %s or %s
system_error.cpp
system_utils.cpp
system_utils_linux.cpp
t
t6
t7
t8
t>@
t?@
t@@
tA@
tB=
tB@
tC@
tD@
tE@
tN7
tN>
t`7
tan
tanf
tanhf
target 2D texture does not have a valid size at specified level.
target 3D texture does not have a valid size at specified level.
target 3D texture does not have enough layers for the specified Z offset at the specified level.
target cubemap texture does not have a valid size at specified level and face.
target is TRANSFORM_FEEDBACK_BUFFER and transform feedback is currently active.
target is not a 2D texture.
target is not a 3D texture.
target is not a cubemap texture.
target is not a renderbuffer.
target renderbuffer cannot be multisampled.
target-env opengl
target-env vulkan1.0
temp
tempArg
tempReturn
template
terminate_handler unexpectedly returned
terminate_handler unexpectedly threw an exception
terminator_CreateDebugReportCallbackEXT
terminator_CreateDebugUtilsMessengerEXT
terminator_CreateDevice
terminator_CreateDevice: Failed in ICD %s vkCreateDevicecall
terminator_CreateDevice: No vkCreateDevice command exposed by ICD %s
terminator_CreateDisplayModeKHR
terminator_CreateDisplayPlaneSurfaceKHR
terminator_CreateInstance
terminator_CreateInstance: Failed to CreateInstance and find entrypoints with ICD.  Skipping ICD.
terminator_CreateInstance: Failed to CreateInstance in ICD %d.  Skipping ICD.
terminator_CreateInstance: Failed to add ICD %d to ICD trampoline list.
terminator_CreateInstance: ICD "%s" vkEnumerateInstanceVersion returned error. The ICD will be treated as a 1.0 ICD
terminator_CreateSharedSwapchainsKHR
terminator_CreateSwapchainKHR
terminator_CreateXcbSurfaceKHR
terminator_DebugMarkerSetObjectNameEXT
terminator_DebugMarkerSetObjectTagEXT
terminator_DebugReportMessageEXT
terminator_DestroyDebugReportCallbackEXT
terminator_DestroyDebugUtilsMessengerEXT
terminator_DestroyInstance
terminator_DestroySurfaceKHR
terminator_EnumerateDeviceExtensionProperties
terminator_EnumerateDeviceLayerProperties
terminator_EnumerateInstanceExtensionProperties
terminator_EnumerateInstanceLayerProperties
terminator_EnumerateInstanceVersion
terminator_EnumeratePhysicalDeviceGroups
terminator_EnumeratePhysicalDevices
terminator_GetDeviceGroupSurfacePresentModesKHR
terminator_GetDisplayModeProperties2KHR
terminator_GetDisplayModePropertiesKHR
terminator_GetDisplayPlaneCapabilities2KHR
terminator_GetDisplayPlaneCapabilitiesKHR
terminator_GetDisplayPlaneSupportedDisplaysKHR
terminator_GetPhysicalDeviceDisplayPlaneProperties2KHR
terminator_GetPhysicalDeviceDisplayPlanePropertiesKHR
terminator_GetPhysicalDeviceDisplayProperties2KHR
terminator_GetPhysicalDeviceDisplayPropertiesKHR
terminator_GetPhysicalDeviceExternalBufferProperties
terminator_GetPhysicalDeviceExternalFenceProperties
terminator_GetPhysicalDeviceExternalImageFormatPropertiesNV
terminator_GetPhysicalDeviceExternalSemaphoreProperties
terminator_GetPhysicalDeviceFeatures
terminator_GetPhysicalDeviceFeatures2
terminator_GetPhysicalDeviceFormatProperties
terminator_GetPhysicalDeviceFormatProperties2
terminator_GetPhysicalDeviceGeneratedCommandsPropertiesNVX
terminator_GetPhysicalDeviceImageFormatProperties
terminator_GetPhysicalDeviceImageFormatProperties2
terminator_GetPhysicalDeviceMemoryProperties
terminator_GetPhysicalDeviceMemoryProperties2
terminator_GetPhysicalDeviceMultisamplePropertiesEXT
terminator_GetPhysicalDevicePresentRectanglesKHR
terminator_GetPhysicalDeviceProperties
terminator_GetPhysicalDeviceProperties2
terminator_GetPhysicalDeviceQueueFamilyProperties
terminator_GetPhysicalDeviceQueueFamilyProperties2
terminator_GetPhysicalDeviceSparseImageFormatProperties
terminator_GetPhysicalDeviceSparseImageFormatProperties2
terminator_GetPhysicalDeviceSurfaceCapabilities2EXT
terminator_GetPhysicalDeviceSurfaceCapabilities2KHR
terminator_GetPhysicalDeviceSurfaceCapabilitiesKHR
terminator_GetPhysicalDeviceSurfaceFormats2KHR
terminator_GetPhysicalDeviceSurfaceFormatsKHR
terminator_GetPhysicalDeviceSurfacePresentModesKHR
terminator_GetPhysicalDeviceSurfaceSupportKHR
terminator_GetPhysicalDeviceXcbPresentationSupportKHR
terminator_ReleaseDisplayEXT
terminator_SetDebugUtilsObjectNameEXT
terminator_SetDebugUtilsObjectTagEXT
terminator_SubmitDebugUtilsMessageEXT
ternary operator is not allowed for interface blocks
ternary operator is not allowed for opaque types
ternary operator is not allowed for structures or arrays
ternary operator is not allowed for variables with writeonly
ternary operator is not allowed for void
tessellation control
tessellation control barrier() cannot be placed after a return from main()
tessellation control barrier() cannot be placed within flow control
tessellation control barrier() must be in main()
tessellation evaluation
tessellation input array size must be gl_MaxPatchVertices or implicitly sized
tessellation shaders
tessellation-control per-vertex output l-value must be indexed with gl_InvocationID
tested first
tex_cube_sampler
tex_sampler
texcoord
texel
texel offset
texelFetch
texelFetchOffset
texelFetchOffset(0H1C0C1C
texelFetchOffset(0I2C0C2C
texelFetchOffset(0K2C0C1C
texelFetchOffset(0Q1C0C1C
texelFetchOffset(0R2C0C2C
texelFetchOffset(0T2C0C1C
texelFetchOffset(0W1C0C1C
texelFetchOffset(0X2C0C2C
texelFetchOffset(0Z2C0C1C
texture has a surface bound to it.
texture image unit
texture is not the name of an existing texture object.
texture is not the name of an immutable texture object.
texture must be complete if level is non-zero.
texture(0Q1B0B
texture(0c2B0B
texture(0d3B0B
texture-rectangle sampler keyword
texture1DGradARB
texture1DLod
texture1DProj
texture1DProjGradARB
texture1DProjLod
texture2DGradARB
texture2DGradEXT
texture2DGradEXT(0H1B1B1B
texture2DLod
texture2DLod(0H1B0B
texture2DLodEXT
texture2DLodEXT(0H1B0B
texture2DProj
texture2DProjGradARB
texture2DProjGradEXT
texture2DProjGradEXT(0H2B1B1B
texture2DProjGradEXT(0H3B1B1B
texture2DProjLod
texture2DProjLod(0H2B0B
texture2DProjLodEXT
texture2DProjLodEXT(0H2B0B
texture2DRectGradARB
texture2DRectProj
texture2DRectProjGradARB
texture3DGradARB
texture3DLod
texture3DProj
texture3DProjGradARB
texture3DProjLod
textureClamp
textureClampARB
textureCubeGradARB
textureCubeGradEXT
textureCubeGradEXT(0J2B2B2B
textureCubeLod
textureCubeLodEXT
textureFetch
textureFetchOffset
textureGather
textureGatherOffset
textureGatherOffset(0H1B1C0C
textureGatherOffset(0K2B1C0C
textureGatherOffset(0Q1B1C0C
textureGatherOffset(0T2B1C
textureGatherOffset(0T2B1C0C
textureGatherOffset(0W1B1C
textureGatherOffset(0W1B1C0C
textureGatherOffset(0Z2B1C0C
textureGatherOffset(0c1B0B1C
textureGatherOffset(0e2B0B1C
textureGatherOffsets
textureGrad
textureGrad(0S2B
textureGradClamp
textureGradClampARB
textureGradOffset
textureGradOffset(0H1B1B1B1C
textureGradOffset(0I2B2B2B2C
textureGradOffset(0K2B1B1B1C
textureGradOffset(0Q1B1B1B1C
textureGradOffset(0R2B2B2B2C
textureGradOffset(0T2B1B1B1C
textureGradOffset(0W1B1B1B1C
textureGradOffset(0X2B2B2B2C
textureGradOffset(0Z2B1B1B1C
textureGradOffset(0c2B1B1B1C
textureGradOffset(0e3B1B1B1C
textureGradOffsetClamp
textureGradOffsetClampARB
textureLod
textureLodOffset
textureLodOffset(0H1B0B1C
textureLodOffset(0I2B0B2C
textureLodOffset(0K2B0B1C
textureLodOffset(0Q1B0B1C
textureLodOffset(0R2B0B2C
textureLodOffset(0T2B0B1C
textureLodOffset(0W1B0B1C
textureLodOffset(0X2B0B2C
textureLodOffset(0Z2B0B1C
textureLodOffset(0c2B0B1C
textureOffset
textureOffset(0H1B1C0B
textureOffset(0I2B2C0B
textureOffset(0K2B1C0B
textureOffset(0Q1B1C0B
textureOffset(0R2B2C0B
textureOffset(0T2B1C0B
textureOffset(0W1B1C0B
textureOffset(0X2B2C0B
textureOffset(0Z2B1C0B
textureOffset(0c2B1C0B
textureOffsetClamp
textureOffsetClampARB
textureProj
textureProjGrad
textureProjGrad(smoothstep(0B0B3
textureProjGradOffset
textureProjLod
textureProjLod(0H3B0B
textureProjLod(0I3B0B
textureProjLod(0Q2B0B
textureProjLod(0Q3B0B
textureProjLodOffset
textureProjLodOffset(0H2B0B1C
textureProjLodOffset(0H3B0B1C
textureProjLodOffset(0I3B0B2C
textureProjLodOffset(0Q2B0B1C
textureProjLodOffset(0Q3B0B1C
textureProjLodOffset(0R3B0B2C
textureProjLodOffset(0W2B0B1C
textureProjLodOffset(0W3B0B1C
textureProjLodOffset(0X3B0B2C
textureProjLodOffset(0c3B0B1C
textureProjOffset
textureProjOffset(0H2B1C0B
textureProjOffset(0H3B1C0B
textureProjOffset(0I3B2C0B
textureProjOffset(0Q2B1C0B
textureProjOffset(0Q3B1C0B
textureProjOffset(0R3B2C0B
textureProjOffset(0W2B1C0B
textureProjOffset(0W3B1C0B
textureProjOffset(0X3B2C0B
textureProjOffset(0c3B1C0B
textureQueryLevels
textureQueryLod
textureSamples
textureSamples and imageSamples
textureSamples(
textureSize
textureSize(
texture_env_alpha_scale
texture_env_color
texture_env_mode
texture_env_rgb_scale
the  command  would source data beyond the end of the buffer object.
the 'engine' parameter has an unrecognized value
the target is not supported.
there is no such layout identifier for this stage taking an assigned value
thread.cpp
tls.cpp
tls_instance
token pasting (##)
token too long
too complex expressions inside a switch statement
too large for fragment output
too large, must be less than gl_MaxGeometryOutputVertices
too large; see gl_MaxComputeWorkGroupSize
too many arguments
too many storage qualifiers
too many uniforms
trampoline.c
transform feedback qualifier
translation_unit
transpose
triangle order =
triangle_strip
triangles
triangles_adjacency
true
true case
true case is null
trunc
truncf
tv2
type cannot have precision qualifier
type contains double; xfb_offset must be a multiple of 8
type contains half float; xfb_offset must be a multiple of 2
type conversion on return values was not explicitly allowed until version 420
type does not match, or is not convertible to, the function's return type
type must be an array:
type overflows the available 4 components
type requires declaration of default precision qualifier
type_name_list
type_specifier_nonarray
typedef
typeinfo for __cxxabiv1::__class_type_info
typeinfo for __cxxabiv1::__shim_type_info
typeinfo for __cxxabiv1::__si_class_type_info
typeinfo for __cxxabiv1::__vmi_class_type_info
typeinfo for std::__1::__do_message
typeinfo for std::__1::__iostream_category
typeinfo for std::__1::__money_get<char>
typeinfo for std::__1::__money_get<wchar_t>
typeinfo for std::__1::__money_put<char>
typeinfo for std::__1::__money_put<wchar_t>
typeinfo for std::__1::__narrow_to_utf8<32ul>
typeinfo for std::__1::__num_get<char>
typeinfo for std::__1::__num_get<wchar_t>
typeinfo for std::__1::__num_get_base
typeinfo for std::__1::__num_put<char>
typeinfo for std::__1::__num_put<wchar_t>
typeinfo for std::__1::__num_put_base
typeinfo for std::__1::__shared_count
typeinfo for std::__1::__stdinbuf<char>
typeinfo for std::__1::__stdinbuf<wchar_t>
typeinfo for std::__1::__stdoutbuf<char>
typeinfo for std::__1::__stdoutbuf<wchar_t>
typeinfo for std::__1::__time_get_c_storage<char>
typeinfo for std::__1::__time_get_c_storage<wchar_t>
typeinfo for std::__1::__time_put
typeinfo for std::__1::__widen_from_utf8<32ul>
typeinfo for std::__1::basic_ios<char, std::__1::char_traits<char> >
typeinfo for std::__1::basic_ios<wchar_t, std::__1::char_traits<wchar_t> >
typeinfo for std::__1::basic_istream<char, std::__1::char_traits<char> >
typeinfo for std::__1::basic_istream<wchar_t, std::__1::char_traits<wchar_t> >
typeinfo for std::__1::basic_ostream<char, std::__1::char_traits<char> >
typeinfo for std::__1::basic_ostream<wchar_t, std::__1::char_traits<wchar_t> >
typeinfo for std::__1::basic_streambuf<char, std::__1::char_traits<char> >
typeinfo for std::__1::basic_streambuf<wchar_t, std::__1::char_traits<wchar_t> >
typeinfo for std::__1::codecvt<char, char, __mbstate_t>
typeinfo for std::__1::codecvt<char16_t, char, __mbstate_t>
typeinfo for std::__1::codecvt<char32_t, char, __mbstate_t>
typeinfo for std::__1::codecvt<wchar_t, char, __mbstate_t>
typeinfo for std::__1::codecvt_base
typeinfo for std::__1::collate<char>
typeinfo for std::__1::collate<wchar_t>
typeinfo for std::__1::ctype<char>
typeinfo for std::__1::ctype<wchar_t>
typeinfo for std::__1::ctype_base
typeinfo for std::__1::error_category
typeinfo for std::__1::ios_base
typeinfo for std::__1::ios_base::failure
typeinfo for std::__1::locale::__imp
typeinfo for std::__1::locale::facet
typeinfo for std::__1::messages<char>
typeinfo for std::__1::messages<wchar_t>
typeinfo for std::__1::messages_base
typeinfo for std::__1::money_base
typeinfo for std::__1::money_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >
typeinfo for std::__1::money_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >
typeinfo for std::__1::money_put<char, std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > >
typeinfo for std::__1::money_put<wchar_t, std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >
typeinfo for std::__1::moneypunct<char, false>
typeinfo for std::__1::moneypunct<char, true>
typeinfo for std::__1::moneypunct<wchar_t, false>
typeinfo for std::__1::moneypunct<wchar_t, true>
typeinfo for std::__1::num_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >
typeinfo for std::__1::num_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >
typeinfo for std::__1::num_put<char, std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > >
typeinfo for std::__1::num_put<wchar_t, std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >
typeinfo for std::__1::numpunct<char>
typeinfo for std::__1::numpunct<wchar_t>
typeinfo for std::__1::system_error
typeinfo for std::__1::time_base
typeinfo for std::__1::time_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >
typeinfo for std::__1::time_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >
typeinfo for std::__1::time_put<char, std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > >
typeinfo for std::__1::time_put<wchar_t, std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >
typeinfo for std::bad_alloc
typeinfo for std::bad_cast
typeinfo for std::bad_exception
typeinfo for std::exception
typeinfo for std::length_error
typeinfo for std::logic_error
typeinfo for std::out_of_range
typeinfo for std::overflow_error
typeinfo for std::runtime_error
typeinfo for std::type_info
typeinfo name for __cxxabiv1::__class_type_info
typeinfo name for __cxxabiv1::__shim_type_info
typeinfo name for __cxxabiv1::__si_class_type_info
typeinfo name for __cxxabiv1::__vmi_class_type_info
typeinfo name for std::__1::__do_message
typeinfo name for std::__1::__iostream_category
typeinfo name for std::__1::__money_get<char>
typeinfo name for std::__1::__money_get<wchar_t>
typeinfo name for std::__1::__money_put<char>
typeinfo name for std::__1::__money_put<wchar_t>
typeinfo name for std::__1::__narrow_to_utf8<32ul>
typeinfo name for std::__1::__num_get<char>
typeinfo name for std::__1::__num_get<wchar_t>
typeinfo name for std::__1::__num_get_base
typeinfo name for std::__1::__num_put<char>
typeinfo name for std::__1::__num_put<wchar_t>
typeinfo name for std::__1::__num_put_base
typeinfo name for std::__1::__shared_count
typeinfo name for std::__1::__stdinbuf<char>
typeinfo name for std::__1::__stdinbuf<wchar_t>
typeinfo name for std::__1::__stdoutbuf<char>
typeinfo name for std::__1::__stdoutbuf<wchar_t>
typeinfo name for std::__1::__time_get_c_storage<char>
typeinfo name for std::__1::__time_get_c_storage<wchar_t>
typeinfo name for std::__1::__time_put
typeinfo name for std::__1::__widen_from_utf8<32ul>
typeinfo name for std::__1::basic_ios<char, std::__1::char_traits<char> >
typeinfo name for std::__1::basic_ios<wchar_t, std::__1::char_traits<wchar_t> >
typeinfo name for std::__1::basic_istream<char, std::__1::char_traits<char> >
typeinfo name for std::__1::basic_istream<wchar_t, std::__1::char_traits<wchar_t> >
typeinfo name for std::__1::basic_ostream<char, std::__1::char_traits<char> >
typeinfo name for std::__1::basic_ostream<wchar_t, std::__1::char_traits<wchar_t> >
typeinfo name for std::__1::basic_streambuf<char, std::__1::char_traits<char> >
typeinfo name for std::__1::basic_streambuf<wchar_t, std::__1::char_traits<wchar_t> >
typeinfo name for std::__1::codecvt<char, char, __mbstate_t>
typeinfo name for std::__1::codecvt<char16_t, char, __mbstate_t>
typeinfo name for std::__1::codecvt<char32_t, char, __mbstate_t>
typeinfo name for std::__1::codecvt<wchar_t, char, __mbstate_t>
typeinfo name for std::__1::codecvt_base
typeinfo name for std::__1::collate<char>
typeinfo name for std::__1::collate<wchar_t>
typeinfo name for std::__1::ctype<char>
typeinfo name for std::__1::ctype<wchar_t>
typeinfo name for std::__1::ctype_base
typeinfo name for std::__1::error_category
typeinfo name for std::__1::ios_base
typeinfo name for std::__1::ios_base::failure
typeinfo name for std::__1::locale::__imp
typeinfo name for std::__1::locale::facet
typeinfo name for std::__1::messages<char>
typeinfo name for std::__1::messages<wchar_t>
typeinfo name for std::__1::messages_base
typeinfo name for std::__1::money_base
typeinfo name for std::__1::money_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >
typeinfo name for std::__1::money_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >
typeinfo name for std::__1::money_put<char, std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > >
typeinfo name for std::__1::money_put<wchar_t, std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >
typeinfo name for std::__1::moneypunct<char, false>
typeinfo name for std::__1::moneypunct<char, true>
typeinfo name for std::__1::moneypunct<wchar_t, false>
typeinfo name for std::__1::moneypunct<wchar_t, true>
typeinfo name for std::__1::num_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >
typeinfo name for std::__1::num_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >
typeinfo name for std::__1::num_put<char, std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > >
typeinfo name for std::__1::num_put<wchar_t, std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >
typeinfo name for std::__1::numpunct<char>
typeinfo name for std::__1::numpunct<wchar_t>
typeinfo name for std::__1::system_error
typeinfo name for std::__1::time_base
typeinfo name for std::__1::time_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >
typeinfo name for std::__1::time_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >
typeinfo name for std::__1::time_put<char, std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > >
typeinfo name for std::__1::time_put<wchar_t, std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >
typeinfo name for std::bad_alloc
typeinfo name for std::bad_cast
typeinfo name for std::bad_exception
typeinfo name for std::exception
typeinfo name for std::length_error
typeinfo name for std::logic_error
typeinfo name for std::out_of_range
typeinfo name for std::overflow_error
typeinfo name for std::runtime_error
typeinfo name for std::type_info
typeinfo.cpp
types are not allowed in interface blocks
u
u%04x
u)
u16
u3#
u32vec2
u32vec3
u32vec4
u64
u7
u8
uMulExtended
uS>
uT7
uY<
u_multiply_alpha
u_offset
u_scale
u_source_texture
u_source_texture;
u_unmultiply_alpha
uaddCarry
uaddCarry(3D3D3DtextureLod(0Y2B0origin_upper_lef1
ub7
ue/
ue9
ui>
uimage1D
uimage1DArray
uimage2D
uimage2DArray
uimage2DMS
uimage2DMSArray
uimage2DRect
uimage3D
uimageBuffer
uimageCube
uimageCubeArray
uint atomicAdd(coherent volatile inout uint, uint); int atomicAdd(coherent volatile inout  int,  int);uint atomicAdd(coherent volatile inout uint, uint, int, int, int); int atomicAdd(coherent volatile inout  int,  int, int, int, int);uint atomicMin(coherent volatile inout uint, uint); int atomicMin(coherent volatile inout  int,  int);uint atomicMin(coherent volatile inout uint, uint, int, int, int); int atomicMin(coherent volatile inout  int,  int, int, int, int);uint atomicMax(coherent volatile inout uint, uint); int atomicMax(coherent volatile inout  int,  int);uint atomicMax(coherent volatile inout uint, uint, int, int, int); int atomicMax(coherent volatile inout  int,  int, int, int, int);uint atomicAnd(coherent volatile inout uint, uint); int atomicAnd(coherent volatile inout  int,  int);uint atomicAnd(coherent volatile inout uint, uint, int, int, int); int atomicAnd(coherent volatile inout  int,  int, int, int, int);uint atomicOr (coherent volatile inout uint, uint); int atomicOr (coherent volatile inout  int,  int);uint atomicOr (coherent volatile inout uint, uint, int, int, int); int atomicOr (coherent volatile inout  int,  int, int, int, int);uint atomicXor(coherent volatile inout uint, uint); int atomicXor(coherent volatile inout  int,  int);uint atomicXor(coherent volatile inout uint, uint, int, int, int); int atomicXor(coherent volatile inout  int,  int, int, int, int);uint atomicExchange(coherent volatile inout uint, uint); int atomicExchange(coherent volatile inout  int,  int);uint atomicExchange(coherent volatile inout uint, uint, int, int, int); int atomicExchange(coherent volatile inout  int,  int, int, int, int);uint atomicCompSwap(coherent volatile inout uint, uint, uint); int atomicCompSwap(coherent volatile inout  int,  int,  int);uint atomicCompSwap(coherent volatile inout uint, uint, uint, int, int, int, int, int); int atomicCompSwap(coherent volatile inout  int,  int,  int, int, int, int, int, int);uint atomicLoad(coherent volatile in uint, int, int, int); int atomicLoad(coherent volatile in  int, int, int, int);void atomicStore(coherent volatile out uint, uint, int, int, int);void atomicStore(coherent volatile out  int,  int, int, int, int);
uint atomicCounterAdd(atomic_uint, uint);uint atomicCounterSubtract(atomic_uint, uint);uint atomicCounterMin(atomic_uint, uint);uint atomicCounterMax(atomic_uint, uint);uint atomicCounterAnd(atomic_uint, uint);uint atomicCounterOr(atomic_uint, uint);uint atomicCounterXor(atomic_uint, uint);uint atomicCounterExchange(atomic_uint, uint);uint atomicCounterCompSwap(atomic_uint, uint, uint);
uint atomicCounterIncrement(atomic_uint);uint atomicCounterDecrement(atomic_uint);uint atomicCounter(atomic_uint);
uint packSnorm2x16_emu(vec2 v){    #if defined(GL_ARB_shading_language_packing)        return packSnorm2x16(v);    #else        int x = int(round(clamp(v.x, -1.0, 1.0) * 32767.0));        int y = int(round(clamp(v.y, -1.0, 1.0) * 32767.0));        return uint((y << 16) | (x & 0xFFFF));    #endif}
uint packUnorm2x16_emu(vec2 v){    int x = int(round(clamp(v.x, 0.0, 1.0) * 65535.0));    int y = int(round(clamp(v.y, 0.0, 1.0) * 65535.0));    return uint((y << 16) | (x & 0xFFFF));}
uint uaddCarry(highp  uint, highp  uint, out lowp  uint carry);uvec2 uaddCarry(highp uvec2, highp uvec2, out lowp uvec2 carry);uvec3 uaddCarry(highp uvec3, highp uvec3, out lowp uvec3 carry);uvec4 uaddCarry(highp uvec4, highp uvec4, out lowp uvec4 carry); uint usubBorrow(highp  uint, highp  uint, out lowp  uint borrow);uvec2 usubBorrow(highp uvec2, highp uvec2, out lowp uvec2 borrow);uvec3 usubBorrow(highp uvec3, highp uvec3, out lowp uvec3 borrow);uvec4 usubBorrow(highp uvec4, highp uvec4, out lowp uvec4 borrow);void umulExtended(highp  uint, highp  uint, out highp  uint, out highp  uint lsb);void umulExtended(highp uvec2, highp uvec2, out highp uvec2, out highp uvec2 lsb);void umulExtended(highp uvec3, highp uvec3, out highp uvec3, out highp uvec3 lsb);void umulExtended(highp uvec4, highp uvec4, out highp uvec4, out highp uvec4 lsb);void imulExtended(highp   int, highp   int, out highp   int, out highp   int lsb);void imulExtended(highp ivec2, highp ivec2, out highp ivec2, out highp ivec2 lsb);void imulExtended(highp ivec3, highp ivec3, out highp ivec3, out highp ivec3 lsb);void imulExtended(highp ivec4, highp ivec4, out highp ivec4, out highp ivec4 lsb);  int bitfieldReverse(highp   int);ivec2 bitfieldReverse(highp ivec2);ivec3 bitfieldReverse(highp ivec3);ivec4 bitfieldReverse(highp ivec4); uint bitfieldReverse(highp  uint);uvec2 bitfieldReverse(highp uvec2);uvec3 bitfieldReverse(highp uvec3);uvec4 bitfieldReverse(highp uvec4);
uint16BitsToFloat16
uint16BitsToHalf
uint32_t
uint64BitsToDouble
uint64_t atomicMin(coherent volatile inout uint64_t, uint64_t); int64_t atomicMin(coherent volatile inout  int64_t,  int64_t);uint64_t atomicMin(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicMin(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicMax(coherent volatile inout uint64_t, uint64_t); int64_t atomicMax(coherent volatile inout  int64_t,  int64_t);uint64_t atomicMax(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicMax(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicAnd(coherent volatile inout uint64_t, uint64_t); int64_t atomicAnd(coherent volatile inout  int64_t,  int64_t);uint64_t atomicAnd(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicAnd(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicOr (coherent volatile inout uint64_t, uint64_t); int64_t atomicOr (coherent volatile inout  int64_t,  int64_t);uint64_t atomicOr (coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicOr (coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicXor(coherent volatile inout uint64_t, uint64_t); int64_t atomicXor(coherent volatile inout  int64_t,  int64_t);uint64_t atomicXor(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicXor(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicAdd(coherent volatile inout uint64_t, uint64_t); int64_t atomicAdd(coherent volatile inout  int64_t,  int64_t);uint64_t atomicAdd(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicAdd(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicExchange(coherent volatile inout uint64_t, uint64_t); int64_t atomicExchange(coherent volatile inout  int64_t,  int64_t);uint64_t atomicExchange(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicExchange(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicCompSwap(coherent volatile inout uint64_t, uint64_t, uint64_t); int64_t atomicCompSwap(coherent volatile inout  int64_t,  int64_t,  int64_t);uint64_t atomicCompSwap(coherent volatile inout uint64_t, uint64_t, uint64_t, int, int, int, int, int); int64_t atomicCompSwap(coherent volatile inout  int64_t,  int64_t,  int64_t, int, int, int, int, int);uint64_t atomicLoad(coherent volatile in uint64_t, int, int, int); int64_t atomicLoad(coherent volatile in  int64_t, int, int, int);void atomicStore(coherent volatile out uint64_t, uint64_t, int, int, int);void atomicStore(coherent volatile out  int64_t,  int64_t, int, int, int);
uint64_t ballotARB(bool);float readInvocationARB(float, uint);vec2  readInvocationARB(vec2,  uint);vec3  readInvocationARB(vec3,  uint);vec4  readInvocationARB(vec4,  uint);int   readInvocationARB(int,   uint);ivec2 readInvocationARB(ivec2, uint);ivec3 readInvocationARB(ivec3, uint);ivec4 readInvocationARB(ivec4, uint);uint  readInvocationARB(uint,  uint);uvec2 readInvocationARB(uvec2, uint);uvec3 readInvocationARB(uvec3, uint);uvec4 readInvocationARB(uvec4, uint);float readFirstInvocationARB(float);vec2  readFirstInvocationARB(vec2);vec3  readFirstInvocationARB(vec3);vec4  readFirstInvocationARB(vec4);int   readFirstInvocationARB(int);ivec2 readFirstInvocationARB(ivec2);ivec3 readFirstInvocationARB(ivec3);ivec4 readFirstInvocationARB(ivec4);uint  readFirstInvocationARB(uint);uvec2 readFirstInvocationARB(uvec2);uvec3 readFirstInvocationARB(uvec3);uvec4 readFirstInvocationARB(uvec4);
uintBitsToFloat
uintBitsToFloat(
uint_constant(sh::TParseContext*)
umulExtended
umulExtended(0D0D0D0D
umulExtended(1D1D1D1D
umulExtended(2D2D2D2D
umulExtended(3D3D3D3D
un'
unary_expression
unary_operator
undeclared identifier
undeclared identifier declared as invariant
undef
undefined macro in expression not allowed in es profile
undefined operation for structs containing arrays
undefined operation for structs containing samplers
unexpected
unexpected #elif found after #else
unexpected #elif found without a matching #if
unexpected #else found after another #else
unexpected #else found without a matching #if
unexpected #endif found without a matching #if
unexpected '#'
unexpected end of file found in comment
unexpected end of file found in conditional block
unexpected end of file found in directive
unexpected initializer-list type:
unexpected location
unexpected location; end of argument
unexpected location; end of replacement list
unexpected token
unexpected token after conditional expression
unexpected tokens following #ifdef directive - expected a newline
unexpected tokens following directive
unexpected use of
unexpected use of .length()
unexpected_handler unexpectedly returned
ungetc
uniform
uniform block binding greater than MAX_UNIFORM_BUFFER_BINDINGS
uniform bool u_multiply_alpha;
uniform bool u_unmultiply_alpha;
uniform buffer-member align
uniform initializers must be constant
uniform int gl_NumSamples;
uniform lowp int gl_NumSamples;
uniform mat4  gl_ModelViewMatrix;uniform mat4  gl_ProjectionMatrix;uniform mat4  gl_ModelViewProjectionMatrix;uniform mat3  gl_NormalMatrix;uniform mat4  gl_ModelViewMatrixInverse;uniform mat4  gl_ProjectionMatrixInverse;uniform mat4  gl_ModelViewProjectionMatrixInverse;uniform mat4  gl_ModelViewMatrixTranspose;uniform mat4  gl_ProjectionMatrixTranspose;uniform mat4  gl_ModelViewProjectionMatrixTranspose;uniform mat4  gl_ModelViewMatrixInverseTranspose;uniform mat4  gl_ProjectionMatrixInverseTranspose;uniform mat4  gl_ModelViewProjectionMatrixInverseTranspose;uniform float gl_NormalScale;struct gl_PointParameters {float size;float sizeMin;float sizeMax;float fadeThresholdSize;float distanceConstantAttenuation;float distanceLinearAttenuation;float distanceQuadraticAttenuation;};uniform gl_PointParameters gl_Point;struct gl_MaterialParameters {vec4  emission;vec4  ambient;vec4  diffuse;vec4  specular;float shininess;};uniform gl_MaterialParameters  gl_FrontMaterial;uniform gl_MaterialParameters  gl_BackMaterial;struct gl_LightSourceParameters {vec4  ambient;vec4  diffuse;vec4  specular;vec4  position;vec4  halfVector;vec3  spotDirection;float spotExponent;float spotCutoff;float spotCosCutoff;float constantAttenuation;float linearAttenuation;float quadraticAttenuation;};struct gl_LightModelParameters {vec4  ambient;};uniform gl_LightModelParameters  gl_LightModel;struct gl_LightModelProducts {vec4  sceneColor;};uniform gl_LightModelProducts gl_FrontLightModelProduct;uniform gl_LightModelProducts gl_BackLightModelProduct;struct gl_LightProducts {vec4  ambient;vec4  diffuse;vec4  specular;};struct gl_FogParameters {vec4  color;float density;float start;float end;float scale;};uniform gl_FogParameters gl_Fog;
uniform mat4  gl_TextureMatrix[gl_MaxTextureCoords];uniform mat4  gl_TextureMatrixInverse[gl_MaxTextureCoords];uniform mat4  gl_TextureMatrixTranspose[gl_MaxTextureCoords];uniform mat4  gl_TextureMatrixInverseTranspose[gl_MaxTextureCoords];uniform vec4  gl_ClipPlane[gl_MaxClipPlanes];uniform gl_LightSourceParameters  gl_LightSource[gl_MaxLights];uniform gl_LightProducts gl_FrontLightProduct[gl_MaxLights];uniform gl_LightProducts gl_BackLightProduct[gl_MaxLights];uniform vec4  gl_TextureEnvColor[gl_MaxTextureImageUnits];uniform vec4  gl_EyePlaneS[gl_MaxTextureCoords];uniform vec4  gl_EyePlaneT[gl_MaxTextureCoords];uniform vec4  gl_EyePlaneR[gl_MaxTextureCoords];uniform vec4  gl_EyePlaneQ[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneS[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneT[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneR[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneQ[gl_MaxTextureCoords];
uniform uint gl_SubGroupSizeARB;flat in uint     gl_SubGroupInvocationARB;flat in uint64_t gl_SubGroupEqMaskARB;flat in uint64_t gl_SubGroupGeMaskARB;flat in uint64_t gl_SubGroupGtMaskARB;flat in uint64_t gl_SubGroupLeMaskARB;flat in uint64_t gl_SubGroupLtMaskARB;
uniform uint gl_SubGroupSizeARB;in uint     gl_SubGroupInvocationARB;in uint64_t gl_SubGroupEqMaskARB;in uint64_t gl_SubGroupGeMaskARB;in uint64_t gl_SubGroupGtMaskARB;in uint64_t gl_SubGroupLeMaskARB;in uint64_t gl_SubGroupLtMaskARB;
uniform vec2 u_offset;
uniform vec2 u_scale;
uniform/buffer blocks require layout(binding=X)
uniformBlockIndex exceeds active uniform block count.
uniform_type_info_autogen.cpp
union
unit cannot be greater than or equal than MAX_IMAGE_UNITS =
unknown
unknown attribute.
unknown blend equation
unknown block storage
unknown built-in variable
unknown color space conversion standard
unknown geometry shader primitive type
unknown glslang aggregate
unknown glslang binary operation
unknown glslang unary
unknown internal image format
unknown matrix packing
unknown object type.
unknown operation with no arguments
unknown precision qualifier
unknown profile
unknown qualifier
unknown requalification
unknown stage
unknown swizzle selection
unknown type
unknown_ext_chain.c
unpack16
unpack32
unpack8
unpackDouble2x32
unpackFloat2x16
unpackHalf2x16
unpackInt2x16
unpackInt2x32
unpackInt4x16
unpackSnorm2x16
unpackSnorm4x8
unpackUint2x16
unpackUint2x32
unpackUint4x16
unpackUnorm2x16
unpackUnorm4x8
unrecognized layout identifier, or qualifier requires assignment (e.g., binding = 4)
unrecognized pragma
unrecognized token
unsetenv
unsigned
unsigned int gl::CastFromGLintStateValue<unsigned int, bool>(unsigned int, bool)
unsigned int gl::CastFromGLintStateValue<unsigned int, unsigned int>(unsigned int, unsigned int)
unsigned int gl::CastFromStateValue<unsigned int, int>(unsigned int, int)
unsigned int gl::CastFromStateValue<unsigned int, unsigned int>(unsigned int, unsigned int)
unsigned int gl::CastQueryValueTo<unsigned int, float>(unsigned int, float)
unsigned int gl::CastQueryValueTo<unsigned int, int>(unsigned int, int)
unsigned int std::__1::__num_get_unsigned_integral<unsigned int>(char const*, char const*, unsigned int&, int)
unsigned int std::__1::__sort3<bool (*&)(gl::PackedVarying const&, gl::PackedVarying const&), gl::PackedVarying*>(gl::PackedVarying*, gl::PackedVarying*, gl::PackedVarying*, bool (*&)(gl::PackedVarying const&, gl::PackedVarying const&))
unsigned int std::__1::__sort3<bool (*&)(sh::ShaderVariable const&, sh::ShaderVariable const&), sh::Varying*>(sh::Varying*, sh::Varying*, sh::Varying*, bool (*&)(sh::ShaderVariable const&, sh::ShaderVariable const&))
unsigned int std::__1::__sort3<bool (*&)(sh::TIntermTraverser::NodeInsertMultipleEntry const&, sh::TIntermTraverser::NodeInsertMultipleEntry const&), sh::TIntermTraverser::NodeInsertMultipleEntry*>(sh::TIntermTraverser::NodeInsertMultipleEntry*, sh::TIntermTraverser::NodeInsertMultipleEntry*, sh::TIntermTraverser::NodeInsertMultipleEntry*, bool (*&)(sh::TIntermTraverser::NodeInsertMultipleEntry const&, sh::TIntermTraverser::NodeInsertMultipleEntry const&))
unsigned int std::__1::__sort3<egl::ConfigSorter&, egl::Config const**>(egl::Config const**, egl::Config const**, egl::Config const**, egl::ConfigSorter&)
unsigned int std::__1::__sort3<sh::(anonymous namespace)::TVariableInfoComparer&, sh::ShaderVariable*>(sh::ShaderVariable*, sh::ShaderVariable*, sh::ShaderVariable*, sh::(anonymous namespace)::TVariableInfoComparer&)
unsigned int std::__1::__sort3<std::__1::__less<gl::PackedVaryingRegister, gl::PackedVaryingRegister>&, gl::PackedVaryingRegister*>(gl::PackedVaryingRegister*, gl::PackedVaryingRegister*, gl::PackedVaryingRegister*, std::__1::__less<gl::PackedVaryingRegister, gl::PackedVaryingRegister>&)
unsigned int std::__1::__sort4<bool (*&)(gl::PackedVarying const&, gl::PackedVarying const&), gl::PackedVarying*>(gl::PackedVarying*, gl::PackedVarying*, gl::PackedVarying*, gl::PackedVarying*, bool (*&)(gl::PackedVarying const&, gl::PackedVarying const&))
unsigned int std::__1::__sort4<bool (*&)(sh::ShaderVariable const&, sh::ShaderVariable const&), sh::Varying*>(sh::Varying*, sh::Varying*, sh::Varying*, sh::Varying*, bool (*&)(sh::ShaderVariable const&, sh::ShaderVariable const&))
unsigned int std::__1::__sort4<bool (*&)(sh::TIntermTraverser::NodeInsertMultipleEntry const&, sh::TIntermTraverser::NodeInsertMultipleEntry const&), sh::TIntermTraverser::NodeInsertMultipleEntry*>(sh::TIntermTraverser::NodeInsertMultipleEntry*, sh::TIntermTraverser::NodeInsertMultipleEntry*, sh::TIntermTraverser::NodeInsertMultipleEntry*, sh::TIntermTraverser::NodeInsertMultipleEntry*, bool (*&)(sh::TIntermTraverser::NodeInsertMultipleEntry const&, sh::TIntermTraverser::NodeInsertMultipleEntry const&))
unsigned int std::__1::__sort4<egl::ConfigSorter&, egl::Config const**>(egl::Config const**, egl::Config const**, egl::Config const**, egl::Config const**, egl::ConfigSorter&)
unsigned int std::__1::__sort4<sh::(anonymous namespace)::TVariableInfoComparer&, sh::ShaderVariable*>(sh::ShaderVariable*, sh::ShaderVariable*, sh::ShaderVariable*, sh::ShaderVariable*, sh::(anonymous namespace)::TVariableInfoComparer&)
unsigned int std::__1::__sort5<bool (*&)(gl::PackedVarying const&, gl::PackedVarying const&), gl::PackedVarying*>(gl::PackedVarying*, gl::PackedVarying*, gl::PackedVarying*, gl::PackedVarying*, gl::PackedVarying*, bool (*&)(gl::PackedVarying const&, gl::PackedVarying const&))
unsigned int std::__1::__sort5<bool (*&)(sh::ShaderVariable const&, sh::ShaderVariable const&), sh::Varying*>(sh::Varying*, sh::Varying*, sh::Varying*, sh::Varying*, sh::Varying*, bool (*&)(sh::ShaderVariable const&, sh::ShaderVariable const&))
unsigned int std::__1::__sort5<bool (*&)(sh::TIntermTraverser::NodeInsertMultipleEntry const&, sh::TIntermTraverser::NodeInsertMultipleEntry const&), sh::TIntermTraverser::NodeInsertMultipleEntry*>(sh::TIntermTraverser::NodeInsertMultipleEntry*, sh::TIntermTraverser::NodeInsertMultipleEntry*, sh::TIntermTraverser::NodeInsertMultipleEntry*, sh::TIntermTraverser::NodeInsertMultipleEntry*, sh::TIntermTraverser::NodeInsertMultipleEntry*, bool (*&)(sh::TIntermTraverser::NodeInsertMultipleEntry const&, sh::TIntermTraverser::NodeInsertMultipleEntry const&))
unsigned int std::__1::__sort5<egl::ConfigSorter&, egl::Config const**>(egl::Config const**, egl::Config const**, egl::Config const**, egl::Config const**, egl::Config const**, egl::ConfigSorter&)
unsigned int std::__1::__sort5<sh::(anonymous namespace)::TVariableInfoComparer&, sh::ShaderVariable*>(sh::ShaderVariable*, sh::ShaderVariable*, sh::ShaderVariable*, sh::ShaderVariable*, sh::ShaderVariable*, sh::(anonymous namespace)::TVariableInfoComparer&)
unsigned int std::__1::__sort5<std::__1::__less<gl::PackedVaryingRegister, gl::PackedVaryingRegister>&, gl::PackedVaryingRegister*>(gl::PackedVaryingRegister*, gl::PackedVaryingRegister*, gl::PackedVaryingRegister*, gl::PackedVaryingRegister*, gl::PackedVaryingRegister*, std::__1::__less<gl::PackedVaryingRegister, gl::PackedVaryingRegister>&)
unsigned literal
unsigned long gl::CastFromStateValue<unsigned long, unsigned int>(unsigned int, unsigned int)
unsigned long long std::__1::__num_get_unsigned_integral<unsigned long long>(char const*, char const*, unsigned int&, int)
unsigned long std::__1::__num_get_unsigned_integral<unsigned long>(char const*, char const*, unsigned int&, int)
unsigned long std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__count_unique<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) const
unsigned short std::__1::__num_get_unsigned_integral<unsigned short>(char const*, char const*, unsigned int&, int)
unsized
unspecified iostream_category error
unsupported construction
unsupported locale for standard input
unsupported shader version
unsupported type
unsupported type -
unsupported value
unterminated macro invocation
updateTraceEventDuration
usampler1D
usampler1DArray
usampler2D
usampler2DArray
usampler2DMS
usampler2DMSArray
usampler2DRect
usampler3D
usamplerBuffer
usamplerCube
usamplerCubeArray
use-storage-buffer
use-vulkan-memory-model
use_storage_buffer
use_vulkan_memory_model
used at end of comment, but this version does not provide line continuation
used at end of comment; the following line is still part of the comment
useless application of layout qualifier
uselocale
using
using ES precision qualifier keyword
using early_fragment_tests
using future keyword
using future non-square matrix type keyword
using future reserved keyword
using future type keyword
using point mode
using post_depth_coverage
ust is null
usubBorrow
usubBorrow(0D0D0textureGrad(0Y2BtextureLod(0Q1B0smoothstep(3B3B3NSt3__18ios_base7failureE
usubpassInput
usubpassInputMS
utexture1D
utexture1DArray
utexture2D
utexture2DArray
utexture2DMS
utexture2DMSArray
utexture2DRect
utexture3D
utextureBuffer
utextureCube
utextureCubeArray
util.cpp
util_CopyDebugReportCreateInfos
util_CopyDebugUtilsMessengerCreateInfos
util_CreateDebugReportCallbacks
util_CreateDebugUtilsMessengers
util_DebugReportMessage
util_DestroyDebugReportCallbacks
util_DestroyDebugUtilsMessengers
util_FreeDebugReportCreateInfos
util_FreeDebugUtilsMessengerCreateInfos
util_SubmitDebugUtilsMessageEXT
utilities.cpp
utility.cpp
uw>
v
v) {    v = clamp(v, -2.0, 2.0);    v = v * 256.0;    v = sign(v) * floor(abs(v));    return v * 0.00390625;}
v) {    v = clamp(v, -65504.0, 65504.0);
v7
v8
v>>
vP5
vT5
vT>
v_texcoord = a_texcoord * u_scale + u_offset;
v`7
valarray.cpp
valid for GLES with EGL 1.4 and KHR_create_context. Use
validationEGL.cpp
validationES.cpp
validationES1.cpp
validationES2.cpp
validationES3.cpp
validationES31.cpp
value is out of range:
value must be 0 or 1
variable expected
variable index
variable indexing buffer block array
variable indexing fragment shader output array
variable indexing sampler array
variable indexing uniform block array
variable_identifier
variables with qualifier 'const' must be initialized
variant.cpp
varying vec4  gl_Color;varying vec4  gl_SecondaryColor;varying vec4  gl_TexCoord[];varying float gl_FogFragCoord;
vasprintf
vd9
vec2 a_texcoord;
vec2 textureQueryLod(
vec2 unpackHalf2x16(highp uint);
vec2 unpackUnorm2x16_emu(uint u){    float x = float(u & 0xFFFFu) / 65535.0;    float y = float(u >> 16) / 65535.0;    return vec2(x, y);}
vec2 v_texcoord;
vec4
vec4  gl_ClipVertex;out vec4  gl_FrontColor;out vec4  gl_BackColor;out vec4  gl_FrontSecondaryColor;out vec4  gl_BackSecondaryColor;out vec4  gl_TexCoord[];out float gl_FogFragCoord;
vec4  gl_ClipVertex;varying vec4  gl_FrontColor;varying vec4  gl_BackColor;varying vec4  gl_FrontSecondaryColor;varying vec4  gl_BackSecondaryColor;varying vec4  gl_TexCoord[];varying float gl_FogFragCoord;
vec4  gl_FragCoord;bool  gl_FrontFacing;float gl_FragDepth;
vec4 ftransform();
vec4 gl_ClipVertex;vec4 gl_FrontColor;vec4 gl_BackColor;vec4 gl_FrontSecondaryColor;vec4 gl_BackSecondaryColor;vec4 gl_TexCoord[];float gl_FogFragCoord;
vec4 gl_FragColor;
vec4 gl_Position;float gl_PointSize;
vec4 imageLoad(readonly volatile coherent
vec4 subpassLoad
vec4 texture1D(sampler1D, float);vec4 texture1DProj(sampler1D, vec2);vec4 texture1DProj(sampler1D, vec4);vec4 shadow1D(sampler1DShadow, vec3);vec4 shadow2D(sampler2DShadow, vec3);vec4 shadow1DProj(sampler1DShadow, vec4);vec4 shadow2DProj(sampler2DShadow, vec4);vec4 texture2DRect(sampler2DRect, vec2);vec4 texture2DRectProj(sampler2DRect, vec3);vec4 texture2DRectProj(sampler2DRect, vec4);vec4 shadow2DRect(sampler2DRectShadow, vec3);vec4 shadow2DRectProj(sampler2DRectShadow, vec4);
vec4 texture1D(sampler1D, float, float);vec4 texture1DProj(sampler1D, vec2, float);vec4 texture1DProj(sampler1D, vec4, float);vec4 shadow1D(sampler1DShadow, vec3, float);vec4 shadow2D(sampler2DShadow, vec3, float);vec4 shadow1DProj(sampler1DShadow, vec4, float);vec4 shadow2DProj(sampler2DShadow, vec4, float);
vec4 texture1DLod(sampler1D, float, float);vec4 texture1DProjLod(sampler1D, vec2, float);vec4 texture1DProjLod(sampler1D, vec4, float);vec4 shadow1DLod(sampler1DShadow, vec3, float);vec4 shadow2DLod(sampler2DShadow, vec3, float);vec4 shadow1DProjLod(sampler1DShadow, vec4, float);vec4 shadow2DProjLod(sampler2DShadow, vec4, float);vec4 texture1DGradARB(sampler1D, float, float, float);vec4 texture1DProjGradARB(sampler1D, vec2, float, float);vec4 texture1DProjGradARB(sampler1D, vec4, float, float);vec4 texture2DGradARB(sampler2D, vec2, vec2, vec2);vec4 texture2DProjGradARB(sampler2D, vec3, vec2, vec2);vec4 texture2DProjGradARB(sampler2D, vec4, vec2, vec2);vec4 texture3DGradARB(sampler3D, vec3, vec3, vec3);vec4 texture3DProjGradARB(sampler3D, vec4, vec3, vec3);vec4 textureCubeGradARB(samplerCube, vec3, vec3, vec3);vec4 shadow1DGradARB(sampler1DShadow, vec3, float, float);vec4 shadow1DProjGradARB( sampler1DShadow, vec4, float, float);vec4 shadow2DGradARB(sampler2DShadow, vec3, vec2, vec2);vec4 shadow2DProjGradARB( sampler2DShadow, vec4, vec2, vec2);vec4 texture2DRectGradARB(sampler2DRect, vec2, vec2, vec2);vec4 texture2DRectProjGradARB( sampler2DRect, vec3, vec2, vec2);vec4 texture2DRectProjGradARB( sampler2DRect, vec4, vec2, vec2);vec4 shadow2DRectGradARB( sampler2DRectShadow, vec3, vec2, vec2);vec4 shadow2DRectProjGradARB(sampler2DRectShadow, vec4, vec2, vec2);
vec4 texture2D(sampler2D, vec2);vec4 texture2DProj(sampler2D, vec3);vec4 texture2DProj(sampler2D, vec4);vec4 texture3D(sampler3D, vec3);vec4 texture3DProj(sampler3D, vec4);vec4 textureCube(samplerCube, vec3);
vec4 texture2D(sampler2D, vec2, float);vec4 texture2DProj(sampler2D, vec3, float);vec4 texture2DProj(sampler2D, vec4, float);vec4 texture3D(sampler3D, vec3, float);vec4 texture3DProj(sampler3D, vec4, float);vec4 textureCube(samplerCube, vec3, float);
vec4 texture2D(samplerExternalOES, vec2 coord);vec4 texture2DProj(samplerExternalOES, vec3);vec4 texture2DProj(samplerExternalOES, vec4);
vec4 texture2DGradEXT(sampler2D, vec2, vec2, vec2);vec4 texture2DProjGradEXT(sampler2D, vec3, vec2, vec2);vec4 texture2DProjGradEXT(sampler2D, vec4, vec2, vec2);vec4 textureCubeGradEXT(samplerCube, vec3, vec3, vec3);float shadow2DEXT(sampler2DShadow, vec3);float shadow2DProjEXT(sampler2DShadow, vec4);
vec4 texture2DLod(sampler2D, vec2, float);vec4 texture2DProjLod(sampler2D, vec3, float);vec4 texture2DProjLod(sampler2D, vec4, float);vec4 texture3DLod(sampler3D, vec3, float);vec4 texture3DProjLod(sampler3D, vec4, float);vec4 textureCubeLod(samplerCube, vec3, float);
vec4 texture2DLodEXT(sampler2D, vec2, float);vec4 texture2DProjLodEXT(sampler2D, vec3, float);vec4 texture2DProjLodEXT(sampler2D, vec4, float);vec4 textureCubeLodEXT(samplerCube, vec3, float);
vec4 unpackSnorm4x8(highp uint);vec4 unpackUnorm4x8(highp uint);
vector field selection out of range
vector index out of range '%d'
vector scale second child into first child
vector swizzle
vector swizzle (
vector swizzle selection out of range
vector swizzle selectors not from the same set
vector swizzle too long
vector-scale
vector-times-matrix
vector.cpp
verify_meta_layer_comp_layers
verify_meta_layer_comp_layers: Adding meta-layer %s which also contains meta-layer %s
version
version not supported
version number not supported
vertex input arrays
vertex input cannot be further qualified
vertex output block
vertex spacing =
vertex-shader `double` type input
vertex-shader array-of-array output
vertex-shader array-of-struct output
vertex-shader struct output
vertex-shader struct output containing an array
vertex-shader struct output containing structure
vfprintf
viewport
viewportOffsets cannot contain negative values.
viewportYScale
virtual thunk to std::__1::basic_iostream<char, std::__1::char_traits<char> >::~basic_iostream()
virtual thunk to std::__1::basic_istream<char, std::__1::char_traits<char> >::~basic_istream()
virtual thunk to std::__1::basic_istream<wchar_t, std::__1::char_traits<wchar_t> >::~basic_istream()
virtual thunk to std::__1::basic_istringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_istringstream()
virtual thunk to std::__1::basic_ostream<char, std::__1::char_traits<char> >::~basic_ostream()
virtual thunk to std::__1::basic_ostream<wchar_t, std::__1::char_traits<wchar_t> >::~basic_ostream()
virtual thunk to std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_ostringstream()
virtual thunk to std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >::~basic_stringstream()
vkAcquireNextImage2KHR
vkAcquireNextImageKHR
vkAllocateCommandBuffers
vkAllocateDescriptorSets
vkAllocateMemory
vkBeginCommandBuffer
vkBindAccelerationStructureMemoryNVX
vkBindBufferMemory
vkBindBufferMemory2
vkBindBufferMemory2KHR
vkBindImageMemory
vkBindImageMemory2
vkBindImageMemory2KHR
vkCmdBeginConditionalRenderingEXT
vkCmdBeginDebugUtilsLabelEXT
vkCmdBeginQuery
vkCmdBeginRenderPass
vkCmdBeginRenderPass2KHR
vkCmdBindDescriptorSets
vkCmdBindIndexBuffer
vkCmdBindPipeline
vkCmdBindShadingRateImageNV
vkCmdBindVertexBuffers
vkCmdBlitImage
vkCmdBuildAccelerationStructureNVX
vkCmdClearAttachments
vkCmdClearColorImage
vkCmdClearDepthStencilImage
vkCmdCopyAccelerationStructureNVX
vkCmdCopyBuffer
vkCmdCopyBufferToImage
vkCmdCopyImage
vkCmdCopyImageToBuffer
vkCmdCopyQueryPoolResults
vkCmdDebugMarkerBeginEXT
vkCmdDebugMarkerEndEXT
vkCmdDebugMarkerInsertEXT
vkCmdDispatch
vkCmdDispatchBase
vkCmdDispatchBaseKHR
vkCmdDispatchIndirect
vkCmdDraw
vkCmdDrawIndexed
vkCmdDrawIndexedIndirect
vkCmdDrawIndexedIndirectCountAMD
vkCmdDrawIndexedIndirectCountKHR
vkCmdDrawIndirect
vkCmdDrawIndirectCountAMD
vkCmdDrawIndirectCountKHR
vkCmdDrawMeshTasksIndirectCountNV
vkCmdDrawMeshTasksIndirectNV
vkCmdDrawMeshTasksNV
vkCmdEndConditionalRenderingEXT
vkCmdEndDebugUtilsLabelEXT
vkCmdEndQuery
vkCmdEndRenderPass
vkCmdEndRenderPass2KHR
vkCmdExecuteCommands
vkCmdFillBuffer
vkCmdInsertDebugUtilsLabelEXT
vkCmdNextSubpass
vkCmdNextSubpass2KHR
vkCmdPipelineBarrier
vkCmdProcessCommandsNVX
vkCmdPushConstants
vkCmdPushDescriptorSetKHR
vkCmdPushDescriptorSetWithTemplateKHR
vkCmdReserveSpaceForCommandsNVX
vkCmdResetEvent
vkCmdResetQueryPool
vkCmdResolveImage
vkCmdSetBlendConstants
vkCmdSetCheckpointNV
vkCmdSetCoarseSampleOrderNV
vkCmdSetDepthBias
vkCmdSetDepthBounds
vkCmdSetDeviceMask
vkCmdSetDeviceMaskKHR
vkCmdSetDiscardRectangleEXT
vkCmdSetEvent
vkCmdSetExclusiveScissorNV
vkCmdSetLineWidth
vkCmdSetSampleLocationsEXT
vkCmdSetScissor
vkCmdSetStencilCompareMask
vkCmdSetStencilReference
vkCmdSetStencilWriteMask
vkCmdSetViewport
vkCmdSetViewportShadingRatePaletteNV
vkCmdSetViewportWScalingNV
vkCmdTraceRaysNVX
vkCmdUpdateBuffer
vkCmdWaitEvents
vkCmdWriteAccelerationStructurePropertiesNVX
vkCmdWriteBufferMarkerAMD
vkCmdWriteTimestamp
vkCompileDeferredNVX
vkCreateAccelerationStructureNVX
vkCreateBuffer
vkCreateBufferView
vkCreateCommandPool
vkCreateComputePipelines
vkCreateDebugReportCallbackEXT
vkCreateDebugUtilsMessengerEXT
vkCreateDescriptorPool
vkCreateDescriptorSetLayout
vkCreateDescriptorUpdateTemplate
vkCreateDescriptorUpdateTemplateKHR
vkCreateDevice
vkCreateDevice extension %s not available for devices associated with ICD %s
vkCreateDevice:  Failed to add extensions to list
vkCreateDevice:  Failed to allocate application activated layer list of size %d.
vkCreateDevice:  Failed to allocate expanded activated layer list of size %d.
vkCreateDevice:  Failed to create ICD extension list
vkCreateDevice:  Failed to create device chain.
vkCreateDevice:  Failed to validate extensions in list
vkCreateDevice: Emulating handling of VkPhysicalDeviceFeatures2 in pNext chain for ICD "%s"
vkCreateDevice: Emulating handling of VkPhysicalDeviceGroupProperties in pNext chain for ICD "%s"
vkCreateDevice: Emulation failed to create device from device group info
vkCreateDisplayModeKHR
vkCreateDisplayPlaneSurfaceKHR
vkCreateEvent
vkCreateFence
vkCreateFramebuffer
vkCreateGraphicsPipelines
vkCreateImage
vkCreateImageView
vkCreateIndirectCommandsLayoutNVX
vkCreateInstance
vkCreateInstance:  Failed to allocate Loader's full Instance dispatch table.
vkCreateObjectTableNVX
vkCreatePipelineCache
vkCreatePipelineLayout
vkCreateQueryPool
vkCreateRaytracingPipelinesNVX
vkCreateRenderPass
vkCreateRenderPass2KHR
vkCreateSampler
vkCreateSamplerYcbcrConversion
vkCreateSamplerYcbcrConversionKHR
vkCreateSemaphore
vkCreateShaderModule
vkCreateSharedSwapchainsKHR
vkCreateSwapchainKHR
vkCreateValidationCacheEXT
vkCreateXcbSurfaceKHR
vkDebugMarkerSetObjectNameEXT
vkDebugMarkerSetObjectTagEXT
vkDebugReportMessageEXT
vkDestroyAccelerationStructureNVX
vkDestroyBuffer
vkDestroyBufferView
vkDestroyCommandPool
vkDestroyDebugReportCallbackEXT
vkDestroyDebugUtilsMessengerEXT
vkDestroyDescriptorPool
vkDestroyDescriptorSetLayout
vkDestroyDescriptorUpdateTemplate
vkDestroyDescriptorUpdateTemplateKHR
vkDestroyDevice
vkDestroyEvent
vkDestroyFence
vkDestroyFramebuffer
vkDestroyImage
vkDestroyImageView
vkDestroyIndirectCommandsLayoutNVX
vkDestroyInstance
vkDestroyObjectTableNVX
vkDestroyPipeline
vkDestroyPipelineCache
vkDestroyPipelineLayout
vkDestroyQueryPool
vkDestroyRenderPass
vkDestroySampler
vkDestroySamplerYcbcrConversion
vkDestroySamplerYcbcrConversionKHR
vkDestroySemaphore
vkDestroyShaderModule
vkDestroySurfaceKHR
vkDestroySwapchainKHR
vkDestroyValidationCacheEXT
vkDevExtError
vkDeviceWaitIdle
vkDisplayPowerControlEXT
vkEndCommandBuffer
vkEnumerateDeviceExtensionProperties
vkEnumerateDeviceExtensionProperties:  pLayerName is too long or is badly formed
vkEnumerateDeviceLayerProperties
vkEnumerateInstanceExtensionProperties
vkEnumerateInstanceLayerProperties
vkEnumerateInstanceVersion
vkEnumeratePhysicalDeviceGroups
vkEnumeratePhysicalDeviceGroupsKHR
vkEnumeratePhysicalDeviceGroupsKHR: Received NULL pointer for physical device group count return value.
vkEnumeratePhysicalDeviceGroupsKHR: Trimming device group count down by application request from %d to %d physical device groups
vkEnumeratePhysicalDevices
vkEnumeratePhysicalDevices: Received NULL pointer for physical device count return value.
vkEnumeratePhysicalDevices: Trimming device count down by application request from %d to %d physical devices
vkFlushMappedMemoryRanges
vkFreeCommandBuffers
vkFreeDescriptorSets
vkFreeMemory
vkGetAccelerationStructureHandleNVX
vkGetAccelerationStructureMemoryRequirementsNVX
vkGetAccelerationStructureScratchMemoryRequirementsNVX
vkGetBufferMemoryRequirements
vkGetBufferMemoryRequirements2
vkGetBufferMemoryRequirements2KHR
vkGetDescriptorSetLayoutSupport
vkGetDescriptorSetLayoutSupportKHR
vkGetDeviceGroupPeerMemoryFeatures
vkGetDeviceGroupPeerMemoryFeaturesKHR
vkGetDeviceGroupPresentCapabilitiesKHR
vkGetDeviceGroupSurfacePresentModesKHR
vkGetDeviceMemoryCommitment
vkGetDeviceProcAddr
vkGetDeviceQueue
vkGetDeviceQueue2
vkGetDisplayModeProperties2KHR
vkGetDisplayModeProperties2KHR: Emulating call in ICD "%s"
vkGetDisplayModePropertiesKHR
vkGetDisplayPlaneCapabilities2KHR
vkGetDisplayPlaneCapabilities2KHR: Emulating call in ICD "%s"
vkGetDisplayPlaneCapabilitiesKHR
vkGetDisplayPlaneSupportedDisplaysKHR
vkGetEventStatus
vkGetFenceFdKHR
vkGetFenceStatus
vkGetImageMemoryRequirements
vkGetImageMemoryRequirements2
vkGetImageMemoryRequirements2KHR
vkGetImageSparseMemoryRequirements
vkGetImageSparseMemoryRequirements2
vkGetImageSparseMemoryRequirements2KHR
vkGetImageSubresourceLayout
vkGetInstanceProcAddr
vkGetMemoryFdKHR
vkGetMemoryFdPropertiesKHR
vkGetMemoryHostPointerPropertiesEXT
vkGetPastPresentationTimingGOOGLE
vkGetPhysicalDeviceDisplayPlaneProperties2KHR
vkGetPhysicalDeviceDisplayPlaneProperties2KHR: Emulating call in ICD "%s"
vkGetPhysicalDeviceDisplayPlanePropertiesKHR
vkGetPhysicalDeviceDisplayProperties2KHR
vkGetPhysicalDeviceDisplayProperties2KHR: Emulating call in ICD "%s"
vkGetPhysicalDeviceDisplayPropertiesKHR
vkGetPhysicalDeviceExternalBufferProperties
vkGetPhysicalDeviceExternalBufferProperties: Emulating call in ICD "%s"
vkGetPhysicalDeviceExternalBufferProperties: Emulation found unrecognized structure type in pExternalBufferInfo->pNext - this struct will be ignored
vkGetPhysicalDeviceExternalBufferProperties: Emulation found unrecognized structure type in pExternalBufferProperties->pNext - this struct will be ignored
vkGetPhysicalDeviceExternalBufferPropertiesKHR
vkGetPhysicalDeviceExternalFenceProperties
vkGetPhysicalDeviceExternalFenceProperties: Emulating call in ICD "%s"
vkGetPhysicalDeviceExternalFenceProperties: Emulation found unrecognized structure type in pExternalFenceInfo->pNext - this struct will be ignored
vkGetPhysicalDeviceExternalFenceProperties: Emulation found unrecognized structure type in pExternalFenceProperties->pNext - this struct will be ignored
vkGetPhysicalDeviceExternalFencePropertiesKHR
vkGetPhysicalDeviceExternalImageFormatPropertiesNV
vkGetPhysicalDeviceExternalSemaphoreProperties
vkGetPhysicalDeviceExternalSemaphoreProperties: Emulating call in ICD "%s"
vkGetPhysicalDeviceExternalSemaphoreProperties: Emulation found unrecognized structure type in pExternalSemaphoreInfo->pNext - this struct will be ignored
vkGetPhysicalDeviceExternalSemaphoreProperties: Emulation found unrecognized structure type in pExternalSemaphoreProperties->pNext - this struct will be ignored
vkGetPhysicalDeviceExternalSemaphorePropertiesKHR
vkGetPhysicalDeviceFeatures
vkGetPhysicalDeviceFeatures2
vkGetPhysicalDeviceFeatures2: Emulating call in ICD "%s" using vkGetPhysicalDeviceFeatures
vkGetPhysicalDeviceFeatures2: Emulation found unrecognized structure type in pFeatures->pNext - this struct will be ignored
vkGetPhysicalDeviceFeatures2KHR
vkGetPhysicalDeviceFormatProperties
vkGetPhysicalDeviceFormatProperties2
vkGetPhysicalDeviceFormatProperties2: Emulating call in ICD "%s" using vkGetPhysicalDeviceFormatProperties
vkGetPhysicalDeviceFormatProperties2: Emulation found unrecognized structure type in pFormatProperties->pNext - this struct will be ignored
vkGetPhysicalDeviceFormatProperties2KHR
vkGetPhysicalDeviceGeneratedCommandsPropertiesNVX
vkGetPhysicalDeviceImageFormatProperties
vkGetPhysicalDeviceImageFormatProperties2
vkGetPhysicalDeviceImageFormatProperties2: Emulating call in ICD "%s" using vkGetPhysicalDeviceImageFormatProperties
vkGetPhysicalDeviceImageFormatProperties2KHR
vkGetPhysicalDeviceMemoryProperties
vkGetPhysicalDeviceMemoryProperties2
vkGetPhysicalDeviceMemoryProperties2: Emulating call in ICD "%s" using vkGetPhysicalDeviceMemoryProperties
vkGetPhysicalDeviceMemoryProperties2: Emulation found unrecognized structure type in pMemoryProperties->pNext - this struct will be ignored
vkGetPhysicalDeviceMemoryProperties2KHR
vkGetPhysicalDeviceMultisamplePropertiesEXT
vkGetPhysicalDevicePresentRectanglesKHR
vkGetPhysicalDeviceProperties
vkGetPhysicalDeviceProperties2
vkGetPhysicalDeviceProperties2: Emulating call in ICD "%s" using vkGetPhysicalDeviceProperties
vkGetPhysicalDeviceProperties2: Emulation cannot generate unique IDs for struct VkPhysicalDeviceIDProperties - setting IDs to zero instead
vkGetPhysicalDeviceProperties2KHR
vkGetPhysicalDeviceProperties2KHR: Emulation found unrecognized structure type in pProperties->pNext - this struct will be ignored
vkGetPhysicalDeviceQueueFamilyProperties
vkGetPhysicalDeviceQueueFamilyProperties2
vkGetPhysicalDeviceQueueFamilyProperties2: Emulating call in ICD "%s" using vkGetPhysicalDeviceQueueFamilyProperties
vkGetPhysicalDeviceQueueFamilyProperties2: Emulation found unrecognized structure type in pQueueFamilyProperties[%d].pNext - this struct will be ignored
vkGetPhysicalDeviceQueueFamilyProperties2KHR
vkGetPhysicalDeviceSparseImageFormatProperties
vkGetPhysicalDeviceSparseImageFormatProperties2
vkGetPhysicalDeviceSparseImageFormatProperties2: Emulating call in ICD "%s" using vkGetPhysicalDeviceSparseImageFormatProperties
vkGetPhysicalDeviceSparseImageFormatProperties2: Emulation found unrecognized structure type in pFormatInfo->pNext - this struct will be ignored
vkGetPhysicalDeviceSparseImageFormatProperties2: Emulation found unrecognized structure type in pProperties[%d].pNext - this struct will be ignored
vkGetPhysicalDeviceSparseImageFormatProperties2KHR
vkGetPhysicalDeviceSurfaceCapabilities2EXT
vkGetPhysicalDeviceSurfaceCapabilities2EXT: Emulating call in ICD "%s" using vkGetPhysicalDeviceSurfaceCapabilitiesKHR
vkGetPhysicalDeviceSurfaceCapabilities2EXT: Emulation found unrecognized structure type in pSurfaceCapabilities->pNext - this struct will be ignored
vkGetPhysicalDeviceSurfaceCapabilities2KHR
vkGetPhysicalDeviceSurfaceCapabilities2KHR: Emulating call in ICD "%s" using vkGetPhysicalDeviceSurfaceCapabilitiesKHR
vkGetPhysicalDeviceSurfaceCapabilities2KHR: Emulation found unrecognized structure type in pSurfaceCapabilities->pNext - this struct will be ignored
vkGetPhysicalDeviceSurfaceCapabilities2KHR: Emulation found unrecognized structure type in pSurfaceInfo->pNext - this struct will be ignored
vkGetPhysicalDeviceSurfaceCapabilitiesKHR
vkGetPhysicalDeviceSurfaceFormats2KHR
vkGetPhysicalDeviceSurfaceFormats2KHR: Emulating call in ICD "%s" using vkGetPhysicalDeviceSurfaceFormatsKHR
vkGetPhysicalDeviceSurfaceFormats2KHR: Emulation found unrecognized structure type in pSurfaceFormats[%d].pNext - this struct will be ignored
vkGetPhysicalDeviceSurfaceFormats2KHR: Emulation found unrecognized structure type in pSurfaceInfo->pNext - this struct will be ignored
vkGetPhysicalDeviceSurfaceFormatsKHR
vkGetPhysicalDeviceSurfacePresentModesKHR
vkGetPhysicalDeviceSurfaceSupportKHR
vkGetPhysicalDeviceXcbPresentationSupportKHR
vkGetPipelineCacheData
vkGetQueryPoolResults
vkGetQueueCheckpointDataNV
vkGetRaytracingShaderHandlesNVX
vkGetRefreshCycleDurationGOOGLE
vkGetRenderAreaGranularity
vkGetSemaphoreFdKHR
vkGetShaderInfoAMD
vkGetSwapchainCounterEXT
vkGetSwapchainImagesKHR
vkGetSwapchainStatusKHR
vkGetValidationCacheDataEXT
vkImportFenceFdKHR
vkImportSemaphoreFdKHR
vkInvalidateMappedMemoryRanges
vkMapMemory
vkMergePipelineCaches
vkMergeValidationCachesEXT
vkNegotiateLoaderLayerInterfaceVersion
vkPhysDevExtTermin0
vkPhysDevExtTermin1
vkPhysDevExtTermin10
vkPhysDevExtTermin100
vkPhysDevExtTermin101
vkPhysDevExtTermin102
vkPhysDevExtTermin103
vkPhysDevExtTermin104
vkPhysDevExtTermin105
vkPhysDevExtTermin106
vkPhysDevExtTermin107
vkPhysDevExtTermin108
vkPhysDevExtTermin109
vkPhysDevExtTermin11
vkPhysDevExtTermin110
vkPhysDevExtTermin111
vkPhysDevExtTermin112
vkPhysDevExtTermin113
vkPhysDevExtTermin114
vkPhysDevExtTermin115
vkPhysDevExtTermin116
vkPhysDevExtTermin117
vkPhysDevExtTermin118
vkPhysDevExtTermin119
vkPhysDevExtTermin12
vkPhysDevExtTermin120
vkPhysDevExtTermin121
vkPhysDevExtTermin122
vkPhysDevExtTermin123
vkPhysDevExtTermin124
vkPhysDevExtTermin125
vkPhysDevExtTermin126
vkPhysDevExtTermin127
vkPhysDevExtTermin128
vkPhysDevExtTermin129
vkPhysDevExtTermin13
vkPhysDevExtTermin130
vkPhysDevExtTermin131
vkPhysDevExtTermin132
vkPhysDevExtTermin133
vkPhysDevExtTermin134
vkPhysDevExtTermin135
vkPhysDevExtTermin136
vkPhysDevExtTermin137
vkPhysDevExtTermin138
vkPhysDevExtTermin139
vkPhysDevExtTermin14
vkPhysDevExtTermin140
vkPhysDevExtTermin141
vkPhysDevExtTermin142
vkPhysDevExtTermin143
vkPhysDevExtTermin144
vkPhysDevExtTermin145
vkPhysDevExtTermin146
vkPhysDevExtTermin147
vkPhysDevExtTermin148
vkPhysDevExtTermin149
vkPhysDevExtTermin15
vkPhysDevExtTermin150
vkPhysDevExtTermin151
vkPhysDevExtTermin152
vkPhysDevExtTermin153
vkPhysDevExtTermin154
vkPhysDevExtTermin155
vkPhysDevExtTermin156
vkPhysDevExtTermin157
vkPhysDevExtTermin158
vkPhysDevExtTermin159
vkPhysDevExtTermin16
vkPhysDevExtTermin160
vkPhysDevExtTermin161
vkPhysDevExtTermin162
vkPhysDevExtTermin163
vkPhysDevExtTermin164
vkPhysDevExtTermin165
vkPhysDevExtTermin166
vkPhysDevExtTermin167
vkPhysDevExtTermin168
vkPhysDevExtTermin169
vkPhysDevExtTermin17
vkPhysDevExtTermin170
vkPhysDevExtTermin171
vkPhysDevExtTermin172
vkPhysDevExtTermin173
vkPhysDevExtTermin174
vkPhysDevExtTermin175
vkPhysDevExtTermin176
vkPhysDevExtTermin177
vkPhysDevExtTermin178
vkPhysDevExtTermin179
vkPhysDevExtTermin18
vkPhysDevExtTermin180
vkPhysDevExtTermin181
vkPhysDevExtTermin182
vkPhysDevExtTermin183
vkPhysDevExtTermin184
vkPhysDevExtTermin185
vkPhysDevExtTermin186
vkPhysDevExtTermin187
vkPhysDevExtTermin188
vkPhysDevExtTermin189
vkPhysDevExtTermin19
vkPhysDevExtTermin190
vkPhysDevExtTermin191
vkPhysDevExtTermin192
vkPhysDevExtTermin193
vkPhysDevExtTermin194
vkPhysDevExtTermin195
vkPhysDevExtTermin196
vkPhysDevExtTermin197
vkPhysDevExtTermin198
vkPhysDevExtTermin199
vkPhysDevExtTermin2
vkPhysDevExtTermin20
vkPhysDevExtTermin200
vkPhysDevExtTermin201
vkPhysDevExtTermin202
vkPhysDevExtTermin203
vkPhysDevExtTermin204
vkPhysDevExtTermin205
vkPhysDevExtTermin206
vkPhysDevExtTermin207
vkPhysDevExtTermin208
vkPhysDevExtTermin209
vkPhysDevExtTermin21
vkPhysDevExtTermin210
vkPhysDevExtTermin211
vkPhysDevExtTermin212
vkPhysDevExtTermin213
vkPhysDevExtTermin214
vkPhysDevExtTermin215
vkPhysDevExtTermin216
vkPhysDevExtTermin217
vkPhysDevExtTermin218
vkPhysDevExtTermin219
vkPhysDevExtTermin22
vkPhysDevExtTermin220
vkPhysDevExtTermin221
vkPhysDevExtTermin222
vkPhysDevExtTermin223
vkPhysDevExtTermin224
vkPhysDevExtTermin225
vkPhysDevExtTermin226
vkPhysDevExtTermin227
vkPhysDevExtTermin228
vkPhysDevExtTermin229
vkPhysDevExtTermin23
vkPhysDevExtTermin230
vkPhysDevExtTermin231
vkPhysDevExtTermin232
vkPhysDevExtTermin233
vkPhysDevExtTermin234
vkPhysDevExtTermin235
vkPhysDevExtTermin236
vkPhysDevExtTermin237
vkPhysDevExtTermin238
vkPhysDevExtTermin239
vkPhysDevExtTermin24
vkPhysDevExtTermin240
vkPhysDevExtTermin241
vkPhysDevExtTermin242
vkPhysDevExtTermin243
vkPhysDevExtTermin244
vkPhysDevExtTermin245
vkPhysDevExtTermin246
vkPhysDevExtTermin247
vkPhysDevExtTermin248
vkPhysDevExtTermin249
vkPhysDevExtTermin25
vkPhysDevExtTermin26
vkPhysDevExtTermin27
vkPhysDevExtTermin28
vkPhysDevExtTermin29
vkPhysDevExtTermin3
vkPhysDevExtTermin30
vkPhysDevExtTermin31
vkPhysDevExtTermin32
vkPhysDevExtTermin33
vkPhysDevExtTermin34
vkPhysDevExtTermin35
vkPhysDevExtTermin36
vkPhysDevExtTermin37
vkPhysDevExtTermin38
vkPhysDevExtTermin39
vkPhysDevExtTermin4
vkPhysDevExtTermin40
vkPhysDevExtTermin41
vkPhysDevExtTermin42
vkPhysDevExtTermin43
vkPhysDevExtTermin44
vkPhysDevExtTermin45
vkPhysDevExtTermin46
vkPhysDevExtTermin47
vkPhysDevExtTermin48
vkPhysDevExtTermin49
vkPhysDevExtTermin5
vkPhysDevExtTermin50
vkPhysDevExtTermin51
vkPhysDevExtTermin52
vkPhysDevExtTermin53
vkPhysDevExtTermin54
vkPhysDevExtTermin55
vkPhysDevExtTermin56
vkPhysDevExtTermin57
vkPhysDevExtTermin58
vkPhysDevExtTermin59
vkPhysDevExtTermin6
vkPhysDevExtTermin60
vkPhysDevExtTermin61
vkPhysDevExtTermin62
vkPhysDevExtTermin63
vkPhysDevExtTermin64
vkPhysDevExtTermin65
vkPhysDevExtTermin66
vkPhysDevExtTermin67
vkPhysDevExtTermin68
vkPhysDevExtTermin69
vkPhysDevExtTermin7
vkPhysDevExtTermin70
vkPhysDevExtTermin71
vkPhysDevExtTermin72
vkPhysDevExtTermin73
vkPhysDevExtTermin74
vkPhysDevExtTermin75
vkPhysDevExtTermin76
vkPhysDevExtTermin77
vkPhysDevExtTermin78
vkPhysDevExtTermin79
vkPhysDevExtTermin8
vkPhysDevExtTermin80
vkPhysDevExtTermin81
vkPhysDevExtTermin82
vkPhysDevExtTermin83
vkPhysDevExtTermin84
vkPhysDevExtTermin85
vkPhysDevExtTermin86
vkPhysDevExtTermin87
vkPhysDevExtTermin88
vkPhysDevExtTermin89
vkPhysDevExtTermin9
vkPhysDevExtTermin90
vkPhysDevExtTermin91
vkPhysDevExtTermin92
vkPhysDevExtTermin93
vkPhysDevExtTermin94
vkPhysDevExtTermin95
vkPhysDevExtTermin96
vkPhysDevExtTermin97
vkPhysDevExtTermin98
vkPhysDevExtTermin99
vkPhysDevExtTramp0
vkPhysDevExtTramp1
vkPhysDevExtTramp10
vkPhysDevExtTramp100
vkPhysDevExtTramp101
vkPhysDevExtTramp102
vkPhysDevExtTramp103
vkPhysDevExtTramp104
vkPhysDevExtTramp105
vkPhysDevExtTramp106
vkPhysDevExtTramp107
vkPhysDevExtTramp108
vkPhysDevExtTramp109
vkPhysDevExtTramp11
vkPhysDevExtTramp110
vkPhysDevExtTramp111
vkPhysDevExtTramp112
vkPhysDevExtTramp113
vkPhysDevExtTramp114
vkPhysDevExtTramp115
vkPhysDevExtTramp116
vkPhysDevExtTramp117
vkPhysDevExtTramp118
vkPhysDevExtTramp119
vkPhysDevExtTramp12
vkPhysDevExtTramp120
vkPhysDevExtTramp121
vkPhysDevExtTramp122
vkPhysDevExtTramp123
vkPhysDevExtTramp124
vkPhysDevExtTramp125
vkPhysDevExtTramp126
vkPhysDevExtTramp127
vkPhysDevExtTramp128
vkPhysDevExtTramp129
vkPhysDevExtTramp13
vkPhysDevExtTramp130
vkPhysDevExtTramp131
vkPhysDevExtTramp132
vkPhysDevExtTramp133
vkPhysDevExtTramp134
vkPhysDevExtTramp135
vkPhysDevExtTramp136
vkPhysDevExtTramp137
vkPhysDevExtTramp138
vkPhysDevExtTramp139
vkPhysDevExtTramp14
vkPhysDevExtTramp140
vkPhysDevExtTramp141
vkPhysDevExtTramp142
vkPhysDevExtTramp143
vkPhysDevExtTramp144
vkPhysDevExtTramp145
vkPhysDevExtTramp146
vkPhysDevExtTramp147
vkPhysDevExtTramp148
vkPhysDevExtTramp149
vkPhysDevExtTramp15
vkPhysDevExtTramp150
vkPhysDevExtTramp151
vkPhysDevExtTramp152
vkPhysDevExtTramp153
vkPhysDevExtTramp154
vkPhysDevExtTramp155
vkPhysDevExtTramp156
vkPhysDevExtTramp157
vkPhysDevExtTramp158
vkPhysDevExtTramp159
vkPhysDevExtTramp16
vkPhysDevExtTramp160
vkPhysDevExtTramp161
vkPhysDevExtTramp162
vkPhysDevExtTramp163
vkPhysDevExtTramp164
vkPhysDevExtTramp165
vkPhysDevExtTramp166
vkPhysDevExtTramp167
vkPhysDevExtTramp168
vkPhysDevExtTramp169
vkPhysDevExtTramp17
vkPhysDevExtTramp170
vkPhysDevExtTramp171
vkPhysDevExtTramp172
vkPhysDevExtTramp173
vkPhysDevExtTramp174
vkPhysDevExtTramp175
vkPhysDevExtTramp176
vkPhysDevExtTramp177
vkPhysDevExtTramp178
vkPhysDevExtTramp179
vkPhysDevExtTramp18
vkPhysDevExtTramp180
vkPhysDevExtTramp181
vkPhysDevExtTramp182
vkPhysDevExtTramp183
vkPhysDevExtTramp184
vkPhysDevExtTramp185
vkPhysDevExtTramp186
vkPhysDevExtTramp187
vkPhysDevExtTramp188
vkPhysDevExtTramp189
vkPhysDevExtTramp19
vkPhysDevExtTramp190
vkPhysDevExtTramp191
vkPhysDevExtTramp192
vkPhysDevExtTramp193
vkPhysDevExtTramp194
vkPhysDevExtTramp195
vkPhysDevExtTramp196
vkPhysDevExtTramp197
vkPhysDevExtTramp198
vkPhysDevExtTramp199
vkPhysDevExtTramp2
vkPhysDevExtTramp20
vkPhysDevExtTramp200
vkPhysDevExtTramp201
vkPhysDevExtTramp202
vkPhysDevExtTramp203
vkPhysDevExtTramp204
vkPhysDevExtTramp205
vkPhysDevExtTramp206
vkPhysDevExtTramp207
vkPhysDevExtTramp208
vkPhysDevExtTramp209
vkPhysDevExtTramp21
vkPhysDevExtTramp210
vkPhysDevExtTramp211
vkPhysDevExtTramp212
vkPhysDevExtTramp213
vkPhysDevExtTramp214
vkPhysDevExtTramp215
vkPhysDevExtTramp216
vkPhysDevExtTramp217
vkPhysDevExtTramp218
vkPhysDevExtTramp219
vkPhysDevExtTramp22
vkPhysDevExtTramp220
vkPhysDevExtTramp221
vkPhysDevExtTramp222
vkPhysDevExtTramp223
vkPhysDevExtTramp224
vkPhysDevExtTramp225
vkPhysDevExtTramp226
vkPhysDevExtTramp227
vkPhysDevExtTramp228
vkPhysDevExtTramp229
vkPhysDevExtTramp23
vkPhysDevExtTramp230
vkPhysDevExtTramp231
vkPhysDevExtTramp232
vkPhysDevExtTramp233
vkPhysDevExtTramp234
vkPhysDevExtTramp235
vkPhysDevExtTramp236
vkPhysDevExtTramp237
vkPhysDevExtTramp238
vkPhysDevExtTramp239
vkPhysDevExtTramp24
vkPhysDevExtTramp240
vkPhysDevExtTramp241
vkPhysDevExtTramp242
vkPhysDevExtTramp243
vkPhysDevExtTramp244
vkPhysDevExtTramp245
vkPhysDevExtTramp246
vkPhysDevExtTramp247
vkPhysDevExtTramp248
vkPhysDevExtTramp249
vkPhysDevExtTramp25
vkPhysDevExtTramp26
vkPhysDevExtTramp27
vkPhysDevExtTramp28
vkPhysDevExtTramp29
vkPhysDevExtTramp3
vkPhysDevExtTramp30
vkPhysDevExtTramp31
vkPhysDevExtTramp32
vkPhysDevExtTramp33
vkPhysDevExtTramp34
vkPhysDevExtTramp35
vkPhysDevExtTramp36
vkPhysDevExtTramp37
vkPhysDevExtTramp38
vkPhysDevExtTramp39
vkPhysDevExtTramp4
vkPhysDevExtTramp40
vkPhysDevExtTramp41
vkPhysDevExtTramp42
vkPhysDevExtTramp43
vkPhysDevExtTramp44
vkPhysDevExtTramp45
vkPhysDevExtTramp46
vkPhysDevExtTramp47
vkPhysDevExtTramp48
vkPhysDevExtTramp49
vkPhysDevExtTramp5
vkPhysDevExtTramp50
vkPhysDevExtTramp51
vkPhysDevExtTramp52
vkPhysDevExtTramp53
vkPhysDevExtTramp54
vkPhysDevExtTramp55
vkPhysDevExtTramp56
vkPhysDevExtTramp57
vkPhysDevExtTramp58
vkPhysDevExtTramp59
vkPhysDevExtTramp6
vkPhysDevExtTramp60
vkPhysDevExtTramp61
vkPhysDevExtTramp62
vkPhysDevExtTramp63
vkPhysDevExtTramp64
vkPhysDevExtTramp65
vkPhysDevExtTramp66
vkPhysDevExtTramp67
vkPhysDevExtTramp68
vkPhysDevExtTramp69
vkPhysDevExtTramp7
vkPhysDevExtTramp70
vkPhysDevExtTramp71
vkPhysDevExtTramp72
vkPhysDevExtTramp73
vkPhysDevExtTramp74
vkPhysDevExtTramp75
vkPhysDevExtTramp76
vkPhysDevExtTramp77
vkPhysDevExtTramp78
vkPhysDevExtTramp79
vkPhysDevExtTramp8
vkPhysDevExtTramp80
vkPhysDevExtTramp81
vkPhysDevExtTramp82
vkPhysDevExtTramp83
vkPhysDevExtTramp84
vkPhysDevExtTramp85
vkPhysDevExtTramp86
vkPhysDevExtTramp87
vkPhysDevExtTramp88
vkPhysDevExtTramp89
vkPhysDevExtTramp9
vkPhysDevExtTramp90
vkPhysDevExtTramp91
vkPhysDevExtTramp92
vkPhysDevExtTramp93
vkPhysDevExtTramp94
vkPhysDevExtTramp95
vkPhysDevExtTramp96
vkPhysDevExtTramp97
vkPhysDevExtTramp98
vkPhysDevExtTramp99
vkQueueBeginDebugUtilsLabelEXT
vkQueueBindSparse
vkQueueEndDebugUtilsLabelEXT
vkQueueInsertDebugUtilsLabelEXT
vkQueuePresentKHR
vkQueueSubmit
vkQueueWaitIdle
vkRegisterDeviceEventEXT
vkRegisterDisplayEventEXT
vkRegisterObjectsNVX
vkReleaseDisplayEXT
vkResetCommandBuffer
vkResetCommandPool
vkResetDescriptorPool
vkResetEvent
vkResetFences
vkSetDebugUtilsObjectNameEXT
vkSetDebugUtilsObjectTagEXT
vkSetDeviceDispatch
vkSetEvent
vkSetHdrMetadataEXT
vkSetInstanceDispatch
vkSetInstanceDispatch: Can not retrieve Instance dispatch table.
vkSubmitDebugUtilsMessageEXT
vkTrimCommandPool
vkTrimCommandPoolKHR
vkUnmapMemory
vkUnregisterObjectsNVX
vkUpdateDescriptorSetWithTemplate
vkUpdateDescriptorSetWithTemplateKHR
vkUpdateDescriptorSets
vkWaitForFences
vk_cache_utils.cpp
vk_caps_utils.cpp
vk_format_table_autogen.cpp
vk_format_utils.cpp
vk_helpers.cpp
vk_icdGetInstanceProcAddr
vk_icdGetPhysicalDeviceProcAddr
vk_icdNegotiateLoaderICDInterfaceVersion
vk_internal_shaders.cpp
vk_internal_shaders_autogen.cpp
vk_layerGetPhysicalDeviceProcAddr
vk_mandatory_format_support_table_autogen.cpp
vk_string_validate
vk_utils.cpp
vkdev_ext0
vkdev_ext1
vkdev_ext10
vkdev_ext100
vkdev_ext101
vkdev_ext102
vkdev_ext103
vkdev_ext104
vkdev_ext105
vkdev_ext106
vkdev_ext107
vkdev_ext108
vkdev_ext109
vkdev_ext11
vkdev_ext110
vkdev_ext111
vkdev_ext112
vkdev_ext113
vkdev_ext114
vkdev_ext115
vkdev_ext116
vkdev_ext117
vkdev_ext118
vkdev_ext119
vkdev_ext12
vkdev_ext120
vkdev_ext121
vkdev_ext122
vkdev_ext123
vkdev_ext124
vkdev_ext125
vkdev_ext126
vkdev_ext127
vkdev_ext128
vkdev_ext129
vkdev_ext13
vkdev_ext130
vkdev_ext131
vkdev_ext132
vkdev_ext133
vkdev_ext134
vkdev_ext135
vkdev_ext136
vkdev_ext137
vkdev_ext138
vkdev_ext139
vkdev_ext14
vkdev_ext140
vkdev_ext141
vkdev_ext142
vkdev_ext143
vkdev_ext144
vkdev_ext145
vkdev_ext146
vkdev_ext147
vkdev_ext148
vkdev_ext149
vkdev_ext15
vkdev_ext150
vkdev_ext151
vkdev_ext152
vkdev_ext153
vkdev_ext154
vkdev_ext155
vkdev_ext156
vkdev_ext157
vkdev_ext158
vkdev_ext159
vkdev_ext16
vkdev_ext160
vkdev_ext161
vkdev_ext162
vkdev_ext163
vkdev_ext164
vkdev_ext165
vkdev_ext166
vkdev_ext167
vkdev_ext168
vkdev_ext169
vkdev_ext17
vkdev_ext170
vkdev_ext171
vkdev_ext172
vkdev_ext173
vkdev_ext174
vkdev_ext175
vkdev_ext176
vkdev_ext177
vkdev_ext178
vkdev_ext179
vkdev_ext18
vkdev_ext180
vkdev_ext181
vkdev_ext182
vkdev_ext183
vkdev_ext184
vkdev_ext185
vkdev_ext186
vkdev_ext187
vkdev_ext188
vkdev_ext189
vkdev_ext19
vkdev_ext190
vkdev_ext191
vkdev_ext192
vkdev_ext193
vkdev_ext194
vkdev_ext195
vkdev_ext196
vkdev_ext197
vkdev_ext198
vkdev_ext199
vkdev_ext2
vkdev_ext20
vkdev_ext200
vkdev_ext201
vkdev_ext202
vkdev_ext203
vkdev_ext204
vkdev_ext205
vkdev_ext206
vkdev_ext207
vkdev_ext208
vkdev_ext209
vkdev_ext21
vkdev_ext210
vkdev_ext211
vkdev_ext212
vkdev_ext213
vkdev_ext214
vkdev_ext215
vkdev_ext216
vkdev_ext217
vkdev_ext218
vkdev_ext219
vkdev_ext22
vkdev_ext220
vkdev_ext221
vkdev_ext222
vkdev_ext223
vkdev_ext224
vkdev_ext225
vkdev_ext226
vkdev_ext227
vkdev_ext228
vkdev_ext229
vkdev_ext23
vkdev_ext230
vkdev_ext231
vkdev_ext232
vkdev_ext233
vkdev_ext234
vkdev_ext235
vkdev_ext236
vkdev_ext237
vkdev_ext238
vkdev_ext239
vkdev_ext24
vkdev_ext240
vkdev_ext241
vkdev_ext242
vkdev_ext243
vkdev_ext244
vkdev_ext245
vkdev_ext246
vkdev_ext247
vkdev_ext248
vkdev_ext249
vkdev_ext25
vkdev_ext26
vkdev_ext27
vkdev_ext28
vkdev_ext29
vkdev_ext3
vkdev_ext30
vkdev_ext31
vkdev_ext32
vkdev_ext33
vkdev_ext34
vkdev_ext35
vkdev_ext36
vkdev_ext37
vkdev_ext38
vkdev_ext39
vkdev_ext4
vkdev_ext40
vkdev_ext41
vkdev_ext42
vkdev_ext43
vkdev_ext44
vkdev_ext45
vkdev_ext46
vkdev_ext47
vkdev_ext48
vkdev_ext49
vkdev_ext5
vkdev_ext50
vkdev_ext51
vkdev_ext52
vkdev_ext53
vkdev_ext54
vkdev_ext55
vkdev_ext56
vkdev_ext57
vkdev_ext58
vkdev_ext59
vkdev_ext6
vkdev_ext60
vkdev_ext61
vkdev_ext62
vkdev_ext63
vkdev_ext64
vkdev_ext65
vkdev_ext66
vkdev_ext67
vkdev_ext68
vkdev_ext69
vkdev_ext7
vkdev_ext70
vkdev_ext71
vkdev_ext72
vkdev_ext73
vkdev_ext74
vkdev_ext75
vkdev_ext76
vkdev_ext77
vkdev_ext78
vkdev_ext79
vkdev_ext8
vkdev_ext80
vkdev_ext81
vkdev_ext82
vkdev_ext83
vkdev_ext84
vkdev_ext85
vkdev_ext86
vkdev_ext87
vkdev_ext88
vkdev_ext89
vkdev_ext9
vkdev_ext90
vkdev_ext91
vkdev_ext92
vkdev_ext93
vkdev_ext94
vkdev_ext95
vkdev_ext96
vkdev_ext97
vkdev_ext98
vkdev_ext99
vm>
vn>
void EmitStreamVertex(int);void EndStreamPrimitive(int);
void EmitVertex();void EndPrimitive();
void angle::GenerateMip<angle::A16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::A1R5G5B5>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::A32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::A4R4G4B4>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::A8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::B5G6R5>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::B8G8R8A8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::B8G8R8X8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::L16A16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::L16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::L32A32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::L32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::L8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::L8A8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R10G10B10A2>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R10G10B10A2S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R11G11B10F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R16>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R16G16>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R16G16B16>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R16G16B16A16>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R16G16B16A16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R16G16B16A16S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R16G16B16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R16G16B16S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R16G16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R16G16S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R16S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R32>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R32G32>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R32G32B32>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R32G32B32A32>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R32G32B32A32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R32G32B32A32S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R32G32B32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R32G32B32S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R32G32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R32G32S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R32S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R4G4B4A4>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R5G5B5A1>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R5G6B5>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R8G8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R8G8B8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R8G8B8A8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R8G8B8A8S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R8G8B8A8SRGB>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R8G8B8S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R8G8S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R8S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::GenerateMip<angle::R9G9B9E5>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::Initialize4ComponentData<unsigned char, 0u, 0u, 0u, 255u>(unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::Load32FTo16F<1ul>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::Load32FTo16F<2ul>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::Load32FTo16F<4ul>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadCompressedToNative<4ul, 4ul, 16ul>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadCompressedToNative<4ul, 4ul, 8ul>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadToNative3To4<float, 1065353216u>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadToNative3To4<int, 1u>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadToNative3To4<short, 1u>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadToNative3To4<signed char, 127u>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadToNative3To4<signed char, 1u>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadToNative3To4<unsigned char, 1u>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadToNative3To4<unsigned char, 255u>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadToNative3To4<unsigned int, 1u>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadToNative3To4<unsigned short, 15360u>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadToNative3To4<unsigned short, 1u>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadToNative3To4<unsigned short, 32767u>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadToNative3To4<unsigned short, 65535u>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadToNative<float, 1ul>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadToNative<float, 2ul>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadToNative<float, 4ul>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadToNative<int, 1ul>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadToNative<int, 2ul>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadToNative<int, 4ul>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadToNative<short, 1ul>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadToNative<short, 2ul>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadToNative<short, 4ul>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadToNative<signed char, 1ul>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadToNative<signed char, 2ul>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadToNative<signed char, 4ul>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadToNative<unsigned char, 1ul>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadToNative<unsigned char, 2ul>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadToNative<unsigned char, 4ul>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadToNative<unsigned int, 1ul>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadToNative<unsigned int, 2ul>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadToNative<unsigned int, 4ul>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadToNative<unsigned short, 1ul>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadToNative<unsigned short, 2ul>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::LoadToNative<unsigned short, 4ul>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::ReadColor<angle::A16F, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::A1R5G5B5, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::A32F, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::A4R4G4B4, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::A8, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::B5G6R5, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::B8G8R8A8, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::B8G8R8X8, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::L16A16F, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::L16F, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::L32A32F, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::L32F, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::L8, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::L8A8, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R10G10B10A2, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R10G10B10A2, unsigned int>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R10G10B10A2S, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R10G10B10A2S, int>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R11G11B10F, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R16, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R16, unsigned int>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R16F, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R16G16, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R16G16, unsigned int>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R16G16B16, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R16G16B16, unsigned int>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R16G16B16A16, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R16G16B16A16, unsigned int>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R16G16B16A16F, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R16G16B16A16S, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R16G16B16A16S, int>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R16G16B16F, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R16G16B16S, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R16G16B16S, int>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R16G16F, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R16G16S, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R16G16S, int>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R16S, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R16S, int>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R32, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R32, unsigned int>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R32F, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R32G32, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R32G32, unsigned int>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R32G32B32, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R32G32B32, unsigned int>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R32G32B32A32, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R32G32B32A32, unsigned int>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R32G32B32A32F, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R32G32B32A32S, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R32G32B32A32S, int>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R32G32B32F, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R32G32B32S, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R32G32B32S, int>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R32G32F, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R32G32S, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R32G32S, int>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R32S, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R32S, int>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R4G4B4A4, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R5G5B5A1, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R5G6B5, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R8, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R8, unsigned int>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R8G8, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R8G8, unsigned int>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R8G8B8, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R8G8B8, unsigned int>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R8G8B8A8, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R8G8B8A8, unsigned int>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R8G8B8A8S, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R8G8B8A8S, int>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R8G8B8A8SRGB, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R8G8B8S, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R8G8B8S, int>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R8G8S, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R8G8S, int>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R8S, float>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R8S, int>(unsigned char const*, unsigned char*)
void angle::ReadColor<angle::R9G9B9E5, float>(unsigned char const*, unsigned char*)
void angle::ReadDepthStencil<angle::D16>(unsigned char const*, unsigned char*)
void angle::ReadDepthStencil<angle::D24>(unsigned char const*, unsigned char*)
void angle::ReadDepthStencil<angle::D24S8>(unsigned char const*, unsigned char*)
void angle::ReadDepthStencil<angle::D32>(unsigned char const*, unsigned char*)
void angle::ReadDepthStencil<angle::D32F>(unsigned char const*, unsigned char*)
void angle::ReadDepthStencil<angle::D32FS8>(unsigned char const*, unsigned char*)
void angle::ReadDepthStencil<angle::S8>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::A16F, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::A1R5G5B5, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::A32F, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::A4R4G4B4, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::A8, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::B5G6R5, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::B8G8R8A8, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::B8G8R8X8, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::L16A16F, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::L16F, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::L32A32F, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::L32F, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::L8, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::L8A8, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R10G10B10A2, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R10G10B10A2, unsigned int>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R10G10B10A2S, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R10G10B10A2S, int>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R11G11B10F, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R16, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R16, unsigned int>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R16F, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R16G16, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R16G16, unsigned int>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R16G16B16, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R16G16B16, unsigned int>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R16G16B16A16, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R16G16B16A16, unsigned int>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R16G16B16A16F, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R16G16B16A16S, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R16G16B16A16S, int>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R16G16B16F, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R16G16B16S, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R16G16B16S, int>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R16G16F, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R16G16S, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R16G16S, int>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R16S, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R16S, int>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R32, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R32, unsigned int>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R32F, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R32G32, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R32G32, unsigned int>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R32G32B32, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R32G32B32, unsigned int>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R32G32B32A32, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R32G32B32A32, unsigned int>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R32G32B32A32F, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R32G32B32A32S, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R32G32B32A32S, int>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R32G32B32F, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R32G32B32S, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R32G32B32S, int>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R32G32F, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R32G32S, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R32G32S, int>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R32S, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R32S, int>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R4G4B4A4, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R5G5B5A1, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R5G6B5, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R8, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R8, unsigned int>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R8G8, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R8G8, unsigned int>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R8G8B8, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R8G8B8, unsigned int>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R8G8B8A8, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R8G8B8A8, unsigned int>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R8G8B8A8S, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R8G8B8A8S, int>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R8G8B8A8SRGB, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R8G8B8S, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R8G8B8S, int>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R8G8S, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R8G8S, int>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R8S, float>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R8S, int>(unsigned char const*, unsigned char*)
void angle::WriteColor<angle::R9G9B9E5, float>(unsigned char const*, unsigned char*)
void angle::WriteDepthStencil<angle::D16>(unsigned char const*, unsigned char*)
void angle::WriteDepthStencil<angle::D24>(unsigned char const*, unsigned char*)
void angle::WriteDepthStencil<angle::D24S8>(unsigned char const*, unsigned char*)
void angle::WriteDepthStencil<angle::D32>(unsigned char const*, unsigned char*)
void angle::WriteDepthStencil<angle::D32F>(unsigned char const*, unsigned char*)
void angle::WriteDepthStencil<angle::D32FS8>(unsigned char const*, unsigned char*)
void angle::WriteDepthStencil<angle::S8>(unsigned char const*, unsigned char*)
void angle::priv::GenerateMip_X<angle::A16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::A1R5G5B5>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::A32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::A4R4G4B4>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::A8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::B5G6R5>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::B8G8R8A8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::B8G8R8X8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::L16A16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::L16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::L32A32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::L32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::L8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::L8A8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R10G10B10A2>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R10G10B10A2S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R11G11B10F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R16>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R16G16>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R16G16B16>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R16G16B16A16>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R16G16B16A16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R16G16B16A16S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R16G16B16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R16G16B16S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R16G16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R16G16S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R16S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R32>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R32G32>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R32G32B32>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R32G32B32A32>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R32G32B32A32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R32G32B32A32S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R32G32B32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R32G32B32S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R32G32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R32G32S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R32S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R4G4B4A4>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R5G5B5A1>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R5G6B5>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R8G8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R8G8B8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R8G8B8A8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R8G8B8A8S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R8G8B8A8SRGB>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R8G8B8S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R8G8S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R8S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_X<angle::R9G9B9E5>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::A16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::A1R5G5B5>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::A32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::A4R4G4B4>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::A8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::B5G6R5>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::B8G8R8A8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::B8G8R8X8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::L16A16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::L16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::L32A32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::L32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::L8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::L8A8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R10G10B10A2>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R10G10B10A2S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R11G11B10F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R16>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R16G16>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R16G16B16>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R16G16B16A16>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R16G16B16A16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R16G16B16A16S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R16G16B16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R16G16B16S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R16G16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R16G16S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R16S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R32>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R32G32>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R32G32B32>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R32G32B32A32>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R32G32B32A32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R32G32B32A32S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R32G32B32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R32G32B32S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R32G32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R32G32S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R32S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R4G4B4A4>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R5G5B5A1>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R5G6B5>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R8G8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R8G8B8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R8G8B8A8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R8G8B8A8S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R8G8B8A8SRGB>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R8G8B8S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R8G8S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R8S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XY<angle::R9G9B9E5>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::A16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::A1R5G5B5>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::A32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::A4R4G4B4>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::A8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::B5G6R5>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::B8G8R8A8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::B8G8R8X8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::L16A16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::L16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::L32A32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::L32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::L8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::L8A8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R10G10B10A2>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R10G10B10A2S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R11G11B10F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R16>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R16G16>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R16G16B16>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R16G16B16A16>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R16G16B16A16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R16G16B16A16S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R16G16B16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R16G16B16S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R16G16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R16G16S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R16S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R32>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R32G32>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R32G32B32>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R32G32B32A32>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R32G32B32A32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R32G32B32A32S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R32G32B32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R32G32B32S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R32G32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R32G32S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R32S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R4G4B4A4>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R5G5B5A1>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R5G6B5>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R8G8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R8G8B8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R8G8B8A8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R8G8B8A8S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R8G8B8A8SRGB>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R8G8B8S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R8G8S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R8S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XYZ<angle::R9G9B9E5>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::A16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::A1R5G5B5>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::A32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::A4R4G4B4>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::A8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::B5G6R5>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::B8G8R8A8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::B8G8R8X8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::L16A16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::L16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::L32A32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::L32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::L8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::L8A8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R10G10B10A2>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R10G10B10A2S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R11G11B10F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R16>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R16G16>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R16G16B16>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R16G16B16A16>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R16G16B16A16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R16G16B16A16S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R16G16B16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R16G16B16S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R16G16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R16G16S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R16S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R32>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R32G32>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R32G32B32>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R32G32B32A32>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R32G32B32A32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R32G32B32A32S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R32G32B32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R32G32B32S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R32G32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R32G32S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R32S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R4G4B4A4>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R5G5B5A1>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R5G6B5>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R8G8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R8G8B8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R8G8B8A8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R8G8B8A8S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R8G8B8A8SRGB>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R8G8B8S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R8G8S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R8S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_XZ<angle::R9G9B9E5>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::A16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::A1R5G5B5>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::A32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::A4R4G4B4>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::A8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::B5G6R5>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::B8G8R8A8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::B8G8R8X8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::L16A16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::L16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::L32A32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::L32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::L8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::L8A8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R10G10B10A2>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R10G10B10A2S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R11G11B10F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R16>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R16G16>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R16G16B16>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R16G16B16A16>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R16G16B16A16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R16G16B16A16S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R16G16B16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R16G16B16S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R16G16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R16G16S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R16S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R32>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R32G32>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R32G32B32>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R32G32B32A32>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R32G32B32A32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R32G32B32A32S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R32G32B32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R32G32B32S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R32G32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R32G32S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R32S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R4G4B4A4>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R5G5B5A1>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R5G6B5>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R8G8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R8G8B8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R8G8B8A8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R8G8B8A8S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R8G8B8A8SRGB>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R8G8B8S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R8G8S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R8S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Y<angle::R9G9B9E5>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::A16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::A1R5G5B5>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::A32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::A4R4G4B4>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::A8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::B5G6R5>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::B8G8R8A8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::B8G8R8X8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::L16A16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::L16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::L32A32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::L32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::L8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::L8A8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R10G10B10A2>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R10G10B10A2S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R11G11B10F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R16>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R16G16>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R16G16B16>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R16G16B16A16>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R16G16B16A16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R16G16B16A16S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R16G16B16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R16G16B16S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R16G16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R16G16S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R16S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R32>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R32G32>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R32G32B32>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R32G32B32A32>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R32G32B32A32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R32G32B32A32S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R32G32B32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R32G32B32S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R32G32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R32G32S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R32S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R4G4B4A4>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R5G5B5A1>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R5G6B5>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R8G8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R8G8B8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R8G8B8A8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R8G8B8A8S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R8G8B8A8SRGB>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R8G8B8S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R8G8S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R8S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_YZ<angle::R9G9B9E5>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::A16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::A1R5G5B5>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::A32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::A4R4G4B4>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::A8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::B5G6R5>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::B8G8R8A8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::B8G8R8X8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::L16A16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::L16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::L32A32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::L32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::L8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::L8A8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R10G10B10A2>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R10G10B10A2S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R11G11B10F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R16>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R16G16>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R16G16B16>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R16G16B16A16>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R16G16B16A16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R16G16B16A16S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R16G16B16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R16G16B16S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R16G16F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R16G16S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R16S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R32>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R32G32>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R32G32B32>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R32G32B32A32>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R32G32B32A32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R32G32B32A32S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R32G32B32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R32G32B32S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R32G32F>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R32G32S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R32S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R4G4B4A4>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R5G5B5A1>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R5G6B5>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R8G8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R8G8B8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R8G8B8A8>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R8G8B8A8S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R8G8B8A8SRGB>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R8G8B8S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R8G8S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R8S>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void angle::priv::GenerateMip_Z<angle::R9G9B9E5>(unsigned long, unsigned long, unsigned long, unsigned char const*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long, unsigned char*, unsigned long, unsigned long)
void barrier();
void controlBarrier(int, int, int, int);void memoryBarrier(int, int, int);
void function cannot return a value
void gl::(anonymous namespace)::SetSamplerParameterBase<float>(gl::Context*, gl::Sampler*, unsigned int, float const*)
void gl::(anonymous namespace)::SetSamplerParameterBase<int>(gl::Context*, gl::Sampler*, unsigned int, int const*)
void gl::(anonymous namespace)::SetTexParameterBase<float>(gl::Context*, gl::Texture*, unsigned int, float const*)
void gl::(anonymous namespace)::SetTexParameterBase<int>(gl::Context*, gl::Texture*, unsigned int, int const*)
void gl::CastIndexedStateValues<int>(gl::Context*, unsigned int, unsigned int, unsigned int, unsigned int, int*)
void gl::CastIndexedStateValues<long>(gl::Context*, unsigned int, unsigned int, unsigned int, unsigned int, long*)
void gl::CastIndexedStateValues<unsigned char>(gl::Context*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned char*)
void gl::CastStateValues<float>(gl::Context*, unsigned int, unsigned int, unsigned int, float*)
void gl::CastStateValues<int>(gl::Context*, unsigned int, unsigned int, unsigned int, int*)
void gl::CastStateValues<long>(gl::Context*, unsigned int, unsigned int, unsigned int, long*)
void gl::CastStateValues<unsigned char>(gl::Context*, unsigned int, unsigned int, unsigned int, unsigned char*)
void gl::InterfaceBlockLinker::defineArrayOfStructsBlockMembers<sh::InterfaceBlockField>(std::__1::function<bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockMemberInfo*)> const&, sh::InterfaceBlockField const&, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool, int, gl::ShaderType) const
void gl::InterfaceBlockLinker::defineArrayOfStructsBlockMembers<sh::ShaderVariable>(std::__1::function<bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockMemberInfo*)> const&, sh::ShaderVariable const&, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool, int, gl::ShaderType) const
void gl::InterfaceBlockLinker::defineBlockMember<sh::InterfaceBlockField>(std::__1::function<bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockMemberInfo*)> const&, sh::InterfaceBlockField const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool, int, gl::ShaderType) const
void gl::InterfaceBlockLinker::defineBlockMember<sh::ShaderVariable>(std::__1::function<bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockMemberInfo*)> const&, sh::ShaderVariable const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool, int, gl::ShaderType) const
void gl::InterfaceBlockLinker::defineBlockMembers<sh::InterfaceBlockField>(std::__1::function<bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockMemberInfo*)> const&, std::__1::vector<sh::InterfaceBlockField, std::__1::allocator<sh::InterfaceBlockField> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool, int, gl::ShaderType) const
void gl::InterfaceBlockLinker::defineBlockMembers<sh::ShaderVariable>(std::__1::function<bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockMemberInfo*)> const&, std::__1::vector<sh::ShaderVariable, std::__1::allocator<sh::ShaderVariable> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, int, bool, int, gl::ShaderType) const
void gl::Program::getUniformInternal<float>(gl::Context const*, float*, int, unsigned int, int) const
void gl::Program::getUniformInternal<int>(gl::Context const*, int*, int, unsigned int, int) const
void gl::Program::getUniformInternal<unsigned int>(gl::Context const*, unsigned int*, int, unsigned int, int) const
void gl::ShaderProgramManager::deleteObject<gl::Program>(gl::Context const*, gl::ResourceMap<gl::Program>*, unsigned int)
void gl::ShaderProgramManager::deleteObject<gl::Shader>(gl::Context const*, gl::ResourceMap<gl::Shader>*, unsigned int)
void imageAtomicStore(volatile coherent
void imageStore(writeonly volatile coherent
void main()
void main(){    if (enable_clip_planes && !enable_draw_texture)    {        if (!doClipPlaneTest())        {            discard;        }    }    vec4 currentFragment;    vec4 vertex_color;    if (shade_model_flat)    {        vertex_color = color_varying_flat;    }    else    {        vertex_color = color_varying;    }    currentFragment = vertex_color;    vec4 texturePrevColor = currentFragment;    for (int i = 0; i < kMaxTexUnits; i++)    {        vec4 textureColor;        if (point_rasterization && point_sprite_enabled &&            point_sprite_coord_replace[i]) {            textureColor = getPointSpriteTextureColor(i);        } else {            textureColor = getTextureColor(i);        }        currentFragment = textureFunction(            i, texture_format[i], texture_env_mode[i], combine_rgb[i], combine_alpha[i],            src0_rgb[i], src0_alpha[i], src1_rgb[i], src1_alpha[i], src2_rgb[i], src2_alpha[i],            op0_rgb[i], op0_alpha[i], op1_rgb[i], op1_alpha[i], op2_rgb[i], op2_alpha[i],            texture_env_color[i], texture_env_rgb_scale[i], texture_env_alpha_scale[i],            vertex_color, texturePrevColor, textureColor);        texturePrevColor = currentFragment;    }    if (enable_lighting)    {        currentFragment = doLighting(currentFragment);    }    if (enable_fog)    {        currentFragment = doFog(currentFragment);    }    if (enable_alpha_test && !doAlphaTest(currentFragment))    {        discard;    }    frag_color = currentFragment;}
void memoryBarrier();
void memoryBarrierAtomicCounter();void memoryBarrierBuffer();void memoryBarrierImage();
void memoryBarrierShared();void groupMemoryBarrier();
void rx::Copy32FixedTo32FVertexData<1ul, 1ul>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::Copy32FixedTo32FVertexData<2ul, 2ul>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::Copy32FixedTo32FVertexData<3ul, 3ul>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::Copy32FixedTo32FVertexData<4ul, 4ul>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyNativeVertexData<float, 1ul, 1ul, 0u>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyNativeVertexData<float, 2ul, 2ul, 0u>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyNativeVertexData<float, 3ul, 3ul, 0u>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyNativeVertexData<float, 4ul, 4ul, 0u>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyNativeVertexData<int, 1ul, 1ul, 0u>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyNativeVertexData<int, 2ul, 2ul, 0u>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyNativeVertexData<int, 3ul, 3ul, 0u>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyNativeVertexData<int, 4ul, 4ul, 0u>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyNativeVertexData<short, 1ul, 1ul, 0u>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyNativeVertexData<short, 2ul, 2ul, 0u>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyNativeVertexData<short, 3ul, 3ul, 0u>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyNativeVertexData<short, 4ul, 4ul, 0u>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyNativeVertexData<signed char, 1ul, 1ul, 0u>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyNativeVertexData<signed char, 2ul, 2ul, 0u>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyNativeVertexData<signed char, 3ul, 3ul, 0u>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyNativeVertexData<signed char, 4ul, 4ul, 0u>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyNativeVertexData<unsigned char, 1ul, 1ul, 0u>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyNativeVertexData<unsigned char, 2ul, 2ul, 0u>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyNativeVertexData<unsigned char, 3ul, 3ul, 0u>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyNativeVertexData<unsigned char, 4ul, 4ul, 0u>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyNativeVertexData<unsigned int, 1ul, 1ul, 0u>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyNativeVertexData<unsigned int, 2ul, 2ul, 0u>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyNativeVertexData<unsigned int, 3ul, 3ul, 0u>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyNativeVertexData<unsigned int, 4ul, 4ul, 0u>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyNativeVertexData<unsigned short, 1ul, 1ul, 0u>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyNativeVertexData<unsigned short, 2ul, 2ul, 0u>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyNativeVertexData<unsigned short, 3ul, 3ul, 0u>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyNativeVertexData<unsigned short, 4ul, 4ul, 0u>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyTo32FVertexData<short, 1ul, 1ul, false>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyTo32FVertexData<short, 1ul, 1ul, true>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyTo32FVertexData<short, 2ul, 2ul, false>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyTo32FVertexData<short, 2ul, 2ul, true>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyTo32FVertexData<short, 3ul, 3ul, false>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyTo32FVertexData<short, 3ul, 3ul, true>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyTo32FVertexData<short, 4ul, 4ul, false>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyTo32FVertexData<short, 4ul, 4ul, true>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyTo32FVertexData<signed char, 1ul, 1ul, false>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyTo32FVertexData<signed char, 1ul, 1ul, true>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyTo32FVertexData<signed char, 2ul, 2ul, false>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyTo32FVertexData<signed char, 2ul, 2ul, true>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyTo32FVertexData<signed char, 3ul, 3ul, false>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyTo32FVertexData<signed char, 3ul, 3ul, true>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyTo32FVertexData<signed char, 4ul, 4ul, false>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyTo32FVertexData<signed char, 4ul, 4ul, true>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyTo32FVertexData<unsigned char, 1ul, 1ul, false>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyTo32FVertexData<unsigned char, 1ul, 1ul, true>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyTo32FVertexData<unsigned char, 2ul, 2ul, false>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyTo32FVertexData<unsigned char, 2ul, 2ul, true>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyTo32FVertexData<unsigned char, 3ul, 3ul, false>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyTo32FVertexData<unsigned char, 3ul, 3ul, true>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyTo32FVertexData<unsigned char, 4ul, 4ul, false>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyTo32FVertexData<unsigned char, 4ul, 4ul, true>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyTo32FVertexData<unsigned short, 1ul, 1ul, false>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyTo32FVertexData<unsigned short, 1ul, 1ul, true>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyTo32FVertexData<unsigned short, 2ul, 2ul, false>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyTo32FVertexData<unsigned short, 2ul, 2ul, true>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyTo32FVertexData<unsigned short, 3ul, 3ul, false>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyTo32FVertexData<unsigned short, 3ul, 3ul, true>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyTo32FVertexData<unsigned short, 4ul, 4ul, false>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::CopyTo32FVertexData<unsigned short, 4ul, 4ul, true>(unsigned char const*, unsigned long, unsigned long, unsigned char*)
void rx::GetMatrixUniform<int>(unsigned int, int*, int const*, bool)
void rx::ProgramVk::getUniformImpl<float>(int, float*, unsigned int) const
void rx::ProgramVk::getUniformImpl<int>(int, int*, unsigned int) const
void rx::ProgramVk::setUniformImpl<float>(int, int, float const*, unsigned int)
void rx::ProgramVk::setUniformImpl<int>(int, int, int const*, unsigned int)
void rx::ProgramVk::setUniformMatrixfv<2, 2>(int, int, unsigned char, float const*)
void rx::ProgramVk::setUniformMatrixfv<2, 3>(int, int, unsigned char, float const*)
void rx::ProgramVk::setUniformMatrixfv<2, 4>(int, int, unsigned char, float const*)
void rx::ProgramVk::setUniformMatrixfv<3, 2>(int, int, unsigned char, float const*)
void rx::ProgramVk::setUniformMatrixfv<3, 3>(int, int, unsigned char, float const*)
void rx::ProgramVk::setUniformMatrixfv<3, 4>(int, int, unsigned char, float const*)
void rx::ProgramVk::setUniformMatrixfv<4, 2>(int, int, unsigned char, float const*)
void rx::ProgramVk::setUniformMatrixfv<4, 3>(int, int, unsigned char, float const*)
void rx::ProgramVk::setUniformMatrixfv<4, 4>(int, int, unsigned char, float const*)
void sh::(anonymous namespace)::GetUniformBlockArrayOfArraysMemberInfo<sh::ShaderVariable>(sh::ShaderVariable const&, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockLayoutEncoder*, bool, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, sh::BlockMemberInfo, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, sh::BlockMemberInfo> > >*)
void sh::(anonymous namespace)::GetUniformBlockArrayOfArraysMemberInfo<sh::Uniform>(sh::Uniform const&, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockLayoutEncoder*, bool, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, sh::BlockMemberInfo, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, sh::BlockMemberInfo> > >*)
void sh::(anonymous namespace)::GetUniformBlockInfo<sh::ShaderVariable>(std::__1::vector<sh::ShaderVariable, std::__1::allocator<sh::ShaderVariable> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockLayoutEncoder*, bool, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, sh::BlockMemberInfo, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, sh::BlockMemberInfo> > >*)
void sh::(anonymous namespace)::GetUniformBlockStructArrayMemberInfo<sh::ShaderVariable>(sh::ShaderVariable const&, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockLayoutEncoder*, bool, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, sh::BlockMemberInfo, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, sh::BlockMemberInfo> > >*)
void sh::(anonymous namespace)::GetUniformBlockStructArrayMemberInfo<sh::Uniform>(sh::Uniform const&, unsigned int, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockLayoutEncoder*, bool, std::__1::map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, sh::BlockMemberInfo, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const, sh::BlockMemberInfo> > >*)
void sh::TIntermTraverser::traverse<sh::TIntermAggregate>(sh::TIntermAggregate*)
void sh::TIntermTraverser::traverse<sh::TIntermBinary>(sh::TIntermBinary*)
void sh::TIntermTraverser::traverse<sh::TIntermLoop>(sh::TIntermLoop*)
void sh::TIntermTraverser::traverse<sh::TIntermNode>(sh::TIntermNode*)
void sh::TIntermTraverser::traverse<sh::TIntermUnary>(sh::TIntermUnary*)
void spvutils::HexFloat<spvutils::FloatProxy<float>, spvutils::HexFloatTraits<spvutils::FloatProxy<float> > >::castTo<spvutils::HexFloat<spvutils::FloatProxy<spvutils::Float16>, spvutils::HexFloatTraits<spvutils::FloatProxy<spvutils::Float16> > > >(spvutils::HexFloat<spvutils::FloatProxy<spvutils::Float16>, spvutils::HexFloatTraits<spvutils::FloatProxy<spvutils::Float16> > >&, spvutils::round_direction)
void std::__1::__call_once_proxy<std::__1::tuple<std::__1::(anonymous namespace)::__fake_bind&&> >(void*)
void std::__1::__inplace_merge<sh::(anonymous namespace)::QualifierComparator&, std::__1::__wrap_iter<sh::TQualifierWrapperBase const**> >(std::__1::__wrap_iter<sh::TQualifierWrapperBase const**>, std::__1::__wrap_iter<sh::TQualifierWrapperBase const**>, std::__1::__wrap_iter<sh::TQualifierWrapperBase const**>, sh::(anonymous namespace)::QualifierComparator&, std::__1::iterator_traits<std::__1::__wrap_iter<sh::TQualifierWrapperBase const**> >::difference_type, std::__1::iterator_traits<std::__1::__wrap_iter<sh::TQualifierWrapperBase const**> >::difference_type, std::__1::iterator_traits<std::__1::__wrap_iter<sh::TQualifierWrapperBase const**> >::value_type*, long)
void std::__1::__insertion_sort_3<bool (*&)(gl::PackedVarying const&, gl::PackedVarying const&), gl::PackedVarying*>(gl::PackedVarying*, gl::PackedVarying*, bool (*&)(gl::PackedVarying const&, gl::PackedVarying const&))
void std::__1::__insertion_sort_3<bool (*&)(sh::ShaderVariable const&, sh::ShaderVariable const&), sh::Varying*>(sh::Varying*, sh::Varying*, bool (*&)(sh::ShaderVariable const&, sh::ShaderVariable const&))
void std::__1::__insertion_sort_3<bool (*&)(sh::TIntermTraverser::NodeInsertMultipleEntry const&, sh::TIntermTraverser::NodeInsertMultipleEntry const&), sh::TIntermTraverser::NodeInsertMultipleEntry*>(sh::TIntermTraverser::NodeInsertMultipleEntry*, sh::TIntermTraverser::NodeInsertMultipleEntry*, bool (*&)(sh::TIntermTraverser::NodeInsertMultipleEntry const&, sh::TIntermTraverser::NodeInsertMultipleEntry const&))
void std::__1::__sort<bool (*&)(gl::PackedVarying const&, gl::PackedVarying const&), gl::PackedVarying*>(gl::PackedVarying*, gl::PackedVarying*, bool (*&)(gl::PackedVarying const&, gl::PackedVarying const&))
void std::__1::__sort<bool (*&)(sh::ShaderVariable const&, sh::ShaderVariable const&), sh::Varying*>(sh::Varying*, sh::Varying*, bool (*&)(sh::ShaderVariable const&, sh::ShaderVariable const&))
void std::__1::__sort<bool (*&)(sh::TIntermTraverser::NodeInsertMultipleEntry const&, sh::TIntermTraverser::NodeInsertMultipleEntry const&), sh::TIntermTraverser::NodeInsertMultipleEntry*>(sh::TIntermTraverser::NodeInsertMultipleEntry*, sh::TIntermTraverser::NodeInsertMultipleEntry*, bool (*&)(sh::TIntermTraverser::NodeInsertMultipleEntry const&, sh::TIntermTraverser::NodeInsertMultipleEntry const&))
void std::__1::__sort<egl::ConfigSorter&, egl::Config const**>(egl::Config const**, egl::Config const**, egl::ConfigSorter&)
void std::__1::__sort<sh::(anonymous namespace)::TVariableInfoComparer&, sh::ShaderVariable*>(sh::ShaderVariable*, sh::ShaderVariable*, sh::(anonymous namespace)::TVariableInfoComparer&)
void std::__1::__sort<std::__1::__less<gl::PackedVaryingRegister, gl::PackedVaryingRegister>&, gl::PackedVaryingRegister*>(gl::PackedVaryingRegister*, gl::PackedVaryingRegister*, std::__1::__less<gl::PackedVaryingRegister, gl::PackedVaryingRegister>&)
void std::__1::__stable_sort<sh::(anonymous namespace)::QualifierComparator&, std::__1::__wrap_iter<sh::TQualifierWrapperBase const**> >(std::__1::__wrap_iter<sh::TQualifierWrapperBase const**>, std::__1::__wrap_iter<sh::TQualifierWrapperBase const**>, sh::(anonymous namespace)::QualifierComparator&, std::__1::iterator_traits<std::__1::__wrap_iter<sh::TQualifierWrapperBase const**> >::difference_type, std::__1::iterator_traits<std::__1::__wrap_iter<sh::TQualifierWrapperBase const**> >::value_type*, long)
void std::__1::__stable_sort_move<sh::(anonymous namespace)::QualifierComparator&, std::__1::__wrap_iter<sh::TQualifierWrapperBase const**> >(std::__1::__wrap_iter<sh::TQualifierWrapperBase const**>, std::__1::__wrap_iter<sh::TQualifierWrapperBase const**>, sh::(anonymous namespace)::QualifierComparator&, std::__1::iterator_traits<std::__1::__wrap_iter<sh::TQualifierWrapperBase const**> >::difference_type, std::__1::iterator_traits<std::__1::__wrap_iter<sh::TQualifierWrapperBase const**> >::value_type*)
void std::__1::__tree<std::__1::__value_type<int, egl::Config>, std::__1::__map_value_compare<int, std::__1::__value_type<int, egl::Config>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, egl::Config> > >::__assign_multi<std::__1::__tree_const_iterator<std::__1::__value_type<int, egl::Config>, std::__1::__tree_node<std::__1::__value_type<int, egl::Config>, void*>*, long> >(std::__1::__tree_const_iterator<std::__1::__value_type<int, egl::Config>, std::__1::__tree_node<std::__1::__value_type<int, egl::Config>, void*>*, long>, std::__1::__tree_const_iterator<std::__1::__value_type<int, egl::Config>, std::__1::__tree_node<std::__1::__value_type<int, egl::Config>, void*>*, long>)
void std::__1::__tree<std::__1::__value_type<long, long>, std::__1::__map_value_compare<long, std::__1::__value_type<long, long>, std::__1::less<long>, true>, std::__1::allocator<std::__1::__value_type<long, long> > >::__assign_multi<std::__1::__tree_const_iterator<std::__1::__value_type<long, long>, std::__1::__tree_node<std::__1::__value_type<long, long>, void*>*, long> >(std::__1::__tree_const_iterator<std::__1::__value_type<long, long>, std::__1::__tree_node<std::__1::__value_type<long, long>, void*>*, long>, std::__1::__tree_const_iterator<std::__1::__value_type<long, long>, std::__1::__tree_node<std::__1::__value_type<long, long>, void*>*, long>)
void std::__1::__tree<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, std::__1::__map_value_compare<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, true>, glslang::pool_allocator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > > > >::__assign_multi<std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, void*>*, long> >(std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, void*>*, long>, std::__1::__tree_const_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >, void*>*, long>)
void std::__1::__tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::less<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__assign_multi<std::__1::__tree_const_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, long> >(std::__1::__tree_const_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, long>, std::__1::__tree_const_iterator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::__tree_node<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, void*>*, long>)
void std::__1::__tree<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int> >::__assign_multi<std::__1::__tree_const_iterator<unsigned int, std::__1::__tree_node<unsigned int, void*>*, long> >(std::__1::__tree_const_iterator<unsigned int, std::__1::__tree_node<unsigned int, void*>*, long>, std::__1::__tree_const_iterator<unsigned int, std::__1::__tree_node<unsigned int, void*>*, long>)
void std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*)
void std::__1::__tree_left_rotate<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*)
void std::__1::__tree_remove<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*, std::__1::__tree_node_base<void*>*)
void std::__1::__tree_right_rotate<std::__1::__tree_node_base<void*>*>(std::__1::__tree_node_base<void*>*)
void std::__1::vector<TIntermNode*, std::__1::allocator<TIntermNode*> >::__push_back_slow_path<TIntermNode* const&>(TIntermNode* const&)
void std::__1::vector<TIntermNode*, std::__1::allocator<TIntermNode*> >::__push_back_slow_path<TIntermNode*>(TIntermNode*&&)
void std::__1::vector<TPoolAllocator::tAllocState, std::__1::allocator<TPoolAllocator::tAllocState> >::__push_back_slow_path<TPoolAllocator::tAllocState const&>(TPoolAllocator::tAllocState const&)
void std::__1::vector<VkClearValue, std::__1::allocator<VkClearValue> >::__emplace_back_slow_path<VkClearValue const&>(VkClearValue const&)
void std::__1::vector<VkImageView_T*, std::__1::allocator<VkImageView_T*> >::__push_back_slow_path<VkImageView_T*>(VkImageView_T*&&)
void std::__1::vector<angle::ObserverBinding, std::__1::allocator<angle::ObserverBinding> >::__emplace_back_slow_path<gl::Context*&, unsigned int&>(gl::Context*&, unsigned int&)
void std::__1::vector<angle::ObserverBinding, std::__1::allocator<angle::ObserverBinding> >::__emplace_back_slow_path<gl::Context*, unsigned long&>(gl::Context*&&, unsigned long&)
void std::__1::vector<angle::ObserverBinding, std::__1::allocator<angle::ObserverBinding> >::__emplace_back_slow_path<gl::Framebuffer*, gl::Framebuffer::DirtyBitType>(gl::Framebuffer*&&, gl::Framebuffer::DirtyBitType&&)
void std::__1::vector<angle::ObserverBinding, std::__1::allocator<angle::ObserverBinding> >::__emplace_back_slow_path<gl::Framebuffer*, unsigned long>(gl::Framebuffer*&&, unsigned long&&)
void std::__1::vector<angle::ObserverBinding, std::__1::allocator<angle::ObserverBinding> >::__emplace_back_slow_path<gl::VertexArray*, unsigned long&>(gl::VertexArray*&&, unsigned long&)
void std::__1::vector<angle::pp::DirectiveParser::ConditionalBlock, std::__1::allocator<angle::pp::DirectiveParser::ConditionalBlock> >::__push_back_slow_path<angle::pp::DirectiveParser::ConditionalBlock const&>(angle::pp::DirectiveParser::ConditionalBlock const&)
void std::__1::vector<angle::pp::MacroExpander::MacroContext*, std::__1::allocator<angle::pp::MacroExpander::MacroContext*> >::__push_back_slow_path<angle::pp::MacroExpander::MacroContext* const&>(angle::pp::MacroExpander::MacroContext* const&)
void std::__1::vector<angle::pp::Token, std::__1::allocator<angle::pp::Token> >::__push_back_slow_path<angle::pp::Token const&>(angle::pp::Token const&)
void std::__1::vector<char const*, std::__1::allocator<char const*> >::__push_back_slow_path<char const* const&>(char const* const&)
void std::__1::vector<char const*, std::__1::allocator<char const*> >::__push_back_slow_path<char const*>(char const*&&)
void std::__1::vector<egl::Config const*, std::__1::allocator<egl::Config const*> >::__push_back_slow_path<egl::Config const*>(egl::Config const*&&)
void std::__1::vector<float, std::__1::allocator<float> >::__push_back_slow_path<float const&>(float const&)
void std::__1::vector<float, std::__1::allocator<float> >::__push_back_slow_path<float>(float&&)
void std::__1::vector<gl::BufferVariable, std::__1::allocator<gl::BufferVariable> >::__push_back_slow_path<gl::BufferVariable const&>(gl::BufferVariable const&)
void std::__1::vector<gl::Debug::Control, std::__1::allocator<gl::Debug::Control> >::__push_back_slow_path<gl::Debug::Control>(gl::Debug::Control&&)
void std::__1::vector<gl::Debug::Group, std::__1::allocator<gl::Debug::Group> >::__push_back_slow_path<gl::Debug::Group>(gl::Debug::Group&&)
void std::__1::vector<gl::HandleAllocator::HandleRange, std::__1::allocator<gl::HandleAllocator::HandleRange> >::__push_back_slow_path<gl::HandleAllocator::HandleRange>(gl::HandleAllocator::HandleRange&&)
void std::__1::vector<gl::ImageBinding, std::__1::allocator<gl::ImageBinding> >::__emplace_back_slow_path<gl::ImageBinding&>(gl::ImageBinding&)
void std::__1::vector<gl::ImageBinding, std::__1::allocator<gl::ImageBinding> >::__emplace_back_slow_path<gl::ImageBinding>(gl::ImageBinding&&)
void std::__1::vector<gl::InterfaceBlock, std::__1::allocator<gl::InterfaceBlock> >::__push_back_slow_path<gl::InterfaceBlock const&>(gl::InterfaceBlock const&)
void std::__1::vector<gl::LinkedUniform, std::__1::allocator<gl::LinkedUniform> >::__push_back_slow_path<gl::LinkedUniform const&>(gl::LinkedUniform const&)
void std::__1::vector<gl::PackedVarying, std::__1::allocator<gl::PackedVarying> >::__emplace_back_slow_path<sh::ShaderVariable const&, sh::InterpolationType const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(sh::ShaderVariable const&, sh::InterpolationType const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
void std::__1::vector<gl::PackedVarying, std::__1::allocator<gl::PackedVarying> >::__emplace_back_slow_path<sh::ShaderVariable const&, sh::InterpolationType&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(sh::ShaderVariable const&, sh::InterpolationType&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
void std::__1::vector<gl::PackedVarying, std::__1::allocator<gl::PackedVarying> >::__emplace_back_slow_path<sh::Varying const&, sh::InterpolationType const&>(sh::Varying const&, sh::InterpolationType const&)
void std::__1::vector<gl::PackedVarying, std::__1::allocator<gl::PackedVarying> >::__emplace_back_slow_path<sh::Varying const&, sh::InterpolationType&>(sh::Varying const&, sh::InterpolationType&)
void std::__1::vector<gl::Path*, std::__1::allocator<gl::Path*> >::__push_back_slow_path<gl::Path*>(gl::Path*&&)
void std::__1::vector<gl::Range<int>, std::__1::allocator<gl::Range<int> > >::__push_back_slow_path<gl::Range<int> const&>(gl::Range<int> const&)
void std::__1::vector<gl::Rectangle, std::__1::allocator<gl::Rectangle> >::__emplace_back_slow_path<gl::Rectangle>(gl::Rectangle&&)
void std::__1::vector<gl::SamplerBinding, std::__1::allocator<gl::SamplerBinding> >::__emplace_back_slow_path<gl::SamplerBinding>(gl::SamplerBinding&&)
void std::__1::vector<gl::SamplerBinding, std::__1::allocator<gl::SamplerBinding> >::__emplace_back_slow_path<gl::TextureType&, unsigned int&, bool>(gl::TextureType&, unsigned int&, bool&&)
void std::__1::vector<gl::ShCompilerInstance, std::__1::allocator<gl::ShCompilerInstance> >::__push_back_slow_path<gl::ShCompilerInstance>(gl::ShCompilerInstance&&)
void std::__1::vector<gl::ShaderVariableBuffer, std::__1::allocator<gl::ShaderVariableBuffer> >::__push_back_slow_path<gl::ShaderVariableBuffer const&>(gl::ShaderVariableBuffer const&)
void std::__1::vector<gl::TransformFeedbackVarying, std::__1::allocator<gl::TransformFeedbackVarying> >::__emplace_back_slow_path<sh::ShaderVariable const&, sh::Varying const&>(sh::ShaderVariable const&, sh::Varying const&)
void std::__1::vector<gl::TransformFeedbackVarying, std::__1::allocator<gl::TransformFeedbackVarying> >::__emplace_back_slow_path<sh::Varying const&, unsigned int>(sh::Varying const&, unsigned int&&)
void std::__1::vector<gl::TransformFeedbackVarying, std::__1::allocator<gl::TransformFeedbackVarying> >::__emplace_back_slow_path<sh::Varying&, unsigned int&>(sh::Varying&, unsigned int&)
void std::__1::vector<gl::UnusedUniform, std::__1::allocator<gl::UnusedUniform> >::__emplace_back_slow_path<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, bool&&)
void std::__1::vector<gl::UnusedUniform, std::__1::allocator<gl::UnusedUniform> >::__emplace_back_slow_path<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, bool>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&, bool&&)
void std::__1::vector<gl::VertexAttribute, std::__1::allocator<gl::VertexAttribute> >::__emplace_back_slow_path<unsigned int&>(unsigned int&)
void std::__1::vector<gl::VertexAttribute, std::__1::allocator<gl::VertexAttribute> >::__emplace_back_slow_path<unsigned int>(unsigned int&&)
void std::__1::vector<gl::VertexBinding, std::__1::allocator<gl::VertexBinding> >::__emplace_back_slow_path<unsigned int>(unsigned int&&)
void std::__1::vector<glslang::TConstUnionArray, glslang::pool_allocator<glslang::TConstUnionArray> >::__push_back_slow_path<glslang::TConstUnionArray const&>(glslang::TConstUnionArray const&)
void std::__1::vector<glslang::TOffsetRange, std::__1::allocator<glslang::TOffsetRange> >::__push_back_slow_path<glslang::TOffsetRange const&>(glslang::TOffsetRange const&)
void std::__1::vector<glslang::TPoolAllocator::tAllocState, std::__1::allocator<glslang::TPoolAllocator::tAllocState> >::__push_back_slow_path<glslang::TPoolAllocator::tAllocState const&>(glslang::TPoolAllocator::tAllocState const&)
void std::__1::vector<glslang::TPpContext::tInput*, std::__1::allocator<glslang::TPpContext::tInput*> >::__push_back_slow_path<glslang::TPpContext::tInput* const&>(glslang::TPpContext::tInput* const&)
void std::__1::vector<glslang::TRange, std::__1::allocator<glslang::TRange> >::__push_back_slow_path<glslang::TRange const&>(glslang::TRange const&)
void std::__1::vector<glslang::TSymbolTableLevel*, std::__1::allocator<glslang::TSymbolTableLevel*> >::__push_back_slow_path<glslang::TSymbolTableLevel* const&>(glslang::TSymbolTableLevel* const&)
void std::__1::vector<glslang::TSymbolTableLevel*, std::__1::allocator<glslang::TSymbolTableLevel*> >::__push_back_slow_path<glslang::TSymbolTableLevel*>(glslang::TSymbolTableLevel*&&)
void std::__1::vector<glslang::TType const*, std::__1::allocator<glslang::TType const*> >::__push_back_slow_path<glslang::TType const*>(glslang::TType const*&&)
void std::__1::vector<int, pool_allocator<int> >::__push_back_slow_path<int const&>(int const&)
void std::__1::vector<int, pool_allocator<int> >::__push_back_slow_path<int>(int&&)
void std::__1::vector<int, std::__1::allocator<int> >::__push_back_slow_path<int const&>(int const&)
void std::__1::vector<int, std::__1::allocator<int> >::__push_back_slow_path<int>(int&&)
void std::__1::vector<rx::ContextCreationTry, std::__1::allocator<rx::ContextCreationTry> >::__emplace_back_slow_path<int const&, rx::ContextCreationTry::Type, gl::Version>(int const&, rx::ContextCreationTry::Type&&, gl::Version&&)
void std::__1::vector<rx::PathImpl*, std::__1::allocator<rx::PathImpl*> >::__push_back_slow_path<rx::PathImpl*>(rx::PathImpl*&&)
void std::__1::vector<rx::PixelBuffer::SubresourceUpdate, std::__1::allocator<rx::PixelBuffer::SubresourceUpdate> >::__emplace_back_slow_path<VkBuffer_T*&, VkBufferImageCopy&>(VkBuffer_T*&, VkBufferImageCopy&)
void std::__1::vector<rx::PixelBuffer::SubresourceUpdate, std::__1::allocator<rx::PixelBuffer::SubresourceUpdate> >::__emplace_back_slow_path<rx::PixelBuffer::SubresourceUpdate const&>(rx::PixelBuffer::SubresourceUpdate const&)
void std::__1::vector<rx::ProgramGL::PathRenderingFragmentInput, std::__1::allocator<rx::ProgramGL::PathRenderingFragmentInput> >::__push_back_slow_path<rx::ProgramGL::PathRenderingFragmentInput>(rx::ProgramGL::PathRenderingFragmentInput&&)
void std::__1::vector<rx::RenderTargetVk, std::__1::allocator<rx::RenderTargetVk> >::__emplace_back_slow_path<rx::vk::ImageHelper*, rx::vk::ImageView*, unsigned long&>(rx::vk::ImageHelper*&&, rx::vk::ImageView*&&, unsigned long&)
void std::__1::vector<rx::RendererVk::CommandBatch, std::__1::allocator<rx::RendererVk::CommandBatch> >::__emplace_back_slow_path<rx::RendererVk::CommandBatch>(rx::RendererVk::CommandBatch&&)
void std::__1::vector<rx::vk::BufferAndMemory, std::__1::allocator<rx::vk::BufferAndMemory> >::__emplace_back_slow_path<rx::vk::Buffer, rx::vk::DeviceMemory>(rx::vk::Buffer&&, rx::vk::DeviceMemory&&)
void std::__1::vector<rx::vk::CommandGraphNode*, std::__1::allocator<rx::vk::CommandGraphNode*> >::__emplace_back_slow_path<rx::vk::CommandGraphNode*&>(rx::vk::CommandGraphNode*&)
void std::__1::vector<rx::vk::CommandGraphNode*, std::__1::allocator<rx::vk::CommandGraphNode*> >::__push_back_slow_path<rx::vk::CommandGraphNode* const&>(rx::vk::CommandGraphNode* const&)
void std::__1::vector<rx::vk::DynamicQueryPool::QueryPoolStats, std::__1::allocator<rx::vk::DynamicQueryPool::QueryPoolStats> >::__push_back_slow_path<rx::vk::DynamicQueryPool::QueryPoolStats const&>(rx::vk::DynamicQueryPool::QueryPoolStats const&)
void std::__1::vector<rx::vk::GarbageObject, std::__1::allocator<rx::vk::GarbageObject> >::__emplace_back_slow_path<rx::Serial&, rx::vk::Buffer&>(rx::Serial&, rx::vk::Buffer&)
void std::__1::vector<rx::vk::GarbageObject, std::__1::allocator<rx::vk::GarbageObject> >::__emplace_back_slow_path<rx::Serial&, rx::vk::DescriptorPool&>(rx::Serial&, rx::vk::DescriptorPool&)
void std::__1::vector<rx::vk::GarbageObject, std::__1::allocator<rx::vk::GarbageObject> >::__emplace_back_slow_path<rx::Serial&, rx::vk::DeviceMemory&>(rx::Serial&, rx::vk::DeviceMemory&)
void std::__1::vector<rx::vk::GarbageObject, std::__1::allocator<rx::vk::GarbageObject> >::__emplace_back_slow_path<rx::Serial&, rx::vk::Framebuffer&>(rx::Serial&, rx::vk::Framebuffer&)
void std::__1::vector<rx::vk::GarbageObject, std::__1::allocator<rx::vk::GarbageObject> >::__emplace_back_slow_path<rx::Serial&, rx::vk::Image&>(rx::Serial&, rx::vk::Image&)
void std::__1::vector<rx::vk::GarbageObject, std::__1::allocator<rx::vk::GarbageObject> >::__emplace_back_slow_path<rx::Serial&, rx::vk::ImageView&>(rx::Serial&, rx::vk::ImageView&)
void std::__1::vector<rx::vk::GarbageObject, std::__1::allocator<rx::vk::GarbageObject> >::__emplace_back_slow_path<rx::Serial&, rx::vk::Sampler&>(rx::Serial&, rx::vk::Sampler&)
void std::__1::vector<rx::vk::QueryPool, std::__1::allocator<rx::vk::QueryPool> >::__push_back_slow_path<rx::vk::QueryPool>(rx::vk::QueryPool&&)
void std::__1::vector<sh::Attribute, std::__1::allocator<sh::Attribute> >::__push_back_slow_path<sh::Attribute const&>(sh::Attribute const&)
void std::__1::vector<sh::Attribute, std::__1::allocator<sh::Attribute> >::__push_back_slow_path<sh::Attribute>(sh::Attribute&&)
void std::__1::vector<sh::CallDAG::CallDAGCreator::CreatorFunctionData*, pool_allocator<sh::CallDAG::CallDAGCreator::CreatorFunctionData*> >::__push_back_slow_path<sh::CallDAG::CallDAGCreator::CreatorFunctionData* const&>(sh::CallDAG::CallDAGCreator::CreatorFunctionData* const&)
void std::__1::vector<sh::InterfaceBlock, std::__1::allocator<sh::InterfaceBlock> >::__push_back_slow_path<sh::InterfaceBlock const&>(sh::InterfaceBlock const&)
void std::__1::vector<sh::InterfaceBlockField, std::__1::allocator<sh::InterfaceBlockField> >::__push_back_slow_path<sh::InterfaceBlockField const&>(sh::InterfaceBlockField const&)
void std::__1::vector<sh::OutputVariable, std::__1::allocator<sh::OutputVariable> >::__push_back_slow_path<sh::OutputVariable const&>(sh::OutputVariable const&)
void std::__1::vector<sh::OutputVariable, std::__1::allocator<sh::OutputVariable> >::__push_back_slow_path<sh::OutputVariable>(sh::OutputVariable&&)
void std::__1::vector<sh::ShaderVariable, std::__1::allocator<sh::ShaderVariable> >::__push_back_slow_path<sh::ShaderVariable const&>(sh::ShaderVariable const&)
void std::__1::vector<sh::TDeclarator*, pool_allocator<sh::TDeclarator*> >::__push_back_slow_path<sh::TDeclarator* const&>(sh::TDeclarator* const&)
void std::__1::vector<sh::TField*, pool_allocator<sh::TField*> >::__push_back_slow_path<sh::TField* const&>(sh::TField* const&)
void std::__1::vector<sh::TField*, pool_allocator<sh::TField*> >::__push_back_slow_path<sh::TField*>(sh::TField*&&)
void std::__1::vector<sh::TIntermNode*, pool_allocator<sh::TIntermNode*> >::__push_back_slow_path<sh::TIntermNode* const&>(sh::TIntermNode* const&)
void std::__1::vector<sh::TIntermNode*, pool_allocator<sh::TIntermNode*> >::__push_back_slow_path<sh::TIntermNode*>(sh::TIntermNode*&&)
void std::__1::vector<sh::TIntermSymbol const*, std::__1::allocator<sh::TIntermSymbol const*> >::__push_back_slow_path<sh::TIntermSymbol const* const&>(sh::TIntermSymbol const* const&)
void std::__1::vector<sh::TIntermSymbol*, std::__1::allocator<sh::TIntermSymbol*> >::__push_back_slow_path<sh::TIntermSymbol* const&>(sh::TIntermSymbol* const&)
void std::__1::vector<sh::TIntermTraverser::NodeInsertMultipleEntry, std::__1::allocator<sh::TIntermTraverser::NodeInsertMultipleEntry> >::__push_back_slow_path<sh::TIntermTraverser::NodeInsertMultipleEntry const&>(sh::TIntermTraverser::NodeInsertMultipleEntry const&)
void std::__1::vector<sh::TIntermTraverser::NodeReplaceWithMultipleEntry, std::__1::allocator<sh::TIntermTraverser::NodeReplaceWithMultipleEntry> >::__emplace_back_slow_path<sh::TIntermBlock*, sh::TIntermDeclaration*&, sh::TVector<sh::TIntermNode*>&>(sh::TIntermBlock*&&, sh::TIntermDeclaration*&, sh::TVector<sh::TIntermNode*>&)
void std::__1::vector<sh::TIntermTraverser::NodeReplaceWithMultipleEntry, std::__1::allocator<sh::TIntermTraverser::NodeReplaceWithMultipleEntry> >::__push_back_slow_path<sh::TIntermTraverser::NodeReplaceWithMultipleEntry>(sh::TIntermTraverser::NodeReplaceWithMultipleEntry&&)
void std::__1::vector<sh::TIntermTraverser::NodeUpdateEntry, std::__1::allocator<sh::TIntermTraverser::NodeUpdateEntry> >::__push_back_slow_path<sh::TIntermTraverser::NodeUpdateEntry>(sh::TIntermTraverser::NodeUpdateEntry&&)
void std::__1::vector<sh::TIntermTraverser::ParentBlock, std::__1::allocator<sh::TIntermTraverser::ParentBlock> >::__push_back_slow_path<sh::TIntermTraverser::ParentBlock>(sh::TIntermTraverser::ParentBlock&&)
void std::__1::vector<sh::TQualifierWrapperBase const*, pool_allocator<sh::TQualifierWrapperBase const*> >::__push_back_slow_path<sh::TQualifierWrapperBase const* const&>(sh::TQualifierWrapperBase const* const&)
void std::__1::vector<sh::TQualifierWrapperBase const*, pool_allocator<sh::TQualifierWrapperBase const*> >::__push_back_slow_path<sh::TQualifierWrapperBase const*>(sh::TQualifierWrapperBase const*&&)
void std::__1::vector<sh::TVariable const*, pool_allocator<sh::TVariable const*> >::__push_back_slow_path<sh::TVariable const* const&>(sh::TVariable const* const&)
void std::__1::vector<sh::TVariable const*, pool_allocator<sh::TVariable const*> >::__push_back_slow_path<sh::TVariable const*>(sh::TVariable const*&&)
void std::__1::vector<sh::TVariable const*, std::__1::allocator<sh::TVariable const*> >::__push_back_slow_path<sh::TVariable const*>(sh::TVariable const*&&)
void std::__1::vector<sh::TVector<sh::TIntermNode*>, std::__1::allocator<sh::TVector<sh::TIntermNode*> > >::__push_back_slow_path<sh::TVector<sh::TIntermNode*> >(sh::TVector<sh::TIntermNode*>&&)
void std::__1::vector<sh::Uniform, std::__1::allocator<sh::Uniform> >::__push_back_slow_path<sh::Uniform const&>(sh::Uniform const&)
void std::__1::vector<sh::Uniform, std::__1::allocator<sh::Uniform> >::__push_back_slow_path<sh::Uniform>(sh::Uniform&&)
void std::__1::vector<sh::Varying, std::__1::allocator<sh::Varying> >::__push_back_slow_path<sh::Varying const&>(sh::Varying const&)
void std::__1::vector<sh::Varying, std::__1::allocator<sh::Varying> >::__push_back_slow_path<sh::Varying>(sh::Varying&&)
void std::__1::vector<spv::Block*, std::__1::allocator<spv::Block*> >::__push_back_slow_path<spv::Block* const&>(spv::Block* const&)
void std::__1::vector<spv::Block*, std::__1::allocator<spv::Block*> >::__push_back_slow_path<spv::Block*>(spv::Block*&&)
void std::__1::vector<spv::Builder::AccessChain, std::__1::allocator<spv::Builder::AccessChain> >::__push_back_slow_path<spv::Builder::AccessChain>(spv::Builder::AccessChain&&)
void std::__1::vector<spv::Decoration, std::__1::allocator<spv::Decoration> >::__push_back_slow_path<spv::Decoration const&>(spv::Decoration const&)
void std::__1::vector<spv::Decoration, std::__1::allocator<spv::Decoration> >::__push_back_slow_path<spv::Decoration>(spv::Decoration&&)
void std::__1::vector<spv::Function*, std::__1::allocator<spv::Function*> >::__push_back_slow_path<spv::Function* const&>(spv::Function* const&)
void std::__1::vector<spv::IdImmediate, std::__1::allocator<spv::IdImmediate> >::__push_back_slow_path<spv::IdImmediate const&>(spv::IdImmediate const&)
void std::__1::vector<spv::Instruction*, std::__1::allocator<spv::Instruction*> >::__push_back_slow_path<spv::Instruction* const&>(spv::Instruction* const&)
void std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >, glslang::pool_allocator<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > > >::__push_back_slow_path<std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, glslang::pool_allocator<char> >&&)
void std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__push_back_slow_path<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >&&)
void std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::__push_back_slow_path<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&)
void std::__1::vector<std::__1::shared_ptr<angle::pp::Macro>, std::__1::allocator<std::__1::shared_ptr<angle::pp::Macro> > >::__push_back_slow_path<std::__1::shared_ptr<angle::pp::Macro> const&>(std::__1::shared_ptr<angle::pp::Macro> const&)
void std::__1::vector<std::__1::unique_ptr<sh::TMap<sh::TBasicType, sh::TPrecision, std::__1::less<sh::TBasicType> >, std::__1::default_delete<sh::TMap<sh::TBasicType, sh::TPrecision, std::__1::less<sh::TBasicType> > > >, std::__1::allocator<std::__1::unique_ptr<sh::TMap<sh::TBasicType, sh::TPrecision, std::__1::less<sh::TBasicType> >, std::__1::default_delete<sh::TMap<sh::TBasicType, sh::TPrecision, std::__1::less<sh::TBasicType> > > > > >::__emplace_back_slow_path<sh::TMap<sh::TBasicType, sh::TPrecision, std::__1::less<sh::TBasicType> >*>(sh::TMap<sh::TBasicType, sh::TPrecision, std::__1::less<sh::TBasicType> >*&&)
void std::__1::vector<std::__1::unique_ptr<sh::TSymbolTable::TSymbolTableLevel, std::__1::default_delete<sh::TSymbolTable::TSymbolTableLevel> >, std::__1::allocator<std::__1::unique_ptr<sh::TSymbolTable::TSymbolTableLevel, std::__1::default_delete<sh::TSymbolTable::TSymbolTableLevel> > > >::__emplace_back_slow_path<sh::TSymbolTable::TSymbolTableLevel*>(sh::TSymbolTable::TSymbolTableLevel*&&)
void std::__1::vector<std::__1::unique_ptr<spv::Function, std::__1::default_delete<spv::Function> >, std::__1::allocator<std::__1::unique_ptr<spv::Function, std::__1::default_delete<spv::Function> > > >::__push_back_slow_path<std::__1::unique_ptr<spv::Function, std::__1::default_delete<spv::Function> > >(std::__1::unique_ptr<spv::Function, std::__1::default_delete<spv::Function> >&&)
void std::__1::vector<std::__1::unique_ptr<spv::Instruction, std::__1::default_delete<spv::Instruction> >, std::__1::allocator<std::__1::unique_ptr<spv::Instruction, std::__1::default_delete<spv::Instruction> > > >::__push_back_slow_path<std::__1::unique_ptr<spv::Instruction, std::__1::default_delete<spv::Instruction> > >(std::__1::unique_ptr<spv::Instruction, std::__1::default_delete<spv::Instruction> >&&)
void std::__1::vector<std::__1::vector<angle::pp::Token, std::__1::allocator<angle::pp::Token> >, std::__1::allocator<std::__1::vector<angle::pp::Token, std::__1::allocator<angle::pp::Token> > > >::__push_back_slow_path<std::__1::vector<angle::pp::Token, std::__1::allocator<angle::pp::Token> > >(std::__1::vector<angle::pp::Token, std::__1::allocator<angle::pp::Token> >&&)
void std::__1::vector<unsigned int, pool_allocator<unsigned int> >::__push_back_slow_path<unsigned int const&>(unsigned int const&)
void std::__1::vector<unsigned int, pool_allocator<unsigned int> >::__push_back_slow_path<unsigned int>(unsigned int&&)
void std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::__push_back_slow_path<unsigned int const&>(unsigned int const&)
void std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >::__push_back_slow_path<unsigned int>(unsigned int&&)
void std::__1::vector<unsigned long, std::__1::allocator<unsigned long> >::__push_back_slow_path<unsigned long>(unsigned long&&)
void subgroupBarrier();void subgroupMemoryBarrier();void subgroupMemoryBarrierBuffer();void subgroupMemoryBarrierImage();bool subgroupElect();bool   subgroupAll(bool);bool   subgroupAny(bool);bool   subgroupAllEqual(float);bool   subgroupAllEqual(vec2);bool   subgroupAllEqual(vec3);bool   subgroupAllEqual(vec4);bool   subgroupAllEqual(int);bool   subgroupAllEqual(ivec2);bool   subgroupAllEqual(ivec3);bool   subgroupAllEqual(ivec4);bool   subgroupAllEqual(uint);bool   subgroupAllEqual(uvec2);bool   subgroupAllEqual(uvec3);bool   subgroupAllEqual(uvec4);bool   subgroupAllEqual(bool);bool   subgroupAllEqual(bvec2);bool   subgroupAllEqual(bvec3);bool   subgroupAllEqual(bvec4);float  subgroupBroadcast(float, uint);vec2   subgroupBroadcast(vec2, uint);vec3   subgroupBroadcast(vec3, uint);vec4   subgroupBroadcast(vec4, uint);int    subgroupBroadcast(int, uint);ivec2  subgroupBroadcast(ivec2, uint);ivec3  subgroupBroadcast(ivec3, uint);ivec4  subgroupBroadcast(ivec4, uint);uint   subgroupBroadcast(uint, uint);uvec2  subgroupBroadcast(uvec2, uint);uvec3  subgroupBroadcast(uvec3, uint);uvec4  subgroupBroadcast(uvec4, uint);bool   subgroupBroadcast(bool, uint);bvec2  subgroupBroadcast(bvec2, uint);bvec3  subgroupBroadcast(bvec3, uint);bvec4  subgroupBroadcast(bvec4, uint);float  subgroupBroadcastFirst(float);vec2   subgroupBroadcastFirst(vec2);vec3   subgroupBroadcastFirst(vec3);vec4   subgroupBroadcastFirst(vec4);int    subgroupBroadcastFirst(int);ivec2  subgroupBroadcastFirst(ivec2);ivec3  subgroupBroadcastFirst(ivec3);ivec4  subgroupBroadcastFirst(ivec4);uint   subgroupBroadcastFirst(uint);uvec2  subgroupBroadcastFirst(uvec2);uvec3  subgroupBroadcastFirst(uvec3);uvec4  subgroupBroadcastFirst(uvec4);bool   subgroupBroadcastFirst(bool);bvec2  subgroupBroadcastFirst(bvec2);bvec3  subgroupBroadcastFirst(bvec3);bvec4  subgroupBroadcastFirst(bvec4);uvec4  subgroupBallot(bool);bool   subgroupInverseBallot(uvec4);bool   subgroupBallotBitExtract(uvec4, uint);uint   subgroupBallotBitCount(uvec4);uint   subgroupBallotInclusiveBitCount(uvec4);uint   subgroupBallotExclusiveBitCount(uvec4);uint   subgroupBallotFindLSB(uvec4);uint   subgroupBallotFindMSB(uvec4);float  subgroupShuffle(float, uint);vec2   subgroupShuffle(vec2, uint);vec3   subgroupShuffle(vec3, uint);vec4   subgroupShuffle(vec4, uint);int    subgroupShuffle(int, uint);ivec2  subgroupShuffle(ivec2, uint);ivec3  subgroupShuffle(ivec3, uint);ivec4  subgroupShuffle(ivec4, uint);uint   subgroupShuffle(uint, uint);uvec2  subgroupShuffle(uvec2, uint);uvec3  subgroupShuffle(uvec3, uint);uvec4  subgroupShuffle(uvec4, uint);bool   subgroupShuffle(bool, uint);bvec2  subgroupShuffle(bvec2, uint);bvec3  subgroupShuffle(bvec3, uint);bvec4  subgroupShuffle(bvec4, uint);float  subgroupShuffleXor(float, uint);vec2   subgroupShuffleXor(vec2, uint);vec3   subgroupShuffleXor(vec3, uint);vec4   subgroupShuffleXor(vec4, uint);int    subgroupShuffleXor(int, uint);ivec2  subgroupShuffleXor(ivec2, uint);ivec3  subgroupShuffleXor(ivec3, uint);ivec4  subgroupShuffleXor(ivec4, uint);uint   subgroupShuffleXor(uint, uint);uvec2  subgroupShuffleXor(uvec2, uint);uvec3  subgroupShuffleXor(uvec3, uint);uvec4  subgroupShuffleXor(uvec4, uint);bool   subgroupShuffleXor(bool, uint);bvec2  subgroupShuffleXor(bvec2, uint);bvec3  subgroupShuffleXor(bvec3, uint);bvec4  subgroupShuffleXor(bvec4, uint);float  subgroupShuffleUp(float, uint delta);vec2   subgroupShuffleUp(vec2, uint delta);vec3   subgroupShuffleUp(vec3, uint delta);vec4   subgroupShuffleUp(vec4, uint delta);int    subgroupShuffleUp(int, uint delta);ivec2  subgroupShuffleUp(ivec2, uint delta);ivec3  subgroupShuffleUp(ivec3, uint delta);ivec4  subgroupShuffleUp(ivec4, uint delta);uint   subgroupShuffleUp(uint, uint delta);uvec2  subgroupShuffleUp(uvec2, uint delta);uvec3  subgroupShuffleUp(uvec3, uint delta);uvec4  subgroupShuffleUp(uvec4, uint delta);bool   subgroupShuffleUp(bool, uint delta);bvec2  subgroupShuffleUp(bvec2, uint delta);bvec3  subgroupShuffleUp(bvec3, uint delta);bvec4  subgroupShuffleUp(bvec4, uint delta);float  subgroupShuffleDown(float, uint delta);vec2   subgroupShuffleDown(vec2, uint delta);vec3   subgroupShuffleDown(vec3, uint delta);vec4   subgroupShuffleDown(vec4, uint delta);int    subgroupShuffleDown(int, uint delta);ivec2  subgroupShuffleDown(ivec2, uint delta);ivec3  subgroupShuffleDown(ivec3, uint delta);ivec4  subgroupShuffleDown(ivec4, uint delta);uint   subgroupShuffleDown(uint, uint delta);uvec2  subgroupShuffleDown(uvec2, uint delta);uvec3  subgroupShuffleDown(uvec3, uint delta);uvec4  subgroupShuffleDown(uvec4, uint delta);bool   subgroupShuffleDown(bool, uint delta);bvec2  subgroupShuffleDown(bvec2, uint delta);bvec3  subgroupShuffleDown(bvec3, uint delta);bvec4  subgroupShuffleDown(bvec4, uint delta);float  subgroupAdd(float);vec2   subgroupAdd(vec2);vec3   subgroupAdd(vec3);vec4   subgroupAdd(vec4);int    subgroupAdd(int);ivec2  subgroupAdd(ivec2);ivec3  subgroupAdd(ivec3);ivec4  subgroupAdd(ivec4);uint   subgroupAdd(uint);uvec2  subgroupAdd(uvec2);uvec3  subgroupAdd(uvec3);uvec4  subgroupAdd(uvec4);float  subgroupMul(float);vec2   subgroupMul(vec2);vec3   subgroupMul(vec3);vec4   subgroupMul(vec4);int    subgroupMul(int);ivec2  subgroupMul(ivec2);ivec3  subgroupMul(ivec3);ivec4  subgroupMul(ivec4);uint   subgroupMul(uint);uvec2  subgroupMul(uvec2);uvec3  subgroupMul(uvec3);uvec4  subgroupMul(uvec4);float  subgroupMin(float);vec2   subgroupMin(vec2);vec3   subgroupMin(vec3);vec4   subgroupMin(vec4);int    subgroupMin(int);ivec2  subgroupMin(ivec2);ivec3  subgroupMin(ivec3);ivec4  subgroupMin(ivec4);uint   subgroupMin(uint);uvec2  subgroupMin(uvec2);uvec3  subgroupMin(uvec3);uvec4  subgroupMin(uvec4);float  subgroupMax(float);vec2   subgroupMax(vec2);vec3   subgroupMax(vec3);vec4   subgroupMax(vec4);int    subgroupMax(int);ivec2  subgroupMax(ivec2);ivec3  subgroupMax(ivec3);ivec4  subgroupMax(ivec4);uint   subgroupMax(uint);uvec2  subgroupMax(uvec2);uvec3  subgroupMax(uvec3);uvec4  subgroupMax(uvec4);int    subgroupAnd(int);ivec2  subgroupAnd(ivec2);ivec3  subgroupAnd(ivec3);ivec4  subgroupAnd(ivec4);uint   subgroupAnd(uint);uvec2  subgroupAnd(uvec2);uvec3  subgroupAnd(uvec3);uvec4  subgroupAnd(uvec4);bool   subgroupAnd(bool);bvec2  subgroupAnd(bvec2);bvec3  subgroupAnd(bvec3);bvec4  subgroupAnd(bvec4);int    subgroupOr(int);ivec2  subgroupOr(ivec2);ivec3  subgroupOr(ivec3);ivec4  subgroupOr(ivec4);uint   subgroupOr(uint);uvec2  subgroupOr(uvec2);uvec3  subgroupOr(uvec3);uvec4  subgroupOr(uvec4);bool   subgroupOr(bool);bvec2  subgroupOr(bvec2);bvec3  subgroupOr(bvec3);bvec4  subgroupOr(bvec4);int    subgroupXor(int);ivec2  subgroupXor(ivec2);ivec3  subgroupXor(ivec3);ivec4  subgroupXor(ivec4);uint   subgroupXor(uint);uvec2  subgroupXor(uvec2);uvec3  subgroupXor(uvec3);uvec4  subgroupXor(uvec4);bool   subgroupXor(bool);bvec2  subgroupXor(bvec2);bvec3  subgroupXor(bvec3);bvec4  subgroupXor(bvec4);float  subgroupInclusiveAdd(float);vec2   subgroupInclusiveAdd(vec2);vec3   subgroupInclusiveAdd(vec3);vec4   subgroupInclusiveAdd(vec4);int    subgroupInclusiveAdd(int);ivec2  subgroupInclusiveAdd(ivec2);ivec3  subgroupInclusiveAdd(ivec3);ivec4  subgroupInclusiveAdd(ivec4);uint   subgroupInclusiveAdd(uint);uvec2  subgroupInclusiveAdd(uvec2);uvec3  subgroupInclusiveAdd(uvec3);uvec4  subgroupInclusiveAdd(uvec4);float  subgroupInclusiveMul(float);vec2   subgroupInclusiveMul(vec2);vec3   subgroupInclusiveMul(vec3);vec4   subgroupInclusiveMul(vec4);int    subgroupInclusiveMul(int);ivec2  subgroupInclusiveMul(ivec2);ivec3  subgroupInclusiveMul(ivec3);ivec4  subgroupInclusiveMul(ivec4);uint   subgroupInclusiveMul(uint);uvec2  subgroupInclusiveMul(uvec2);uvec3  subgroupInclusiveMul(uvec3);uvec4  subgroupInclusiveMul(uvec4);float  subgroupInclusiveMin(float);vec2   subgroupInclusiveMin(vec2);vec3   subgroupInclusiveMin(vec3);vec4   subgroupInclusiveMin(vec4);int    subgroupInclusiveMin(int);ivec2  subgroupInclusiveMin(ivec2);ivec3  subgroupInclusiveMin(ivec3);ivec4  subgroupInclusiveMin(ivec4);uint   subgroupInclusiveMin(uint);uvec2  subgroupInclusiveMin(uvec2);uvec3  subgroupInclusiveMin(uvec3);uvec4  subgroupInclusiveMin(uvec4);float  subgroupInclusiveMax(float);vec2   subgroupInclusiveMax(vec2);vec3   subgroupInclusiveMax(vec3);vec4   subgroupInclusiveMax(vec4);int    subgroupInclusiveMax(int);ivec2  subgroupInclusiveMax(ivec2);ivec3  subgroupInclusiveMax(ivec3);ivec4  subgroupInclusiveMax(ivec4);uint   subgroupInclusiveMax(uint);uvec2  subgroupInclusiveMax(uvec2);uvec3  subgroupInclusiveMax(uvec3);uvec4  subgroupInclusiveMax(uvec4);int    subgroupInclusiveAnd(int);ivec2  subgroupInclusiveAnd(ivec2);ivec3  subgroupInclusiveAnd(ivec3);ivec4  subgroupInclusiveAnd(ivec4);uint   subgroupInclusiveAnd(uint);uvec2  subgroupInclusiveAnd(uvec2);uvec3  subgroupInclusiveAnd(uvec3);uvec4  subgroupInclusiveAnd(uvec4);bool   subgroupInclusiveAnd(bool);bvec2  subgroupInclusiveAnd(bvec2);bvec3  subgroupInclusiveAnd(bvec3);bvec4  subgroupInclusiveAnd(bvec4);int    subgroupInclusiveOr(int);ivec2  subgroupInclusiveOr(ivec2);ivec3  subgroupInclusiveOr(ivec3);ivec4  subgroupInclusiveOr(ivec4);uint   subgroupInclusiveOr(uint);uvec2  subgroupInclusiveOr(uvec2);uvec3  subgroupInclusiveOr(uvec3);uvec4  subgroupInclusiveOr(uvec4);bool   subgroupInclusiveOr(bool);bvec2  subgroupInclusiveOr(bvec2);bvec3  subgroupInclusiveOr(bvec3);bvec4  subgroupInclusiveOr(bvec4);int    subgroupInclusiveXor(int);ivec2  subgroupInclusiveXor(ivec2);ivec3  subgroupInclusiveXor(ivec3);ivec4  subgroupInclusiveXor(ivec4);uint   subgroupInclusiveXor(uint);uvec2  subgroupInclusiveXor(uvec2);uvec3  subgroupInclusiveXor(uvec3);uvec4  subgroupInclusiveXor(uvec4);bool   subgroupInclusiveXor(bool);bvec2  subgroupInclusiveXor(bvec2);bvec3  subgroupInclusiveXor(bvec3);bvec4  subgroupInclusiveXor(bvec4);float  subgroupExclusiveAdd(float);vec2   subgroupExclusiveAdd(vec2);vec3   subgroupExclusiveAdd(vec3);vec4   subgroupExclusiveAdd(vec4);int    subgroupExclusiveAdd(int);ivec2  subgroupExclusiveAdd(ivec2);ivec3  subgroupExclusiveAdd(ivec3);ivec4  subgroupExclusiveAdd(ivec4);uint   subgroupExclusiveAdd(uint);uvec2  subgroupExclusiveAdd(uvec2);uvec3  subgroupExclusiveAdd(uvec3);uvec4  subgroupExclusiveAdd(uvec4);float  subgroupExclusiveMul(float);vec2   subgroupExclusiveMul(vec2);vec3   subgroupExclusiveMul(vec3);vec4   subgroupExclusiveMul(vec4);int    subgroupExclusiveMul(int);ivec2  subgroupExclusiveMul(ivec2);ivec3  subgroupExclusiveMul(ivec3);ivec4  subgroupExclusiveMul(ivec4);uint   subgroupExclusiveMul(uint);uvec2  subgroupExclusiveMul(uvec2);uvec3  subgroupExclusiveMul(uvec3);uvec4  subgroupExclusiveMul(uvec4);float  subgroupExclusiveMin(float);vec2   subgroupExclusiveMin(vec2);vec3   subgroupExclusiveMin(vec3);vec4   subgroupExclusiveMin(vec4);int    subgroupExclusiveMin(int);ivec2  subgroupExclusiveMin(ivec2);ivec3  subgroupExclusiveMin(ivec3);ivec4  subgroupExclusiveMin(ivec4);uint   subgroupExclusiveMin(uint);uvec2  subgroupExclusiveMin(uvec2);uvec3  subgroupExclusiveMin(uvec3);uvec4  subgroupExclusiveMin(uvec4);float  subgroupExclusiveMax(float);vec2   subgroupExclusiveMax(vec2);vec3   subgroupExclusiveMax(vec3);vec4   subgroupExclusiveMax(vec4);int    subgroupExclusiveMax(int);ivec2  subgroupExclusiveMax(ivec2);ivec3  subgroupExclusiveMax(ivec3);ivec4  subgroupExclusiveMax(ivec4);uint   subgroupExclusiveMax(uint);uvec2  subgroupExclusiveMax(uvec2);uvec3  subgroupExclusiveMax(uvec3);uvec4  subgroupExclusiveMax(uvec4);int    subgroupExclusiveAnd(int);ivec2  subgroupExclusiveAnd(ivec2);ivec3  subgroupExclusiveAnd(ivec3);ivec4  subgroupExclusiveAnd(ivec4);uint   subgroupExclusiveAnd(uint);uvec2  subgroupExclusiveAnd(uvec2);uvec3  subgroupExclusiveAnd(uvec3);uvec4  subgroupExclusiveAnd(uvec4);bool   subgroupExclusiveAnd(bool);bvec2  subgroupExclusiveAnd(bvec2);bvec3  subgroupExclusiveAnd(bvec3);bvec4  subgroupExclusiveAnd(bvec4);int    subgroupExclusiveOr(int);ivec2  subgroupExclusiveOr(ivec2);ivec3  subgroupExclusiveOr(ivec3);ivec4  subgroupExclusiveOr(ivec4);uint   subgroupExclusiveOr(uint);uvec2  subgroupExclusiveOr(uvec2);uvec3  subgroupExclusiveOr(uvec3);uvec4  subgroupExclusiveOr(uvec4);bool   subgroupExclusiveOr(bool);bvec2  subgroupExclusiveOr(bvec2);bvec3  subgroupExclusiveOr(bvec3);bvec4  subgroupExclusiveOr(bvec4);int    subgroupExclusiveXor(int);ivec2  subgroupExclusiveXor(ivec2);ivec3  subgroupExclusiveXor(ivec3);ivec4  subgroupExclusiveXor(ivec4);uint   subgroupExclusiveXor(uint);uvec2  subgroupExclusiveXor(uvec2);uvec3  subgroupExclusiveXor(uvec3);uvec4  subgroupExclusiveXor(uvec4);bool   subgroupExclusiveXor(bool);bvec2  subgroupExclusiveXor(bvec2);bvec3  subgroupExclusiveXor(bvec3);bvec4  subgroupExclusiveXor(bvec4);float  subgroupClusteredAdd(float, uint);vec2   subgroupClusteredAdd(vec2, uint);vec3   subgroupClusteredAdd(vec3, uint);vec4   subgroupClusteredAdd(vec4, uint);int    subgroupClusteredAdd(int, uint);ivec2  subgroupClusteredAdd(ivec2, uint);ivec3  subgroupClusteredAdd(ivec3, uint);ivec4  subgroupClusteredAdd(ivec4, uint);uint   subgroupClusteredAdd(uint, uint);uvec2  subgroupClusteredAdd(uvec2, uint);uvec3  subgroupClusteredAdd(uvec3, uint);uvec4  subgroupClusteredAdd(uvec4, uint);float  subgroupClusteredMul(float, uint);vec2   subgroupClusteredMul(vec2, uint);vec3   subgroupClusteredMul(vec3, uint);vec4   subgroupClusteredMul(vec4, uint);int    subgroupClusteredMul(int, uint);ivec2  subgroupClusteredMul(ivec2, uint);ivec3  subgroupClusteredMul(ivec3, uint);ivec4  subgroupClusteredMul(ivec4, uint);uint   subgroupClusteredMul(uint, uint);uvec2  subgroupClusteredMul(uvec2, uint);uvec3  subgroupClusteredMul(uvec3, uint);uvec4  subgroupClusteredMul(uvec4, uint);float  subgroupClusteredMin(float, uint);vec2   subgroupClusteredMin(vec2, uint);vec3   subgroupClusteredMin(vec3, uint);vec4   subgroupClusteredMin(vec4, uint);int    subgroupClusteredMin(int, uint);ivec2  subgroupClusteredMin(ivec2, uint);ivec3  subgroupClusteredMin(ivec3, uint);ivec4  subgroupClusteredMin(ivec4, uint);uint   subgroupClusteredMin(uint, uint);uvec2  subgroupClusteredMin(uvec2, uint);uvec3  subgroupClusteredMin(uvec3, uint);uvec4  subgroupClusteredMin(uvec4, uint);float  subgroupClusteredMax(float, uint);vec2   subgroupClusteredMax(vec2, uint);vec3   subgroupClusteredMax(vec3, uint);vec4   subgroupClusteredMax(vec4, uint);int    subgroupClusteredMax(int, uint);ivec2  subgroupClusteredMax(ivec2, uint);ivec3  subgroupClusteredMax(ivec3, uint);ivec4  subgroupClusteredMax(ivec4, uint);uint   subgroupClusteredMax(uint, uint);uvec2  subgroupClusteredMax(uvec2, uint);uvec3  subgroupClusteredMax(uvec3, uint);uvec4  subgroupClusteredMax(uvec4, uint);int    subgroupClusteredAnd(int, uint);ivec2  subgroupClusteredAnd(ivec2, uint);ivec3  subgroupClusteredAnd(ivec3, uint);ivec4  subgroupClusteredAnd(ivec4, uint);uint   subgroupClusteredAnd(uint, uint);uvec2  subgroupClusteredAnd(uvec2, uint);uvec3  subgroupClusteredAnd(uvec3, uint);uvec4  subgroupClusteredAnd(uvec4, uint);bool   subgroupClusteredAnd(bool, uint);bvec2  subgroupClusteredAnd(bvec2, uint);bvec3  subgroupClusteredAnd(bvec3, uint);bvec4  subgroupClusteredAnd(bvec4, uint);int    subgroupClusteredOr(int, uint);ivec2  subgroupClusteredOr(ivec2, uint);ivec3  subgroupClusteredOr(ivec3, uint);ivec4  subgroupClusteredOr(ivec4, uint);uint   subgroupClusteredOr(uint, uint);uvec2  subgroupClusteredOr(uvec2, uint);uvec3  subgroupClusteredOr(uvec3, uint);uvec4  subgroupClusteredOr(uvec4, uint);bool   subgroupClusteredOr(bool, uint);bvec2  subgroupClusteredOr(bvec2, uint);bvec3  subgroupClusteredOr(bvec3, uint);bvec4  subgroupClusteredOr(bvec4, uint);int    subgroupClusteredXor(int, uint);ivec2  subgroupClusteredXor(ivec2, uint);ivec3  subgroupClusteredXor(ivec3, uint);ivec4  subgroupClusteredXor(ivec4, uint);uint   subgroupClusteredXor(uint, uint);uvec2  subgroupClusteredXor(uvec2, uint);uvec3  subgroupClusteredXor(uvec3, uint);uvec4  subgroupClusteredXor(uvec4, uint);bool   subgroupClusteredXor(bool, uint);bvec2  subgroupClusteredXor(bvec2, uint);bvec3  subgroupClusteredXor(bvec3, uint);bvec4  subgroupClusteredXor(bvec4, uint);float  subgroupQuadBroadcast(float, uint);vec2   subgroupQuadBroadcast(vec2, uint);vec3   subgroupQuadBroadcast(vec3, uint);vec4   subgroupQuadBroadcast(vec4, uint);int    subgroupQuadBroadcast(int, uint);ivec2  subgroupQuadBroadcast(ivec2, uint);ivec3  subgroupQuadBroadcast(ivec3, uint);ivec4  subgroupQuadBroadcast(ivec4, uint);uint   subgroupQuadBroadcast(uint, uint);uvec2  subgroupQuadBroadcast(uvec2, uint);uvec3  subgroupQuadBroadcast(uvec3, uint);uvec4  subgroupQuadBroadcast(uvec4, uint);bool   subgroupQuadBroadcast(bool, uint);bvec2  subgroupQuadBroadcast(bvec2, uint);bvec3  subgroupQuadBroadcast(bvec3, uint);bvec4  subgroupQuadBroadcast(bvec4, uint);float  subgroupQuadSwapHorizontal(float);vec2   subgroupQuadSwapHorizontal(vec2);vec3   subgroupQuadSwapHorizontal(vec3);vec4   subgroupQuadSwapHorizontal(vec4);int    subgroupQuadSwapHorizontal(int);ivec2  subgroupQuadSwapHorizontal(ivec2);ivec3  subgroupQuadSwapHorizontal(ivec3);ivec4  subgroupQuadSwapHorizontal(ivec4);uint   subgroupQuadSwapHorizontal(uint);uvec2  subgroupQuadSwapHorizontal(uvec2);uvec3  subgroupQuadSwapHorizontal(uvec3);uvec4  subgroupQuadSwapHorizontal(uvec4);bool   subgroupQuadSwapHorizontal(bool);bvec2  subgroupQuadSwapHorizontal(bvec2);bvec3  subgroupQuadSwapHorizontal(bvec3);bvec4  subgroupQuadSwapHorizontal(bvec4);float  subgroupQuadSwapVertical(float);vec2   subgroupQuadSwapVertical(vec2);vec3   subgroupQuadSwapVertical(vec3);vec4   subgroupQuadSwapVertical(vec4);int    subgroupQuadSwapVertical(int);ivec2  subgroupQuadSwapVertical(ivec2);ivec3  subgroupQuadSwapVertical(ivec3);ivec4  subgroupQuadSwapVertical(ivec4);uint   subgroupQuadSwapVertical(uint);uvec2  subgroupQuadSwapVertical(uvec2);uvec3  subgroupQuadSwapVertical(uvec3);uvec4  subgroupQuadSwapVertical(uvec4);bool   subgroupQuadSwapVertical(bool);bvec2  subgroupQuadSwapVertical(bvec2);bvec3  subgroupQuadSwapVertical(bvec3);bvec4  subgroupQuadSwapVertical(bvec4);float  subgroupQuadSwapDiagonal(float);vec2   subgroupQuadSwapDiagonal(vec2);vec3   subgroupQuadSwapDiagonal(vec3);vec4   subgroupQuadSwapDiagonal(vec4);int    subgroupQuadSwapDiagonal(int);ivec2  subgroupQuadSwapDiagonal(ivec2);ivec3  subgroupQuadSwapDiagonal(ivec3);ivec4  subgroupQuadSwapDiagonal(ivec4);uint   subgroupQuadSwapDiagonal(uint);uvec2  subgroupQuadSwapDiagonal(uvec2);uvec3  subgroupQuadSwapDiagonal(uvec3);uvec4  subgroupQuadSwapDiagonal(uvec4);bool   subgroupQuadSwapDiagonal(bool);bvec2  subgroupQuadSwapDiagonal(bvec2);bvec3  subgroupQuadSwapDiagonal(bvec3);bvec4  subgroupQuadSwapDiagonal(bvec4);
void subgroupMemoryBarrierShared();
volatile
vq2
vsnprintf
vsscanf
vtable for (anonymous namespace)::TGlslangToSpvTraverser
vtable for (anonymous namespace)::TNoContractionAssigneeCheckingTraverser
vtable for (anonymous namespace)::TNoContractionPropagator
vtable for (anonymous namespace)::TSymbolDefinitionCollectingTraverser
vtable for TShHandleBase
vtable for __cxxabiv1::__class_type_info
vtable for __cxxabiv1::__si_class_type_info
vtable for __cxxabiv1::__vmi_class_type_info
vtable for angle::BindingPointer<egl::Image, egl::Display, egl::Error>
vtable for angle::BindingPointer<gl::Buffer, gl::Context, gl::Error>
vtable for angle::BindingPointer<gl::Compiler, gl::Context, gl::Error>
vtable for angle::BindingPointer<gl::ProgramPipeline, gl::Context, gl::Error>
vtable for angle::BindingPointer<gl::Query, gl::Context, gl::Error>
vtable for angle::BindingPointer<gl::Renderbuffer, gl::Context, gl::Error>
vtable for angle::BindingPointer<gl::Sampler, gl::Context, gl::Error>
vtable for angle::BindingPointer<gl::Texture, gl::Context, gl::Error>
vtable for angle::BindingPointer<gl::TransformFeedback, gl::Context, gl::Error>
vtable for angle::LoggingAnnotator
vtable for angle::ObserverInterface
vtable for angle::RefCountObject<egl::Display, egl::Error>
vtable for angle::RefCountObject<gl::Context, gl::Error>
vtable for angle::SingleThreadedWaitableEvent
vtable for angle::SingleThreadedWorkerPool
vtable for angle::Subject
vtable for angle::base::HashingMRUCache<std::__1::array<unsigned char, 20ul>, angle::SizedMRUCache<std::__1::array<unsigned char, 20ul>, std::__1::pair<angle::MemoryBuffer, egl::BlobCache::CacheSource> >::ValueAndSize, std::__1::hash<std::__1::array<unsigned char, 20ul> > >
vtable for angle::base::MRUCacheBase<std::__1::array<unsigned char, 20ul>, angle::SizedMRUCache<std::__1::array<unsigned char, 20ul>, std::__1::pair<angle::MemoryBuffer, egl::BlobCache::CacheSource> >::ValueAndSize, std::__1::hash<std::__1::array<unsigned char, 20ul> >, angle::base::MRUCacheHashMap>
vtable for angle::pp::(anonymous namespace)::TokenLexer
vtable for angle::pp::DirectiveParser
vtable for angle::pp::MacroExpander
vtable for angle::pp::Tokenizer
vtable for egl::Device
vtable for egl::Display
vtable for egl::Image
vtable for egl::ImageSibling
vtable for egl::LabeledObject
vtable for egl::PbufferSurface
vtable for egl::Stream
vtable for egl::Surface
vtable for egl::Thread
vtable for egl::WindowSurface
vtable for gl::ActiveVariable
vtable for gl::BindingPointer<gl::Buffer>
vtable for gl::BindingPointer<gl::Compiler>
vtable for gl::BindingPointer<gl::ProgramPipeline>
vtable for gl::BindingPointer<gl::Query>
vtable for gl::BindingPointer<gl::Renderbuffer>
vtable for gl::BindingPointer<gl::Sampler>
vtable for gl::BindingPointer<gl::Texture>
vtable for gl::BindingPointer<gl::TransformFeedback>
vtable for gl::Buffer
vtable for gl::BufferManager
vtable for gl::BufferVariable
vtable for gl::CompileTask
vtable for gl::Compiler
vtable for gl::Context
vtable for gl::FenceNV
vtable for gl::Framebuffer
vtable for gl::FramebufferAttachmentObject
vtable for gl::FramebufferManager
vtable for gl::InterfaceBlock
vtable for gl::LabeledObject
vtable for gl::LinkedUniform
vtable for gl::OffsetBindingPointer<gl::Buffer>
vtable for gl::PathManager
vtable for gl::Program
vtable for gl::ProgramPipeline
vtable for gl::ProgramPipelineManager
vtable for gl::Query
vtable for gl::RefCountObject
vtable for gl::Renderbuffer
vtable for gl::RenderbufferManager
vtable for gl::ResourceManagerBase<gl::HandleAllocator>
vtable for gl::ResourceManagerBase<gl::HandleRangeAllocator>
vtable for gl::Sampler
vtable for gl::SamplerManager
vtable for gl::Shader
vtable for gl::ShaderProgramManager
vtable for gl::ShaderStorageBlockLinker
vtable for gl::ShaderVariableBuffer
vtable for gl::Sync
vtable for gl::SyncManager
vtable for gl::Texture
vtable for gl::TextureManager
vtable for gl::TransformFeedback
vtable for gl::TypedResourceManager<gl::Buffer, gl::HandleAllocator, gl::BufferManager>
vtable for gl::TypedResourceManager<gl::Framebuffer, gl::HandleAllocator, gl::FramebufferManager>
vtable for gl::TypedResourceManager<gl::ProgramPipeline, gl::HandleAllocator, gl::ProgramPipelineManager>
vtable for gl::TypedResourceManager<gl::Renderbuffer, gl::HandleAllocator, gl::RenderbufferManager>
vtable for gl::TypedResourceManager<gl::Sampler, gl::HandleAllocator, gl::SamplerManager>
vtable for gl::TypedResourceManager<gl::Sync, gl::HandleAllocator, gl::SyncManager>
vtable for gl::TypedResourceManager<gl::Texture, gl::HandleAllocator, gl::TextureManager>
vtable for gl::UniformBlockLinker
vtable for gl::VertexArray
vtable for glslang::TAnonMember
vtable for glslang::TBuiltInIdTraverser
vtable for glslang::TBuiltInParseables
vtable for glslang::TBuiltIns
vtable for glslang::TConstTraverser
vtable for glslang::TConstUnionArray
vtable for glslang::TDeferredCompiler
vtable for glslang::TFunction
vtable for glslang::TIndexTraverser
vtable for glslang::TInductiveTraverser
vtable for glslang::TInputScanner
vtable for glslang::TIntermAggregate
vtable for glslang::TIntermBinary
vtable for glslang::TIntermBranch
vtable for glslang::TIntermConstantUnion
vtable for glslang::TIntermLoop
vtable for glslang::TIntermMethod
vtable for glslang::TIntermSelection
vtable for glslang::TIntermSwitch
vtable for glslang::TIntermSymbol
vtable for glslang::TIntermTraverser
vtable for glslang::TIntermTyped
vtable for glslang::TIntermUnary
vtable for glslang::TIntermediate::finalCheck(TInfoSink&, bool)::TFinalLinkTraverser
vtable for glslang::TOutputTraverser
vtable for glslang::TParseContext
vtable for glslang::TParseContextBase
vtable for glslang::TParseVersions
vtable for glslang::TPpContext
vtable for glslang::TPpContext::TokenizableIncludeFile
vtable for glslang::TPpContext::tMacroInput
vtable for glslang::TPpContext::tMarkerInput
vtable for glslang::TPpContext::tStringInput
vtable for glslang::TPpContext::tTokenInput
vtable for glslang::TPpContext::tUngotTokenInput
vtable for glslang::TPpContext::tZeroInput
vtable for glslang::TPrecisionManager
vtable for glslang::TProgram
vtable for glslang::TRemapIdTraverser
vtable for glslang::TScanContext
vtable for glslang::TShader
vtable for glslang::TShader::ForbidIncluder
vtable for glslang::TSmallArrayVector
vtable for glslang::TSymbol
vtable for glslang::TType
vtable for glslang::TUserIdTraverser
vtable for glslang::TVariable
vtable for glslang::TextureUpgradeAndSamplerRemovalTransform
vtable for rx::BufferGL
vtable for rx::BufferNULL
vtable for rx::BufferVk
vtable for rx::CompilerGL
vtable for rx::CompilerNULL
vtable for rx::CompilerVk
vtable for rx::ContextGL
vtable for rx::ContextImpl
vtable for rx::ContextNULL
vtable for rx::ContextVk
vtable for rx::DeviceImpl
vtable for rx::DeviceNULL
vtable for rx::DisplayGL
vtable for rx::DisplayGLX
vtable for rx::DisplayImpl
vtable for rx::DisplayNULL
vtable for rx::DisplayVk
vtable for rx::DisplayVkXcb
vtable for rx::FenceNVGL
vtable for rx::FenceNVNULL
vtable for rx::FenceNVVk
vtable for rx::FramebufferGL
vtable for rx::FramebufferNULL
vtable for rx::FramebufferVk
vtable for rx::FunctionsGL
vtable for rx::FunctionsGLGLX
vtable for rx::ImageNULL
vtable for rx::LinkEventDone
vtable for rx::OffscreenSurfaceVk
vtable for rx::PathGL
vtable for rx::PathNULL
vtable for rx::PbufferSurfaceGLX
vtable for rx::ProgramGL
vtable for rx::ProgramNULL
vtable for rx::ProgramPipelineGL
vtable for rx::ProgramPipelineNULL
vtable for rx::ProgramPipelineVk
vtable for rx::ProgramVk
vtable for rx::QueryNULL
vtable for rx::QueryVk
vtable for rx::RenderTargetVk
vtable for rx::RenderbufferGL
vtable for rx::RenderbufferNULL
vtable for rx::RenderbufferVk
vtable for rx::RendererGL
vtable for rx::SamplerGL
vtable for rx::SamplerNULL
vtable for rx::SamplerVk
vtable for rx::ShaderGL
vtable for rx::ShaderNULL
vtable for rx::ShaderVk
vtable for rx::StandardQueryGL
vtable for rx::SurfaceGL
vtable for rx::SurfaceImpl
vtable for rx::SurfaceNULL
vtable for rx::SyncGL
vtable for rx::SyncNULL
vtable for rx::SyncProviderGLQuery
vtable for rx::SyncProviderGLSync
vtable for rx::SyncQueryGL
vtable for rx::SyncVk
vtable for rx::TextureGL
vtable for rx::TextureImpl
vtable for rx::TextureNULL
vtable for rx::TextureVk
vtable for rx::TransformFeedbackGL
vtable for rx::TransformFeedbackNULL
vtable for rx::TransformFeedbackVk
vtable for rx::VertexArrayGL
vtable for rx::VertexArrayNULL
vtable for rx::VertexArrayVk
vtable for rx::WindowSurfaceGLX
vtable for rx::WindowSurfaceVk
vtable for rx::WindowSurfaceVkXcb
vtable for rx::vk::BufferHelper
vtable for rx::vk::CommandGraphResource
vtable for rx::vk::Context
vtable for rx::vk::FramebufferHelper
vtable for rx::vk::ImageHelper
vtable for rx::vk::QueryHelper
vtable for sh::(anonymous namespace)::AddAndTrueToLoopConditionTraverser
vtable for sh::(anonymous namespace)::ArrayBoundsClamperMarker
vtable for sh::(anonymous namespace)::CollectVariableRefCountsTraverser
vtable for sh::(anonymous namespace)::CollectVariablesTraverser
vtable for sh::(anonymous namespace)::ContainsReturnTraverser
vtable for sh::(anonymous namespace)::DeclareDefaultUniformsTraverser
vtable for sh::(anonymous namespace)::DeclareStructTypesTraverser
vtable for sh::(anonymous namespace)::DoWhileRewriter
vtable for sh::(anonymous namespace)::FoldExpressionsTraverser
vtable for sh::(anonymous namespace)::GLFragColorBroadcastTraverser
vtable for sh::(anonymous namespace)::InitializeLocalsTraverser
vtable for sh::(anonymous namespace)::MaxDepthTraverser
vtable for sh::(anonymous namespace)::PruneEmptyCasesTraverser
vtable for sh::(anonymous namespace)::PruneNoOpsTraverser
vtable for sh::(anonymous namespace)::RecordConstantPrecisionTraverser
vtable for sh::(anonymous namespace)::RemoveArrayLengthTraverser
vtable for sh::(anonymous namespace)::RemoveInvariantDeclarationTraverser
vtable for sh::(anonymous namespace)::RemovePowTraverser
vtable for sh::(anonymous namespace)::RemoveUnreferencedVariablesTraverser
vtable for sh::(anonymous namespace)::ReplaceVariableTraverser
vtable for sh::(anonymous namespace)::RewriteAssignToSwizzledTraverser
vtable for sh::(anonymous namespace)::RoundingHelperWriterESSL
vtable for sh::(anonymous namespace)::RoundingHelperWriterGLSL
vtable for sh::(anonymous namespace)::RoundingHelperWriterHLSL
vtable for sh::(anonymous namespace)::ScalarizeArgsTraverser
vtable for sh::(anonymous namespace)::SeparateDeclarationsTraverser
vtable for sh::(anonymous namespace)::SimplifyLoopConditionsTraverser
vtable for sh::(anonymous namespace)::SplitSequenceOperatorTraverser
vtable for sh::(anonymous namespace)::SymbolFinder
vtable for sh::(anonymous namespace)::TOutputTraverser
vtable for sh::(anonymous namespace)::Traverser
vtable for sh::(anonymous namespace)::Traverser::CreateStructSamplerFunctionVisitor
vtable for sh::(anonymous namespace)::Traverser::GetSamplerArgumentsVisitor
vtable for sh::(anonymous namespace)::UnfoldShortCircuitASTTraverser
vtable for sh::(anonymous namespace)::ValidateConstIndexExpr
vtable for sh::(anonymous namespace)::ValidateGlobalInitializerTraverser
vtable for sh::(anonymous namespace)::ValidateLimitationsTraverser
vtable for sh::(anonymous namespace)::ValidateOutputsTraverser
vtable for sh::(anonymous namespace)::ValidateSwitch
vtable for sh::(anonymous namespace)::ValidateVaryingLocationsTraverser
vtable for sh::(anonymous namespace)::VectorizeVectorScalarArithmeticTraverser
vtable for sh::BuiltInFunctionEmulator::BuiltInFunctionEmulationMarker
vtable for sh::CallDAG::CallDAGCreator
vtable for sh::EmulatePrecision
vtable for sh::RegenerateStructNames
vtable for sh::Std140BlockEncoder
vtable for sh::TCompiler
vtable for sh::TDiagnostics
vtable for sh::TDirectiveHandler
vtable for sh::TExtensionGLSL
vtable for sh::TIntermAggregate
vtable for sh::TIntermBinary
vtable for sh::TIntermBlock
vtable for sh::TIntermBranch
vtable for sh::TIntermCase
vtable for sh::TIntermConstantUnion
vtable for sh::TIntermDeclaration
vtable for sh::TIntermExpression
vtable for sh::TIntermFunctionDefinition
vtable for sh::TIntermFunctionPrototype
vtable for sh::TIntermIfElse
vtable for sh::TIntermInvariantDeclaration
vtable for sh::TIntermLoop
vtable for sh::TIntermOperator
vtable for sh::TIntermPreprocessorDirective
vtable for sh::TIntermSwitch
vtable for sh::TIntermSwizzle
vtable for sh::TIntermSymbol
vtable for sh::TIntermTernary
vtable for sh::TIntermTraverser
vtable for sh::TIntermTyped
vtable for sh::TIntermUnary
vtable for sh::TInterpolationQualifierWrapper
vtable for sh::TInvariantQualifierWrapper
vtable for sh::TLValueTrackingTraverser
vtable for sh::TLayoutQualifierWrapper
vtable for sh::TMemoryQualifierWrapper
vtable for sh::TOutputESSL
vtable for sh::TOutputGLSL
vtable for sh::TOutputGLSLBase
vtable for sh::TOutputVulkanGLSL
vtable for sh::TPrecisionQualifierWrapper
vtable for sh::TQualifierWrapperBase
vtable for sh::TShHandleBase
vtable for sh::TStorageQualifierWrapper
vtable for sh::TVersionGLSL
vtable for sh::TranslatorESSL
vtable for sh::TranslatorGLSL
vtable for sh::TranslatorVulkan
vtable for spv::Block
vtable for spv::Builder
vtable for spv::Function
vtable for spv::Instruction
vtable for spv::Module
vtable for std::__1::__function::__func<gl::Shader::resolveCompile()::$_0, std::__1::allocator<gl::Shader::resolveCompile()::$_0>, void ()>
vtable for std::__1::__function::__func<glslang::TParseContext::findFunction400(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_0, std::__1::allocator<glslang::TParseContext::findFunction400(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_0>, bool (glslang::TType const&, glslang::TType const&, glslang::TOperator, int)>
vtable for std::__1::__function::__func<glslang::TParseContext::findFunction400(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_1, std::__1::allocator<glslang::TParseContext::findFunction400(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_1>, bool (glslang::TType const&, glslang::TType const&, glslang::TType const&)>
vtable for std::__1::__function::__func<glslang::TParseContext::findFunctionExplicitTypes(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_2, std::__1::allocator<glslang::TParseContext::findFunctionExplicitTypes(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_2>, bool (glslang::TType const&, glslang::TType const&, glslang::TOperator, int)>
vtable for std::__1::__function::__func<glslang::TParseContext::findFunctionExplicitTypes(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_3, std::__1::allocator<glslang::TParseContext::findFunctionExplicitTypes(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)::$_3>, bool (glslang::TType const&, glslang::TType const&, glslang::TType const&)>
vtable for std::__1::__function::__func<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_0, std::__1::allocator<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_0>, bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long*)>
vtable for std::__1::__function::__func<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_1, std::__1::allocator<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_1>, bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockMemberInfo*)>
vtable for std::__1::__function::__func<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_2, std::__1::allocator<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_2>, bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, unsigned long*)>
vtable for std::__1::__function::__func<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_3, std::__1::allocator<rx::ProgramGL::linkResources(gl::ProgramLinkedResources const&)::$_3>, bool (std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, sh::BlockMemberInfo*)>
vtable for std::__1::__function::__func<spv::Builder::postProcess()::$_0, std::__1::allocator<spv::Builder::postProcess()::$_0>, void (spv::Block*)>
vtable for std::__1::__function::__func<spv::Function::dump(std::__1::vector<unsigned int, std::__1::allocator<unsigned int> >&) const::{lambda(spv::Block const*)#1}, std::__1::allocator<{lambda(spv::Block const*)#1}>, void (spv::Block*)>
vtable for std::__1::__iostream_category
vtable for std::__1::__narrow_to_utf8<32ul>
vtable for std::__1::__shared_ptr_emplace<angle::SingleThreadedWaitableEvent, std::__1::allocator<angle::SingleThreadedWaitableEvent> >
vtable for std::__1::__shared_ptr_emplace<angle::pp::Macro, std::__1::allocator<angle::pp::Macro> >
vtable for std::__1::__shared_ptr_emplace<gl::CompileTask, std::__1::allocator<gl::CompileTask> >
vtable for std::__1::__shared_ptr_pointer<angle::WorkerThreadPool*, std::__1::default_delete<angle::WorkerThreadPool>, std::__1::allocator<angle::WorkerThreadPool> >
vtable for std::__1::__shared_ptr_pointer<rx::RendererGL*, std::__1::default_delete<rx::RendererGL>, std::__1::allocator<rx::RendererGL> >
vtable for std::__1::__stdinbuf<char>
vtable for std::__1::__stdinbuf<wchar_t>
vtable for std::__1::__stdoutbuf<char>
vtable for std::__1::__stdoutbuf<wchar_t>
vtable for std::__1::__widen_from_utf8<32ul>
vtable for std::__1::basic_istream<char, std::__1::char_traits<char> >
vtable for std::__1::basic_istream<wchar_t, std::__1::char_traits<wchar_t> >
vtable for std::__1::basic_istringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
vtable for std::__1::basic_ostream<char, std::__1::char_traits<char> >
vtable for std::__1::basic_ostream<wchar_t, std::__1::char_traits<wchar_t> >
vtable for std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
vtable for std::__1::basic_streambuf<char, std::__1::char_traits<char> >
vtable for std::__1::basic_streambuf<wchar_t, std::__1::char_traits<wchar_t> >
vtable for std::__1::basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char> >
vtable for std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> >
vtable for std::__1::codecvt<char, char, __mbstate_t>
vtable for std::__1::codecvt<char16_t, char, __mbstate_t>
vtable for std::__1::codecvt<char32_t, char, __mbstate_t>
vtable for std::__1::codecvt<wchar_t, char, __mbstate_t>
vtable for std::__1::collate<char>
vtable for std::__1::collate<wchar_t>
vtable for std::__1::ctype<char>
vtable for std::__1::ctype<wchar_t>
vtable for std::__1::ios_base
vtable for std::__1::ios_base::failure
vtable for std::__1::locale::__imp
vtable for std::__1::locale::facet
vtable for std::__1::messages<char>
vtable for std::__1::messages<wchar_t>
vtable for std::__1::money_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >
vtable for std::__1::money_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >
vtable for std::__1::money_put<char, std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > >
vtable for std::__1::money_put<wchar_t, std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >
vtable for std::__1::moneypunct<char, false>
vtable for std::__1::moneypunct<char, true>
vtable for std::__1::moneypunct<wchar_t, false>
vtable for std::__1::moneypunct<wchar_t, true>
vtable for std::__1::num_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >
vtable for std::__1::num_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >
vtable for std::__1::num_put<char, std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > >
vtable for std::__1::num_put<wchar_t, std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >
vtable for std::__1::numpunct<char>
vtable for std::__1::numpunct<wchar_t>
vtable for std::__1::system_error
vtable for std::__1::time_get<char, std::__1::istreambuf_iterator<char, std::__1::char_traits<char> > >
vtable for std::__1::time_get<wchar_t, std::__1::istreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >
vtable for std::__1::time_put<char, std::__1::ostreambuf_iterator<char, std::__1::char_traits<char> > >
vtable for std::__1::time_put<wchar_t, std::__1::ostreambuf_iterator<wchar_t, std::__1::char_traits<wchar_t> > >
vtable for std::bad_alloc
vtable for std::bad_cast
vtable for std::bad_exception
vtable for std::length_error
vtable for std::logic_error
vtable for std::out_of_range
vtable for std::overflow_error
vtable for std::runtime_error
v|2
w
w7
w8
wL(
wU6
wV5
w`=
warn
wcrtomb
wcslen
wcsnrtombs
webgl_FragColor
webgl_FragData
webgl_debug_shader_precision
were provided.
when more than one fragment shader output, all must have location qualifiers
when object type is EGL_OBJECT_DISPLAY_KHR, the object must be the same as the display.
while
while (
wi/
with expression
wl>
wmemcpy
wmemmove
wmemset
workgroupcoherent
writeonly
wrong number of matrix columns:
wrong number of structure members
wrong operand type
wrong operand type - no operation '
wrong operand types - no operation '
wrong operand types:
wrong type of value for uniform
wrong vector size (or rows in a matrix column):
wsi.c
wsi_create_instance
wsi_swapchain_instance_gpa
wsi_unsupported_instance_extension
x
x and y cannot be negative.
x#:
x)
x) {    x = clamp(x, -2.0, 2.0);    x = x * 256.0;    x = sign(x) * floor(abs(x));    return x * 0.00390625;}
x) {    x = clamp(x, -65504.0, 65504.0);
x, in
x, y, or z cannot be negative.
x6
x7
x8
x<<
x=
x?=
x\>
xcb_connect
xcb_disconnect
xcb_get_geometry
xcb_get_geometry_reply
xcb_query_tree
xcb_query_tree_reply
xf7
xfb layout qualifier
xfb_
xfb_buffer
xfb_buffer=
xfb_offset
xfb_offset=
xfb_stride is too large:
xfb_stride is too small to hold all buffer entries:
xfb_stride must be multiple of 4:
xfb_stride must be multiple of 8 for buffer holding a double:
xfb_stride=
xq*
y
y) {    x = angle_frl(angle_frl(x)
y) {    x = angle_frm(angle_frm(x)
y);    return x;}
y, emu_precision vec
y7
y8
yD<
yT>
yU=
yU>
yV>
yW>
yX>
yY>
yZ>
y[>
y\>
y]>
yk2
yp*
yr7
yuv_2_rgb
yuvcscstandardext_constant(sh::TParseContext*)
yy.
yy_accept
yy_base
yy_chk
yy_create_buffer(_IO_FILE*, int, void*)
yy_def
yy_ec
yy_fatal_error(char const*, void*)
yy_get_previous_state(void*)
yy_meta
yy_nxt
yycheck
yydebug
yydefact
yydefgoto
yyensure_buffer_stack(void*)
yyerror(sh::TSourceLoc*, sh::TParseContext*, void*, char const*)
yylex(YYSTYPE*, glslang::TParseContext&)
yylex(YYSTYPE*, sh::TSourceLoc*, void*)
yylex_destroy(void*)
yypact
yyparse(glslang::TParseContext*)
yyparse(sh::TParseContext*, void*)
yyparse(sh::TParseContext*, void*)::extensions
yypgoto
yypop_buffer_state(void*)
yyr1
yyr2
yyrestart(_IO_FILE*, void*)
yyrline
yyset_column called with no buffer
yyset_lineno called with no buffer
yystos
yysyntax_error(unsigned long*, char**, short*, int)
yytable
yytname
yytranslate
z
z,
z.
z7
z8
zL>
zM>
zR5
zV:
z]7
z_>
zero is bound to DRAW_INDIRECT_BUFFER
zero is bound to ELEMENT_ARRAY_BUFFER
zero is bound to VERTEX_ARRAY_BINDING
zp2
z{2
{
{    return vec
{ } style initializers
{!5
{(@
{7
{8
{;<
{=7
{?7
{H>
{K>
{L>
{M>
{N>
{O>
{P>
{Q>
{R>
{S>
{e/
{g>
{i
{q5
{s
{}
|
|)(
|3
|6
|7
|8
|=
|>@
|?@
|@@
|A@
|B7
|B@
|C@
|D@
|E@
|G
|X>
|Y<
|n,
|o*
||
}
} gl_in[];in int gl_PrimitiveIDIn;out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];
} gl_out[];patch out float gl_TessLevelOuter[4];patch out float gl_TessLevelInner[2];
} gl_out[];patch out highp float gl_TessLevelOuter[4];patch out highp float gl_TessLevelInner[2];patch out highp vec4 gl_BoundingBoxOES[2];
}7
}8
}8<
};
};out int gl_PrimitiveID;out int gl_Layer;
};uniform gl_DepthRangeParameters gl_DepthRange;
}R>
}T7
}X<
}Z5
}j>
}p,
}q7
}s7
}t7
~
~!%^&*()-+=|,.<>/?;:[]{}#\
~*:
~7
~8
~Compiler
~G
~J(
~K(
~L7
~P/
~X=
~Z>
~^4
~f>
~o2
~{<

"5
7
8
>7
C
C1
U6
U7
e>
i>
k7
o5
