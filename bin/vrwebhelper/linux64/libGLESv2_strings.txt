                
                    
         color.xyz = color.xyz / color.a;\n
        color.x = transformLinearToSrgb(color.x);\n
        color.xyz = color.xyz * color.a;\n
        color.y = transformLinearToSrgb(color.y);\n
        color.z = transformLinearToSrgb(color.z);\n
        discard;\n
        return 0.0;\n
        return 1.055 * pow(cl, 0.41666) - 0.055;\n
        return 12.92 * cl;\n
    color = color * 
    gl_Position = vec4((
    if (cl < 0.0031308)\n
    if (cl < 1.0)\n
    if (cl <= 0.0)\n
    if (clamp(v_texcoord, vec2(0.0), 
    if (u_multiply_alpha)\n
    if (u_transform_linear_to_srgb)\n
    if (u_unmultiply_alpha && color.a != 0.0)\n
    return 1.0;\n
    v_texcoord = 
 !"#$%&&&&'()*&&+,-./012&3
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
 !%&'()*+,-./01234
 (const float)\n
 (const int)\n
 (const uint)\n
 (const yuvCscStandardEXT)\n
 (field '
 (internal function)
 (specifier)
 (structure contains a sampler)
 (symbol id 
 (this message will no longer repeat)
 (type index 
 * 2.0) - 1.0, 0.0, 1.0);\n
 * u_scale + u_offset;\n
 ,rXIX
 ... (message truncated)\n
 <anonymous>
 PLS{
 SIFh4
 and getcwd was invalid. 
 as of 
 cannot initialize this type of qualifier 
 clip distances are supported by the driver.
 clip distances, 
 cm0
 color = 
 combined AtomicCounterBuffers count exceeds limit
 combined clip/cull distances are supported by the driver.
 commands to finish and free garbage | Allocation result: 
 conflicts with another variable.
 cull distances and 
 does not consume all varyings generated by 
 does not exist in the vertex shader.
 does not generate all varyings consumed by 
 does not match any 
 does not support transform feedback varying.
 exceeds maximum allowed nesting level of 
 field selection requires structure or vector on left hand side
 field selection requires structure, vector, or interface block on left hand side
 for format 
 for location 
 in VkPresentInfoKHR.pNext chain
 indices are used.
 is not marked separable.
 is too big to fit
 l-value of swizzle cannot have duplicate components
 l-value required
 left of '[' is not of type array, matrix, or vector 
 matrix of 
 no such field in interface block
 no such field in structure
 node [shape=box
 shader 
 shader AtomicCounterBuffers count exceeds limit
 shader is not compiled.
 shader version does not match other shader versions.
 shader) and '
 shader) which don't have instance names.
 specified multiple times
 supported in GLSL ES 1.00 only
 supported in compute shaders only
 supported in vertex shaders only
 u_source_texture;\n
 used to initialize an EGL image.
 vec2 
 vec2 v_texcoord;\n
 with expression\n
 | Flags: 0x
 | Heap budget: 
 | Heap index: 
 | Heap size: 
 | Heap usage: 
 | Property flags: 0x
! Destroying fence...
!(IsPixel2(mPhysicalDeviceProperties.vendorID, mPhysicalDeviceProperties.deviceID) && (mPhysicalDeviceProperties.driverVersion < kPixel2DriverWithRelaxedPrecision)) && !IsPixel4(mPhysicalDeviceProperties.vendorID, mPhysicalDeviceProperties.deviceID)
!3nAI
!CanMapBufferForRead(functions)
!W7:3N
!Z%F3lKpb
!eKlM
!ifa
!isIntel && functions->standard == STANDARD_GL_ES && functions->isAtLeastGLES(gl::Version(3, 1)) && functions->hasGLESExtension("GL_EXT_texture_norm16")
!isMesa && isQualcomm
!isMesa && isQualcomm && qualcommVersion < 490
!isMesa && isQualcomm && qualcommVersion < 490 && functions->hasGLESExtension("GL_EXT_clip_control")
!isMesa || isIntel && (Is9thGenIntel(device) || IsGeminiLake(device) || IsCoffeeLake(device) || Is11thGenIntel(device) || Is12thGenIntel(device))
!isMockICDEnabled() && ExtensionFound("VK_EXT_surface_maintenance1", instanceExtensionNames)
!isQualcomm && mRasterizationOrderAttachmentAccessFeatures.rasterizationOrderColorAttachmentAccess == 1U
!isQualcommProprietary
!isSwiftShader && !nvVersionLessThan520
!mFeatures.supportsBlendOperationAdvanced.enabled && (isVenus || !isIntel)
!mFeatures.supportsGraphicsPipelineLibrary.enabled || (mFeatures.preferMonolithicPipelinesOverLibraries.enabled && libraryBlobsAreReusedByMonolithicPipelines)
!mFeatures.supportsMultisampledRenderToSingleSampled.enabled && mFeatures.supportsRenderpass2.enabled && mFeatures.supportsDepthStencilResolve.enabled && mMultisampledRenderToSingleSampledFeaturesGOOGLEX.multisampledRenderToSingleSampled == 1U
!mFeatures.supportsRenderPassLoadStoreOpNone.enabled && ExtensionFound("VK_QCOM_render_pass_store_ops", deviceExtensionNames)
!mFeatures.supportsTransformFeedbackExtension.enabled && vk::CanSupportTransformFeedbackEmulation(mPhysicalDeviceFeatures)
!mGraphicsPipelineLibraryProperties.graphicsPipelineLibraryFastLinking || isSwiftShader
!mPhysicalDeviceFeatures.textureCompressionETC2 && kSupportTranscodeEtcToBc && (mSubgroupProperties.supportedOperations & kRequiredSubgroupOp) == kRequiredSubgroupOp && (limitsVk.maxTexelBufferElements >= kMaxTexelBufferSize)
!nativegl::SupportsVertexArrayObjects(functions)
!r^bz
"#H722
"\f&\f*\f+\f.\f"\n&\n*\n+\n.\n"\r&\r*\r+\r.\r
"bN0
"jXhjx\n\kX\f
#17V
#davf
#define
#define 
#define emu_precision highp\n
#define emu_precision mediump\n
#define emu_precision\n\n
#define kTexUnits 
#elif defined GL_OES_geometry_shader\n
#elif defined(GL_NV_viewport_array2)\n
#else\n
#endif
#endif\n
#endif\n\n
#error "No geometry shader extensions available." // Only generate this if the extension is "required"\n
#extension 
#extension GL_ARB_conservative_depth : 
#extension GL_ARB_cull_distance : 
#extension GL_ARB_draw_buffers : 
#extension GL_ARB_explicit_attrib_location : require\n
#extension GL_ARB_geometry_shader4 : 
#extension GL_ARB_gpu_shader5 : enable\n
#extension GL_ARB_shader_texture_lod : 
#extension GL_ARB_shader_viewport_layer_array : require\n
#extension GL_ARB_texture_buffer_objects : enable\n
#extension GL_ARB_texture_cube_map_array : enable\n
#extension GL_ARB_texture_multisample : 
#extension GL_ARB_texture_rectangle : require
#extension GL_EXT_clip_cull_distance : 
#extension GL_EXT_geometry_shader : 
#extension GL_EXT_gpu_shader5 : enable\n
#extension GL_EXT_shader_framebuffer_fetch : 
#extension GL_EXT_shader_framebuffer_fetch : enable\n
#extension GL_EXT_shader_framebuffer_fetch : require\n
#extension GL_EXT_shader_framebuffer_fetch_non_coherent : 
#extension GL_EXT_shader_framebuffer_fetch_non_coherent : require\n
#extension GL_EXT_shader_io_blocks : 
#extension GL_EXT_shader_pixel_local_storage : enable\n
#extension GL_EXT_shader_pixel_local_storage : require\n
#extension GL_EXT_texture_buffer : enable\n
#extension GL_EXT_texture_cube_map_array : enable\n
#extension GL_NV_draw_buffers : 
#extension GL_NV_shader_framebuffer_fetch : 
#extension GL_NV_viewport_array2 : require\n
#extension GL_OES_EGL_image_external : require
#extension GL_OES_geometry_shader : 
#extension GL_OES_texture_buffer : enable\n
#extension GL_OES_texture_cube_map_array : enable\n
#extension GL_OVR_multiview
#if !defined(GL_ARB_shading_language_packing)\n    float f16tof32(uint val)\n    {\n        uint sign = (val & 0x8000u) << 16;\n        int exponent = int((val & 0x7C00u) >> 10);\n        uint mantissa = val & 0x03FFu;\n        float f32 = 0.0;\n        if(exponent == 0)\n        {\n            if (mantissa != 0u)\n            {\n                const float scale = 1.0 / (1 << 24);\n                f32 = scale * mantissa;\n            }\n        }\n        else if (exponent == 31)\n        {\n            return uintBitsToFloat(sign | 0x7F800000u | mantissa);\n        }\n        else\n        {\n            exponent -= 15;\n            float scale;\n            if(exponent < 0)\n            {\n                // The negative unary operator is buggy on OSX.\n                // Work around this by using abs instead.\n                scale = 1.0 / (1 << abs(exponent));\n            }\n            else\n            {\n                scale = 1 << exponent;\n            }\n            float decimal = 1.0 + float(mantissa) / float(1 << 10);\n            f32 = scale * decimal;\n        }\n\n        if (sign != 0u)\n        {\n            f32 = -f32;\n        }\n\n        return f32;\n    }\n#endif\n\nvec2 unpackHalf2x16_emu(uint u)\n{\n    #if defined(GL_ARB_shading_language_packing)\n        return unpackHalf2x16(u);\n    #else\n        uint y = (u >> 16);\n        uint x = u & 0xFFFFu;\n        return vec2(f16tof32(x), f16tof32(y));\n    #endif\n}\n
#if !defined(GL_ARB_shading_language_packing)\n    float fromSnorm(uint x)\n    {\n        int xi = (int(x) & 0x7FFF) - (int(x) & 0x8000);\n        return clamp(float(xi) / 32767.0, -1.0, 1.0);\n    }\n#endif\n\nvec2 unpackSnorm2x16_emu(uint u)\n{\n    #if defined(GL_ARB_shading_language_packing)\n        return unpackSnorm2x16(u);\n    #else\n        uint y = (u >> 16);\n        uint x = u;\n        return vec2(fromSnorm(x), fromSnorm(y));\n    #endif\n}\n
#if !defined(GL_ARB_shading_language_packing)\n    uint f32tof16(float val)\n    {\n        uint f32 = floatBitsToUint(val);\n        uint f16 = 0u;\n        uint sign = (f32 >> 16) & 0x8000u;\n        int exponent = int((f32 >> 23) & 0xFFu) - 127;\n        uint mantissa = f32 & 0x007FFFFFu;\n        if (exponent == 128)\n        {\n            // Infinity or NaN\n            // NaN bits that are masked out by 0x3FF get discarded.\n            // This can turn some NaNs to infinity, but this is allowed by the spec.\n            f16 = sign | (0x1Fu << 10);\n            f16 |= (mantissa & 0x3FFu);\n        }\n        else if (exponent > 15)\n        {\n            // Overflow - flush to Infinity\n            f16 = sign | (0x1Fu << 10);\n        }\n        else if (exponent > -15)\n        {\n            // Representable value\n            exponent += 15;\n            mantissa >>= 13;\n            f16 = sign | uint(exponent << 10) | mantissa;\n        }\n        else\n        {\n            f16 = sign;\n        }\n        return f16;\n    }\n#endif\n\nuint packHalf2x16_emu(vec2 v)\n{\n    #if defined(GL_ARB_shading_language_packing)\n        return packHalf2x16(v);\n    #else\n        uint x = f32tof16(v.x);\n        uint y = f32tof16(v.y);\n        return (y << 16) | x;\n    #endif\n}\n
#if defined(GL_ARB_shader_viewport_layer_array)\n
#if defined(GL_FRAGMENT_PRECISION_HIGH)\n
#ifdef
#ifdef GL_EXT_geometry_shader\n
#pragma STDGL invariant(all) can not be used in fragment shader
#pragma STDGL invariant(all)\n
#version 
#version 300 es\n
#version 300 es\nprecision highp float;\n\n#define kMaxTexUnits 4u\n#define kMaxLights   8u\n
#version 310 es\n
#version 310 es\nvoid main()\n{\n    gl_Position = vec4(mix(vec2(-1), vec2(1), equal(gl_VertexID & ivec2(1, 2), ivec2(0))), 0, 1);\n}
#version directive must occur before anything else, except for comments and white space
#version directive must occur on the first line of the shader
$GGrR
$OGr
$iLr
$qIIR
$y"iJ
$yNp
%$neh
%.0Lf
%EIa2
%H:%M:%S%m/%d/%y%Y-%m-%d%I:%M:%S %p%H:%M%H:%M:%S
%I:%M:%S %p
%a %b %d %H:%M:%S %Y
%b;Eq
%s %llu
%s called on default-constructed iterator.
%s called on end() iterator.
%s called on invalid iterator. The element might have been erased or the table might have rehashed. Consider running with --config=asan to diagnose rehashing issues.
%s failed to acquire mutex
%s failed to broadcast
%s failed to release mutex
%s@%u: error %d: %s\n
&Dq3hZE
&Vcm
&c$ad
&o7xU,=
&uIAcI
&uOJ
&~Xzu
' (or there is no acceptable conversion)
' aliases attribute '
' and a right operand of type '
' at location 
' conflicting location with '
' differ between 
' exists that takes a left-hand operand of type '
' exists that takes an operand of type 
' in blocks '
' is not an array to be captured by element.
' is not full path
' member '
'BVy
'S5m.
'dpy' not a valid EGLDisplay handle
'dpy' not initialized
'imageAtomic' cannot be used with images qualified as 'readonly'
'imageAtomic' cannot be used with images qualified as 'writeonly'
'imageLoad' cannot be used with images qualified as 'writeonly'
'imageStore' cannot be used with images qualified as 'readonly'
'in' can be only used to specify the local group size
'layout'
'mSN
'max_vertices' is not specified in the geometry shader.
'noncoherent' qualifier must be used when GL_EXT_shader_framebuffer_fetch_non_coherent extension is used
'v0X
(!isMesa && isQualcomm) || (IsApple() && isIntel && GetMacOSVersion() < OSVersion(10, 14, 0))
(!isMesa && isQualcomm) || (isIntel && IsApple())
()' used in the following call chain:
(IsAndroid() && !(isARM || isQualcomm)) || isSwiftShader
(IsAndroid() && isARM) || mFeatures.supportsRasterizationOrderAttachmentAccess.enabled
(IsAndroid() && isSwiftShader)
(IsApple() && Has9thGenIntelGPU(systemInfo)) || (IsLinux() && IsARM64())
(IsApple() && functions->standard == STANDARD_GL_DESKTOP) || (IsLinux() && isAMD)
(IsLinux() && isVMWare) || (IsAndroid() && isNvidia) || (IsAndroid() && GetAndroidSDKVersion() < 27 && IsAdreno5xxOrOlder(functions)) || (!isMesa && IsMaliT8xxOrOlder(functions)) || (!isMesa && IsMaliG31OrOlder(functions))
(MqO
(color);\n
(isIntel && !IsWindows()) || isRADV || isNvidia
(isQualcommProprietary && mPhysicalDeviceProperties.driverVersion < kPixel4DriverWithWorkingSpecConstSupport) || isARM || isPowerVR || isSwiftShader
(isTileBasedRenderer && !isARM) || isSamsung
(mFeatures.supportsExternalFenceFd.enabled && FencePropertiesCompatibleWithAndroid(externalFenceProperties) && mFeatures.supportsExternalSemaphoreFd.enabled && SemaphorePropertiesCompatibleWithAndroid(externalSemaphoreProperties))
(mFeatures.supportsExternalFenceFd.enabled && mFeatures.supportsExternalSemaphoreFd.enabled)
(ova
(u_source_texture, v_texcoord);\n
) != v_texcoord)\n
) at location 
) exceed the maximum interleaved components (
) exceed the maximum separate components (
) failed with error: 
) for heap index 
) not handled
) with the following call chain: 
).length())
)8gL=
);  Imported=
)amh
)cUs
)rn4=
)uniform readonly 
)uniform writeonly 
* Available memory budget and usage per heap:
* Available memory heaps:
* Available memory types:
*.poz
*FjH
*w2E
+3X>X
+7(Rt
+7X!X
+7X\nl
, (compressedSize + chunkSize) = 
, Actual CRC = 
, Actual uncompressed size = 
, alignment=
, cacheVersion = 
, checkChunkIndex = 
, checkCompressedDataCRC = 
, checkNumChunks = 
, checkUncompressedCacheDataSize = 
, chunkIndex = 
, compressedData.size() = 
, compressedDataCRC = 
, compressedDataCRC = 0x
, existingVersion = 
, expected 
, expected [0, 
, input size 
, links: 
, local_size_y=
, local_size_z=
, numChunks = 
, skipping.
, so it has been modified to: '
, stat() call failed.
, stat() info: 
, uncompressedCacheDataSize = 
, uncompressedCacheDataSize = 0x
,DS*x
,XwsZY
,color=green
,pixelCoord)
,pixelCoord,
,rFM
,z6a
- Type=
--> Heap index 
-component vector of 
-epq
. Skipping multisample checks.
. Treating as 0
../../third_party/abseil-cpp/absl/base/internal/throw_delegate.cc
../../third_party/abseil-cpp/absl/container/internal/raw_hash_set.h
../../third_party/angle/src/common/aligned_memory.cpp
../../third_party/angle/src/common/android_util.cpp
../../third_party/angle/src/common/linux/dma_buf_utils.cpp
../../third_party/angle/src/common/spirv/spirv_instruction_builder_autogen.cpp
../../third_party/angle/src/common/vulkan/vulkan_icd.cpp
../../third_party/angle/src/image_util/loadimage_astc.cpp
../../third_party/angle/src/libANGLE/BlobCache.cpp
../../third_party/angle/src/libANGLE/Buffer.cpp
../../third_party/angle/src/libANGLE/Context.cpp
../../third_party/angle/src/libANGLE/Debug.cpp
../../third_party/angle/src/libANGLE/Display.cpp
../../third_party/angle/src/libANGLE/GLES1Renderer.cpp
../../third_party/angle/src/libANGLE/HandleAllocator.cpp
../../third_party/angle/src/libANGLE/Platform.cpp
../../third_party/angle/src/libANGLE/Program.cpp
../../third_party/angle/src/libANGLE/ProgramExecutable.cpp
../../third_party/angle/src/libANGLE/ProgramPipeline.h
../../third_party/angle/src/libANGLE/Shader.cpp
../../third_party/angle/src/libANGLE/State.cpp
../../third_party/angle/src/libANGLE/Texture.cpp
../../third_party/angle/src/libANGLE/angletypes.cpp
../../third_party/angle/src/libANGLE/queryconversions.cpp
../../third_party/angle/src/libANGLE/renderer/gl/BlitGL.cpp
../../third_party/angle/src/libANGLE/renderer/gl/BufferGL.cpp
../../third_party/angle/src/libANGLE/renderer/gl/FenceNVGL.cpp
../../third_party/angle/src/libANGLE/renderer/gl/FramebufferGL.cpp
../../third_party/angle/src/libANGLE/renderer/gl/ProgramGL.cpp
../../third_party/angle/src/libANGLE/renderer/gl/QueryGL.cpp
../../third_party/angle/src/libANGLE/renderer/gl/RenderbufferGL.cpp
../../third_party/angle/src/libANGLE/renderer/gl/RendererGL.cpp
../../third_party/angle/src/libANGLE/renderer/gl/ShaderGL.cpp
../../third_party/angle/src/libANGLE/renderer/gl/SyncGL.cpp
../../third_party/angle/src/libANGLE/renderer/gl/TextureGL.cpp
../../third_party/angle/src/libANGLE/renderer/gl/VertexArrayGL.cpp
../../third_party/angle/src/libANGLE/renderer/gl/egl/DisplayEGL.cpp
../../third_party/angle/src/libANGLE/renderer/gl/egl/FunctionsEGL.cpp
../../third_party/angle/src/libANGLE/renderer/gl/egl/ImageEGL.cpp
../../third_party/angle/src/libANGLE/renderer/gl/egl/SurfaceEGL.cpp
../../third_party/angle/src/libANGLE/renderer/gl/egl/SyncEGL.cpp
../../third_party/angle/src/libANGLE/renderer/gl/renderergl_utils.cpp
../../third_party/angle/src/libANGLE/renderer/renderer_utils.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/BufferVk.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/CommandProcessor.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/ContextVk.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/DeviceVk.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/DisplayVk.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/ImageVk.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/MemoryTracking.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/PersistentCommandPool.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/ProgramExecutableVk.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/SemaphoreVk.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/SurfaceVk.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/SyncVk.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/TextureVk.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/UtilsVk.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/VertexArrayVk.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/VkImageImageSiblingVk.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/android/vk_android_utils.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/linux/DmaBufImageSiblingVkLinux.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/linux/display/WindowSurfaceVkSimple.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/linux/headless/WindowSurfaceVkHeadless.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/linux/wayland/DisplayVkWayland.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/linux/wayland/WindowSurfaceVkWayland.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/linux/xcb/DisplayVkXcb.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/linux/xcb/WindowSurfaceVkXcb.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/vk_cache_utils.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/vk_helpers.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/vk_internal_shaders_autogen.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/vk_renderer.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/vk_utils.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/vk_utils.h
../../third_party/angle/src/libANGLE/validationES.cpp
../../third_party/angle/src/libANGLE/validationES2.cpp
../../third_party/libc++/src/include/__algorithm/pop_heap.h:40: assertion __len > 0 failed: The heap given to pop_heap must be non-empty\n
../../third_party/libc++/src/include/__algorithm/sort.h:333: assertion __k != __leftmost failed: Would read out of bounds, does your comparator satisfy the strict-weak ordering requirement?\n
../../third_party/libc++/src/include/__algorithm/sort.h:643: assertion __first != __end failed: Would read out of bounds, does your comparator satisfy the strict-weak ordering requirement?\n
../../third_party/libc++/src/include/__algorithm/sort.h:655: assertion __last != __begin failed: Would read out of bounds, does your comparator satisfy the strict-weak ordering requirement?\n
../../third_party/libc++/src/include/__algorithm/sort.h:673: assertion __first != __end failed: Would read out of bounds, does your comparator satisfy the strict-weak ordering requirement?\n
../../third_party/libc++/src/include/__algorithm/sort.h:678: assertion __last != __begin failed: Would read out of bounds, does your comparator satisfy the strict-weak ordering requirement?\n
../../third_party/libc++/src/include/__algorithm/sort.h:710: assertion __first != __end failed: Would read out of bounds, does your comparator satisfy the strict-weak ordering requirement?\n
../../third_party/libc++/src/include/__algorithm/sort.h:723: assertion __last != __begin failed: Would read out of bounds, does your comparator satisfy the strict-weak ordering requirement?\n
../../third_party/libc++/src/include/__algorithm/sort.h:733: assertion __first != __end failed: Would read out of bounds, does your comparator satisfy the strict-weak ordering requirement?\n
../../third_party/libc++/src/include/__algorithm/sort.h:738: assertion __last != __begin failed: Would read out of bounds, does your comparator satisfy the strict-weak ordering requirement?\n
../../third_party/libc++/src/include/__hash_table:292: assertion __node_ != nullptr failed: Attempted to dereference a non-dereferenceable unordered container iterator\n
../../third_party/libc++/src/include/__memory/construct_at.h:40: assertion __location != nullptr failed: null pointer given to construct_at\n
../../third_party/libc++/src/include/__memory/construct_at.h:66: assertion __loc != nullptr failed: null pointer given to destroy_at\n
../../third_party/libc++/src/include/__string/char_traits.h:145: assertion !std::__is_pointer_in_range(__s1, __s1 + __n, __s2) failed: char_traits::copy: source and destination ranges overlap\n
../../third_party/libc++/src/include/__string/char_traits.h:222: assertion !std::__is_pointer_in_range(__s1, __s1 + __n, __s2) failed: char_traits::copy: source and destination ranges overlap\n
../../third_party/libc++/src/include/array:239: assertion __n < _Size failed: out-of-bounds access in std::array<T, N>\n
../../third_party/libc++/src/include/array:243: assertion __n < _Size failed: out-of-bounds access in std::array<T, N>\n
../../third_party/libc++/src/include/deque:1519: assertion !empty() failed: deque::front called on an empty deque\n
../../third_party/libc++/src/include/deque:1531: assertion !empty() failed: deque::back called on an empty deque\n
../../third_party/libc++/src/include/deque:2262: assertion !empty() failed: deque::pop_front called on an empty deque\n
../../third_party/libc++/src/include/fstream:764: assertion __extbufnext_ != nullptr failed: underflow moving from nullptr\n
../../third_party/libc++/src/include/fstream:765: assertion __extbuf_ != nullptr failed: underflow moving into nullptr\n
../../third_party/libc++/src/include/list:1343: assertion __p != end() failed: list::erase(iterator) called with a non-dereferenceable iterator\n
../../third_party/libc++/src/include/optional:790: assertion this->has_value() failed: optional operator-> called on a disengaged value\n
../../third_party/libc++/src/include/string:1241: assertion __pos <= size() failed: string index out of bounds\n
../../third_party/libc++/src/include/string:1249: assertion __pos <= size() failed: string index out of bounds\n
../../third_party/libc++/src/include/string:1364: assertion !empty() failed: string::back(): string is empty\n
../../third_party/libc++/src/include/string:2502: assertion __n == 0 || __s != nullptr failed: string::assign received nullptr\n
../../third_party/libc++/src/include/string:2719: assertion __s != nullptr failed: string::assign received nullptr\n
../../third_party/libc++/src/include/string:2730: assertion __n == 0 || __s != nullptr failed: string::append received nullptr\n
../../third_party/libc++/src/include/string:2862: assertion __s != nullptr failed: string::append received nullptr\n
../../third_party/libc++/src/include/string:2871: assertion __n == 0 || __s != nullptr failed: string::insert received nullptr\n
../../third_party/libc++/src/include/string:3170: assertion __first <= __last failed: string::erase(first, last) called with invalid range\n
../../third_party/libc++/src/include/string:973: assertion __s != nullptr failed: basic_string(const char*) detected nullptr\n
../../third_party/libc++/src/include/string:990: assertion __n == 0 || __s != nullptr failed: basic_string(const char*, n) detected nullptr\n
../../third_party/libc++/src/include/string_view:268: assertion __s != nullptr failed: null pointer passed to non-null argument of char_traits<...>::length\n
../../third_party/libc++/src/include/string_view:318: assertion __len <= static_cast<size_type>(numeric_limits<difference_type>::max()) failed: string_view::string_view(_CharT *, size_t): length does not fit in difference_type\n
../../third_party/libc++/src/include/string_view:320: assertion __len == 0 || __s != nullptr failed: string_view::string_view(_CharT *, size_t): received nullptr\n
../../third_party/libc++/src/include/string_view:330: assertion (__end - __begin) >= 0 failed: std::string_view::string_view(iterator, sentinel) received invalid range\n
../../third_party/libc++/src/include/vector:1411: assertion __n < size() failed: vector[] index out of bounds\n
../../third_party/libc++/src/include/vector:1418: assertion __n < size() failed: vector[] index out of bounds\n
../../third_party/libc++/src/include/vector:1539: assertion !empty() failed: vector::pop_back called on an empty vector\n
../../third_party/libc++/src/include/vector:1547: assertion __position != end() failed: vector::erase(iterator) called with a non-dereferenceable iterator\n
../../third_party/libc++/src/include/vector:1557: assertion __first <= __last failed: vector::erase(first, last) called with invalid range\n
../../third_party/libc++/src/include/vector:614: assertion !empty() failed: front() called on an empty vector\n
../../third_party/libc++/src/include/vector:618: assertion !empty() failed: front() called on an empty vector\n
../../third_party/libc++/src/include/vector:622: assertion !empty() failed: back() called on an empty vector\n
../../third_party/libc++/src/include/vector:626: assertion !empty() failed: back() called on an empty vector\n
../../third_party/libc++/src/src/mutex.cpp:40: assertion ec == 0 failed: call to mutex::unlock failed. A possible reason is that the mutex wasn't locked\n
../../third_party/libc++abi/src/src/fallback_malloc.cpp
../../third_party/libc++abi/src/src/private_typeinfo.cpp
./vk_swiftshader_icd.json
.0 (ANGLE 
.0AJc
.EY6%F
.bjw
.dump
.essl
.length()
.program
// BEGIN: Generated code for built-in function emulation\n\n
// END: Generated code for built-in function emulation\n\n
/?wct
/Bei*XIZ9
/Qw\vX
/dev/dri/card%lld
/dev/dri/renderD%lld
/etc/ati/amdpcsdb.default
/jZT
/ppW)
/proc/self/exe
/sys/bus/pci/
/sys/bus/pci_express/
/sys/module/amdgpu/version
/tmp
00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899NSt4__Cr14error_categoryE
0123456789
0123456789.
0123456789abcdefABCDEFxX+-pPiInN
0CgY
0H>qr
0YF2\
0[o5
0xZd
0{d9X
0{n%x3{n
1.3.0.1-motley
1.5 (ANGLE 
10Dx4
17mw
183U
1F1w
1MH\
1O1/G
1VG8
1a30R
1a<c
1fw-
1gubz<
1jc.^G
1kL<
1kL>
1wj\v
1xVb7[
2.1.23105 git hash: 5d4df51d1d7d
21+%3
27s]{n
2Z/r
2aeX
2bM>
2gU8
2lL=u
2o'xZ|
2q*j
3,eX)t
333333
33s?
3>Ci
3>lp
3?OM
3D+4
3M;Gx0`
3QG9
3S>Ok?
3[mRH
3nu<&
3uf>
3z9s
4"\r-4LD
4$y2
4*1.N5ZK
4*CN
4.N5
4=iMm
4GCI
4Po'O
4hMB
4iiii
4mG}
4x|K
4yE,
5(VPS
5(VRL9
5/gC
54gt.z
554P
582[
5NG\
5]w5
5f9L\1
5hUz
5l_G
5sx%
5u\rq
5uy>
5vh{
5wK*
5|^1v
6$InJ
6$sq{"U
60.a
68^&vU
6>5b
6iff
6l[M
6lm&
7,DZ
789:;<=>?&@ABCDE&FGHIJKLMNOPQR
79n,
7M4}
7MSO
7Q7:
7lAg
7oBS
86^P
8JQoY
8WM.
8gL>
8ixUX
8jPn
8kA_
8kM.
8lT=
8}CNK
9+j]Gg,
98Cn
9JWn
9Kw\
9M>68
9Q0Wvg
9`ZC
9a&g
9na}[
9r]Gg
9xVc7[\rZr
9y@k
:  Allocated=
: Total=
: size=
:!7EN
:0,AVyV
:ANGLE_base_vertex_base_instance_shader_builtin:
:ANGLE_clip_cull_distance:
:ANGLE_multi_draw:
:APPLE_clip_distance:
:ARB_texture_rectangle:
:ARM_shader_framebuffer_fetch:
:EXT_YUV_target:
:EXT_blend_func_extended:
:EXT_clip_cull_distance:
:EXT_conservative_depth:
:EXT_draw_buffers:
:EXT_frag_depth:
:EXT_geometry_shader:
:EXT_gpu_shader5:
:EXT_primitive_bounding_box:
:EXT_separate_shader_objects:
:EXT_shader_framebuffer_fetch:
:EXT_shader_framebuffer_fetch_non_coherent:
:EXT_shader_io_blocks:
:EXT_shader_texture_lod:
:EXT_shadow_samplers:
:EXT_tessellation_shader:
:EXT_texture_buffer:
:EXT_texture_cube_map_array:
:FMT
:FragmentPrecisionHigh:
:MaxAtomicCounterBindings:
:MaxAtomicCounterBufferSize:
:MaxCallStackDepth:
:MaxClipDistances
:MaxCombinedAtomicCounterBuffers:
:MaxCombinedAtomicCounters:
:MaxCombinedClipAndCullDistances
:MaxCombinedImageUniforms:
:MaxCombinedShaderOutputResources:
:MaxCombinedTextureImageUnits:
:MaxComputeAtomicCounterBuffers:
:MaxComputeAtomicCounters:
:MaxComputeImageUniforms:
:MaxComputeTextureImageUnits:
:MaxComputeUniformComponents:
:MaxComputeWorkGroupCountX:
:MaxComputeWorkGroupCountY:
:MaxComputeWorkGroupCountZ:
:MaxComputeWorkGroupSizeX:
:MaxComputeWorkGroupSizeY:
:MaxComputeWorkGroupSizeZ:
:MaxCullDistances
:MaxDrawBuffers:
:MaxDualSourceDrawBuffers:
:MaxExpressionComplexity:
:MaxFragmentAtomicCounterBuffers:
:MaxFragmentAtomicCounters:
:MaxFragmentImageUniforms:
:MaxFragmentInputVectors:
:MaxFragmentUniformVectors:
:MaxFunctionParameters:
:MaxGeometryAtomicCounterBuffers:
:MaxGeometryAtomicCounters:
:MaxGeometryImageUniforms:
:MaxGeometryInputComponents:
:MaxGeometryOutputComponents:
:MaxGeometryOutputVertices:
:MaxGeometryShaderInvocations:
:MaxGeometryShaderStorageBlocks:
:MaxGeometryTextureImageUnits:
:MaxGeometryTotalOutputComponents:
:MaxGeometryUniformBlocks:
:MaxGeometryUniformComponents:
:MaxImageUnits:
:MaxPatchVertices:
:MaxProgramTexelOffset:
:MaxProgramTextureGatherOffset:
:MaxSamples:
:MaxStatementDepth:
:MaxTessControlAtomicCounterBuffers:
:MaxTessControlAtomicCounters:
:MaxTessControlImageUniforms:
:MaxTessControlInputComponents:
:MaxTessControlOutputComponents:
:MaxTessControlTextureImageUnits:
:MaxTessControlTotalOutputComponents:
:MaxTessControlUniformComponents:
:MaxTessEvaluationAtomicCounterBuffers:
:MaxTessEvaluationAtomicCounters:
:MaxTessEvaluationImageUniforms:
:MaxTessEvaluationInputComponents:
:MaxTessEvaluationOutputComponents:
:MaxTessEvaluationTextureImageUnits:
:MaxTessEvaluationUniformComponents:
:MaxTessGenLevel:
:MaxTessPatchComponents:
:MaxTextureImageUnits:
:MaxVaryingVectors:
:MaxVertexAtomicCounterBuffers:
:MaxVertexAtomicCounters:
:MaxVertexAttribs:
:MaxVertexImageUniforms:
:MaxVertexOutputVectors:
:MaxVertexTextureImageUnits:
:MaxVertexUniformVectors:
:MaxViewsOVR:
:MinProgramTexelOffset:
:MinProgramTextureGatherOffset:
:NV_EGL_stream_consumer_external:
:NV_draw_buffers:
:NV_shader_framebuffer_fetch:
:OES_EGL_image_external:
:OES_EGL_image_external_essl3:
:OES_geometry_shader:
:OES_primitive_bounding_box:
:OES_sample_variables:
:OES_shader_image_atomic:
:OES_shader_io_blocks:
:OES_shader_multisample_interpolation:
:OES_standard_derivatives:
:OES_texture_3D:
:OES_texture_buffer:
:OES_texture_cube_map_array:
:OVR_multiview2:
:OVR_multiview:
:ZMT
:kAg5
; handle=
; heapIdx=
; type=
;CO5
;KCA
;YyW
<9cn
<Command Buffer Label Hierarchy:>
<C~1D
<GY6
<Queue Label Hierarchy:>
<Unrecognized>
<buffer>
<buffer> must be non null
<buffer> must be null
<buftype> EGL_IOSURFACE_ANGLE requires the EGL_ANGLE_iosurface_client_buffer extension.
<buftype> doesn't support iosurface plane
<buftype> doesn't support rectangle texture targets
<buftype> doesn't support setting GL colorspace
<buftype> doesn't support setting texture offset
<buftype> doesn't support texture internal format
<buftype> doesn't support texture type
<input>
<loadops> cannot be null.
<matrix array>
<n> != ACTIVE_PIXEL_LOCAL_STORAGE_PLANES_ANGLE
<output>
<params> cannot be null.
<scalar array>
<uniform>
<unknown op>
<validateNoMoreTransformations>
<validateNoStatementsAfterBranch>
<validateNoSwizzleOfSwizzle>
<validateNullNodes>
<validateSingleParent>
<vector array>
=00B
=G%Q"rP\na
=Icf
=Obo
=P=4e
=b8lc
=bLq
>4lu
>9bv
>I}nO
>L1\fo
>W8C
>fKc
>otc
>xEFk?q
>ytZ_
>zjJ
?10B
?333?333?333?
?Qr&C
?UfN
?axuX
?b;z7
?fff?
?oo?ou
?vf2
@JhA
@RG7
A buffer must be bound.
A device memory allocation has failed
A fence or query has not yet completed
A host memory allocation has failed
A pool allocation has failed due to fragmentation of the pool's memory
A pool memory allocation has failed
A program must be bound.
A program object is active for at least one, but not all of the shader stages that were present when the program was linked.
A renderbuffer must be bound.
A requested extension is not supported
A requested feature is not supported
A requested format is not supported on this device
A requested layer is not present or could not be loaded
A return array was too small for the result
A surface has changed in such a way that it is no longer compatible with the swapchain
A surface is no longer available
A swapchain no longer matches the surface properties exactly, but can still be used to present to the surface successfully
A texture must be bound.
A transform feedback buffer that would be written to is also bound to a non-transform-feedback target, which would cause undefined behavior.
A wait operation has not completed in the specified time
A*ud
A00E
ANGLE (
ANGLE Display::initialize error 
ANGLE DisplayEGL initialized: 
ANGLE Pipeline Cache: 
ANGLE Requires a minimum Vulkan device version of 1.1
ANGLE Requires a minimum Vulkan instance version of 1.1
ANGLE-Submit
ANGLE-Worker
ANGLEAtomicCounters
ANGLEBoundingBox
ANGLECaptureXfb
ANGLEClipDistance
ANGLECubeMapCoordTransform
ANGLECubeMapCoordTransformImplicit
ANGLECullDistance
ANGLEDepthRangeParams
ANGLEDither
ANGLEFragmentInput
ANGLEGetDisplayPlatform
ANGLEGetXfbOffsets
ANGLEInputAttachment
ANGLELastFragData
ANGLEResetDisplayPlatform
ANGLERotateInterpolateOffset
ANGLESurfaceRotation
ANGLETransformPosition
ANGLEUniformBlock
ANGLEUniforms
ANGLEXfb
ANGLEXfbBuffer
ANGLEXfbPosition
ANGLE_DEFAULT_PLATFORM
ANGLE_DUMP_PIPELINE_CACHE_GRAPH
ANGLE_ENABLE_DEBUG_MARKERS
ANGLE_FEATURE_OVERRIDES_DISABLED
ANGLE_FEATURE_OVERRIDES_ENABLED
ANGLE_PIPELINE_CACHE_GRAPH_DUMP_PATH
ANGLE_PREFERRED_DEVICE
ANGLE_SHADER_DUMP_PATH
ANGLE_angleUniforms
ANGLE_blend_burn
ANGLE_blend_darken
ANGLE_blend_difference
ANGLE_blend_dodge
ANGLE_blend_dst
ANGLE_blend_exclusion
ANGLE_blend_hardlight
ANGLE_blend_hsl_color
ANGLE_blend_hsl_hue
ANGLE_blend_hsl_luminosity
ANGLE_blend_hsl_saturation
ANGLE_blend_lighten
ANGLE_blend_multiply
ANGLE_blend_overlay
ANGLE_blend_p0
ANGLE_blend_p1
ANGLE_blend_p2
ANGLE_blend_screen
ANGLE_blend_softlight
ANGLE_blend_src
ANGLE_clip_color
ANGLE_f
ANGLE_lumv3
ANGLE_maxv3
ANGLE_minv3
ANGLE_rgb_2_yuv
ANGLE_rgb_2_yuv_highp
ANGLE_rgb_2_yuv_lowp
ANGLE_rgb_2_yuv_mediump
ANGLE_satv3
ANGLE_set_lum
ANGLE_set_lum_sat
ANGLE_textureGra
ANGLE_textureGradAGX
ANGLE_yuv_2_rgb
ANGLE_yuv_2_rgb_highp
ANGLE_yuv_2_rgb_lowp
ANGLE_yuv_2_rgb_mediump
AP\f2
ARB_blend_func_extended does not pass the tests
ASTC CPU decomp not available
ASTC decompression failed: 
AW#94
AYez
Acceleration Structure
Access info (usage: SYNC_COMPUTE_SHADER_SHADER_STORAGE_WRITE, prior_usage: SYNC_VERTEX_ATTRIBUTE_INPUT_VERTEX_ATTRIBUTE_READ
Access info (usage: SYNC_COPY_TRANSFER_WRITE, prior_usage: SYNC_VERTEX_ATTRIBUTE_INPUT_VERTEX_ATTRIBUTE_READ
Access info (usage: SYNC_FRAGMENT_SHADER_SHADER_
Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_COLOR_ATTACHMENT_OUTPUT_COLOR_ATTACHMENT_WRITE, write_barriers: SYNC_COLOR_ATTACHMENT_OUTPUT_COLOR_ATTACHMENT_READ|SYNC_COLOR_ATTACHMENT_OUTPUT_COLOR_ATTACHMENT_WRITE, command: vkCmdEndRenderPass
Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_COLOR_ATTACHMENT_OUTPUT_COLOR_ATTACHMENT_WRITE, write_barriers: SYNC_EARLY_FRAGMENT_TESTS_DEPTH_STENCIL_ATTACHMENT_READ|SYNC_EARLY_FRAGMENT_TESTS_DEPTH_STENCIL_ATTACHMENT_WRITE|SYNC_LATE_FRAGMENT_TESTS_DEPTH_STENCIL_ATTACHMENT_READ|SYNC_LATE_FRAGMENT_TESTS_DEPTH_STENCIL_ATTACHMENT_WRITE|SYNC_COLOR_ATTACHMENT_OUTPUT_COLOR_ATTACHMENT_READ|SYNC_COLOR_ATTACHMENT_OUTPUT_COLOR_ATTACHMENT_WRITE, command: vkCmdEndRenderPass
Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_FRAGMENT_SHADER_SHADER_
Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdEndRenderPass
Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_LATE_FRAGMENT_TESTS_DEPTH_STENCIL_ATTACHMENT_WRITE, write_barriers: 0, command: vkCmdEndRenderPass
Access info (usage: SYNC_VERTEX_SHADER_SHADER_STORAGE_WRITE, prior_usage: SYNC_VERTEX_ATTRIBUTE_INPUT_VERTEX_ATTRIBUTE_READ
Acquire Swap Image Before Swap
Active atomic counter resources are not assigned name strings.
Active draw buffers with missing fragment shader outputs.
Active fragment shader does not include the layout qualifier matching the blend equation
Add additional SPIRV instructions to make sure precision between shader stages match with each other
Additional GL error 
Adjust normalized clear color precision based on framebuffer color channel bits count
Adreno (TM) %d
Adreno (TM) 418
Adreno (TM) 530
Adreno (TM) 540
Advanced blend equation can only be used when only one draw buffer is not NONE
Advanced blend equations are not supported when pixel local storage is active.
Aj\fJ
AlignedAlloc
All Mac drivers do not handle struct scopes correctly. This workaround overwrites a structname with a unique prefix.
All contexts within a share group must be created with the same value of EGL_DISPLAY_SEMAPHORE_SHARE_GROUP_ANGLE.
All contexts within a share group must be created with the same value of EGL_DISPLAY_TEXTURE_SHARE_GROUP_ANGLE.
AllGraphicsShadersReadOnly
AllGraphicsShadersWrite
Allocation failed. Removed the DEVICE_LOCAL bit requirement | Allocation result: 
Allow compressed formats
Allow emulation of EXT_multisampled_render_to_texture
Allow glFlush to be deferred until renderpass ends
Always call useProgram after a successful link to avoid a driver bug
Always write explicit location layout qualifiers for fragment outputs.
Ambiguous field '
AmiE
An active buffer is mapped
An enabled vertex array has no buffer and no pointer.
An enabled vertex array has no buffer.
An event is signaled
An event is unsignaled
An external handle is not a valid handle of the specified type
Any command that transfers vertices to the GL requires a vertex shader if the current program uses a tessellation shader.
Append aliased memory decoration to ssbo and image in SpirV if they are not declared with restrict memory qualifier in GLSL
Apple OpenGL drivers crash when drawing with a zero-sized buffer bound using a non-zero divisor.
Application
Application querying parameter that does not exist.
Apply a vendor-specific transformation to explicit cubemap derivatives
Argument <%s> must be less than (MAX_COMBINED_DRAW_BUFFERS_AND_PIXEL_LOCAL_STORAGE_PLANES_ANGLE - ACTIVE_PIXEL_LOCAL_STORAGE_PLANES_ANGLE) when pixel local storage is active.
Argument <%s> must be less than MAX_COLOR_ATTACHMENTS_WITH_ACTIVE_PIXEL_LOCAL_STORAGE_ANGLE when pixel local storage is active.
Array constructor argument has an incorrect type
Array length
Array size
Array size or input primitive declaration doesn't match the size of earlier sized array inputs.
Array-ness
Artificially slow down async command queue for threading testing
Artificially slow down async monolithic pipeline creation for threading testing
At least one enabled attribute must have a divisor of zero.
Attachment type must be compatible with attachment object.
Attachments have been changed on a framebuffer configured for foveated rendering
Attempt to blit from a multisampled framebuffer and the bounds don't match with the draw framebuffer.
Attempt to blit from a multisampled framebuffer and the bounds or format of the color buffer don't match with the draw framebuffer.
Attempt to delete an active transform feedback.
Attempt to initialize readonly parameter
Attempt to read from a missing color attachment of a complete framebuffer.
Attempt to read from a missing depth/stencil attachment of a complete framebuffer.
Attempt to read from a multi-view framebuffer.
Attempt to write to a multi-view framebuffer.
Attempted to begin pixel local storage with GL_DITHER enabled.
Attempted to begin pixel local storage with GL_RASTERIZER_DISCARD enabled.
Attempted to begin pixel local storage with a blend function requiring the secondary color input.
Attempted to begin pixel local storage with a multisampled framebuffer.
Attempted to begin pixel local storage with an advanced blend equation enabled.
Attempted to begin pixel local storage with transform feedback active.
Attempted to enable a pixel local storage plane that is in a deinitialized state.
Attempted to flush a buffer not mapped for explicit flushing.
Attempted to flush buffer object zero.
Attempted to map buffer object zero.
Attempted to use a program that was not successfully linked
Attempting to blit and the read and draw buffer formats don't match. read: 0x%04X draw: 0x%04X
Attempting to draw without a program
Attribute '
Attribute (
Attribute EGL_CONTEXT_BIND_GENERATES_RESOURCE_CHROMIUM requires EGL_CHROMIUM_create_context_bind_generates_resource.
Attribute EGL_CONTEXT_CLIENT_ARRAYS_ENABLED_ANGLE requires EGL_ANGLE_create_context_client_arrays.
Attribute EGL_CONTEXT_METAL_OWNERSHIP_IDENTITY_ANGLE requires EGL_ANGLE_metal_create_context_ownership_identity.
Attribute EGL_CONTEXT_OPENGL_BACKWARDS_COMPATIBLE_ANGLE requires EGL_ANGLE_create_context_backwards_compatible.
Attribute EGL_CONTEXT_PRIORITY_LEVEL_IMG must be one of: EGL_CONTEXT_PRIORITY_LOW_IMG, EGL_CONTEXT_PRIORITY_MEDIUM_IMG, or EGL_CONTEXT_PRIORITY_HIGH_IMG.
Attribute EGL_CONTEXT_PRIORITY_LEVEL_IMG requires extension EGL_IMG_context_priority.
Attribute EGL_CONTEXT_PROGRAM_BINARY_CACHE_ENABLED_ANGLE requires EGL_ANGLE_program_cache_control.
Attribute EGL_CONTEXT_VIRTUALIZATION_GROUP_ANGLE requires extension EGL_ANGLE_context_virtualization.
Attribute EGL_CONTEXT_WEBGL_COMPATIBILITY_ANGLE requires EGL_ANGLE_create_context_webgl_compatibility.
Attribute EGL_DISPLAY_SEMAPHORE_SHARE_GROUP_ANGLE requires EGL_ANGLE_display_semaphore_share_group.
Attribute EGL_DISPLAY_TEXTURE_SHARE_GROUP_ANGLE requires EGL_ANGLE_display_texture_share_group.
Attribute EGL_EXTENSIONS_ENABLED_ANGLE requires EGL_ANGLE_create_context_extensions_enabled.
Attribute EGL_EXTERNAL_CONTEXT_ANGLE requires EGL_ANGLE_external_context_and_surface.
Attribute EGL_EXTERNAL_SURFACE_ANGLE requires EGL_ANGLE_external_context_and_surface.
Attribute EGL_GENERATE_RESET_ON_VIDEO_MEMORY_PURGE_NV requires extension EGL_NV_robustness_video_memory_purge.
Attribute EGL_POWER_PREFERENCE_ANGLE requires EGL_ANGLE_display_power_preference.
Attribute EGL_POWER_PREFERENCE_ANGLE requires EGL_ANGLE_power_preference.
Attribute EGL_PROTECTED_CONTEXT_EXT requires extension EGL_EXT_protected_content.
Attribute EGL_RENDER_BUFFER requires EGL_KHR_mutable_render_buffer.
Attribute EGL_ROBUST_RESOURCE_INITIALIZATION_ANGLE requires EGL_ANGLE_robust_resource_initialization.
Attribute EGL_SWAP_INTERVAL_ANGLE requires extension EGL_ANGLE_create_surface_swap_interval.
Attribute EGL_VULKAN_IMAGE_CREATE_INFO_{HI,LO}_ANGLE require extension EGL_ANGLE_vulkan_image.
Attribute list must be NULL or GL_NONE
Attribute location out of range
Attribute must be EGL_TRUE or EGL_FALSE.
Attributes that begin with 'gl_' are not allowed.
Attributes that begin with 'webgl_', or '_webgl_' are not allowed.
A~eK
B-a_L
B:5&?I\20)H
B@h4ADRd
BK:b
BR5&F
BUFFER
BXK 
B^4(a
Backend GL context supports ARB_fragment_shader_interlock extension
Backend GL context supports EXT_shader_framebuffer_fetch extension
Backend GL context supports EXT_shader_framebuffer_fetch_non_coherent extension
Backend GL context supports EXT_shader_pixel_local_storage extension
Backend GL context supports GL_INTEL_fragment_shader_ordering extension
Backend GL context supports NV_fragment_shader_interlock extension
Bad access.
Bad allocation.
Bad attribute.
Bad config.
Bad context.
Bad current surface.
Bad device.
Bad display.
Bad match.
Bad native pixmap.
Bad native window.
Bad parameter.
Bad platform type.
Bad state.
Bad stream state
Bad stream.
Bad surface.
Base level must be 0.
Base level must be at least 0.
Before passing an oldSwapchain to VkSwapchainCreateInfoKHR, wait for queue to be idle. Works around a bug on platforms which destroy oldSwapchain in vkCreateSwapchainKHR.
Binary blob no longer available in cache (removed by a thread?)
Bind transform feedback buffers to the generic binding point before calling glBindBufferBase or glBindBufferRange.
Binding layout qualifier
Blend functions requiring the secondary color input are not supported when pixel local storage is active.
Blending must be disabled when writing to YUV framebuffers.
Blit extension not available.
Blit feedback loop: the read and draw framebuffers are the same.
BlitFramebuffer called for non-existing buffers
BlitFramebuffer dimensions out of 32-bit integer range.
Blits are only supported from 2D texture, renderbuffer or default framebuffer attachments in this extension.
Blits are only supported to 2D texture, renderbuffer or default framebuffer attachments in this extension.
Blitting to or from a YUV framebuffer is disallowed.
Blob cache callbacks cannot be null.
Blob cache functions can only be set once in the lifetime of a Display
Bo'x
Border must be 0.
Both compute and graphics shaders are attached to the same program.
Both width and height argument of drawn texture must be positive.
Branch: Break
Branch: Continue
Branch: Kill
Branch: Return
Branch: Unknown Branch
Breaking the render pass on small upload to large buffer
Broadcom
Buffer View
Buffer is already mapped.
Buffer is bound for transform feedback.
Buffer is immutable.
Buffer is not mapped.
Buffer is not updatable.
Buffer offset overflow.
BufferExternal
BufferVk::getIndexRange
BufferVk::mapRange
BuiltInResultType
Bw]W
Bypass deferredFlush with calling swapbuffers on flush or finish when in Shared Present mode
BzX`zX
Bzft
B|{NP
C51]
C?7J
CDmo)
COMPUTE
CONSTANT_COLOR (or ONE_MINUS_CONSTANT_COLOR) and CONSTANT_ALPHA (or ONE_MINUS_CONSTANT_ALPHA) cannot be used together as source and destination color factors in the blend function.
CRC check failed; possible pipeline cache data corruption.
CRITICAL
CalculateBufferInfo
Calculation of loop conditions in for and while loop has bug
Call a built-in function
Call a user-defined function
Call an internal function with raw implementation
Call stack too deep (larger than 
Can not dump compiled binary (SPIR-V) shaders yet
Can not get pointer for reserved buffer name zero.
Can not substitute compiled binary (SPIR-V) shaders yet
Can only be highp
Cannot be qualified as invariant.
Cannot capture outbound array element '
Cannot change active program while transform feedback is unpaused.
Cannot change program binary while program is associated with an active transform feedback object.
Cannot create a 2D texture from a multisampled EGL image.
Cannot create an OpenGL ES platform on GLX without the GLX_ARB_create_context extension.
Cannot create an OpenGL ES platform on GLX without the GLX_EXT_create_context_es_profile extension.
Cannot disable foveation on a foveated texture
Cannot generate mipmaps for a zero-size texture in a WebGL context.
Cannot have multiple depth qualifiers
Cannot have multiple different invocations specifiers
Cannot have multiple different max_vertices specifiers
Cannot have multiple different primitive specifiers
Cannot have multiple different vertices specifiers
Cannot have multiple different work group size specifiers
Cannot have multiple index specifiers
Cannot have negative height, width, or depth.
Cannot have negative start.
Cannot have negative stride.
Cannot link program while program is associated with an active transform feedback object.
Cannot load program binaries across different ES context versions.
Cannot load program binary due to changed renderer string.
Cannot pop the default debug group.
Cannot push more than GL_MAX_DEBUG_GROUP_STACK_DEPTH debug groups.
Cannot use GL_LINEAR filter when blitting a integer framebuffer.
Cap 0x%04X cannot be enabled or disabled while pixel local storage is active.
Capture of array elements is undefined and not supported.
Capture of arrays is undefined and not supported.
Case\n
CastStateValues
Cb3ilHn
Cc<A
Change in cache header version detected: 
Check the filesystem for shaders to use instead of those provided through glShaderSource
Check the filesystem for translated shaders to use instead of the shader translator's
CheckCompileStatus
CheckInternalFormatRenderbufferRenderability
CheckLinkStatus
CheckSizedInternalFormatTextureRenderability
ChoosePhysicalDevice
Chunking upload of texture data to work around driver hangs.
Ck{J
Clamp uniform array access to avoid reading invalid memory.
Clear called for non-existing buffers
Clear effectively discarding previous draw call results. Suggest earlier Clear followed by masked color or depth/stencil draw calls instead, or glInvalidateFramebuffer to discard data instead
ClearErrors
Clearing an FBO with multiple attachments may need a flush to avoid race conditions
Clears when the clear color is all zeros or ones do not work.
Client data cannot be used with a non-default vertex array object.
Code block\n
Color buffer component types are not compatible.
Color buffer sizes are not compatible.
Color buffer types are not compatible.
Color number for primary color greater than or equal to MAX_DRAW_BUFFERS
Color number for secondary color greater than or equal to MAX_DUAL_SOURCE_DRAW_BUFFERS
Color writemask for a GL_RGB9_E5 draw buffer must have the same values for red, green, and blue channels.
ColorWrite
ColorWriteAllShadersFeedback
ColorWriteFragmentShaderFeedback
Command Buffer
Command Pool
Command successfully completed
CommandProcessor::handleDeviceLost
CommandProcessor::queueCommand
CommandProcessor::waitForAllWorkToBeSubmitted
CommandQueue::handleDeviceLost
CommandQueue::queueSubmit
CommandQueue::submitCommands
Compare Equal
Compare Greater Than
Compare Greater Than or Equal
Compare Less Than
Compare Less Than or Equal
Compare Not Equal
Comparing default-constructed hashtable iterator with a non-default-constructed hashtable iterator.
Compile/Link (unlocked)
CompileEvent::wait
Complex shader not representible in SPIR-V
Component must be in the range [0;3]
Compress vertex data to smaller data types when possible. Using this feature makes ANGLE non-conformant.
CompressAndStorePipelineCacheVk
CompressBlob
Compressed data is valid if-and-only-if the texture is compressed.
Compressed texture dimensions must exactly match the dimensions of the data passed in.
Compressed textures cannot be attached to a framebuffer.
Compressing vertex data in buffer 
Compute shader is not supported in this shader version.
Compute shader precision not yet implemented.
ComputeShaderReadOnly
ComputeShaderWrite
ComputeStartVertex
Config does not support EGL_LOCK_SURFACE_BIT
Congfig does not suport pixmaps.
Constant folded addition overflowed to infinity
Constant folded division overflowed to infinity
Constant folded multiplication overflowed to infinity
Constant folded subtraction overflowed to infinity
Constant folded undefined addition generated NaN
Constant folded undefined multiplication generated NaN
Constant folded undefined subtraction generated NaN
Constant value cannot be passed for 'out' or 'inout' parameters.
Construct
Consumer GL extension not enabled
Consumer GLTexture extension not active
Context can only be current on one thread
Context does not support GL_ANGLE_texture_rectangle
Context flushed due to out-of-memory error.
Context has been lost.
Context lost for unknown reason.
Context lost.
Context with no config is not supported.
ContextVk::ContextVk
ContextVk::clearAllGarbage
ContextVk::finishImpl
ContextVk::flushAndSubmitOutsideRenderPassCommands
ContextVk::flushImpl
ContextVk::initialize
ContextVk::onCopyUpdate
ContextVk::synchronizeCpuGpuTime
Copy*TextureCHROMIUM from EXTERNAL_OES to integer format requires OES_EGL_image_external_essl3
CopyTexImage2D spuriously returns errors on iOS when copying from renderbuffers.
Copying from a YUV framebuffer is disallowed.
Copying image data due to texture format fallback
Corrupt the program binary retrieved from the driver for testing purposes.
Could not create GL context.
Could not create a backing OpenGL context.
Could not create the initialization pbuffer.
Could not dlopen libGL.so.1: 
Could not dlopen native EGL: 
Could not find a decent GLX FBConfig to create the context.
Could not find eglGetProcAddress
Could not fit output variable into available locations: 
Could not get the visual info from the fb config
Could not load EGL entry point eglBindAPI
Could not load EGL entry point eglBindTexImage
Could not load EGL entry point eglChooseConfig
Could not load EGL entry point eglClientWaitSyncKHR
Could not load EGL entry point eglCreateContext
Could not load EGL entry point eglCreateImageKHR
Could not load EGL entry point eglCreatePbufferSurface
Could not load EGL entry point eglCreateSyncKHR
Could not load EGL entry point eglCreateWindowSurface
Could not load EGL entry point eglDestroyContext
Could not load EGL entry point eglDestroyImageKHR
Could not load EGL entry point eglDestroySurface
Could not load EGL entry point eglDestroySyncKHR
Could not load EGL entry point eglGetCompositorTimingANDROID
Could not load EGL entry point eglGetCompositorTimingSupportedANDROID
Could not load EGL entry point eglGetConfigAttrib
Could not load EGL entry point eglGetConfigs
Could not load EGL entry point eglGetCurrentContext
Could not load EGL entry point eglGetCurrentSurface
Could not load EGL entry point eglGetDisplay
Could not load EGL entry point eglGetError
Could not load EGL entry point eglGetFrameTimestampSupportedANDROID
Could not load EGL entry point eglGetFrameTimestampsANDROID
Could not load EGL entry point eglGetNextFrameIdANDROID
Could not load EGL entry point eglGetSyncAttribKHR
Could not load EGL entry point eglInitialize
Could not load EGL entry point eglMakeCurrent
Could not load EGL entry point eglPresentationTimeANDROID
Could not load EGL entry point eglQueryDmaBufFormatsEXT
Could not load EGL entry point eglQueryDmaBufModifiersEXT
Could not load EGL entry point eglQueryString
Could not load EGL entry point eglQuerySurface
Could not load EGL entry point eglReleaseTexImage
Could not load EGL entry point eglSetBlobCacheFuncsANDROID
Could not load EGL entry point eglSurfaceAttrib
Could not load EGL entry point eglSwapBuffers
Could not load EGL entry point eglSwapBuffersWithDamageKHR
Could not load EGL entry point eglSwapInterval
Could not load EGL entry point eglTerminate
Could not load EGL entry point eglWaitSyncKHR
Could not load GLX entry point glXBindTexImageEXT
Could not load GLX entry point glXChooseFBConfig
Could not load GLX entry point glXCreateContext
Could not load GLX entry point glXCreateContextAttribsARB
Could not load GLX entry point glXCreatePbuffer
Could not load GLX entry point glXCreatePixmap
Could not load GLX entry point glXCreateWindow
Could not load GLX entry point glXDestroyContext
Could not load GLX entry point glXDestroyPbuffer
Could not load GLX entry point glXDestroyPixmap
Could not load GLX entry point glXDestroyWindow
Could not load GLX entry point glXGetClientString
Could not load GLX entry point glXGetCurrentContext
Could not load GLX entry point glXGetCurrentDrawable
Could not load GLX entry point glXGetFBConfigAttrib
Could not load GLX entry point glXGetFBConfigs
Could not load GLX entry point glXGetMscRateOML
Could not load GLX entry point glXGetSyncValuesOML
Could not load GLX entry point glXGetVisualFromFBConfig
Could not load GLX entry point glXMakeCurrent
Could not load GLX entry point glXQueryDrawable
Could not load GLX entry point glXQueryExtension
Could not load GLX entry point glXQueryExtensionsString
Could not load GLX entry point glXQueryVersion
Could not load GLX entry point glXReleaseTexImageEXT
Could not load GLX entry point glXSwapBuffers
Could not load GLX entry point glXSwapIntervalEXT
Could not load GLX entry point glXSwapIntervalMESA
Could not load GLX entry point glXSwapIntervalSGI
Could not load GLX entry point glXWaitGL
Could not load GLX entry point glXWaitX
Could not make the initialization pbuffer current.
Could not open the default X display.
Could not pack varying 
Could not query the GLX version.
Could not retrieve glXGetProcAddress
Count exceeds MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS.
Cp^fz
Create flags must only include bits defined by GL_ANGLE_external_objects_flags
CreateMonolithicPipelineTask
CreateRenderPass1
CreateSync can only be called on the current display
Cull distance functionality is not available
Cull mode not recognized.
Current GL context not associated with stream consumer
Current context is not an external context
Current driver does not support transform feedback in binary programs.
Current matrix stack has only a single matrix.
Current matrix stack is full.
Current renderer doesn't support alpha-to-coverage.
Currently allocated size for memory allocation type (
CustomData
Cv^q
Cx]q
Cz>V
D,H9
D1&q
D3D workarounds
D3D11 device creation extension not active
D83YIz!
DESKTOP_SESSION
DO\r\t8
DP!Q@i\f
DP<M
DPL3
DQCT
DUAL_SOURCE_
D\3q6\v
D^u7
Data extracted from the cache headers: 
Data is not evenly divisible into the number of bytes needed to store in memory a datum indicated by type.
Data too big for buffer (%d + %zd > %zd).\n
Debug Utils Messenger
DebugUtilsMessenger
Declaration\n
Decode and encode before generateMipmap for srgb format textures.
DecompressBlob
Decompressed data size is larger than the maximum supported (
Default framebuffer is bound.
Default framebuffer object name 0 does not support pixel local storage.
Default vertex array object is bound.
Default\n
Deferred
Deprecated behavior
Depth must be less than or equal to MAX_ARRAY_TEXTURE_LAYERS
Depth-stencil buffer types are not compatible.
Depth/stencil buffer format combination not allowed for blit.
DepthReadStencilRead
DepthReadStencilReadAllShadersRead
DepthReadStencilReadFragmentShaderRead
DepthReadStencilWrite
DepthReadStencilWriteAllShadersDepthRead
DepthReadStencilWriteFragmentShaderDepthRead
DepthStencilAllShadersFeedback
DepthStencilFragmentShaderFeedback
DepthWriteStencilRead
DepthWriteStencilReadAllShadersStencilRead
DepthWriteStencilReadFragmentShaderStencilRead
DepthWriteStencilWrite
Descriptor Pool
Descriptor Set
Descriptor Set Layout
Descriptor Update Template
Desired resource size is greater than max renderbuffer size.
Desired resource size is greater than max texture size.
Destination texture cannot be immutable.
Destination texture is not a valid texture object.
Destination texture too small.
Device Memory
Device creation extension not active
Device must have been created using eglCreateDevice
Device needs VK_EXT_full_screen_exclusive explicitly disabled
Dfa?
Direct3D platform is unsupported.
Directory: '
Disable EXT_render_snorm extension.
Disable EXT_texture_mirror_clamp_to_edge extension.
Disable GL_EXT_disjoint_timer_query extension
Disable GL_EXT_semaphore_fd extension
Disable GL_EXT_separate_shader_objects and cap core ES version to 3.0
Disable GPU switching support (use only the low-power GPU) on older MacBook Pros.
Disable OES_draw_buffers_indexed extension.
Disable loading the pipeline cache from the blob cache for testing
Disable support for GL_OES_get_program_binary
Disable support for OES_draw_buffers_indexed and EXT_draw_buffers_indexed
Disable support for anisotropic filtering
Disables multi-threaded decompression of compressed texture formats
Disables saving programs to the cache
Disabling GL_APPLE_clip_distance because only 
Disabling GL_CHROMIUM_bind_uniform_location during capture, which is not supported on native drivers
Disabling GL_EXT_clip_cull_distance because only 
Disabling GL_EXT_map_buffer_range and GL_OES_mapbuffer during capture, which are not supported on some native drivers
Disabling GL_EXT_texture_mirror_clamp_to_edge during capture, which is not supported on some native drivers
Disabling GL_NV_framebuffer_blit during capture, which is not supported on some native drivers
Disabling GL_NV_shader_noperspective_interpolation during capture, which is not supported on some native drivers
Disabling GL_OES_depth32 during capture, which is not widely supported on mobile
Disabling GL_OES_get_program_binary for trace portability
Disabling the following feature(s) because driver does not support VK_EXT_device_memory_report extension:
Disallow use of LOAD_OP_NONE for only one of the depth or stencil aspects of a depth/stencil attachment
Dispatch indirect buffer must be bound.
Display Mode
Display type EGL_PLATFORM_ANGLE_TYPE_NULL_ANGLE requires EGL_ANGLE_platform_angle_null.
DisplayImpl::valdiatePixmap unimplemented.
DisplayImpl::validateClientBuffer unimplemented.
DisplayImpl::validateImageClientBuffer unimplemented.
DisplayVk::waitClient
DisplayVk::waitNative
Dithering darkens or brightens pixels depending on coordinates and when repeated sufficient numbers of times this effect becomes visible to users. Conditionally enable additional blend factors for dithering
Divide by zero during constant folding
Divide by zero error during constant folding
Do not use native KHR_parallel_shader_compile even when available.
Draw buffer greater than MAX_DRAW_BUFFERS.
Draw buffer must be zero when using depth or stencil.
Draw framebuffer has no attachments and no enabled, texture-backed pixel local storage planes.
Draw indirect buffer must be bound.
Draw mode must match current transform feedback object's draw mode.
Drivers generate errors when querying the number of bits in timer queries
Drivers returning raw sRGB values instead of linearized values when calling glReadPixels on unsized sRGB texture formats
DrmFourCCFormatToGLInternalFormat
DrmFourCCFormatToVkFormats
Dropped texture update that is superseded by a more recent one
Ds:r2
DtMam
Dual-source blending functions limit the number of supported draw buffers.
Due to a Vulkan spec ambiguity, some drivers interpret depthBiasConstantFactor as half the expected value
Dufw
DumpPipelineCacheGraph
Dumped program: 
Dumped shader source: 
Dumped translated source: 
Dumping pipeline cache transition graph to: "
Duplicate field name in structure
Duplicated ordering declaration
Duplicated point type declaration
Duplicated primitive type declaration
Duplicated vertex spacing declaration
Duplicated vertices specified
During initialization, assign the current vertex attributes to the spec-mandated defaults
Dynamic indexing of swizzled l-values doesn't work correctly on various platforms.
D|TQ
E)n[V
E>ZX
EGL 
EGL >= 1.4 is required
EGL image internal format is not supported as a renderbuffer.
EGL image internal format is not supported as a texture.
EGL image is not valid.
EGL stream consumer external GL extension not enabled
EGL_ANDROID_blob_cache
EGL_ANDROID_create_native_client_buffer
EGL_ANDROID_framebuffer_target
EGL_ANDROID_framebuffer_target is not enabled.
EGL_ANDROID_get_frame_timestamps
EGL_ANDROID_get_frame_timestamps extension is not available.
EGL_ANDROID_get_native_client_buffer
EGL_ANDROID_image_native_buffer
EGL_ANDROID_image_native_buffer not supported.
EGL_ANDROID_native_fence_sync
EGL_ANDROID_native_fence_sync extension is not available.
EGL_ANDROID_presentation_time
EGL_ANDROID_presentation_time is not available.
EGL_ANDROID_recordable
EGL_ANDROID_recordable is not enabled.
EGL_ANGLE_colorspace_attribute_passthrough
EGL_ANGLE_context_virtualization
EGL_ANGLE_create_context_backwards_compatible
EGL_ANGLE_create_context_client_arrays
EGL_ANGLE_create_context_extensions_enabled
EGL_ANGLE_create_context_webgl_compatibility
EGL_ANGLE_create_surface_swap_interval
EGL_ANGLE_d3d_share_handle_client_buffer
EGL_ANGLE_d3d_texture_client_buffer
EGL_ANGLE_device_cgl
EGL_ANGLE_device_creation
EGL_ANGLE_device_creation_d3d11
EGL_ANGLE_device_d3d
EGL_ANGLE_device_eagl
EGL_ANGLE_device_metal
EGL_ANGLE_device_vulkan
EGL_ANGLE_direct_composition
EGL_ANGLE_display_power_preference
EGL_ANGLE_display_semaphore_share_group
EGL_ANGLE_display_texture_share_group
EGL_ANGLE_experimental_present_path
EGL_ANGLE_experimental_present_path extension not active
EGL_ANGLE_external_context_and_surface
EGL_ANGLE_external_context_and_surface is not available
EGL_ANGLE_feature_control
EGL_ANGLE_feature_control extension is not available.
EGL_ANGLE_feature_control is not supported
EGL_ANGLE_global_fence_sync
EGL_ANGLE_global_fence_sync extension is not available
EGL_ANGLE_image_d3d11_texture
EGL_ANGLE_image_d3d11_texture not supported.
EGL_ANGLE_iosurface_client_buffer
EGL_ANGLE_iosurface_client_buffer is not enabled.
EGL_ANGLE_keyed_mutex
EGL_ANGLE_metal_create_context_ownership_identity
EGL_ANGLE_metal_shared_event_sync
EGL_ANGLE_metal_shared_event_sync is not available
EGL_ANGLE_metal_shared_event_sync is not available.
EGL_ANGLE_metal_texture_client_buffer
EGL_ANGLE_metal_texture_client_buffer not supported.
EGL_ANGLE_no_error
EGL_ANGLE_no_error is not available.
EGL_ANGLE_platform_angle
EGL_ANGLE_platform_angle extension not active
EGL_ANGLE_platform_angle_d3d
EGL_ANGLE_platform_angle_d3d is not supported
EGL_ANGLE_platform_angle_d3d11on12
EGL_ANGLE_platform_angle_device_id
EGL_ANGLE_platform_angle_device_id is not supported
EGL_ANGLE_platform_angle_device_type_egl_angle
EGL_ANGLE_platform_angle_device_type_egl_angle is not supported
EGL_ANGLE_platform_angle_device_type_swiftshader
EGL_ANGLE_platform_angle_device_type_swiftshader is not supported
EGL_ANGLE_platform_angle_metal
EGL_ANGLE_platform_angle_null
EGL_ANGLE_platform_angle_opengl
EGL_ANGLE_platform_angle_vulkan
EGL_ANGLE_platform_angle_webgpu
EGL_ANGLE_platform_device_context_volatile_cgl
EGL_ANGLE_platform_device_context_volatile_eagl
EGL_ANGLE_power_preference
EGL_ANGLE_program_cache_control
EGL_ANGLE_query_surface_pointer
EGL_ANGLE_robust_resource_initialization
EGL_ANGLE_robust_resource_initialization not enabled.
EGL_ANGLE_stream_producer_d3d_texture
EGL_ANGLE_surface_d3d_texture_2d_share_handle
EGL_ANGLE_surface_orientation
EGL_ANGLE_surface_orientation is not enabled.
EGL_ANGLE_swap_buffers_with_frame_token is not available.
EGL_ANGLE_sync_control_rate
EGL_ANGLE_timestamp_surface_attribute
EGL_ANGLE_vulkan_image
EGL_ANGLE_vulkan_image not supported.
EGL_ANGLE_wait_until_work_scheduled
EGL_ANGLE_window_fixed_size
EGL_ANGLE_windows_ui_composition
EGL_ANGLE_x11_visual
EGL_AcquireExternalContextANGLE
EGL_BUFFER_AGE_EXT cannot be used without EGL_EXT_buffer_age support.
EGL_BUFFER_AGE_KHR attribute of surface has not been queried since the most recent frame boundary
EGL_BindAPI
EGL_BindTexImage
EGL_CHROMIUM_create_context_bind_generates_resource
EGL_CHROMIUM_sync_control
EGL_COLOR_COMPONENT_TYPE_EXT invalid attribute: 0x%X
EGL_CONTEXT_BIND_GENERATES_RESOURCE_CHROMIUM must be EGL_TRUE or EGL_FALSE.
EGL_CONTEXT_CLIENT_ARRAYS_ENABLED_ANGLE must be EGL_TRUE or EGL_FALSE.
EGL_CONTEXT_METAL_OWNERSHIP_IDENTITY_ANGLE mustbe non-zero.
EGL_CONTEXT_OPENGL_BACKWARDS_COMPATIBLE_ANGLE must be either EGL_TRUE or EGL_FALSE.
EGL_CONTEXT_PROGRAM_BINARY_CACHE_ENABLED_ANGLE must be EGL_TRUE or EGL_FALSE.
EGL_CONTEXT_WEBGL_COMPATIBILITY_ANGLE must be EGL_TRUE or EGL_FALSE.
EGL_ChooseConfig
EGL_ClientWaitSync
EGL_ClientWaitSyncKHR
EGL_CopyBuffers
EGL_CopyMetalSharedEventANGLE
EGL_CreateContext
EGL_CreateDeviceANGLE
EGL_CreateImage
EGL_CreateImageKHR
EGL_CreateNativeClientBufferANDROID
EGL_CreatePbufferFromClientBuffer
EGL_CreatePbufferSurface
EGL_CreatePixmapSurface
EGL_CreatePlatformPixmapSurface
EGL_CreatePlatformPixmapSurfaceEXT
EGL_CreatePlatformWindowSurface
EGL_CreatePlatformWindowSurfaceEXT
EGL_CreateStreamKHR
EGL_CreateStreamProducerD3DTextureANGLE
EGL_CreateSync
EGL_CreateSyncKHR
EGL_CreateWindowSurface
EGL_D3D11_TEXTURE_ARRAY_SLICE_ANGLE cannot be used without EGL_ANGLE_image_d3d11_texture support.
EGL_D3D11_TEXTURE_PLANE_ANGLE cannot be used without EGL_ANGLE_image_d3d11_texture support.
EGL_DIRECT_COMPOSITION_ANGLE cannot be used without EGL_ANGLE_direct_composition support.
EGL_DISPLAY_SEMAPHORE_SHARE_GROUP_ANGLE must be EGL_TRUE or EGL_FALSE.
EGL_DISPLAY_TEXTURE_SHARE_GROUP_ANGLE must be EGL_TRUE or EGL_FALSE.
EGL_DebugMessageControlKHR
EGL_DestroyContext
EGL_DestroyImage
EGL_DestroyImageKHR
EGL_DestroyStreamKHR
EGL_DestroySurface
EGL_DestroySync
EGL_DestroySyncKHR
EGL_DupNativeFenceFDANDROID
EGL_EXPERIMENTAL_PRESENT_PATH_ANGLE requires a device type of EGL_PLATFORM_ANGLE_TYPE_D3D11_ANGLE.
EGL_EXTENSIONS_ENABLED_ANGLE must be either EGL_TRUE or EGL_FALSE.
EGL_EXTERNAL_CONTEXT_ANGLE doesn't allow creating with sharedContext.
EGL_EXTERNAL_CONTEXT_ANGLE must be either EGL_TRUE or EGL_FALSE.
EGL_EXT_buffer_age
EGL_EXT_client_extensions
EGL_EXT_create_context_robustness
EGL_EXT_create_context_robustness available but robust context creation failed.
EGL_EXT_device_base
EGL_EXT_device_drm
EGL_EXT_device_drm_render_node
EGL_EXT_device_enumeration
EGL_EXT_device_query
EGL_EXT_device_query extension is not available.
EGL_EXT_device_query not supported.
EGL_EXT_dma_buf_import_modfier not supported
EGL_EXT_gl_colorspace_bt2020_hlg
EGL_EXT_gl_colorspace_bt2020_linear
EGL_EXT_gl_colorspace_bt2020_pq
EGL_EXT_gl_colorspace_display_p3
EGL_EXT_gl_colorspace_display_p3_linear
EGL_EXT_gl_colorspace_display_p3_passthrough
EGL_EXT_gl_colorspace_display_p3_passthrough is not available.
EGL_EXT_gl_colorspace_scrgb
EGL_EXT_gl_colorspace_scrgb_linear
EGL_EXT_image_dma_buf_import
EGL_EXT_image_dma_buf_import not supported.
EGL_EXT_image_dma_buf_import_modifiers
EGL_EXT_image_gl_colorspace
EGL_EXT_pixel_format_float
EGL_EXT_pixel_format_float is not enabled.
EGL_EXT_platform_base
EGL_EXT_platform_base not supported
EGL_EXT_platform_device
EGL_EXT_platform_wayland
EGL_EXT_protected_content
EGL_EXT_protected_content not supported
EGL_ExportVkImageANGLE
EGL_FEATURE_OVERRIDES_DISABLED_ANGLE must be a valid pointer
EGL_FEATURE_OVERRIDES_ENABLED_ANGLE must be a valid pointer
EGL_FIXED_SIZE_ANGLE cannot be used without EGL_ANGLE_window_fixed_size support.
EGL_ForceGPUSwitchANGLE
EGL_GENERATE_RESET_ON_VIDEO_MEMORY_PURGE_NV must be either EGL_TRUE or EGL_FALSE.
EGL_GGP_STREAM_DESCRIPTOR_ANGLE requires EGL_ANGLE_ggp_stream_descriptor.
EGL_GL_COLORSPACE cannot be used without EGL_KHR_gl_colorspace support.
EGL_GL_TEXTURE_LEVEL cannot be negative.
EGL_GL_TEXTURE_LEVEL cannot be used in conjunction with a renderbuffer target.
EGL_GL_TEXTURE_LEVEL cannot be used without KHR_gl_texture_*_image support.
EGL_GL_TEXTURE_ZOFFSET cannot be used without KHR_gl_texture_3D_image support.
EGL_GL_TEXTURE_ZOFFSET must be used with a 3D texture target.
EGL_GetCompositorTimingANDROID
EGL_GetCompositorTimingSupportedANDROID
EGL_GetConfigAttrib
EGL_GetConfigs
EGL_GetCurrentContext
EGL_GetCurrentDisplay
EGL_GetCurrentSurface
EGL_GetDisplay
EGL_GetError
EGL_GetFrameTimestampSupportedANDROID
EGL_GetFrameTimestampsANDROID
EGL_GetMscRateANGLE
EGL_GetNativeClientBufferANDROID
EGL_GetNextFrameIdANDROID
EGL_GetPlatformDisplay
EGL_GetPlatformDisplayEXT
EGL_GetProcAddress
EGL_GetSyncAttrib
EGL_GetSyncAttribKHR
EGL_GetSyncValuesCHROMIUM
EGL_HandleGPUSwitchANGLE
EGL_IMAGE_PRESERVED must be EGL_TRUE or EGL_FALSE.
EGL_IMG_context_priority
EGL_IOSURFACE requires the EGL_TEXTURE_RGBA format
EGL_IOSURFACE requires the texture target to match the config
EGL_Initialize
EGL_KHR_client_get_all_proc_addresses
EGL_KHR_create_context
EGL_KHR_create_context_no_error
EGL_KHR_debug
EGL_KHR_debug extension is not available.
EGL_KHR_fence_sync
EGL_KHR_fence_sync extension is not available
EGL_KHR_get_all_proc_addresses
EGL_KHR_gl_colorspace
EGL_KHR_gl_renderbuffer_image
EGL_KHR_gl_texture_2D_image
EGL_KHR_gl_texture_3D_image
EGL_KHR_gl_texture_cubemap_image
EGL_KHR_image
EGL_KHR_image not supported.
EGL_KHR_image_base
EGL_KHR_image_pixmap
EGL_KHR_lock_surface3
EGL_KHR_lock_surface3 invalid attribute: 0x%X
EGL_KHR_lock_surface3 is not enabled.
EGL_KHR_lock_surface3 is not supported.
EGL_KHR_mutable_render_buffer
EGL_KHR_no_config_context
EGL_KHR_partial_update
EGL_KHR_platform_gbm
EGL_KHR_reusable_sync
EGL_KHR_reusable_sync extension is not available.
EGL_KHR_stream
EGL_KHR_stream_consumer_gltexture
EGL_KHR_surfaceless_context
EGL_KHR_swap_buffers_with_damage
EGL_KHR_swap_buffers_with_damage is not available.
EGL_KHR_wait_sync
EGL_KHR_wait_sync extension is not available
EGL_LabelObjectKHR
EGL_LockSurfaceKHR
EGL_MESA_platform_surfaceless
EGL_METAL_TEXTURE_ARRAY_SLICE_ANGLE cannot be used without EGL_ANGLE_metal_texture_client_buffer support.
EGL_MakeCurrent
EGL_NOK_texture_from_pixmap
EGL_NOK_texture_from_pixmap is not enabled.
EGL_NV_post_sub_buffer
EGL_NV_robustness_video_memory_purge
EGL_NV_stream_consumer_gltexture_yuv
EGL_PLATFORM_ANGLE_D3D11ON12_ANGLE extension not active.
EGL_PLATFORM_ANGLE_D3D11ON12_ANGLE requires a device type of EGL_PLATFORM_ANGLE_DEVICE_TYPE_HARDWARE_ANGLE or EGL_PLATFORM_ANGLE_DEVICE_TYPE_D3D_WARP_ANGLE
EGL_PLATFORM_ANGLE_D3D11ON12_ANGLE requires a platform type of EGL_PLATFORM_ANGLE_TYPE_D3D11_ANGLE.
EGL_PLATFORM_ANGLE_D3D_LUID_HIGH_ANGLE and EGL_PLATFORM_ANGLE_D3D_LUID_LOW_ANGLE require a platform type of EGL_PLATFORM_ANGLE_TYPE_D3D11_ANGLE.
EGL_PLATFORM_ANGLE_DEBUG_LAYERS_ENABLED_ANGLE must be EGL_TRUE, EGL_FALSE, or EGL_DONT_CARE.
EGL_PLATFORM_ANGLE_DEVICE_TYPE_WARP_ANGLE requires a device type of EGL_PLATFORM_ANGLE_TYPE_D3D11_ANGLE.
EGL_PLATFORM_ANGLE_EGL_HANDLE_ANGLE requires a device type of EGL_PLATFORM_ANGLE_TYPE_OPENGLES_ANGLE.
EGL_PLATFORM_ANGLE_ENABLE_AUTOMATIC_TRIM_ANGLE requires a device type of EGL_PLATFORM_ANGLE_TYPE_D3D11_ANGLE.
EGL_PLATFORM_ANGLE_TYPE_VULKAN_ANGLE currently only supports Vulkan 1.0.
EGL_POST_SUB_BUFFER_SUPPORTED_NV cannot be used without EGL_ANGLE_surface_orientation support.
EGL_POWER_PREFERENCE_ANGLE must be either EGL_LOW_POWER_ANGLE or EGL_HIGH_POWER_ANGLE.
EGL_PROTECTED_CONTENT_EXT attribute does not match protected state of target.
EGL_PROTECTED_CONTENT_EXT must be either EGL_TRUE or EGL_FALSE.
EGL_PostSubBufferNV
EGL_PrepareSwapBuffersANGLE
EGL_PresentationTimeANDROID
EGL_ProgramCacheGetAttribANGLE
EGL_ProgramCachePopulateANGLE
EGL_ProgramCacheQueryANGLE
EGL_ProgramCacheResizeANGLE
EGL_QueryAPI
EGL_QueryContext
EGL_QueryDebugKHR
EGL_QueryDeviceAttribEXT
EGL_QueryDeviceStringEXT
EGL_QueryDisplayAttribANGLE
EGL_QueryDisplayAttribEXT
EGL_QueryDmaBufFormatsEXT
EGL_QueryDmaBufModifiersEXT
EGL_QueryStreamKHR
EGL_QueryStreamu64KHR
EGL_QueryString
EGL_QueryStringiANGLE
EGL_QuerySurface
EGL_QuerySurface64KHR
EGL_QuerySurfacePointerANGLE
EGL_RECORDABLE_ANDROID invalid attribute: 0x%X
EGL_RENDER_BUFFER must be EGL_BACK_BUFFER or EGL_SINGLE_BUFFER.
EGL_RENDER_BUFFER requires the surface type bit EGL_MUTABLE_RENDER_BUFFER_BIT_KHR.
EGL_ROBUST_RESOURCE_INITIALIZATION_ANGLE cannot be used without EGL_ANGLE_robust_resource_initialization support.
EGL_ROBUST_RESOURCE_INITIALIZATION_ANGLE must be either EGL_TRUE or EGL_FALSE.
EGL_ReacquireHighPowerGPUANGLE
EGL_ReleaseDeviceANGLE
EGL_ReleaseExternalContextANGLE
EGL_ReleaseHighPowerGPUANGLE
EGL_ReleaseTexImage
EGL_ReleaseThread
EGL_SURFACE_ORIENTATION_ANGLE cannot be queried without EGL_ANGLE_surface_orientation support.
EGL_SWAP_INTERVAL_ANGLE must be within the EGLConfig min and max swap intervals.
EGL_SYNC_CONDITION_KHR is not valid for this sync type.
EGL_SYNC_FENCE_KHR cannot be used without GL_OES_EGL_sync support.
EGL_SYNC_METAL_SHARED_EVENT_ANGLE can't be NULL
EGL_SYNC_NATIVE_FENCE_ANDROID cannot be used without GL_OES_EGL_sync support.
EGL_SetBlobCacheFuncsANDROID
EGL_SetDamageRegionKHR
EGL_SetValidationEnabledANGLE
EGL_SignalSyncKHR
EGL_StreamAttribKHR
EGL_StreamConsumerAcquireKHR
EGL_StreamConsumerGLTextureExternalAttribsNV
EGL_StreamConsumerGLTextureExternalKHR
EGL_StreamConsumerReleaseKHR
EGL_StreamPostD3DTextureANGLE
EGL_SurfaceAttrib
EGL_SwapBuffers
EGL_SwapBuffersWithDamageKHR
EGL_SwapBuffersWithFrameTokenANGLE
EGL_SwapInterval
EGL_TEXTURE_INTERNAL_FORMAT_ANGLE cannot be used without EGL_ANGLE_image_d3d11_texture, EGL_ANGLE_vulkan_image, or EGL_ANGLE_metal_texture_client_buffer support.
EGL_TIMESTAMPS_ANDROID cannot be used without EGL_ANDROID_get_frame_timestamps support.
EGL_Terminate
EGL_UnlockSurfaceKHR
EGL_VULKAN_IMAGE_CREATE_INFO_HI_ANGLE and EGL_VULKAN_IMAGE_CREATE_INFO_LO_ANGLE are not pointing to a valid VkImageCreateInfo structure.
EGL_WIDTH or EGL_HEIGHT cannot be set without EGL_ANGLE_window_fixed_size support.
EGL_WIDTH or EGL_HEIGHT cannot be set without EGL_FIXED_SIZE_ANGLE being enabled on the surface.
EGL_WaitClient
EGL_WaitGL
EGL_WaitNative
EGL_WaitSync
EGL_WaitSyncKHR
EGL_WaitUntilWorkScheduledANGLE
EGL_bind_to_texture invalid attribute: 0x%X
EGL_color_buffer_type invalid attribute: 0x%X
EGL_native_renderable invalid attribute: 0x%X
EGL_transparent_type invalid attribute: 0x%X
EOF while in a comment
EPh4
ERROR
EVENT
EXT/OES_draw_buffers_indexed is not available.
EXT/OES_draw_buffers_indexed or ES 3.1 are required but not available.
EXT_gl_colorspace_bt2020_hlg is not available
EXT_gl_colorspace_bt2020_linear is not available
EXT_gl_colorspace_bt2020_pq is not available
EXT_gl_colorspace_display_p3 is not available.
EXT_gl_colorspace_display_p3_linear is not available.
EXT_gl_colorspace_scrgb is not available.
EXT_gl_colorspace_scrgb_linear is not available.
Each cubemap face must have equal width and height.
EeS=I
Element value exceeds element range.
Element value exceeds maximum element index.
Embedded struct definitions are not allowed
EmitVertex
EmitVertex(
Emulate 180-degree prerotation.
Emulate 270-degree prerotation.
Emulate 90-degree prerotation.
Emulate ANGLE_shader_pixel_local_storage using shader images
Emulate GL_KHR_blend_equation_advanced
Emulate OpenGL dithering
Emulate RGB10 support using RGB10_A2.
Emulate r32f images with r32ui to support imageAtomicExchange.
Emulate transform feedback as the VK_EXT_transform_feedback is not present.
Enable ASTC on desktop OpenGL
Enable Android pre-rotation for landscape applications
Enable Bresenham line rasterization via VK_EXT_line_rasterization extension
Enable ETC2/EAC on desktop OpenGL
Enable MSRTSS for each image initialization if available
Enable SPIR-V dumping at runtime for OpenCL programs compiled with clspv
Enable VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT by default for ICDs that support VK_KHR_image_format_list
Enable compressing pipeline cache in a thread.
Enable merge for client attrib buffer if possible
Enable non-semantic info inside shader module via VK_KHR_shader_non_semantic_info extension
Enable precision qualifiers in shaders
Enable provoking vertex mode via VK_EXT_provoking_vertex extension
Enable to cache compiled shaders
Enable uploading the previously defined mutable mipmap texture.
Enable use of VK_KHR_portability_enumeration extension
Enabling validation to prevent invalid calls from being captured. This effectively disables GL_KHR_no_error and enables GL_ANGLE_robust_client_memory.
EndPrimitive
EndPrimitive(
Enum 0x%04X is currently not supported.
Enum requires GLES 3.0
Enum requires GLES 3.1
Epf3B
Error compressing binary data.
Error compressing shader binary data for insertion into cache.
Error decompressing program binary data fetched from cache.
Error decompressing shader binary data from cache.
Error during layout qualifier parsing.
Error getting CWD for Vulkan layers init.
Error marshalling request for %s.%s: %s\n
Error releasing tex image from texture
Error sending request for %s.%s: %s\n
Error setting CWD for Vulkan layers init.
Error setting environment for Mock/Null Driver.
Error setting environment for SwiftShader.
Error setting environment for Vulkan layers init.
Error while merging to Renderer's pipeline cache
Error: 
Even if FrameCapture is enabled, enable GL_OES_get_program_binary
Every binding point used in transform feedback mode must have a buffer object bound.
Ew49
Exceeded maximum uniform location size
Except for images with the r32f, r32i and r32ui format qualifiers, image variables must be qualified readonly and/or writeonly
Expected CRC = 
Expected a program name, but found a shader name.
Expected a shader name, but found a program name.
Expected invariant or precise
Expected loop index
Expected uncompressed size = 
Explicitly cast mediump floating point values to 16 bit
Explicitly enable per-sample shading if the fragment shader contains the sample qualifier
Expose EXT_multisampled_render_to_texture
Expose GLES versions and extensions that are not conformant.
Expose the GL_KHR_parallel_shader_compile extension
Expression too complex.
Extension is not disablable.
Extension is not enabled.
Extension is not requestable.
Extension not supported
Extension not supported: 
ExtensionFound("VK_EXT_blend_operation_advanced", deviceExtensionNames)
ExtensionFound("VK_EXT_external_memory_dma_buf", deviceExtensionNames) && ExtensionFound("VK_EXT_image_drm_format_modifier", deviceExtensionNames)
ExtensionFound("VK_EXT_load_store_op_none", deviceExtensionNames)
ExtensionFound("VK_EXT_memory_budget", deviceExtensionNames)
ExtensionFound("VK_EXT_pipeline_creation_feedback", deviceExtensionNames)
ExtensionFound("VK_EXT_shader_stencil_export", deviceExtensionNames) && !isSwiftShader
ExtensionFound("VK_EXT_swapchain_colorspace", mEnabledInstanceExtensions)
ExtensionFound("VK_FUCHSIA_external_memory", deviceExtensionNames)
ExtensionFound("VK_FUCHSIA_external_semaphore", deviceExtensionNames)
ExtensionFound("VK_GOOGLE_surfaceless_query", instanceExtensionNames) && useVulkanSwapchain == UseVulkanSwapchain::Yes && !isMockICDEnabled() && !IsXclipse()
ExtensionFound("VK_KHR_create_renderpass2", deviceExtensionNames)
ExtensionFound("VK_KHR_external_fence_fd", deviceExtensionNames)
ExtensionFound("VK_KHR_external_memory_fd", deviceExtensionNames)
ExtensionFound("VK_KHR_external_semaphore_fd", deviceExtensionNames)
ExtensionFound("VK_KHR_format_feature_flags2", deviceExtensionNames)
ExtensionFound("VK_KHR_get_surface_capabilities2", instanceExtensionNames) && useVulkanSwapchain == UseVulkanSwapchain::Yes
ExtensionFound("VK_KHR_image_format_list", deviceExtensionNames)
ExtensionFound("VK_KHR_incremental_present", deviceExtensionNames)
ExtensionFound("VK_KHR_portability_enumeration", instanceExtensionNames)
ExtensionFound("VK_KHR_sampler_mirror_clamp_to_edge", deviceExtensionNames)
ExtensionFound("VK_KHR_shared_presentable_image", deviceExtensionNames)
ExtensionFound("VK_KHR_surface_protected_capabilities", instanceExtensionNames) && useVulkanSwapchain == UseVulkanSwapchain::Yes
External texture attached to framebuffer is not YUV.
External texture extension not enabled
ExternalPreInitialized
ExternalShadersReadOnly
ExternalShadersWrite
Ey%y*G
F!QxP
F#tM!
F&F(F*F
F3vZ^
FAIL
FATAL
FD%d
FGE{
FRAGMENT
FREE
FXftC
FXuM
F\3q6
FaCp
Failed to allocate enough memory to serialize a program. (%zu bytes)
Failed to allocate enough memory to serialize a shader. (%zu bytes)
Failed to allocate host memory
Failed to allocate memory for binary blob
Failed to allocate memory for compression
Failed to allocate memory for decompression
Failed to allocate memory for pipeline cache data.
Failed to bind API in system egl
Failed to compile internal blit shader.
Failed to compress cache data: 
Failed to copy program binary into the cache.
Failed to create a native GLX pbuffer.
Failed to create a native GLX pixmap.
Failed to create a shared renderer: 
Failed to create the Colormap for the child window.
Failed to decompress data: 
Failed to find a usable config. Last error: 
Failed to get pipeline cache chunk 
Failed to get system egl display
Failed to get the XVisualInfo for the child window.
Failed to get the parent window's dimensions.
Failed to initialize display because device creation failed: 
Failed to link internal blit program.
Failed to load program binary from cache.
Failed to load shader binary from cache.
Failed to make the GLX context current
Failed to open "
Failed to query extensions in system egl
Failed to retrieve the size of the parent window.
Failed to retrieve wayland display
Failed to save compiled shader to memory shader cache.
Failed to save linked program to memory program cache.
Failed to unmap the client data streaming buffer.
Failure to decompressed internal shader: 
Feature: 
Feedback loop formed between Framebuffer and active Texture.
Fence must be set.
Fence reset failed: 
Field location
Field name
Field number
Field structure name
Fill new allocations with non-zero values to flush out errors.
First Swap Image Use
Fix spec difference between GLSL 4.1 or lower and ESSL3
Fj#9
Float overflow
Floating-point suffix unsupported prior to GLSL ES 3.00
Flushed range does not fit into buffer mapping dimensions.
FontImage
For Vulkan ICDs that support VK_EXT_graphics_pipeline_library the shaders subset of the pipelinecan either be combined into a single pipeline or can be decoupled into separate pipelines. This featureis enabled when the former is the case.
For loops used to initialize variables hit native GLSL compiler bugs
Force GL error checking (i.e. prevent applications from disabling error checking
Force a fallback format for angle_end2end_tests
Force depth attachment initialization on clear ops
Force enable VK_IMAGE_USAGE_SAMPLED_BIT usage for all AHB images
Force max uniform buffer size to 16K on some device due to bug
Force nearest filtering when sampling.
Force nearest mip filtering when sampling.
Force submit updates to immutable textures
Force the minimum GL_MAX_VERTEX_ATTRIBS that the context's client version allows.
Force to create vulkan swapchain with continuous refresh on shared present
Force unbind framebufferTexture2D before binding renderbuffer to work around driver bug.
Force wait for submission to complete before calling getQueryResult(wait).
Force-enable robust resource init
Force-enable shader variable initialization
Forces highp precision in fragment shader to mediump.
Format cannot be GL_DEPTH_COMPONENT or GL_DEPTH_STENCIL if target is GL_TEXTURE_3D
Format must match internal format.
Format qualifier
Found EOpAssign node inside declaration <validateOps>
Found EOpInitialize node outside declaration <validateOps>
Found binary node with non-binary op <validateOps>
Found block field with undefined precision <validatePrecision>
Found branch node with non-branch op <validateOps>
Found child with two parents
Found dead code after branch
Found direct index node with a non-constant index
Found function parameter with undefined precision <validatePrecision>
Found function prototype with an invalid qualifier <validateQualifiers>
Found function prototype with an invalid qualifier on opaque parameter <validateQualifiers>
Found function with undefined precision on return value <validatePrecision>
Found inconsistent references to built-in variable <validateVariableReferences>
Found index node with type that is inconsistent with the array being indexed <validateExpressionTypes>
Found multiple declarations where SeparateDeclarations should have separated them <validateMultiDeclarations>
Found node calling a raw function (deprecated) <validateNoRawFunctionCalls>
Found node calling built-in with a reference to a different function <validateBuiltInOps>
Found node calling built-in without a reference to the built-in function <validateBuiltInOps>
Found node calling function without a reference to it
Found node calling previously undeclared function <validateFunctionCall>
Found nullptr child
Found redeclaration of struct or interface block with the same name in the same scope <validateStructUsage>
Found reference to inconsistenly transformed nameless interface block field <validateVariableReferences>
Found reference to struct or interface block with doubly created type <validateStructUsage>
Found reference to struct or interface block with no declaration <validateStructUsage>
Found reference to undeclared or inconsistenly transformed nameless interface block <validateVariableReferences>
Found reference to undeclared or inconsistently transformed variable <validateVariableReferences>
Found switch selector expression that is not integer
Found switch selector expression that is not scalar
Found swizzle applied to swizzle
Found symbol with undefined precision <validatePrecision>
Found two declarations of the same function argument <validateVariableReferences>
Found two declarations of the same variable <validateVariableReferences>
Found unary node with non-unary op <validateOps>
FpL"
Fpvo
FrWvk
Fragment
Fragment output color index must be zero or one.
Fragment shader output type does not match the bound framebuffer attachment type.
FragmentShaderReadOnly
FragmentShaderWrite
FragmentShadingRateAttachmentReadOnly
FrameCapture is enabled
FrameCapture limits were forced
Framebuffer cannot have images attached to color attachment points on or after COLOR_ATTACHMENT0 + MAX_COLOR_ATTACHMENTS_WITH_ACTIVE_PIXEL_LOCAL_STORAGE_ANGLE.
Framebuffer cannot have images attached to color attachment points on or after COLOR_ATTACHMENT0 + MAX_COMBINED_DRAW_BUFFERS_AND_PIXEL_LOCAL_STORAGE_PLANES_ANGLE - <n>.
Framebuffer is incomplete: All attachments must be unique.
Framebuffer is incomplete: All textures must have fixed samples if paired with multisample renderbuffers.
Framebuffer is incomplete: Attachment depth is greater than MAX_FRAMEBUFFER_LAYERS.
Framebuffer is incomplete: Attachment has zero size.
Framebuffer is incomplete: Attachment is an incomplete cube map.
Framebuffer is incomplete: Attachment is not renderable.
Framebuffer is incomplete: Attachment layer is greater than texture layer count.
Framebuffer is incomplete: Attachment level is not in the [base level, max level] range.
Framebuffer is incomplete: Attachment level not equal to the base level and the texture is not mipmap complete.
Framebuffer is incomplete: Attachment samples are greater than the maximum supported samples for this format.
Framebuffer is incomplete: Attachments are not all the same size.
Framebuffer is incomplete: Attachments have different sample counts.
Framebuffer is incomplete: Attachments have inconsistent bit plane counts.
Framebuffer is incomplete: Attachments have inconsistent fixed sample locations.
Framebuffer is incomplete: Attachments have inconsistent multiview base view.
Framebuffer is incomplete: Attachments have inconsistent multiview enabled state.
Framebuffer is incomplete: Attachments have inconsistent multiview view counts.
Framebuffer is incomplete: Depth and stencil attachments are not the same.
Framebuffer is incomplete: Depth attachment has no depth bits.
Framebuffer is incomplete: Depth stencil attachment has no depth bits or no stencil bits.
Framebuffer is incomplete: Depth stencil sample count must be divisible by the color sample count.
Framebuffer is incomplete: Depth stencil texture in color attachment.
Framebuffer is incomplete: Driver does not support this framebuffer configuration.
Framebuffer is incomplete: Framebuffer is surfaceless.
Framebuffer is incomplete: If an attachments are layered, they must all be the same texture type.
Framebuffer is incomplete: If one attachment is layered, all must be layered.
Framebuffer is incomplete: Internal error.
Framebuffer is incomplete: Invalid framebuffer configuration for foveated rendering.
Framebuffer is incomplete: No attachments and default size is zero.
Framebuffer is incomplete: Separate depth and stencil buffers are unsupported.
Framebuffer is incomplete: Stencil attachment has depth bits.
Framebuffer is incomplete: Stencil attachment has no stencil bits.
Framebuffer is incomplete: WebGL depth stencil state is inconsistent.
Framebuffer layer cannot be less than 0 or greater than GL_MAX_FRAMEBUFFER_LAYERS_EXT.
FramebufferVk::clear
FramebufferVk::readPixelsImpl
Frontend features
Frontend workarounds
Fs&b
Function Definition:\n
Function Prototype
Function call discards the 'coherent' qualifier from image
Function call discards the 'readonly' qualifier from image
Function call discards the 'volatile' qualifier from image
Function call discards the 'writeonly' qualifier from image
Function has too many parameters.
Function parameter type cannot be a structure definition
FzO+
G.ro
G5yg&\5
G:lRN
GCC: (SteamRT 10.3.0-3+steamrt3.1+bsrt3c.1) 10.3.0
GCC_3.0
GEOMETRY
GL call 
GL framebuffer returned incomplete: 
GL<hc
GLES1-only function.
GLES1Renderer program link failed.
GLES1Renderer shader compile failed.
GLIBC_2.12
GLIBC_2.14
GLIBC_2.16
GLIBC_2.17
GLIBC_2.2.5
GLIBC_2.27
GLIBC_2.28
GLIBC_2.29
GLIBC_2.3
GLIBC_2.3.2
GLIBC_2.3.3
GLIBC_2.3.4
GLIBC_2.30
GLIBC_2.4
GLIBC_2.7
GLInternalFormatToNativePixelFormat
GLSL.std.450
GLX is not present.
GLX_ARB_create_context
GLX_ARB_create_context_profile
GLX_ARB_create_context_robustness
GLX_ARB_multisample
GLX_EXT_create_context_es2_profile
GLX_EXT_swap_control
GLX_EXT_texture_from_pixmap
GLX_MESA_swap_control
GLX_NV_robustness_video_memory_purge
GLX_OML_sync_control
GLX_SGI_swap_control
GL_AMD_performance_monitor
GL_ANDROID_exten
GL_ANDROID_extension_pack_es31a
GL_ANGLE_base_vertex_base_instance
GL_ANGLE_base_vertex_base_instance_shader_builtin
GL_ANGLE_client_arrays
GL_ANGLE_clip_cull_distance
GL_ANGLE_compressed_texture_etc
GL_ANGLE_copy_texture_3d
GL_ANGLE_copy_texture_3d extension not available.
GL_ANGLE_depth_texture
GL_ANGLE_framebuffer_blit
GL_ANGLE_framebuffer_multisample
GL_ANGLE_get_image
GL_ANGLE_get_image extension not enabled.
GL_ANGLE_get_serialized_context_string
GL_ANGLE_get_tex_level_parameter
GL_ANGLE_instanced_arrays
GL_ANGLE_logic_op
GL_ANGLE_lossy_etc_decode
GL_ANGLE_memory_object_flags
GL_ANGLE_memory_object_fuchsia
GL_ANGLE_memory_size
GL_ANGLE_multi_draw
GL_ANGLE_multiview_multisample
GL_ANGLE_pack_reverse_row_order
GL_ANGLE_polygon_mode
GL_ANGLE_program_binary
GL_ANGLE_program_binary_readiness_query
GL_ANGLE_provoking_vertex
GL_ANGLE_read_only_depth_stencil_feedback_loops
GL_ANGLE_relaxed_vertex_attribute_type
GL_ANGLE_renderability_validation
GL_ANGLE_request_extension
GL_ANGLE_rgbx_internal_format
GL_ANGLE_robust_client_memory
GL_ANGLE_robust_fragment_shader_output
GL_ANGLE_semaphore_fuchsia
GL_ANGLE_shader_binary
GL_ANGLE_shader_pixel_local_storage
GL_ANGLE_shader_pixel_local_storage not enabled.
GL_ANGLE_shader_pixel_local_storage_coherent
GL_ANGLE_stencil_texturing
GL_ANGLE_texture_compression_dxt3
GL_ANGLE_texture_compression_dxt5
GL_ANGLE_texture_external_update
GL_ANGLE_texture_multisample
GL_ANGLE_texture_multisample or GLES 3.1 required.
GL_ANGLE_texture_multisample, GL_ANGLE_get_tex_level_parameter or GLES 3.1 required.
GL_ANGLE_texture_multisample_array not enabled.
GL_ANGLE_texture_usage
GL_ANGLE_translated_shader_source
GL_ANGLE_webgl_compatibility
GL_ANGLE_yuv_internal_format
GL_APPLE_clip_distance
GL_ARB_ES2_compatibility
GL_ARB_ES3_1_compatibility
GL_ARB_ES3_2_compatibility
GL_ARB_ES3_compatibility
GL_ARB_base_instance
GL_ARB_blend_func_extended
GL_ARB_buffer_storage
GL_ARB_clear_buffer_object
GL_ARB_clear_texture
GL_ARB_clip_control
GL_ARB_compute_shader
GL_ARB_conservative_depth
GL_ARB_copy_buffer
GL_ARB_copy_image
GL_ARB_cull_distance
GL_ARB_debug_output
GL_ARB_depth_buffer_float
GL_ARB_depth_clamp
GL_ARB_depth_texture
GL_ARB_direct_state_access
GL_ARB_draw_buffers
GL_ARB_draw_buffers_blend
GL_ARB_draw_elements_base_vertex
GL_ARB_draw_indirect
GL_ARB_draw_instanced
GL_ARB_explicit_attrib_location
GL_ARB_explicit_uniform_location
GL_ARB_fragment_program
GL_ARB_fragment_shader
GL_ARB_fragment_shader_interlock
GL_ARB_framebuffer_no_attachments
GL_ARB_framebuffer_object
GL_ARB_framebuffer_sRGB
GL_ARB_geometry_shader4
GL_ARB_get_program_binary
GL_ARB_get_texture_sub_image
GL_ARB_gpu_shader5
GL_ARB_gpu_shader_fp64
GL_ARB_imaging
GL_ARB_instanced_arrays
GL_ARB_internalformat_query
GL_ARB_internalformat_query2
GL_ARB_invalidate_subdata
GL_ARB_map_buffer_range
GL_ARB_multi_bind
GL_ARB_multi_draw_indirect
GL_ARB_multisample
GL_ARB_multitexture
GL_ARB_occlusion_query
GL_ARB_occlusion_query2
GL_ARB_parallel_shader_compile
GL_ARB_pixel_buffer_object
GL_ARB_point_parameters
GL_ARB_program_interface_query
GL_ARB_provoking_vertex
GL_ARB_robust_buffer_access_behavior
GL_ARB_robustness
GL_ARB_sample_shading
GL_ARB_sampler_objects
GL_ARB_separate_shader_objects
GL_ARB_shader_atomic_counters
GL_ARB_shader_bit_encoding
GL_ARB_shader_image_load_store
GL_ARB_shader_objects
GL_ARB_shader_storage_buffer_object
GL_ARB_shader_subroutine
GL_ARB_shader_texture_lod
GL_ARB_shader_viewport_layer_array
GL_ARB_shading_language_packing
GL_ARB_stencil_texturing
GL_ARB_sync
GL_ARB_tessellation_shader
GL_ARB_texture_barrier
GL_ARB_texture_buffer_object
GL_ARB_texture_buffer_range
GL_ARB_texture_compression
GL_ARB_texture_compression_bptc
GL_ARB_texture_compression_rgtc
GL_ARB_texture_cube_map_array
GL_ARB_texture_gather
GL_ARB_texture_mirror_clamp_to_edge
GL_ARB_texture_multisample
GL_ARB_texture_rectangle
GL_ARB_texture_rg
GL_ARB_texture_rg ARB_texture_float
GL_ARB_texture_rg GL_ARB_texture_float
GL_ARB_texture_rg GL_ARB_texture_float GL_ARB_color_buffer_float
GL_ARB_texture_rgb10_a2ui
GL_ARB_texture_stencil8
GL_ARB_texture_storage
GL_ARB_texture_storage_multisample
GL_ARB_texture_swizzle
GL_ARB_texture_view
GL_ARB_timer_query
GL_ARB_transform_feedback2
GL_ARB_transform_feedback3
GL_ARB_transform_feedback_instanced
GL_ARB_uniform_buffer_object
GL_ARB_vertex_array_object
GL_ARB_vertex_attrib_64bit
GL_ARB_vertex_attrib_binding
GL_ARB_vertex_buffer_object
GL_ARB_vertex_program
GL_ARB_vertex_shader
GL_ARB_vertex_type_2_10_10_10_rev
GL_ARB_viewport_array
GL_ARM_shader_framebuffer_fetch
GL_ATI_texture_mirror_once
GL_AcquireTexturesANGLE
GL_ActiveShaderProgram
GL_ActiveShaderProgramEXT
GL_ActiveTexture
GL_AlphaFunc
GL_AlphaFuncx
GL_AttachShader
GL_BLEND with floating-point color attachments requires the EXT_float_blend extension.
GL_BUFFER_MAP_POINTER can only be queried with GetBufferPointerv.
GL_BeginPerfMonitorAMD
GL_BeginPixelLocalStorageANGLE
GL_BeginQuery
GL_BeginQueryEXT
GL_BeginTransformFeedback
GL_BindAttribLocation
GL_BindBuffer
GL_BindBufferBase
GL_BindBufferRange
GL_BindFragDataLocationEXT
GL_BindFragDataLocationIndexedEXT
GL_BindFramebuffer
GL_BindFramebufferOES
GL_BindImageTexture
GL_BindProgramPipeline
GL_BindProgramPipelineEXT
GL_BindRenderbuffer
GL_BindRenderbufferOES
GL_BindSampler
GL_BindTexture
GL_BindTransformFeedback
GL_BindUniformLocationCHROMIUM
GL_BindVertexArray
GL_BindVertexArrayOES
GL_BindVertexBuffer
GL_BlendBarrier
GL_BlendBarrierKHR
GL_BlendColor
GL_BlendEquation
GL_BlendEquationSeparate
GL_BlendEquationSeparatei
GL_BlendEquationSeparateiEXT
GL_BlendEquationSeparateiOES
GL_BlendEquationi
GL_BlendEquationiEXT
GL_BlendEquationiOES
GL_BlendFunc
GL_BlendFuncSeparate
GL_BlendFuncSeparatei
GL_BlendFuncSeparateiEXT
GL_BlendFuncSeparateiOES
GL_BlendFunci
GL_BlendFunciEXT
GL_BlendFunciOES
GL_BlitFramebuffer
GL_BlitFramebufferANGLE
GL_BlitFramebufferNV
GL_BufferData
GL_BufferStorageEXT
GL_BufferStorageExternalEXT
GL_BufferStorageMemEXT
GL_BufferSubData
GL_CHROMIUM_bind_generates_resource
GL_CHROMIUM_bind_uniform_location
GL_CHROMIUM_color_buffer_float_rgb
GL_CHROMIUM_color_buffer_float_rgba
GL_CHROMIUM_copy_compressed_texture
GL_CHROMIUM_copy_texture
GL_CHROMIUM_framebuffer_mixed_samples
GL_CHROMIUM_lose_context
GL_CHROMIUM_sync_query
GL_COMPUTE_SHADER
GL_CheckFramebufferStatus
GL_CheckFramebufferStatusOES
GL_Clear
GL_ClearBufferfi
GL_ClearBufferfv
GL_ClearBufferiv
GL_ClearBufferuiv
GL_ClearColor
GL_ClearColorx
GL_ClearDepthf
GL_ClearDepthx
GL_ClearStencil
GL_ClientActiveTexture
GL_ClientWaitSync
GL_ClipControlEXT
GL_ClipPlanef
GL_ClipPlanex
GL_Color4f
GL_Color4ub
GL_Color4x
GL_ColorMask
GL_ColorMaski
GL_ColorMaskiEXT
GL_ColorMaskiOES
GL_ColorPointer
GL_CompileShader
GL_CompressedCopyTextureCHROMIUM
GL_CompressedTexImage2D
GL_CompressedTexImage2DRobustANGLE
GL_CompressedTexImage3D
GL_CompressedTexImage3DOES
GL_CompressedTexImage3DRobustANGLE
GL_CompressedTexSubImage2D
GL_CompressedTexSubImage2DRobustANGLE
GL_CompressedTexSubImage3D
GL_CompressedTexSubImage3DOES
GL_CompressedTexSubImage3DRobustANGLE
GL_CopyBufferSubData
GL_CopyImageSubData
GL_CopyImageSubDataEXT
GL_CopyImageSubDataOES
GL_CopySubTexture3DANGLE
GL_CopySubTextureCHROMIUM
GL_CopyTexImage2D
GL_CopyTexSubImage2D
GL_CopyTexSubImage3D
GL_CopyTexSubImage3DOES
GL_CopyTexture3DANGLE
GL_CopyTextureCHROMIUM
GL_CoverageModulationCHROMIUM
GL_CreateMemoryObjectsEXT
GL_CreateProgram
GL_CreateShader
GL_CreateShaderProgramv
GL_CreateShaderProgramvEXT
GL_CullFace
GL_CurrentPaletteMatrixOES
GL_DebugMessageCallback
GL_DebugMessageCallbackKHR
GL_DebugMessageControl
GL_DebugMessageControlKHR
GL_DebugMessageInsert
GL_DebugMessageInsertKHR
GL_DeleteBuffers
GL_DeleteFencesNV
GL_DeleteFramebuffers
GL_DeleteFramebuffersOES
GL_DeleteMemoryObjectsEXT
GL_DeletePerfMonitorsAMD
GL_DeleteProgram
GL_DeleteProgramPipelines
GL_DeleteProgramPipelinesEXT
GL_DeleteQueries
GL_DeleteQueriesEXT
GL_DeleteRenderbuffers
GL_DeleteRenderbuffersOES
GL_DeleteSamplers
GL_DeleteSemaphoresEXT
GL_DeleteShader
GL_DeleteSync
GL_DeleteTextures
GL_DeleteTransformFeedbacks
GL_DeleteVertexArrays
GL_DeleteVertexArraysOES
GL_DepthFunc
GL_DepthMask
GL_DepthRangef
GL_DepthRangex
GL_DetachShader
GL_Disable
GL_DisableClientState
GL_DisableExtensionANGLE
GL_DisableVertexAttribArray
GL_Disablei
GL_DisableiEXT
GL_DisableiOES
GL_DiscardFramebufferEXT
GL_DispatchCompute
GL_DispatchComputeIndirect
GL_DrawArrays
GL_DrawArraysIndirect
GL_DrawArraysInstanced
GL_DrawArraysInstancedANGLE
GL_DrawArraysInstancedBaseInstanceANGLE
GL_DrawArraysInstancedBaseInstanceEXT
GL_DrawArraysInstancedEXT
GL_DrawBuffers
GL_DrawBuffersEXT
GL_DrawElements
GL_DrawElementsBaseVertex
GL_DrawElementsBaseVertexEXT
GL_DrawElementsBaseVertexOES
GL_DrawElementsIndirect
GL_DrawElementsInstanced
GL_DrawElementsInstancedANGLE
GL_DrawElementsInstancedBaseInstanceEXT
GL_DrawElementsInstancedBaseVertex
GL_DrawElementsInstancedBaseVertexBaseInstanceANGLE
GL_DrawElementsInstancedBaseVertexBaseInstanceEXT
GL_DrawElementsInstancedBaseVertexEXT
GL_DrawElementsInstancedBaseVertexOES
GL_DrawElementsInstancedEXT
GL_DrawRangeElements
GL_DrawRangeElementsBaseVertex
GL_DrawRangeElementsBaseVertexEXT
GL_DrawRangeElementsBaseVertexOES
GL_DrawTexfOES
GL_DrawTexfvOES
GL_DrawTexiOES
GL_DrawTexivOES
GL_DrawTexsOES
GL_DrawTexsvOES
GL_DrawTexxOES
GL_DrawTexxvOES
GL_EGLImageTargetRenderbufferStorageOES
GL_EGLImageTargetTexStorageEXT
GL_EGLImageTargetTexture2DOES
GL_EGLImageTargetTextureStorageEXT
GL_EXT_EGL_image_array
GL_EXT_EGL_image_external_wrap_modes
GL_EXT_EGL_image_storage
GL_EXT_YUV_target
GL_EXT_YUV_target not enabled.
GL_EXT_base_instance
GL_EXT_bgra
GL_EXT_blend_color
GL_EXT_blend_equation_separate
GL_EXT_blend_func_extended
GL_EXT_blend_func_separate
GL_EXT_blend_minmax
GL_EXT_buffer_storage
GL_EXT_clear_texture
GL_EXT_clip_control
GL_EXT_clip_cull
GL_EXT_clip_cull_distance
GL_EXT_color_buffer_float
GL_EXT_compressed_ETC1_RGB8_sub_texture
GL_EXT_conservative_depth
GL_EXT_copy_image
GL_EXT_copy_texture
GL_EXT_debug_label
GL_EXT_debug_marker
GL_EXT_depth_clamp
GL_EXT_direct_state_access
GL_EXT_discard_framebuffer
GL_EXT_disjoint_timer_query
GL_EXT_draw_buffers
GL_EXT_draw_buffers2
GL_EXT_draw_buffers_indexed
GL_EXT_draw_elements_base_vertex
GL_EXT_draw_instanced
GL_EXT_draw_range_elements
GL_EXT_draw_transform_feedback
GL_EXT_external_buffer
GL_EXT_float_blend
GL_EXT_frag_depth
GL_EXT_framebuffer_blit
GL_EXT_framebuffer_multisample
GL_EXT_framebuffer_object
GL_EXT_framebuffer_sRGB
GL_EXT_geometry_sellation_shader
GL_EXT_geometry_shader
GL_EXT_geometry_shader or GL_OES_geometry_shader extension not enabled.
GL_EXT_gpu_shader4
GL_EXT_gpu_shader5
GL_EXT_instanced_arrays
GL_EXT_map_buffer_range
GL_EXT_memory_object
GL_EXT_memory_object_fd
GL_EXT_memory_object_win32
GL_EXT_multi_draw_arrays
GL_EXT_multi_draw_indirect
GL_EXT_multisample_compatibility
GL_EXT_multisampled_render_to_texture2
GL_EXT_multiview_draw_buffers
GL_EXT_occlusion_query_boolean
GL_EXT_packed_float
GL_EXT_packed_float GL_ARB_color_buffer_float
GL_EXT_pixel_buffer_object
GL_EXT_point_parameters
GL_EXT_polygon_offset
GL_EXT_polygon_offset_clamp
GL_EXT_primitive_bounding_box
GL_EXT_protected_textures
GL_EXT_protected_textures not enabled.
GL_EXT_provoking_vertex
GL_EXT_read_format_bgra
GL_EXT_robustness
GL_EXT_sRGB
GL_EXT_sRGB_write_control
GL_EXT_semaphore
GL_EXT_semaphore_fd
GL_EXT_semaphore_win32
GL_EXT_separate_shader_objects
GL_EXT_shader_framebuffer_fetch
GL_EXT_shader_framebuffer_fetch_non_coherent
GL_EXT_shader_framebuffer_fetch_non_coherent not enabled.
GL_EXT_shader_image_load_store
GL_EXT_shader_io_blocks
GL_EXT_shader_non_constant_global_initializers
GL_EXT_shader_pixel_local_storage
GL_EXT_shader_texture_lod
GL_EXT_shadow_samplers
GL_EXT_subtexture
GL_EXT_tessellatGL_ANGLE_clip_cu
GL_EXT_tessellation_shader
GL_EXT_tessellation_shader extension not enabled.
GL_EXT_texture3D
GL_EXT_texture_array
GL_EXT_texture_border_clamp
GL_EXT_texture_buffer
GL_EXT_texture_buffer_object
GL_EXT_texture_compression_astc_decode_mode
GL_EXT_texture_compression_astc_decode_mode_rgb9e5
GL_EXT_texture_compression_bptc
GL_EXT_texture_compression_dxt1
GL_EXT_texture_compression_rgtc
GL_EXT_texture_compression_s3tc
GL_EXT_texture_compression_s3tc GL_NV_sRGB_formats
GL_EXT_texture_compression_s3tc_srgb
GL_EXT_texture_cube_map_array
GL_EXT_texture_filter_anisotropic
GL_EXT_texture_filter_minmax
GL_EXT_texture_format_BGRA8888
GL_EXT_texture_format_sRGB_override
GL_EXT_texture_integer
GL_EXT_texture_lod_bias
GL_EXT_texture_mirror_clamp
GL_EXT_texture_mirror_clamp_to_edge
GL_EXT_texture_norm16
GL_EXT_texture_norm16 GL_EXT_render_snorm
GL_EXT_texture_object
GL_EXT_texture_rg GL_OES_texture_half_float GL_EXT_color_buffer_half_float
GL_EXT_texture_sRGB
GL_EXT_texture_sRGB_R8
GL_EXT_texture_sRGB_RG8
GL_EXT_texture_sRGB_decode
GL_EXT_texture_shared_exponent
GL_EXT_texture_storage
GL_EXT_texture_storage GL_OES_texture_half_float GL_EXT_color_buffer_half_float
GL_EXT_texture_storage GL_OES_texture_half_float GL_EXT_texture_rg GL_EXT_color_buffer_half_float
GL_EXT_texture_swizzle
GL_EXT_texture_type_2_10_10_10_REV
GL_EXT_texture_view
GL_EXT_timer_query
GL_EXT_transform_feedback
GL_EXT_unpack_subimage
GL_EXT_vertex_array
GL_EXT_vertex_attrib_64bit
GL_Enable
GL_EnableClientState
GL_EnableVertexAttribArray
GL_Enablei
GL_EnableiEXT
GL_EnableiOES
GL_EndPerfMonitorAMD
GL_EndPixelLocalStorageANGLE
GL_EndQuery
GL_EndQueryEXT
GL_EndTransformFeedback
GL_FIXED is not supported in WebGL.
GL_FRAGMENT_PRECISION_HIGH
GL_FRAGMENT_SHADER
GL_FenceSync
GL_Finish
GL_FinishFenceNV
GL_Flush
GL_FlushMappedBufferRange
GL_FlushMappedBufferRangeEXT
GL_Fogf
GL_Fogfv
GL_Fogx
GL_Fogxv
GL_FramebufferFetchBarrierEXT
GL_FramebufferFoveationConfigQCOM
GL_FramebufferFoveationParametersQCOM
GL_FramebufferMemorylessPixelLocalStorageANGLE
GL_FramebufferParameteri
GL_FramebufferParameteriMESA
GL_FramebufferPixelLocalClearValuefvANGLE
GL_FramebufferPixelLocalClearValueivANGLE
GL_FramebufferPixelLocalClearValueuivANGLE
GL_FramebufferPixelLocalStorageInterruptANGLE
GL_FramebufferPixelLocalStorageRestoreANGLE
GL_FramebufferRenderbuffer
GL_FramebufferRenderbufferOES
GL_FramebufferTexture
GL_FramebufferTexture2D
GL_FramebufferTexture2DMultisampleEXT
GL_FramebufferTexture2DOES
GL_FramebufferTexture3DOES
GL_FramebufferTextureEXT
GL_FramebufferTextureLayer
GL_FramebufferTextureMultiviewOVR
GL_FramebufferTextureOES
GL_FramebufferTexturePixelLocalStorageANGLE
GL_FrontFace
GL_Frustumf
GL_Frustumx
GL_GEOMETRY_SHADER_EXT
GL_GenBuffers
GL_GenFencesNV
GL_GenFramebuffers
GL_GenFramebuffersOES
GL_GenPerfMonitorsAMD
GL_GenProgramPipelines
GL_GenProgramPipelinesEXT
GL_GenQueries
GL_GenQueriesEXT
GL_GenRenderbuffers
GL_GenRenderbuffersOES
GL_GenSamplers
GL_GenSemaphoresEXT
GL_GenTextures
GL_GenTransformFeedbacks
GL_GenVertexArrays
GL_GenVertexArraysOES
GL_GenerateMipmap
GL_GenerateMipmapOES
GL_GetActiveAttrib
GL_GetActiveUniform
GL_GetActiveUniformBlockName
GL_GetActiveUniformBlockiv
GL_GetActiveUniformBlockivRobustANGLE
GL_GetActiveUniformsiv
GL_GetAttachedShaders
GL_GetAttribLocation
GL_GetBooleani_v
GL_GetBooleani_vRobustANGLE
GL_GetBooleanv
GL_GetBooleanvRobustANGLE
GL_GetBufferParameteri64v
GL_GetBufferParameteri64vRobustANGLE
GL_GetBufferParameteriv
GL_GetBufferParameterivRobustANGLE
GL_GetBufferPointerv
GL_GetBufferPointervOES
GL_GetBufferPointervRobustANGLE
GL_GetClipPlanef
GL_GetClipPlanex
GL_GetCompressedTexImageANGLE
GL_GetDebugMessageLog
GL_GetDebugMessageLogKHR
GL_GetError
GL_GetFenceivNV
GL_GetFixedv
GL_GetFloatv
GL_GetFloatvRobustANGLE
GL_GetFragDataIndexEXT
GL_GetFragDataLocation
GL_GetFramebufferAttachmentParameteriv
GL_GetFramebufferAttachmentParameterivOES
GL_GetFramebufferAttachmentParameterivRobustANGLE
GL_GetFramebufferParameteriv
GL_GetFramebufferParameterivMESA
GL_GetFramebufferParameterivRobustANGLE
GL_GetFramebufferPixelLocalStorageParameterfvANGLE
GL_GetFramebufferPixelLocalStorageParameterfvRobustANGLE
GL_GetFramebufferPixelLocalStorageParameterivANGLE
GL_GetFramebufferPixelLocalStorageParameterivRobustANGLE
GL_GetGraphicsResetStatus
GL_GetGraphicsResetStatusEXT
GL_GetInteger64i_v
GL_GetInteger64i_vRobustANGLE
GL_GetInteger64v
GL_GetInteger64vEXT
GL_GetInteger64vRobustANGLE
GL_GetIntegeri_v
GL_GetIntegeri_vRobustANGLE
GL_GetIntegerv
GL_GetIntegervRobustANGLE
GL_GetInternalformativ
GL_GetInternalformativRobustANGLE
GL_GetLightfv
GL_GetLightxv
GL_GetMaterialfv
GL_GetMaterialxv
GL_GetMemoryObjectParameterivEXT
GL_GetMultisamplefv
GL_GetMultisamplefvANGLE
GL_GetMultisamplefvRobustANGLE
GL_GetObjectLabel
GL_GetObjectLabelEXT
GL_GetObjectLabelKHR
GL_GetObjectPtrLabel
GL_GetObjectPtrLabelKHR
GL_GetPerfMonitorCounterDataAMD
GL_GetPerfMonitorCounterInfoAMD
GL_GetPerfMonitorCounterStringAMD
GL_GetPerfMonitorCountersAMD
GL_GetPerfMonitorGroupStringAMD
GL_GetPerfMonitorGroupsAMD
GL_GetPointerv
GL_GetPointervKHR
GL_GetPointervRobustANGLERobustANGLE
GL_GetProgramBinary
GL_GetProgramBinaryOES
GL_GetProgramInfoLog
GL_GetProgramInterfaceiv
GL_GetProgramInterfaceivRobustANGLE
GL_GetProgramPipelineInfoLog
GL_GetProgramPipelineInfoLogEXT
GL_GetProgramPipelineiv
GL_GetProgramPipelineivEXT
GL_GetProgramResourceIndex
GL_GetProgramResourceLocation
GL_GetProgramResourceLocationIndexEXT
GL_GetProgramResourceName
GL_GetProgramResourceiv
GL_GetProgramiv
GL_GetProgramivRobustANGLE
GL_GetQueryObjecti64vEXT
GL_GetQueryObjecti64vRobustANGLE
GL_GetQueryObjectivEXT
GL_GetQueryObjectivRobustANGLE
GL_GetQueryObjectui64vEXT
GL_GetQueryObjectui64vRobustANGLE
GL_GetQueryObjectuiv
GL_GetQueryObjectuivEXT
GL_GetQueryObjectuivRobustANGLE
GL_GetQueryiv
GL_GetQueryivEXT
GL_GetQueryivRobustANGLE
GL_GetRenderbufferImageANGLE
GL_GetRenderbufferParameteriv
GL_GetRenderbufferParameterivOES
GL_GetRenderbufferParameterivRobustANGLE
GL_GetSamplerParameterIiv
GL_GetSamplerParameterIivEXT
GL_GetSamplerParameterIivOES
GL_GetSamplerParameterIivRobustANGLE
GL_GetSamplerParameterIuiv
GL_GetSamplerParameterIuivEXT
GL_GetSamplerParameterIuivOES
GL_GetSamplerParameterIuivRobustANGLE
GL_GetSamplerParameterfv
GL_GetSamplerParameterfvRobustANGLE
GL_GetSamplerParameteriv
GL_GetSamplerParameterivRobustANGLE
GL_GetSemaphoreParameterui64vEXT
GL_GetShaderInfoLog
GL_GetShaderPrecisionFormat
GL_GetShaderSource
GL_GetShaderiv
GL_GetShaderivRobustANGLE
GL_GetString
GL_GetStringi
GL_GetSynciv
GL_GetTexEnvfv
GL_GetTexEnviv
GL_GetTexEnvxv
GL_GetTexGenfvOES
GL_GetTexGenivOES
GL_GetTexGenxvOES
GL_GetTexImageANGLE
GL_GetTexLevelParameterfv
GL_GetTexLevelParameterfvANGLE
GL_GetTexLevelParameterfvRobustANGLE
GL_GetTexLevelParameteriv
GL_GetTexLevelParameterivANGLE
GL_GetTexLevelParameterivRobustANGLE
GL_GetTexParameterIiv
GL_GetTexParameterIivEXT
GL_GetTexParameterIivOES
GL_GetTexParameterIivRobustANGLE
GL_GetTexParameterIuiv
GL_GetTexParameterIuivEXT
GL_GetTexParameterIuivOES
GL_GetTexParameterIuivRobustANGLE
GL_GetTexParameterfv
GL_GetTexParameterfvRobustANGLE
GL_GetTexParameteriv
GL_GetTexParameterivRobustANGLE
GL_GetTexParameterxv
GL_GetTransformFeedbackVarying
GL_GetTranslatedShaderSourceANGLE
GL_GetUniformBlockIndex
GL_GetUniformIndices
GL_GetUniformLocation
GL_GetUniformfv
GL_GetUniformfvRobustANGLE
GL_GetUniformiv
GL_GetUniformivRobustANGLE
GL_GetUniformuiv
GL_GetUniformuivRobustANGLE
GL_GetUnsignedBytei_vEXT
GL_GetUnsignedBytevEXT
GL_GetVertexAttribIiv
GL_GetVertexAttribIivRobustANGLE
GL_GetVertexAttribIuiv
GL_GetVertexAttribIuivRobustANGLE
GL_GetVertexAttribPointerv
GL_GetVertexAttribPointervRobustANGLE
GL_GetVertexAttribfv
GL_GetVertexAttribfvRobustANGLE
GL_GetVertexAttribiv
GL_GetVertexAttribivRobustANGLE
GL_GetnUniformfv
GL_GetnUniformfvEXT
GL_GetnUniformfvRobustANGLE
GL_GetnUniformiv
GL_GetnUniformivEXT
GL_GetnUniformivRobustANGLE
GL_GetnUniformuiv
GL_GetnUniformuivRobustANGLE
GL_Hint
GL_IMG_multisampled_render_to_texture
GL_IMG_texture_compression_pvrtc
GL_IMG_texture_compression_pvrtc GL_EXT_pvrtc_sRGB
GL_IMG_texture_compression_pvrtc2
GL_INTEL_fragment_shader_ordering
GL_INVALID_ENUM
GL_ImportMemoryFdEXT
GL_ImportMemoryZirconHandleANGLE
GL_ImportSemaphoreFdEXT
GL_ImportSemaphoreZirconHandleANGLE
GL_InsertEventMarkerEXT
GL_InvalidateFramebuffer
GL_InvalidateSubFramebuffer
GL_InvalidateTextureANGLE
GL_IsBuffer
GL_IsEnabled
GL_IsEnabledi
GL_IsEnablediEXT
GL_IsEnablediOES
GL_IsFenceNV
GL_IsFramebuffer
GL_IsFramebufferOES
GL_IsMemoryObjectEXT
GL_IsProgram
GL_IsProgramPipeline
GL_IsProgramPipelineEXT
GL_IsQuery
GL_IsQueryEXT
GL_IsRenderbuffer
GL_IsRenderbufferOES
GL_IsSampler
GL_IsSemaphoreEXT
GL_IsShader
GL_IsSync
GL_IsTexture
GL_IsTransformFeedback
GL_IsVertexArray
GL_IsVertexArrayOES
GL_KHR_blend_equation_advanced extension not enabled.
GL_KHR_no_error
GL_KHR_robust_buffer_access_behavior
GL_KHR_robustness
GL_KHR_texture_compression_astc_hdr
GL_KHR_texture_compression_astc_ldr
GL_KHR_texture_compression_astc_sliced_3d
GL_LabelObjectEXT
GL_LightModelf
GL_LightModelfv
GL_LightModelx
GL_LightModelxv
GL_Lightf
GL_Lightfv
GL_Lightx
GL_Lightxv
GL_LineWidth
GL_LineWidthx
GL_LinkProgram
GL_LoadIdentity
GL_LoadMatrixf
GL_LoadMatrixx
GL_LoadPaletteFromModelViewMatrixOES
GL_LogicOp
GL_LogicOpANGLE
GL_LoseContextCHROMIUM
GL_MAX_
GL_MESA_framebuffer_flip_y
GL_MapBufferOES
GL_MapBufferRange
GL_MapBufferRangeEXT
GL_Materialf
GL_Materialfv
GL_Materialx
GL_Materialxv
GL_MatrixIndexPointerOES
GL_MatrixMode
GL_MaxShaderCompilerThreadsKHR
GL_MemoryBarrier
GL_MemoryBarrierByRegion
GL_MemoryObjectParameterivEXT
GL_MinSampleShading
GL_MinSampleShadingOES
GL_MultMatrixf
GL_MultMatrixx
GL_MultiDrawArraysANGLE
GL_MultiDrawArraysIndirectEXT
GL_MultiDrawArraysInstancedANGLE
GL_MultiDrawArraysInstancedBaseInstanceANGLE
GL_MultiDrawElementsANGLE
GL_MultiDrawElementsBaseVertexEXT
GL_MultiDrawElementsIndirectEXT
GL_MultiDrawElementsInstancedANGLE
GL_MultiDrawElementsInstancedBaseVertexBaseInstanceANGLE
GL_MultiTexCoord4f
GL_MultiTexCoord4x
GL_NV_EGL_stream_consumer_external
GL_NV_depth_buffer_float2
GL_NV_fence
GL_NV_fence is not supported
GL_NV_fragment_shader_interlock
GL_NV_framebuffer_blit
GL_NV_framebuffer_mixed_samples
GL_NV_geometry_program4
GL_NV_internalformat_sample_query
GL_NV_pack_subimage
GL_NV_pixel_buffer_object
GL_NV_polygon_mode
GL_NV_read_depth
GL_NV_read_depth_stencil
GL_NV_read_stencil
GL_NV_shader_framebuffer_fetch
GL_NV_shader_noperspective_interpolation
GL_NV_texture_border_clamp
GL_NV_vertex_program4
GL_NV_viewport_array2
GL_NamedBufferStorageExternalEXT
GL_Normal3f
GL_Normal3x
GL_NormalPointer
GL_OES_EGL_image
GL_OES_EGL_image_external
GL_OES_EGL_image_external_essl3
GL_OES_EGL_sync
GL_OES_compressed_EAC_R11_signed_texture
GL_OES_compressed_EAC_R11_unsigned_texture
GL_OES_compressed_EAC_RG11_signed_texture
GL_OES_compressed_EAC_RG11_unsigned_texture
GL_OES_compressed_ETC1_RGB8_texture
GL_OES_compressed_ETC2_RGB8_texture
GL_OES_compressed_ETC2_RGBA8_texture
GL_OES_compressed_ETC2_punchthroughA_RGBA8_texture
GL_OES_compressed_ETC2_punchthroughA_sRGB8_alpha_texture
GL_OES_compressed_ETC2_sRGB8_alpha8_texture
GL_OES_compressed_ETC2_sRGB8_texture
GL_OES_compressed_paletted_texture
GL_OES_copy_image
GL_OES_depth24
GL_OES_depth32
GL_OES_depth_texture
GL_OES_depth_texture GL_OES_packed_depth_stencil
GL_OES_depth_texture_cube_map
GL_OES_draw_buffers_indexed
GL_OES_draw_elements_base_vertex
GL_OES_draw_texture
GL_OES_element_index_uint
GL_OES_fbo_render_mipmap
GL_OES_framebuffer_object
GL_OES_geometry_shader
GL_OES_mapbuffer
GL_OES_matrix_palette
GL_OES_point_size_array
GL_OES_point_size_array not enabled.
GL_OES_point_sprite
GL_OES_primitive_bounding_box
GL_OES_query_matrix
GL_OES_rgb8_rgba8
GL_OES_sample_shading
GL_OES_sample_variables
GL_OES_shader_image_atomic
GL_OES_shader_io_blocks
GL_OES_shader_multisample_interpolation
GL_OES_single_precision
GL_OES_standard_derivatives
GL_OES_surfaceless_context
GL_OES_tessellation_shader
GL_OES_texture_3D
GL_OES_texture_border_clamp
GL_OES_texture_buffer
GL_OES_texture_compression_astc
GL_OES_texture_cube_map
GL_OES_texture_cube_map_array
GL_OES_texture_float
GL_OES_texture_float GL_EXT_texture_rg
GL_OES_texture_float_linear
GL_OES_texture_half_float
GL_OES_texture_half_float GL_EXT_texture_rg
GL_OES_texture_half_float_linear
GL_OES_texture_npot
GL_OES_texture_stencil8
GL_OES_texture_storage_multisample_2d_array
GL_OES_texture_view
GL_OES_vertex_array_object
GL_OES_vertex_half_float
GL_OES_vertex_type_10_10_10_2
GL_OES_viewport_array
GL_OVR_multiview
GL_OVR_multiview2
GL_ObjectLabel
GL_ObjectLabelKHR
GL_ObjectPtrLabel
GL_ObjectPtrLabelKHR
GL_Orthof
GL_Orthox
GL_PACK_SKIP_ROWS and GL_PACK_SKIP_PIXELS are ignored in Apple's OpenGL driver.
GL_PatchParameteri
GL_PatchParameteriEXT
GL_PauseTransformFeedback
GL_PixelLocalStorageBarrierANGLE
GL_PixelStorei
GL_PointParameterf
GL_PointParameterfv
GL_PointParameterx
GL_PointParameterxv
GL_PointSize
GL_PointSizePointerOES
GL_PointSizex
GL_PolygonModeANGLE
GL_PolygonModeNV
GL_PolygonOffset
GL_PolygonOffsetClampEXT
GL_PolygonOffsetx
GL_PopDebugGroup
GL_PopDebugGroupKHR
GL_PopGroupMarkerEXT
GL_PopMatrix
GL_PrimitiveBoundingBox
GL_PrimitiveBoundingBoxEXT
GL_PrimitiveBoundingBoxOES
GL_ProgramBinary
GL_ProgramBinaryOES
GL_ProgramParameteri
GL_ProgramParameteriEXT
GL_ProgramUniform1f
GL_ProgramUniform1fEXT
GL_ProgramUniform1fv
GL_ProgramUniform1fvEXT
GL_ProgramUniform1i
GL_ProgramUniform1iEXT
GL_ProgramUniform1iv
GL_ProgramUniform1ivEXT
GL_ProgramUniform1ui
GL_ProgramUniform1uiEXT
GL_ProgramUniform1uiv
GL_ProgramUniform1uivEXT
GL_ProgramUniform2f
GL_ProgramUniform2fEXT
GL_ProgramUniform2fv
GL_ProgramUniform2fvEXT
GL_ProgramUniform2i
GL_ProgramUniform2iEXT
GL_ProgramUniform2iv
GL_ProgramUniform2ivEXT
GL_ProgramUniform2ui
GL_ProgramUniform2uiEXT
GL_ProgramUniform2uiv
GL_ProgramUniform2uivEXT
GL_ProgramUniform3f
GL_ProgramUniform3fEXT
GL_ProgramUniform3fv
GL_ProgramUniform3fvEXT
GL_ProgramUniform3i
GL_ProgramUniform3iEXT
GL_ProgramUniform3iv
GL_ProgramUniform3ivEXT
GL_ProgramUniform3ui
GL_ProgramUniform3uiEXT
GL_ProgramUniform3uiv
GL_ProgramUniform3uivEXT
GL_ProgramUniform4f
GL_ProgramUniform4fEXT
GL_ProgramUniform4fv
GL_ProgramUniform4fvEXT
GL_ProgramUniform4i
GL_ProgramUniform4iEXT
GL_ProgramUniform4iv
GL_ProgramUniform4ivEXT
GL_ProgramUniform4ui
GL_ProgramUniform4uiEXT
GL_ProgramUniform4uiv
GL_ProgramUniform4uivEXT
GL_ProgramUniformMatrix2fv
GL_ProgramUniformMatrix2fvEXT
GL_ProgramUniformMatrix2x3fv
GL_ProgramUniformMatrix2x3fvEXT
GL_ProgramUniformMatrix2x4fv
GL_ProgramUniformMatrix2x4fvEXT
GL_ProgramUniformMatrix3fv
GL_ProgramUniformMatrix3fvEXT
GL_ProgramUniformMatrix3x2fv
GL_ProgramUniformMatrix3x2fvEXT
GL_ProgramUniformMatrix3x4fv
GL_ProgramUniformMatrix3x4fvEXT
GL_ProgramUniformMatrix4fv
GL_ProgramUniformMatrix4fvEXT
GL_ProgramUniformMatrix4x2fv
GL_ProgramUniformMatrix4x2fvEXT
GL_ProgramUniformMatrix4x3fv
GL_ProgramUniformMatrix4x3fvEXT
GL_ProvokingVertexANGLE
GL_PushDebugGroup
GL_PushDebugGroupKHR
GL_PushGroupMarkerEXT
GL_PushMatrix
GL_QCOM_framebuffer_foveated
GL_QCOM_render_shared_exponent
GL_QCOM_shading_rate
GL_QCOM_texture_foveated
GL_QCOM_texture_foveated not enabled
GL_QueryCounterEXT
GL_QueryMatrixxOES
GL_RGBA4 is not color renderable
GL_ReadBuffer
GL_ReadPixels
GL_ReadPixelsRobustANGLE
GL_ReadnPixels
GL_ReadnPixelsEXT
GL_ReadnPixelsRobustANGLE
GL_ReleaseShaderCompiler
GL_ReleaseTexturesANGLE
GL_RenderbufferStorage
GL_RenderbufferStorageMultisample
GL_RenderbufferStorageMultisampleANGLE
GL_RenderbufferStorageMultisampleEXT
GL_RenderbufferStorageOES
GL_RequestExtensionANGLE
GL_ResumeTransformFeedback
GL_Rotatef
GL_Rotatex
GL_SampleCoverage
GL_SampleCoveragex
GL_SampleMaski
GL_SampleMaskiANGLE
GL_SamplerParameterIiv
GL_SamplerParameterIivEXT
GL_SamplerParameterIivOES
GL_SamplerParameterIivRobustANGLE
GL_SamplerParameterIuiv
GL_SamplerParameterIuivEXT
GL_SamplerParameterIuivOES
GL_SamplerParameterIuivRobustANGLE
GL_SamplerParameterf
GL_SamplerParameterfv
GL_SamplerParameterfvRobustANGLE
GL_SamplerParameteri
GL_SamplerParameteriv
GL_SamplerParameterivRobustANGLE
GL_Scalef
GL_Scalex
GL_Scissor
GL_SelectPerfMonitorCountersAMD
GL_SemaphoreParameterui64vEXT
GL_SetFenceNV
GL_ShadeModel
GL_ShaderBinary
GL_ShaderSource
GL_ShadingRateQCOM
GL_SignalSemaphoreEXT
GL_StencilFunc
GL_StencilFuncSeparate
GL_StencilMask
GL_StencilMaskSeparate
GL_StencilOp
GL_StencilOpSeparate
GL_TESS_CONTROL_SHADER_EXT
GL_TESS_EVALUATION_SHADER_EXT
GL_TestFenceNV
GL_TexBuffer
GL_TexBufferEXT
GL_TexBufferOES
GL_TexBufferRange
GL_TexBufferRangeEXT
GL_TexBufferRangeOES
GL_TexCoordPointer
GL_TexEnvf
GL_TexEnvfv
GL_TexEnvi
GL_TexEnviv
GL_TexEnvx
GL_TexEnvxv
GL_TexGenfOES
GL_TexGenfvOES
GL_TexGeniOES
GL_TexGenivOES
GL_TexGenxOES
GL_TexGenxvOES
GL_TexImage2D
GL_TexImage2DExternalANGLE
GL_TexImage2DRobustANGLE
GL_TexImage3D
GL_TexImage3DOES
GL_TexImage3DRobustANGLE
GL_TexParameterIiv
GL_TexParameterIivEXT
GL_TexParameterIivOES
GL_TexParameterIivRobustANGLE
GL_TexParameterIuiv
GL_TexParameterIuivEXT
GL_TexParameterIuivOES
GL_TexParameterIuivRobustANGLE
GL_TexParameterf
GL_TexParameterfv
GL_TexParameterfvRobustANGLE
GL_TexParameteri
GL_TexParameteriv
GL_TexParameterivRobustANGLE
GL_TexParameterx
GL_TexParameterxv
GL_TexStorage1DEXT
GL_TexStorage2D
GL_TexStorage2DEXT
GL_TexStorage2DMultisample
GL_TexStorage2DMultisampleANGLE
GL_TexStorage3D
GL_TexStorage3DEXT
GL_TexStorage3DMultisample
GL_TexStorage3DMultisampleOES
GL_TexStorageMem2DEXT
GL_TexStorageMem2DMultisampleEXT
GL_TexStorageMem3DEXT
GL_TexStorageMem3DMultisampleEXT
GL_TexStorageMemFlags2DANGLE
GL_TexStorageMemFlags2DMultisampleANGLE
GL_TexStorageMemFlags3DANGLE
GL_TexStorageMemFlags3DMultisampleANGLE
GL_TexSubImage2D
GL_TexSubImage2DRobustANGLE
GL_TexSubImage3D
GL_TexSubImage3DOES
GL_TexSubImage3DRobustANGLE
GL_TextureFoveationParametersQCOM
GL_TransformFeedbackVaryings
GL_Translatef
GL_Translatex
GL_Uniform1f
GL_Uniform1fv
GL_Uniform1i
GL_Uniform1iv
GL_Uniform1ui
GL_Uniform1uiv
GL_Uniform2f
GL_Uniform2fv
GL_Uniform2i
GL_Uniform2iv
GL_Uniform2ui
GL_Uniform2uiv
GL_Uniform3f
GL_Uniform3fv
GL_Uniform3i
GL_Uniform3iv
GL_Uniform3ui
GL_Uniform3uiv
GL_Uniform4f
GL_Uniform4fv
GL_Uniform4i
GL_Uniform4iv
GL_Uniform4ui
GL_Uniform4uiv
GL_UniformBlockBinding
GL_UniformMatrix2fv
GL_UniformMatrix2x3fv
GL_UniformMatrix2x4fv
GL_UniformMatrix3fv
GL_UniformMatrix3x2fv
GL_UniformMatrix3x4fv
GL_UniformMatrix4fv
GL_UniformMatrix4x2fv
GL_UniformMatrix4x3fv
GL_UnmapBuffer
GL_UnmapBufferOES
GL_UseProgram
GL_UseProgramStages
GL_UseProgramStagesEXT
GL_VERTEX_SHADER
GL_ValidateProgram
GL_ValidateProgramPipeline
GL_ValidateProgramPipelineEXT
GL_VertexAttrib1f
GL_VertexAttrib1fv
GL_VertexAttrib2f
GL_VertexAttrib2fv
GL_VertexAttrib3f
GL_VertexAttrib3fv
GL_VertexAttrib4f
GL_VertexAttrib4fv
GL_VertexAttribBinding
GL_VertexAttribDivisor
GL_VertexAttribDivisorANGLE
GL_VertexAttribDivisorEXT
GL_VertexAttribFormat
GL_VertexAttribI4i
GL_VertexAttribI4iv
GL_VertexAttribI4ui
GL_VertexAttribI4uiv
GL_VertexAttribIFormat
GL_VertexAttribIPointer
GL_VertexAttribPointer
GL_VertexBindingDivisor
GL_VertexPointer
GL_Viewport
GL_WEBGL_video_texture
GL_WaitSemaphoreEXT
GL_WaitSync
GL_WeightPointerOES
GPU Memory Totals:       Allocated=
GPU stall due to ReadPixels
GPU stall due to mapping buffer in use by the GPU
GPU stall due to mapping device local buffer
GPU stall due to texture format fallback
GPU stall due to vertex format conversion of unaligned data
GPU stall due to waiting on uncompleted query
GPU.ANGLE.ProgramCache.ProgramCacheHitTimeUS
GPU.ANGLE.SyncFromNativeContextMicroseconds
GSb3
GarbageObject::destroy
GcX/F
GenerateCaps
GenerateTextureFormatCaps
Geometry
Geometry shader input variable must be declared as an array
Geometry shader is not supported in this shader version.
GetAllocateInfo
GetAndDecompressPipelineCacheVk
GetAvailableValidationLayers
GetCompressedTexImage for inconsistent texture levels is not implemented.
GetMemoryTypeIndex
GetPresentModes
GetReadPixelsParams
GetShader
GetTexImage for inconsistent texture levels is not implemented.
GjtEc
Gkvb
Global
Google
Goq6}
GraphicsPipelineDesc used for warmup differs from the one used by draw.
Gs+r
GwF>r
G|9W
H.Z\nU
H/63
H5DHC
H6#P
H>Gm
HFz<\n
HJ!X
HandleAllocator::allocate allocating 
HandleAllocator::allocate reusing 
HandleAllocator::release releasing 
HandleAllocator::reserve reserving 
HandleError
Hazard READ_AFTER_WRITE for VkBuffer
Hazard READ_AFTER_WRITE for VkNonDispatchableHandle
Hazard READ_AFTER_WRITE for index
Hazard READ_AFTER_WRITE for vertex
Hazard WRITE_AFTER_READ for
Hazard WRITE_AFTER_READ for VkBuffer
Hazard WRITE_AFTER_READ for dstBuffer VkBuffer
Hazard WRITE_AFTER_WRITE for VkImageView 
Hazard WRITE_AFTER_WRITE in subpass 
High
HostCopy
Hs/6!
I&RKlc
I85>r
I: IR
I=/0z
IEin$s8
IJx*
IMAGE_LINEAR
IMAGE_OPTIMAL
IMAGE_UNIFORMS
IMAGE_UNKNOWN
INFO
IOSurface usage hint must only contain READ or WRITE
I\1n
I\tIDi+
I\tmLL
If a fragment shader statically uses the gl_ClipDistance built-in array, the array must have the same size as in the previous shader stage. 
If a size is specified for a tessellation control or evaluation user-defined input variable, it must match the maximum patch size (gl_MaxPatchVertices).
If a size is specified for a tessellation control user-defined per-vertex output variable, it must match the the number of vertices in the output patch.
If buffer is nonzero, it must match the name of an existing buffer object.
If count is greater than zero, source and type cannot be GL_DONT_CARE.
If ctx is EGL_NO_CONTEXT, surfaces must be EGL_NO_SURFACE
If ctx is not EGL_NOT_CONTEXT, draw or read must both be EGL_NO_SURFACE, or both not
If ctx is not EGL_NO_CONTEXT, surfaces must not be EGL_NO_SURFACE
If either EGL_PLATFORM_ANGLE_D3D_LUID_HIGH_ANGLE and/or EGL_PLATFORM_ANGLE_D3D_LUID_LOW_ANGLE are specified, at least one must non-zero.
If either EGL_PLATFORM_ANGLE_DEVICE_ID_HIGH_ANGLE and/or EGL_PLATFORM_ANGLE_DEVICE_ID_LOW_ANGLE are specified, at least one must non-zero.
If false, parts of the compile job cannot be parallelized
If false, parts of the link job cannot be parallelized
If index layout qualifier is specified for a fragment output, location must also be specified.
If test\n
If the read buffer contains fixed-point or floating-point values, the draw buffer must as well.
If the read buffer contains fixed-point values, the draw buffer must as well.
If the read buffer contains signed integer values the draw buffer must as well.
If the read buffer contains unsigned integer values the draw buffer must as well.
If true, sub tasks of the link job are always threaded, regardless of GL_KHR_parallel_shader_compile
If you crashed here, your aligned allocation is incorrect: 
IjOR
Illegal character at fieldname start
Illegal use of reserved word
Image View
Image is YUV, target must be TEXTURE_EXTERNAL_OES
ImageHelper::copyBufferToSurfaceImage
ImageHelper::copyImageDataToBuffer
ImageHelper::copySurfaceImageToBuffer
ImageHelper::initExternal
ImageHelper::packReadPixelBuffer - Block
ImageHelper::packReadPixelBuffer - PBO
ImageHelper::readPixels
ImageHelper::readPixelsImpl
ImageHelper::readPixelsImpl - CPU Readback
ImageHelper::readPixelsImpl - PBO
Imagination GL drivers are buggy with context switching.
Imagination Technologies
Imagination devices generate INVALID_ENUM when setting the texture border color.
Implementation supports the GeometryStreams SPIR-V capability.
ImplicitMultisampledRenderToTextureImage
In Tessellation Control Shader, at least one layout qualifier specifying an output patch vertex count must exist.
In the case of packing to a pixel pack buffer, pack overlapping rows row by row
In the case of unpacking from a pixel unpack buffer, unpack overlapping rows row by row
Incompatible stream consumer type
Incompatible stream producer
Inconsistent component types for fragment outputs at location 
Incorrect qualifier applied to redeclared built-in <validateQualifiers>
Increase the minimum texture level-of-detail by 1 when sampling.
Increase the minimum texture level-of-detail by 2 when sampling.
Increase the minimum texture level-of-detail by 3 when sampling.
Increase the minimum texture level-of-detail by 4 when sampling.
Index exceeds active uniform block count.
Index expression must be constant
Index is greater than or equal to the number of TRANSFORM_FEEDBACK_BUFFER indexed binding points.
Index is greater than the maximum supported color attachments
Index must be less than MAX_ATOMIC_COUNTER_BUFFER_BINDINGS.
Index must be less than MAX_DRAW_BUFFERS.
Index must be less than MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS.
Index must be less than MAX_UNIFORM_BUFFER_BINDINGS.
Index must be less than MAX_VERTEX_ATTRIBS.
Index must be less than program active uniform block count.
Index must be less than program active uniform count.
Index must be less than the number of workgroup dimensions (3).
Index must be less than the transform feedback varying count in the program.
Index must be less than the value of SAMPLES.
Index must be within [0, MAX_IMAGE_UNITS).
Index must be within [0, MAX_SHADER_STORAGE_BUFFER_BINDINGS).
Index must be within [0, MAX_VERTEX_ATTRIB_BINDINGS).
Index must be within [0, NUM_EXTENSIONS).
Index must be within [0, NUM_REQUESTABLE_EXTENSIONS_ANGLE).
Indirect Commands Layout
Inefficient BlitFramebuffer operation on the stencil aspect due to lack of shader stencil export support
Infinity divided by infinity during constant folding generated NaN
InitAndroidExternalMemory
InitMappableAllocation
InitMappableDeviceMemory
InitShaderModule
Initial allocation failed. Waited for 
Initialization of an object could not be completed for implementation-specific reasons
Initialize Swap Image
InitializePipelineFromLibraries
Initializing uninitialized locals caused odd behavior in a few WebGL 2 tests
Input buffer overflow
Input primitive type is not specified in the geometry shader.
Inputs:
Instance name qualifier
Insufficient buffer size
Insufficient buffer size.
Integer overflow
Integer overflow on line number
Integer overflow.
Intel Mac drivers mistakenly consider the parameter position of nagative vaule as invalid even if the sum of position and offset is in range, so we need to add workarounds by rewriting texelFetchOffset(sampler, position, lod, offset) into texelFetch(sampler, position + offset, lod).
Intel or NVIDIA OpenGL ES drivers are not supported.
Internal Error
Internal GLES 1 shader compile failed. Info log: 
Internal GLES 1 shader link failed. Info log: 
Internal Vulkan error (
Internal error: 
Internal error: unknown internal format.
Internal format is not an accepted sized internal format.
Internal format is not renderable.
Internalformat is one of the unsupported unsized base internalformats.
Interpolation type
Invalid
Invalid Attachment Type.
Invalid Context attribute.
Invalid D3D11on12 attribute
Invalid EGLImage texture internal format: 0x
Invalid EGL_LOCK_USAGE_HINT_KHR value
Invalid EGL_MAP_PRESERVE_PIXELS_KHR value
Invalid OpenGL profile mask.
Invalid Shader count.
Invalid Vulkan shader was generated
Invalid YUV plane count
Invalid access bits when mapping buffer for reading
Invalid access bits.
Invalid attachment when a user framebuffer is bound.
Invalid attachment when the default framebuffer is bound.
Invalid attrib_list parameter
Invalid attribute
Invalid automatic trim attribute
Invalid blend equation.
Invalid blend function.
Invalid blit filter.
Invalid blit mask.
Invalid boolean value. Must be GL_FALSE or GL_TRUE.
Invalid bufSize.
Invalid buffer binding size.
Invalid buffer target.
Invalid buffer usage enum.
Invalid buffer usage flags.
Invalid built-in call
Invalid cache resize mode.
Invalid client vertex array type.
Invalid clip plane.
Invalid color buffer type
Invalid combination of format, type and internalFormat.
Invalid combination of pack parameters for WebGL.
Invalid combination of unpack parameters for WebGL.
Invalid compressed image size.
Invalid condition
Invalid context attribute: 0x%04X
Invalid copy texture format combination.
Invalid debug severity.
Invalid debug source.
Invalid debug type.
Invalid depth enum.
Invalid destination texture type.
Invalid device parameter
Invalid device_type parameter
Invalid draw buffer.
Invalid draw mode.
Invalid element range.
Invalid enum provided.
Invalid expression
Invalid fence object.
Invalid fog density (must be nonnegative).
Invalid fog mode.
Invalid fog parameter.
Invalid format and type combination.
Invalid format.
Invalid framebuffer target.
Invalid handle type.
Invalid identifier.
Invalid image layout.
Invalid init declaration
Invalid internal format 0x%04X.
Invalid iterator comparison. %s
Invalid level count.
Invalid light model parameter.
Invalid light parameter.
Invalid light.
Invalid lock surface attribute
Invalid logical operation.
Invalid mask bits.
Invalid material face.
Invalid material parameter.
Invalid matrix mode.
Invalid memory barrier bit.
Invalid memory object parameter.
Invalid memory object.
Invalid multisample resolve type.
Invalid name.
Invalid native pixmap, XGetGeometry failed: 
Invalid operation for arrays
Invalid operation for interface blocks
Invalid operation for structs
Invalid operation for variables with an opaque type
Invalid operation for variables with writeonly
Invalid operation on multisampled framebuffer
Invalid operator
Invalid or incompatible shader binary.
Invalid or unsupported precision type.
Invalid or unsupported texture target.
Invalid origin enum.
Invalid parameter name for framebuffer attachment.
Invalid parameter qualifier 
Invalid parameters given for GL_TEXTURE_FOVEATED_FEATURE_BITS_QCOM
Invalid perf monitor counter group.
Invalid perf monitor counter.
Invalid perf monitor.
Invalid pixel local storage Load Operation: 0x%04X.
Invalid pixel local storage Store Operation: 0x%04X.
Invalid pixel local storage internal format.
Invalid pixel local storage texture type.
Invalid plane count
Invalid plane offset
Invalid plane specified
Invalid platform method count: 
Invalid platform method name: 
Invalid pname.
Invalid point parameter value (must be non-negative).
Invalid point parameter.
Invalid point size (must be positive).
Invalid pointer query.
Invalid polygon mode.
Invalid primitive mode.
Invalid program binary version.
Invalid program cache attribute.
Invalid program interface.
Invalid program key size.
Invalid program resource index.
Invalid program resource property.
Invalid projection matrix. Left/right, top/bottom, near/far intervals cannot be zero, and near/far cannot be less than zero.
Invalid propCount.
Invalid provoking vertex.
Invalid query Id.
Invalid query surface attribute: 0x%04X
Invalid query target.
Invalid query type.
Invalid read buffer
Invalid region for compressed texture format.
Invalid relational operator
Invalid renderbuffer internalformat.
Invalid renderbuffer target.
Invalid shader binary format.
Invalid shader type.
Invalid shading model.
Invalid shading rate.
Invalid source texture height or width.
Invalid source texture level.
Invalid stencil.
Invalid stream
Invalid stream attribute
Invalid stream consumer type
Invalid stream state
Invalid stride for built-in vertex attribute.
Invalid subresource index
Invalid surface attribute: 0x%04X
Invalid surface type
Invalid swap behaviour.
Invalid target.
Invalid texture combine mode.
Invalid texture combine operand.
Invalid texture combine source.
Invalid texture environment mode.
Invalid texture environment parameter.
Invalid texture environment scale.
Invalid texture environment target.
Invalid texture target and format combination.
Invalid texture unit
Invalid to draw with foveation while current bound program uses tessellation or geometry shaders
Invalid type for built-in vertex attribute.
Invalid type for loop index
Invalid type parameter
Invalid type.
Invalid uniform location
Invalid uniform location 
Invalid value for EGL_EXPERIMENTAL_PRESENT_PATH_ANGLE
Invalid value for EGL_PLATFORM_ANGLE_DEVICE_CONTEXT_VOLATILE_CGL_ANGLE attrib
Invalid value for EGL_PLATFORM_ANGLE_DEVICE_CONTEXT_VOLATILE_EAGL_ANGLE attrib
Invalid value for EGL_PLATFORM_ANGLE_DEVICE_TYPE_ANGLE attrib
Invalid value for EGL_SAMPLE_RANGE_HINT_EXT.
Invalid value for EGL_TEXTURE_FORMAT
Invalid value for EGL_TEXTURE_TARGET
Invalid value for EGL_YUV_CHROMA_HORIZONTAL_SITING_HINT_EXT or EGL_YUV_CHROMA_VERTICAL_SITING_HINT_EXT.
Invalid value for EGL_YUV_COLOR_SPACE_HINT_EXT.
Invalid value for condition.
Invalid value for flags.
Invalid value for timeout.
Invalid value parameter
Invalid value.
Invalid visual ID requested.
Invalid width.
Invalid wrap mode for texture type.
InvalidateSubFramebuffer discarded due to increased scissor region
InvalidateSubFramebuffer ignored due to area not covering the render area
Invariance
Invariant Declaration:\n
IpLQl
IsAdreno42xOr3xx(functions)
IsAndroid() && !mFeatures.supportsLegacyDithering.enabled
IsAndroid() && ExtensionFound("VK_GOOGLE_display_timing", deviceExtensionNames)
IsAndroid() && isARM
IsAndroid() && isQualcommProprietary
IsAndroid() && isSamsung
IsAndroid() && mFeatures.supportsLegacyDithering.enabled && isARM
IsAndroid() || (IsApple() && (isIntel || isAMD || isNvidia))
IsAndroid() || isAMD || !functions->hasExtension("GL_KHR_robust_buffer_access_behavior")
IsAndroid() || isIntel || (IsWindows() && isAMD) || IsFuchsia() || isSamsung || nativeWindowSystem == angle::NativeWindowSystem::Wayland
IsAndroid() || isNvidia
IsApple() && IsIntel(vendor) && !IsHaswell(device)
IsApple() && functions->standard == STANDARD_GL_DESKTOP && GetMacOSVersion() < OSVersion(10, 11, 0)
IsApple() && functions->standard == STANDARD_GL_ES && !(isAMD && IsWindows())
IsApple() && hasAMD
IsApple() && isAMD
IsApple() && isIntel && GetMacOSVersion() < OSVersion(10, 12, 0)
IsApple() && isIntel && GetMacOSVersion() < OSVersion(10, 12, 6)
IsApple() && isIntel && GetMacOSVersion() >= OSVersion(10, 12, 4)
IsApple() || (IsLinux() && isAMD)
IsApple() || IsAndroid()
IsApple() || IsAndroid() || IsWindows()
IsApple() || isNvidia
IsLinux() && IsWayland()
IsLinux() && functions->standard == STANDARD_GL_DESKTOP && isAMD
IsLinux() && hasAMD
IsLinux() && isAMD && isMesa && mesaVersion < (std::array<int, 3>{19, 3, 5})
IsLinux() && isIntel && isMesa && mesaVersion[0] == 20
IsLinux() || (IsAndroid() && isNvidia) || (IsWindows() && isNvidia) || (IsApple() && functions->standard == STANDARD_GL_ES)
IsMaliG72OrG76OrG51(functions)
IsMaliValhall(functions)
IsNexus5X(vendor, device)
IsPixel7OrPixel8(functions)
IsPowerVR(vendor)
IsPowerVrRogue(functions)
IsWindows() && isAMD
Issue clearing framebuffers with linear attachments when GL_FRAMEBUFFER_SRGB is enabled
Issue with 1-bit alpha framebuffer formats
Issues with blitFramebuffer when the parameters don't match the framebuffer size.
It is a undefined behaviour to render without vertex shader stage or fragment shader stage.
It is an error to use gl_WorkGroupSize before declaring the local group size
It is invalid to change default FBO's attachments
It is undefined behavior to use a pixel pack buffer that is bound for transform feedback.
It is undefined behavior to use a pixel unpack buffer that is bound for transform feedback.
It is undefined behavior to use a vertex buffer that is bound for transform feedback.
It is undefined behavior to use an element array buffer that is bound for transform feedback.
It is undefined behavior to use an uniform buffer that is bound for transform feedback.
It is undefined behaviour to have a used but unbound uniform buffer.
It is undefined behaviour to use a uniform buffer that is too small.
Ith value does not match COLOR_ATTACHMENTi or NONE.
J/yO
J8Nx_
JEy:r#
JFEo}
JLsy
JTX&l6\fNEF
JTX&l6\fX
J\ntz)
J\tYQ\n
JakS
Jmja
JnFz
Jr;xW
Js\fX
JtJw
Ju;c^Sf
Jx<C
K(HJc^
K;l2
K?bk
KE7H
KHR_gl_renderbuffer_image not supported.
KHR_gl_texture_2D_image not supported.
KHR_gl_texture_3D_image not supported.
KHR_gl_texture_cubemap_image not supported.
KJ6/}a^r
KNC}
KV"n
KXo`
Kh]U
Kh]e
KlUU
Kv\F
Kz>Z
L,)t.pS
L4+5
L=33s?33s?
L?fff?
LGRo
LK$TG
LMc\t
L\rKC>I
L\vzo
L_q3}Y
Label length is larger than GL_MAX_LABEL_LENGTH.
Latency must be positive
Layer invalid for framebuffer texture attachment.
Layer is larger than texture depth.
LayerIn
LayerOut
Layout qualifier
Length must not be zero.
Level is larger than texture level count.
Level is negative.
Level of detail outside of range.
Lg}Q
Light parameter out of range.
Limit max 3d texture size and max array texture layers to 1024 to avoid system hang
Limit sample count to 2 to save memory on low end devices.
Limit some features because 
Limit webgl max texture size to 4096 to avoid frequent out-of-memory errors
Limit webgl max texture size to 8192 to avoid frequent out-of-memory errors
Limiting GL_MAX_SAMPLES to 
Limiting GL_MAX_TEXTURE_SIZE to 
Limiting GL_MAX_VERTEX_UNIFORM_VECTORS to 
Limiting compressed format support.\n
Limiting draw buffer count to 
Limiting image unit count to 
Limiting max atomic counter buffer bindings to 
Limiting max shader storage buffer bindings to 
LineLoopHelper::getIndexBufferForElementArrayBuffer
Linear blit not supported in this extension.
LinkTaskGL::getResult
LinkTaskVk::linkImpl
Linked transform feedback stage 
Linker: LLD 19.0.0
Lkh25,
Lkh45
Load Operation GL_LOAD_OP_LOAD_ANGLE is invalid for memoryless planes.
LoadASTCToRGBA8Inner
Local variables can only use the const storage qualifier.
Location cannot be less than 0.
Location layout qualifier
Location lengths must not be greater than 1024 characters.
Location must be less than (MAX_VERTEX_UNIFORM_VECTORS + MAX_FRAGMENT_UNIFORM_VECTORS) * 4
Location name lengths must not be greater than 256 characters.
Location of variable 
Log each callback from VK_EXT_device_memory_report
Log stats from VK_EXT_device_memory_report each swap
LogFeatureStatus
LogGLDebugMessage
Loop Body\n
Loop Condition\n
Loop Terminal Expression\n
Loop index cannot be compared with non-constant expression
Loop index cannot be initialized with non-constant expression
Loop index cannot be modified by non-constant expression
Loop index cannot be statically assigned to within the body of the loop
Loop with condition 
LzG!IRIeR
LzZ/
Lz[!IRIyR
Lzg!IRIeR
L{Xjz
L{Xnz
M%x}PGj
M.>3L\rs
M4<D
MAX_NUM_ACTIVE_VARIABLES requires a buffer or block interface.
MAX_TEXTURE_IMAGE_UNITS
MC?s
MEDIUM
MGiI
MP=K
MP=k
MQMK
MQMO
MQ}k
MSRTTEmulationColorUnresolveAndResolve
MSRTTEmulationDepthStencilUnresolveAndResolve
M\fh4
M\nI6<m
Mac incorrectly executes both sides of && and || expressions when they should short-circuit.
Maintain a shadow copy of buffer data when the GL API does not permit reading data back.
Make egl surface uncurrent when calling eglDestroySurface(), if the surface is still bound by the context of current render thread
MakeLengthOp
MakeRenderPass
Mali-G%d
Mali-T%d
Many drivers have bugs when using GL_EXT_multisampled_render_to_texture
Many platforms have issues with blitFramebuffer when the parameters are large.
Mapped range does not fit into buffer dimensions.
Mapping of a memory object has failed
MaskNumber cannot be greater than or equal to the value of MAX_SAMPLE_MASK_WORDS.
Material parameter out of range.
Matrix Packing
Maw8
Mb-S
Mb]r
Medium
Memory heap info
Mesa
Mesa %d.%d.%d
Message length is larger than GL_MAX_DEBUG_MESSAGE_LENGTH.
Metal features
Metal platform is unsupported.
Metal workarounds
Mh]U
Mh]e
Microsoft
Mip level invalid for framebuffer texture attachment.
Mipmap generated on CPU due to format restrictions
Mipmap level must be 0 when attaching a texture.
Mismatch between Image and Context Protected Content state
Mismatch between Texture and Context Protected Content state
Mismatch between texture format and sampler type (signed/unsigned/float/shadow).
Mismatched pixel local storage backing texture sizes.
Mismatched shader binary and shader object type.
Missing a valid input primitive declaration before declaring an unsized array input
Missing condition
Missing expression
Missing init declaration
Missing main()
Missing program object
Missing read attachment.
Missing required attribute for EGL_IOSURFACE
Missing required parameter 0x%X for image target EGL_LINUX_DMA_BUF_EXT.
Missing required parameter 0x%X for image target EGL_VULKAN_IMAGE_ANGLE.
Missing shader object
Mj=F
Mnoz
More parameters are required than were provided.
MuH *u
Multiple planes bound to same texture object
Multiple uniforms bound to location 
Multisampled depth/stencil blit is not supported by this extension.
Must have element array buffer bound.
Must specify major version if you specify a minor version.
N'\fck
N'qz
N10__cxxabiv116__shim_type_infoE
N10__cxxabiv117__class_type_infoE
N10__cxxabiv120__si_class_type_infoE
N10__cxxabiv121__vmi_class_type_infoE
N2(B&
N9+p
NGHc
NODEVICE_SELECT
NOTIFICATION
NSt4__Cr10__stdinbufIcEE
NSt4__Cr10__stdinbufIwEE
NSt4__Cr10__time_putE
NSt4__Cr10ctype_baseE
NSt4__Cr10money_baseE
NSt4__Cr10moneypunctIcLb0EEE
NSt4__Cr10moneypunctIcLb1EEE
NSt4__Cr10moneypunctIwLb0EEE
NSt4__Cr10moneypunctIwLb1EEE
NSt4__Cr11__money_getIcEE
NSt4__Cr11__money_getIwEE
NSt4__Cr11__money_putIcEE
NSt4__Cr11__money_putIwEE
NSt4__Cr11__stdoutbufIcEE
NSt4__Cr11__stdoutbufIwEE
NSt4__Cr12__do_messageE
NSt4__Cr12codecvt_baseE
NSt4__Cr12system_errorE
NSt4__Cr13basic_filebufIcNS_11char_traitsIcEEEE
NSt4__Cr13basic_istreamIcNS_11char_traitsIcEEEE
NSt4__Cr13basic_istreamIwNS_11char_traitsIwEEEE
NSt4__Cr13basic_ostreamIcNS_11char_traitsIcEEEE
NSt4__Cr13basic_ostreamIwNS_11char_traitsIwEEEE
NSt4__Cr13messages_baseE
NSt4__Cr14__num_get_baseE
NSt4__Cr14__num_put_baseE
NSt4__Cr14__shared_countE
NSt4__Cr14basic_ifstreamIcNS_11char_traitsIcEEEE
NSt4__Cr14basic_iostreamIcNS_11char_traitsIcEEEE
NSt4__Cr14basic_ofstreamIcNS_11char_traitsIcEEEE
NSt4__Cr15basic_streambufIcNS_11char_traitsIcEEEE
NSt4__Cr15basic_streambufIwNS_11char_traitsIwEEEE
NSt4__Cr15basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt4__Cr16__narrow_to_utf8ILm32EEE
NSt4__Cr17__widen_from_utf8ILm32EEE
NSt4__Cr18basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt4__Cr19__iostream_categoryE
NSt4__Cr19basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt4__Cr19basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt4__Cr20__time_get_c_storageIcEE
NSt4__Cr20__time_get_c_storageIwEE
NSt4__Cr23__system_error_categoryE
NSt4__Cr24__generic_error_categoryE
NSt4__Cr5ctypeIcEE
NSt4__Cr5ctypeIwEE
NSt4__Cr6locale5__impE
NSt4__Cr6locale5facetE
NSt4__Cr7codecvtIDiDu11__mbstate_tEE
NSt4__Cr7codecvtIDic11__mbstate_tEE
NSt4__Cr7codecvtIDsDu11__mbstate_tEE
NSt4__Cr7codecvtIDsc11__mbstate_tEE
NSt4__Cr7codecvtIcc11__mbstate_tEE
NSt4__Cr7codecvtIwc11__mbstate_tEE
NSt4__Cr7collateIcEE
NSt4__Cr7collateIwEE
NSt4__Cr7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEE
NSt4__Cr7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEE
NSt4__Cr7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEE
NSt4__Cr7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEE
NSt4__Cr8ios_base7failureE
NSt4__Cr8ios_baseE
NSt4__Cr8messagesIcEE
NSt4__Cr8messagesIwEE
NSt4__Cr8numpunctIcEE
NSt4__Cr8numpunctIwEE
NSt4__Cr8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEE
NSt4__Cr8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEE
NSt4__Cr8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEE
NSt4__Cr8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEE
NSt4__Cr9__num_getIcEE
NSt4__Cr9__num_getIwEE
NSt4__Cr9__num_putIcEE
NSt4__Cr9__num_putIwEE
NSt4__Cr9basic_iosIcNS_11char_traitsIcEEEE
NSt4__Cr9basic_iosIwNS_11char_traitsIwEEEE
NSt4__Cr9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEE
NSt4__Cr9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEE
NSt4__Cr9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEE
NSt4__Cr9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEE
NSt4__Cr9time_baseE
NULL buffer.
NULL new ID received on non-nullable type, message %s(%s)\n
NULL object received on non-nullable type, message %s(%s)\n
NULL string received on non-nullable type, message %s(%s)\n
NV-CONTROL
N\4W
N\f0P
Name conflicts between a uniform and a uniform block field: 
Name conflicts between a uniform and an attribute: 
Name conflicts between uniform block field names: 
Name contains invalid characters.
Name of a built-in function cannot be redeclared as function
Near value cannot be greater than far.
Need to map buffer for either reading or writing.
Negate value
Negative baseViewIndex.
Negative buffer size.
Negative count.
Negative layer.
Negative length.
Negative maxcount.
Negative modulus operator operand encountered during constant folding. Results are undefined.
Negative number of attachments.
Negative offset.
Negative size.
NewSemaphore
Ng5:cNgM
NgC,p
NhwI
NhwQ
NjP_u
No DeviceVk instance.
No Texture is bound to the specified target.
No Transform Feedback object is active.
No active compute shader stage in this program.
No active geometry shader stage in this program.
No active program for the compute shader stage.
No active read framebuffer.
No available renderable types.
No compiled shaders.
No configs were generated.
No context is current.
No defined conversion between clear value and attachment format.
No element array buffer and no pointer.
No external texture bound
No external texture bound at one or more specified texture units
No image internal format specified
No init gl_FragColor causes context lost
No local work group size specified
No loop condition\n
No num_views specified
No path supplied for pipeline cache graph dump!
No precision specified
No precision specified (int)
No precision specified for (float)
No program binary formats supported.
No vertices specified
NonSemantic.ANGLE
Not a valid compressed texture format.
Not a valid sync pointer.
Not a valid texture object name.
Not all planes specified
Not an allowed program resource property for this program interface
Not enabling GL_NV_polygon_mode because its native driver support is incomplete.
Not enough arguments for macro
Not enough pipeline cache data read.
Not enough space in bound transform feedback buffers.
Not initialized.
Note: Additional non-conformant packing restrictions are enforced on D3D9.
Notification
NouL
NuOP
Number of constructor parameters does not match the number of structure fields
Number of views does not match the previous declaration
Nw0u}
Ny$6
NzV:z
O#kv
O24q
O4br
O:kNG
O:sNG
O;aZ
OCCN
OPb\rJ
OVR_multiview or OVR_multiview2 are not available.
OY[76o
OYm*|
Object cannot be used because it has not been generated.
Object: 
OffscreenSurfaceAttachmentImage
OffscreenSurfaceVk::lockSurface
Offset and size must be multiple of 4.
Offset layout qualifier
Offset must be a multiple of sizeof(uint) in basic machine units.
Offset must be a multiple of the passed in datatype.
Offset must be multiple of 4
Offset must be multiple of value of SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT.
Offset must be multiple of value of TEXTURE_BUFFER_OFFSET_ALIGNMENT.
Offset must be multiple of value of UNIFORM_BUFFER_OFFSET_ALIGNMENT.
Offset must be zero for external buffers
Offset overflows texture dimensions.
Offset overlapping
Oh]U
Ohwg7
On some GPUs, program binaries don't contain transform feedback varyings
On some drivers, the OpSelect SPIR-V instruction with arguments with mismatching RelaxedPrecision decoration causes a crash
On some drivers, using a depth/stencil resolve attachment results in errors
On some hardware, clear using a draw call instead of vkCmdClearAttachments in the middle of render pass due to bugs
On some platforms present region rectangles are expected to have a bottom-left origin, instead of top-left origin as from spec
Only NONE or BACK are valid draw buffers for the default framebuffer
Only UNSIGNED_SHORT and UNSIGNED_BYTE types are supported.
Only allowed with shader storage blocks, variables declared within shader storage blocks and variables declared as image types.
Only array uniforms may have count > 1.
Only nearest filtering can be used when blitting buffers other than the color buffer.
Only std140 layout is allowed in WebGL
Only use the default VAO because of missing support or driver bugs
Only whole-buffer blit is supported from a multisampled read buffer in this extension.
Only whole-buffer depth and stencil blits are supported by this extension.
Oowr
Opaque types are not allowed in interface blocks
OpenGL 
OpenGL ES 
OpenGL ES 1.x or 3.2 Required
OpenGL ES 2.0 is not supportable.
OpenGL ES 3.0 Required.
OpenGL ES 3.1 Required
OpenGL ES 3.2 Required
OpenGL ES Commands
OpenGL ES GLSL ES 
OpenGL GLSL 
OpenGL features
OpenGL platform is unsupported.
OpenGL profile mask requires an OpenGL context.
OpenGL workarounds
OpenGL_ES
Operation not permitted while pixel local storage is active.
Other
Other query is active.
Out-of-Date Swapbuffer
Output VkImage pointer is null.
Output VkImageCreateInfo pointer is null.
Output layout location specified multiple times.
Output primitive type is not specified in the geometry shader.
Output size 
OutputMemoryLogStream
Outputs:
OutsideRenderPassCommandBufferHelper::flushToPrimary
Override surface format GL_RGB8 to GL_RGBA8
P7J^
PE't
PQBZ)
P\fMjw
Packed color formats are buggy on Macs with AMD GPUs
Parameter cannot be used if target is not EGL_LINUX_DMA_BUF_EXT
Parameter cannot be used without EGL_EXT_image_dma_buf_import support.
Parameter cannot be used without EGL_EXT_image_dma_buf_import_modifiers support.
Parameter outside of bounds.
Params less than 0 or greater than GL_MAX_FRAMEBUFFER_HEIGHT.
Params less than 0 or greater than GL_MAX_FRAMEBUFFER_SAMPLES.
Params less than 0 or greater than GL_MAX_FRAMEBUFFER_WIDTH.
Passed in texture target and format must match the one originally used to define the texture.
Passed in texture type must match the one originally used to define the texture.
Pending allocation size for memory allocation type (
Performance
Performance: dynamic indexing of vectors and matrices is emulated and can be slow.
Persistently map buffer memory to reduce map/unmap IOCTL overhead.
Physical Device
Pipeline Cache
Pipeline Layout
Pipeline cache chunk header corrupted: 
Pixel data cannot be null.
Pixel data must be null.
Pixel density must be between 0.0 and 1.0
Pixel local storage backing texture dimensions not equal to the rendering area.
Pixel local storage does not support more than 255 nested interruptions.
Pixel local storage is not active.
Pixel local storage on the draw framebuffer is interrupted.
Pixel local storage on the draw framebuffer is not interrupted.
Plane cannot be less than 0.
Plane count must be 0 for RGB buffer
Plane must be less than GL_MAX_PIXEL_LOCAL_STORAGE_PLANES_ANGLE.
Planes cannot be specified
Planes must be greater than 0.
Planes must be less than or equal to GL_MAX_PIXEL_LOCAL_STORAGE_PLANES_ANGLE.
Platform ANGLE extension is not active
Platform Device extension is not active
Platform GBM extension is not active
Platform Surfaceless extension is not active
Platform Wayland extension is not active
Platform supports setting frame timestamp surface attribute
Portability
Positive sign
Post-Decrement
Post-Increment
Post-link task unexpectedly failed. Performance may degrade, or device may soon be lost
Potential inefficiency emulating uint8 vertex attributes due to lack of hardware support
PowerVR Rogue
Pr2o
Pre-Decrement
Pre-Increment
PreFragmentShadersReadOnly
PreFragmentShadersWrite
Precise Declaration:\n
Precision qualifiers have to be after interpolation qualifiers.
Precision qualifiers have to be after layout qualifiers.
Precision qualifiers have to be after memory qualifiers.
Precision qualifiers have to be after storage qualifiers.
Preexisting GL error 
Prefer adding HOST_VISIBLE flag for DEVICE_LOCAL memory when picking memory types
Prefer to use VK_FILTER_LINEAR for VkSamplerYcbcrConversion
Prefer use CPU to do bufferSubData instead of staged update.
Prefer using driver uniforms instead of specialization constants.
Preferred device ICD not found. Using default physicalDevice instead.
Primcount must be greater than or equal to zero.
Primitive mode is incompatible with the input primitive type of the geometry shader.
Program and framebuffer YUV output state does not match.
Program binary format is not valid.
Program binary not accessible.
Program binary too large or changed during access.
Program doesn't exist.
Program has not been successfully linked.
Program index out of range.
Program link or binary loading failed with no info log.
Program link or binary loading failed: 
Program not linked.
Program object expected.
Program object was not linked with its PROGRAM_SEPARABLE status set.
Program pipeline does not exist.
Program pipeline link failed
Program pipeline must have both a Tessellation Control and Evaluation shader or neither\n
Program::MainLinkLoadEvent::wait
ProgramExecutableVk::mergePipelineCacheToRenderer
ProgramExecutableVk::warmUpComputePipelineCache
ProgramExecutableVk::warmUpGraphicsPipelineCache
ProgramGL::link
ProgramGL::linkJobImpl
ProgramGL::load
ProgramGL::postLinkJobImpl
ProgramPipeline link failed
Protected Texture must match Protected Context
Proxy %p is a wrapper\n
Pure virtual function called!
Pv2o
Q*rN'
Q5iT
QA7IQ
Q\oY
Q\t7R
Qkkbal
Qs1i
Query Pool
Query extension not enabled.
Query is active.
Query is not active.
Query type does not match target.
QueryVk::getResult
Querying age of a surface will make it retain its content
Quite some OpenGL ES drivers don't implement readPixels for RGBA/UNSIGNED_SHORT from EXT_texture_norm16 correctly
R5.|M
R5m-
R7+4
R;f4l
RB7c
RGBA(
RGBA4IsNotSupportedForColorRendering
RGBDXT1TexturesSampleZeroAlpha
RONOS_validation
Reactivate already started render pass on draw.
Read and draw framebuffers must both exist for a blit to succeed.
Read and write color attachments cannot be the same image.
Read and write depth stencil attachments cannot be the same image.
Read buffer has no attachment.
Read buffer is GL_NONE.
Read buffer must be GL_NONE or GL_BACK when reading from the default framebuffer.
RearrangeEXTTextureNorm16Pixels
Received VK_INCOMPLETE: Old: 
Rectangle texture cannot have a compressed format.
Recursive function call in the following call chain:
RecycleUsedFence
Red, green and blue color writes must be enabled when writing to YUV framebuffers.
Reference of struct type 
ReleaseVersion=
Render Pass
Render pass closed due to buffer (used by render pass) release to external
Render pass closed due to buffer use as transform feedback output after prior use in render pass
Render pass closed due to compute read of buffer previously used as transform feedback output in render pass
Render pass closed due to compute read of image previously used as framebuffer attachment in render pass
Render pass closed due to context change
Render pass closed due to context destruction
Render pass closed due to depth/stencil attachment use under feedback loop
Render pass closed due to depth/stencil attachment write after feedback loop
Render pass closed due to eglSwapBuffers()
Render pass closed due to eglWaitClient()
Render pass closed due to external semaphore signal
Render pass closed due to fallback to CPU when copying texture
Render pass closed due to fallback to CPU when generating mipmaps
Render pass closed due to framebuffer binding change
Render pass closed due to framebuffer change
Render pass closed due to framebuffer fetch emulation
Render pass closed due to getting query result
Render pass closed due to glFinish()
Render pass closed due to glFlush()
Render pass closed due to glInvalidateFramebuffer() on a color buffer
Render pass closed due to glMemoryBarrier after storage output in render pass
Render pass closed due to glMemoryBarrier before storage output in render pass
Render pass closed due to glReadPixels()
Render pass closed due to graphics pipeline change while transform feedback is active
Render pass closed due to image (used by render pass) release to external
Render pass closed due to indirect dispatch buffer previously used as transform feedback output in render pass
Render pass closed due to indirect draw buffer previously used as transform feedback output in render pass
Render pass closed due to mapping buffer being written to by said render pass
Render pass closed due to mapping buffer in use by GPU without GL_MAP_UNSYNCHRONIZED_BIT
Render pass closed due to mapping device local buffer
Render pass closed due to non-render-pass query begin
Render pass closed due to non-render-pass query end
Render pass closed due to non-render-pass read of buffer that was written to in render pass
Render pass closed due to non-render-pass read of image that was used in render pass
Render pass closed due to non-render-pass write of buffer that was used in render pass
Render pass closed due to non-render-pass write of image that was used in render pass
Render pass closed due to onSurfaceUnMakeCurrent()
Render pass closed due to reformatting texture to a renderable fallback
Render pass closed due to starting a new render pass
Render pass closed due to switch from query enabled draw to query disabled draw
Render pass closed due to sync object client wait
Render pass closed due to sync object get status
Render pass closed due to sync object insertion
Render pass closed due to sync object server wait
Render pass closed due to sync object with fd insertion
Render pass closed due to timestamp query
Render pass closed due to transform feedback buffer use as vertex/index input
Render pass closed due to transform feedback pause
Render pass closed due to transform feedback resume after clear through draw
Render pass closed prior to draw-based blit
Render pass closed prior to draw-based image copy
RenderBufferStorageImage
Renderbuffer width and height cannot be negative and cannot exceed maximum texture size.
Renderer::flushOutsideRPCommands
Renderer::flushRenderPassCommands
Renderer::flushWaitSemaphores
Renderer::getOutsideRenderPassCommandBufferHelper
Renderer::getRenderPassCommandBufferHelper
Renderer::queueSubmitOneOff
Renderer::recycleOutsideRenderPassCommandBufferHelper
Renderer::recycleRenderPassCommandBufferHelper
Renderer::waitForResourceUseToFinishWithUserTimeout
Repeated Clear on framebuffer attachment dropped
Repeated assignment to swizzled values inside a GLSL user-defined function have incorrect results
Replace CopyTexImage2D with TexImage2D + CopyTexSubImage2D.
Requested GLES version (%lx.%lx) is greater than max supported (%d, %d).
Requested GLES version (%lx.%lx) is greater than max supported 3.1 for WebGL.
Requested focal point exceeds the supported maximum
Requested layer exceeds the supported maximum
Requested version is not supported
Requires both binding and offset
Reset command buffer in async thread.
Reset status is not valid
Reset texture base level before calling glTexImage2D to work around pixel comparison failure.
Resync depth range to apply clip control updates.
Retain debug info in SPIR-V blob.
Return a default descriptor count for external formats.
Rewrite row major matrices in shaders as column major as a driver bug workaround
Rewrite vec/mat constructors to work around driver bugs
RjhNQ
Rnv5}
Round output after dithering to workaround a driver bug that rounds the output up
Run out of queue serial index. All 
Running out of reserved outsideRenderPass queueSerial. ending renderPass now.
RwQJ
RwR(
S;dmB
SD=,A
SHADER_STORAGE_BLOCKS
SO]t
SPV_EXT_fragment_shader_interlock
SPV_EXT_shader_stencil_export
SPV_KHR_multiview
SPV_KHR_non_semantic_info
SUCCESS
SUz~=
SXM-n
SYNC-HAZARD-READ-AFTER-WRITE
SYNC-HAZARD-WRITE-AFTER-READ
SYNC-HAZARD-WRITE-AFTER-WRITE
SYNC_COLOR_ATTACHMENT_OUTPUT_COLOR_ATTACHMENT_READ
SaKL
Sampler YCbCr Conversion
Sampler is not valid
Sampler uniform value out of range.
Samples may not be zero.
Samples must not be greater than maximum supported value for the format.
Sampling BLACK texels from RGB DXT1 textures returns transparent black on Mac.
Samsung Electronics Co., Ltd.
Saving program binary with transform feedback, which is not supported on this driver.
Saving program binary without GL_PROGRAM_BINARY_RETRIEVABLE_HINT is suboptimal.
Sb<o
Scaling and flipping in BlitFramebufferANGLE not supported by this implementation.
Sco5y
ScopedEnv
ScopedVkLoaderEnvironment
SecondaryCommandBuffer::executeCommands
SerializationNotAvailable
Server-side waits cannot be performed without GL_OES_EGL_sync support.
Set the context limits like frame capturing was enabled
SetDebugUtilsObjectName
Setting texture buffer offset alignment to 
Setting uniform buffer offset alignment to 
SeyI
Sh<P
Shader Compiler
Shader Module
Shader attachment already has a shader.
Shader compilation failed with no info log.
Shader object expected.
Shader parsing failed (mTreeRoot == nullptr)
Shader source:
Shader substitute found, loading from 
Shader to be detached must be currently attached to the program.
ShaderTranslateTask::run
Shared memory declarations cannot have layout specified
SharedFence::wait
ShouldApplyLastRowPaddingWorkaround
Simultaneous use of GL_CONSTANT_ALPHA/GL_ONE_MINUS_CONSTANT_ALPHA and GL_CONSTANT_COLOR/GL_ONE_MINUS_CONSTANT_COLOR as color factors is not supported by this implementation.
Single barrier call is preferred over multiple calls with fine grained pipeline stage dependency information
Size for built-in vertex attribute is outside allowed range.
Size must be greater than 0
Size must not exceed the size of clientbuffer
Size of declared private variable exceeds implementation-defined limit
Size of declared variable exceeds implementation-defined limit
SizedInternalformat must be color-renderable, depth-renderable, or stencil-renderable.
Skip syncing pipeline cache data as it failed compression.
Skip syncing pipeline cache data due to out of memory.
Skip syncing pipeline cache data when it's larger than maxTotalSize.
Skip syncing pipeline cache data when the last task is not ready.
Skipping invalidate is preferred for emulated formats that have extra channels over re-clearing the image
Skjh
SoZi
Some GLSL constructs involving do-while loops cause GPU hangs
Some devices genenerate errors when querying the clip control state
Some drivers discard vertex data in DrawArrays calls when the fixed primitive restart index is within the number of primitives being drawn.
Some drivers forget about UBO bindings when using program binaries
Some drivers have buggy implementations of glDraw*BaseVertex*.
Some drivers ignore GL_CLIP_DISTANCEi_EXT state.
Some drivers incorrectly apply GL_CLIP_ORIGIN_EXT state.
Some drivers lose context when repeatedly generating mipmaps on textures that were used as framebuffers.
Some drivers require a complete framebuffer when beginQuery for TimeElapsed orTimestampis called.
Some drivers return 0 when MAX_VERTEX_ATTRIB_STRIED queried
Some drivers return bogus values for GetMscRate, so we clamp it to 30Hz
Some drivers track CopyTex{Sub}Image texture dependencies incorrectly. Flush before glDeleteTextures in this case
Some users rely on a lost context notification if a GL_OUT_OF_MEMORY error occurs
Source texture internal format is invalid.
Source texture is not a valid texture object.
Source texture must be a valid texture type.
Source texture must have a compressed internal format.
Source texture must level 0 defined.
Specified unit must be in [GL_TEXTURE0, GL_TEXTURE0 + GL_MAX_COMBINED_IMAGE_UNITS)
Specified unit must be in [GL_TEXTURE0, GL_TEXTURE0 + GL_MAX_TEXTURE_UNITS)
Speculative fix for issues on Linux/Wayland where exposing GLX_OML_sync_control renders Chrome unusable
Sso3<g
St13runtime_error
St14overflow_error
St8bad_cast
St9bad_alloc
St9exception
St9type_info
StagingImage
Stencil reference and mask values must be the same for front facing and back facing triangles.
Storage blocks:
Storage qualifiers have to be after interpolation qualifiers.
Storage qualifiers have to be after layout qualifiers.
Stream consumer extension not active
Stream extension not active
Stream not fully configured
Stream not in connecting state
Stream producer extension not active
Stride is over the maximum stride allowed by WebGL.
Stride must be a multiple of the passed in datatype.
Stride must be within [0, MAX_VERTEX_ATTRIB_STRIDE).
Strip precise kernel and DRM version information from amdgpu renderer strings.
Struct cannot be captured directly (
Struct nesting
Structure constructor arguments do not match structure fields
Structure name
Sub-Totals per type:
Suballocations
Submit commands to driver at each FBO boundary for performance improvements.
Submit commands to driver when last GL_ANY_SAMPLES_PASSED query is made for performance improvements.
Subpass #0, and pColorAttachments #0. Access info (usage: SYNC_COLOR_ATTACHMENT_OUTPUT_COLOR_ATTACHMENT_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdEndRenderPass
Support passthrough of EGL colorspace attribute values
Surface can only be current on one thread
Surface cannot be EGL_NO_SURFACE.
Surface cannot be current to a context for eglLockSurface()
Surface cannot be protected content for eglLockSurface()
Surface does not support EGL_MULTISAMPLE_RESOLVE_BOX.
Surface does not support EGL_SWAP_BEHAVIOR_PRESERVED.
Surface is not locked
Surface is not locked.
Surface not compatible with Context API.
Surface not compatible with OpenGL Desktop.
Surface not compatible with OpenGL ES 1.x.
Surface not compatible with OpenGL ES 2.x.
Surface not compatible with OpenGL ES 3.x.
Surface supports the EGL_KHR_lock_surface3 extension
Surface type is not compatible.
SwZt
Swap surface cannot be EGL_NO_SURFACE.
SwapchainDepthStencilImage
SwapchainMSAAImage
SwiftShader Devi
Switch\n
Switching framebuffers without a flush can lead to crashes on Intel 9th Generation GPU Macs.
Sync object does not exist.
SyncHelper::clientWait
SyncHelper::clientWait block (unlocked)
SyncHelperNativeFence::clientWait
SyncHelperNativeFence::clientWait block (unlocked)
T=4R
TESS_CONTROL
TESS_EVALUATION
THR?
TJzl
TMPDIR
Target is TRANSFORM_FEEDBACK_BUFFER and transform feedback is currently active.
Target must be TEXTURE_2D_MULTISAMPLE_ARRAY_OES.
Target must be TEXTURE_BUFFER.
Temporary
Temporary render pass used for image clear closed
Temporary render pass used for image copy closed
Temporary render pass used for overlay draw closed
Ternary selection
Tessellation control
Tessellation control and evaluation shaders must be specified together.
Tessellation evaluation
Tessellation interface variables must be declared as an array
Tessellation requires both control and evaluation shaders.
Tessellation shaders are not supported in this shader version.
Test
TexSubImage with unpack buffer copied on CPU due to store, format or offset restrictions
Textarget must match the texture target type.
Textarget must match the texture target type. Requested: %d Texture's: %d label: %s
Texture Tilling Mode must be OPTIMAL_TILING_EXT or LINEAR_TILING_EXT
Texture base level out of range
Texture buffer extension not available.
Texture buffer offset + size must be less than or equal to BUFFER_SIZE.
Texture buffer size must be a positive integer.
Texture component must be a constant expression
Texture copied on CPU due to format restrictions
Texture dimensions must all be greater than zero.
Texture dimensions must be power-of-two.
Texture filter not recognized.
Texture format does not support mipmap generation.
Texture formats are not compatible
Texture has incompatible target.
Texture is compressed, call GetCompressedTexImage instead.
Texture is immutable.
Texture is not a three-dimensional, two-dimensional array, two-dimensional multisample array, cube map, or cube map array texture.
Texture is not compressed, call GetTexImage instead.
Texture is not cubemap complete. All cubemaps faces must be defined and be the same size.
Texture is not immutable.
Texture is not the name of an immutable texture object or a buffer texture.
Texture is null
Texture level does not exist.
Texture level must be zero.
Texture offset must be a constant expression
Texture offset value out of valid range
Texture offsets must be a constant expression
Texture offsets must be an array of 4 elements
Texture only supports NEAREST and LINEAR filtering.
Texture wrap mode not recognized.
TextureVk::copyBufferDataToImage
TextureVk::copyImageDataToBufferAndGetData
The Tessellation Evaluation Shader object in a program must declare a primitive mode in its input layout.
The Vulkan driver does not support texture format 0x%04X, emulating with 0x%04X
The Vulkan driver does not support vertex attribute format 0x%04X, emulating with 0x%04X
The active Transform Feedback object is not paused.
The active Transform Feedback object is paused.
The active program has specified no output variables to record.
The active read framebuffer object has multiview attachments.
The array must be sized by the shader either redeclaring it with a size or indexing it only with constant integral expressions
The cubemap depth must be a multiple of 6.
The current context doesn't support setting a non-zero divisor on the attribute with index zero. Please reorder the attributes in your vertex shader so that attribute zero can have a zero divisor.
The default framebuffer must have exactly one draw buffer.
The destination level of the destination texture must be defined.
The display used by a swapchain does not use the same presentable image layout, or is incompatible in a way that prevents sharing an image
The draw command is unsupported when transform feedback is active and not paused.
The explicit flushing bit may only be set if the buffer is mapped for writing.
The interpolation qualifier specified multiple times.
The invariant qualifier has to be first in the expression.
The invariant qualifier specified multiple times.
The layout qualifier and invariant qualifier cannot coexist in the same declaration according to the grammar.
The layout qualifier specified multiple times.
The length() method cannot be called on an array that is not runtime sized and also has not yet been explicitly sized
The logical or physical device has been lost
The memory object is immutable.
The number of views in the active program and draw framebuffer does not match.
The point size range reported from the API is inconsistent with the actual behavior
The precise qualifier specified multiple times.
The precision qualifier specified multiple times.
The program must contain objects to form both a vertex and fragment shader.
The provided parameters overflow with the provided buffer.
The read and write copy regions alias memory.
The requested version of Vulkan is not supported by the driver or is otherwise incompatible for implementation-specific reasons
The requested window is already connected to a VkSurfaceKHR, or to some other non-Vulkan API
The source EGL image is incompatible with the target texture type.
The specified dimensions are outside of the bounds of the texture.
The std430 layout is supported only for shader storage blocks.
The sum of 'gl_ClipDistance' and 'gl_CullDistance' size is greater than gl_MaxCombinedClipAndCullDistances (
The sum of the number of active image uniforms, active shader storage blocks and active fragment shader outputs exceeds MAX_COMBINED_SHADER_OUTPUT_RESOURCES (
The sum of the number of active shader storage blocks exceeds MAX_COMBINED_SHADER_STORAGE_BLOCKS (
The sum of the number of active uniform blocks exceeds MAX_COMBINED_UNIFORM_BLOCKS (
The surface must be current to the current context in order to query buffer age per extension EGL_EXT_buffer_age.
The texture is a non-power-of-two texture.
The texture is not complete.
The validation layers detected invalid API usage
The value of TEXTURE_IMMUTABLE_FORMAT for the texture currently bound to target on the active texture unit is true.
The value passed to the mem argument of an atomic memory function does not correspond to a buffer or shared variable.
There is an active query for target GL_TIME_ELAPSED_EXT when the number of views in the active draw framebuffer is greater than 1.
There is an active transform feedback object when the number of views in the active draw framebuffer is greater than 1.
There is no current program object specified by UseProgram, there is a current program pipeline object, and that object is empty (no executable code is installed for any stage).
Third Party
This ANGLE implementation does not support separate front/back stencil writemasks, reference values, or stencil mask values.
This device type requires a platform type of EGL_PLATFORM_ANGLE_TYPE_D3D9_ANGLE or EGL_PLATFORM_ANGLE_TYPE_D3D9_ANGLE.
This device type requires a platform type of EGL_PLATFORM_ANGLE_TYPE_VULKAN_ANGLE.
This type of loop is not allowed
Timeout must be positive
Too many arguments for macro
Too many attributes (
Too many fields in the struct (limit is 16383)
Too many objects of the type have already been created
Total size of declared private variables exceeds implementation-defined limit
TotalBytes
Toxueu
TransferDst
TransferDstAndComputeWrite
TransferSrc
TransferSrcDst
Transform feedback has a buffer bound to multiple outputs.
Transform feedback is already active.
Transform feedback object that does not exist.
Transform feedback uses the VK_EXT_transform_feedback extension.
Transform feedback varying 
Transform feedback varying total components (
Translated shader substitute found, loading from 
Tried to destroy non-wrapper proxy with wl_proxy_wrapper_destroy\n
Tried to destroy wrapper with wl_proxy_destroy()\n
Trying to decompress ASTC without having ASTC support built.
Turnip
Two textures of different types use the same sampler location.
Two transform feedback varyings include the same array element (
Two transform feedback varyings specify the same output variable (
Type is INT_10_10_10_2_OES or UNSIGNED_INT_10_10_10_2_OES and size is not 3 or 4.
Type is INT_2_10_10_10_REV or UNSIGNED_INT_2_10_10_10_REV and size is not 4.
U>Oj_W
U>b8b(
UNASSIGNED-CoreValidation-DrawState-InvalidImageLayout
UNIFORM_BUFFERS
UNIFORM_COMPONENTS
UNIFORM_VECTORS
UNKOWN ERROR: 
UNbgVb
UNwu
UOhw
USY9
UYWr1
UbZD'D.
Ufh|
Undefined
Undefined behavior
Undefined function '
Undefined shift (operand out of range)
Undefined-Value-ShaderFragmentOutputMismatch
Undefined-Value-ShaderInputNotProduced
Undefined-Value-ShaderOutputNotConsumed
Unexpected driver error.
Unexpected transformation after AST post-processing
Unexpected values while unpacking chunk index 0: 
Unhandled internal error: 
Uniform blocks:
Uniform location out of range
Uniform size does not match uniform method.
Uniform type does not match uniform method.
Unknown
Unknown EGL color buffer type 
Unknown GPU architecture
Unknown Severity
Unknown Source
Unknown Type
Unknown attribute: 0x%04X
Unknown attribute: 0x%04lx
Unknown attribute: 0x%04lxX
Unknown constant\n
Unknown dma_buf format 
Unknown error %d
Unknown error.
Unknown internalFormat: 
Unknown parameter value.
Unknown platform type.
Unknown sType: 
Unknown vulkan error code
Unpack alignment must be 1, 2, 4 or 8.
Unreachable Code.
Unrecognized shader stage bit.
Unsigned integers are unsupported prior to GLSL ES 3.00
Unsized global array type: 
Unspecified
Unsupported API.
Unsupported EGL version (require at least 1.4).
Unsupported GLX version (requires at least 1.3).
Unsupported requested context version
Unused std140 or shared uniform blocks will be treated as inactive
UnusedBytes
UnusedRanges
Up1\
Upload image data on host
Upload texture data in <120kb chunks to work around Mac driver hangs and crashes.
Usage flags must only include bits defined by GL_ANGLE_external_objects_flags
Use CommandQueue worker thread to dispatch work to GPU.
Use VK_COLOR_SPACE_PASS_THROUGH_EXT for EGL_NONE or unspecifed color spaces
Use VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT for initializing SecondaryCommandPools when using VulkanSecondaryCommandBuffer. 
Use VK_KHR_fragment_shading_rate extension to implement QCOM foveated rendering extensions
Use non-immutable texture allocation to work around a driver bug.
Use the Cull Mode dynamic state from VK_EXT_extended_dynamic_state
Use the Depth Bias Enable dynamic state from VK_EXT_extended_dynamic_state2
Use the Depth Compare Op dynamic state from VK_EXT_extended_dynamic_state
Use the Depth Test Enable dynamic state from VK_EXT_extended_dynamic_state
Use the Depth Write Enable dynamic state from VK_EXT_extended_dynamic_state
Use the Front Face dynamic state from VK_EXT_extended_dynamic_state
Use the Primitive Restart Enable dynamic state from VK_EXT_extended_dynamic_state2
Use the Rasterizer Discard Enable dynamic state from VK_EXT_extended_dynamic_state2
Use the Stencil Op dynamic state from VK_EXT_extended_dynamic_state
Use the Stencil Test Enable dynamic state from VK_EXT_extended_dynamic_state
Use the Vertex Input Bininding Stride dynamic state from VK_EXT_extended_dynamic_state
Use the compute path to generate mipmaps on devices that meet the minimum requirements, and the performance is better.
Uses VkEvent instead of VkCmdPipelineBarrier for image barriers
Using '-<float>' will get wrong answer
Using glClear for robust resource initialization is buggy on some drivers and leads to texture corruption. Default to data uploads except on MacOS where it is very slow.
Using isnan() on highp float will get wrong answer
Utilize VMA for image memory suballocation.
UzWlb
U|o3
U~jM
V2G{Fh
V8Y\
VERTEX
VK_ARM_rasterization_order_attachment_access
VK_EXT_blend_operation_advanced
VK_EXT_custom_border_color
VK_EXT_debug_utils
VK_EXT_depth_clip_control
VK_EXT_external_memory_dma_buf
VK_EXT_fragment_shader_interlock
VK_EXT_graphics_pipeline_library
VK_EXT_headless_surface
VK_EXT_host_image_copy
VK_EXT_host_query_reset
VK_EXT_image_drm_format_modifier
VK_EXT_index_type_uint8
VK_EXT_legacy_dithering
VK_EXT_line_rasterization
VK_EXT_load_store_op_none
VK_EXT_memory_budget
VK_EXT_multisampled_render_to_single_sampled
VK_EXT_physical_device_drm
VK_EXT_pipeline_creation_feedback
VK_EXT_pipeline_protected_access
VK_EXT_pipeline_robustness
VK_EXT_primitive_topology_list_restart
VK_EXT_primitives_generated_query
VK_EXT_provoking_vertex
VK_EXT_rasterization_order_attachment_access
VK_EXT_shader_stencil_export
VK_EXT_surface_maintenance1
VK_EXT_swapchain_colorspace
VK_EXT_swapchain_maintenance1
VK_EXT_transform_feedback
VK_EXT_vertex_attribute_divisor
VK_EXT_vertex_input_dynamic_state
VK_FORMAT_D16_UNORM does not support VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT, which prevents OES_depth_texture from being supported.
VK_FUCHSIA_external_memory
VK_FUCHSIA_external_semaphore
VK_GOOGLEX_multisampled_render_to_single_sampled
VK_GOOGLE_display_timing
VK_GOOGLE_surfaceless_query
VK_ICD_FILENAMES
VK_KHR_16bit_storage
VK_KHR_8bit_storage
VK_KHR_copy_commands2
VK_KHR_create_renderpass2
VK_KHR_depth_stencil_resolve
VK_KHR_display
VK_KHR_driver_properties
VK_KHR_external_fence_fd
VK_KHR_external_memory_fd
VK_KHR_external_semaphore_fd
VK_KHR_format_feature_flags2
VK_KHR_fragment_shading_rate
VK_KHR_get_surface_capabilities2
VK_KHR_imageless_framebuffer
VK_KHR_incremental_present
VK_KHR_multiview
VK_KHR_pipeline_library
VK_KHR_portability_enumeration
VK_KHR_sampler_mirror_clamp_to_edge
VK_KHR_sampler_ycbcr_conversion
VK_KHR_shader_float16_int8
VK_KHR_shader_subgroup_extended_types
VK_KHR_shared_presentable_image
VK_KHR_surface
VK_KHR_surface_protected_capabilities
VK_KHR_swapchain
VK_KHR_synchronization2
VK_KHR_timeline_semaphore
VK_KHR_wayland_surface
VK_KHR_xcb_surface
VK_LAYER_CUSTOM_STYPE_LIST
VK_LAYER_GOOGLE_threading
VK_LAYER_GOOGLE_unique_objects
VK_LAYER_KHRONOSColorEXT
VK_LAYER_KHRONOS_validation
VK_LAYER_LUNARG_core_validation
VK_LAYER_LUNARG_object_tracker
VK_LAYER_LUNARG_parameter_validation
VK_LAYER_LUNARG_standard_validation
VK_LAYER_PATH
VK_NULL_HANDLE
VK_QCOM_render_pass_store_ops
VKlUU
VMware
VUID-VkBufferViewCreateInfo-format-08779
VUID-VkDescriptorImageInfo-descriptorType-06713
VUID-VkDescriptorImageInfo-imageView-06711
VUID-VkDescriptorImageInfo-imageView-07796
VUID-VkGraphicsPipelineCreateInfo-Input-07904
VUID-VkGraphicsPipelineCreateInfo-Input-07905
VUID-VkGraphicsPipelineCreateInfo-Input-08733
VUID-VkGraphicsPipelineCreateInfo-pStages-00738
VUID-VkGraphicsPipelineCreateInfo-topology-08773
VUID-VkImageCreateInfo-pNext-00990
VUID-VkImageCreateInfo-pNext-02397
VUID-VkImageViewCreateInfo-pNext-01585
VUID-VkImportMemoryFdInfoKHR-handleType-00667
VUID-VkImportMemoryWin32HandleInfoKHR-handleType-00658
VUID-VkMemoryAllocateInfo-allocationSize-01742
VUID-VkMemoryDedicatedAllocateInfo-image-01878
VUID-VkPipelineInputAssemblyStateCreateInfo-topology-06252
VUID-VkPipelineVertexInputStateCreateInfo-pNext-pNext
VUID-VkRenderPassBeginInfo-renderPass-00904
VUID-VkVertexInputBindingDivisorDescriptionEXT-divisor-01870
VUID-VkVertexInputBindingDivisorDescriptionKHR-divisor-01870
VUID-vkCmdBindVertexBuffers2-pStrides-06209
VUID-vkCmdBlitImage-srcImage-00240
VUID-vkCmdDraw-Input-08734
VUID-vkCmdDraw-None-06550
VUID-vkCmdDraw-None-06886
VUID-vkCmdDraw-None-06887
VUID-vkCmdDraw-None-08608
VUID-vkCmdDraw-None-09000
VUID-vkCmdDraw-None-09002
VUID-vkCmdDraw-None-09003
VUID-vkCmdDraw-format-07753
VUID-vkCmdDraw-magFilter-04553
VUID-vkCmdDraw-pNext-09461
VUID-vkCmdDrawIndexed-None-06887
VUID-vkCmdDrawIndexed-None-07835
VUID-vkCmdDrawIndexed-None-08608
VUID-vkCmdDrawIndexed-None-09000
VUID-vkCmdDrawIndexed-None-09002
VUID-vkCmdDrawIndexed-None-09003
VUID-vkCmdDrawIndexed-format-07753
VUID-vkCmdDrawIndexed-magFilter-04553
VUID-vkCmdEndDebugUtilsLabelEXT-commandBuffer-01912
VUID-vkCmdExecuteCommands-pCommandBuffers-00099
VUID-vkDestroySemaphore-semaphore-01137
VUID-vkDestroySemaphore-semaphore-05149
ValidateBlendFuncSeparate
ValidateCreatePlatformPixmapSurfaceEXT unimplemented.
ValidateDrawStates
ValidateEnable
ValidateVertexAttribDivisorANGLE
Validation Cache
Value must be greater than zero.
Value must be less than or equal to MAX_PATCH_SIZE.
Various rendering bugs have been observed when using higher MSAA counts
Varying '
VerifyExtensionsPresent
Vertex array does not exist.
Vertex attribute size must be 1, 2, 3, or 4.
Vertex buffer is not big enough for the draw call
Vertex shader input type does not match the type of the bound vertex attribute.
VertexArrayVk::convertVertexBufferCpu
VertexShaderReadOnly
VertexShaderWrite
VfG9
ViewIDOVR
Viewport size cannot be negative.
ViewportIndex
VirtIO
Vivante
VkDevice supports VK_ANDROID_render_to_external_format and VK_EXT_ycbcr_attachment
VkDevice supports VK_EXT_blend_operation_advanced extension.
VkDevice supports VK_EXT_color_write_enable extension
VkDevice supports VK_EXT_depth_clip_control extension.
VkDevice supports VK_EXT_extended_dynamic_state extension
VkDevice supports VK_EXT_extended_dynamic_state2 extension
VkDevice supports VK_EXT_host_query_reset extension
VkDevice supports VK_EXT_image_2d_view_of_3d
VkDevice supports VK_EXT_load_store_op_none extension.
VkDevice supports VK_EXT_pipeline_creation_feedback extension
VkDevice supports VK_EXT_pipeline_robustness extension
VkDevice supports VK_EXT_primitive_topology_list_restart extension.
VkDevice supports VK_EXT_primitives_generated_query extension
VkDevice supports VK_EXT_rasterization_order_attachment_access extension
VkDevice supports VK_EXT_vertex_input_dynamic_state extension
VkDevice supports VK_KHR_fragment_shading_rate extension
VkDevice supports VK_KHR_imageless_framebuffer extension
VkDevice supports VK_KHR_synchronization2 extension
VkDevice supports VK_QCOM_render_pass_store_ops extension.
VkDevice supports protected memory
VkDevice supports the EGL_ANDROID_native_fence_sync extension
VkDevice supports the VK_ANDROID_external_format_resolve extension
VkDevice supports the VK_ANDROID_external_memory_android_hardware_buffer extension
VkDevice supports the VK_EXT_custom_border_color extension
VkDevice supports the VK_EXT_depth_clamp_zero_one extension
VkDevice supports the VK_EXT_external_memory_dma_buf and VK_EXT_image_drm_format_modifier extensions
VkDevice supports the VK_EXT_external_memory_host extension
VkDevice supports the VK_EXT_fragment_shader_interlock extension and has the fragmentShaderPixelInterlock feature
VkDevice supports the VK_EXT_full_screen_exclusive extension
VkDevice supports the VK_EXT_graphics_pipeline_library extension
VkDevice supports the VK_EXT_host_image_copy extension
VkDevice supports the VK_EXT_index_type_uint8 extension
VkDevice supports the VK_EXT_legacy_dithering extension
VkDevice supports the VK_EXT_memory_budget extension.
VkDevice supports the VK_EXT_multisampled_render_to_single_sampled extension
VkDevice supports the VK_EXT_pipeline_protected_access extension
VkDevice supports the VK_EXT_shader_stencil_export extension
VkDevice supports the VK_EXT_surface_maintenance1 and VK_EXT_swapchain_maintenance1 extensions
VkDevice supports the VK_EXT_surface_maintenance1 extension
VkDevice supports the VK_FUCHSIA_external_memory extension
VkDevice supports the VK_FUCHSIA_external_semaphore extension
VkDevice supports the VK_GGP_frame_token extension
VkDevice supports the VK_GOOGLEX_multisampled_render_to_single_sampled extension
VkDevice supports the VK_KHR_16bit_storage extension and has the storageBuffer16BitAccess feature
VkDevice supports the VK_KHR_16bit_storage extension and has the storageInputOutput16 feature
VkDevice supports the VK_KHR_16bit_storage extension and has the storagePushConstant16 feature
VkDevice supports the VK_KHR_16bit_storage extension and has the uniformAndStorageBuffer16BitAccess feature
VkDevice supports the VK_KHR_8bit_storage extension and has the storageBuffer8BitAccess feature
VkDevice supports the VK_KHR_8bit_storage extension and has the storagePushConstant8 feature
VkDevice supports the VK_KHR_8bit_storage extension and has the uniformAndStorageBuffer8BitAccess feature
VkDevice supports the VK_KHR_bind_memory2 extension
VkDevice supports the VK_KHR_create_renderpass2 extension
VkDevice supports the VK_KHR_depth_stencil_resolve extension
VkDevice supports the VK_KHR_depth_stencil_resolve extension with the independentResolveNone feature
VkDevice supports the VK_KHR_external_fence_fd extension
VkDevice supports the VK_KHR_external_memory_fd extension
VkDevice supports the VK_KHR_external_semaphore_fd extension
VkDevice supports the VK_KHR_format_feature_flags2 extension
VkDevice supports the VK_KHR_get_memory_requirements2 extension
VkDevice supports the VK_KHR_incremental_present extension
VkDevice supports the VK_KHR_multiview extension
VkDevice supports the VK_KHR_sampler_mirror_clamp_to_edge extension
VkDevice supports the VK_KHR_sampler_ycbcr_conversion extension
VkDevice supports the VK_KHR_shader_float16_int8 extension and has the shaderFloat16 feature
VkDevice supports the VK_KHR_timeline_semaphore extension
VkDevice supports the imageCubeArray feature properly
VkDevice supports the logicOp feature of VK_EXT_extended_dynamic_state2 extension
VkDevice supports the mixed read and write depth/stencil layouts introduced by VK_KHR_maintenance2
VkDevice supports the multiDrawIndirect extension
VkDevice supports the pipelineStatisticsQuery feature
VkDevice supports the sampler2DViewOf3D feature of VK_EXT_image_2d_view_of_3d
VkDisplay supports presentation through a present family queue
VkInstance supports the VK_GOOGLE_surfaceless_query extension
VkInstance supports the VK_KHR_external_fence_capabilities extension
VkInstance supports the VK_KHR_external_semaphore_capabilities extension
VkInstance supports the VK_KHR_get_surface_capabilities2 extension
VkInstance supports the VK_KHR_surface_protected_capabilities extension
VkSurface supports the VK_KHR_shared_presentable_images extension
VkSurface supportsProtected for protected swapchains
Vulkan 
Vulkan Mock Devi
Vulkan app workarounds
Vulkan considers vertex attribute accesses to count up to the last multiple of the stride. This additional access supports AMD's robust buffer access implementation. AMDVLK in particular will return incorrect values when the vertex access extends into the range that would be the stride padding and the buffer is too small. This workaround limits GL_MAX_VERTEX_ATTRIB_STRIDE to a maximum value and pads up every buffer allocation size to be a multiple of the maximum stride.
Vulkan features
Vulkan platform is unsupported.
Vulkan supports VK_KHR_portability_enumeration extension
Vulkan swapchain is not returning VK_ERROR_OUT_OF_DATE when window resizing
Vulkan validation layers are missing.
Vulkan workarounds
VvNg
Vw^0
Vw^|kVF
Vwr8
Vx)%G
W!nc_{v
W3kPK
W6Uw
WARN
WARNING
WARNING: 
WAYLAND_DEBUG
WAYLAND_DISPLAY
WAYLAND_SOCKET
WCSF
WF,Oc
WKjK
WV}O
W_7'2
Waiting on an unsubmitted serial.
Warm up the Vulkan pipeline cache at link time
Wayland window is not valid: 
WebGPU platform is unsupported.
Wg&L
When EXT_separate_shader_objects is enabled, both gl_Position and gl_PointSize must be redeclared before either is used
When GL_PRIMITIVE_RESTART_FIXED_INDEX is not available, emulate it with GL_PRIMITIVE_RESTART and glPrimitiveRestartIndex.
When tessellation is active the primitive mode must be GL_PATCHES.
When tessellation is not active the primitive mode must not be GL_PATCHES.
When uploading textures from an pack buffer, some drivers count an extra row padding
When uploading textures from an unpack buffer, some drivers count an extra row padding
When using VK_EXT_host_image_copy, allow VK_IMAGE_USAGE_HOST_TRANSFER_BIT_EXT even ifperf query indicates only optimalDeviceAccess, but not identicalMemoryLayout
Whether it's beneficial to merge the pipeline cache for the shaders subset of the pipeline into the monolithic pipeline cache.  Only useful on platforms where monolithic pipelines can reuse blobs from partial pipelines
Whether it's beneficial to store monolithic pipelines in the blob cache when VK_EXT_graphics_pipeline_library is in use.  Otherwise the libraries are stored only, and monolithic pipelines are recreated on every run
Whether monolithic pipelines perform significantly better than libraries
Whether the Vulkan backend supports coherent framebuffer fetch
Whether the Vulkan backend supports non-coherent framebuffer fetch
Whether the context should permanently switch to framebuffer fetch mode on first encounter
Whether the implementation serializes the Vulkan pipeline cache effectively. On some implementations, pipeline cache serialization returns no data, so there is no benefit to serializing it
Width and Height are not supported for this <buftype>
Width and Height must be positive
Width and height must be less than or equal to GL_MAX_TEXTURE_SIZE.
Window System
WindowSurfaceVk::createSwapchain
WindowSurfaceVk::destroy:vkDestroySurfaceKHR
WindowSurfaceVk::lockSurface
WindowSurfaceVk::present
WindowSurfaceVk::swapImpl
WindowSurfaceVk::throttleCPU
Wll"
Wn^l
Work around a driver bug where 0 in stencil write mask static state would make the corresponding dynamic state malfunction in the presence of discard or alpha to coverage
Work group size does not match the previous declaration
Work group size is not specified.
Write shader source to temp directory
Write translated shaders to temp directory
Writeonly value cannot be passed for 'in' or 'inout' parameters.
Wy>N\r
W|7\C
X*gC
X/lg
X4S4
X<a1
XB2B
XClBlRlJlZlFlV
XCloseDisplay
XCreateColormap
XCreateWindow
XDG_RUNTIME_DIR
XDG_SESSION_TYPE
XDestroyWindow
XEl@lH
XFlush
XFree
XFreeColormap
XF~T
XGetErrorText
XGetGeometry
XGetGeometry query failed on pixmap surface: 
XGetVisualInfo
XGetWindowAttributes
XH)T
XIa*
XMapWindow
XMissingExtension
XOpenDisplay
XResizeWindow
XSetErrorHandler
XSync
XYlUU
XextAddDisplay
XextFindDisplay
XextRemoveDisplay
XxwFn'L
Y fQ
Y&n:c
Y0/v
Y1{mb
YCku
YG=r
YR_H
YTg9
YkO"~
YnW!
Ys[n
Ysm2
Z#bj
Z.sd
Z0nq
Z9Mk
ZM)K
ZNgmk(
ZVr^+
Z[,RA
Z\il
Zero divided by zero during constant folding generated NaN
Zero is bound to target.
ZetF
Zjz\v
ZkE#
ZrNg
Zu;aZ
Zz7 \fj
[%7u.%03u] %s%s%s@%u.%s(
[%7u.%03u] discarded [%s]@%d.[event %d](%d fd, %d byte)\n
[%gpX
[%s : %d] RAW: 
[)5ekc
[)xJw
[G9K'C
[IXC
[OSQ
[YYlse
[dMD
[destroyed object]: error %d: %s\n
[kMaxClipPlanes] = bool[kMaxClipPlanes](
[kMaxLights] = bool[kMaxLights](
[kMaxTexUnits] = bool[kMaxTexUnits](
[kMaxTexUnits] = uint[kMaxTexUnits](
[kSQ
[lUE
[ojXHlgjX
[unknown]
\0\tYi
\5NJ
\5lq
\CQ4
\Fg2
\Jrt
\aXg
\fo\vg~e2
\fqnr
\nPaste the following SPIR-V binary in https://www.khronos.org/spir/visualizer/\n\nSetting the environment variable ANGLE_FEATURE_OVERRIDES_ENABLED=retainSPIRVDebugInfo will retain debug info\n\n
\nRKE(
\nShared memory size exceeds GL_MAX_COMPUTE_SHARED_MEMORY_SIZE
\nThe total number of invocations within a work group exceeds MAX_COMPUTE_WORK_GROUP_INVOCATIONS.
\n\n// Texture units ///////////////////////////////////////////////////////////////\n\n// These are not arrays because hw support for arrays\n// of samplers is rather lacking.\n\nuniform mediump sampler2D tex_sampler0;\nuniform mediump samplerCube tex_cube_sampler0;\n\nuniform mediump sampler2D tex_sampler1;\nuniform mediump samplerCube tex_cube_sampler1;\n\nuniform mediump sampler2D tex_sampler2;\nuniform mediump samplerCube tex_cube_sampler2;\n\nuniform mediump sampler2D tex_sampler3;\nuniform mediump samplerCube tex_cube_sampler3;\n\nuniform mediump vec4 texture_env_color[kMaxTexUnits];\nuniform mediump float texture_env_rgb_scale[kMaxTexUnits];\nuniform mediump float texture_env_alpha_scale[kMaxTexUnits];\n\n// Vertex attributes////////////////////////////////////////////////////////////\n\nin vec4 pos_varying;\nin vec3 normal_varying;\nin mediump vec4 color_varying;\nflat in mediump vec4 color_varying_flat;\n#if kTexUnits >= 1u\nin mediump vec3 texcoord0_varying;\n#endif\n#if kTexUnits >= 2u\nin mediump vec3 texcoord1_varying;\n#endif\n#if kTexUnits >= 3u\nin mediump vec3 texcoord2_varying;\n#endif\n#if kTexUnits >= 4u\nin mediump vec3 texcoord3_varying;\n#endif\n\n// Alpha test///////////////////////////////////////////////////////////////////\n\nuniform mediump float alpha_test_ref;\n\n// Fog /////////////////////////////////////////////////////////////////////////\n\nuniform float fog_density;\nuniform float fog_start;\nuniform float fog_end;\nuniform mediump vec4 fog_color;\n\n// User clip plane /////////////////////////////////////////////////////////////\n\nuniform vec4 clip_planes[kMaxClipPlanes];\n\n// Logic Op ////////////////////////////////////////////////////////////////////\n\n// Format is:\n// - 4x4 bits depicting the bit width of each channel of color output\n// - 4 bits for the op based on LogicalOperation's packing\nuniform highp uint logic_op;\n\n// Point rasterization//////////////////////////////////////////////////////////\n\n// GL_OES_draw_texture//////////////////////////////////////////////////////////\n
\n\nbool doAlphaTest(mediump vec4 currentFragment)\n{\n    bool shouldPassAlpha   = false;\n    mediump float incAlpha = currentFragment.a;\n\n    switch (alpha_func)\n    {\n        case kNever:\n            shouldPassAlpha = false;\n            break;\n        case kLess:\n            shouldPassAlpha = incAlpha < alpha_test_ref;\n            break;\n        case kLequal:\n            shouldPassAlpha = incAlpha <= alpha_test_ref;\n            break;\n        case kEqual:\n            shouldPassAlpha = incAlpha == alpha_test_ref;\n            break;\n        case kGequal:\n            shouldPassAlpha = incAlpha >= alpha_test_ref;\n            break;\n        case kGreater:\n            shouldPassAlpha = incAlpha > alpha_test_ref;\n            break;\n        case kNotequal:\n            shouldPassAlpha = incAlpha != alpha_test_ref;\n            break;\n        case kAlways:\n        default:\n            shouldPassAlpha = true;\n            break;\n    }\n\n    return shouldPassAlpha;\n}\n\nbool doClipPlaneTest()\n{\n    bool res = true;\n\n    for (uint i = 0u; i < kMaxClipPlanes; i++)\n    {\n        if (clip_plane_enables[i])\n        {\n            float dist = dot(clip_planes[i].xyz, pos_varying.xyz) + clip_planes[i].w * pos_varying.w;\n            res        = res && (dist >= 0.0);\n        }\n    }\n\n    return res;\n}\n\nmediump vec4 doFog(mediump vec4 currentFragment)\n{\n\n    float eyeDist = -pos_varying.z / pos_varying.w;\n    float f       = 1.0;\n    switch (fog_mode)\n    {\n        case kExp:\n            f = exp(-fog_density * eyeDist);\n            break;\n        case kExp2:\n            f = exp(-(pow(fog_density * eyeDist, 2.0)));\n            break;\n        case kLinear:\n            f = (fog_end - eyeDist) / (fog_end - fog_start);\n            break;\n        default:\n            break;\n    }\n\n    f = clamp(f, 0.0, 1.0);\n    mediump vec4 result = vec4(f * currentFragment.rgb + (1.0 - f) * fog_color.rgb, currentFragment.a);\n    return result;\n}\n
\n\nbool isTextureUnitEnabled(uint unit)\n{\n    return enable_texture_2d[unit] || enable_texture_cube_map[unit];\n}\n\nmediump vec4 getTextureColor(uint unit)\n{\n    mediump vec4 res;\n\n    switch (unit)\n    {\n#if kTexUnits >= 1u\n        case 0u:\n            if (enable_texture_2d[0])\n            {\n                res = texture(tex_sampler0, texcoord0_varying.xy);\n            }\n            else if (enable_texture_cube_map[0])\n            {\n                res = texture(tex_cube_sampler0, texcoord0_varying);\n            }\n            break;\n#endif\n#if kTexUnits >= 2u\n        case 1u:\n            if (enable_texture_2d[1])\n            {\n                res = texture(tex_sampler1, texcoord1_varying.xy);\n            }\n            else if (enable_texture_cube_map[1])\n            {\n                res = texture(tex_cube_sampler1, texcoord1_varying);\n            }\n            break;\n#endif\n#if kTexUnits >= 3u\n        case 2u:\n            if (enable_texture_2d[2])\n            {\n                res = texture(tex_sampler2, texcoord2_varying.xy);\n            }\n            else if (enable_texture_cube_map[2])\n            {\n                res = texture(tex_cube_sampler2, texcoord2_varying);\n            }\n            break;\n#endif\n#if kTexUnits >= 4u\n        case 3u:\n            if (enable_texture_2d[3])\n            {\n                res = texture(tex_sampler3, texcoord3_varying.xy);\n            }\n            else if (enable_texture_cube_map[3])\n            {\n                // TODO: Weird stuff happens\n                // res = texture(tex_cube_sampler3, texcoord3_varying);\n            }\n            break;\n#endif\n        default:\n            break;\n    }\n\n    return res;\n}\n\nmediump vec4 getPointSpriteTextureColor(uint unit)\n{\n    mediump vec4 res;\n\n    switch (unit)\n    {\n        case 0u:\n            if (enable_texture_2d[0])\n            {\n                res = texture(tex_sampler0, gl_PointCoord.xy);\n            }\n            break;\n        case 1u:\n            if (enable_texture_2d[1])\n            {\n                res = texture(tex_sampler1, gl_PointCoord.xy);\n            }\n            break;\n        case 2u:\n            if (enable_texture_2d[2])\n            {\n                res = texture(tex_sampler2, gl_PointCoord.xy);\n            }\n            break;\n        case 3u:\n            if (enable_texture_2d[3])\n            {\n                res = texture(tex_sampler3, gl_PointCoord.xy);\n            }\n            break;\n        default:\n            break;\n    }\n\n    return res;\n}\n\nmediump vec3 textureCombineSrcnOpnRgb(uint srcnRgb,\n                                      uint opnRgb,\n                                      mediump vec4 textureEnvColor,\n                                      mediump vec4 vertexColor,\n                                      mediump vec4 texturePrevColor,\n                                      mediump vec4 textureColor)\n{\n    mediump vec3 res;\n    mediump vec4 op;\n\n    switch (srcnRgb)\n    {\n        case kTexture:\n            op = textureColor;\n            break;\n        case kConstant:\n            op = textureEnvColor;\n            break;\n        case kPrimaryColor:\n            op = vertexColor;\n            break;\n        case kPrevious:\n            op = texturePrevColor;\n            break;\n        default:\n            op = texturePrevColor;\n            break;\n    }\n\n    switch (opnRgb)\n    {\n        case kSrcColor:\n            res = op.rgb;\n            break;\n        case kOneMinusSrcColor:\n            res = 1.0 - op.rgb;\n            break;\n        case kSrcAlpha:\n            res = vec3(op.a, op.a, op.a);\n            break;\n        case kOneMinusSrcAlpha:\n            res = vec3(1.0 - op.a, 1.0 - op.a, 1.0 - op.a);\n            break;\n        default:\n            break;\n    }\n\n    return res;\n}\n\nmediump float textureCombineSrcnOpnAlpha(uint srcn,\n                                         uint opn,\n                                         mediump vec4 textureEnvColor,\n                                         mediump vec4 vertexColor,\n                                         mediump vec4 texturePrevColor,\n                                         mediump vec4 textureColor)\n{\n    mediump float res;\n    mediump vec4 op;\n\n    switch (srcn)\n    {\n        case kTexture:\n            op = textureColor;\n            break;\n        case kConstant:\n            op = textureEnvColor;\n            break;\n        case kPrimaryColor:\n            op = vertexColor;\n            break;\n        case kPrevious:\n            op = texturePrevColor;\n            break;\n        default:\n            op = texturePrevColor;\n            break;\n    }\n\n    switch (opn)\n    {\n        case kSrcAlpha:\n            res = op.a;\n            break;\n        case kOneMinusSrcAlpha:\n            res = 1.0 - op.a;\n            break;\n        default:\n            break;\n    }\n\n    return res;\n}\n\nmediump vec4 textureCombine(uint combineRgb,\n                            uint combineAlpha,\n                            uint src0Rgb,\n                            uint src0Alpha,\n                            uint src1Rgb,\n                            uint src1Alpha,\n                            uint src2Rgb,\n                            uint src2Alpha,\n                            uint op0Rgb,\n                            uint op0Alpha,\n                            uint op1Rgb,\n                            uint op1Alpha,\n                            uint op2Rgb,\n                            uint op2Alpha,\n                            mediump vec4 textureEnvColor,\n                            mediump float rgbScale,\n                            mediump float alphaScale,\n                            mediump vec4 vertexColor,\n                            mediump vec4 texturePrevColor,\n                            mediump vec4 textureColor)\n{\n\n    mediump vec3 resRgb;\n    mediump float resAlpha;\n\n    mediump vec3 arg0Rgb;\n    mediump float arg0Alpha;\n    mediump vec3 arg1Rgb;\n    mediump float arg1Alpha;\n    mediump vec3 arg2Rgb;\n    mediump float arg2Alpha;\n    mediump float dotVal;\n\n    arg0Rgb   = textureCombineSrcnOpnRgb(src0Rgb, op0Rgb, textureEnvColor, vertexColor,\n                                       texturePrevColor, textureColor);\n    arg0Alpha = textureCombineSrcnOpnAlpha(src0Alpha, op0Alpha, textureEnvColor, vertexColor,\n                                           texturePrevColor, textureColor);\n\n    if (combineRgb != kReplace)\n    {\n        arg1Rgb = textureCombineSrcnOpnRgb(src1Rgb, op1Rgb, textureEnvColor, vertexColor,\n                                           texturePrevColor, textureColor);\n    }\n\n    if (combineAlpha != kReplace)\n    {\n        arg1Alpha = textureCombineSrcnOpnAlpha(src1Alpha, op1Alpha, textureEnvColor, vertexColor,\n                                               texturePrevColor, textureColor);\n    }\n\n    if (combineRgb == kInterpolate)\n    {\n        arg2Rgb = textureCombineSrcnOpnRgb(src2Rgb, op2Rgb, textureEnvColor, vertexColor,\n                                           texturePrevColor, textureColor);\n    }\n\n    if (combineAlpha == kInterpolate)\n    {\n        arg2Alpha = textureCombineSrcnOpnAlpha(src2Alpha, op2Alpha, textureEnvColor, vertexColor,\n                                               texturePrevColor, textureColor);\n    }\n\n    switch (combineRgb)\n    {\n        case kReplace:\n            resRgb = arg0Rgb;\n            break;\n        case kModulate:\n            resRgb = arg0Rgb * arg1Rgb;\n            break;\n        case kAdd:\n            resRgb = arg0Rgb + arg1Rgb;\n            break;\n        case kAddSigned:\n            resRgb = arg0Rgb + arg1Rgb - 0.5;\n            break;\n        case kInterpolate:\n            resRgb = arg0Rgb * arg2Rgb + arg1Rgb * (1.0 - arg2Rgb);\n            break;\n        case kSubtract:\n            resRgb = arg0Rgb - arg1Rgb;\n            break;\n        default:\n            break;\n    }\n\n    switch (combineAlpha)\n    {\n        case kReplace:\n            resAlpha = arg0Alpha;\n            break;\n        case kModulate:\n            resAlpha = arg0Alpha * arg1Alpha;\n            break;\n        case kAdd:\n            resAlpha = arg0Alpha + arg1Alpha;\n            break;\n        case kAddSigned:\n            resAlpha = arg0Alpha + arg1Alpha - 0.5;\n            break;\n        case kInterpolate:\n            resAlpha = arg0Alpha * arg2Alpha + arg1Alpha * (1.0 - arg2Alpha);\n            break;\n        case kSubtract:\n            resAlpha = arg0Alpha - arg1Alpha;\n            break;\n        default:\n            break;\n    }\n\n    if (combineRgb == kDot3Rgb || combineRgb == kDot3Rgba)\n    {\n        dotVal = 4.0 * dot(arg0Rgb - 0.5, arg1Rgb - 0.5);\n\n        if (combineRgb == kDot3Rgb)\n        {\n            return vec4(dotVal, dotVal, dotVal, resAlpha);\n        }\n        else\n        {\n            return vec4(dotVal, dotVal, dotVal, dotVal);\n        }\n    }\n    else\n    {\n        return vec4(resRgb, resAlpha);\n    }\n}\n\nmediump vec4 textureFunction(uint unit,\n                             uint texFormat,\n                             uint envMode,\n                             uint combineRgb,\n                             uint combineAlpha,\n                             uint src0Rgb,\n                             uint src0Alpha,\n                             uint src1Rgb,\n                             uint src1Alpha,\n                             uint src2Rgb,\n                             uint src2Alpha,\n                             uint op0Rgb,\n                             uint op0Alpha,\n                             uint op1Rgb,\n                             uint op1Alpha,\n                             uint op2Rgb,\n                             uint op2Alpha,\n                             mediump vec4 textureEnvColor,\n                             mediump float rgbScale,\n                             mediump float alphaScale,\n                             mediump vec4 vertexColor,\n                             mediump vec4 texturePrevColor,\n                             mediump vec4 textureColor)\n{\n\n    if (!isTextureUnitEnabled(unit))\n    {\n        return texturePrevColor;\n    }\n\n    mediump vec4 res;\n\n    switch (envMode)\n    {\n        case kReplace:\n            switch (texFormat)\n            {\n                case kAlpha:\n                    res.rgb = texturePrevColor.rgb;\n                    res.a   = textureColor.a;\n                    break;\n                case kRGBA:\n                case kLuminanceAlpha:\n                    res.rgba = textureColor.rgba;\n                    break;\n                case kRGB:\n                case kLuminance:\n                default:\n                    res.rgb = textureColor.rgb;\n                    res.a   = texturePrevColor.a;\n                    break;\n            }\n            break;\n        case kModulate:\n            switch (texFormat)\n            {\n                case kAlpha:\n                    res.rgb = texturePrevColor.rgb;\n                    res.a   = texturePrevColor.a * textureColor.a;\n                    break;\n                case kRGBA:\n                case kLuminanceAlpha:\n                    res.rgba = texturePrevColor.rgba * textureColor.rgba;\n                    break;\n                case kRGB:\n                case kLuminance:\n                default:\n                    res.rgb = texturePrevColor.rgb * textureColor.rgb;\n                    res.a   = texturePrevColor.a;\n                    break;\n            }\n            break;\n        case kDecal:\n            switch (texFormat)\n            {\n                case kRGB:\n                    res.rgb = textureColor.rgb;\n                    res.a   = texturePrevColor.a;\n                    break;\n                case kRGBA:\n                    res.rgb = texturePrevColor.rgb * (1.0 - textureColor.a) +\n                              textureColor.rgb * textureColor.a;\n                    res.a = texturePrevColor.a;\n                    break;\n                case kAlpha:\n                case kLuminance:\n                case kLuminanceAlpha:\n                default:\n                    res.rgb = texturePrevColor.rgb * textureColor.rgb;\n                    res.a   = texturePrevColor.a;\n                    break;\n            }\n            break;\n        case kBlend:\n            switch (texFormat)\n            {\n                case kAlpha:\n                    res.rgb = texturePrevColor.rgb;\n                    res.a   = textureColor.a * texturePrevColor.a;\n                    break;\n                case kLuminance:\n                case kRGB:\n                    res.rgb = texturePrevColor.rgb * (1.0 - textureColor.rgb) +\n                              textureEnvColor.rgb * textureColor.rgb;\n                    res.a = texturePrevColor.a;\n                    break;\n                case kLuminanceAlpha:\n                case kRGBA:\n                default:\n                    res.rgb = texturePrevColor.rgb * (1.0 - textureColor.rgb) +\n                              textureEnvColor.rgb * textureColor.rgb;\n                    res.a = textureColor.a * texturePrevColor.a;\n                    break;\n            }\n            break;\n        case kAdd:\n            switch (texFormat)\n            {\n                case kAlpha:\n                    res.rgb = texturePrevColor.rgb;\n                    res.a   = textureColor.a * texturePrevColor.a;\n                    break;\n                case kLuminance:\n                case kRGB:\n                    res.rgb = texturePrevColor.rgb + textureColor.rgb;\n                    res.a   = texturePrevColor.a;\n                    break;\n                case kLuminanceAlpha:\n                case kRGBA:\n                default:\n                    res.rgb = texturePrevColor.rgb + textureColor.rgb;\n                    res.a   = textureColor.a * texturePrevColor.a;\n                    break;\n            }\n            break;\n        case kCombine:\n            res = textureCombine(combineRgb, combineAlpha, src0Rgb, src0Alpha, src1Rgb, src1Alpha,\n                                 src2Rgb, src2Alpha, op0Rgb, op0Alpha, op1Rgb, op1Alpha, op2Rgb,\n                                 op2Alpha, textureEnvColor, rgbScale, alphaScale, vertexColor,\n                                 texturePrevColor, textureColor);\n            res.rgb *= rgbScale;\n            res.a *= alphaScale;\n            break;\n        default:\n            break;\n    }\n\n    return clamp(res, 0.0, 1.0);\n}\n
\n\nin vec4 pos;\nin vec3 normal;\nin mediump vec4 color;\nin float pointsize;\n#if kTexUnits >= 1u\nin mediump vec4 texcoord0;\n#endif\n#if kTexUnits >= 2u\nin mediump vec4 texcoord1;\n#endif\n#if kTexUnits >= 3u\nin mediump vec4 texcoord2;\n#endif\n#if kTexUnits >= 4u\nin mediump vec4 texcoord3;\n#endif\n\nuniform mat4 projection;\nuniform mat4 modelview;\nuniform mat4 modelview_invtr;\nuniform mat4 texture_matrix[kMaxTexUnits];\n\n// Point rasterization//////////////////////////////////////////////////////////\n\nuniform float point_size_min;\nuniform float point_size_max;\nuniform vec3 point_distance_attenuation;\n\n// Shading: flat shading, lighting, and materials///////////////////////////////\n\nuniform mediump vec4 material_ambient;\nuniform mediump vec4 material_diffuse;\nuniform mediump vec4 material_specular;\nuniform mediump vec4 material_emissive;\nuniform float material_specular_exponent;\n\nuniform mediump vec4 light_model_scene_ambient;\n\nuniform mediump vec4 light_ambients[kMaxLights];\nuniform mediump vec4 light_diffuses[kMaxLights];\nuniform mediump vec4 light_speculars[kMaxLights];\nuniform vec4 light_positions[kMaxLights];\nuniform vec3 light_directions[kMaxLights];\nuniform float light_spotlight_exponents[kMaxLights];\nuniform float light_spotlight_cutoff_angles[kMaxLights];\nuniform float light_attenuation_consts[kMaxLights];\nuniform float light_attenuation_linears[kMaxLights];\nuniform float light_attenuation_quadratics[kMaxLights];\n\n// GL_OES_draw_texture uniforms/////////////////////////////////////////////////\n\nuniform vec4 draw_texture_coords;\nuniform vec2 draw_texture_dims;\nuniform mediump vec4 draw_texture_normalized_crop_rect[kMaxTexUnits];\n\n// Varyings/////////////////////////////////////////////////////////////////////\n\nout vec4 pos_varying;\nout vec3 normal_varying;\nout mediump vec4 color_varying;\nflat out mediump vec4 color_varying_flat;\n#if kTexUnits >= 1u\nout mediump vec3 texcoord0_varying;\n#endif\n#if kTexUnits >= 2u\nout mediump vec3 texcoord1_varying;\n#endif\n#if kTexUnits >= 3u\nout mediump vec3 texcoord2_varying;\n#endif\n#if kTexUnits >= 4u\nout mediump vec3 texcoord3_varying;\n#endif\n\nfloat posDot(vec3 a, vec3 b)\n{\n    return max(dot(a, b), 0.0);\n}\n\nmediump vec4 doLighting(mediump vec4 vertexColor)\n{\n    mediump vec4 materialAmbientActual = material_ambient;\n    mediump vec4 materialDiffuseActual = material_diffuse;\n\n    if (enable_color_material)\n    {\n        materialAmbientActual = vertexColor;\n        materialDiffuseActual = vertexColor;\n    }\n\n    mediump vec4 lightingResult = material_emissive + materialAmbientActual * light_model_scene_ambient;\n\n    for (uint i = 0u; i < kMaxLights; i++)\n    {\n\n        if (!light_enables[i])\n            continue;\n\n        mediump vec4 lightAmbient  = light_ambients[i];\n        mediump vec4 lightDiffuse  = light_diffuses[i];\n        mediump vec4 lightSpecular = light_speculars[i];\n        vec4 lightPos      = light_positions[i];\n        vec3 lightDir      = light_directions[i];\n        float attConst     = light_attenuation_consts[i];\n        float attLinear    = light_attenuation_linears[i];\n        float attQuadratic = light_attenuation_quadratics[i];\n        float spotAngle    = light_spotlight_cutoff_angles[i];\n        float spotExponent = light_spotlight_exponents[i];\n\n        vec3 toLight;\n        if (lightPos.w == 0.0)\n        {\n            toLight = lightPos.xyz;\n        }\n        else\n        {\n            toLight = (lightPos.xyz / lightPos.w - pos_varying.xyz);\n        }\n\n        float lightDist = length(toLight);\n        vec3 toLightNormalized = normalize(toLight);\n        vec3 h                 = toLightNormalized + vec3(0.0, 0.0, 1.0);\n        float ndotL            = posDot(normal_varying, toLightNormalized);\n        float ndoth            = posDot(normal_varying, normalize(h));\n\n        float specAtt;\n\n        if (ndotL != 0.0)\n        {\n            specAtt = 1.0;\n        }\n        else\n        {\n            specAtt = 0.0;\n        }\n\n        float att;\n\n        if (lightPos.w != 0.0)\n        {\n            float attDenom =\n                (attConst + attLinear * lightDist + attQuadratic * lightDist * lightDist);\n            att = 1.0 / attDenom;\n        }\n        else\n        {\n            att = 1.0;\n        }\n\n        mediump float spot;\n\n        mediump float spotAngleCos = cos(radians(spotAngle));\n        vec3 toSurfaceDir  = -toLightNormalized;\n        mediump float spotDot      = posDot(toSurfaceDir, normalize(lightDir));\n\n        if (spotAngle == 180.0 || lightPos.w == 0.0)\n        {\n            spot = 1.0;\n        }\n        else\n        {\n            if (spotDot < spotAngleCos)\n            {\n                spot = 0.0;\n            }\n            else\n            {\n                spot = pow(spotDot, spotExponent);\n            }\n        }\n\n        mediump vec4 contrib = materialAmbientActual * lightAmbient;\n        contrib += ndotL * materialDiffuseActual * lightDiffuse;\n        if (ndoth > 0.0 && material_specular_exponent > 0.0)\n        {\n            contrib += specAtt * pow(ndoth, material_specular_exponent) * material_specular *\n                       lightSpecular;\n        }\n        else\n        {\n            if (ndoth > 0.0)\n            {\n                contrib += specAtt * material_specular * lightSpecular;\n            }\n        }\n        contrib *= att * spot;\n        lightingResult += contrib;\n    }\n\n    return lightingResult;\n}\n\nconst mediump vec4 drawTextureVertices[6] = vec4[](\n    vec4(0.0, 0.0, 0.0, 1.0),\n    vec4(1.0, 0.0, 0.0, 1.0),\n    vec4(1.0, 1.0, 0.0, 1.0),\n    vec4(0.0, 0.0, 0.0, 1.0),\n    vec4(1.0, 1.0, 0.0, 1.0),\n    vec4(0.0, 1.0, 0.0, 1.0));\n\nmediump vec4 drawTexturePosition(int vertexId)\n{\n    // The texture is drawn in the XY plane, so Z is constant.\n    vec2 positionXY = draw_texture_coords.xy + drawTextureVertices[vertexId].xy * draw_texture_dims;\n    return vec4(positionXY, draw_texture_coords.z, 1.0);\n}\n\nmediump vec3 drawTextureTexCoord(int vertexId, uint textureUnit)\n{\n    // The texture is drawn in the XY plane, so Z is 0.\n    mediump vec2 texCropPos = draw_texture_normalized_crop_rect[textureUnit].xy;\n    mediump vec2 texCropDim = draw_texture_normalized_crop_rect[textureUnit].zw;\n    mediump vec2 texCoords  = texCropPos + drawTextureVertices[vertexId].xy * texCropDim;\n\n    return vec3(texCoords, 0.0);\n}\n\nvec4 calcWorldPosition(vec4 posInput)\n{\n    return modelview * posInput;\n}\n\nvec4 calcNdcFromWorldPosition(vec4 worldPos)\n{\n    return projection * worldPos;\n}\n\nfloat calcPointSize(vec4 ndcPos)\n{\n    float dist         = length(ndcPos.z);\n    float attConst     = point_distance_attenuation[0];\n    float attLinear    = point_distance_attenuation[1];\n    float attQuad      = point_distance_attenuation[2];\n    float attPart      = attConst + attLinear * dist + attQuad * dist * dist;\n    float attPointSize = pointsize / pow(attPart, 0.5);\n\n    return clamp(attPointSize, point_size_min, point_size_max);\n}\n\nvec3 calcNormal(vec3 normalInput)\n{\n    mat3 mvInvTr3 = mat3(modelview_invtr);\n    vec3 result   = mvInvTr3 * normalInput;\n\n    if (enable_rescale_normal)\n    {\n        float rescale   = 1.0;\n        vec3 rescaleVec = vec3(mvInvTr3[2]);\n        float len       = length(rescaleVec);\n        if (len > 0.0)\n        {\n            rescale = 1.0 / len;\n        }\n        result *= rescale;\n    }\n\n    if (enable_normalize)\n    {\n        result = normalize(result);\n    }\n\n    return result;\n}\n\nvoid main()\n{\n    if (enable_draw_texture)\n    {\n        int vertexId        = gl_VertexID;\n        mediump vec4 posDrawTexture = drawTexturePosition(vertexId);\n\n        gl_Position = posDrawTexture;\n        pos_varying = posDrawTexture;\n\n        normal_varying = normal;\n\n        gl_PointSize = pointsize;\n\n#if kTexUnits >= 1u\n        texcoord0_varying = drawTextureTexCoord(vertexId, 0u);\n#endif\n#if kTexUnits >= 2u\n        texcoord1_varying = drawTextureTexCoord(vertexId, 1u);\n#endif\n#if kTexUnits >= 3u\n        texcoord2_varying = drawTextureTexCoord(vertexId, 2u);\n#endif\n#if kTexUnits >= 4u\n        texcoord3_varying = drawTextureTexCoord(vertexId, 3u);\n#endif\n    }\n    else\n    {\n        vec4 worldPos = calcWorldPosition(pos);\n        vec4 ndcPos   = calcNdcFromWorldPosition(worldPos);\n\n        gl_Position = ndcPos;\n        pos_varying = worldPos;\n\n        normal_varying = calcNormal(normal);\n\n        // Avoid calculating point size stuff\n        // if we are not rendering points.\n        if (point_rasterization)\n        {\n            gl_PointSize = calcPointSize(ndcPos);\n        }\n        else\n        {\n            gl_PointSize = pointsize;\n        }\n\n#if kTexUnits >= 1u\n        texcoord0_varying = (texture_matrix[0] * texcoord0).xyz;\n#endif\n#if kTexUnits >= 2u\n        texcoord1_varying = (texture_matrix[1] * texcoord1).xyz;\n#endif\n#if kTexUnits >= 3u\n        texcoord2_varying = (texture_matrix[2] * texcoord2).xyz;\n#endif\n#if kTexUnits >= 4u\n        texcoord3_varying = (texture_matrix[3] * texcoord3).xyz;\n#endif\n    }\n\n    mediump vec4 vertex_color = color;\n\n    if (enable_lighting)\n    {\n        vertex_color = doLighting(color);\n    }\n\n    vertex_color = clamp(vertex_color, vec4(0), vec4(1));\n\n    color_varying      = vertex_color;\n    color_varying_flat = vertex_color;\n}\n
\n]MUz
\nakR
\ninout mediump vec4 frag_color;\n
\nk61
\nlayout(noncoherent) inout mediump vec4 frag_color;\n
\nmediump vec4 applyLogicOp(mediump vec4 currentFragment)\n{\n    mediump vec4 previousFragment = frag_color;\n\n    mediump uvec4 channelWidths = uvec4(logic_op & 0xFu,\n                                        logic_op >> 4u & 0xFu,\n                                        logic_op >> 8u & 0xFu,\n                                        logic_op >> 12u & 0xFu);\n\n    mediump uvec4 channelMasks = (uvec4(1) << channelWidths) - 1u;\n\n    mediump uvec4 src = uvec4(round(currentFragment * vec4(channelMasks)));\n    mediump uvec4 dst = uvec4(round(previousFragment * vec4(channelMasks)));\n    mediump uvec4 result;\n\n    switch (logic_op >> 16u & 0xFu)\n    {\n        case kAnd:\n            result = src & dst;\n            break;\n        case kAndInverted:\n            result = ~src & dst;\n            break;\n        case kAndReverse:\n            result = src & ~dst;\n            break;\n        case kClear:\n            result = uvec4(0);\n            break;\n        case kCopy:\n            result = src;\n            break;\n        case kCopyInverted:\n            result = ~src;\n            break;\n        case kEquiv:\n            result = ~(src ^ dst);\n            break;\n        case kInvert:\n            result = ~dst;\n            break;\n        case kNand:\n            result = ~(src & dst);\n            break;\n        case kNoop:\n            result = dst;\n            break;\n        case kNor:\n            result = ~(src | dst);\n            break;\n        case kOr:\n            result = src | dst;\n            break;\n        case kOrInverted:\n            result = ~src | dst;\n            break;\n        case kOrReverse:\n            result = src | ~dst;\n            break;\n        case kSet:\n            result = channelMasks;\n            break;\n        case kXor:\n            result = src ^ dst;\n            break;\n    }\n\n    result &= channelMasks;\n\n    // Avoid division by zero for formats without alpha\n    channelMasks.a = max(channelMasks.a, 1u);\n\n    return vec4(result) / vec4(channelMasks);\n}\n
\nmediump vec4 applyLogicOp(mediump vec4 currentFragment)\n{\n    return currentFragment;\n}\n
\nout mediump vec4 frag_color;\n
\nvoid main()\n{\n    if (enable_clip_planes && !enable_draw_texture)\n    {\n        if (!doClipPlaneTest())\n        {\n            discard;\n        }\n    }\n\n    mediump vec4 vertex_color;\n\n    if (shade_model_flat)\n    {\n        vertex_color = color_varying_flat;\n    }\n    else\n    {\n        vertex_color = color_varying;\n    }\n\n    mediump vec4 currentFragment = vertex_color;\n\n    mediump vec4 texturePrevColor = currentFragment;\n\n    for (uint i = 0u; i < kTexUnits; i++)\n    {\n        mediump vec4 textureColor;\n\n        if (point_rasterization && point_sprite_enabled &&\n            point_sprite_coord_replace[i]) {\n            textureColor = getPointSpriteTextureColor(i);\n        } else {\n            textureColor = getTextureColor(i);\n        }\n\n        currentFragment = textureFunction(\n            i, texture_format[i], texture_env_mode[i], combine_rgb[i], combine_alpha[i],\n            src0_rgb[i], src0_alpha[i], src1_rgb[i], src1_alpha[i], src2_rgb[i], src2_alpha[i],\n            op0_rgb[i], op0_alpha[i], op1_rgb[i], op1_alpha[i], op2_rgb[i], op2_alpha[i],\n            texture_env_color[i], texture_env_rgb_scale[i], texture_env_alpha_scale[i],\n            vertex_color, texturePrevColor, textureColor);\n\n        texturePrevColor = currentFragment;\n    }\n\n    if (enable_fog)\n    {\n        currentFragment = doFog(currentFragment);\n    }\n\n    if (enable_alpha_test && !doAlphaTest(currentFragment))\n    {\n        discard;\n    }\n\n    frag_color = applyLogicOp(currentFragment);\n}\n
\r5X1X
\rf9D
\t \t"\t$\t&\t(\t*\t,\t.\t0\t2\t4\t6\t9\t;\t=\t?\t@\tA\tB\tC\tD\tE\tF\tG\tH\tK\tL\tM\tW\t]\t_\ta\tc\te\tm\to\tp\tp\tq\tq\tq\tr\ts\tt\tu\tv\ty\tz\t{\t|\t}\t~\t
\t00D
\tMessage: 
\tSeverity: 
\tSource: 
\tType: 
\t\t\n\n\v\v\f\f\f\f\r\r\r\r
\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r
\tbGb
\tlfB
\tlogMemoryReportCallbacks
\tlogMemoryReportStats
\tu@yV
\v698
\v\fcpf
\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\vgl_TessLevelOute
\vinP
\vl2a
\vovcj
\vx7gf
]F]Jo
]QMO
]ViE
]hhs
]mUh)
]xEc
^Mp>7c
^Q5q
^izD
^rIWr
_0zN2
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
_QyM
_Unwind_DeleteException
_Unwind_GetIP
_Unwind_GetLanguageSpecificData
_Unwind_GetRegionStart
_Unwind_RaiseException
_Unwind_Resume
_Unwind_SetGR
_Unwind_SetIP
_XEatData
_XGetRequest
_XRead
_XReply
_XSetLastRequestRead
__VERSION__
__bss_start
__ctype_get_mb_cur_max
__ctype_tolower_loc
__ctype_toupper_loc
__cxa_atexit
__cxa_finalize
__cxa_guard_abort
__cxa_guard_acquire
__cxa_guard_acquire detected recursive initialization: do you have a function-local static variable whose initialization depends on that function?
__cxa_guard_release
__errno_location
__gmon_start__
__iimageBuffer
__iimageCubeArray
__imageBuffer
__imageCubeArray
__ipixelLocalANGLE
__isamplerBuffer
__isamplerCubeArray
__isoc99_sscanf
__isoc99_vsscanf
__mbrlen
__memcpy_chk
__next_prime overflow
__pixelLocalANGLE
__pixel_localEXT
__pixel_local_inEXT
__pixel_local_outEXT
__samplerBuffer
__samplerCubeArray
__samplerCubeArrayShadow
__samplerExternal2DY2YEXT
__stack_chk_fail
__thread_specific_ptr construction failed
__tls_get_addr
__uimageBuffer
__uimageCubeArray
__upixelLocalANGLE
__usamplerBuffer
__usamplerCubeArray
__vsnprintf_chk
__xstat64
_dmu
_edata
_emu
_end
_geometry_shader
_webgl_
_webgl_struct_
`uky
a struct cannot be used as a constructor argument for this type
a-Po^x}
a-QoQx}O
a76cc126635e018d309c27e62b81edad
a7ux
aND{
aN|wE1&q
a\t5,65
a_texcoord
abort
abs(00B
abs(00D
abs(10B
abs(10D
abs(20B
abs(20D
abs(30B
abs(30D
abs(i) where i is an integer returns unexpected result
absl::container_internal::raw_hash_map<>::at
acbBufferOffsets
accept
access
access is not one of the supported tokens.
acos
acos(00B
acos(10B
acos(20B
acos(30B
acosf
acosh
acosh(00B
acosh(10B
acosh(20B
acosh(30B
acoshf
acquireNextSwapchainImage
action
actual_format
add second child into first child
addAndTrueToLoopCondition
addTraceEvent
adjustClearColorPrecision
adjustSrcDstRegionForBlitFramebuffer
aligned_alloc
all identifiers containing two consecutive underscores (__) are reserved - unintented behaviors are possible
all(10F
all(20F
all(30F
allocate
allocateCommandBuffer
allocateNewBufferBlockCalls
allocateNewPool
allocateNonZeroMemory
allocatePoolImpl
allowAstcFormats
allowClearForRobustResourceInit
allowCompressedFormats
allowETCFormats
allowGenerateMipmapWithCompute
allowHostImageCopyDespiteNonIdenticalLayout
allowMultisampledRenderToTextureEmulation
alpha_func
alpha_test_ref
alwaysCallUseProgramAfterLink
alwaysRunLinkSubJobsThreaded
alwaysUnbindFramebufferTexture2D
amdgpu
an interface block cannot be used as a constructor argument for this type
anF|
angle.dump_pipeline_cache_graph
angle.pipeline_cache_graph_dump_path
angle_BaseInstance
angle_BaseVertex
angle_ClipDistanceEnabled
angle_ClipOrigin
angle_DrawID
angledata
angledata/VkICD_mock_icd.json
any(10F
any(20F
any(30F
appendAliasedMemoryDecorations
array / non-array mismatch
array constructor needs one argument per array element
array constructor supported in GLSL ES 3.00 and above only
array has too many dimensions
array index for gl_FragData must be constant zero
array index for gl_FragData must be zero when GL_EXT_draw_buffers is disabled
array index for gl_SecondaryFragDataEXT must be constant zero
array index for samplers must be constant integral expressions
array index out of range
array indexes for fragment outputs must be constant integral expressions
array indexes for gl_LastFragData must be constant integral expressions
array indexes for image arrays must be constant integral expressions
array indexes for shader storage block arrays must be constant integral expressions
array indexes for uniform block arrays must be constant integral expressions
array members of interface blocks must specify a size
array members of structs must specify a size
array of arrays are not allowed with I/O blocks
array of arrays are not allowed with interface blocks
array size mismatch
array size must be a constant integer expression
array size must be greater than zero
array size must be non-negative
array size too large
array[
array[%zu]
arrays of arrays supported in GLSL ES 3.10 and above only
asin
asin(00B
asin(10B
asin(20B
asin(30B
asinf
asinh
asinh(00B
asinh(10B
asinh(20B
asinh(30B
asinhf
aspect color during load with loadOp VK_ATTACHMENT_LOAD_OP_LOAD. Access info (usage: SYNC_COLOR_ATTACHMENT_OUTPUT_COLOR_ATTACHMENT_READ, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdEndRenderPass
aspect depth during load with loadOp VK_ATTACHMENT_LOAD_OP_DONT_CARE. Access info (usage: SYNC_EARLY_FRAGMENT_TESTS_DEPTH_STENCIL_ATTACHMENT_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION
aspect stencil during load with loadOp VK_ATTACHMENT_LOAD_OP_DONT_CARE. Access info (usage: SYNC_EARLY_FRAGMENT_TESTS_DEPTH_STENCIL_ATTACHMENT_WRITE
aspect stencil during load with loadOp VK_ATTACHMENT_LOAD_OP_DONT_CARE. Access info (usage: SYNC_EARLY_FRAGMENT_TESTS_DEPTH_STENCIL_ATTACHMENT_WRITE, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION
assign
assigning non-constant to '
asyncCommandBufferReset
asyncCommandQueue
atan
atan(00B
atan(00B00B
atan(10B
atan(10B10B
atan(20B
atan(20B20B
atan(30B
atan(30B30B
atan(y, x) may return a wrong answer
atan2f
atanf
atanh
atanh(00B
atanh(10B
atanh(20B
atanh(30B
atanhf
atomic counter
atomic counter binding greater than gl_MaxAtomicCounterBindings
atomic counter count exceeds MAX_COMBINED_ATOMIC_COUNTERS
atomicAdd
atomicAdd(00D00D
atomicAdd(00E00E
atomicAnd
atomicAnd(00D00D
atomicAnd(00E00E
atomicCompSwap
atomicCompSwap(00D00D00D
atomicCompSwap(00E00E00E
atomicCounter
atomicCounter(00G
atomicCounterDecrement
atomicCounterDecrement(00G
atomicCounterIncrement
atomicCounterIncrement(00G
atomicCounters
atomicExchange
atomicExchange(00D00D
atomicExchange(00E00E
atomicMax
atomicMax(00D00D
atomicMax(00E00E
atomicMin
atomicMin(00D00D
atomicMin(00E00E
atomicOr
atomicOr(00D00D
atomicOr(00E00E
atomicXor
atomicXor(00D00D
atomicXor(00E00E
attach
attribute is not valid.
av-2
avoid1BitAlphaTextureFormats
avoidOpSelectWithMismatchingRelaxedPrecision
awMa
axis
axis_discrete
axis_source
axis_stop
axis_value120
ayUW
a|bN
a|bn
b&aO
b/266235549
b2hSL
b8lc
b8r:C
b>7b
b?9B
b@DR\t
bBx6
bH5\n
bLu&
bVQO
b\Nr
bad_array_new_length was thrown in -fno-exceptions mode
bad_function_call was thrown in -fno-exceptions mode
barrier(
barrier() may not be called at any point after a return statement in the function main().
barrier() may not be called in potentially divergent flow control.
baseViewIndex+numViews cannot be greater than GL_MAX_ARRAY_TEXTURE_LAYERS.
basic_string
bcmp
beginFragmentShaderOrderingINTEL
beginFragmentShaderOrderingINTEL(
beginInvocationInterlockARB
beginInvocationInterlockARB(
beginInvocationInterlockNV
beginInvocationInterlockNV(
behavior invalid
bgROy?#
binarysize out of valid range.
bindCompleteFramebufferForTimerQueries
bindTransformFeedbackBufferBeforeBindBufferRange
binding = 
bit-wise and
bit-wise and second child into first child
bit-wise not
bit-wise operator supported in GLSL ES 3.00 and above only
bit-wise or
bit-wise or second child into first child
bit-wise shift first child left by second child
bit-wise shift first child right by second child
bit-wise shift left
bit-wise shift right
bit-wise xor
bit-wise xor second child into first child
bitCount
bitCount(00D
bitCount(00E
bitCount(10D
bitCount(10E
bitCount(20D
bitCount(20E
bitCount(30D
bitCount(30E
bitfieldExtract
bitfieldExtract(00D00D00D
bitfieldExtract(00E00D00D
bitfieldExtract(10D00D00D
bitfieldExtract(10E00D00D
bitfieldExtract(20D00D00D
bitfieldExtract(20E00D00D
bitfieldExtract(30D00D00D
bitfieldExtract(30E00D00D
bitfieldInsert
bitfieldInsert(00D00D00D00D
bitfieldInsert(00E00E00D00D
bitfieldInsert(10D10D00D00D
bitfieldInsert(10E10E00D00D
bitfieldInsert(20D20D00D00D
bitfieldInsert(20E20E00D00D
bitfieldInsert(30D30D00D00D
bitfieldInsert(30E30E00D00D
bitfieldReverse
bitfieldReverse(00D
bitfieldReverse(00E
bitfieldReverse(10D
bitfieldReverse(10E
bitfieldReverse(20D
bitfieldReverse(20E
bitfieldReverse(30D
bitfieldReverse(30E
blend_support_all_equations
blend_support_colorburn
blend_support_colordodge
blend_support_darken
blend_support_difference
blend_support_exclusion
blend_support_hardlight
blend_support_hsl_color
blend_support_hsl_hue
blend_support_hsl_luminosity
blend_support_hsl_saturation
blend_support_lighten
blend_support_multiply
blend_support_overlay
blend_support_qualifier
blend_support_screen
blend_support_softlight
blitColorBufferWithShader
bn0C
bool 
bool isnan_emu(float x) { return (x > 0.0 || x < 0.0) ? false : x != 0.0; }
boolean expression expected
bottomLeftOriginPresentRegionRectangles
bq>1
break
break statement only allowed in loops and switch statements
bresenhamLineRasterization
bsS 8
buffer cannot reference a 2D texture with the name 0.
buffer cannot reference a 3D texture with the name 0.
buffer cannot reference a cubemap texture with the name 0.
buffer cannot reference a renderbuffer with the name 0.
buffer error
buffer must be NULL.
bufferDataImpl
bufferSuballocationCalls
buffersGhosted
built-in functions cannot be redefined
button
bvec
bvec2
bvec2 isnan_emu(vec2 x)\n{\n    bvec2 isnan;\n    for (int i = 0; i < 2; i++)\n    {\n        isnan[i] = (x[i] > 0.0 || x[i] < 0.0) ? false : x[i] != 0.0;\n    }\n    return isnan;\n}\n
bvec3
bvec3 isnan_emu(vec3 x)\n{\n    bvec3 isnan;\n    for (int i = 0; i < 3; i++)\n    {\n        isnan[i] = (x[i] > 0.0 || x[i] < 0.0) ? false : x[i] != 0.0;\n    }\n    return isnan;\n}\n
bvec4
bvec4 isnan_emu(vec4 x)\n{\n    bvec4 isnan;\n    for (int i = 0; i < 4; i++)\n    {\n        isnan[i] = (x[i] > 0.0 || x[i] < 0.0) ? false : x[i] != 0.0;\n    }\n    return isnan;\n}\n
bz<f
c)v3
c9gt
c<\vT3
cYR\t
cacheCompiledShader
cacheProgram
calloc
can't modify a const
can't modify a readonly variable
can't modify a uniform
can't modify a variable with type 
can't modify a varying
can't modify an attribute
can't modify an input
can't modify any member in gl_in
can't modify gl_ClipDistance in a fragment shader
can't modify gl_CullDistance in a fragment shader
can't modify gl_FragCoord
can't modify gl_FrontFacing
can't modify gl_GlobalInvocationID
can't modify gl_HelperInvocation
can't modify gl_InvocationID
can't modify gl_Layer in a fragment shader
can't modify gl_LocalInvocationID
can't modify gl_LocalInvocationIndex
can't modify gl_NumWorkGroups
can't modify gl_PointCoord
can't modify gl_PrimitiveID in a fragment shader
can't modify gl_PrimitiveIDIn
can't modify gl_SampleID
can't modify gl_SampleMaskIn
can't modify gl_SamplePosition
can't modify gl_ViewID_OVR
can't modify gl_WorkGroupID
can't modify gl_WorkGroupSize
can't modify void
can't modify work group size variable
canPreferDeviceLocalMemoryHostVisible(mPhysicalDeviceProperties.deviceType)
canSupportFragmentShadingRate()
cancel
cancelled
cannot allocate __cxa_eh_globals
cannot apply dot operator to an array
cannot be a parameter type except for '(void)'
cannot be a structure containing a bool
cannot be a structure containing a structure
cannot be a structure containing an array
cannot be an array of structures
cannot be array
cannot be bool
cannot be bool or int
cannot be matrix
cannot be used with a structure
cannot be used with a yuvCscStandardEXT
cannot construct this type
cannot convert a variable with type 
cannot convert a variable with writeonly
cannot convert a void
cannot convert from '
cannot create thread specific key for __cxa_get_globals()
cannot declare arrays of arrays
cannot declare arrays of structs of this qualifier
cannot declare arrays of this qualifier
cannot declare buffer variables at global scope(outside a block)
cannot load program binaries across CPU architectures.
cannot load program binaries across different angle sh version.
cannot use both gl_FragData and gl_FragColor
cannot use both output variable sets (gl_FragData, gl_SecondaryFragDataEXT) and (gl_FragColor, gl_SecondaryFragColorEXT)
cannot zero out thread value for __cxa_get_globals()
case (
case label must be a scalar integer
case label must be constant
case label must have a condition
case label type does not match switch init-expression type
case labels need to be inside switch statements
casting a negative float to uint is undefined
catching a class without an object?
catclose
catgets
catopen
cbase
ceil
ceil(00B
ceil(10B
ceil(20B
ceil(30B
ceilf
chdir
checkCacheVersion = 
checkLinkStatus
checkOneCommandBatch
checkQueueForSurfacePresent
checkStatus
check_shaders
cjX_
clBuildProgram
clCloneKernel
clCompileProgram
clCreateBuffer
clCreateBufferWithProperties
clCreateCommandQueue
clCreateCommandQueueWithProperties
clCreateContext
clCreateContextFromType
clCreateImage
clCreateImage2D
clCreateImage3D
clCreateImageWithProperties
clCreateKernel
clCreateKernelsInProgram
clCreatePipe
clCreateProgramWithBinary
clCreateProgramWithBuiltInKernels
clCreateProgramWithIL
clCreateProgramWithSource
clCreateSampler
clCreateSamplerWithProperties
clCreateSubBuffer
clCreateSubDevices
clCreateUserEvent
clDumpVkSpirv
clEnqueueBarrier
clEnqueueBarrierWithWaitList
clEnqueueCopyBuffer
clEnqueueCopyBufferRect
clEnqueueCopyBufferToImage
clEnqueueCopyImage
clEnqueueCopyImageToBuffer
clEnqueueFillBuffer
clEnqueueFillImage
clEnqueueMapBuffer
clEnqueueMapImage
clEnqueueMarker
clEnqueueMarkerWithWaitList
clEnqueueMigrateMemObjects
clEnqueueNDRangeKernel
clEnqueueNativeKernel
clEnqueueReadBuffer
clEnqueueReadBufferRect
clEnqueueReadImage
clEnqueueSVMFree
clEnqueueSVMMap
clEnqueueSVMMemFill
clEnqueueSVMMemcpy
clEnqueueSVMMigrateMem
clEnqueueSVMUnmap
clEnqueueTask
clEnqueueUnmapMemObject
clEnqueueWaitForEvents
clEnqueueWriteBuffer
clEnqueueWriteBufferRect
clEnqueueWriteImage
clFinish
clFlush
clGetCommandQueueInfo
clGetContextInfo
clGetDeviceAndHostTimer
clGetDeviceIDs
clGetDeviceInfo
clGetEventInfo
clGetEventProfilingInfo
clGetExtensionFunctionAddress
clGetExtensionFunctionAddressForPlatform
clGetHostTimer
clGetImageInfo
clGetKernelArgInfo
clGetKernelInfo
clGetKernelSubGroupInfo
clGetKernelWorkGroupInfo
clGetMemObjectInfo
clGetPipeInfo
clGetPlatformIDs
clGetPlatformInfo
clGetProgramBuildInfo
clGetProgramInfo
clGetSamplerInfo
clGetSupportedImageFormats
clIcdGetPlatformIDsKHR
clLinkProgram
clReleaseCommandQueue
clReleaseContext
clReleaseDevice
clReleaseEvent
clReleaseKernel
clReleaseMemObject
clReleaseProgram
clReleaseSampler
clRetainCommandQueue
clRetainContext
clRetainDevice
clRetainEvent
clRetainKernel
clRetainMemObject
clRetainProgram
clRetainSampler
clSVMAlloc
clSVMFree
clSetCommandQueueProperty
clSetContextDestructorCallback
clSetDefaultDeviceCommandQueue
clSetEventCallback
clSetKernelArg
clSetKernelArgSVMPointer
clSetKernelExecInfo
clSetMemObjectDestructorCallback
clSetProgramReleaseCallback
clSetProgramSpecializationConstant
clSetUserEventStatus
clUnloadCompiler
clUnloadPlatformCompiler
clWaitForEvents
clamp(00B00B00B
clamp(00D00D00D
clamp(00E00E00E
clamp(10B00B00B
clamp(10B10B10B
clamp(10D00D00D
clamp(10D10D10D
clamp(10E00E00E
clamp(10E10E10E
clamp(20B00B00B
clamp(20B20B20B
clamp(20D00D00D
clamp(20D20D20D
clamp(20E00E00E
clamp(20E20E20E
clamp(30B00B00B
clamp(30B30B30B
clamp(30D00D00D
clamp(30D30D30D
clamp(30E00E00E
clamp(30E30E30E
clampArrayAccess
clampFragDepth
clampMscRate
clampPointSize
cleanUpOldSwapchains
cleanUpPresentHistory
clearToZeroOrOneBroken
clearsWithGapsNeedFlush
client
client/version number not supported
clientBuffer is invalid.
clipSrcRegionForBlitFramebuffer
clip_plane_enables
clock_gettime
clock_gettime(CLOCK_MONOTONIC) failed
close
clum
coherent 
collect
colorAttachmentResolves
colorAttachmentUnresolves
colorClearAttachments
colorLoadOpClears
colorLoadOpLoads
colorLoadOpNones
colorStoreOpNones
colorStoreOpStores
column_major
combineAllShadersInPipelineLibrary
combine_alpha
combine_rgb
comma
commandQueueSubmitCallsPerFrame
commandQueueSubmitCallsTotal
commandQueueWaitSemaphoresTotal
commit
comparison operator only defined for scalars
compileJobIsThreadSafe
compileShader
component-wise equal
component-wise greater than
component-wise greater than or equal
component-wise less than
component-wise less than or equal
component-wise multiply
component-wise not
component-wise not equal
components is not one of GL_RGB, GL_RGBA, GL_ALPHA or GL_NONE.
compositor timing not supported by surface.
compressVertexData
computePresentOutOfDate
condition_variable timed_wait failed
condition_variable wait failed
condition_variable::timed wait: mutex not locked
condition_variable::wait: mutex not locked
configure
conflicting output locations with previously defined output '
conflicting output types with previously defined output 
connect
const bool
const uint 
constant expression required
constructing from a non-dereferenced array
constructing from an unsized array
constructing matrix from matrix can only take one argument
constructor
constructor can't be a structure definition
constructor does not have any arguments
continue
continue statement only allowed in loops
conv_standard
copyImage
copyImageToLUMAWorkaroundTexture
copyPresentInfo
copySubImageToLUMAWorkaroundTexture
copySubTextureCPUReadback
copyTexSubImage
copyTexSubImage2D
corruptProgramBinaryForTesting
cosf
coshf
covPS
cr>2
createContext
createDeviceAndQueue
createPipeline
createSurfaceVk
createSwapChain
create_buffer
cross
cross product
cross(20B20B
csat
cta/
cttD
ctx must be EGL_NO_CONTEXT.
currentTime
cvhH
d-Ro
d-Sg
d0&ML
d8lc
dF?F
dFdx
dFdx(00B
dFdx(10B
dFdx(20B
dFdx(30B
dFdy
dFdy(00B
dFdy(10B
dFdy(20B
dFdy(30B
dPdx
dPdy
dUVdx
dUVdy
d\nca
d_Mf
damage region has already been set on surface since the most recent frame boundary
damage_buffer
data error
dataSize is too small
dbk]
dbrn
debug.angle.feature_overrides_disabled
debug.angle.feature_overrides_enabled
debug.angle.markers
debug.angle.shader_dump_path
decodeEncodeSRGBForGenerateMipmap
default labels need to be inside switch statements
default:\n
defaultUniforms
deferFlushUntilEndRenderPass
degrees
degrees(00B
degrees(10B
degrees(20B
degrees(30B
delete_id
denominator is null
deprecated behavior
depth aspect during store with storeOp VK_ATTACHMENT_STORE_OP_STORE. Access info (usage: SYNC_LATE_FRAGMENT_TESTS_DEPTH_STENCIL_ATTACHMENT_WRITE
depthAttachmentResolves
depthAttachmentUnresolves
depthClearAttachments
depthLoadOpClears
depthLoadOpLoads
depthLoadOpNones
depthRange
depthStoreOpNones
depthStoreOpStores
depth_any
depth_greater
depth_less
depth_unchanged
depth_unspecified
description
descriptorSetAllocations
descriptorSetCacheKeySizeBytes
descriptorSetCacheTotalSize
determinant
determinant(50B
determinant(A0B
determinant(F0B
device is EGL_NO_DEVICE.
device is not valid.
deviceMemoryImageAllocationFallbacks
df~3
dg2\n
diff
digraph {\n
dimension mismatch
dimension out of bounds
direct index for interface block
direct index for structure
disable
disableAnisotropicFiltering
disableBaseInstanceVertex
disableBlendFuncExtended
disableClipControl
disableDepthStencilResolveThroughAttachment
disableDrawBuffersIndexed
disableFlippingBlitWithCommand
disableGPUSwitchingSupport
disableMultisampledRenderToTexture
disableNativeParallelCompile
disablePipelineCacheLoadForTesting
disableProgramBinary
disableProgramCaching
disableProgramCachingForTransformFeedback
disableRenderSnorm
disableSemaphoreFd
disableSeparateShaderObjects
disableSyncControlSupport
disableTextureClampToBorder
disableTextureMirrorClampToEdge
disableTimestampQueries
disable_program_binary
disabled
disallowMixedDepthStencilLoadOpNoneAndLoad
disallowed type in struct
discard
discard supported in fragment shaders only
discarded 
display had a context loss
display is EGL_NO_DISPLAY.
display is not a valid display: 0x%p
display is not initialized.
distance(00B00B
distance(10B10B
distance(20B20B
distance(30B30B
dither
divide
divide second child into first child
division by zero
dladdr
dlclose
dlerror
dlopen
dlsym
dnd_drop_performed
dnd_finished
doDeferredAcquireNextImageWithUsableSwapchain
doWhileGLSLCausesGPUHang
doesSRGBClearsOnLinearFramebufferAttachments
dontInitializeUninitializedLocals
dontUseLoopsToInitializeVariables
dot product
dot(00B00B
dot(10B10B
dot(20B20B
dot(30B30B
doubleDepthBiasConstantFactor
down
draw_texture_coords
draw_texture_dims
draw_texture_normalized_crop_rect
drawbuffer
drmFreeVersion
drmGetVersion
drop
du;D
dumpProgramInfo
dumpShaderSource
dumpTranslatedShaders
duplicate case label
duplicate default label
duplicate function prototype declarations are not allowed
duplicate macro parameter name
duplicate pixel local storage binding index
during depth/stencil resolve read
dyn_index_
dynamicBufferAllocations
e9b.
eBN\f
eF7D
eN4z
eT{.n
eYB~
e_\tVA?S
early_fragment_tests
eg\r3
egl::Display::initialize
egl::Surface::prepareSwap
egl::Surface::swap
egl::Surface::swapWithDamage
egl::Surface::swapWithFrameToken
eglAcquireExternalContextANGLE
eglBindTexImage failed
eglClientWaitSync
eglColorspaceAttributePassthrough
eglCopyBuffers
eglCopyMetalSharedEventANGLE
eglCreateContext failed
eglCreateDeviceANGLE
eglCreateImage
eglCreateImage failed with 
eglCreateNativeClientBufferANDROID
eglCreatePbufferFromClientBuffer
eglCreatePbufferSurface failed
eglCreatePbufferSurface failed with 
eglCreatePixmapSurface
eglCreatePlatformPixmapSurface
eglCreatePlatformPixmapSurfaceEXT
eglCreatePlatformWindowSurface
eglCreatePlatformWindowSurfaceEXT
eglCreateStreamKHR
eglCreateStreamProducerD3DTextureANGLE
eglCreateSync
eglCreateSync failed with 
eglCreateSyncKHR failed to create sync object
eglCreateWindowSurface failed
eglDebugMessageControlKHR
eglDestroyImage
eglDestroyStreamKHR
eglDestroySurface error 
eglDestroySync
eglDupNativeFenceFDANDROID
eglDupNativeFenceFDANDROID failed
eglExportVkImageANGLE
eglForceGPUSwitchANGLE
eglGetCompositorTimingANDROID failed
eglGetCompositorTimingANDROIDD
eglGetCurrentDisplay
eglGetFrameTimestampsANDROID failed
eglGetMscRateANGLE
eglGetNativeClientBufferANDROID
eglGetNextFrameId failed
eglGetPlatformDisplay
eglGetPlatformDisplayEXT
eglGetSyncAttrib
eglGetSyncAttribKHR with EGL_SYNC_STATUS_KHR failed
eglGetSyncValuesCHROMIUM
eglHandleGPUSwitchANGLE
eglLabelObjectKHR
eglLockSurfaceKHR
eglMakeCurrent error 
eglMakeCurrent failed
eglMakeCurrent failed with 
eglPostSubBufferNV
eglPrepareSwapBuffersANGLE
eglPresentationTimeANDROID failed
eglProgramCacheGetAttribANGLE
eglProgramCachePopulateANGLE
eglProgramCacheQueryANGLE
eglProgramCacheResizeANGLE
eglQueryAPI
eglQueryContext
eglQueryDebugKHR
eglQueryDeviceAttribEXT
eglQueryDeviceStringEXT
eglQueryDevicesEXT
eglQueryDisplayAttribANGLE
eglQueryDisplayAttribEXT
eglQueryDmaBufModifiersEXT failed
eglQueryStreamKHR
eglQueryStreamu64KHR
eglQueryStringiANGLE
eglQuerySurface for EGL_BUFFER_AGE_EXT failed
eglQuerySurface64KHR
eglQuerySurfacePointerANGLE
eglQueryTimestampSupportedANDROID
eglReacquireHighPowerGPUANGLE
eglReleaseDeviceANGLE
eglReleaseExternalContextANGLE
eglReleaseHighPowerGPUANGLE
eglReleaseTexImage failed
eglReleaseThread
eglSetDamageRegionKHR
eglSetValidationEnabledANGLE
eglSignalSyncKHR
eglSignalSyncKHR invalid mode.
eglStreamAttribKHR
eglStreamConsumerAcquireKHR
eglStreamConsumerGLTextureExternalAttribsNV
eglStreamConsumerGLTextureExternalKHR
eglStreamConsumerReleaseKHR
eglStreamPostD3DTextureANGLE
eglSurfaceAttribute failed: 
eglSwapBuffersWithFrameTokenANGLE
eglSwapInterval error 
eglTerminate error 
eglUnlockSurfaceKHR
eglWaitClient
eglWaitGL
eglWaitNative
eglWaitSync
eglWaitUntilWorkScheduledANGLE
ej]Cg
empty array declaration needs to specify a size
emu_precision float atan_emu(emu_precision float y, emu_precision float x)\n{\n    if (x > 0.0) return atan(y / x);\n    else if (x < 0.0 && y >= 0.0) return atan(y / x) + 3.14159265;\n    else if (x < 0.0 && y < 0.0) return atan(y / x) - 3.14159265;\n    else return 1.57079632 * sign(y);\n}\n
emu_precision vec2 atan_emu(emu_precision vec2 y, emu_precision vec2 x)\n{\n    return vec2(atan_emu(y[0], x[0]), atan_emu(y[1], x[1]));\n}\n
emu_precision vec3 atan_emu(emu_precision vec3 y, emu_precision vec3 x)\n{\n    return vec3(atan_emu(y[0], x[0]), atan_emu(y[1], x[1]), atan_emu(y[2], x[2]));\n}\n
emu_precision vec4 atan_emu(emu_precision vec4 y, emu_precision vec4 x)\n{\n    return vec4(atan_emu(y[0], x[0]), atan_emu(y[1], x[1]), atan_emu(y[2], x[2]), atan_emu(y[3], x[3]))\n;}\n
emulateAbsIntFunction
emulateAdvancedBlendEquations
emulateAtan2Float
emulateClipDistanceState
emulateClipOrigin
emulateCopyTexImage2D
emulateCopyTexImage2DFromRenderbuffers
emulateDithering
emulateImmutableCompressedTexture3D
emulateIsnanFloat
emulateMaxVertexAttribStride
emulatePackSkipRowsAndPackSkipPixels
emulatePixelLocalStorage
emulatePrimitiveRestartFixedIndex
emulateR32fImageAtomicExchange
emulateRGB10
emulateTransformFeedback
emulatedPrerotation180
emulatedPrerotation270
emulatedPrerotation90
emu~;
enable
enable pipeline cache data compression.
enableAdditionalBlendFactorsForDithering
enableAsyncPipelineCacheCompression
enableCaptureLimits
enableDeviceExtensions
enableInstanceExtensions
enableMergeClientAttribBuffer
enableMultisampledRenderToTexture
enableParallelCompileAndLink
enablePipelineCacheDataCompression
enablePortabilityEnumeration
enablePreRotateSurfaces
enablePrecisionQualifiers
enableProgramBinaryForCapture
enableShaderSubstitution
enableTranslatedShaderSubstitution
enable_alpha_test
enable_clip_planes
enable_color_material
enable_draw_texture
enable_fog
enable_lighting
enable_normalize
enable_rescale_normal
enable_texture_2d
enable_texture_cube_map
enabled
end of group
endInvocationInterlockARB
endInvocationInterlockARB(
endInvocationInterlockNV
endInvocationInterlockNV(
ensureInterfacePipelineCache
ensureNonEmptyBufferIsBoundForDraw
ensurePipelineCacheInitialized
ensurePrimaryCommandBufferValid
ensureSamplersInitialized
equal(10B10B
equal(10D10D
equal(10E10E
equal(10F10F
equal(20B20B
equal(20D20D
equal(20E20E
equal(20F20F
equal(30B30B
equal(30D30D
equal(30E30E
equal(30F30F
equal_spacing
erase()
error marshalling arguments for %s (signature %s): null value passed for arg %i\n
error marshalling arguments for %s: dup failed: %s\n
error: XDG_RUNTIME_DIR is invalid or not set in the environment.\n
error: received delete_id for unknown id (%u)\n
error: socket path "%s" plus null terminator exceeds %i bytes\n
error: socket path "%s/%s" plus null terminator exceeds %i bytes\n
eu;D
execute once failure in __cxa_get_globals_fast()
exit
exp(00B
exp(10B
exp(20B
exp(30B
exp2
exp2(00B
exp2(10B
exp2(20B
exp2(30B
exp2f
expf
explicitFragmentLocations
explicitlyCastMediumpFloatTo16Bit
explicitlyEnablePerSampleShading
exposeNonConformantExtensionsAndVersions
extension `GL_ARB_gpu_shader5' unsupported in
extension `GL_EXT_gpu_shader5' unsupported in
extension cannot have 'enable' behavior
extension cannot have 'require' behavior
extension directive must occur before any non-preprocessor tokens in ESSL1
extension directive must occur before any non-preprocessor tokens in ESSL3
extension directive should occur before any non-preprocessor tokens
extension is being used
extension is disabled
extraneous layout qualifier: only has an effect on matrix types
ey/O0
f&c8o
f/7G
fHsSJ
fIp_
fIq_
fJ?a
faceforward
faceforward(00B00B00B
faceforward(10B10B10B
faceforward(20B20B20B
faceforward(30B30B30B
failed to duplicate fd for dma_buf import
false
false (override)
false case\n
fatal error - scanner input buffer overflow
fatal flex scanner internal error--end of buffer missed
fatal flex scanner internal error--no action found
fclose
fcntl64
fd %d
features->emulatePrimitiveRestartFixedIndex.enabled && IsApple() && isIntel
ffi_call
ffi_call_go
ffi_get_struct_offsets
ffi_prep_cif
ffi_prep_cif_var
ffi_prep_closure
ffi_prep_closure_loc
ffi_prep_go_closure
ffi_type_complex_double
ffi_type_complex_float
ffi_type_complex_longdouble
ffi_type_double
ffi_type_float
ffi_type_longdouble
ffi_type_pointer
ffi_type_sint16
ffi_type_sint32
ffi_type_sint64
ffi_type_sint8
ffi_type_uint16
ffi_type_uint32
ffi_type_uint64
ffi_type_uint8
ffi_type_void
fflush
fiMy
file descriptor expected, object (%d), message %s(%s)\n
file error
findLSB
findLSB(00D
findLSB(00E
findLSB(10D
findLSB(10E
findLSB(20D
findLSB(20E
findLSB(30D
findLSB(30E
findMSB
findMSB(00D
findMSB(00E
findMSB(10D
findMSB(10E
findMSB(20D
findMSB(20E
findMSB(30D
findMSB(30E
finish
finishDoesNotCauseQueriesToBeAvailable
finishOneCommandBatchAndCleanupImpl
finishResourceUse
first argument must be an interpolant, or interpolant-array element
first-class array
first-class arrays (array initializer) supported in GLSL ES 3.00 and above only
flags must be zero
flat in
flat in 
flat out
flat out 
flipXY
flippedFragCoord
flippedPointCoord
float overflow
float transformLinearToSrgb(float cl)\n
floatBitsToInt
floatBitsToInt(00B
floatBitsToInt(10B
floatBitsToInt(20B
floatBitsToInt(30B
floatBitsToUint
floatBitsToUint(00B
floatBitsToUint(10B
floatBitsToUint(20B
floatBitsToUint(30B
floor
floor(00B
floor(10B
floor(20B
floor(30B
floorf
flushBeforeDeleteTextureIfCopiedTo
flushOnFramebufferChange
flushedOutsideRenderPassCommandBuffers
fma(00B00B00B
fma(10B10B10B
fma(20B20B20B
fma(30B30B30B
fn7C
fo0K
fog_color
fog_density
fog_end
fog_mode
fog_start
fopen64
for (
forceContinuousRefreshOnSharedPresent
forceD16TexFilter
forceDepthAttachmentInitOnClear
forceDisableFullScreenExclusive
forceFallbackFormat
forceFragmentShaderPrecisionHighpToMediump
forceGlErrorChecking
forceInitShaderVariables
forceMaxUniformBufferSize16KB
forceMinimumMaxVertexAttributes
forceNearestFiltering
forceNearestMipFiltering
forceRobustResourceInit
forceSampleUsageForAhbBackedImages
forceSubmitImmutableTextureUpdates
forceTextureLodOffset1
forceTextureLodOffset2
forceTextureLodOffset3
forceTextureLodOffset4
forceWaitForSubmissionToCompleteForQueryResult
format is not one of supported image unit formats.
format should be one of the formats advertised by QueryDmaBufFormatsEXT
fp'T
fprintf
fputc
fputs
fputwc
fract(00B
fract(10B
fract(20B
fract(30B
fractional_even_spacing
fractional_odd_spacing
fragment shader input cannot be an array of arrays
fragment shader output cannot be an array of arrays
frame
frameId is NULL.
framebufferCacheSize
fread
free
freelocale
frexp
frexp(00B00D
frexp(10B10D
frexp(20B20D
frexp(30B30D
fseek
fseeko64
ftello64
function already has a body
function cannot take any parameter(s)
function does not return a value:
function must have the same parameter qualifiers in all of its declarations
function must have the same return type in all of its declarations
function name expected
function parameter array must be sized at compile time
function parameter array must specify a size
function return is not matching type:
functions->compressedTexImage2D( ToGLenum(face), static_cast<GLint>(level), compressedTexImageFormat.format, levelSize.width, levelSize.height, 0, static_cast<GLsizei>(dataSize), nullptr)
functions->compressedTexImage2D( ToGLenum(type), static_cast<GLint>(level), compressedTexImageFormat.format, levelSize.width, levelSize.height, 0, static_cast<GLsizei>(dataSize), nullptr)
functions->compressedTexImage2D(ToGLenum(target), static_cast<GLint>(level), compressedTexImageFormat.internalFormat, size.width, size.height, 0, static_cast<GLsizei>(imageSize), pixels)
functions->compressedTexImage3D( ToGLenum(type), i, compressedTexImageFormat.format, levelSize.width, levelSize.height, levelSize.depth, 0, static_cast<GLsizei>(dataSize), nullptr)
functions->compressedTexImage3D(ToGLenum(target), static_cast<GLint>(level), compressedTexImageFormat.internalFormat, size.width, size.height, size.depth, 0, static_cast<GLsizei>(imageSize), pixels)
functions->copyTexImage2D( ToGLenum(target), static_cast<GLint>(level), copyTexImageFormat.internalFormat, sourceArea.x, sourceArea.y, sourceArea.width, sourceArea.height, 0)
functions->copyTexSubImage2D(ToGLenum(target), static_cast<GLint>(level), 0, 0, sourceArea.x, sourceArea.y, sourceArea.width, sourceArea.height)
functions->generateMipmap(ToGLenum(getType()))
functions->hasGLESExtension("GL_EXT_shader_framebuffer_fetch")
functions->hasGLESExtension("GL_EXT_shader_framebuffer_fetch_non_coherent")
functions->hasGLESExtension("GL_EXT_shader_pixel_local_storage")
functions->isAtLeastGL(gl::Version(4, 3)) && functions->hasGLExtension("GL_NV_fragment_shader_interlock")
functions->isAtLeastGL(gl::Version(4, 4)) && functions->hasGLExtension("GL_INTEL_fragment_shader_ordering")
functions->isAtLeastGL(gl::Version(4, 5)) && functions->hasGLExtension("GL_ARB_fragment_shader_interlock")
functions->isAtMostGL(gl::Version(4, 1)) || (functions->standard == STANDARD_GL_DESKTOP && isAMD)
functions->renderbufferStorage(GL_RENDERBUFFER, renderbufferFormat.internalFormat, width, height)
functions->renderbufferStorageMultisample( GL_RENDERBUFFER, samples, renderbufferFormat.internalFormat, width, height)
functions->renderbufferStorageMultisampleEXT( GL_RENDERBUFFER, samples, renderbufferFormat.internalFormat, width, height)
functions->renderbufferStorageMultisampleIMG( GL_RENDERBUFFER, samples, renderbufferFormat.internalFormat, width, height)
functions->standard == STANDARD_GL_DESKTOP
functions->standard == STANDARD_GL_DESKTOP && functions->isAtLeastGL(gl::Version(3, 1)) && !functions->isAtLeastGL(gl::Version(4, 3))
functions->standard == STANDARD_GL_DESKTOP && isIntel
functions->standard == STANDARD_GL_DESKTOP && isNvidia
functions->standard == STANDARD_GL_ES && isMesa && mesaVersion < (std::array<int, 3>{23, 1, 7})
functions->texImage2D( ToGLenum(face), static_cast<GLint>(level), texImageFormat.internalFormat, levelSize.width, levelSize.height, 0, texImageFormat.format, texImageFormat.type, nullptr)
functions->texImage2D( ToGLenum(getType()), effectiveBaseLevel + levelIdx, texImageFormat.internalFormat, levelSize.width, levelSize.height, 0, texImageFormat.format, texImageFormat.type, nullptr)
functions->texImage2D( ToGLenum(target), static_cast<GLint>(level), copyTexImageFormat.internalFormat, sourceArea.width, sourceArea.height, 0, gl::GetUnsizedFormat(copyTexImageFormat.internalFormat), type, nullptr)
functions->texImage2D(ToGLenum(target), static_cast<GLint>(level), copyTexImageFormat.internalFormat, sourceArea.width, sourceArea.height, 0, gl::GetUnsizedFormat(copyTexImageFormat.internalFormat), type, zero->data())
functions->texImage2D(ToGLenum(type), static_cast<GLint>(level), texImageFormat.internalFormat, levelSize.width, levelSize.height, 0, texImageFormat.format, texImageFormat.type, nullptr)
functions->texImage2D(nativegl::GetTextureBindingTarget(target), 0, texImageFormat.internalFormat, 1, 1, 0, texImageFormat.format, texImageFormat.type, nullptr)
functions->texImage2D(nativegl::GetTextureBindingTarget(target), static_cast<GLint>(level), texImageFormat.internalFormat, size.width, size.height, 0, texImageFormat.format, texImageFormat.type, pixels)
functions->texImage2DMultisample( ToGLenum(type), samples, texStorageFormat.internalFormat, size.width, size.height, gl::ConvertToGLBoolean(fixedSampleLocations))
functions->texImage3D(ToGLenum(target), static_cast<GLint>(level), texImageFormat.internalFormat, size.width, size.height, size.depth, 0, texImageFormat.format, texImageFormat.type, pixels)
functions->texImage3D(ToGLenum(type), i, texImageFormat.internalFormat, levelSize.width, levelSize.height, levelSize.depth, 0, texImageFormat.format, texImageFormat.type, nullptr)
functions->texStorage2D(ToGLenum(type), static_cast<GLsizei>(levels), texStorageFormat.internalFormat, size.width, size.height)
functions->texStorage2DMultisample( ToGLenum(type), samples, texStorageFormat.internalFormat, size.width, size.height, gl::ConvertToGLBoolean(fixedSampleLocations))
functions->texStorage3D(ToGLenum(type), static_cast<GLsizei>(levels), texStorageFormat.internalFormat, size.width, size.height, size.depth)
functions->texStorage3DMultisample( ToGLenum(type), samples, texStorageFormat.internalFormat, size.width, size.height, size.depth, gl::ConvertToGLBoolean(fixedSampleLocations))
functions->texStorageMem2DEXT(ToGLenum(type), static_cast<GLsizei>(levels), texStorageFormat.internalFormat, size.width, size.height, memoryObjectGL->getMemoryObjectID(), offset)
functions->texStorageMem3DEXT(ToGLenum(type), static_cast<GLsizei>(levels), texStorageFormat.internalFormat, size.width, size.height, size.depth, memoryObjectGL->getMemoryObjectID(), offset)
fwidth
fwidth(00B
fwidth(10B
fwidth(20B
fwidth(30B
fwrite
fx:Z
f|3\tW
f}d>\rqS
g/wh.
g2"31
g>Cq
gMnxg{?
gRjJL
g\fm.W
g]rT
gcH\tR
gd^Qro+
geAtomicExchange
generateConfigs
generateMipmap
generic
geometry
geometry shader input block array size inconsistent with primitive
geometry shader input blocks must be an array
getBinary
getBufferAge
getCommandBuffer
getCompressedTexImage
getCurrentFramebuffer
getCurrentWindowSize
getDescriptorSetLayout
getEnableValidationLayers()
getFormatDescriptorCountForExternalFormat
getFormatDescriptorCountForVkFormat
getOrCreateComputePipeline
getPipelineCacheSize
getPipelineLayout
getPreferredPipeline
getStatus
getTexImage
getTimestamp
getTraceCategoryEnabledFlag
getUint64Result
getUint64ResultNonBlocking
getUserExtentsImpl
getView
get_keyboard
get_pointer
get_registry
get_touch
getc
getcwd
getenv
getgrgid
getpwuid
getwc
ggv@[
gjz{
gk#9
gkKr{
glAccum
glAcquireTexturesANGLE
glActiveShaderProgram
glActiveShaderProgramEXT
glActiveTexture
glActiveTextureARB
glAlphaFunc
glAlphaFuncx
glAreTexturesResident
glArrayElement
glAttachShader
glBegin
glBeginConditionalRender
glBeginPerfMonitorAMD
glBeginPixelLocalStorageANGLE
glBeginQuery
glBeginQueryARB
glBeginQueryEXT
glBeginQueryIndexed
glBeginTransformFeedback
glBeginTransformFeedbackEXT
glBindAttribLocation
glBindAttribLocationARB
glBindBuffer
glBindBufferARB
glBindBufferBase
glBindBufferBaseEXT
glBindBufferRange
glBindBufferRangeEXT
glBindBuffersBase
glBindBuffersRange
glBindFragDataLocation
glBindFragDataLocationEXT
glBindFragDataLocationIndexed
glBindFragDataLocationIndexedEXT
glBindFramebuffer
glBindFramebufferEXT
glBindFramebufferOES
glBindImageTexture
glBindImageTextureEXT
glBindImageTextures
glBindProgramPipeline
glBindProgramPipelineEXT
glBindRenderbuffer
glBindRenderbufferEXT
glBindRenderbufferOES
glBindSampler
glBindSamplers
glBindTexture
glBindTextureEXT
glBindTextureUnit
glBindTextures
glBindTransformFeedback
glBindUniformLocationCHROMIUM
glBindVertexArray
glBindVertexArrayOES
glBindVertexBuffer
glBindVertexBuffers
glBitmap
glBlendBarrier
glBlendBarrierKHR
glBlendColor
glBlendColorEXT
glBlendEquation
glBlendEquationEXT
glBlendEquationSeparate
glBlendEquationSeparateEXT
glBlendEquationSeparatei
glBlendEquationSeparateiARB
glBlendEquationSeparateiEXT
glBlendEquationSeparateiOES
glBlendEquationi
glBlendEquationiARB
glBlendEquationiEXT
glBlendEquationiOES
glBlendFunc
glBlendFuncSeparate
glBlendFuncSeparateEXT
glBlendFuncSeparatei
glBlendFuncSeparateiARB
glBlendFuncSeparateiEXT
glBlendFuncSeparateiOES
glBlendFunci
glBlendFunciARB
glBlendFunciEXT
glBlendFunciOES
glBlitFramebuffer
glBlitFramebufferANGLE
glBlitFramebufferEXT
glBlitFramebufferNV
glBlitNamedFramebuffer
glBufferData
glBufferDataARB
glBufferStorage
glBufferStorageEXT
glBufferStorageExternalEXT
glBufferStorageMemEXT
glBufferSubData
glBufferSubDataARB
glCallList
glCallLists
glCheckFramebufferStatus
glCheckFramebufferStatusEXT
glCheckFramebufferStatusOES
glCheckNamedFramebufferStatus
glCheckNamedFramebufferStatusEXT
glClampColor
glClampColorARB
glClear
glClearAccum
glClearBufferData
glClearBufferSubData
glClearBufferfi
glClearBufferfv
glClearBufferiv
glClearBufferuiv
glClearColor
glClearColorx
glClearDepth
glClearDepthf
glClearDepthfOES
glClearDepthx
glClearIndex
glClearNamedBufferData
glClearNamedBufferDataEXT
glClearNamedBufferSubData
glClearNamedBufferSubDataEXT
glClearNamedFramebufferfi
glClearNamedFramebufferfv
glClearNamedFramebufferiv
glClearNamedFramebufferuiv
glClearStencil
glClearTexImage
glClearTexImageEXT
glClearTexSubImage
glClearTexSubImageEXT
glClientActiveTexture
glClientWaitSync
glClientWaitSync did not return GL_ALREADY_SIGNALED or GL_CONDITION_SATISFIED.
glClipControl
glClipControlEXT
glClipPlane
glClipPlanef
glClipPlanex
glColor3b
glColor3bv
glColor3d
glColor3dv
glColor3f
glColor3fv
glColor3i
glColor3iv
glColor3s
glColor3sv
glColor3ub
glColor3ubv
glColor3ui
glColor3uiv
glColor3us
glColor3usv
glColor4b
glColor4bv
glColor4d
glColor4dv
glColor4f
glColor4fv
glColor4i
glColor4iv
glColor4s
glColor4sv
glColor4ub
glColor4ubv
glColor4ui
glColor4uiv
glColor4us
glColor4usv
glColor4x
glColorMask
glColorMaski
glColorMaskiEXT
glColorMaskiOES
glColorMaterial
glColorP3ui
glColorP3uiv
glColorP4ui
glColorP4uiv
glColorPointer
glCompileShader
glCompileShaderARB
glCompressedCopyTextureCHROMIUM
glCompressedTexImage1D
glCompressedTexImage1DARB
glCompressedTexImage2D
glCompressedTexImage2DARB
glCompressedTexImage2DRobustANGLE
glCompressedTexImage3D
glCompressedTexImage3DARB
glCompressedTexImage3DOES
glCompressedTexImage3DRobustANGLE
glCompressedTexSubImage1D
glCompressedTexSubImage1DARB
glCompressedTexSubImage2D
glCompressedTexSubImage2DARB
glCompressedTexSubImage2DRobustANGLE
glCompressedTexSubImage3D
glCompressedTexSubImage3DARB
glCompressedTexSubImage3DOES
glCompressedTexSubImage3DRobustANGLE
glCompressedTextureSubImage1D
glCompressedTextureSubImage1DEXT
glCompressedTextureSubImage2D
glCompressedTextureSubImage2DEXT
glCompressedTextureSubImage3D
glCompressedTextureSubImage3DEXT
glCopyBufferSubData
glCopyImageSubData
glCopyImageSubDataEXT
glCopyImageSubDataOES
glCopyNamedBufferSubData
glCopyPixels
glCopySubTexture3DANGLE
glCopySubTextureCHROMIUM
glCopyTexImage1D
glCopyTexImage1DEXT
glCopyTexImage2D
glCopyTexImage2DEXT
glCopyTexSubImage1D
glCopyTexSubImage1DEXT
glCopyTexSubImage2D
glCopyTexSubImage2DEXT
glCopyTexSubImage3D
glCopyTexSubImage3DEXT
glCopyTexSubImage3DOES
glCopyTexture3DANGLE
glCopyTextureCHROMIUM
glCopyTextureSubImage1D
glCopyTextureSubImage1DEXT
glCopyTextureSubImage2D
glCopyTextureSubImage2DEXT
glCopyTextureSubImage3D
glCopyTextureSubImage3DEXT
glCoverageModulationCHROMIUM
glCoverageModulationNV
glCreateBuffers
glCreateFramebuffers
glCreateMemoryObjectsEXT
glCreateProgram
glCreateProgramPipelines
glCreateQueries
glCreateRenderbuffers
glCreateSamplers
glCreateShader
glCreateShaderProgramv
glCreateShaderProgramvEXT
glCreateTextures
glCreateTransformFeedbacks
glCreateVertexArrays
glCullFace
glCurrentPaletteMatrixOES
glDebugMessageCallback
glDebugMessageCallbackARB
glDebugMessageCallbackKHR
glDebugMessageControl
glDebugMessageControlARB
glDebugMessageControlKHR
glDebugMessageInsert
glDebugMessageInsertARB
glDebugMessageInsertKHR
glDeleteBuffers
glDeleteBuffersARB
glDeleteFencesNV
glDeleteFramebuffers
glDeleteFramebuffersEXT
glDeleteFramebuffersOES
glDeleteLists
glDeleteMemoryObjectsEXT
glDeletePerfMonitorsAMD
glDeleteProgram
glDeleteProgramPipelines
glDeleteProgramPipelinesEXT
glDeleteQueries
glDeleteQueriesARB
glDeleteQueriesEXT
glDeleteRenderbuffers
glDeleteRenderbuffersEXT
glDeleteRenderbuffersOES
glDeleteSamplers
glDeleteSemaphoresEXT
glDeleteShader
glDeleteSync
glDeleteTextures
glDeleteTexturesEXT
glDeleteTransformFeedbacks
glDeleteVertexArrays
glDeleteVertexArraysOES
glDepthFunc
glDepthMask
glDepthRange
glDepthRangeArrayv
glDepthRangeIndexed
glDepthRangef
glDepthRangefOES
glDepthRangex
glDetachShader
glDisable
glDisableClientState
glDisableExtensionANGLE
glDisableVertexArrayAttrib
glDisableVertexArrayAttribEXT
glDisableVertexAttribArray
glDisableVertexAttribArrayARB
glDisablei
glDisableiEXT
glDisableiOES
glDiscardFramebufferEXT
glDispatchCompute
glDispatchComputeIndirect
glDrawArrays
glDrawArraysEXT
glDrawArraysIndirect
glDrawArraysInstanced
glDrawArraysInstanced is buggy on certain new Mac Intel GPUs
glDrawArraysInstancedANGLE
glDrawArraysInstancedARB
glDrawArraysInstancedBaseInstance
glDrawArraysInstancedBaseInstanceANGLE
glDrawArraysInstancedBaseInstanceEXT
glDrawArraysInstancedEXT
glDrawBuffer
glDrawBuffers
glDrawBuffersARB
glDrawBuffersEXT
glDrawElements
glDrawElementsBaseVertex
glDrawElementsBaseVertexEXT
glDrawElementsBaseVertexOES
glDrawElementsIndirect
glDrawElementsInstanced
glDrawElementsInstancedANGLE
glDrawElementsInstancedARB
glDrawElementsInstancedBaseInstance
glDrawElementsInstancedBaseInstanceEXT
glDrawElementsInstancedBaseVertex
glDrawElementsInstancedBaseVertexBaseInstance
glDrawElementsInstancedBaseVertexBaseInstanceANGLE
glDrawElementsInstancedBaseVertexBaseInstanceEXT
glDrawElementsInstancedBaseVertexEXT
glDrawElementsInstancedBaseVertexOES
glDrawElementsInstancedEXT
glDrawPixels
glDrawRangeElements
glDrawRangeElementsBaseVertex
glDrawRangeElementsBaseVertexEXT
glDrawRangeElementsBaseVertexOES
glDrawRangeElementsEXT
glDrawTexfOES
glDrawTexfvOES
glDrawTexiOES
glDrawTexivOES
glDrawTexsOES
glDrawTexsvOES
glDrawTexxOES
glDrawTexxvOES
glDrawTransformFeedback
glDrawTransformFeedbackEXT
glDrawTransformFeedbackInstanced
glDrawTransformFeedbackInstancedEXT
glDrawTransformFeedbackStream
glDrawTransformFeedbackStreamInstanced
glEGLImageTargetRenderbufferStorageOES
glEGLImageTargetTexStorageEXT
glEGLImageTargetTexture2DOES
glEGLImageTargetTextureStorageEXT
glEdgeFlag
glEdgeFlagPointer
glEdgeFlagv
glEnable
glEnableClientState
glEnableVertexArrayAttrib
glEnableVertexArrayAttribEXT
glEnableVertexAttribArray
glEnableVertexAttribArrayARB
glEnablei
glEnableiEXT
glEnableiOES
glEnd
glEndConditionalRender
glEndList
glEndPerfMonitorAMD
glEndPixelLocalStorageANGLE
glEndQuery
glEndQueryARB
glEndQueryEXT
glEndQueryIndexed
glEndTransformFeedback
glEndTransformFeedbackEXT
glEvalCoord1d
glEvalCoord1dv
glEvalCoord1f
glEvalCoord1fv
glEvalCoord2d
glEvalCoord2dv
glEvalCoord2f
glEvalCoord2fv
glEvalMesh1
glEvalMesh2
glEvalPoint1
glEvalPoint2
glFeedbackBuffer
glFenceSync
glFenceSync failed to create a GLsync object.
glFinish
glFinish doesn't cause all queries to report available result
glFinishFenceNV
glFlush
glFlushMappedBufferRange
glFlushMappedBufferRangeEXT
glFlushMappedNamedBufferRange
glFlushMappedNamedBufferRangeEXT
glFogCoordPointer
glFogCoordd
glFogCoorddv
glFogCoordf
glFogCoordfv
glFogf
glFogfv
glFogi
glFogiv
glFogx
glFogxv
glFramebufferFetchBarrierEXT
glFramebufferFoveationConfigQCOM
glFramebufferFoveationConfigQCOM called on a framebuffer that has already been configured for foveated rendering
glFramebufferFoveationParametersQCOM
glFramebufferFoveationParametersQCOM called on a framebuffer that has not been configured for foveated rendering
glFramebufferMemorylessPixelLocalStorageANGLE
glFramebufferParameteri
glFramebufferParameteriMESA
glFramebufferPixelLocalClearValuefvANGLE
glFramebufferPixelLocalClearValueivANGLE
glFramebufferPixelLocalClearValueuivANGLE
glFramebufferPixelLocalStorageInterruptANGLE
glFramebufferPixelLocalStorageRestoreANGLE
glFramebufferRenderbuffer
glFramebufferRenderbufferEXT
glFramebufferRenderbufferOES
glFramebufferTexture
glFramebufferTexture1D
glFramebufferTexture1DEXT
glFramebufferTexture2D
glFramebufferTexture2DEXT
glFramebufferTexture2DMultisampleEXT
glFramebufferTexture2DMultisampleIMG
glFramebufferTexture2DOES
glFramebufferTexture3D
glFramebufferTexture3DEXT
glFramebufferTexture3DOES
glFramebufferTextureARB
glFramebufferTextureEXT
glFramebufferTextureLayer
glFramebufferTextureLayerARB
glFramebufferTextureLayerEXT
glFramebufferTextureMultiviewOVR
glFramebufferTextureOES
glFramebufferTexturePixelLocalStorageANGLE
glFrontFace
glFrustum
glFrustumf
glFrustumx
glGenBuffers
glGenBuffersARB
glGenFencesNV
glGenFramebuffers
glGenFramebuffersEXT
glGenFramebuffersOES
glGenLists
glGenPerfMonitorsAMD
glGenProgramPipelines
glGenProgramPipelinesEXT
glGenQueries
glGenQueriesARB
glGenQueriesEXT
glGenRenderbuffers
glGenRenderbuffersEXT
glGenRenderbuffersOES
glGenSamplers
glGenSemaphoresEXT
glGenTextures
glGenTexturesEXT
glGenTransformFeedbacks
glGenVertexArrays
glGenVertexArraysOES
glGenerateMipmap
glGenerateMipmap fails if the zero texture level is not set on some Mac drivers.
glGenerateMipmapEXT
glGenerateMipmapOES
glGenerateTextureMipmap
glGenerateTextureMipmapEXT
glGetActiveAtomicCounterBufferiv
glGetActiveAttrib
glGetActiveAttribARB
glGetActiveSubroutineName
glGetActiveSubroutineUniformName
glGetActiveSubroutineUniformiv
glGetActiveUniform
glGetActiveUniformARB
glGetActiveUniformBlockName
glGetActiveUniformBlockiv
glGetActiveUniformBlockivRobustANGLE
glGetActiveUniformName
glGetActiveUniformsiv
glGetAttachedShaders
glGetAttribLocation
glGetAttribLocationARB
glGetBooleani_v
glGetBooleani_vRobustANGLE
glGetBooleanv
glGetBooleanvRobustANGLE
glGetBufferParameteri64v
glGetBufferParameteri64vRobustANGLE
glGetBufferParameteriv
glGetBufferParameterivARB
glGetBufferParameterivRobustANGLE
glGetBufferPointerv
glGetBufferPointervARB
glGetBufferPointervOES
glGetBufferPointervRobustANGLE
glGetBufferSubData
glGetBufferSubDataARB
glGetClipPlane
glGetClipPlanef
glGetClipPlanex
glGetCompressedTexImage
glGetCompressedTexImageANGLE
glGetCompressedTexImageARB
glGetCompressedTextureImage
glGetCompressedTextureImageEXT
glGetCompressedTextureSubImage
glGetDebugMessageLog
glGetDebugMessageLogARB
glGetDebugMessageLogKHR
glGetDoublei_v
glGetDoublei_vEXT
glGetDoublev
glGetError
glGetFenceivNV
glGetFixedv
glGetFloati_v
glGetFloati_vEXT
glGetFloati_vOES
glGetFloatv
glGetFloatvRobustANGLE
glGetFragDataIndex
glGetFragDataIndexEXT
glGetFragDataLocation
glGetFragDataLocationEXT
glGetFramebufferAttachmentParameteriv
glGetFramebufferAttachmentParameterivEXT
glGetFramebufferAttachmentParameterivOES
glGetFramebufferAttachmentParameterivRobustANGLE
glGetFramebufferParameteriv
glGetFramebufferParameterivEXT
glGetFramebufferParameterivMESA
glGetFramebufferParameterivRobustANGLE
glGetFramebufferPixelLocalStorageParameterfvANGLE
glGetFramebufferPixelLocalStorageParameterfvRobustANGLE
glGetFramebufferPixelLocalStorageParameterivANGLE
glGetFramebufferPixelLocalStorageParameterivRobustANGLE
glGetGraphicsResetStatus
glGetGraphicsResetStatusARB
glGetGraphicsResetStatusEXT
glGetGraphicsResetStatusKHR
glGetInteger64i_v
glGetInteger64i_vRobustANGLE
glGetInteger64v
glGetInteger64vEXT
glGetInteger64vRobustANGLE
glGetIntegeri_v
glGetIntegeri_vEXT
glGetIntegeri_vRobustANGLE
glGetIntegerv
glGetIntegervRobustANGLE
glGetInternalformatSampleivNV
glGetInternalformati64v
glGetInternalformativ
glGetInternalformativ generated error 
glGetInternalformativRobustANGLE
glGetLightfv
glGetLightiv
glGetLightxv
glGetMapdv
glGetMapfv
glGetMapiv
glGetMaterialfv
glGetMaterialiv
glGetMaterialxv
glGetMemoryObjectParameterivEXT
glGetMultisamplefv
glGetMultisamplefvANGLE
glGetMultisamplefvRobustANGLE
glGetNamedBufferParameteri64v
glGetNamedBufferParameteriv
glGetNamedBufferParameterivEXT
glGetNamedBufferPointerv
glGetNamedBufferPointervEXT
glGetNamedBufferSubData
glGetNamedBufferSubDataEXT
glGetNamedFramebufferAttachmentParameteriv
glGetNamedFramebufferAttachmentParameterivEXT
glGetNamedFramebufferParameteriv
glGetNamedFramebufferParameterivEXT
glGetNamedRenderbufferParameteriv
glGetNamedRenderbufferParameterivEXT
glGetObjectLabel
glGetObjectLabelEXT
glGetObjectLabelKHR
glGetObjectPtrLabel
glGetObjectPtrLabelKHR
glGetPerfMonitorCounterDataAMD
glGetPerfMonitorCounterInfoAMD
glGetPerfMonitorCounterStringAMD
glGetPerfMonitorCountersAMD
glGetPerfMonitorGroupStringAMD
glGetPerfMonitorGroupsAMD
glGetPixelMapfv
glGetPixelMapuiv
glGetPixelMapusv
glGetPointerv
glGetPointervEXT
glGetPointervKHR
glGetPointervRobustANGLERobustANGLE
glGetPolygonStipple
glGetProgramBinary
glGetProgramBinaryOES
glGetProgramInfoLog
glGetProgramInterfaceiv
glGetProgramInterfaceivRobustANGLE
glGetProgramPipelineInfoLog
glGetProgramPipelineInfoLogEXT
glGetProgramPipelineiv
glGetProgramPipelineivEXT
glGetProgramResourceIndex
glGetProgramResourceLocation
glGetProgramResourceLocationIndex
glGetProgramResourceLocationIndexEXT
glGetProgramResourceName
glGetProgramResourceiv
glGetProgramStageiv
glGetProgramiv
glGetProgramivARB
glGetProgramivRobustANGLE
glGetQueryBufferObjecti64v
glGetQueryBufferObjectiv
glGetQueryBufferObjectui64v
glGetQueryBufferObjectuiv
glGetQueryIndexediv
glGetQueryObjecti64v
glGetQueryObjecti64vEXT
glGetQueryObjecti64vRobustANGLE
glGetQueryObjectiv
glGetQueryObjectivARB
glGetQueryObjectivEXT
glGetQueryObjectivRobustANGLE
glGetQueryObjectui64v
glGetQueryObjectui64vEXT
glGetQueryObjectui64vRobustANGLE
glGetQueryObjectuiv
glGetQueryObjectuivARB
glGetQueryObjectuivEXT
glGetQueryObjectuivRobustANGLE
glGetQueryiv
glGetQueryivARB
glGetQueryivEXT
glGetQueryivRobustANGLE
glGetRenderbufferImageANGLE
glGetRenderbufferParameteriv
glGetRenderbufferParameterivEXT
glGetRenderbufferParameterivOES
glGetRenderbufferParameterivRobustANGLE
glGetSamplerParameterIiv
glGetSamplerParameterIivEXT
glGetSamplerParameterIivOES
glGetSamplerParameterIivRobustANGLE
glGetSamplerParameterIuiv
glGetSamplerParameterIuivEXT
glGetSamplerParameterIuivOES
glGetSamplerParameterIuivRobustANGLE
glGetSamplerParameterfv
glGetSamplerParameterfvRobustANGLE
glGetSamplerParameteriv
glGetSamplerParameterivRobustANGLE
glGetSemaphoreParameterui64vEXT
glGetShaderInfoLog
glGetShaderPrecisionFormat
glGetShaderSource
glGetShaderSourceARB
glGetShaderiv
glGetShaderivRobustANGLE
glGetString
glGetStringi
glGetSubroutineIndex
glGetSubroutineUniformLocation
glGetSynciv
glGetTexEnvfv
glGetTexEnviv
glGetTexEnvxv
glGetTexGendv
glGetTexGenfv
glGetTexGenfvOES
glGetTexGeniv
glGetTexGenivOES
glGetTexGenxvOES
glGetTexImage
glGetTexImageANGLE
glGetTexLevelParameterfv
glGetTexLevelParameterfvANGLE
glGetTexLevelParameterfvRobustANGLE
glGetTexLevelParameteriv
glGetTexLevelParameterivANGLE
glGetTexLevelParameterivRobustANGLE
glGetTexParameterIiv
glGetTexParameterIivEXT
glGetTexParameterIivOES
glGetTexParameterIivRobustANGLE
glGetTexParameterIuiv
glGetTexParameterIuivEXT
glGetTexParameterIuivOES
glGetTexParameterIuivRobustANGLE
glGetTexParameterfv
glGetTexParameterfvRobustANGLE
glGetTexParameteriv
glGetTexParameterivRobustANGLE
glGetTexParameterxv
glGetTextureImage
glGetTextureImageEXT
glGetTextureLevelParameterfv
glGetTextureLevelParameterfvEXT
glGetTextureLevelParameteriv
glGetTextureLevelParameterivEXT
glGetTextureParameterIiv
glGetTextureParameterIivEXT
glGetTextureParameterIuiv
glGetTextureParameterIuivEXT
glGetTextureParameterfv
glGetTextureParameterfvEXT
glGetTextureParameteriv
glGetTextureParameterivEXT
glGetTextureSubImage
glGetTransformFeedbackVarying
glGetTransformFeedbackVaryingEXT
glGetTransformFeedbacki64_v
glGetTransformFeedbacki_v
glGetTransformFeedbackiv
glGetTranslatedShaderSourceANGLE
glGetUniformBlockIndex
glGetUniformIndices
glGetUniformLocation
glGetUniformLocationARB
glGetUniformSubroutineuiv
glGetUniformdv
glGetUniformfv
glGetUniformfvARB
glGetUniformfvRobustANGLE
glGetUniformiv
glGetUniformivARB
glGetUniformivRobustANGLE
glGetUniformuiv
glGetUniformuivEXT
glGetUniformuivRobustANGLE
glGetUnsignedBytei_vEXT
glGetUnsignedBytevEXT
glGetVertexArrayIndexed64iv
glGetVertexArrayIndexediv
glGetVertexArrayiv
glGetVertexAttribIiv
glGetVertexAttribIivEXT
glGetVertexAttribIivRobustANGLE
glGetVertexAttribIuiv
glGetVertexAttribIuivEXT
glGetVertexAttribIuivRobustANGLE
glGetVertexAttribLdv
glGetVertexAttribLdvEXT
glGetVertexAttribPointerv
glGetVertexAttribPointervARB
glGetVertexAttribPointervRobustANGLE
glGetVertexAttribdv
glGetVertexAttribdvARB
glGetVertexAttribfv
glGetVertexAttribfvARB
glGetVertexAttribfvRobustANGLE
glGetVertexAttribiv
glGetVertexAttribivARB
glGetVertexAttribivRobustANGLE
glGetnColorTable
glGetnCompressedTexImage
glGetnCompressedTexImageARB
glGetnConvolutionFilter
glGetnHistogram
glGetnMapdv
glGetnMapfv
glGetnMapiv
glGetnMinmax
glGetnPixelMapfv
glGetnPixelMapuiv
glGetnPixelMapusv
glGetnPolygonStipple
glGetnSeparableFilter
glGetnTexImage
glGetnTexImageARB
glGetnUniformdv
glGetnUniformdvARB
glGetnUniformfv
glGetnUniformfvARB
glGetnUniformfvEXT
glGetnUniformfvKHR
glGetnUniformfvRobustANGLE
glGetnUniformiv
glGetnUniformivARB
glGetnUniformivEXT
glGetnUniformivKHR
glGetnUniformivRobustANGLE
glGetnUniformuiv
glGetnUniformuivARB
glGetnUniformuivKHR
glGetnUniformuivRobustANGLE
glHint
glImportMemoryFdEXT
glImportMemoryWin32HandleEXT
glImportMemoryWin32NameEXT
glImportMemoryZirconHandleANGLE
glImportSemaphoreFdEXT
glImportSemaphoreWin32HandleEXT
glImportSemaphoreWin32NameEXT
glImportSemaphoreZirconHandleANGLE
glIndexMask
glIndexPointer
glIndexd
glIndexdv
glIndexf
glIndexfv
glIndexi
glIndexiv
glIndexs
glIndexsv
glIndexub
glIndexubv
glInitNames
glInsertEventMarkerEXT
glInterleavedArrays
glInvalidateBufferData
glInvalidateBufferSubData
glInvalidateFramebuffer
glInvalidateFramebuffer (%s) ineffective on attachments with layer >= 8
glInvalidateNamedFramebufferData
glInvalidateNamedFramebufferSubData
glInvalidateSubFramebuffer
glInvalidateTexImage
glInvalidateTexSubImage
glInvalidateTextureANGLE
glIsBuffer
glIsBufferARB
glIsEnabled
glIsEnabledi
glIsEnablediEXT
glIsEnablediOES
glIsFenceNV
glIsFramebuffer
glIsFramebufferEXT
glIsFramebufferOES
glIsList
glIsMemoryObjectEXT
glIsProgram
glIsProgramARB
glIsProgramPipeline
glIsProgramPipelineEXT
glIsQuery
glIsQueryARB
glIsQueryEXT
glIsRenderbuffer
glIsRenderbufferEXT
glIsRenderbufferOES
glIsSampler
glIsSemaphoreEXT
glIsShader
glIsSync
glIsTexture
glIsTextureEXT
glIsTransformFeedback
glIsVertexArray
glIsVertexArrayOES
glLabelObjectEXT
glLightModelf
glLightModelfv
glLightModeli
glLightModeliv
glLightModelx
glLightModelxv
glLightf
glLightfv
glLighti
glLightiv
glLightx
glLightxv
glLineStipple
glLineWidth
glLineWidthx
glLinkProgram
glLinkProgramARB
glListBase
glLoadIdentity
glLoadMatrixd
glLoadMatrixf
glLoadMatrixx
glLoadName
glLoadPaletteFromModelViewMatrixOES
glLoadTransposeMatrixd
glLoadTransposeMatrixf
glLogicOp
glLogicOpANGLE
glLoseContextCHROMIUM
glMap1d
glMap1f
glMap2d
glMap2f
glMapBuffer
glMapBufferARB
glMapBufferOES
glMapBufferRange
glMapBufferRangeEXT
glMapGrid1d
glMapGrid1f
glMapGrid2d
glMapGrid2f
glMapNamedBuffer
glMapNamedBufferEXT
glMapNamedBufferRange
glMapNamedBufferRangeEXT
glMaterialf
glMaterialfv
glMateriali
glMaterialiv
glMaterialx
glMaterialxv
glMatrixIndexPointerOES
glMatrixMode
glMaxShaderCompilerThreadsARB
glMaxShaderCompilerThreadsKHR
glMemoryBarrier
glMemoryBarrierByRegion
glMemoryBarrierEXT
glMemoryObjectParameterivEXT
glMinSampleShading
glMinSampleShadingARB
glMinSampleShadingOES
glMultMatrixd
glMultMatrixf
glMultMatrixx
glMultTransposeMatrixd
glMultTransposeMatrixf
glMultiDrawArrays
glMultiDrawArraysANGLE
glMultiDrawArraysEXT
glMultiDrawArraysIndirect
glMultiDrawArraysIndirectCount
glMultiDrawArraysIndirectEXT
glMultiDrawArraysInstancedANGLE
glMultiDrawArraysInstancedBaseInstanceANGLE
glMultiDrawElements
glMultiDrawElementsANGLE
glMultiDrawElementsBaseVertex
glMultiDrawElementsBaseVertexEXT
glMultiDrawElementsEXT
glMultiDrawElementsIndirect
glMultiDrawElementsIndirectCount
glMultiDrawElementsIndirectEXT
glMultiDrawElementsInstancedANGLE
glMultiDrawElementsInstancedBaseVertexBaseInstanceANGLE
glMultiTexCoord1d
glMultiTexCoord1dv
glMultiTexCoord1f
glMultiTexCoord1fv
glMultiTexCoord1i
glMultiTexCoord1iv
glMultiTexCoord1s
glMultiTexCoord1sv
glMultiTexCoord2d
glMultiTexCoord2dv
glMultiTexCoord2f
glMultiTexCoord2fv
glMultiTexCoord2i
glMultiTexCoord2iv
glMultiTexCoord2s
glMultiTexCoord2sv
glMultiTexCoord3d
glMultiTexCoord3dv
glMultiTexCoord3f
glMultiTexCoord3fv
glMultiTexCoord3i
glMultiTexCoord3iv
glMultiTexCoord3s
glMultiTexCoord3sv
glMultiTexCoord4d
glMultiTexCoord4dv
glMultiTexCoord4f
glMultiTexCoord4fv
glMultiTexCoord4i
glMultiTexCoord4iv
glMultiTexCoord4s
glMultiTexCoord4sv
glMultiTexCoord4x
glMultiTexCoordP1ui
glMultiTexCoordP1uiv
glMultiTexCoordP2ui
glMultiTexCoordP2uiv
glMultiTexCoordP3ui
glMultiTexCoordP3uiv
glMultiTexCoordP4ui
glMultiTexCoordP4uiv
glNamedBufferData
glNamedBufferDataEXT
glNamedBufferStorage
glNamedBufferStorageEXT
glNamedBufferStorageExternalEXT
glNamedBufferStorageMemEXT
glNamedBufferSubData
glNamedBufferSubDataEXT
glNamedFramebufferDrawBuffer
glNamedFramebufferDrawBuffers
glNamedFramebufferParameteri
glNamedFramebufferParameteriEXT
glNamedFramebufferReadBuffer
glNamedFramebufferRenderbuffer
glNamedFramebufferRenderbufferEXT
glNamedFramebufferTexture
glNamedFramebufferTextureEXT
glNamedFramebufferTextureLayer
glNamedFramebufferTextureLayerEXT
glNamedRenderbufferStorage
glNamedRenderbufferStorageEXT
glNamedRenderbufferStorageMultisample
glNamedRenderbufferStorageMultisampleEXT
glNewList
glNormal3b
glNormal3bv
glNormal3d
glNormal3dv
glNormal3f
glNormal3fv
glNormal3i
glNormal3iv
glNormal3s
glNormal3sv
glNormal3x
glNormalP3ui
glNormalP3uiv
glNormalPointer
glObjectLabel
glObjectLabelKHR
glObjectPtrLabel
glObjectPtrLabelKHR
glOrtho
glOrthof
glOrthox
glPassThrough
glPatchParameterfv
glPatchParameteri
glPatchParameteriEXT
glPatchParameteriOES
glPauseTransformFeedback
glPixelLocalStorageBarrierANGLE
glPixelMapfv
glPixelMapuiv
glPixelMapusv
glPixelStoref
glPixelStorei
glPixelTransferf
glPixelTransferi
glPixelZoom
glPointParameterf
glPointParameterfARB
glPointParameterfEXT
glPointParameterfv
glPointParameterfvARB
glPointParameterfvEXT
glPointParameteri
glPointParameteriv
glPointParameterx
glPointParameterxv
glPointSize
glPointSizePointerOES
glPointSizex
glPolygonMode
glPolygonModeANGLE
glPolygonModeNV
glPolygonOffset
glPolygonOffsetClamp
glPolygonOffsetClampEXT
glPolygonOffsetEXT
glPolygonOffsetx
glPolygonStipple
glPopAttrib
glPopClientAttrib
glPopDebugGroup
glPopDebugGroupKHR
glPopGroupMarkerEXT
glPopMatrix
glPopName
glPrimitiveBoundingBox
glPrimitiveBoundingBoxARB
glPrimitiveBoundingBoxEXT
glPrimitiveBoundingBoxOES
glPrimitiveRestartIndex
glPrioritizeTextures
glProgramBinary
glProgramBinaryOES
glProgramParameteri
glProgramParameteriARB
glProgramParameteriEXT
glProgramUniform1d
glProgramUniform1dEXT
glProgramUniform1dv
glProgramUniform1dvEXT
glProgramUniform1f
glProgramUniform1fEXT
glProgramUniform1fv
glProgramUniform1fvEXT
glProgramUniform1i
glProgramUniform1iEXT
glProgramUniform1iv
glProgramUniform1ivEXT
glProgramUniform1ui
glProgramUniform1uiEXT
glProgramUniform1uiv
glProgramUniform1uivEXT
glProgramUniform2d
glProgramUniform2dEXT
glProgramUniform2dv
glProgramUniform2dvEXT
glProgramUniform2f
glProgramUniform2fEXT
glProgramUniform2fv
glProgramUniform2fvEXT
glProgramUniform2i
glProgramUniform2iEXT
glProgramUniform2iv
glProgramUniform2ivEXT
glProgramUniform2ui
glProgramUniform2uiEXT
glProgramUniform2uiv
glProgramUniform2uivEXT
glProgramUniform3d
glProgramUniform3dEXT
glProgramUniform3dv
glProgramUniform3dvEXT
glProgramUniform3f
glProgramUniform3fEXT
glProgramUniform3fv
glProgramUniform3fvEXT
glProgramUniform3i
glProgramUniform3iEXT
glProgramUniform3iv
glProgramUniform3ivEXT
glProgramUniform3ui
glProgramUniform3uiEXT
glProgramUniform3uiv
glProgramUniform3uivEXT
glProgramUniform4d
glProgramUniform4dEXT
glProgramUniform4dv
glProgramUniform4dvEXT
glProgramUniform4f
glProgramUniform4fEXT
glProgramUniform4fv
glProgramUniform4fvEXT
glProgramUniform4i
glProgramUniform4iEXT
glProgramUniform4iv
glProgramUniform4ivEXT
glProgramUniform4ui
glProgramUniform4uiEXT
glProgramUniform4uiv
glProgramUniform4uivEXT
glProgramUniformMatrix2dv
glProgramUniformMatrix2dvEXT
glProgramUniformMatrix2fv
glProgramUniformMatrix2fvEXT
glProgramUniformMatrix2x3dv
glProgramUniformMatrix2x3dvEXT
glProgramUniformMatrix2x3fv
glProgramUniformMatrix2x3fvEXT
glProgramUniformMatrix2x4dv
glProgramUniformMatrix2x4dvEXT
glProgramUniformMatrix2x4fv
glProgramUniformMatrix2x4fvEXT
glProgramUniformMatrix3dv
glProgramUniformMatrix3dvEXT
glProgramUniformMatrix3fv
glProgramUniformMatrix3fvEXT
glProgramUniformMatrix3x2dv
glProgramUniformMatrix3x2dvEXT
glProgramUniformMatrix3x2fv
glProgramUniformMatrix3x2fvEXT
glProgramUniformMatrix3x4dv
glProgramUniformMatrix3x4dvEXT
glProgramUniformMatrix3x4fv
glProgramUniformMatrix3x4fvEXT
glProgramUniformMatrix4dv
glProgramUniformMatrix4dvEXT
glProgramUniformMatrix4fv
glProgramUniformMatrix4fvEXT
glProgramUniformMatrix4x2dv
glProgramUniformMatrix4x2dvEXT
glProgramUniformMatrix4x2fv
glProgramUniformMatrix4x2fvEXT
glProgramUniformMatrix4x3dv
glProgramUniformMatrix4x3dvEXT
glProgramUniformMatrix4x3fv
glProgramUniformMatrix4x3fvEXT
glProvokingVertex
glProvokingVertexANGLE
glProvokingVertexEXT
glPushAttrib
glPushClientAttrib
glPushDebugGroup
glPushDebugGroupKHR
glPushGroupMarkerEXT
glPushMatrix
glPushName
glQueryCounter
glQueryCounterEXT
glQueryMatrixxOES
glRasterPos2d
glRasterPos2dv
glRasterPos2f
glRasterPos2fv
glRasterPos2i
glRasterPos2iv
glRasterPos2s
glRasterPos2sv
glRasterPos3d
glRasterPos3dv
glRasterPos3f
glRasterPos3fv
glRasterPos3i
glRasterPos3iv
glRasterPos3s
glRasterPos3sv
glRasterPos4d
glRasterPos4dv
glRasterPos4f
glRasterPos4fv
glRasterPos4i
glRasterPos4iv
glRasterPos4s
glRasterPos4sv
glReadBuffer
glReadPixels
glReadPixels: GL_IMPLEMENTATION_COLOR_READ_FORMAT advertised by the driver is not handled by RGBA16 readPixels workaround.
glReadPixelsRobustANGLE
glReadnPixels
glReadnPixelsARB
glReadnPixelsEXT
glReadnPixelsKHR
glReadnPixelsRobustANGLE
glRectd
glRectdv
glRectf
glRectfv
glRecti
glRectiv
glRects
glRectsv
glReleaseShaderCompiler
glReleaseTexturesANGLE
glRenderMode
glRenderbufferStorage
glRenderbufferStorageEXT
glRenderbufferStorageMultisample
glRenderbufferStorageMultisampleANGLE
glRenderbufferStorageMultisampleEXT
glRenderbufferStorageMultisampleIMG
glRenderbufferStorageOES
glRequestExtensionANGLE
glResumeTransformFeedback
glRotated
glRotatef
glRotatex
glSampleCoverage
glSampleCoverageARB
glSampleCoveragex
glSampleMaski
glSampleMaskiANGLE
glSamplerParameterIiv
glSamplerParameterIivEXT
glSamplerParameterIivOES
glSamplerParameterIivRobustANGLE
glSamplerParameterIuiv
glSamplerParameterIuivEXT
glSamplerParameterIuivOES
glSamplerParameterIuivRobustANGLE
glSamplerParameterf
glSamplerParameterfv
glSamplerParameterfvRobustANGLE
glSamplerParameteri
glSamplerParameteriv
glSamplerParameterivRobustANGLE
glScaled
glScalef
glScalex
glScissor
glScissorArrayv
glScissorArrayvOES
glScissorIndexed
glScissorIndexedOES
glScissorIndexedv
glScissorIndexedvOES
glSecondaryColor3b
glSecondaryColor3bv
glSecondaryColor3d
glSecondaryColor3dv
glSecondaryColor3f
glSecondaryColor3fv
glSecondaryColor3i
glSecondaryColor3iv
glSecondaryColor3s
glSecondaryColor3sv
glSecondaryColor3ub
glSecondaryColor3ubv
glSecondaryColor3ui
glSecondaryColor3uiv
glSecondaryColor3us
glSecondaryColor3usv
glSecondaryColorP3ui
glSecondaryColorP3uiv
glSecondaryColorPointer
glSelectBuffer
glSelectPerfMonitorCountersAMD
glSemaphoreParameterui64vEXT
glSetFenceNV
glShadeModel
glShaderBinary
glShaderSource
glShaderSourceARB
glShaderStorageBlockBinding
glShadingRateQCOM
glSignalSemaphoreEXT
glSpecializeShader
glStencilFunc
glStencilFuncSeparate
glStencilMask
glStencilMaskSeparate
glStencilOp
glStencilOpSeparate
glTestFenceNV
glTexBuffer
glTexBufferARB
glTexBufferEXT
glTexBufferOES
glTexBufferRange
glTexBufferRangeEXT
glTexBufferRangeOES
glTexCoord1d
glTexCoord1dv
glTexCoord1f
glTexCoord1fv
glTexCoord1i
glTexCoord1iv
glTexCoord1s
glTexCoord1sv
glTexCoord2d
glTexCoord2dv
glTexCoord2f
glTexCoord2fv
glTexCoord2i
glTexCoord2iv
glTexCoord2s
glTexCoord2sv
glTexCoord3d
glTexCoord3dv
glTexCoord3f
glTexCoord3fv
glTexCoord3i
glTexCoord3iv
glTexCoord3s
glTexCoord3sv
glTexCoord4d
glTexCoord4dv
glTexCoord4f
glTexCoord4fv
glTexCoord4i
glTexCoord4iv
glTexCoord4s
glTexCoord4sv
glTexCoordP1ui
glTexCoordP1uiv
glTexCoordP2ui
glTexCoordP2uiv
glTexCoordP3ui
glTexCoordP3uiv
glTexCoordP4ui
glTexCoordP4uiv
glTexCoordPointer
glTexEnvf
glTexEnvfv
glTexEnvi
glTexEnviv
glTexEnvx
glTexEnvxv
glTexGend
glTexGendv
glTexGenf
glTexGenfOES
glTexGenfv
glTexGenfvOES
glTexGeni
glTexGeniOES
glTexGeniv
glTexGenivOES
glTexGenxOES
glTexGenxvOES
glTexImage1D
glTexImage2D
glTexImage2DExternalANGLE
glTexImage2DMultisample
glTexImage2DRobustANGLE
glTexImage3D
glTexImage3DEXT
glTexImage3DMultisample
glTexImage3DOES
glTexImage3DRobustANGLE
glTexParameterIiv
glTexParameterIivEXT
glTexParameterIivOES
glTexParameterIivRobustANGLE
glTexParameterIuiv
glTexParameterIuivEXT
glTexParameterIuivOES
glTexParameterIuivRobustANGLE
glTexParameterf
glTexParameterfv
glTexParameterfvRobustANGLE
glTexParameteri
glTexParameteriv
glTexParameterivRobustANGLE
glTexParameterx
glTexParameterxv
glTexStorage1D
glTexStorage1DEXT
glTexStorage2D
glTexStorage2DEXT
glTexStorage2DMultisample
glTexStorage2DMultisampleANGLE
glTexStorage3D
glTexStorage3DEXT
glTexStorage3DMultisample
glTexStorage3DMultisampleOES
glTexStorageMem2DEXT
glTexStorageMem2DMultisampleEXT
glTexStorageMem3DEXT
glTexStorageMem3DMultisampleEXT
glTexStorageMemFlags2DANGLE
glTexStorageMemFlags2DMultisampleANGLE
glTexStorageMemFlags3DANGLE
glTexStorageMemFlags3DMultisampleANGLE
glTexSubImage1D
glTexSubImage1DEXT
glTexSubImage2D
glTexSubImage2DEXT
glTexSubImage2DRobustANGLE
glTexSubImage3D
glTexSubImage3DEXT
glTexSubImage3DOES
glTexSubImage3DRobustANGLE
glTextureBarrier
glTextureBuffer
glTextureBufferEXT
glTextureBufferRange
glTextureBufferRangeEXT
glTextureFoveationParametersQCOM
glTextureFoveationParametersQCOM called on a texture that does not support GL_FOVEATION_ENABLE_BIT_QCOM
glTextureParameterIiv
glTextureParameterIivEXT
glTextureParameterIuiv
glTextureParameterIuivEXT
glTextureParameterf
glTextureParameterfEXT
glTextureParameterfv
glTextureParameterfvEXT
glTextureParameteri
glTextureParameteriEXT
glTextureParameteriv
glTextureParameterivEXT
glTextureStorage1D
glTextureStorage1DEXT
glTextureStorage2D
glTextureStorage2DEXT
glTextureStorage2DMultisample
glTextureStorage2DMultisampleEXT
glTextureStorage3D
glTextureStorage3DEXT
glTextureStorage3DMultisample
glTextureStorage3DMultisampleEXT
glTextureStorageMem2DEXT
glTextureStorageMem2DMultisampleEXT
glTextureStorageMem3DEXT
glTextureStorageMem3DMultisampleEXT
glTextureSubImage1D
glTextureSubImage1DEXT
glTextureSubImage2D
glTextureSubImage2DEXT
glTextureSubImage3D
glTextureSubImage3DEXT
glTextureView
glTextureViewEXT
glTextureViewOES
glTransformFeedbackBufferBase
glTransformFeedbackBufferRange
glTransformFeedbackVaryings
glTransformFeedbackVaryingsEXT
glTranslated
glTranslatef
glTranslatex
glUniform1d
glUniform1dv
glUniform1f
glUniform1fARB
glUniform1fv
glUniform1fvARB
glUniform1i
glUniform1iARB
glUniform1iv
glUniform1ivARB
glUniform1ui
glUniform1uiEXT
glUniform1uiv
glUniform1uivEXT
glUniform2d
glUniform2dv
glUniform2f
glUniform2fARB
glUniform2fv
glUniform2fvARB
glUniform2i
glUniform2iARB
glUniform2iv
glUniform2ivARB
glUniform2ui
glUniform2uiEXT
glUniform2uiv
glUniform2uivEXT
glUniform3d
glUniform3dv
glUniform3f
glUniform3fARB
glUniform3fv
glUniform3fvARB
glUniform3i
glUniform3iARB
glUniform3iv
glUniform3ivARB
glUniform3ui
glUniform3uiEXT
glUniform3uiv
glUniform3uivEXT
glUniform4d
glUniform4dv
glUniform4f
glUniform4fARB
glUniform4fv
glUniform4fvARB
glUniform4i
glUniform4iARB
glUniform4iv
glUniform4ivARB
glUniform4ui
glUniform4uiEXT
glUniform4uiv
glUniform4uivEXT
glUniformBlockBinding
glUniformMatrix2dv
glUniformMatrix2fv
glUniformMatrix2fvARB
glUniformMatrix2x3dv
glUniformMatrix2x3fv
glUniformMatrix2x4dv
glUniformMatrix2x4fv
glUniformMatrix3dv
glUniformMatrix3fv
glUniformMatrix3fvARB
glUniformMatrix3x2dv
glUniformMatrix3x2fv
glUniformMatrix3x4dv
glUniformMatrix3x4fv
glUniformMatrix4dv
glUniformMatrix4fv
glUniformMatrix4fvARB
glUniformMatrix4x2dv
glUniformMatrix4x2fv
glUniformMatrix4x3dv
glUniformMatrix4x3fv
glUniformSubroutinesuiv
glUnmapBuffer
glUnmapBufferARB
glUnmapBufferOES
glUnmapNamedBuffer
glUnmapNamedBufferEXT
glUseProgram
glUseProgramStages
glUseProgramStagesEXT
glValidateProgram
glValidateProgramARB
glValidateProgramPipeline
glValidateProgramPipelineEXT
glVertex2d
glVertex2dv
glVertex2f
glVertex2fv
glVertex2i
glVertex2iv
glVertex2s
glVertex2sv
glVertex3d
glVertex3dv
glVertex3f
glVertex3fv
glVertex3i
glVertex3iv
glVertex3s
glVertex3sv
glVertex4d
glVertex4dv
glVertex4f
glVertex4fv
glVertex4i
glVertex4iv
glVertex4s
glVertex4sv
glVertexArrayAttribBinding
glVertexArrayAttribFormat
glVertexArrayAttribIFormat
glVertexArrayAttribLFormat
glVertexArrayBindingDivisor
glVertexArrayElementBuffer
glVertexArrayVertexBuffer
glVertexArrayVertexBuffers
glVertexAttrib1d
glVertexAttrib1dARB
glVertexAttrib1dv
glVertexAttrib1dvARB
glVertexAttrib1f
glVertexAttrib1fARB
glVertexAttrib1fv
glVertexAttrib1fvARB
glVertexAttrib1s
glVertexAttrib1sARB
glVertexAttrib1sv
glVertexAttrib1svARB
glVertexAttrib2d
glVertexAttrib2dARB
glVertexAttrib2dv
glVertexAttrib2dvARB
glVertexAttrib2f
glVertexAttrib2fARB
glVertexAttrib2fv
glVertexAttrib2fvARB
glVertexAttrib2s
glVertexAttrib2sARB
glVertexAttrib2sv
glVertexAttrib2svARB
glVertexAttrib3d
glVertexAttrib3dARB
glVertexAttrib3dv
glVertexAttrib3dvARB
glVertexAttrib3f
glVertexAttrib3fARB
glVertexAttrib3fv
glVertexAttrib3fvARB
glVertexAttrib3s
glVertexAttrib3sARB
glVertexAttrib3sv
glVertexAttrib3svARB
glVertexAttrib4Nbv
glVertexAttrib4NbvARB
glVertexAttrib4Niv
glVertexAttrib4NivARB
glVertexAttrib4Nsv
glVertexAttrib4NsvARB
glVertexAttrib4Nub
glVertexAttrib4NubARB
glVertexAttrib4Nubv
glVertexAttrib4NubvARB
glVertexAttrib4Nuiv
glVertexAttrib4NuivARB
glVertexAttrib4Nusv
glVertexAttrib4NusvARB
glVertexAttrib4bv
glVertexAttrib4bvARB
glVertexAttrib4d
glVertexAttrib4dARB
glVertexAttrib4dv
glVertexAttrib4dvARB
glVertexAttrib4f
glVertexAttrib4fARB
glVertexAttrib4fv
glVertexAttrib4fvARB
glVertexAttrib4iv
glVertexAttrib4ivARB
glVertexAttrib4s
glVertexAttrib4sARB
glVertexAttrib4sv
glVertexAttrib4svARB
glVertexAttrib4ubv
glVertexAttrib4ubvARB
glVertexAttrib4uiv
glVertexAttrib4uivARB
glVertexAttrib4usv
glVertexAttrib4usvARB
glVertexAttribBinding
glVertexAttribDivisor
glVertexAttribDivisorANGLE
glVertexAttribDivisorARB
glVertexAttribDivisorEXT
glVertexAttribFormat
glVertexAttribI1i
glVertexAttribI1iEXT
glVertexAttribI1iv
glVertexAttribI1ivEXT
glVertexAttribI1ui
glVertexAttribI1uiEXT
glVertexAttribI1uiv
glVertexAttribI1uivEXT
glVertexAttribI2i
glVertexAttribI2iEXT
glVertexAttribI2iv
glVertexAttribI2ivEXT
glVertexAttribI2ui
glVertexAttribI2uiEXT
glVertexAttribI2uiv
glVertexAttribI2uivEXT
glVertexAttribI3i
glVertexAttribI3iEXT
glVertexAttribI3iv
glVertexAttribI3ivEXT
glVertexAttribI3ui
glVertexAttribI3uiEXT
glVertexAttribI3uiv
glVertexAttribI3uivEXT
glVertexAttribI4bv
glVertexAttribI4bvEXT
glVertexAttribI4i
glVertexAttribI4iEXT
glVertexAttribI4iv
glVertexAttribI4ivEXT
glVertexAttribI4sv
glVertexAttribI4svEXT
glVertexAttribI4ubv
glVertexAttribI4ubvEXT
glVertexAttribI4ui
glVertexAttribI4uiEXT
glVertexAttribI4uiv
glVertexAttribI4uivEXT
glVertexAttribI4usv
glVertexAttribI4usvEXT
glVertexAttribIFormat
glVertexAttribIPointer
glVertexAttribIPointerEXT
glVertexAttribL1d
glVertexAttribL1dEXT
glVertexAttribL1dv
glVertexAttribL1dvEXT
glVertexAttribL2d
glVertexAttribL2dEXT
glVertexAttribL2dv
glVertexAttribL2dvEXT
glVertexAttribL3d
glVertexAttribL3dEXT
glVertexAttribL3dv
glVertexAttribL3dvEXT
glVertexAttribL4d
glVertexAttribL4dEXT
glVertexAttribL4dv
glVertexAttribL4dvEXT
glVertexAttribLFormat
glVertexAttribLPointer
glVertexAttribLPointerEXT
glVertexAttribP1ui
glVertexAttribP1uiv
glVertexAttribP2ui
glVertexAttribP2uiv
glVertexAttribP3ui
glVertexAttribP3uiv
glVertexAttribP4ui
glVertexAttribP4uiv
glVertexAttribPointer
glVertexAttribPointerARB
glVertexBindingDivisor
glVertexP2ui
glVertexP2uiv
glVertexP3ui
glVertexP3uiv
glVertexP4ui
glVertexP4uiv
glVertexPointer
glViewport
glViewportArrayv
glViewportArrayvOES
glViewportIndexedf
glViewportIndexedfOES
glViewportIndexedfv
glViewportIndexedfvOES
glWaitSemaphoreEXT
glWaitSync
glWeightPointerOES
glWindowPos2d
glWindowPos2dv
glWindowPos2f
glWindowPos2fv
glWindowPos2i
glWindowPos2iv
glWindowPos2s
glWindowPos2sv
glWindowPos3d
glWindowPos3dv
glWindowPos3f
glWindowPos3fv
glWindowPos3i
glWindowPos3iv
glWindowPos3s
glWindowPos3sv
glXGetMscRateOML failed.
glXGetProcAddressARB
glXGetSyncValuesOML failed.
glXQueryExtensionsString returned NULL
gl_BaseInstance
gl_BaseVertex
gl_BoundingBox
gl_BoundingBoxEXT
gl_BoundingBoxOES
gl_ClipDistance
gl_CullDistance
gl_DepthRange
gl_DepthRangeParameters
gl_DrawID
gl_FragCoord can only be declared invariant if and only if gl_Position is declared invariant.
gl_FragDepth can only be redeclared as float
gl_FragDepth can only be redeclared as fragment output
gl_FragDepth is not clamped correctly when rendering to a floating point depth buffer
gl_FragDepth is not clamped when rendering to a floating point depth buffer without VK_EXT_depth_clamp_zero_one
gl_FragDepthEXT
gl_FragStencilRefARB
gl_InstanceID
gl_InstanceIndex
gl_LastFragColor
gl_LastFragColorARM
gl_LastFragData
gl_Layer
gl_MaxAtomicCounterBufferSize
gl_MaxCombinedAtomicCounterBuffers
gl_MaxCombinedAtomicCounters
gl_MaxCombinedClipAndCullDistances
gl_MaxCombinedImageUniforms
gl_MaxCombinedShaderOutputResources
gl_MaxCombinedTextureImageUnits
gl_MaxComputeAtomicCounterBuffers
gl_MaxComputeAtomicCounters
gl_MaxComputeImageUniforms
gl_MaxComputeTextureImageUnits
gl_MaxComputeUniformComponents
gl_MaxComputeWorkGroupCount
gl_MaxComputeWorkGroupSize
gl_MaxDualSourceDrawBuffersEXT
gl_MaxFragmentAtomicCounterBuffers
gl_MaxFragmentAtomicCounters
gl_MaxFragmentImageUniforms
gl_MaxFragmentInputVectors
gl_MaxFragmentUniformVectors
gl_MaxGeometryAtomicCounterBuffers
gl_MaxGeometryAtomicCounters
gl_MaxGeometryImageUniforms
gl_MaxGeometryInputComponents
gl_MaxGeometryOutputComponents
gl_MaxGeometryOutputVertices
gl_MaxGeometryTextureImageUnits
gl_MaxGeometryTotalOutputComponents
gl_MaxGeometryUniformComponents
gl_MaxPatchVertices
gl_MaxProgramTexelOffset
gl_MaxSamples
gl_MaxTessControlAtomicCounterBuffers
gl_MaxTessControlAtomicCounters
gl_MaxTessControlImageUniforms
gl_MaxTessControlInputComponents
gl_MaxTessControlOutputComponents
gl_MaxTessControlTextureImageUnits
gl_MaxTessControlTotalOutputComponents
gl_MaxTessControlUniformComponents
gl_MaxTessEvaluationAtomicCounterBuffers
gl_MaxTessEvaluationAtomicCounters
gl_MaxTessEvaluationImageUniforms
gl_MaxTessEvaluationInputComponents
gl_MaxTessEvaluationOutputComponents
gl_MaxTessEvaluationTextureImageUnits
gl_MaxTessEvaluationUniformComponents
gl_MaxTessGenLevel
gl_MaxTessPatchComponents
gl_MaxTextureImageUnits
gl_MaxVaryingVectors
gl_MaxVertexAtomicCounterBuffers
gl_MaxVertexAtomicCounters
gl_MaxVertexAttribs
gl_MaxVertexImageUniforms
gl_MaxVertexOutputVectors
gl_MaxVertexTextureImageUnits
gl_MaxVertexUniformVectors
gl_MinProgramTexelOffset
gl_NumSamples
gl_PatchVerticesIn
gl_PerVertex
gl_PointCoord can only be declared invariant if and only if gl_PointSize is declared invariant.
gl_PointSize
gl_PointSize can only be redeclared as float
gl_Position
gl_Position can only be redeclared as vec4
gl_PrimitiveID
gl_SampleMask
gl_SamplePositio
gl_SecondaryFrags2
gl_TessCoord
gl_TessLevelInne\n
gl_TessLevelInner
gl_TessLevelOuter
gl_VertexID
gl_VertexID in GLSL vertex shader doesn't include base vertex value
gl_VertexIndex
gl_out
global
global variable initializers must be constant expressions
global variable initializers should be constant expressions (uniforms and globals are allowed in global initializers for legacy compatibility)
global_remove
gpu.angle
gpu.angle.gpu
gpu.angle.texture_metrics
greaterThan
greaterThan(10B10B
greaterThan(10D10D
greaterThan(10E10E
greaterThan(20B20B
greaterThan(20D20D
greaterThan(20E20E
greaterThan(30B30B
greaterThan(30D30D
greaterThan(30E30E
greaterThanEqual
greaterThanEqual(10B10B
greaterThanEqual(10D10D
greaterThanEqual(10E10E
greaterThanEqual(20B20B
greaterThanEqual(20D20D
greaterThanEqual(20E20E
greaterThanEqual(30B30B
greaterThanEqual(30D30D
greaterThanEqual(30E30E
group: 
groupMemoryBarrier
groupMemoryBarrier(
gug*gu
gz/U
h"PJ
h0[W
h0[o
h11V
hD4,jtQ
hS*u
hTl4*
hTl4z
hXAX
h[kkeY
h\njN!
handleDirtyGraphicsRenderPass
handleError
hasEffectivePipelineCacheSerialization
header crc mismatch
height
highp ivec2 pixelCoord=ivec2(floor(gl_FragCoord.xy));
histogramBoolean
histogramCustomCounts
histogramEnumeration
histogramSparse
hk#5
hmb@
http://anglebug.com/1085
http://anglebug.com/1423136
http://anglebug.com/1512
http://anglebug.com/1637
http://anglebug.com/1936
http://anglebug.com/2046
http://anglebug.com/2162
http://anglebug.com/2273
http://anglebug.com/2517
http://anglebug.com/2894
http://anglebug.com/2970
http://anglebug.com/2978
http://anglebug.com/3027
http://anglebug.com/3078
http://anglebug.com/3205
http://anglebug.com/3206
http://anglebug.com/3452
http://anglebug.com/3498
http://anglebug.com/3502
http://anglebug.com/3577
http://anglebug.com/3584
http://anglebug.com/3586
http://anglebug.com/3623, http://anglebug.com/3624, http://anglebug.com/3625
http://anglebug.com/3729
http://anglebug.com/3832
http://anglebug.com/3862
http://anglebug.com/3965
http://anglebug.com/3970
http://anglebug.com/3997
http://anglebug.com/4214
http://anglebug.com/4267
http://anglebug.com/4324
http://anglebug.com/4384
http://anglebug.com/4405
http://anglebug.com/4428
http://anglebug.com/4551
http://anglebug.com/4633
http://anglebug.com/4646
http://anglebug.com/4722
http://anglebug.com/482
http://anglebug.com/4836
http://anglebug.com/4901
http://anglebug.com/4937
http://anglebug.com/5007
http://anglebug.com/5055
http://anglebug.com/5061
http://anglebug.com/5281
http://anglebug.com/5371
http://anglebug.com/5375
http://anglebug.com/5421
http://anglebug.com/5430
http://anglebug.com/5469
http://anglebug.com/5535
http://anglebug.com/5577
http://anglebug.com/5658
http://anglebug.com/5750
http://anglebug.com/5881
http://anglebug.com/5901
http://anglebug.com/5906
http://anglebug.com/6041
http://anglebug.com/6048
http://anglebug.com/6141
http://anglebug.com/6248
http://anglebug.com/6439
http://anglebug.com/6651
http://anglebug.com/6692
http://anglebug.com/6755
http://anglebug.com/6860
http://anglebug.com/6876
http://anglebug.com/6878
http://anglebug.com/6929
http://anglebug.com/6953
http://anglebug.com/7036
http://anglebug.com/7047
http://anglebug.com/7172
http://anglebug.com/7279
http://anglebug.com/7370
http://anglebug.com/7406
http://anglebug.com/7488
http://anglebug.com/7527
http://anglebug.com/7551
http://anglebug.com/7553
http://anglebug.com/7556
http://anglebug.com/7724
http://anglebug.com/7760
http://anglebug.com/7761
http://anglebug.com/8162
http://anglebug.com/8172
http://anglebug.com/8215
http://anglebug.com/8229
http://anglebug.com/8280
http://anglebug.com/8291
http://anglebug.com/8297
http://anglebug.com/8417
http://anglebug.com/8484
http://anglebug.com/8503
http://anglebug.com/8549
http://anglebug.com/8601
http://anglebug.com/8611
http://anglebug.com/8622
http://anglebug.com/8658
http://anglebug.com/8676
http://crbug.com/1094869
http://crbug.com/110263
http://crbug.com/1144207
http://crbug.com/1171371
http://crbug.com/1181068
http://crbug.com/1181193
http://crbug.com/1420130
http://crbug.com/1434317
http://crbug.com/1456243
http://crbug.com/308366
http://crbug.com/403957
http://crbug.com/550292 http://crbug.com/565179
http://crbug.com/642227
http://crbug.com/642605
http://crbug.com/644669
http://crbug.com/650547
http://crbug.com/672380
http://crbug.com/709351
http://crbug.com/797243
http://crbug.com/809422
http://crbug.com/830046
http://crbug.com/927470
http://issuetracker.google.com/200067929
https://anglebug.com/4674
https://anglebug.com/4830
https://anglebug.com/4849
https://anglebug.com/4966
https://anglebug.com/5140
https://anglebug.com/5536
https://anglebug.com/5845
https://anglebug.com/6574
https://anglebug.com/7161
https://anglebug.com/7162
https://anglebug.com/7246
https://anglebug.com/7308
https://anglebug.com/7319
https://anglebug.com/7320
https://anglebug.com/7369
https://anglebug.com/7382
https://anglebug.com/7405
https://anglebug.com/7489
https://anglebug.com/7604
https://anglebug.com/7714
https://anglebug.com/7847
https://anglebug.com/7899
https://anglebug.com/8308
https://anglebug.com/8315
https://anglebug.com/8319
https://anglebug.com/8381
https://anglebug.com/8417
https://anglebug.com/8471
https://crbug.com/1042393
https://crbug.com/1046462
https://crbug.com/1060012
https://crbug.com/1091824
https://crbug.com/1137851
https://crbug.com/1300575
https://crbug.com/1356053
https://crbug.com/40279678
https://crbug.com/705865
https://crbug.com/710443
https://crbug.com/811661
https://crbug.com/848952 http://crbug.com/883276
https://issuetracker.google.com/155487768
https://issuetracker.google.com/161903006
https://issuetracker.google.com/166809097
https://issuetracker.google.com/184850002
https://issuetracker.google.com/187425444
https://issuetracker.google.com/220069903
https://issuetracker.google.com/229267970
https://issuetracker.google.com/250706693
https://issuetracker.google.com/253522366
https://issuetracker.google.com/255411748
https://issuetracker.google.com/258207403
https://issuetracker.google.com/274859104
https://issuetracker.google.com/284462263
https://issuetracker.google.com/288119108
https://issuetracker.google.com/292282210
https://issuetracker.google.com/292285899
https://issuetracker.google.com/309028728
https://issuetracker.google.com/328301788
https://issuetracker.google.com/328837151
https://issuetracker.google.com/336844257
https://issuetracker.google.com/issues/166475273
i(8\rj
i24~
i915
i=NQ
i=lm]
iN?%o
iP[O
iP[O<w
iQ1*
iQ>w
iTHLy
i]Wb
identifiers containing two consecutive underscores (__) are reserved as possible future keywords
if level is zero and the texture is incomplete, it must have all of its faces specified at level zero.
if level is zero and the texture is incomplete, it must have no mip levels specified except zero.
if max_formats is positive, formats should not be NULL
if max_modifiers is positive, modifiers should not be NULL
if<M&
iiiiissi
iimage2D
iimage2DArray
iimage3D
iimageCube
illegal - vector component fields not from the same set
illegal advanced blend equation when pixel local storage is declared
illegal discard when pixel local storage is declared
illegal nonzero index qualifier when pixel local storage is declared
illegal pixel local storage format
illegal return from main when pixel local storage is declared
illegal type argument for default precision qualifier
illegal type for precision qualifier
illegal use of type 'void'
illegal vector field selection
image binding greater than gl_MaxImageUnits
image layout transition (old_layout: VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL, new_layout: VK_IMAGE_LAYOUT_GENERAL). Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_COLOR_ATTACHMENT_OUTPUT_COLOR_ATTACHMENT_WRITE, write_barriers:
image layout transition (old_layout: VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL, new_layout: VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL). Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION
image uniform
image2D i
imageAtomicAdd
imageAtomicAdd(00z10D00D
imageAtomicAdd(00z10D00E
imageAtomicAdd(01A20D00D
imageAtomicAdd(01A20D00E
imageAtomicAdd(01B20D00D
imageAtomicAdd(01B20D00E
imageAtomicAdd(01C20D00D
imageAtomicAdd(01C20D00E
imageAtomicAdd(01D00D00D
imageAtomicAdd(01D00D00E
imageAtomicAdd(01E10D00D
imageAtomicAdd(01E10D00E
imageAtomicAdd(01F10D00D00D
imageAtomicAdd(01F10D00D00E
imageAtomicAdd(01G20D00D00D
imageAtomicAdd(01G20D00D00E
imageAtomicAdd(01H20D00D
imageAtomicAdd(01H20D00E
imageAtomicAdd(01I10D00D
imageAtomicAdd(01I10D00E
imageAtomicAdd(01J00D00D
imageAtomicAdd(01J00D00E
imageAtomicAdd(01K10D00D
imageAtomicAdd(01K10D00E
imageAtomicAdd(01L20D00D
imageAtomicAdd(01L20D00E
imageAtomicAdd(01M20D00D
imageAtomicAdd(01M20D00E
imageAtomicAdd(01N20D00D
imageAtomicAdd(01N20D00E
imageAtomicAdd(01O00D00D
imageAtomicAdd(01O00D00E
imageAtomicAdd(01P10D00D
imageAtomicAdd(01P10D00E
imageAtomicAdd(01Q10D00D00D
imageAtomicAdd(01Q10D00D00E
imageAtomicAdd(01R20D00D00D
imageAtomicAdd(01R20D00D00E
imageAtomicAdd(01S20D00D
imageAtomicAdd(01S20D00E
imageAtomicAdd(01T10D00D
imageAtomicAdd(01T10D00E
imageAtomicAdd(01U00D00D
imageAtomicAdd(01U00D00E
imageAtomicAdd(01V10D00D
imageAtomicAdd(01V10D00E
imageAtomicAdd(01W20D00D
imageAtomicAdd(01W20D00E
imageAtomicAdd(01X20D00D
imageAtomicAdd(01X20D00E
imageAtomicAdd(01Y20D00D
imageAtomicAdd(01Y20D00E
imageAtomicAdd(01Z00D00D
imageAtomicAdd(01Z00D00E
imageAtomicAdd(01a10D00D
imageAtomicAdd(01a10D00E
imageAtomicAdd(01b10D00D00D
imageAtomicAdd(01b10D00D00E
imageAtomicAdd(01c20D00D00D
imageAtomicAdd(01c20D00D00E
imageAtomicAdd(01d20D00D
imageAtomicAdd(01d20D00E
imageAtomicAdd(01e10D00D
imageAtomicAdd(01e10D00E
imageAtomicAdd(01f00D00D
imageAtomicAdd(01f00D00E
imageAtomicAnd
imageAtomicAnd(00z10D00D
imageAtomicAnd(00z10D00E
imageAtomicAnd(01A20D00D
imageAtomicAnd(01A20D00E
imageAtomicAnd(01B20D00D
imageAtomicAnd(01B20D00E
imageAtomicAnd(01C20D00D
imageAtomicAnd(01C20D00E
imageAtomicAnd(01D00D00D
imageAtomicAnd(01D00D00E
imageAtomicAnd(01E10D00D
imageAtomicAnd(01E10D00E
imageAtomicAnd(01F10D00D00D
imageAtomicAnd(01F10D00D00E
imageAtomicAnd(01G20D00D00D
imageAtomicAnd(01G20D00D00E
imageAtomicAnd(01H20D00D
imageAtomicAnd(01H20D00E
imageAtomicAnd(01I10D00D
imageAtomicAnd(01I10D00E
imageAtomicAnd(01J00D00D
imageAtomicAnd(01J00D00E
imageAtomicAnd(01K10D00D
imageAtomicAnd(01K10D00E
imageAtomicAnd(01L20D00D
imageAtomicAnd(01L20D00E
imageAtomicAnd(01M20D00D
imageAtomicAnd(01M20D00E
imageAtomicAnd(01N20D00D
imageAtomicAnd(01N20D00E
imageAtomicAnd(01O00D00D
imageAtomicAnd(01O00D00E
imageAtomicAnd(01P10D00D
imageAtomicAnd(01P10D00E
imageAtomicAnd(01Q10D00D00D
imageAtomicAnd(01Q10D00D00E
imageAtomicAnd(01R20D00D00D
imageAtomicAnd(01R20D00D00E
imageAtomicAnd(01S20D00D
imageAtomicAnd(01S20D00E
imageAtomicAnd(01T10D00D
imageAtomicAnd(01T10D00E
imageAtomicAnd(01U00D00D
imageAtomicAnd(01U00D00E
imageAtomicAnd(01V10D00D
imageAtomicAnd(01V10D00E
imageAtomicAnd(01W20D00D
imageAtomicAnd(01W20D00E
imageAtomicAnd(01X20D00D
imageAtomicAnd(01X20D00E
imageAtomicAnd(01Y20D00D
imageAtomicAnd(01Y20D00E
imageAtomicAnd(01Z00D00D
imageAtomicAnd(01Z00D00E
imageAtomicAnd(01a10D00D
imageAtomicAnd(01a10D00E
imageAtomicAnd(01b10D00D00D
imageAtomicAnd(01b10D00D00E
imageAtomicAnd(01c20D00D00D
imageAtomicAnd(01c20D00D00E
imageAtomicAnd(01d20D00D
imageAtomicAnd(01d20D00E
imageAtomicAnd(01e10D00D
imageAtomicAnd(01e10D00E
imageAtomicAnd(01f00D00D
imageAtomicAnd(01f00D00E
imageAtomicCompSwap
imageAtomicCompSwap(00z10D00D00D
imageAtomicCompSwap(00z10D00E00E
imageAtomicCompSwap(01A20D00D00D
imageAtomicCompSwap(01A20D00E00E
imageAtomicCompSwap(01B20D00D00D
imageAtomicCompSwap(01B20D00E00E
imageAtomicCompSwap(01C20D00D00D
imageAtomicCompSwap(01C20D00E00E
imageAtomicCompSwap(01D00D00D00D
imageAtomicCompSwap(01D00D00E00E
imageAtomicCompSwap(01E10D00D00D
imageAtomicCompSwap(01E10D00E00E
imageAtomicCompSwap(01F10D00D00D00D
imageAtomicCompSwap(01F10D00D00E00E
imageAtomicCompSwap(01G20D00D00D00D
imageAtomicCompSwap(01G20D00D00E00E
imageAtomicCompSwap(01H20D00D00D
imageAtomicCompSwap(01H20D00E00E
imageAtomicCompSwap(01I10D00D00D
imageAtomicCompSwap(01I10D00E00E
imageAtomicCompSwap(01J00D00D00D
imageAtomicCompSwap(01J00D00E00E
imageAtomicCompSwap(01K10D00D00D
imageAtomicCompSwap(01K10D00E00E
imageAtomicCompSwap(01L20D00D00D
imageAtomicCompSwap(01L20D00E00E
imageAtomicCompSwap(01M20D00D00D
imageAtomicCompSwap(01M20D00E00E
imageAtomicCompSwap(01N20D00D00D
imageAtomicCompSwap(01N20D00E00E
imageAtomicCompSwap(01O00D00D00D
imageAtomicCompSwap(01O00D00E00E
imageAtomicCompSwap(01P10D00D00D
imageAtomicCompSwap(01P10D00E00E
imageAtomicCompSwap(01Q10D00D00D00D
imageAtomicCompSwap(01Q10D00D00E00E
imageAtomicCompSwap(01R20D00D00D00D
imageAtomicCompSwap(01R20D00D00E00E
imageAtomicCompSwap(01S20D00D00D
imageAtomicCompSwap(01S20D00E00E
imageAtomicCompSwap(01T10D00D00D
imageAtomicCompSwap(01T10D00E00E
imageAtomicCompSwap(01U00D00D00D
imageAtomicCompSwap(01U00D00E00E
imageAtomicCompSwap(01V10D00D00D
imageAtomicCompSwap(01V10D00E00E
imageAtomicCompSwap(01W20D00D00D
imageAtomicCompSwap(01W20D00E00E
imageAtomicCompSwap(01X20D00D00D
imageAtomicCompSwap(01X20D00E00E
imageAtomicCompSwap(01Y20D00D00D
imageAtomicCompSwap(01Y20D00E00E
imageAtomicCompSwap(01Z00D00D00D
imageAtomicCompSwap(01Z00D00E00E
imageAtomicCompSwap(01a10D00D00D
imageAtomicCompSwap(01a10D00E00E
imageAtomicCompSwap(01b10D00D00D00D
imageAtomicCompSwap(01b10D00D00E00E
imageAtomicCompSwap(01c20D00D00D00D
imageAtomicCompSwap(01c20D00D00E00E
imageAtomicCompSwap(01d20D00D00D
imageAtomicCompSwap(01d20D00E00E
imageAtomicCompSwap(01e10D00D00D
imageAtomicCompSwap(01e10D00E00E
imageAtomicCompSwap(01f00D00D00D
imageAtomicCompSwap(01f00D00E00E
imageAtomicExchadAGX
imageAtomicExchange
imageAtomicExchange(00z10D00B
imageAtomicExchange(00z10D00D
imageAtomicExchange(00z10D00E
imageAtomicExchange(01A20D00B
imageAtomicExchange(01A20D00D
imageAtomicExchange(01A20D00E
imageAtomicExchange(01B20D00B
imageAtomicExchange(01B20D00D
imageAtomicExchange(01B20D00E
imageAtomicExchange(01C20D00B
imageAtomicExchange(01C20D00D
imageAtomicExchange(01C20D00E
imageAtomicExchange(01D00D00B
imageAtomicExchange(01D00D00D
imageAtomicExchange(01D00D00E
imageAtomicExchange(01E10D00B
imageAtomicExchange(01E10D00D
imageAtomicExchange(01E10D00E
imageAtomicExchange(01F10D00D00B
imageAtomicExchange(01F10D00D00D
imageAtomicExchange(01F10D00D00E
imageAtomicExchange(01G20D00D00B
imageAtomicExchange(01G20D00D00D
imageAtomicExchange(01G20D00D00E
imageAtomicExchange(01H20D00B
imageAtomicExchange(01H20D00D
imageAtomicExchange(01H20D00E
imageAtomicExchange(01I10D00B
imageAtomicExchange(01I10D00D
imageAtomicExchange(01I10D00E
imageAtomicExchange(01J00D00B
imageAtomicExchange(01J00D00D
imageAtomicExchange(01J00D00E
imageAtomicExchange(01K10D00B
imageAtomicExchange(01K10D00D
imageAtomicExchange(01K10D00E
imageAtomicExchange(01L20D00B
imageAtomicExchange(01L20D00D
imageAtomicExchange(01L20D00E
imageAtomicExchange(01M20D00B
imageAtomicExchange(01M20D00D
imageAtomicExchange(01M20D00E
imageAtomicExchange(01N20D00B
imageAtomicExchange(01N20D00D
imageAtomicExchange(01N20D00E
imageAtomicExchange(01O00D00B
imageAtomicExchange(01O00D00D
imageAtomicExchange(01O00D00E
imageAtomicExchange(01P10D00B
imageAtomicExchange(01P10D00D
imageAtomicExchange(01P10D00E
imageAtomicExchange(01Q10D00D00B
imageAtomicExchange(01Q10D00D00D
imageAtomicExchange(01Q10D00D00E
imageAtomicExchange(01R20D00D00B
imageAtomicExchange(01R20D00D00D
imageAtomicExchange(01R20D00D00E
imageAtomicExchange(01S20D00B
imageAtomicExchange(01S20D00D
imageAtomicExchange(01S20D00E
imageAtomicExchange(01T10D00B
imageAtomicExchange(01T10D00D
imageAtomicExchange(01T10D00E
imageAtomicExchange(01U00D00B
imageAtomicExchange(01U00D00D
imageAtomicExchange(01U00D00E
imageAtomicExchange(01V10D00B
imageAtomicExchange(01V10D00D
imageAtomicExchange(01V10D00E
imageAtomicExchange(01W20D00B
imageAtomicExchange(01W20D00D
imageAtomicExchange(01W20D00E
imageAtomicExchange(01X20D00B
imageAtomicExchange(01X20D00D
imageAtomicExchange(01X20D00E
imageAtomicExchange(01Y20D00B
imageAtomicExchange(01Y20D00D
imageAtomicExchange(01Y20D00E
imageAtomicExchange(01Z00D00B
imageAtomicExchange(01Z00D00D
imageAtomicExchange(01Z00D00E
imageAtomicExchange(01a10D00B
imageAtomicExchange(01a10D00D
imageAtomicExchange(01a10D00E
imageAtomicExchange(01b10D00D00B
imageAtomicExchange(01b10D00D00D
imageAtomicExchange(01b10D00D00E
imageAtomicExchange(01c20D00D00B
imageAtomicExchange(01c20D00D00D
imageAtomicExchange(01c20D00D00E
imageAtomicExchange(01d20D00B
imageAtomicExchange(01d20D00D
imageAtomicExchange(01d20D00E
imageAtomicExchange(01e10D00B
imageAtomicExchange(01e10D00D
imageAtomicExchange(01e10D00E
imageAtomicExchange(01f00D00B
imageAtomicExchange(01f00D00D
imageAtomicExchange(01f00D00E
imageAtomicMax
imageAtomicMax(00z10D00D
imageAtomicMax(00z10D00E
imageAtomicMax(01A20D00D
imageAtomicMax(01A20D00E
imageAtomicMax(01B20D00D
imageAtomicMax(01B20D00E
imageAtomicMax(01C20D00D
imageAtomicMax(01C20D00E
imageAtomicMax(01D00D00D
imageAtomicMax(01D00D00E
imageAtomicMax(01E10D00D
imageAtomicMax(01E10D00E
imageAtomicMax(01F10D00D00D
imageAtomicMax(01F10D00D00E
imageAtomicMax(01G20D00D00D
imageAtomicMax(01G20D00D00E
imageAtomicMax(01H20D00D
imageAtomicMax(01H20D00E
imageAtomicMax(01I10D00D
imageAtomicMax(01I10D00E
imageAtomicMax(01J00D00D
imageAtomicMax(01J00D00E
imageAtomicMax(01K10D00D
imageAtomicMax(01K10D00E
imageAtomicMax(01L20D00D
imageAtomicMax(01L20D00E
imageAtomicMax(01M20D00D
imageAtomicMax(01M20D00E
imageAtomicMax(01N20D00D
imageAtomicMax(01N20D00E
imageAtomicMax(01O00D00D
imageAtomicMax(01O00D00E
imageAtomicMax(01P10D00D
imageAtomicMax(01P10D00E
imageAtomicMax(01Q10D00D00D
imageAtomicMax(01Q10D00D00E
imageAtomicMax(01R20D00D00D
imageAtomicMax(01R20D00D00E
imageAtomicMax(01S20D00D
imageAtomicMax(01S20D00E
imageAtomicMax(01T10D00D
imageAtomicMax(01T10D00E
imageAtomicMax(01U00D00D
imageAtomicMax(01U00D00E
imageAtomicMax(01V10D00D
imageAtomicMax(01V10D00E
imageAtomicMax(01W20D00D
imageAtomicMax(01W20D00E
imageAtomicMax(01X20D00D
imageAtomicMax(01X20D00E
imageAtomicMax(01Y20D00D
imageAtomicMax(01Y20D00E
imageAtomicMax(01Z00D00D
imageAtomicMax(01Z00D00E
imageAtomicMax(01a10D00D
imageAtomicMax(01a10D00E
imageAtomicMax(01b10D00D00D
imageAtomicMax(01b10D00D00E
imageAtomicMax(01c20D00D00D
imageAtomicMax(01c20D00D00E
imageAtomicMax(01d20D00D
imageAtomicMax(01d20D00E
imageAtomicMax(01e10D00D
imageAtomicMax(01e10D00E
imageAtomicMax(01f00D00D
imageAtomicMax(01f00D00E
imageAtomicMin
imageAtomicMin(00z10D00D
imageAtomicMin(00z10D00E
imageAtomicMin(01A20D00D
imageAtomicMin(01A20D00E
imageAtomicMin(01B20D00D
imageAtomicMin(01B20D00E
imageAtomicMin(01C20D00D
imageAtomicMin(01C20D00E
imageAtomicMin(01D00D00D
imageAtomicMin(01D00D00E
imageAtomicMin(01E10D00D
imageAtomicMin(01E10D00E
imageAtomicMin(01F10D00D00D
imageAtomicMin(01F10D00D00E
imageAtomicMin(01G20D00D00D
imageAtomicMin(01G20D00D00E
imageAtomicMin(01H20D00D
imageAtomicMin(01H20D00E
imageAtomicMin(01I10D00D
imageAtomicMin(01I10D00E
imageAtomicMin(01J00D00D
imageAtomicMin(01J00D00E
imageAtomicMin(01K10D00D
imageAtomicMin(01K10D00E
imageAtomicMin(01L20D00D
imageAtomicMin(01L20D00E
imageAtomicMin(01M20D00D
imageAtomicMin(01M20D00E
imageAtomicMin(01N20D00D
imageAtomicMin(01N20D00E
imageAtomicMin(01O00D00D
imageAtomicMin(01O00D00E
imageAtomicMin(01P10D00D
imageAtomicMin(01P10D00E
imageAtomicMin(01Q10D00D00D
imageAtomicMin(01Q10D00D00E
imageAtomicMin(01R20D00D00D
imageAtomicMin(01R20D00D00E
imageAtomicMin(01S20D00D
imageAtomicMin(01S20D00E
imageAtomicMin(01T10D00D
imageAtomicMin(01T10D00E
imageAtomicMin(01U00D00D
imageAtomicMin(01U00D00E
imageAtomicMin(01V10D00D
imageAtomicMin(01V10D00E
imageAtomicMin(01W20D00D
imageAtomicMin(01W20D00E
imageAtomicMin(01X20D00D
imageAtomicMin(01X20D00E
imageAtomicMin(01Y20D00D
imageAtomicMin(01Y20D00E
imageAtomicMin(01Z00D00D
imageAtomicMin(01Z00D00E
imageAtomicMin(01a10D00D
imageAtomicMin(01a10D00E
imageAtomicMin(01b10D00D00D
imageAtomicMin(01b10D00D00E
imageAtomicMin(01c20D00D00D
imageAtomicMin(01c20D00D00E
imageAtomicMin(01d20D00D
imageAtomicMin(01d20D00E
imageAtomicMin(01e10D00D
imageAtomicMin(01e10D00E
imageAtomicMin(01f00D00D
imageAtomicMin(01f00D00E
imageAtomicOr
imageAtomicOr(00z10D00D
imageAtomicOr(00z10D00E
imageAtomicOr(01A20D00D
imageAtomicOr(01A20D00E
imageAtomicOr(01B20D00D
imageAtomicOr(01B20D00E
imageAtomicOr(01C20D00D
imageAtomicOr(01C20D00E
imageAtomicOr(01D00D00D
imageAtomicOr(01D00D00E
imageAtomicOr(01E10D00D
imageAtomicOr(01E10D00E
imageAtomicOr(01F10D00D00D
imageAtomicOr(01F10D00D00E
imageAtomicOr(01G20D00D00D
imageAtomicOr(01G20D00D00E
imageAtomicOr(01H20D00D
imageAtomicOr(01H20D00E
imageAtomicOr(01I10D00D
imageAtomicOr(01I10D00E
imageAtomicOr(01J00D00D
imageAtomicOr(01J00D00E
imageAtomicOr(01K10D00D
imageAtomicOr(01K10D00E
imageAtomicOr(01L20D00D
imageAtomicOr(01L20D00E
imageAtomicOr(01M20D00D
imageAtomicOr(01M20D00E
imageAtomicOr(01N20D00D
imageAtomicOr(01N20D00E
imageAtomicOr(01O00D00D
imageAtomicOr(01O00D00E
imageAtomicOr(01P10D00D
imageAtomicOr(01P10D00E
imageAtomicOr(01Q10D00D00D
imageAtomicOr(01Q10D00D00E
imageAtomicOr(01R20D00D00D
imageAtomicOr(01R20D00D00E
imageAtomicOr(01S20D00D
imageAtomicOr(01S20D00E
imageAtomicOr(01T10D00D
imageAtomicOr(01T10D00E
imageAtomicOr(01U00D00D
imageAtomicOr(01U00D00E
imageAtomicOr(01V10D00D
imageAtomicOr(01V10D00E
imageAtomicOr(01W20D00D
imageAtomicOr(01W20D00E
imageAtomicOr(01X20D00D
imageAtomicOr(01X20D00E
imageAtomicOr(01Y20D00D
imageAtomicOr(01Y20D00E
imageAtomicOr(01Z00D00D
imageAtomicOr(01Z00D00E
imageAtomicOr(01a10D00D
imageAtomicOr(01a10D00E
imageAtomicOr(01b10D00D00D
imageAtomicOr(01b10D00D00E
imageAtomicOr(01c20D00D00D
imageAtomicOr(01c20D00D00E
imageAtomicOr(01d20D00D
imageAtomicOr(01d20D00E
imageAtomicOr(01e10D00D
imageAtomicOr(01e10D00E
imageAtomicOr(01f00D00D
imageAtomicOr(01f00D00E
imageAtomicXor
imageAtomicXor(00z10D00D
imageAtomicXor(00z10D00E
imageAtomicXor(01A20D00D
imageAtomicXor(01A20D00E
imageAtomicXor(01B20D00D
imageAtomicXor(01B20D00E
imageAtomicXor(01C20D00D
imageAtomicXor(01C20D00E
imageAtomicXor(01D00D00D
imageAtomicXor(01D00D00E
imageAtomicXor(01E10D00D
imageAtomicXor(01E10D00E
imageAtomicXor(01F10D00D00D
imageAtomicXor(01F10D00D00E
imageAtomicXor(01G20D00D00D
imageAtomicXor(01G20D00D00E
imageAtomicXor(01H20D00D
imageAtomicXor(01H20D00E
imageAtomicXor(01I10D00D
imageAtomicXor(01I10D00E
imageAtomicXor(01J00D00D
imageAtomicXor(01J00D00E
imageAtomicXor(01K10D00D
imageAtomicXor(01K10D00E
imageAtomicXor(01L20D00D
imageAtomicXor(01L20D00E
imageAtomicXor(01M20D00D
imageAtomicXor(01M20D00E
imageAtomicXor(01N20D00D
imageAtomicXor(01N20D00E
imageAtomicXor(01O00D00D
imageAtomicXor(01O00D00E
imageAtomicXor(01P10D00D
imageAtomicXor(01P10D00E
imageAtomicXor(01Q10D00D00D
imageAtomicXor(01Q10D00D00E
imageAtomicXor(01R20D00D00D
imageAtomicXor(01R20D00D00E
imageAtomicXor(01S20D00D
imageAtomicXor(01S20D00E
imageAtomicXor(01T10D00D
imageAtomicXor(01T10D00E
imageAtomicXor(01U00D00D
imageAtomicXor(01U00D00E
imageAtomicXor(01V10D00D
imageAtomicXor(01V10D00E
imageAtomicXor(01W20D00D
imageAtomicXor(01W20D00E
imageAtomicXor(01X20D00D
imageAtomicXor(01X20D00E
imageAtomicXor(01Y20D00D
imageAtomicXor(01Y20D00E
imageAtomicXor(01Z00D00D
imageAtomicXor(01Z00D00E
imageAtomicXor(01a10D00D
imageAtomicXor(01a10D00E
imageAtomicXor(01b10D00D00D
imageAtomicXor(01b10D00D00E
imageAtomicXor(01c20D00D00D
imageAtomicXor(01c20D00D00E
imageAtomicXor(01d20D00D
imageAtomicXor(01d20D00E
imageAtomicXor(01e10D00D
imageAtomicXor(01e10D00E
imageAtomicXor(01f00D00D
imageAtomicXor(01f00D00E
imageLayout: VK_IMAGE_LAYOUT_GENERAL
imageLoad
imageLoad(00z10D
imageLoad(01A20D
imageLoad(01B20D
imageLoad(01C20D
imageLoad(01H20D
imageLoad(01J00D
imageLoad(01K10D
imageLoad(01L20D
imageLoad(01M20D
imageLoad(01N20D
imageLoad(01S20D
imageLoad(01U00D
imageLoad(01V10D
imageLoad(01W20D
imageLoad(01X20D
imageLoad(01Y20D
imageLoad(01d20D
imageLoad(01f00D
imageLoad(i
imageSize
imageSize is too small.
imageSize must be 0 if no texture data is provided.
imageSize(00z
imageSize(01A
imageSize(01B
imageSize(01C
imageSize(01H
imageSize(01J
imageSize(01K
imageSize(01L
imageSize(01M
imageSize(01N
imageSize(01S
imageSize(01U
imageSize(01V
imageSize(01W
imageSize(01X
imageSize(01Y
imageSize(01d
imageSize(01f
imageStore
imageStore(00z10D30B
imageStore(01A20D30B
imageStore(01B20D30B
imageStore(01C20D30B
imageStore(01H20D30B
imageStore(01J00D30B
imageStore(01K10D30D
imageStore(01L20D30D
imageStore(01M20D30D
imageStore(01N20D30D
imageStore(01S20D30D
imageStore(01U00D30D
imageStore(01V10D30E
imageStore(01W20D30E
imageStore(01X20D30E
imageStore(01Y20D30E
imageStore(01d20D30E
imageStore(01f00D30E
imageStore(i
implicitly sized array constructor must have at least one argument
implicitly sized array of arrays constructor argument dimensionality is too low
implicitly sized array of arrays constructor argument is not an array
implicitly sized array supported in GLSL ES 3.00 and above only
implicitly sized arrays only allowed for tessellation shaders or geometry shader inputs
importFd
importOpaqueFd
importZirconEvent
importZirconHandle
imulExtended
imulExtended(00D00D00D00D
imulExtended(10D10D10D10D
imulExtended(20D20D20D20D
imulExtended(30D30D30D30D
in type qualifier supported in GLSL ES 3.10 and after
in type qualifier supported in GLSL ES 3.10 only
in type qualifier without variable declaration supported in GLSL ES 3.10 and after
incompatible version
incorrect buffer dimensions requested
incorrect channel size requested
incorrect data check
incorrect header check
incorrect length check
index = 
index expression is negative
index is negative.
index is too big.
indexable
indirect index
indirect must be a multiple of the size of uint in basic machine units.
init-expression in a switch statement must be a scalar integer
initBufferAllocation
initCaps
initExternalMemory
initFeatures
initFragmentOutputVariables
initGlobals
initImageAllocation
initImpl
initLayerImageViewImpl
initMemoryAndNonZeroFillIfNeeded
initPipelineCache
initStaging
initWithFormat
initialize first child with second child
initializeContents
initializeContext
initializeCurrentVertexAttributes
initializeImpl
initializeMemoryAllocator
initializeNonZeroMemory
initializePipelineCache
initializeWithFd
inout
insertMessage
insufficient memory
int abs_emu(int x) { return x * sign(x); }
intBitsToFloat(00D
intBitsToFloat(10D
intBitsToFloat(20D
intBitsToFloat(30D
integer expression required
integer modulus operator supported in GLSL ES 3.00 and above only
integer overflow
intended_format
interface '%s' has no event %u\n
interface block has no fields
interface blocks supported in GLSL ES 3.00 and above only
internal compiler error translating pixel local storage
internal error
internal image format requires a floating image type
internal image format requires an integer image type
internal image format requires an unsigned image type
internal tokenizer error
internalformat is a BPTC format and target is not GL_TEXTURE_2D_ARRAY.
internalformat is an ASTC format and target is not GL_TEXTURE_2D_ARRAY.
internalformat is an ETC1 or PVRTC1 format.
internalformat is an ETC2/EAC format and target is not GL_TEXTURE_2D_ARRAY.
internalformat is an RGTC format and target is not GL_TEXTURE_2D_ARRAY.
internalformat is an S3TC format and target is not GL_TEXTURE_2D_ARRAY.
interpolateAtCenter
interpolateAtCenter(00B
interpolateAtCenter(10B
interpolateAtCenter(20B
interpolateAtCenter(30B
interpolateAtCentroid
interpolateAtCentroid(00B
interpolateAtCentroid(10B
interpolateAtCentroid(20B
interpolateAtCentroid(30B
interpolateAtOffset
interpolateAtOffset(00B10B
interpolateAtOffset(10B10B
interpolateAtOffset(20B10B
interpolateAtOffset(30B10B
interpolateAtSample
interpolateAtSample(00B00D
interpolateAtSample(10B00D
interpolateAtSample(20B00D
interpolateAtSample(30B00D
invalid GL colorspace
invalid attribute
invalid attribute list.
invalid attribute: 0x%04lxX
invalid bit length repeat
invalid block type
invalid character
invalid code -- missing end-of-block
invalid code lengths set
invalid compositor timing.
invalid directive name
invalid distance code
invalid distance too far back
invalid distances set
invalid expression
invalid extension behavior
invalid extension directive
invalid extension name
invalid file number
invalid layout qualifier
invalid layout qualifier combination
invalid layout qualifier on struct member
invalid layout qualifier: blending equation qualifiers are only permitted on the fragment 'out' qualifier 
invalid layout qualifier: cannot be used here
invalid layout qualifier: location requires an argument
invalid layout qualifier: not supported
invalid layout qualifier: not supported before GLSL ES 3.10
invalid layout qualifier: not supported before GLSL ES 3.10, except pixel local storage
invalid layout qualifier: only valid on gl_FragDepth
invalid layout qualifier: only valid on program inputs and outputs
invalid layout qualifier: only valid on program outputs
invalid layout qualifier: only valid on shader inputs, outputs, and uniforms
invalid layout qualifier: only valid when used with 'gl_LastFragData' or the variable decorated with 'inout' in a fragment shader
invalid layout qualifier: only valid when used with 'in' in a compute shader global layout declaration
invalid layout qualifier: only valid when used with 'in' in a fragment shader
invalid layout qualifier: only valid when used with a fragment shader output in ESSL version >= 3.00 and EXT_blend_func_extended is enabled
invalid layout qualifier: only valid when used with atomic counters
invalid layout qualifier: only valid when used with images
invalid layout qualifier: only valid when used with images or pixel local storage 
invalid layout qualifier: only valid when used with opaque types or blocks
invalid layout qualifier: only valid when used with pixel local storage
invalid line directive
invalid line number
invalid literal/length code
invalid literal/lengths set
invalid memory qualifier on struct member
invalid method
invalid number
invalid object (%u), type (%s), message %s(%s)\n
invalid or missing storage qualifier
invalid parameter qualifier
invalid pragma value - 'on' or 'off' expected
invalid precise qualifier on struct member
invalid primitive type for 'in' layout
invalid primitive type for 'out' layout
invalid qualifier combination
invalid qualifier on interface block
invalid qualifier on interface block member
invalid qualifier on shader storage block member
invalid qualifier on struct member
invalid qualifier on uniform block member
invalid qualifier: 'patch in' requires a tessellation evaluation shader
invalid qualifier: 'patch out' requires a tessellation control shader
invalid qualifier: can be used with either function parameters or the variables for fetching input attachment data
invalid qualifier: global layout can only be set for blocks
invalid qualifier: interface blocks must be uniform in version lower than GLSL ES 3.10
invalid qualifier: interface blocks must be uniform or buffer
invalid qualifier: shader IO blocks need shader io block extension
invalid stored block lengths
invalid target: 0x%X
invalid timestamp type.
invalid timing name.
invalid usage flag
invalid value: Value must be at least 1 and no greater than 
invalid version directive
invalid version number
invalid window size
invariant
invariant 
invariant gl_Position;\n
invariant or precise declaration specifies layout
invariant or precise declaration specifies precision
invariant or precise declaration specifies qualifier
invariant varying
inverse
inverse(50B
inverse(A0B
inverse(F0B
inversesqrt
inversesqrt(00B
inversesqrt(10B
inversesqrt(20B
inversesqrt(30B
invocations
invocations = 
invocations can only be declared in 'in' layout in a geometry shader
invocations contradicts to the earlier declaration
ios_base::clear
iostream
ip_cull_distance
ips0];
isAMD || IsAndroid()
isAMD || isSamsung
isARM && armDriverVersion < ARMDriverVersion(38, 1, 0)
isARM && armDriverVersion < ARMDriverVersion(43, 0, 0)
isARM || (isNvidia && nvidiaVersion.major < 470u)
isARM || isSwiftShader
isAdreno4xxOnAndroidLessThan51 || isAdreno4xxOnAndroid70 || isAdreno5xxOnAndroidLessThan70 || isAdreno5xxOnAndroid71 || isLinuxVivante || isWindowsNVIDIA
isAndroidAtLeast14
isAndroidLessThan14 || isIntelLinuxLessThanKernelVersion5
isApple
isDualGPUMacWithNVIDIA
isImagination
isImmediateModeRenderer
isIntel && !IsSandyBridge(device) && !IsIvyBridge(device) && !IsHaswell(device)
isIntel && IsApple() && IsSkylake(device) && GetMacOSVersion() < OSVersion(10, 13, 2)
isIntel || isAMD
isMali
isMaliJobManagerBasedGPU
isMesa && (mesaVersion < (std::array<int, 3>{21, 3, 0}) || (mesaVersion < (std::array<int, 3>{23, 3, 0}) && functions->standard == STANDARD_GL_ES))
isNvidia && !mFeatures.supportsDepthClampZeroOne.enabled
isNvidia && (IsWindows() || IsLinux())
isNvidia && (nvidiaVersion.major >= 535 && nvidiaVersion.major <= 551)
isNvidia && nvidiaVersion.major < uint32_t(IsWindows() ? 430 : 421)
isNvidia || isQualcommProprietary
isPowerVR
isQualcommProprietary && isAdreno540
isTSANBuild && IsLinux() && isNvidia
isTileBasedRenderer
isValidNativeWindow
isampler2D
isampler2DArray
isampler2DMS
isampler2DMSArray
isampler3D
isamplerCube
isinf
isinf(00B
isinf(10B
isinf(20B
isinf(30B
isnan
isnan(00B
isnan(10B
isnan(20B
isnan(30B
isolines
isubpassInput
isubpassInputMS
itu_601
itu_601_full_range
itu_709
ivec
ivec2
ivec3
ivec4
j1Z7
j45L
j4=Y
j7G\f
j>yz
j?$Dsp
jEg&
jGg.
jXze
jY7d
jhMU
jt7?
jtyF
jz'G
jzy4
j|b'3
k1h1,
k7M~
kExposeNonConformantExtensionsAndVersions && !isVenus
kJFl
kKTQ
kO}e
kQSx
kUq-3
k\fX\tls
k\ru`ZC
ka)QO
kan Mock Device
kcvl
kcv|
keepBufferShadowCopy
key and binary must both be null or both non-null.
keymap
keysize and binarysize must always be valid pointers.
kk"y
kk-L
km0k
koUE
kp+c8
kp\rgJ
ktyF`
l1aI`7
l3a]
l:aC
l>w9
lA\nmi
lGLZ{
lKa-SgI
lOx>B
lXt=
l\va-RoAx}M
l]]9ej
l^Wi)
label statement nested inside control flow
layout (
layout (early_fragment_tests) in;\n
layout (local_size_x=
layout qualifier only valid for interface blocks
layout qualifiers supported in GLSL ES 3.00 and after
layout(
layout(binding=
layout(num_views=
ld-linux-x86-64.so.2
ldexp
ldexp(00B00D
ldexp(10B10D
ldexp(20B20D
ldexp(30B30D
ldexpf
leave
length can only be called on arrays
length(00B
length(10B
length(20B
length(30B
length_error was thrown in -fno-exceptions mode with message "%s"
lessThan
lessThan(10B10B
lessThan(10D10D
lessThan(10E10E
lessThan(20B20B
lessThan(20D20D
lessThan(20E20E
lessThan(30B30B
lessThan(30D30D
lessThan(30E30E
lessThanEqual
lessThanEqual(10B10B
lessThanEqual(10D10D
lessThanEqual(10E10E
lessThanEqual(20B20B
lessThanEqual(20D20D
lessThanEqual(20E20E
lessThanEqual(30B30B
lessThanEqual(30D30D
lessThanEqual(30E30E
lfm1
libEGL.so.1
libGL.so.1
libGLESv2.so
libX11.so.6
libXext.so.6
libc++abi: 
libc.so.6
libdl.so.2
libdrm.so.2
libgcc_s.so.1
libm.so.6
libpci.so
libpci.so.3
libpthread.so.0
libraryBlobsAreReusedByMonolithicPipelines && !isQualcommProprietary && !(IsLinux() && isIntel) && !(IsChromeOS() && isSwiftShader)
libvulkan.so
libvulkan.so.1
libxcb.so.1
light_ambients
light_attenuation_consts
light_attenuation_linears
light_attenuation_quadratics
light_diffuses
light_directions
light_enables
light_model_scene_ambient
light_model_two_sided
light_positions
light_speculars
light_spotlight_cutoff_angles
light_spotlight_exponents
limit must be non-negative.
limitMax3dArrayTextureSizeTo1024
limitMaxMSAASamplesTo4
limitSampleCountTo2
limitWebglMaxTextureSizeTo4096
limitWebglMaxTextureSizeTo8192
line_strip
lines_adjacency
linkJobIsThreadSafe
linkProgram
listener function for opcode %u of %s is NULL\n
lkXIR
load with loadOp VK_ATTACHMENT_LOAD_OP_DONT_CARE. Access info (usage: SYNC_EARLY_FRAGMENT_TESTS_DEPTH_STENCIL_ATTACHMENT_WRITE, prior_usage: SYNC_FRAGMENT_SHADER_SHADER_
local function prototype declarations are not allowed
local_size_x
local_size_y
local_size_z
locale not supported
location = 
location must not be set for atomic_uint
location must only be specified for a single input or output variable
log(00B
log(10B
log(20B
log(30B
log2
log2(00B
log2(10B
log2(20B
log2(30B
logError
logInfo
logWarning
logf
logical-and
logical-or
logical-xor
loseContextOnOutOfMemory
lsa-
lsvW
l}d>\vq3
m16BitStorageFeatures.storageBuffer16BitAccess == 1U
m16BitStorageFeatures.storageInputOutput16 == 1U
m16BitStorageFeatures.storagePushConstant16 == 1U
m16BitStorageFeatures.uniformAndStorageBuffer16BitAccess == 1U
m21<
m25V
m29N
m8BitStorageFeatures.storageBuffer8BitAccess == 1U
m8BitStorageFeatures.storagePushConstant8 == 1U
m8BitStorageFeatures.uniformAndStorageBuffer8BitAccess == 1U
m8\v\vB
m?zI
mCustomBorderColorFeatures.customBorderColors == 1U && mCustomBorderColorFeatures.customBorderColorWithoutFormat == 1U
mDepthClampZeroOneFeatures.depthClampZeroOne == 1U
mDepthClipControlFeatures.depthClipControl == 1U
mDitheringFeatures.legacyDithering == 1U
mExtendedDynamicState2Features.extendedDynamicState2 == 1U && !isExtendedDynamicStateBuggy
mExtendedDynamicStateFeatures.extendedDynamicState == 1U && !isExtendedDynamicStateBuggy
mFeatures.hasEffectivePipelineCacheSerialization.enabled && (hasNoPipelineWarmUp || canSyncLargeMonolithicCache)
mFeatures.supportsDepthStencilResolve.enabled && mDepthStencilResolveProperties.independentResolveNone
mFeatures.supportsExtendedDynamicState.enabled
mFeatures.supportsExtendedDynamicState.enabled && !isExtendedDynamicStateBuggy
mFeatures.supportsExtendedDynamicState.enabled && !mFeatures.supportsVertexInputDynamicState.enabled && !isExtendedDynamicStateBuggy && !isVertexInputBindingStrideBuggy
mFeatures.supportsExtendedDynamicState2.enabled
mFeatures.supportsExtendedDynamicState2.enabled && !isExtendedDynamicStateBuggy
mFeatures.supportsExtendedDynamicState2.enabled && mExtendedDynamicState2Features.extendedDynamicState2LogicOp == 1U && !(IsLinux() && isIntel && isMesaLessThan22_2) && !(IsAndroid() && isGalaxyS23)
mFeatures.supportsImage2dViewOf3d.enabled && mImage2dViewOf3dFeatures.sampler2DViewOf3D == 1U
mFeatures.supportsImagelessFramebuffer.enabled && mFeatures.supportsRenderPassLoadStoreOpNone.enabled && mFeatures.supportsFragmentShadingRate.enabled && canSupportFoveatedRendering()
mFeatures.supportsMultisampledRenderToSingleSampled.enabled || mFeatures.supportsMultisampledRenderToSingleSampledGOOGLEX.enabled || (mFeatures.supportsDepthStencilResolve.enabled && mFeatures.allowMultisampledRenderToTextureEmulation.enabled)
mFeatures.supportsPortabilityEnumeration.enabled && IsApple()
mFeatures.supportsRenderpass2.enabled && mDepthStencilResolveProperties.supportedDepthResolveModes != 0
mFeatures.supportsRenderpass2.enabled && mFeatures.supportsDepthStencilResolve.enabled && mMultisampledRenderToSingleSampledFeatures.multisampledRenderToSingleSampled == 1U
mFeatures.supportsTransformFeedbackExtension.enabled && mPrimitivesGeneratedQueryFeatures.primitivesGeneratedQuery == 1U
mFeatures.supportsTransformFeedbackExtension.enabled && mTransformFeedbackFeatures.geometryStreams == 1U
mFragmentShaderInterlockFeatures.fragmentShaderPixelInterlock == 1U
mFunctions->copyTexImage2D(GL_TEXTURE_2D, 0, copyTexImageFormat.internalFormat, inBoundsSource.x, inBoundsSource.y, inBoundsSource.width, inBoundsSource.height, 0)
mFunctions->copyTexImage2D(GL_TEXTURE_2D, 0, copyTexImageFormat.internalFormat, sourceArea.x, sourceArea.y, sourceArea.width, sourceArea.height, 0)
mFunctions->texImage2D(GL_TEXTURE_2D, 0, copyTexImageFormat.internalFormat, sourceArea.width, sourceArea.height, 0, gl::GetUnsizedFormat(copyTexImageFormat.internalFormat), readType, nullptr)
mFunctions->texImage2D(ToGLenum(scratchTextureType), 0, texImageFormat.internalFormat, sourceArea.width, sourceArea.height, 0, texImageFormat.format, texImageFormat.type, nullptr)
mFunctions->texImage2D(ToGLenum(target), static_cast<GLint>(level), internalFormat, sourceArea.width, sourceArea.height, 0, format, readType, nullptr)
mGO[
mGraphicsPipelineLibraryFeatures.graphicsPipelineLibrary == 1U && (!isNvidia || nvidiaVersion.major >= 531) && !isRADV
mHostImageCopyFeatures.hostImageCopy == 1U && mHostImageCopyProperties.identicalMemoryTypeRequirements && !IsFuchsia()
mHostQueryResetFeatures.hostQueryReset == 1U
mImage2dViewOf3dFeatures.image2DViewOf3D == 1U
mImagelessFramebufferFeatures.imagelessFramebuffer == 1U && !isSamsungDriverWithImagelessFramebufferBug
mIndexTypeUint8Features.indexTypeUint8 == 1U
mLineRasterizationFeatures.bresenhamLines == 1U
mMultiviewFeatures.multiview == 1U
mPhysicalDeviceFeatures.imageCubeArray == 1U
mPhysicalDeviceFeatures.multiDrawIndirect == 1U
mPhysicalDeviceFeatures.pipelineStatisticsQuery == 1U
mPipelineProtectedAccessFeatures.pipelineProtectedAccess == 1U && mProtectedMemoryFeatures.protectedMemory == 1U
mPipelineRobustnessFeatures.pipelineRobustness == 1U && mPhysicalDeviceFeatures.robustBufferAccess
mPrimitiveTopologyListRestartFeatures.primitiveTopologyListRestart == 1U
mProtectedMemoryFeatures.protectedMemory == 1U && (!isARM || mPipelineProtectedAccessFeatures.pipelineProtectedAccess == 1U)
mProvokingVertexFeatures.provokingVertexLast == 1U
mSamplerYcbcrConversionFeatures.samplerYcbcrConversion != 0U
mShaderFloat16Int8Features.shaderFloat16 == 1U
mSwapchainMaintenance1Features.swapchainMaintenance1 == 1U && useVulkanSwapchain == UseVulkanSwapchain::Yes
mTimelineSemaphoreFeatures.timelineSemaphore == 1U
mVertexInputDynamicStateFeatures.vertexInputDynamicState == 1U && !(IsWindows() && isIntel)
mVmh
m\fYAB
macro invocation chain too deep
macro name is reserved
macro name with a double underscore is reserved - unintented behavior is possible
macro undefined while being invoked
main
main function cannot return a value
malloc
map::at:  key not found
mapUnspecifiedColorSpaceToPassThrough
mat2
mat2x3
mat2x4
mat3
mat3x2
mat3x4
mat4
mat4x2
mat4x3
material_ambient
material_diffuse
material_emissive
material_specular
material_specular_exponent
matrix field selection out of range
matrix mult second child into first child
matrix scale second child into first child
matrix-multiply
matrix-scale
matrix-times-vector
matrixCompMult
matrixCompMult(50B50B
matrixCompMult(60B60B
matrixCompMult(70B70B
matrixCompMult(90B90B
matrixCompMult(A0BA0B
matrixCompMult(B0BB0B
matrixCompMult(D0BD0B
matrixCompMult(E0BE0B
matrixCompMult(F0BF0B
max(00B00B
max(00D00D
max(00E00E
max(10B00B
max(10B10B
max(10D00D
max(10D10D
max(10E00E
max(10E10E
max(20B00B
max(20B20B
max(20D00D
max(20D20D
max(20E00E
max(20E20E
max(30B00B
max(30B30B
max(30D00D
max(30D30D
max(30E00E
max(30E30E
max_formats should not be negative
max_modifiers should not be negative
max_vertices
max_vertices = 
max_vertices can only be declared in 'out' layout in a geometry shader
max_vertices contradicts to the earlier declaration
maxcol
mbrtowc
mbsnrtowcs
mbsrtowcs
mbtowc
memchr
memcmp
memcpy
memmove
memory exhausted
memoryBarrier
memoryBarrier(
memoryBarrierAtomicCounter
memoryBarrierAtomicCounter(
memoryBarrierBuffer
memoryBarrierBuffer(
memoryBarrierImage
memoryBarrierImage(
memoryBarrierShared
memoryBarrierShared(
memset
mergeProgramExecutablePipelineCacheToRenderer
mergeProgramPipelineCachesToGlobalCache
message controls must be EGL_TRUE or EGL_FALSE.
message too short, invalid header\n
message too short, object (%d), message %s(%s)\n
method takes no parameters
methods supported in GLSL ES 3.00 and above only
mfcf
mi"U
min(00B00B
min(00D00D
min(00E00E
min(10B00B
min(10B10B
min(10D00D
min(10D10D
min(10E00E
min(10E10E
min(20B00B
min(20B20B
min(20D00D
min(20D20D
min(20E00E
min(20E20E
min(30B00B
min(30B30B
min(30D00D
min(30D30D
min(30E00E
min(30E30E
minbase
mincol
misc
mismatching ternary operator operand types '
missing input primitive declaration before calling length on gl_in
missing input primitive declaration before indexing gl_in.
mix(00B00B00B
mix(00B00B00F
mix(00D00D00F
mix(00E00E00F
mix(00F00F00F
mix(10B10B00B
mix(10B10B10B
mix(10B10B10F
mix(10D10D10F
mix(10E10E10F
mix(10F10F10F
mix(20B20B00B
mix(20B20B20B
mix(20B20B20F
mix(20D20D20F
mix(20E20E20F
mix(20F20F20F
mix(30B30B00B
mix(30B30B30B
mix(30B30B30F
mix(30D30D30F
mix(30E30E30F
mix(30F30F30F
mod(00B00B
mod(10B00B
mod(10B10B
mod(20B00B
mod(20B20B
mod(30B00B
mod(30B30B
modelview
modelview_invtr
modf
modf(00B00B
modf(10B10B
modf(20B20B
modf(30B30B
modff
modulo
modulo second child into first child
money_get error
monolithicPipelineCreation
monotonicallyIncreasingTime
motion
move second child to first child
msc is null
msh.
msh\f
multiply second child into first child
multiviewBaseViewLayerIndex
must explicitly specify all locations when using multiple fragment outputs
must explicitly specify all locations when using multiple fragment outputs and pixel local storage, even if EXT_blend_func_extended is enabled
must explicitly specify all locations when using multiple fragment outputs in WebGL contexts, even if EXT_blend_func_extended is enabled
must use 'flat' interpolation here
mutableMipmapTextureUpload
mutableTexturesUploaded
mutex lock failed
n'Lk
n11+
n1n1a
n4lR;c4
n5*v
n9\ro
n:KNG
n:sNG
n:s^M
nOV_
nQg5_
n_rects cannot be greater than zero when rects is NULL.
n_rects cannot be negative.
name is not a valid buffer.
name is not a valid framebuffer.
name is not a valid program pipeline.
name is not a valid query.
name is not a valid renderbuffer.
name is not a valid sampler.
name is not a valid transform feedback.
name is not a valid vertex array.
name is not valid.
names is NULL.
native client buffer allocation failed.
native context creation failed
nativeWindowSystem != angle::NativeWindowSystem::Gbm
native_display should be a valid EGL device if platform equals EGL_PLATFORM_DEVICE_EXT
ndaryFragDataEXT
need dictionary
negation
new id %s@
newVersion = 
newlocale
niiiiu
no binding specified
no matching overloaded function found
no qualifiers allowed for function return
no statement between the last label and the end of the switch statement
node is still EOpNull!\n
non-void function must return a value
noncoherent
noperspective
noperspective centroid
noperspective centroid in
noperspective centroid in 
noperspective centroid out
noperspective centroid out 
noperspective in
noperspective in 
noperspective out
noperspective out 
noperspective sample
noperspective sample in
noperspective sample in 
noperspective sample out
noperspective sample out 
normalize(00B
normalize(10B
normalize(20B
normalize(30B
not 
not a valid new object id (%u), message %s(%s)\n
not allowed to specify yuv qualifier when using depth or multiple color fragment outputs
not enough data provided for construction
not(10F
not(20F
not(30F
notEqual
notEqual(10B10B
notEqual(10D10D
notEqual(10E10E
notEqual(10F10F
notEqual(20B20B
notEqual(20D20D
notEqual(20E20E
notEqual(20F20F
notEqual(30B30B
notEqual(30D30D
notEqual(30E30E
notEqual(30F30F
nrF,
nsion_pack_es31a
null pointer in arguments.
numChunks = 0x
numSamples
numSamples(
numTimestamps must be at least 0.
numViews cannot be greater than GL_MAX_VIEWS_ANGLE.
numViews cannot be less than 1.
num_config cannot be null.
num_groups_x cannot be greater than MAX_COMPUTE_WORK_GROUP_COUNT[0]
num_groups_y cannot be greater than MAX_COMPUTE_WORK_GROUP_COUNT[1]
num_groups_z cannot be greater than MAX_COMPUTE_WORK_GROUP_COUNT[2]
num_views
num_views greater than the value of GL_MAX_VIEWS_OVR
numerator is null
n}rb
o#|OEW
o3j7"
o5_n4%
o5rh
o9q<\n
oL9c
oMq^
oQ{p
oSm}
oT/0
oWGP\f
oZJ.d
offset = 
offset must be a multiple of 4.
oj n
onDestroy
only allowed at global scope
only blend equations are allowed as layout qualifier when not declaring a variable
only early_fragment_tests is allowed as layout qualifier when not declaring a variable
op0_alpha
op0_rgb
op1F'
op1_alpha
op1_rgb
op2_alpha
op2_rgb
opaque types cannot be output parameters
open64
open_memstream
operation result is undefined for the values passed in
operation with void operands
operator delete(void*)
operator delete(void*, std::align_val_t)
operator delete(void*, std::align_val_t, std::nothrow_t const&)
operator delete(void*, std::nothrow_t const&)
operator delete(void*, unsigned long)
operator delete(void*, unsigned long, std::align_val_t)
operator delete[](void*)
operator delete[](void*, std::align_val_t)
operator delete[](void*, std::align_val_t, std::nothrow_t const&)
operator delete[](void*, std::nothrow_t const&)
operator delete[](void*, unsigned long)
operator delete[](void*, unsigned long, std::align_val_t)
operator new(unsigned long)
operator new(unsigned long, std::align_val_t)
operator new(unsigned long, std::align_val_t, std::nothrow_t const&)
operator new(unsigned long, std::nothrow_t const&)
operator new[](unsigned long)
operator new[](unsigned long, std::align_val_t)
operator new[](unsigned long, std::align_val_t, std::nothrow_t const&)
operator new[](unsigned long, std::nothrow_t const&)
operator()
operator*()
operator++
operator->
orphan
orr/
other message
ouoiiu
out of dynamic memory in yy_create_buffer()
out of dynamic memory in yy_get_next_buffer()
out of dynamic memory in yyensure_buffer_stack()
out of memory
out of range : vertices must be in the range of [1, gl_MaxPatchVertices]
out of range: 
out of range: binding must be non-negative
out of range: index layout qualifier can only be 0 or 1
out of range: invocations must be in the range of [1, MAX_GEOMETRY_SHADER_INVOCATIONS_OES]
out of range: location must be non-negative
out of range: max_vertices must be in the range of [0, gl_MaxGeometryOutputVertices]
out of range: num_views must be positive
out of range: offset must be non-negative
out type qualifier supported in GLSL ES 3.10 and after
out type qualifier supported in GLSL ES 3.10 only
out type qualifier without variable declaration is supported in GLSL ES 3.20, or if GL_KHR_blend_equation_advanced is enabled
out vec4 webgl_FragColor;\n
out vec4 webgl_FragData[
out vec4 webgl_SecondaryFragColor;\n
out vec4 webgl_SecondaryFragData[
out_of_range was thrown in -fno-exceptions mode with message "%s"
outerProduct
outerProduct(10B10B
outerProduct(10B20B
outerProduct(10B30B
outerProduct(20B10B
outerProduct(20B20B
outerProduct(20B30B
outerProduct(30B10B
outerProduct(30B20B
outerProduct(30B30B
output array locations would exceed 
output location must be < 
overrideSurfaceFormatRGB8ToRGBA8
owcJ
owner: 
p.wD\
pZ4\v
p\"Fw
p]kk"q
packHalf2x16(10B
packOverlappingRowsSeparatelyPackBuffer
packReadPixelBuffer
packResolveViewsAndCreateFramebuffer
packSnorm2x16(10B
packSnorm4x8(30B
packUnorm2x16(10B
packUnorm4x8 fails on Pixel 4 if it is not passed a highp vec4.
packUnorm4x8(30B
packed
padBuffersToMaxVertexAttribStride
param
param is negative.
parameter: 
passHighpToPackUnormSnormBuiltins
patch in
patch out
pci_alloc
pci_cleanup
pci_fill_info
pci_init
pci_lookup_name
pci_read_byte
pci_scan_bus
pendingSubmissionGarbageObjects
perFrameWindowSizeQuery
performance
permanentlySwitchToFramebufferFetchMode
perms: 
persistentlyMappedBuffers
pft~
pipelineCreationCacheHits
pipelineCreationCacheMisses
pipelineCreationTotalCacheHitsDurationNs
pipelineCreationTotalCacheMissesDurationNs
pixel local storage format requires ipixelLocalANGLE
pixel local storage format requires pixelLocalANGLE
pixel local storage format requires upixelLocalANGLE
pixel local storage handles cannot be aggregated in arrays
pixel local storage requires a binding index
pixel local storage requires a format specifier
pixelLocalLoadANGLE
pixelLocalLoadANGLE(01g
pixelLocalLoadANGLE(01h
pixelLocalLoadANGLE(01i
pixelLocalStoreANGLE
pixelLocalStoreANGLE(01g30B
pixelLocalStoreANGLE(01h30D
pixelLocalStoreANGLE(01i30E
pk,0
place_above
place_below
placeholder
placeholder1
placeholder2
placeholder3
pmf>k
pnt~
point_distance_attenuation
point_mode
point_rasterization
point_size_max
point_size_min
point_sprite_coord_replace
point_sprite_enabled
points
poll
pong
popup_done
posix_memalign
postTranslate
postWorkerTask
pow(00B00B
pow(10B10B
pow(20B20B
pow(30B30B
powf
preAddTexelFetchOffsets
preTransformTextureCubeGradDerivatives
precise 
precision highp float;\n
precision highp float;\n\n// Defines for GL constants\n#define kMaxTexUnits                         4u\n#define kMaxClipPlanes                       6u\n\n#define kModulate                       0x2100u\n#define kDecal                          0x2101u\n#define kCombine                        0x8570u\n#define kReplace                        0x1E01u\n#define kBlend                          0x0BE2u\n#define kAdd                            0x0104u\n\n#define kAddSigned                      0x8574u\n#define kInterpolate                    0x8575u\n#define kSubtract                       0x84E7u\n#define kDot3Rgb                        0x86AEu\n#define kDot3Rgba                       0x86AFu\n\n#define kAlpha                          0x1906u\n#define kRGB                            0x1907u\n#define kRGBA                           0x1908u\n#define kLuminance                      0x1909u\n#define kLuminanceAlpha                 0x190Au\n\n#define kTexture                        0x1702u\n#define kConstant                       0x8576u\n#define kPrimaryColor                   0x8577u\n#define kPrevious                       0x8578u\n\n#define kSrcColor                       0x0300u\n#define kOneMinusSrcColor               0x0301u\n#define kSrcAlpha                       0x0302u\n#define kOneMinusSrcAlpha               0x0303u\n\n#define kLinear                         0x2601u\n#define kExp                            0x0800u\n#define kExp2                           0x0801u\n\n#define kNever                          0x0200u\n#define kLess                           0x0201u\n#define kEqual                          0x0202u\n#define kLequal                         0x0203u\n#define kGreater                        0x0204u\n#define kNotequal                       0x0205u\n#define kGequal                         0x0206u\n#define kAlways                         0x0207u\n#define kZero                              0x0u\n#define kOne                               0x1u\n\n#define kAnd                            0u\n#define kAndInverted                    1u\n#define kAndReverse                     2u\n#define kClear                          3u\n#define kCopy                           4u\n#define kCopyInverted                   5u\n#define kEquiv                          6u\n#define kInvert                         7u\n#define kNand                           8u\n#define kNoop                           9u\n#define kNor                            10u\n#define kOr                             11u\n#define kOrInverted                     12u\n#define kOrReverse                      13u\n#define kSet                            14u\n#define kXor                            15u\n
precision is not supported in fragment shader
predefined macro redefined
predefined macro undefined
prefer host cached memory for non static buffer usage
preferAggregateBarrierCalls
preferCPUForBufferSubData
preferDeviceLocalMemoryHostVisible
preferDrawClearOverVkCmdClearAttachments
preferDriverUniformOverSpecConst
preferHostCachedForNonStaticBufferUsage
preferLinearFilterForYUV
preferMSRTSSFlagByDefault
preferMonolithicPipelinesOverLibraries
preferSkippingInvalidateForEmulatedFormats
preferSubmitAtFBOBoundary
preferSubmitOnAnySamplesPassedQueryEnd
prepareForDispatch
primitive doesn't match earlier input primitive declaration
primitive doesn't match earlier output primitive declaration
processCallback
processTask
processTask::FlushAndQueueSubmit
processTask::OneOffQueueSubmit
programInterface must be set to GL_PROGRAM_OUTPUT.
projection
promotePackedFormatsTo8BitPerChannel
provokingVertex
proxy %p already has listener\n
pthread_cond_broadcast
pthread_cond_clockwait
pthread_cond_destroy
pthread_cond_init
pthread_cond_signal
pthread_cond_wait
pthread_create
pthread_getspecific
pthread_join
pthread_key_create
pthread_key_delete
pthread_mutex_destroy
pthread_mutex_init
pthread_mutex_lock
pthread_mutex_trylock
pthread_mutex_unlock
pthread_once
pthread_self
pthread_setname_np
pthread_setspecific
pz_qz
pzq\n
p{6,0
q f5y<
q#qS
q%3a
q1|\vsx
qGu2
qJ6F<
qKG\
qLV!N
qQ6~
qSVq
qZeA
q\tyi
qbGc
qlB}
quads
qualifier sequence
queryAndAdjustSurfaceCaps
queryCounterBitsGeneratesErrors
r"cv
r';xN
r0UA
r32f
r32i
r32ui
r9#ns
r>T>9
r>co
rFYw}
r]Cg
radians
radians(00B
radians(10B
radians(20B
radians(30B
read and draw must both be valid surfaces, or both be EGL_NO_SURFACE
readOnlyDepthStencilRenderPasses
readPixelsAllAtOnce
readPixelsForCompressedGetImage
readPixelsRowByRow
readPixelsUsingImplementationColorReadFormatForNorm16
readlink
readonly
realloc
reapplyUBOBindingsAfterUsingBinaryProgram
receive
recordShaderCacheUse
recvmsg
redeclaration of gl_ClipDistance as an array of arrays
redeclaration of gl_ClipDistance with size > gl_MaxClipDistances
redeclaration of gl_CullDistance as an array of arrays
redeclaration of gl_CullDistance with size > gl_MaxCullDistances
redeclaration of gl_LastFragData as an array of arrays
redeclaration of gl_LastFragData with size != gl_MaxDrawBuffers
redefinition
redefinition in an invalid interface block
redefinition of a function
redefinition of a struct
redefinition of an interface block instance name
redefinition of an interface block member name
redefinition of an interface block name
reflect
reflect(00B00B
reflect(10B10B
reflect(20B20B
reflect(30B30B
refract
refract(00B00B00B
refract(10B10B00B
refract(20B20B00B
refract(30B30B00B
regenerateStructNames
relativeOffset cannot be greater than MAX_VERTEX_ATTRIB_RELATIVE_OFFSET.
releaseTexImageInternal
removeDynamicIndexingOfSwizzledVector
removeInvariantAndCentroidForESSL3
renderArea
renderPasses
repeat_info
request could not be marshaled: can't send file descriptor\n
reserve
reserved built-in name
resetTexImage2DBaseLevel
resize
resizeUniformBlockMemory
resolveImageCommands
resolveLink
restrict
restrict 
resyncDepthRangeOnClipControl
retainSPIRVDebugInfo
retireFinishedCommandsLocked
return 
rev5
rewriteFloatUnaryMinusOperator
rewriteRepeatedAssignToSwizzled
rewriteRowMajorMatrices
rgb_2_yuv(20B00H
rgba16f
rgba16i
rgba16ui
rgba32f
rgba32i
rgba32ui
rgba8_snorm
rgba8i
rgba8ui
rn:i
ro.build.version.sdk
roQj
round
round(00B
round(10B
round(20B
round(30B
roundEven
roundEven(00B
roundEven(10B
roundEven(20B
roundEven(30B
roundOutputAfterDithering
roundf
row_major
ru\w
s count exceeds 
s must be uniform
s#q3
s%Fx
sAK.
sB]p.
sI=E
sKkU_
sM`O
sO"o^A
sSiB
sZrR
s\t&qkM\r
samplePosition
samplePosition(00E
sampler binding greater than maximum texture units
sampler2DArrayShadow
sampler2DRect
sampler2DShadow
samplerCubeShadow
samplerExternalOES
samplerVideoWEBGL
sanitizeAMDGPURendererString
saturate
saturate(00B
saturate(10B
saturate(20B
saturate(30B
sbase
sbc is null
scalarizeVecAndMatConstructorArgs
send
sendmsg
sequence operator is not allowed for void, arrays, or structs containing arrays
serverWait
setCompressedImage
setData
setDataWithUsageFlags
setImageExternal
setImageHelper
setPresentationTime implementation missing.
setPrimitiveRestartFixedIndexForDrawArrays
setProgram
setSource
setStorage
setStorageExternalMemory
setStorageMultisample
setSubImagePaddingWorkaround
setSubImageRowByRowWorkaround
setSwapInterval
setTimestampsEnabled
setZeroLevelBeforeGenerateMipmap
set_actions
set_buffer_scale
set_buffer_transform
set_class
set_cursor
set_desync
set_fullscreen
set_input_region
set_maximized
set_opaque_region
set_popup
set_position
set_selection
set_sync
set_title
set_toplevel
set_transient
setbuf
setenv
setupDevice
shade_model_flat
shader storage block
shader storage block binding greater than MAX_SHADER_STORAGE_BUFFER_BINDINGS
shaderResourcesDescriptorSetCacheHits
shaderResourcesDescriptorSetCacheMisses
shaderResourcesDescriptorSetCacheTotalSize
shadow2DEXT
shadow2DEXT(00d20B
shadow2DProjEXT
shadow2DProjEXT(00d30B
shape
shared
shift exponent is negative or undefined
shiftInstancedArrayDataWithOffset
shouldIgnoreUniform
sign(00B
sign(00D
sign(10B
sign(10D
sign(20B
sign(20D
sign(30B
sign(30D
sincosf
sinf
singleThreadedTextureDecompression
sinhf
slowAsyncCommandQueueForTesting
slowDownMonolithicPipelineCreationForTesting
smooth
smooth centroid in
smooth centroid out
smooth in
smooth in 
smooth out
smooth out 
smoothstep
smoothstep(00B00B00B
smoothstep(00B00B10B
smoothstep(00B00B20B
smoothstep(00B00B30B
smoothstep(10B10B10B
smoothstep(20B20B20B
smoothstep(30B30B30B
snprintf
socket
source_actions
sp+q-
src0_alpha
src0_rgb
src1_alpha
src1_rgb
src2_alpha
src2_rgb
srn1
ssat
stageResourceClearWithFormat
stageSubresourceUpdateFromFramebuffer
stageSubresourceUpdateImpl
start of group
startRenderPass
start_drag
statement before the first label
statement is too deeply nested
std140
std430
std::__Cr::__libcpp_verbose_abort(char const*, ...)
std::__libcpp_tls_set failure in __cxa_get_globals()
std::bad_alloc
std::bad_cast
stderr
stdin
stdout
stencil aspect during store with stencilStoreOp VK_ATTACHMENT_STORE_OP_STORE. Access info (usage: SYNC_LATE_FRAGMENT_TESTS_DEPTH_STENCIL_ATTACHMENT_WRITE
stencilAttachmentResolves
stencilAttachmentUnresolves
stencilClearAttachments
stencilLoadOpClears
stencilLoadOpLoads
stencilLoadOpNones
stencilStoreOpNones
stencilStoreOpStores
step(00B00B
step(00B10B
step(00B20B
step(00B30B
step(10B10B
step(20B20B
step(30B30B
storage qualifier isn't supported in compute shaders
storage qualifier isn't supported in non-fragment shaders
storage qualifier supported in GLSL ES 3.00 and above only
storage qualifier supported in GLSL ES 3.10 and above only
store with storeOp VK_ATTACHMENT_STORE_OP_STORE. Access info (usage: SYNC_LATE_FRAGMENT_TESTS_DEPTH_STENCIL_ATTACHMENT_WRITE, prior_usage: SYNC_FRAGMENT_SHADER_SHADER_
strchr
strcmp
strcpy
stream end
stream error
streamAttributes
strerror
strerror_r
strftime_l
strides
string not nul-terminated, message %s(%s)\n
strlen
strncmp
strrchr
strstr
strtod_l
strtof_l
strtol
strtold_l
strtoll_l
strtoul
strtoull_l
struct 
structure has no fields
structures containing arrays can't be function return values
structures containing arrays may not be declared constant since they cannot be initialized
submitPriorityDependency
subpassLoad
subpassLoad(01j
subpassLoad(01k
subpassLoad(01l
subpassLoad(01m00D
subpassLoad(01n00D
subpassLoad(01o00D
subtract
subtract second child into first child
supports compute shader transcode etc format to bc format
supports16BitInputOutput
supports16BitPushConstant
supports16BitStorageBuffer
supports16BitUniformAndStorageBuffer
supports8BitPushConstant
supports8BitStorageBuffer
supports8BitUniformAndStorageBuffer
supportsAndroidHardwareBuffer
supportsAndroidNativeFenceSync
supportsBindMemory2
supportsBlendOperationAdvanced
supportsColorWriteEnable
supportsComputeTranscodeEtcToBc
supportsCustomBorderColor
supportsDepthClampZeroOne
supportsDepthClipControl
supportsDepthStencilIndependentResolveNone
supportsDepthStencilResolve
supportsExtendedDynamicState
supportsExtendedDynamicState2
supportsExternalFenceCapabilities
supportsExternalFenceFd
supportsExternalFormatResolve
supportsExternalMemoryDmaBufAndModifiers
supportsExternalMemoryFd
supportsExternalMemoryFuchsia
supportsExternalMemoryHost
supportsExternalSemaphoreCapabilities
supportsExternalSemaphoreFd
supportsExternalSemaphoreFuchsia
supportsFormatFeatureFlags2
supportsFoveatedRendering
supportsFragmentShaderInterlockARB
supportsFragmentShaderInterlockNV
supportsFragmentShaderOrderingINTEL
supportsFragmentShaderPixelInterlock
supportsFragmentShadingRate
supportsFullScreenExclusive
supportsGGPFrameToken
supportsGeometryStreamsCapability
supportsGetMemoryRequirements2
supportsGraphicsPipelineLibrary
supportsHostImageCopy
supportsHostQueryReset
supportsImage2dViewOf3d
supportsImageCubeArray
supportsImageFormatList
supportsImagelessFramebuffer
supportsIncrementalPresent
supportsIndexTypeUint8
supportsLegacyDithering
supportsLockSurfaceExtension
supportsLogicOpDynamicState
supportsMemoryBudget
supportsMixedReadWriteDepthStencilLayouts
supportsMultiDrawIndirect
supportsMultisampledRenderToSingleSampled
supportsMultisampledRenderToSingleSampledGOOGLEX
supportsMultiview
supportsPipelineCreationFeedback
supportsPipelineProtectedAccess
supportsPipelineRobustness
supportsPipelineStatisticsQuery
supportsPortabilityEnumeration
supportsPresentation
supportsPrimitiveTopologyListRestart
supportsPrimitivesGeneratedQuery
supportsProtectedMemory
supportsRasterizationOrderAttachmentAccess
supportsRenderPassLoadStoreOpNone
supportsRenderPassStoreOpNone
supportsRenderpass2
supportsSampler2dViewOf3d
supportsSamplerMirrorClampToEdge
supportsShaderFloat16
supportsShaderFramebufferFetch
supportsShaderFramebufferFetchEXT
supportsShaderFramebufferFetchNonCoherent
supportsShaderFramebufferFetchNonCoherentEXT
supportsShaderNonSemanticInfo
supportsShaderPixelLocalStorageEXT
supportsShaderStencilExport
supportsSharedPresentableImageExtension
supportsSubgroupQuadOpsInComputeShader && mSubgroupExtendedTypesFeatures.shaderSubgroupExtendedTypes && maxComputeWorkGroupInvocations >= 256 && ((isAMD && !IsWindows()) || isNvidia || isSamsung)
supportsSurfaceCapabilities2Extension
supportsSurfaceMaintenance1
supportsSurfaceProtectedCapabilitiesExtension
supportsSurfaceProtectedSwapchains
supportsSurfacelessQueryExtension
supportsSwapchainMaintenance1
supportsSynchronization2
supportsTimelineSemaphore
supportsTimestampSurfaceAttribute
supportsTransformFeedbackExtension
supportsVertexInputDynamicState
supportsYUVSamplerConversion
supportsYuvTarget
surface is not a postable surface
surface is not the current draw surface for the calling thread
surface's swap behavior is not EGL_BUFFER_DESTROYED
swapWithDamage implementation missing.
swapbuffersOnFlushOrFinishWithSingleBuffer
swapchainResolveInSubpass
swapchainResolveOutsideSubpass
switch
switch (
sy0%n
sync object is not valid.
syncControlCHROMIUM extension not active
syncControlRateANGLE extension not active
syncDirtyAttrib
syncMonolithicPipelinesToBlobCache
syncPipelineCacheVk
syncVertexArraysToDefault
sync_queue_submit
syntax error
syscall
sysconf
system
t)Ko
t*`7a
t+RT
t7q-
tJ\rGe
tKq}M
tX?l
t\vuU
t^z:GO
tanf
tanhf
target 2D texture does not have a valid size at specified level.
target 3D texture does not have a valid size at specified level.
target 3D texture does not have enough layers for the specified Z offset at the specified level.
target cubemap texture does not have a valid size at specified level and face.
target is not a 2D texture.
target is not a 3D texture.
target is not a cubemap texture.
target is not a renderbuffer.
target renderbuffer cannot be multisampled.
terminate
terminate_handler unexpectedly returned
terminate_handler unexpectedly threw an exception
ternary operator is not allowed for interface blocks
ternary operator is not allowed for opaque types
ternary operator is not allowed for structures or arrays
ternary operator is not allowed for variables with writeonly
ternary operator is not allowed for void
tessellation-control per-vertex output l-value must be indexed with gl_InvocationID
tested first\n
tex_cube_sampler
tex_sampler
texelFetch
texelFetch(00I10D00D
texelFetch(00J20D00D
texelFetch(00L20D00D
texelFetch(00M10D00D
texelFetch(00N10D00D
texelFetch(00P10D00D
texelFetch(00Q20D00D
texelFetch(00R10D00D
texelFetch(00S20D00D
texelFetch(00U20D00D
texelFetch(00V10D00D
texelFetch(00W20D00D
texelFetch(00X10D00D
texelFetch(00Y20D00D
texelFetch(00a20D00D
texelFetch(00b10D00D
texelFetch(00c20D00D
texelFetch(00j00D
texelFetch(00r00D
texelFetch(00w00D
texelFetchOffset
texelFetchOffset(00I10D00D10D
texelFetchOffset(00J20D00D20D
texelFetchOffset(00L20D00D10D
texelFetchOffset(00R10D00D10D
texelFetchOffset(00S20D00D20D
texelFetchOffset(00U20D00D10D
texelFetchOffset(00X10D00D10D
texelFetchOffset(00Y20D00D20D
texelFetchOffset(00a20D00D10D
texture has a surface bound to it.
texture image unit
texture is not the name of an existing texture object.
texture must be complete if level is non-zero.
texture(00I10B
texture(00I10B00B
texture(00J20B
texture(00J20B00B
texture(00K20B
texture(00K20B00B
texture(00L20B
texture(00L20B00B
texture(00M10B
texture(00M10B00B
texture(00N10B
texture(00N10B00B
texture(00O10B
texture(00R10B
texture(00R10B00B
texture(00S20B
texture(00S20B00B
texture(00T20B
texture(00T20B00B
texture(00U20B
texture(00U20B00B
texture(00X10B
texture(00X10B00B
texture(00Y20B
texture(00Y20B00B
texture(00Z20B
texture(00Z20B00B
texture(00a20B
texture(00a20B00B
texture(00d20B
texture(00d20B00B
texture(00e30B
texture(00e30B00B
texture(00f30B
texture(00k30B
texture(00k30B00B
texture(00l30B00B
texture(00s30B
texture(00s30B00B
texture(00x30B
texture(00x30B00B
texture(00y10B
texture2D
texture2D(00I10B
texture2D(00I10B00B
texture2D(00M10B
texture2DGradARB
texture2DGradEXT
texture2DGradEXT(00I10B10B10B
texture2DLod
texture2DLod(00I10B00B
texture2DLodEXT
texture2DLodEXT(00I10B00B
texture2DProj
texture2DProj(00I20B
texture2DProj(00I20B00B
texture2DProj(00I30B
texture2DProj(00I30B00B
texture2DProj(00M20B
texture2DProj(00M30B
texture2DProjGradARB
texture2DProjGradEXT
texture2DProjGradEXT(00I20B10B10B
texture2DProjGradEXT(00I30B10B10B
texture2DProjLod
texture2DProjLod(00I20B00B
texture2DProjLod(00I30B00B
texture2DProjLodEXT
texture2DProjLodEXT(00I20B00B
texture2DProjLodEXT(00I30B00B
texture2DRect
texture2DRect(00O10B
texture2DRectProj
texture2DRectProj(00O20B
texture2DRectProj(00O30B
texture3D(00J20B
texture3D(00J20B00B
texture3DLod
texture3DLod(00J20B00B
texture3DProj
texture3DProj(00J30B
texture3DProj(00J30B00B
texture3DProjLod
texture3DProjLod(00J30B00B
textureCube
textureCube(00K20B
textureCube(00K20B00B
textureCubeGradARB
textureCubeGradEXT
textureCubeGradEXT(00K20B20B20B
textureCubeLod
textureCubeLod(00K20B00B
textureCubeLodEXT
textureCubeLodEXT(00K20B00B
textureDescriptorSetCacheHits
textureDescriptorSetCacheMisses
textureDescriptorSetCacheTotalSize
textureGather
textureGather(00I10B
textureGather(00I10B00D
textureGather(00K20B
textureGather(00K20B00D
textureGather(00L20B
textureGather(00L20B00D
textureGather(00R10B
textureGather(00R10B00D
textureGather(00T20B
textureGather(00T20B00D
textureGather(00U20B
textureGather(00U20B00D
textureGather(00X10B
textureGather(00X10B00D
textureGather(00Z20B
textureGather(00Z20B00D
textureGather(00a20B
textureGather(00a20B00D
textureGather(00d10B
textureGather(00d10B00B
textureGather(00e20B
textureGather(00e20B00B
textureGather(00f20B
textureGather(00f20B00B
textureGather(00k30B
textureGather(00k30B00D
textureGather(00l30B00B
textureGather(00s30B
textureGather(00s30B00D
textureGather(00x30B
textureGather(00x30B00D
textureGatherOffset
textureGatherOffset(00I10B10D
textureGatherOffset(00I10B10D00D
textureGatherOffset(00L20B10D
textureGatherOffset(00L20B10D00D
textureGatherOffset(00R10B10D
textureGatherOffset(00R10B10D00D
textureGatherOffset(00U20B10D
textureGatherOffset(00U20B10D00D
textureGatherOffset(00X10B10D
textureGatherOffset(00X10B10D00D
textureGatherOffset(00a20B10D
textureGatherOffset(00a20B10D00D
textureGatherOffset(00d10B00B10D
textureGatherOffset(00f20B00B10D
textureGatherOffsets
textureGatherOffsets(00I10B10Dx4
textureGatherOffsets(00I10B10Dx400D
textureGatherOffsets(00L20B10Dx4
textureGatherOffsets(00L20B10Dx400D
textureGatherOffsets(00R10B10Dx4
textureGatherOffsets(00R10B10Dx400D
textureGatherOffsets(00U20B10Dx4
textureGatherOffsets(00U20B10Dx400D
textureGatherOffsets(00X10B10Dx4
textureGatherOffsets(00X10B10Dx400D
textureGatherOffsets(00a20B10Dx4
textureGatherOffsets(00a20B10Dx400D
textureGatherOffsets(00d10B00B10Dx4
textureGatherOffsets(00f20B00B10Dx4
textureGrad
textureGrad(00I10B10B10B
textureGrad(00J20B20B20B
textureGrad(00K20B20B20B
textureGrad(00L20B10B10B
textureGrad(00R10B10B10B
textureGrad(00S20B20B20B
textureGrad(00T20B20B20B
textureGrad(00U20B10B10B
textureGrad(00X10B10B10B
textureGrad(00Y20B20B20B
textureGrad(00Z20B20B20B
textureGrad(00a20B10B10B
textureGrad(00d20B10B10B
textureGrad(00e30B20B20B
textureGrad(00f30B10B10B
textureGrad(00k30B20B20B
textureGrad(00s30B20B20B
textureGrad(00x30B20B20B
textureGradOffset
textureGradOffset(00I10B10B10B10D
textureGradOffset(00J20B20B20B20D
textureGradOffset(00L20B10B10B10D
textureGradOffset(00R10B10B10B10D
textureGradOffset(00S20B20B20B20D
textureGradOffset(00U20B10B10B10D
textureGradOffset(00X10B10B10B10D
textureGradOffset(00Y20B20B20B20D
textureGradOffset(00a20B10B10B10D
textureGradOffset(00d20B10B10B10D
textureGradOffset(00f30B10B10B10D
textureLod
textureLod(00I10B00B
textureLod(00J20B00B
textureLod(00K20B00B
textureLod(00L20B00B
textureLod(00R10B00B
textureLod(00S20B00B
textureLod(00T20B00B
textureLod(00U20B00B
textureLod(00X10B00B
textureLod(00Y20B00B
textureLod(00Z20B00B
textureLod(00a20B00B
textureLod(00d20B00B
textureLod(00k30B00B
textureLod(00s30B00B
textureLod(00x30B00B
textureLodOffset
textureLodOffset(00I10B00B10D
textureLodOffset(00J20B00B20D
textureLodOffset(00L20B00B10D
textureLodOffset(00R10B00B10D
textureLodOffset(00S20B00B20D
textureLodOffset(00U20B00B10D
textureLodOffset(00X10B00B10D
textureLodOffset(00Y20B00B20D
textureLodOffset(00a20B00B10D
textureLodOffset(00d20B00B10D
textureOffset
textureOffset(00I10B10D
textureOffset(00I10B10D00B
textureOffset(00J20B20D
textureOffset(00J20B20D00B
textureOffset(00L20B10D
textureOffset(00L20B10D00B
textureOffset(00R10B10D
textureOffset(00R10B10D00B
textureOffset(00S20B20D
textureOffset(00S20B20D00B
textureOffset(00U20B10D
textureOffset(00U20B10D00B
textureOffset(00X10B10D
textureOffset(00X10B10D00B
textureOffset(00Y20B20D
textureOffset(00Y20B20D00B
textureOffset(00a20B10D
textureOffset(00a20B10D00B
textureOffset(00d20B10D
textureOffset(00d20B10D00B
textureProj
textureProj(00I20B
textureProj(00I20B00B
textureProj(00I30B
textureProj(00I30B00B
textureProj(00J30B
textureProj(00J30B00B
textureProj(00M20B
textureProj(00M20B00B
textureProj(00M30B
textureProj(00M30B00B
textureProj(00N20B
textureProj(00N20B00B
textureProj(00N30B
textureProj(00N30B00B
textureProj(00O20B
textureProj(00O30B
textureProj(00R20B
textureProj(00R20B00B
textureProj(00R30B
textureProj(00R30B00B
textureProj(00S30B
textureProj(00S30B00B
textureProj(00X20B
textureProj(00X20B00B
textureProj(00X30B
textureProj(00X30B00B
textureProj(00Y30B
textureProj(00Y30B00B
textureProj(00d30B
textureProj(00d30B00B
textureProjGrad
textureProjGrad(00I20B10B10B
textureProjGrad(00I30B10B10B
textureProjGrad(00J30B20B20B
textureProjGrad(00R20B10B10B
textureProjGrad(00R30B10B10B
textureProjGrad(00S30B20B20B
textureProjGrad(00X20B10B10B
textureProjGrad(00X30B10B10B
textureProjGrad(00Y30B20B20B
textureProjGrad(00d30B10B10B
textureProjGradOffset
textureProjGradOffset(00I20B10B10B10D
textureProjGradOffset(00I30B10B10B10D
textureProjGradOffset(00J30B20B20B20D
textureProjGradOffset(00R20B10B10B10D
textureProjGradOffset(00R30B10B10B10D
textureProjGradOffset(00S30B20B20B20D
textureProjGradOffset(00X20B10B10B10D
textureProjGradOffset(00X30B10B10B10D
textureProjGradOffset(00Y30B20B20B20D
textureProjGradOffset(00d30B10B10B10D
textureProjLod
textureProjLod(00I20B00B
textureProjLod(00I30B00B
textureProjLod(00J30B00B
textureProjLod(00R20B00B
textureProjLod(00R30B00B
textureProjLod(00S30B00B
textureProjLod(00X20B00B
textureProjLod(00X30B00B
textureProjLod(00Y30B00B
textureProjLod(00d30B00B
textureProjLodOffset
textureProjLodOffset(00I20B00B10D
textureProjLodOffset(00I30B00B10D
textureProjLodOffset(00J30B00B20D
textureProjLodOffset(00R20B00B10D
textureProjLodOffset(00R30B00B10D
textureProjLodOffset(00S30B00B20D
textureProjLodOffset(00X20B00B10D
textureProjLodOffset(00X30B00B10D
textureProjLodOffset(00Y30B00B20D
textureProjLodOffset(00d30B00B10D
textureProjOffset
textureProjOffset(00I20B10D
textureProjOffset(00I20B10D00B
textureProjOffset(00I30B10D
textureProjOffset(00I30B10D00B
textureProjOffset(00J30B20D
textureProjOffset(00J30B20D00B
textureProjOffset(00R20B10D
textureProjOffset(00R20B10D00B
textureProjOffset(00R30B10D
textureProjOffset(00R30B10D00B
textureProjOffset(00S30B20D
textureProjOffset(00S30B20D00B
textureProjOffset(00X20B10D
textureProjOffset(00X20B10D00B
textureProjOffset(00X30B10D
textureProjOffset(00X30B10D00B
textureProjOffset(00Y30B20D
textureProjOffset(00Y30B20D00B
textureProjOffset(00d30B10D
textureProjOffset(00d30B10D00B
textureSize
textureSize(00I00D
textureSize(00J00D
textureSize(00K00D
textureSize(00L00D
textureSize(00M00D
textureSize(00N00D
textureSize(00P
textureSize(00Q
textureSize(00R00D
textureSize(00S00D
textureSize(00T00D
textureSize(00U00D
textureSize(00V
textureSize(00W
textureSize(00X00D
textureSize(00Y00D
textureSize(00Z00D
textureSize(00a00D
textureSize(00b
textureSize(00c
textureSize(00d00D
textureSize(00e00D
textureSize(00f00D
textureSize(00j
textureSize(00k00D
textureSize(00l00D
textureSize(00r
textureSize(00s00D
textureSize(00w
textureSize(00x00D
textureVideoWEBGL
textureVideoWEBGL(00y10B
texture_env_alpha_scale
texture_env_color
texture_env_mode
texture_env_rgb_scale
texture_format
texture_matrix
the 'engine' parameter has an unrecognized value
the list of attributes contains EGL_DMA_BUF_PLANE*_MODIFIER_LO_EXT but not EGL_DMA_BUF_PLANE*_MODIFIER_HI_EXT or vice versa.
thread constructor failed
thread-local initialization routine for egl::gCurrentThread
thread-local initialization routine for gl::gCurrentValidContext
thread::join failed
thread_safety
timestamp collection is not enabled for this surface.
timestamp not supported by surface.
timestamps is NULL.
tmd>
token too long
too complex expressions inside a switch statement
too many args (%d)\n
too many arguments
too many length or distance symbols
too many uniforms
translated
transpose
transpose(50B
transpose(60B
transpose(70B
transpose(90B
transpose(A0B
transpose(B0B
transpose(D0B
transpose(E0B
transpose(F0B
triangle_strip
triangles
triangles_adjacency
true
true (override)
true case is null\n
true case\n
trunc
trunc(00B
trunc(10B
trunc(20B
trunc(30B
truncf
tss\v
tx\vp
type must be an array
type: VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER, imageLayout: VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL
type: VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER, imageLayout: VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL
type: VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER, imageLayout: VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL, binding #0, index 0. Access info (usage: SYNC_COMPUTE_SHADER_SHADER_
type: VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC
t{.IRI>
u3|\vn3\
u5y<
u:Y,p
u<fk
u?oii
uAS8
uQ^I
uWOqOG-
uZ4+QW
u\)XK}w1
u\nv\vX
u_multiply_alpha
u_offset
u_scale
u_source_texture
u_transform_linear_to_srgb
u_unmultiply_alpha
uaddCarry
uaddCarry(00E00E00E
uaddCarry(10E10E10E
uaddCarry(20E20E20E
uaddCarry(30E30E30E
uc"s`
uiff
uiii
uimage2D
uimage2DArray
uimage3D
uimageCube
uint packSnorm2x16_emu(vec2 v)\n{\n    #if defined(GL_ARB_shading_language_packing)\n        return packSnorm2x16(v);\n    #else\n        int x = int(round(clamp(v.x, -1.0, 1.0) * 32767.0));\n        int y = int(round(clamp(v.y, -1.0, 1.0) * 32767.0));\n        return uint((y << 16) | (x & 0xFFFF));\n    #endif\n}\n
uint packUnorm2x16_emu(vec2 v)\n{\n    int x = int(round(clamp(v.x, 0.0, 1.0) * 65535.0));\n    int y = int(round(clamp(v.y, 0.0, 1.0) * 65535.0));\n    return uint((y << 16) | (x & 0xFFFF));\n}\n
uintBitsToFloat
uintBitsToFloat(
uintBitsToFloat(00E
uintBitsToFloat(10E
uintBitsToFloat(20E
uintBitsToFloat(30E
umulExtended
umulExtended(00E00E00E00E
umulExtended(10E10E10E10E
umulExtended(20E20E20E20E
umulExtended(30E30E30E30E
uname
unbindFBOBeforeSwitchingContext
uncurrentEglSurfaceUponSurfaceDestroy
undeclared identifier
undeclared identifier declared as invariant or precise
undefined behavior
undefined operation for structs containing arrays
undefined operation for structs containing samplers
undefined use of pixel local storage outside a fragment shader
unexpected #elif found after #else
unexpected #elif found without a matching #if
unexpected #else found after another #else
unexpected #else found without a matching #if
unexpected #endif found without a matching #if
unexpected end of file found in comment
unexpected end of file found in conditional block
unexpected end of file found in directive
unexpected token
unexpected token after conditional expression
unfoldShortCircuits
ungetc
ungetwc
unhandled format code: '%c'\n
uniform 
uniform block
uniform block binding greater than MAX_UNIFORM_BUFFER_BINDINGS
uniform bool u_multiply_alpha;\n
uniform bool u_transform_linear_to_srgb;\n
uniform bool u_unmultiply_alpha;\n
uniform vec2 u_offset;\n
uniform vec2 u_scale;\n
uniformsAndXfbDescriptorSetCacheHits
uniformsAndXfbDescriptorSetCacheMisses
uniformsAndXfbDescriptorSetCacheTotalSize
unique_lock::lock: already locked
unique_lock::lock: references null mutex
unique_lock::unlock: not locked
unknown
unknown block storage
unknown color space conversion standard
unknown compression method
unknown depth
unknown geometry shader primitive type
unknown header flags set
unknown internal image format
unknown matrix packing
unknown object (%u), message %s(%s)\n
unknown object type.
unknown qualifier
unknown type
unknown type\n
unordered_map::at: key not found
unpackHalf2x16
unpackHalf2x16(00E
unpackLastRowSeparatelyForPaddingInclusion
unpackOverlappingRowsSeparatelyUnpackBuffer
unpackSnorm2x16
unpackSnorm2x16(00E
unpackSnorm4x8
unpackSnorm4x8(00E
unpackUnorm2x16
unpackUnorm2x16(00E
unpackUnorm4x8
unpackUnorm4x8(00E
unrecognized pragma
unrecognized token
unsetenv
unsized arrays are not allowed with interface blocks
unsizedSRGBReadPixelsDoesntTransform
unspecified generic_category error
unspecified iostream_category error
unspecified system_category error
unsupported format
unsupported interpolation qualifier
unsupported locale for standard input
unsupported shader version
unsupported storage qualifier
unsupported type
unsupported value
unterminated macro invocation
unused
unused2
uoff
uoff?o
updateSubresourceOnHost
updateTraceEventDuration
uploadTextureDataInChunks
upwY
up{6
usage: SYNC_COMPUTE_SHADER_SHADER_SAMPLED_READ
usage: SYNC_INDEX_INPUT_INDEX_READ
usage: SYNC_VERTEX_SHADER_SHADER_STORAGE_READ
usage: SYNC_VERTEX_SHADER_UNIFORM_READ
usampler2D
usampler2DArray
usampler2DMS
usampler2DMSArray
usampler3D
usamplerCube
useCullModeDynamicState
useDepthBiasEnableDynamicState
useDepthCompareOpDynamicState
useDepthTestEnableDynamicState
useDepthWriteEnableDynamicState
useFrontFaceDynamicState
useIntermediateTextureForGenerateMipmap
useMultipleDescriptorsForExternalFormats
useNonZeroStencilWriteMaskStaticState
usePrimitiveRestartEnableDynamicState
useRasterizerDiscardEnableDynamicState
useResetCommandBufferBitForSecondaryPools
useStencilOpDynamicState
useStencilTestEnableDynamicState
useUnusedBlocksWithStandardOrSharedLayout
useVertexInputBindingStrideDynamicState
useVkEventForImageBarrier
useVmaForImageSuballocation
uselocale
ust is null
usubBorrow
usubBorrow(00E00E00E
usubBorrow(10E10E10E
usubBorrow(20E20E20E
usubBorrow(30E30E30E
usubpassInput
usubpassInputMS
usun
uu?o
uuoiff
uuuuu
uvec
uvec2
uvec3
uvec4
uvec4(pls._
v0\/p
v1F'|
v1r~
v7a)`
vAI)
vC\fGC\rG
vJ4t
vU>E
validate_core
validate_sync
value is NULL.
value not assignable when pixel local storage is declared
values is NULL.
variable expected
variables with qualifier 'const' must be initialized
varyingsRequireMatchingPrecisionInSpirv
vasprintf
vdf 
vec2 unpackUnorm2x16_emu(uint u)\n{\n    float x = float(u & 0xFFFFu) / 65535.0;\n    float y = float(u >> 16) / 65535.0;\n    return vec2(x, y);\n}\n
vec2(textureSize(u_source_texture))
vec4 c
vector field selection out of range
vector scale second child into first child
vector swizzle (
vector-scale
vector-times-matrix
vertex shader output cannot be an array of arrays
vertexArraySyncStateCalls
vertexIDDoesNotIncludeBaseVertex
vfprintf
vg%9
vir)
virtio_gpu
vi{l
vk::CanSupportTransformFeedbackExtension(mTransformFeedbackFeatures)
vkAcquireDrmDisplayEXT
vkAcquireNextImage2KHR
vkAcquireNextImageKHR
vkAcquirePerformanceConfigurationINTEL
vkAcquireProfilingLockKHR
vkAllocateCommandBuffers
vkAllocateDescriptorSets
vkAllocateMemory
vkBeginCommandBuffer
vkBindAccelerationStructureMemoryNV
vkBindBufferMemory
vkBindBufferMemory2
vkBindBufferMemory2KHR
vkBindImageMemory
vkBindImageMemory2
vkBindImageMemory2KHR
vkBindOpticalFlowSessionImageNV
vkBindVideoSessionMemoryKHR
vkBuildAccelerationStructuresKHR
vkBuildMicromapsEXT
vkCmdBeginConditionalRenderingEXT
vkCmdBeginDebugUtilsLabelEXT
vkCmdBeginQuery
vkCmdBeginQueryIndexedEXT
vkCmdBeginRenderPass
vkCmdBeginRenderPass():  Hazard READ_AFTER_WRITE in subpass 0 for attachment 
vkCmdBeginRenderPass():  Hazard WRITE_AFTER_WRITE in subpass 0 for attachment
vkCmdBeginRenderPass():  Hazard WRITE_AFTER_WRITE in subpass 0 for attachment 
vkCmdBeginRenderPass2
vkCmdBeginRenderPass2KHR
vkCmdBeginRenderPass: Hazard WRITE_AFTER_WRITE in subpass
vkCmdBeginRendering
vkCmdBeginRenderingKHR
vkCmdBeginTransformFeedbackEXT
vkCmdBeginVideoCodingKHR
vkCmdBindDescriptorBufferEmbeddedSamplersEXT
vkCmdBindDescriptorBuffersEXT
vkCmdBindDescriptorSets
vkCmdBindIndexBuffer
vkCmdBindIndexBuffer2KHR
vkCmdBindInvocationMaskHUAWEI
vkCmdBindPipeline
vkCmdBindPipelineShaderGroupNV
vkCmdBindShadersEXT
vkCmdBindShadingRateImageNV
vkCmdBindTransformFeedbackBuffersEXT
vkCmdBindVertexBuffers
vkCmdBindVertexBuffers2
vkCmdBindVertexBuffers2EXT
vkCmdBlitImage
vkCmdBlitImage with flipped coordinates blits incorrectly.
vkCmdBlitImage2
vkCmdBlitImage2KHR
vkCmdBuildAccelerationStructureNV
vkCmdBuildAccelerationStructuresIndirectKHR
vkCmdBuildAccelerationStructuresKHR
vkCmdBuildMicromapsEXT
vkCmdClearAttachments
vkCmdClearColorImage
vkCmdClearDepthStencilImage
vkCmdControlVideoCodingKHR
vkCmdCopyAccelerationStructureKHR
vkCmdCopyAccelerationStructureNV
vkCmdCopyAccelerationStructureToMemoryKHR
vkCmdCopyBuffer
vkCmdCopyBuffer2
vkCmdCopyBuffer2KHR
vkCmdCopyBufferToImage
vkCmdCopyBufferToImage2
vkCmdCopyBufferToImage2KHR
vkCmdCopyImage
vkCmdCopyImage2
vkCmdCopyImage2KHR
vkCmdCopyImageToBuffer
vkCmdCopyImageToBuffer2
vkCmdCopyImageToBuffer2KHR
vkCmdCopyMemoryIndirectNV
vkCmdCopyMemoryToAccelerationStructureKHR
vkCmdCopyMemoryToImageIndirectNV
vkCmdCopyMemoryToMicromapEXT
vkCmdCopyMicromapEXT
vkCmdCopyMicromapToMemoryEXT
vkCmdCopyQueryPoolResults
vkCmdCuLaunchKernelNVX
vkCmdDebugMarkerBeginEXT
vkCmdDebugMarkerEndEXT
vkCmdDebugMarkerInsertEXT
vkCmdDecodeVideoKHR
vkCmdDecompressMemoryIndirectCountNV
vkCmdDecompressMemoryNV
vkCmdDispatch
vkCmdDispatchBase
vkCmdDispatchBaseKHR
vkCmdDispatchIndirect
vkCmdDraw
vkCmdDrawClusterHUAWEI
vkCmdDrawClusterIndirectHUAWEI
vkCmdDrawIndexed
vkCmdDrawIndexedIndirect
vkCmdDrawIndexedIndirectCount
vkCmdDrawIndexedIndirectCountAMD
vkCmdDrawIndexedIndirectCountKHR
vkCmdDrawIndirect
vkCmdDrawIndirectByteCountEXT
vkCmdDrawIndirectCount
vkCmdDrawIndirectCountAMD
vkCmdDrawIndirectCountKHR
vkCmdDrawMeshTasksEXT
vkCmdDrawMeshTasksIndirectCountEXT
vkCmdDrawMeshTasksIndirectCountNV
vkCmdDrawMeshTasksIndirectEXT
vkCmdDrawMeshTasksIndirectNV
vkCmdDrawMeshTasksNV
vkCmdDrawMultiEXT
vkCmdDrawMultiIndexedEXT
vkCmdEncodeVideoKHR
vkCmdEndConditionalRenderingEXT
vkCmdEndDebugUtilsLabelEXT
vkCmdEndQuery
vkCmdEndQueryIndexedEXT
vkCmdEndRenderPass():  Hazard WRITE_AFTER_READ in subpass 0 for attachment 1 depth aspect during store with storeOp VK_ATTACHMENT_STORE_OP_DONT_CARE. Access info (usage: SYNC_LATE_FRAGMENT_TESTS_DEPTH_STENCIL_ATTACHMENT_WRITE, prior_usage: SYNC_FRAGMENT_SHADER_SHADER_
vkCmdEndRenderPass2
vkCmdEndRenderPass2KHR
vkCmdEndRendering
vkCmdEndRenderingKHR
vkCmdEndTransformFeedbackEXT
vkCmdEndVideoCodingKHR
vkCmdExecuteCommands
vkCmdExecuteGeneratedCommandsNV
vkCmdFillBuffer
vkCmdInsertDebugUtilsLabelEXT
vkCmdNextSubpass
vkCmdNextSubpass2
vkCmdNextSubpass2KHR
vkCmdOpticalFlowExecuteNV
vkCmdPipelineBarrier
vkCmdPipelineBarrier2
vkCmdPipelineBarrier2KHR
vkCmdPreprocessGeneratedCommandsNV
vkCmdPushConstants
vkCmdPushDescriptorSetKHR
vkCmdPushDescriptorSetWithTemplateKHR
vkCmdResetEvent
vkCmdResetEvent2
vkCmdResetEvent2KHR
vkCmdResetQueryPool
vkCmdResolveImage
vkCmdResolveImage2
vkCmdResolveImage2KHR
vkCmdSetAlphaToCoverageEnableEXT
vkCmdSetAlphaToOneEnableEXT
vkCmdSetAttachmentFeedbackLoopEnableEXT
vkCmdSetBlendConstants
vkCmdSetCheckpointNV
vkCmdSetCoarseSampleOrderNV
vkCmdSetColorBlendAdvancedEXT
vkCmdSetColorBlendEnableEXT
vkCmdSetColorBlendEquationEXT
vkCmdSetColorWriteEnableEXT
vkCmdSetColorWriteMaskEXT
vkCmdSetConservativeRasterizationModeEXT
vkCmdSetCoverageModulationModeNV
vkCmdSetCoverageModulationTableEnableNV
vkCmdSetCoverageModulationTableNV
vkCmdSetCoverageReductionModeNV
vkCmdSetCoverageToColorEnableNV
vkCmdSetCoverageToColorLocationNV
vkCmdSetCullMode
vkCmdSetCullModeEXT
vkCmdSetDepthBias
vkCmdSetDepthBias2EXT
vkCmdSetDepthBiasEnable
vkCmdSetDepthBiasEnableEXT
vkCmdSetDepthBounds
vkCmdSetDepthBoundsTestEnable
vkCmdSetDepthBoundsTestEnableEXT
vkCmdSetDepthClampEnableEXT
vkCmdSetDepthClipEnableEXT
vkCmdSetDepthClipNegativeOneToOneEXT
vkCmdSetDepthCompareOp
vkCmdSetDepthCompareOpEXT
vkCmdSetDepthTestEnable
vkCmdSetDepthTestEnableEXT
vkCmdSetDepthWriteEnable
vkCmdSetDepthWriteEnableEXT
vkCmdSetDescriptorBufferOffsetsEXT
vkCmdSetDeviceMask
vkCmdSetDeviceMaskKHR
vkCmdSetDiscardRectangleEXT
vkCmdSetDiscardRectangleEnableEXT
vkCmdSetDiscardRectangleModeEXT
vkCmdSetEvent
vkCmdSetEvent2
vkCmdSetEvent2KHR
vkCmdSetExclusiveScissorEnableNV
vkCmdSetExclusiveScissorNV
vkCmdSetExtraPrimitiveOverestimationSizeEXT
vkCmdSetFragmentShadingRateEnumNV
vkCmdSetFragmentShadingRateKHR
vkCmdSetFrontFace
vkCmdSetFrontFaceEXT
vkCmdSetLineRasterizationModeEXT
vkCmdSetLineStippleEXT
vkCmdSetLineStippleEnableEXT
vkCmdSetLineWidth
vkCmdSetLogicOpEXT
vkCmdSetLogicOpEnableEXT
vkCmdSetPatchControlPointsEXT
vkCmdSetPerformanceMarkerINTEL
vkCmdSetPerformanceOverrideINTEL
vkCmdSetPerformanceStreamMarkerINTEL
vkCmdSetPolygonModeEXT
vkCmdSetPrimitiveRestartEnable
vkCmdSetPrimitiveRestartEnableEXT
vkCmdSetPrimitiveTopology
vkCmdSetPrimitiveTopologyEXT
vkCmdSetProvokingVertexModeEXT
vkCmdSetRasterizationSamplesEXT
vkCmdSetRasterizationStreamEXT
vkCmdSetRasterizerDiscardEnable
vkCmdSetRasterizerDiscardEnableEXT
vkCmdSetRayTracingPipelineStackSizeKHR
vkCmdSetRepresentativeFragmentTestEnableNV
vkCmdSetSampleLocationsEXT
vkCmdSetSampleLocationsEnableEXT
vkCmdSetSampleMaskEXT
vkCmdSetScissor
vkCmdSetScissorWithCount
vkCmdSetScissorWithCountEXT
vkCmdSetShadingRateImageEnableNV
vkCmdSetStencilCompareMask
vkCmdSetStencilOp
vkCmdSetStencilOpEXT
vkCmdSetStencilReference
vkCmdSetStencilTestEnable
vkCmdSetStencilTestEnableEXT
vkCmdSetStencilWriteMask
vkCmdSetTessellationDomainOriginEXT
vkCmdSetVertexInputEXT
vkCmdSetViewport
vkCmdSetViewportShadingRatePaletteNV
vkCmdSetViewportSwizzleNV
vkCmdSetViewportWScalingEnableNV
vkCmdSetViewportWScalingNV
vkCmdSetViewportWithCount
vkCmdSetViewportWithCountEXT
vkCmdSubpassShadingHUAWEI
vkCmdTraceRaysIndirect2KHR
vkCmdTraceRaysIndirectKHR
vkCmdTraceRaysKHR
vkCmdTraceRaysNV
vkCmdUpdateBuffer
vkCmdUpdatePipelineIndirectBufferNV
vkCmdWaitEvents
vkCmdWaitEvents2
vkCmdWaitEvents2KHR
vkCmdWriteAccelerationStructuresPropertiesKHR
vkCmdWriteAccelerationStructuresPropertiesNV
vkCmdWriteBufferMarker2AMD
vkCmdWriteBufferMarkerAMD
vkCmdWriteMicromapsPropertiesEXT
vkCmdWriteTimestamp
vkCmdWriteTimestamp2
vkCmdWriteTimestamp2KHR
vkCompileDeferredNV
vkCopyAccelerationStructureKHR
vkCopyAccelerationStructureToMemoryKHR
vkCopyImageToImageEXT
vkCopyImageToMemoryEXT
vkCopyMemoryToAccelerationStructureKHR
vkCopyMemoryToImageEXT
vkCopyMemoryToMicromapEXT
vkCopyMicromapEXT
vkCopyMicromapToMemoryEXT
vkCreateAccelerationStructureKHR
vkCreateAccelerationStructureNV
vkCreateBuffer
vkCreateBufferView
vkCreateCommandPool
vkCreateComputePipelines
vkCreateCuFunctionNVX
vkCreateCuModuleNVX
vkCreateDebugReportCallbackEXT
vkCreateDebugUtilsMessengerEXT
vkCreateDeferredOperationKHR
vkCreateDescriptorPool
vkCreateDescriptorSetLayout
vkCreateDescriptorUpdateTemplate
vkCreateDescriptorUpdateTemplateKHR
vkCreateDevice
vkCreateDisplayModeKHR
vkCreateDisplayPlaneSurfaceKHR
vkCreateEvent
vkCreateFence
vkCreateFramebuffer
vkCreateGraphicsPipelines
vkCreateHeadlessSurfaceEXT
vkCreateImage
vkCreateImageView
vkCreateIndirectCommandsLayoutNV
vkCreateInstance
vkCreateMicromapEXT
vkCreateOpticalFlowSessionNV
vkCreatePipelineCache
vkCreatePipelineLayout
vkCreatePrivateDataSlot
vkCreatePrivateDataSlotEXT
vkCreateQueryPool
vkCreateRayTracingPipelinesKHR
vkCreateRayTracingPipelinesNV
vkCreateRenderPass
vkCreateRenderPass2
vkCreateRenderPass2KHR
vkCreateSampler
vkCreateSamplerYcbcrConversion
vkCreateSamplerYcbcrConversionKHR
vkCreateSemaphore
vkCreateShaderModule
vkCreateShadersEXT
vkCreateSharedSwapchainsKHR
vkCreateSwapchainKHR
vkCreateValidationCacheEXT
vkCreateVideoSessionKHR
vkCreateVideoSessionParametersKHR
vkCreateWaylandSurfaceKHR
vkCreateXcbSurfaceKHR
vkDebugMarkerSetObjectNameEXT
vkDebugMarkerSetObjectTagEXT
vkDebugReportMessageEXT
vkDeferredOperationJoinKHR
vkDestroyAccelerationStructureKHR
vkDestroyAccelerationStructureNV
vkDestroyBuffer
vkDestroyBufferView
vkDestroyCommandPool
vkDestroyCuFunctionNVX
vkDestroyCuModuleNVX
vkDestroyDebugReportCallbackEXT
vkDestroyDebugUtilsMessengerEXT
vkDestroyDeferredOperationKHR
vkDestroyDescriptorPool
vkDestroyDescriptorSetLayout
vkDestroyDescriptorUpdateTemplate
vkDestroyDescriptorUpdateTemplateKHR
vkDestroyDevice
vkDestroyEvent
vkDestroyFence
vkDestroyFramebuffer
vkDestroyImage
vkDestroyImageView
vkDestroyIndirectCommandsLayoutNV
vkDestroyInstance
vkDestroyMicromapEXT
vkDestroyOpticalFlowSessionNV
vkDestroyPipeline
vkDestroyPipelineCache
vkDestroyPipelineLayout
vkDestroyPrivateDataSlot
vkDestroyPrivateDataSlotEXT
vkDestroyQueryPool
vkDestroyRenderPass
vkDestroySampler
vkDestroySamplerYcbcrConversion
vkDestroySamplerYcbcrConversionKHR
vkDestroySemaphore
vkDestroyShaderEXT
vkDestroyShaderModule
vkDestroySwapchainKHR
vkDestroyValidationCacheEXT
vkDestroyVideoSessionKHR
vkDestroyVideoSessionParametersKHR
vkDeviceWaitIdle
vkDisplayPowerControlEXT
vkEndCommandBuffer
vkEnumerateDeviceExtensionProperties
vkEnumerateDeviceLayerProperties
vkEnumerateInstanceExtensionProperties
vkEnumerateInstanceLayerProperties
vkEnumerateInstanceVersion
vkEnumeratePhysicalDeviceGroups
vkEnumeratePhysicalDeviceGroupsKHR
vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR
vkEnumeratePhysicalDevices
vkEnumeratePhysicalDevices: One or more layers modified physical devices
vkFlushMappedMemoryRanges
vkFreeCommandBuffers
vkFreeDescriptorSets
vkFreeMemory
vkGetAccelerationStructureBuildSizesKHR
vkGetAccelerationStructureDeviceAddressKHR
vkGetAccelerationStructureHandleNV
vkGetAccelerationStructureMemoryRequirementsNV
vkGetAccelerationStructureOpaqueCaptureDescriptorDataEXT
vkGetBufferDeviceAddress
vkGetBufferDeviceAddressEXT
vkGetBufferDeviceAddressKHR
vkGetBufferMemoryRequirements
vkGetBufferMemoryRequirements2
vkGetBufferMemoryRequirements2KHR
vkGetBufferOpaqueCaptureAddress
vkGetBufferOpaqueCaptureAddressKHR
vkGetBufferOpaqueCaptureDescriptorDataEXT
vkGetCalibratedTimestampsEXT
vkGetDeferredOperationMaxConcurrencyKHR
vkGetDeferredOperationResultKHR
vkGetDescriptorEXT
vkGetDescriptorSetHostMappingVALVE
vkGetDescriptorSetLayoutBindingOffsetEXT
vkGetDescriptorSetLayoutHostMappingInfoVALVE
vkGetDescriptorSetLayoutSizeEXT
vkGetDescriptorSetLayoutSupport
vkGetDescriptorSetLayoutSupportKHR
vkGetDeviceAccelerationStructureCompatibilityKHR
vkGetDeviceBufferMemoryRequirements
vkGetDeviceBufferMemoryRequirementsKHR
vkGetDeviceFaultInfoEXT
vkGetDeviceGroupPeerMemoryFeatures
vkGetDeviceGroupPeerMemoryFeaturesKHR
vkGetDeviceGroupPresentCapabilitiesKHR
vkGetDeviceGroupSurfacePresentModesKHR
vkGetDeviceImageMemoryRequirements
vkGetDeviceImageMemoryRequirementsKHR
vkGetDeviceImageSparseMemoryRequirements
vkGetDeviceImageSparseMemoryRequirementsKHR
vkGetDeviceImageSubresourceLayoutKHR
vkGetDeviceMemoryCommitment
vkGetDeviceMemoryOpaqueCaptureAddress
vkGetDeviceMemoryOpaqueCaptureAddressKHR
vkGetDeviceMicromapCompatibilityEXT
vkGetDeviceProcAddr
vkGetDeviceQueue
vkGetDeviceQueue2
vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI
vkGetDisplayModeProperties2KHR
vkGetDisplayModePropertiesKHR
vkGetDisplayPlaneCapabilities2KHR
vkGetDisplayPlaneCapabilitiesKHR
vkGetDisplayPlaneSupportedDisplaysKHR
vkGetDrmDisplayEXT
vkGetDynamicRenderingTilePropertiesQCOM
vkGetEncodedVideoSessionParametersKHR
vkGetEventStatus
vkGetFenceFdKHR
vkGetFenceStatus
vkGetFramebufferTilePropertiesQCOM
vkGetGeneratedCommandsMemoryRequirementsNV
vkGetImageDrmFormatModifierPropertiesEXT
vkGetImageMemoryRequirements
vkGetImageMemoryRequirements2
vkGetImageMemoryRequirements2KHR
vkGetImageOpaqueCaptureDescriptorDataEXT
vkGetImageSparseMemoryRequirements
vkGetImageSparseMemoryRequirements2
vkGetImageSparseMemoryRequirements2KHR
vkGetImageSubresourceLayout
vkGetImageSubresourceLayout2EXT
vkGetImageSubresourceLayout2KHR
vkGetImageViewAddressNVX
vkGetImageViewHandleNVX
vkGetImageViewOpaqueCaptureDescriptorDataEXT
vkGetInstanceProcAddr
vkGetMemoryFdKHR
vkGetMemoryFdPropertiesKHR
vkGetMemoryHostPointerPropertiesEXT
vkGetMemoryRemoteAddressNV
vkGetMicromapBuildSizesEXT
vkGetPastPresentationTimingGOOGLE
vkGetPerformanceParameterINTEL
vkGetPhysicalDeviceCalibrateableTimeDomainsEXT
vkGetPhysicalDeviceCooperativeMatrixPropertiesKHR
vkGetPhysicalDeviceCooperativeMatrixPropertiesNV
vkGetPhysicalDeviceDisplayPlaneProperties2KHR
vkGetPhysicalDeviceDisplayPlanePropertiesKHR
vkGetPhysicalDeviceDisplayProperties2KHR
vkGetPhysicalDeviceDisplayPropertiesKHR
vkGetPhysicalDeviceExternalBufferProperties
vkGetPhysicalDeviceExternalBufferPropertiesKHR
vkGetPhysicalDeviceExternalFenceProperties
vkGetPhysicalDeviceExternalFencePropertiesKHR
vkGetPhysicalDeviceExternalImageFormatPropertiesNV
vkGetPhysicalDeviceExternalSemaphoreProperties
vkGetPhysicalDeviceExternalSemaphorePropertiesKHR
vkGetPhysicalDeviceFeatures
vkGetPhysicalDeviceFeatures2
vkGetPhysicalDeviceFeatures2KHR
vkGetPhysicalDeviceFormatProperties
vkGetPhysicalDeviceFormatProperties2
vkGetPhysicalDeviceFormatProperties2KHR
vkGetPhysicalDeviceFragmentShadingRatesKHR
vkGetPhysicalDeviceImageFormatProperties
vkGetPhysicalDeviceImageFormatProperties2
vkGetPhysicalDeviceImageFormatProperties2KHR
vkGetPhysicalDeviceMemoryProperties
vkGetPhysicalDeviceMemoryProperties2
vkGetPhysicalDeviceMemoryProperties2KHR
vkGetPhysicalDeviceMultisamplePropertiesEXT
vkGetPhysicalDeviceOpticalFlowImageFormatsNV
vkGetPhysicalDevicePresentRectanglesKHR
vkGetPhysicalDeviceProperties
vkGetPhysicalDeviceProperties2
vkGetPhysicalDeviceProperties2KHR
vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR
vkGetPhysicalDeviceQueueFamilyProperties
vkGetPhysicalDeviceQueueFamilyProperties2
vkGetPhysicalDeviceQueueFamilyProperties2KHR
vkGetPhysicalDeviceSparseImageFormatProperties
vkGetPhysicalDeviceSparseImageFormatProperties2
vkGetPhysicalDeviceSparseImageFormatProperties2KHR
vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV
vkGetPhysicalDeviceSurfaceCapabilities2EXT
vkGetPhysicalDeviceSurfaceCapabilities2KHR
vkGetPhysicalDeviceSurfaceCapabilitiesKHR
vkGetPhysicalDeviceSurfaceFormats2KHR
vkGetPhysicalDeviceSurfaceFormatsKHR
vkGetPhysicalDeviceSurfacePresentModesKHR
vkGetPhysicalDeviceSurfaceSupportKHR
vkGetPhysicalDeviceToolProperties
vkGetPhysicalDeviceToolPropertiesEXT
vkGetPhysicalDeviceVideoCapabilitiesKHR
vkGetPhysicalDeviceVideoEncodeQualityLevelPropertiesKHR
vkGetPhysicalDeviceVideoFormatPropertiesKHR
vkGetPhysicalDeviceWaylandPresentationSupportKHR
vkGetPhysicalDeviceXcbPresentationSupportKHR
vkGetPipelineCacheData
vkGetPipelineExecutableInternalRepresentationsKHR
vkGetPipelineExecutablePropertiesKHR
vkGetPipelineExecutableStatisticsKHR
vkGetPipelineIndirectDeviceAddressNV
vkGetPipelineIndirectMemoryRequirementsNV
vkGetPipelinePropertiesEXT
vkGetPrivateData
vkGetPrivateDataEXT
vkGetQueryPoolResults
vkGetQueueCheckpointData2NV
vkGetQueueCheckpointDataNV
vkGetRayTracingCaptureReplayShaderGroupHandlesKHR
vkGetRayTracingShaderGroupHandlesKHR
vkGetRayTracingShaderGroupHandlesNV
vkGetRayTracingShaderGroupStackSizeKHR
vkGetRefreshCycleDurationGOOGLE
vkGetRenderAreaGranularity
vkGetRenderingAreaGranularityKHR
vkGetSamplerOpaqueCaptureDescriptorDataEXT
vkGetSemaphoreCounterValue
vkGetSemaphoreCounterValueKHR
vkGetSemaphoreFdKHR
vkGetShaderBinaryDataEXT
vkGetShaderInfoAMD
vkGetShaderModuleCreateInfoIdentifierEXT
vkGetShaderModuleIdentifierEXT
vkGetSwapchainCounterEXT
vkGetSwapchainImagesKHR
vkGetSwapchainStatusKHR
vkGetValidationCacheDataEXT
vkGetVideoSessionMemoryRequirementsKHR
vkImportFenceFdKHR
vkImportSemaphoreFdKHR
vkImportSemaphoreZirconHandleFUCHSIA
vkInitializePerformanceApiINTEL
vkInvalidateMappedMemoryRanges
vkMapMemory
vkMapMemory2KHR
vkMergePipelineCaches
vkMergeValidationCachesEXT
vkQueueBeginDebugUtilsLabelEXT
vkQueueBindSparse
vkQueueEndDebugUtilsLabelEXT
vkQueueInsertDebugUtilsLabelEXT
vkQueuePresentKHR
vkQueueSetPerformanceConfigurationINTEL
vkQueueSubmit
vkQueueSubmit2
vkQueueSubmit2KHR
vkQueueSubmitCallsPerFrame
vkQueueSubmitCallsTotal
vkQueueWaitIdle
vkRegisterDeviceEventEXT
vkRegisterDisplayEventEXT
vkReleaseDisplayEXT
vkReleasePerformanceConfigurationINTEL
vkReleaseProfilingLockKHR
vkReleaseSwapchainImagesEXT
vkResetCommandBuffer
vkResetCommandPool
vkResetDescriptorPool
vkResetEvent
vkResetFences
vkResetQueryPool
vkResetQueryPoolEXT
vkSetDebugUtilsObjectNameEXT
vkSetDebugUtilsObjectTagEXT
vkSetDeviceMemoryPriorityEXT
vkSetEvent
vkSetHdrMetadataEXT
vkSetLocalDimmingAMD
vkSetPrivateData
vkSetPrivateDataEXT
vkSignalSemaphore
vkSignalSemaphoreKHR
vkSubmitDebugUtilsMessageEXT
vkTransitionImageLayoutEXT
vkTrimCommandPool
vkTrimCommandPoolKHR
vkUninitializePerformanceApiINTEL
vkUnmapMemory
vkUnmapMemory2KHR
vkUpdateDescriptorSetWithTemplate
vkUpdateDescriptorSetWithTemplateKHR
vkUpdateDescriptorSets
vkUpdateVideoSessionParametersKHR
vkWaitForFences
vkWaitForPresentKHR
vkWaitSemaphores
vkWaitSemaphoresKHR
vkWriteAccelerationStructuresPropertiesKHR
vkWriteMicromapsPropertiesEXT
vk\zK
vlRn
voF|
void function cannot return a value
void main()\n
void main(){
volatile
volatile 
vsnprintf
vt#y
vvvg
vzj/m
v|Oq
v|o3
v~oq~3
w#m^N
w$IOZS
w&ZY
w-Fg
w1s/t
w6~s
w>U4{M
wJW8?6
wK*|w
wS4}
wSjX-]
wSwt\
wT\rZ
wW9~
w\tY9
waitIdleBeforeSwapchainRecreation
warmUpPipelineCacheAtLink
warn
wayland-0
wcrtomb
wcslen
wcsnrtombs
wd<oj
webgl_FragColor
webgl_FragData
webgl_SecondaryFragColor
webgl_SecondaryFragColorEXT
webgl_SecondaryFragData
webgl_SecondaryFragDataEXT
wglChoosePixelFormat
wglCopyContext
wglCreateContext
wglCreateLayerContext
wglDeleteContext
wglDescribeLayerPlane
wglDescribePixelFormat
wglGetCurrentContext
wglGetCurrentDC
wglGetEnhMetaFilePixelFormat
wglGetLayerPaletteEntries
wglGetPixelFormat
wglGetProcAddress
wglMakeCurrent
wglRealizeLayerPalette
wglSetLayerPaletteEntries
wglSetPixelFormat
wglShareLists
wglSwapBuffers
wglSwapLayerBuffers
wglUseFontBitmaps
wglUseFontBitmapsA
wglUseFontBitmapsW
wglUseFontOutlines
wglUseFontOutlinesA
wglUseFontOutlinesW
whPf
when object type is EGL_OBJECT_DISPLAY_KHR, the object must be the same as the display.
while
while (
wkof
wl_array_add
wl_array_copy
wl_array_init
wl_array_release
wl_buffer
wl_callback
wl_data_device
wl_data_offer
wl_data_source
wl_display
wl_display_cancel_read
wl_display_connect
wl_display_connect_to_fd
wl_display_create_queue
wl_display_disconnect
wl_display_dispatch
wl_display_dispatch_pending
wl_display_dispatch_queue
wl_display_dispatch_queue_pending
wl_display_flush
wl_display_get_error
wl_display_get_fd
wl_display_get_protocol_error
wl_display_prepare_read
wl_display_prepare_read_queue
wl_display_read_events
wl_display_roundtrip
wl_display_roundtrip_queue
wl_egl_window_create
wl_egl_window_destroy
wl_egl_window_get_attached_size
wl_egl_window_resize
wl_event_queue_destroy
wl_keyboard
wl_list_empty
wl_list_init
wl_list_insert
wl_list_insert_list
wl_list_length
wl_list_remove
wl_log_set_handler_client
wl_output
wl_pointer
wl_proxy_add_dispatcher
wl_proxy_add_listener
wl_proxy_create
wl_proxy_create_wrapper
wl_proxy_destroy
wl_proxy_get_class
wl_proxy_get_id
wl_proxy_get_listener
wl_proxy_get_tag
wl_proxy_get_user_data
wl_proxy_get_version
wl_proxy_marshal
wl_proxy_marshal_array
wl_proxy_marshal_array_constructor
wl_proxy_marshal_array_constructor_versioned
wl_proxy_marshal_array_flags
wl_proxy_marshal_constructor
wl_proxy_marshal_constructor_versioned
wl_proxy_marshal_flags
wl_proxy_set_queue
wl_proxy_set_tag
wl_proxy_set_user_data
wl_proxy_wrapper_destroy
wl_region
wl_registry
wl_seat
wl_shell_surface
wl_shm_pool
wl_subsurface
wl_surface
wl_touch
wmemchr
wn>Jj
wpV3
writeDescriptorSets
write_
write_barriers: SYNC_TRANSFORM_FEEDBACK_EXT_TRANSFORM_FEEDBACK_COUNTER_READ_EXT|SYNC_TRANSFORM_FEEDBACK_EXT_TRANSFORM_FEEDBACK_COUNTER_WRITE_EXT
wrong operand type - no operation '
wrong operand types - no operation '
wv`s
x = y = or z cannot be negative.
x-Q=3
x-VE
xB~I
xI!V
xV4?xV4?xV4?xV4?
x^6V
xcP_j
xcb_connect
xcb_connect() failed, error 
xcb_connection_has_error
xcb_depth_next
xcb_depth_visuals_iterator
xcb_disconnect
xcb_get_geometry
xcb_get_geometry_reply
xcb_get_input_focus
xcb_get_input_focus_reply
xcb_get_setup
xcb_query_tree
xcb_query_tree_reply
xcb_screen_allowed_depths_iterator
xcb_setup_roots_iterator
xcb_visualtype_next
xfbBufferOffsets
xfbOut
xfbVerticesPerInstance
xg+#1
xo2l#gC{
xq-y
xqKf
xqd7^O
y%Y{k!g
y1|+sXO.
y9X)
y>X,7 l
y>bN5
yAbt}
yGNn
yGt\r&lo!
y[IM
y\vq6S
yhE4
ynN=
yscu
yuv_2_rgb(20B00H
ywO|
yyset_column called with no buffer
yyset_lineno called with no buffer
y{Zc
z2>5
z4":c
z@Ng
zFCU
zI]w
zKcN
zL>w
zPnVl
zhMU
zoffset is larger than MAX_3D_TEXTURE_SIZE-1
zombie
zyuYS
{/94o
{4L8\r
{79,os
{RRQ
{l\n2y
|4gw
|NPs
|so3
|{IOZS
}B\fos{tT\f
}K8d
}NLw&
}OEn
}OFn
}V{gp
}mM1dS
}oDpn
~2kef
~3w0
~O8e"
~Xi1
~~~~~~~~~~~~~~~~
