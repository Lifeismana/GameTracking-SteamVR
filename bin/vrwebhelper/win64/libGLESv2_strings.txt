					
	 	!	"	#	$	%	&	'	(	)	*	+	,	-	.	/	0	1	2	3	4	5	6	7	8	9	:	;	<	=	>	?	@	A	B	C	D	E	F	G	H	I	J	K	L	M	N	O	P	Q	R	S	T	U	V	W	X	Y	Z	[	\	]	^	_	`	a	b	c	d	e	f	g	h	i	j	k	l	m	n	o	p	q	r	s	t	u	v	w	x	y	z	{	|	}	~	
	%	-	5	=	E	M	U	]	b	g	l	q	v	{	
	D$0H
	ID: 
	JR>8o
	Message: 
	Severity: 
	Source: 
	Type: 
	kE>fvw
	w<E1
	w^D;l$D}
	wsD9l$D~
        
                          
                                               texturePrevColor, textureColor);
                                           texturePrevColor, textureColor);
                                       texturePrevColor, textureColor);
                                 int opn,
                                 op2Alpha, textureEnvColor, rgbScale, alphaScale, vertexColor,
                                 src2Rgb, src2Alpha, op0Rgb, op0Alpha, op1Rgb, op1Alpha, op2Rgb,
                                 texturePrevColor, textureColor);
                                 vec4 textureColor)
                                 vec4 textureEnvColor,
                                 vec4 texturePrevColor,
                                 vec4 vertexColor,
                              int opnRgb,
                              textureColor.rgb * textureColor.a;
                              textureEnvColor.rgb * textureColor.rgb;
                              vec4 textureColor)
                              vec4 textureEnvColor,
                              vec4 texturePrevColor,
                              vec4 vertexColor,
                            insertMask);
                           insertMask);
                       lightSpecular;
                     float alphaScale,
                     float rgbScale,
                     int combineAlpha,
                     int combineRgb,
                     int envMode,
                     int op0Alpha,
                     int op0Rgb,
                     int op1Alpha,
                     int op1Rgb,
                     int op2Alpha,
                     int op2Rgb,
                     int src0Alpha,
                     int src0Rgb,
                     int src1Alpha,
                     int src1Rgb,
                     int src2Alpha,
                     int src2Rgb,
                     int texFormat,
                     vec4 textureColor)
                     vec4 textureEnvColor,
                     vec4 texturePrevColor,
                     vec4 vertexColor,
                    break;
                    float alphaScale,
                    float rgbScale,
                    int combineAlpha,
                    int op0Alpha,
                    int op0Rgb,
                    int op1Alpha,
                    int op1Rgb,
                    int op2Alpha,
                    int op2Rgb,
                    int src0Alpha,
                    int src0Rgb,
                    int src1Alpha,
                    int src1Rgb,
                    int src2Alpha,
                    int src2Rgb,
                    res.a   = textureColor.a * texturePrevColor.a;
                    res.a   = textureColor.a;
                    res.a   = texturePrevColor.a * textureColor.a;
                    res.a   = texturePrevColor.a;
                    res.a = textureColor.a * texturePrevColor.a;
                    res.a = texturePrevColor.a;
                    res.rgb = textureColor.rgb;
                    res.rgb = texturePrevColor.rgb * (1.0 - textureColor.a) +
                    res.rgb = texturePrevColor.rgb * (1.0 - textureColor.rgb) +
                    res.rgb = texturePrevColor.rgb * textureColor.rgb;
                    res.rgb = texturePrevColor.rgb + textureColor.rgb;
                    res.rgb = texturePrevColor.rgb;
                    res.rgba = textureColor.rgba;
                    res.rgba = texturePrevColor.rgba * textureColor.rgba;
                    vec4 textureColor)
                    vec4 textureEnvColor,
                    vec4 texturePrevColor,
                    vec4 vertexColor,
                (attConst + attLinear * lightDist + attQuadratic * lightDist * lightDist);
                // TODO: Weird stuff happens
                // The negative unary operator is buggy on OSX.
                // Work around this by using abs instead.
                // res = texture(tex_cube_sampler3, texcoord3_varying.xyz);
                case kAlpha:
                case kLuminance:
                case kLuminanceAlpha:
                case kRGB:
                case kRGBA:
                const float scale = 1.0 / (1 << 24);
                contrib += specAtt * material_specular * lightSpecular;
                default:
                f32 = scale * mantissa;
                res = texture(tex_cube_sampler0, texcoord0_varying.xyz);
                res = texture(tex_cube_sampler1, texcoord1_varying.xyz);
                res = texture(tex_cube_sampler2, texcoord2_varying.xyz);
                res = texture(tex_sampler0, gl_PointCoord.xy);
                res = texture(tex_sampler0, texcoord0_varying.xy);
                res = texture(tex_sampler1, gl_PointCoord.xy);
                res = texture(tex_sampler1, texcoord1_varying.xy);
                res = texture(tex_sampler2, gl_PointCoord.xy);
                res = texture(tex_sampler2, texcoord2_varying.xy);
                res = texture(tex_sampler3, gl_PointCoord.xy);
                res = texture(tex_sampler3, texcoord3_varying.xy);
                scale = 1 << exponent;
                scale = 1.0 / (1 << abs(exponent));
                spot = 0.0;
                spot = pow(spotDot, spotExponent);
            // Infinity or NaN
            // NaN bits that are masked out by 0x3FF get discarded.
            // Overflow - flush to Infinity
            // Representable value
            // This can turn some NaNs to infinity, but this is allowed by the spec.
            att = 1.0 / attDenom;
            att = 1.0;
            break;
            continue;
            contrib += specAtt * pow(ndoth, material_specular_exponent) * material_specular *
            discard;
            else
            else if (enable_texture_cube_map[0])
            else if (enable_texture_cube_map[1])
            else if (enable_texture_cube_map[2])
            else if (enable_texture_cube_map[3])
            exponent += 15;
            exponent -= 15;
            f = (fog_end - eyeDist) / (fog_end - fog_start);
            f = exp(-(pow(fog_density * eyeDist, 2.0)));
            f = exp(-fog_density * eyeDist);
            f16 = sign | (0x1Fu << 10);
            f16 = sign | uint(exponent << 10) | mantissa;
            f16 = sign;
            f16 |= (mantissa & 0x3FFu);
            f32 = -f32;
            f32 = scale * decimal;
            float attDenom =
            float decimal = 1.0 + float(mantissa) / float(1 << 10);
            float dist = dot(clip_planes[i].xyz, pos_varying.xyz) + clip_planes[i].w * pos_varying.w;
            float scale;
            gl_PointSize = calcPointSize(ndcPos);
            gl_PointSize = pointsize;
            i, texture_format[i], texture_env_mode[i], combine_rgb[i], combine_alpha[i],
            if (enable_texture_2d[0])
            if (enable_texture_2d[1])
            if (enable_texture_2d[2])
            if (enable_texture_2d[3])
            if (mantissa != 0u)
            if (ndoth > 0.0)
            if (spotDot < spotAngleCos)
            if(exponent < 0)
            lsb += 1;
            lsb = 0;
            mantissa >>= 13;
            msb += 1;
            op = textureColor;
            op = textureEnvColor;
            op = texturePrevColor;
            op = vertexColor;
            op0_rgb[i], op0_alpha[i], op1_rgb[i], op1_alpha[i], op2_rgb[i], op2_alpha[i],
            point_sprite_coord_replace[i]) {
            res        = res && (dist >= 0.0);
            res = 1.0 - op.a;
            res = 1.0 - op.rgb;
            res = op.a;
            res = op.rgb;
            res = textureCombine(combineRgb, combineAlpha, src0Rgb, src0Alpha, src1Rgb, src1Alpha,
            res = vec3(1.0 - op.a, 1.0 - op.a, 1.0 - op.a);
            res = vec3(op.a, op.a, op.a);
            res.a *= alphaScale;
            res.rgb *= rgbScale;
            resAlpha = arg0Alpha * arg1Alpha;
            resAlpha = arg0Alpha * arg2Alpha + arg1Alpha * (1.0 - arg2Alpha);
            resAlpha = arg0Alpha + arg1Alpha - 0.5;
            resAlpha = arg0Alpha + arg1Alpha;
            resAlpha = arg0Alpha - arg1Alpha;
            resAlpha = arg0Alpha;
            resRgb = arg0Rgb * arg1Rgb;
            resRgb = arg0Rgb * arg2Rgb + arg1Rgb * (1.0 - arg2Rgb);
            resRgb = arg0Rgb + arg1Rgb - 0.5;
            resRgb = arg0Rgb + arg1Rgb;
            resRgb = arg0Rgb - arg1Rgb;
            resRgb = arg0Rgb;
            rescale = 1.0 / len;
            return 
            return float4(0.0, 0.0, 0.0, 1.0);
            return uintBitsToFloat(sign | 0x7F800000u | mantissa);
            return vec4(dotVal, dotVal, dotVal, dotVal);
            return vec4(dotVal, dotVal, dotVal, resAlpha);
            shouldPassAlpha = false;
            shouldPassAlpha = incAlpha != alpha_test_ref;
            shouldPassAlpha = incAlpha < alpha_test_ref;
            shouldPassAlpha = incAlpha <= alpha_test_ref;
            shouldPassAlpha = incAlpha == alpha_test_ref;
            shouldPassAlpha = incAlpha > alpha_test_ref;
            shouldPassAlpha = incAlpha >= alpha_test_ref;
            shouldPassAlpha = true;
            specAtt = 0.0;
            specAtt = 1.0;
            spot = 1.0;
            src0_rgb[i], src0_alpha[i], src1_rgb[i], src1_alpha[i], src2_rgb[i], src2_alpha[i],
            switch (texFormat)
            textureColor = getPointSpriteTextureColor(i);
            textureColor = getTextureColor(i);
            texture_env_color[i], texture_env_rgb_scale[i], texture_env_alpha_scale[i],
            toLight = (lightPos.xyz / lightPos.w - pos_varying.xyz);
            toLight = lightPos.xyz;
            vertex_color, texturePrevColor, textureColor);
            {
            }
           drawTextureVertices[vertexId] *
           vec4(drawTexW, drawTexH, 1.0, 1.0);
           vec4(texCropW, texCropH, 0.0, 0.0);
         "precision mediump int; precision highp float;"
         color.xyz = color.xyz / color.a;
         output.gl_Layer = ViewID_OVR;
         output.gl_ViewportIndex = 0;
         output.gl_ViewportIndex = ViewID_OVR;
        // Avoid calculating point size stuff
        // if we are not rendering points.
        arg1Alpha = textureCombineSrcnOpnAlpha(src1Alpha, op1Alpha, textureEnvColor, vertexColor,
        arg1Rgb = textureCombineSrcnOpnRgb(src1Rgb, op1Rgb, textureEnvColor, vertexColor,
        arg2Alpha = textureCombineSrcnOpnAlpha(src2Alpha, op2Alpha, textureEnvColor, vertexColor,
        arg2Rgb = textureCombineSrcnOpnRgb(src2Rgb, op2Rgb, textureEnvColor, vertexColor,
        case 
        case 0:
        case 1:
        case 2:
        case 3:
        case kAdd:
        case kAddSigned:
        case kAlways:
        case kBlend:
        case kCombine:
        case kConstant:
        case kDecal:
        case kEqual:
        case kExp2:
        case kExp:
        case kGequal:
        case kGreater:
        case kInterpolate:
        case kLequal:
        case kLess:
        case kLinear:
        case kModulate:
        case kNever:
        case kNotequal:
        case kOneMinusSrcAlpha:
        case kOneMinusSrcColor:
        case kPrevious:
        case kPrimaryColor:
        case kReplace:
        case kSrcAlpha:
        case kSrcColor:
        case kSubtract:
        case kTexture:
        color.xyz = color.xyz * color.a;
        contrib *= att * spot;
        contrib += ndotL * materialDiffuseActual * lightDiffuse;
        currentFragment = doFog(currentFragment);
        currentFragment = doLighting(currentFragment);
        currentFragment = textureFunction(
        default:
        discard;
        dotVal = 4.0 * dot(arg0Rgb - 0.5, arg1Rgb - 0.5);
        else
        else if (exponent == 31)
        else if (exponent > -15)
        else if (exponent > 15)
        float att;
        float attConst     = light_attenuation_consts[i];
        float attLinear    = light_attenuation_linears[i];
        float attQuadratic = light_attenuation_quadratics[i];
        float f32 = 0.0;
        float len       = length(rescaleVec);
        float lightDist = length(toLight);
        float ndotL     = posDot(normal_varying, normalize(toLight));
        float ndoth     = posDot(normal_varying, normalize(h));
        float rescale   = 1.0;
        float specAtt;
        float spot;
        float spotAngle    = light_spotlight_cutoff_angles[i];
        float spotAngleCos = cos(radians(spotAngle));
        float spotDot      = posDot(toSurfaceDir, normalize(lightDir));
        float spotExponent = light_spotlight_exponents[i];
        gl_PointSize = pointsize;
        gl_Position = ndcPos;
        gl_Position = posDrawTexture;
        if (
        if (!doClipPlaneTest())
        if (!light_enables[i])
        if (clip_plane_enables[i])
        if (combineRgb == kDot3Rgb)
        if (exponent == 128)
        if (len > 0.0)
        if (lightPos.w != 0.0)
        if (lightPos.w == 0.0)
        if (lsb == 0xffffffff)
        if (ndotL != 0.0)
        if (ndoth > 0.0 && material_specular_exponent > 0.0)
        if (point_rasterization && point_sprite_enabled &&
        if (point_rasterization)
        if (sign != 0u)
        if (spotAngle == 180.0 || lightPos.w == 0.0)
        if(exponent == 0)
        int baseLevel;
        int exponent = int((f32 >> 23) & 0xFFu) - 127;
        int exponent = int((val & 0x7C00u) >> 10);
        int internalFormatBits;
        int padding;
        int vertexId        = gl_VertexID;
        int wrapModes;
        int x = int(round(clamp(v.x, -1.0, 1.0) * 32767.0));
        int xi = (int(x) & 0x7FFF) - (int(x) & 0x8000);
        int y = int(round(clamp(v.y, -1.0, 1.0) * 32767.0));
        isnan[i] = (x[i] > 0.0 || x[i] < 0.0) ? false : x[i] != 0.0;
        lightingResult += contrib;
        lsb = ~lsb;
        materialAmbientActual = currentFragment;
        materialDiffuseActual = currentFragment;
        msb = ~msb;
        normal_varying = calcNormal(normal);
        normal_varying = normal;
        output.gl_Layer = input.gl_ViewID_OVR;
        output.gl_ViewportIndex = 0;
        output.gl_ViewportIndex = input.gl_ViewID_OVR;
        pos_varying = posDrawTexture;
        pos_varying = worldPos;
        result *= rescale;
        result = normalize(result);
        resultUnsigned |= ((resultUnsigned & maskMsb) >> (bits - 1)) * higherBitsMask;
        resultUnsigned |= higherBitsMask;
        return (y << 16) | x;
        return -N;
        return 0;
        return 0u;
        return N;
        return base;
        return clamp(float(xi) / 32767.0, -1.0, 1.0);
        return f16;
        return f32;
        return int2(0, 0);
        return int3(0, 0, 0);
        return int4(0, 0, 0, 0);
        return packHalf2x16(v);
        return packSnorm2x16(v);
        return texturePrevColor;
        return uint((y << 16) | (x & 0xFFFF));
        return uint2(0u, 0u);
        return uint3(0u, 0u, 0u);
        return uint4(0u, 0u, 0u, 0u);
        return unpackHalf2x16(u);
        return unpackSnorm2x16(u);
        return vec2(f16tof32(x), f16tof32(y));
        return vec2(fromSnorm(x), fromSnorm(y));
        return vec4(resRgb, resAlpha);
        texcoord0_varying = drawTextureTexCoord(vertexId, 0);
        texcoord0_varying = texture_matrix[0] * texcoord0;
        texcoord1_varying = drawTextureTexCoord(vertexId, 1);
        texcoord1_varying = texture_matrix[1] * texcoord1;
        texcoord2_varying = drawTextureTexCoord(vertexId, 2);
        texcoord2_varying = texture_matrix[2] * texcoord2;
        texcoord3_varying = drawTextureTexCoord(vertexId, 3);
        texcoord3_varying = texture_matrix[3] * texcoord3;
        texturePrevColor = currentFragment;
        uint f16 = 0u;
        uint f32 = floatBitsToUint(val);
        uint higherBitsMask = ((1u << (32 - bits)) - 1u) << bits;
        uint mantissa = f32 & 0x007FFFFFu;
        uint mantissa = val & 0x03FFu;
        uint sign = (f32 >> 16) & 0x8000u;
        uint sign = (val & 0x8000u) << 16;
        uint x = f32tof16(v.x);
        uint x = u & 0xFFFFu;
        uint x = u;
        uint y = (u >> 16);
        uint y = f32tof16(v.y);
        vec2 unpackHalf2x16(highp uint);
        vec3 h          = normalize(toLight) + vec3(0.0, 0.0, 1.0);
        vec3 lightDir      = light_directions[i];
        vec3 rescaleVec = vec3(mvInvTr3[2]);
        vec3 toLight;
        vec3 toSurfaceDir  = -normalize(toLight);
        vec4  gl_ClipVertex;varying vec4  gl_FrontColor;varying vec4  gl_BackColor;varying vec4  gl_FrontSecondaryColor;varying vec4  gl_BackSecondaryColor;varying vec4  gl_TexCoord[];varying float gl_FogFragCoord;
        vec4 contrib = materialAmbientActual * lightAmbient;
        vec4 lightAmbient  = light_ambients[i];
        vec4 lightDiffuse  = light_diffuses[i];
        vec4 lightPos      = light_positions[i];
        vec4 lightSpecular = light_speculars[i];
        vec4 ndcPos   = calcNdcFromWorldPosition(worldPos);
        vec4 posDrawTexture = drawTexturePosition(vertexId);
        vec4 textureColor;
        vec4 worldPos = calcWorldPosition(pos);
        vertex_color = color_varying;
        vertex_color = color_varying_flat;
        {
        }
        } else {
     - m[0][0] * m[2][1] * m[1][2] - m[1][0] * m[0][1] * m[2][2] - m[2][0] * m[1][1] * 
     - m[0][0] * m[2][1] * m[1][3] - m[1][0] * m[0][1] * m[2][3] - m[2][0] * m[1][1] * 
     - m[0][0] * m[2][2] * m[1][3] - m[1][0] * m[0][2] * m[2][3] - m[2][0] * m[1][2] * 
     - m[0][0] * m[3][1] * m[1][2] - m[1][0] * m[0][1] * m[3][2] - m[3][0] * m[1][1] * 
     - m[0][0] * m[3][1] * m[1][3] - m[1][0] * m[0][1] * m[3][3] - m[3][0] * m[1][1] * 
     - m[0][0] * m[3][1] * m[2][2] - m[2][0] * m[0][1] * m[3][2] - m[3][0] * m[2][1] * 
     - m[0][0] * m[3][1] * m[2][3] - m[2][0] * m[0][1] * m[3][3] - m[3][0] * m[2][1] * 
     - m[0][0] * m[3][2] * m[1][3] - m[1][0] * m[0][2] * m[3][3] - m[3][0] * m[1][2] * 
     - m[0][0] * m[3][2] * m[2][3] - m[2][0] * m[0][2] * m[3][3] - m[3][0] * m[2][2] * 
     - m[0][1] * m[2][2] * m[1][3] - m[1][1] * m[0][2] * m[2][3] - m[2][1] * m[1][2] * 
     - m[0][1] * m[3][2] * m[1][3] - m[1][1] * m[0][2] * m[3][3] - m[3][1] * m[1][2] * 
     - m[0][1] * m[3][2] * m[2][3] - m[2][1] * m[0][2] * m[3][3] - m[3][1] * m[2][2] * 
     - m[1][0] * m[3][1] * m[2][2] - m[2][0] * m[1][1] * m[3][2] - m[3][0] * m[2][1] * 
     - m[1][0] * m[3][1] * m[2][3] - m[2][0] * m[1][1] * m[3][3] - m[3][0] * m[2][1] * 
     - m[1][0] * m[3][2] * m[2][3] - m[2][0] * m[1][2] * m[3][3] - m[3][0] * m[2][2] * 
     - m[1][1] * m[3][2] * m[2][3] - m[2][1] * m[1][2] * m[3][3] - m[3][1] * m[2][2] * 
     cof02, cof12, cof22, cof32, cof03, cof13, cof23, cof33 };
    #else
    #endif
    #if defined(GL_ARB_shading_language_packing)
    GS_OUTPUT output = (GS_OUTPUT)0;
    PS_OUTPUT output;
    SamplerMetadata samplerMetadata[
    VS_OUTPUT output;
    ViewID_OVR = input.gl_ViewID_OVR;
    arg0Alpha = textureCombineSrcnOpnAlpha(src0Alpha, op0Alpha, textureEnvColor, vertexColor,
    arg0Rgb   = textureCombineSrcnOpnRgb(src0Rgb, op0Rgb, textureEnvColor, vertexColor,
    bool
    bool isNonZero = (exponent >= -25.0);
    bool negative = (x < 0) != (y < 0);
    bool negative = (xMajor && t.x < 0.0f) || (yMajor && t.y < 0.0f) || (zMajor && t.z < 0.0f);
    bool res = true;
    bool shouldPassAlpha = false;
    bool xMajor = abs(t.x) > abs(t.y) && abs(t.x) > abs(t.z);
    bool yMajor = abs(t.y) > abs(t.z) && abs(t.y) > abs(t.x);
    bool zMajor = abs(t.z) > abs(t.x) && abs(t.z) > abs(t.y);
    bool2 isnan;
    bool3 isnan;
    bool4 isnan;
    borrow = uint(x < y);
    borrow = uint2(x < y);
    borrow = uint3(x < y);
    borrow = uint4(x < y);
    buffer.Store(loc, asuint(value));
    bvec
    bvec2 isnan;
    bvec3 isnan;
    bvec4 isnan;
    carry = uint(x > (0xffffffffu - y));
    carry = uint2(x > (0xffffffffu - y));
    carry = uint3(x > (0xffffffffu - y));
    carry = uint4(x > (0xffffffffu - y));
    centroid 
    color = color * 
    color_varying      = color;
    color_varying_flat = color;
    const uint index = imageIndex - imageIndexOffset
    const uint index = imageIndex - readonlyImageIndexOffset
    const uint samplerArrayIndex = samplerIndex - samplerIndexOffset
    const uint textureIndex = samplerIndex - textureIndexOffset
    copyVertex(output, input[
    currentFragment = vertex_color;
    depth = max(depth >> lod, 1);
    else
    else if (x < 0.0 && y < 0.0) return atan(y / x) - 3.14159265;
    else if (x < 0.0 && y >= 0.0) return atan(y / x) + 3.14159265;
    else return 1.57079632 * sign(y);
    exp = int(fexp);
    exp = int2(fexp);
    exp = int3(fexp);
    exp = int4(fexp);
    float arg0Alpha;
    float arg1Alpha;
    float arg2Alpha;
    float attConst     = point_distance_attenuation[0];
    float attLinear    = point_distance_attenuation[1];
    float attPart      = attConst + attLinear * dist + attQuad * dist * dist;
    float attPointSize = pointsize / pow(attPart, 0.5);
    float attQuad      = point_distance_attenuation[2];
    float cof00 = m[1][1] * m[2][2] * m[3][3] + m[2][1] * m[3][2] * m[1][3] + m[3][1] * 
    float cof00 = m[1][1] * m[2][2] - m[2][1] * m[1][2];
    float cof01 = -(m[1][0] * m[2][2] * m[3][3] + m[2][0] * m[3][2] * m[1][3] + m[3][0] * 
    float cof01 = -(m[1][0] * m[2][2] - m[2][0] * m[1][2]);
    float cof02 = m[1][0] * m[2][1] * m[3][3] + m[2][0] * m[3][1] * m[1][3] + m[3][0] * 
    float cof02 = m[1][0] * m[2][1] - m[2][0] * m[1][1];
    float cof03 = -(m[1][0] * m[2][1] * m[3][2] + m[2][0] * m[3][1] * m[1][2] + m[3][0] * 
    float cof10 = -(m[0][1] * m[2][2] * m[3][3] + m[2][1] * m[3][2] * m[0][3] + m[3][1] * 
    float cof10 = -(m[0][1] * m[2][2] - m[2][1] * m[0][2]);
    float cof11 = m[0][0] * m[2][2] * m[3][3] + m[2][0] * m[3][2] * m[0][3] + m[3][0] * 
    float cof11 = m[0][0] * m[2][2] - m[2][0] * m[0][2];
    float cof12 = -(m[0][0] * m[2][1] * m[3][3] + m[2][0] * m[3][1] * m[0][3] + m[3][0] * 
    float cof12 = -(m[0][0] * m[2][1] - m[2][0] * m[0][1]);
    float cof13 = m[0][0] * m[2][1] * m[3][2] + m[2][0] * m[3][1] * m[0][2] + m[3][0] * 
    float cof20 = m[0][1] * m[1][2] * m[3][3] + m[1][1] * m[3][2] * m[0][3] + m[3][1] * 
    float cof20 = m[0][1] * m[1][2] - m[1][1] * m[0][2];
    float cof21 = -(m[0][0] * m[1][2] * m[3][3] + m[1][0] * m[3][2] * m[0][3] + m[3][0] * 
    float cof21 = -(m[0][0] * m[1][2] - m[1][0] * m[0][2]);
    float cof22 = m[0][0] * m[1][1] * m[3][3] + m[1][0] * m[3][1] * m[0][3] + m[3][0] * 
    float cof22 = m[0][0] * m[1][1] - m[1][0] * m[0][1];
    float cof23 = -(m[0][0] * m[1][1] * m[3][2] + m[1][0] * m[3][1] * m[0][2] + m[3][0] * 
    float cof30 = -(m[0][1] * m[1][2] * m[2][3] + m[1][1] * m[2][2] * m[0][3] + m[2][1] * 
    float cof31 = m[0][0] * m[1][2] * m[2][3] + m[1][0] * m[2][2] * m[0][3] + m[2][0] * 
    float cof32 = -(m[0][0] * m[1][1] * m[2][3] + m[1][0] * m[2][1] * m[0][3] + m[2][0] * 
    float cof33 = m[0][0] * m[1][1] * m[2][2] + m[1][0] * m[2][1] * m[0][2] + m[2][0] * 
    float coordWrapped = 1.0 - abs(frac(abs(
    float dfacexdx = 0.5f * (m * dudx - u * dmdx) / (m * m);
    float dfacexdy = 0.5f * (m * dudy - u * dmdy) / (m * m);
    float dfaceydx = 0.5f * (m * dvdx - v * dmdx) / (m * m);
    float dfaceydy = 0.5f * (m * dvdy - v * dmdy) / (m * m);
    float diff;
    float dist         = length(ndcPos.z);
    float dmdx = xMajor ? ddx[0] : (yMajor ? ddx[1] : ddx[2]);
    float dmdy = xMajor ? ddy[0] : (yMajor ? ddy[1] : ddy[2]);
    float dotVal;
    float drawTexH = draw_texture_dims[1];
    float drawTexW = draw_texture_dims[0];
    float drawTexX = draw_texture_coords[0];
    float drawTexY = draw_texture_coords[1];
    float drawTexZ = draw_texture_coords[2];
    float dudx = xMajor ? ddx[2] : (yMajor && t.y < 0.0f ? -ddx[0] : ddx[0]);
    float dudy = xMajor ? ddy[2] : (yMajor && t.y < 0.0f ? -ddy[0] : ddy[0]);
    float dvdx = yMajor ? ddx[2] : (negative ? ddx[1] : -ddx[1]);
    float dvdy = yMajor ? ddy[2] : (negative ? ddy[1] : -ddy[1]);
    float dx = length(ddx(tSized));
    float dy = length(ddy(tSized));
    float eyeDist = -pos_varying.z / pos_varying.w;
    float f       = 1.0;
    float f16tof32(uint val)
    float far;
    float fexp;
    float fromSnorm(uint x)
    float gl_Depth : 
    float gl_PointSize : 
    float gl_PointSize = clamp(input[0].gl_PointSize, minPointSize, maxPointSize);
    float incAlpha       = currentFragment.a;
    float lengthfaceddx2 = dot(faceddx, faceddx);
    float lengthfaceddy2 = dot(faceddy, faceddy);
    float lod = 0.5f * log2(max(dot(dx, dx), dot(dy, dy)));
    float lod = log2(max(dot(sizeDdx, sizeDdx), dot(sizeDdy, sizeDdy))) * 0.5f;
    float lod = log2(max(dx, dy));
    float lod = log2(max(lengthfaceddx2, lengthfaceddy2)) * 0.5f;
    float m = xMajor ? t.x : (yMajor ? t.y : t.z);
    float mantissa = frexp(abs(x), fexp) * sign(x);
    float multiviewSelectViewportIndex : packoffset(c3.z);
    float near;
    float pad_
    float res;
    float resAlpha;
    float rhw = 1.0 / input.gl_FragCoord.w;
    float texCropH = draw_texture_normalized_crop_rect[textureUnit].w;
    float texCropU = draw_texture_normalized_crop_rect[textureUnit].x;
    float texCropV = draw_texture_normalized_crop_rect[textureUnit].y;
    float texCropW = draw_texture_normalized_crop_rect[textureUnit].z;
    float u = xMajor ? -t.z : (yMajor && t.y < 0.0f ? -t.x : t.x);
    float v = yMajor ? t.z : (negative ? t.y : -t.y);
    float width; float height; float depth; float levels;
    float width; float height; float layers; float levels;
    float width; float height; float levels;
    float x = float(u & 0xFFFFu) / 65535.0;
    float y = float(u >> 16) / 65535.0;
    float2 dx = ddx(tSized);
    float2 dx_ViewCoords : packoffset(c2);
    float2 dx_ViewScale  : packoffset(c3);
    float2 dx_ViewScale : packoffset(c3);
    float2 dy = ddy(tSized);
    float2 faceddx = float2(dfacexdx, dfaceydx) * sizeVec;
    float2 faceddy = float2(dfacexdy, dfaceydy) * sizeVec;
    float2 fexp;
    float2 gl_PointCoord : 
    float2 mantissa = frexp(abs(x), fexp) * sign(x);
    float2 sizeDdx = ddx * sizeVec;
    float2 sizeDdy = ddy * sizeVec;
    float2 sizeVec = float2(width, height);
    float2 spriteTexCoord : SPRITETEXCOORD0;
    float2 tSized = float2(t.x * width, t.y * height);
    float2 v;
    float2 viewportScale = float2(1.0f / dx_ViewCoords.x, 1.0f / dx_ViewCoords.y) * dx_Position.w;
    float2( 0.5f,  0.5f),
    float2( 0.5f, -0.5f),
    float2(-0.5f,  0.5f)
    float2(-0.5f, -0.5f),
    float2(0.0f, 0.0f)
    float2(0.0f, 1.0f),
    float2(1.0f, 0.0f),
    float2(1.0f, 1.0f),
    float2x2 cof = { m[1][1], -m[0][1], -m[1][0], m[0][0] };
    float3 dx_DepthFront : packoffset(c2);
    float3 dx_DepthRange : packoffset(c0);
    float3 fexp;
    float3 mantissa = frexp(abs(x), fexp) * sign(x);
    float3 sizeDdx = ddx * sizeVec;
    float3 sizeDdy = ddy * sizeVec;
    float3 sizeVec = float3(width, height, depth);
    float3 spriteVertexPos : SPRITEPOSITION0;
    float3 tSized = float3(t.x * width, t.y * height, t.z * depth);
    float3 v;
    float3x3 cof = { cof00, cof10, cof20, cof01, cof11, cof21, cof02, cof12, cof22 };
    float4 dx_Position : 
    float4 dx_Position = input[0].dx_Position;
    float4 dx_ViewAdjust : packoffset(c1);
    float4 dx_ViewCoords : packoffset(c1);
    float4 fexp;
    float4 gl_FragCoord : 
    float4 gl_Position : 
    float4 mantissa = frexp(abs(x), fexp) * sign(x);
    float4 v;
    float4(0, 0, 0, 0)
    float4x4 cof = { cof00, cof10, cof20, cof30, cof01, cof11, cof21, cof31,
    for (int i = 0; i < 
    for (int i = 0; i < 2; i++)
    for (int i = 0; i < 3; i++)
    for (int i = 0; i < 4; i++)
    for (int i = 0; i < kMaxClipPlanes; i++)
    for (int i = 0; i < kMaxLights; i++)
    for (int i = 0; i < kMaxTexUnits; i++)
    frag_color = currentFragment;
    gl_FragCoord.w = rhw;
    gl_FragCoord.x = (input.gl_FragCoord.x * rhw) * dx_ViewCoords.x + dx_ViewCoords.z;
    gl_FragCoord.x = input.dx_Position.x + 0.5;
    gl_FragCoord.x = input.dx_Position.x;
    gl_FragCoord.y = (1.0f + dx_ViewScale.y) * gl_FragCoord.y /(1.0f - input.gl_FragCoord.y * rhw)  - dx_ViewScale.y * gl_FragCoord.y;
    gl_FragCoord.y = (input.gl_FragCoord.y * rhw) * dx_ViewCoords.y + dx_ViewCoords.w;
    gl_FragCoord.y = input.dx_Position.y + 0.5;
    gl_FragCoord.y = input.dx_Position.y;
    gl_FragCoord.z = (input.gl_FragCoord.z * rhw) * dx_DepthFront.x + dx_DepthFront.y;
    gl_FrontFacing = (vFace * dx_DepthFront.z >= 0.0);
    gl_FrontFacing = isFrontFace;
    gl_GlobalInvocationID = input.dx_GlobalInvocationID;
    gl_LocalInvocationID = input.dx_LocalInvocationID;
    gl_LocalInvocationIndex = input.dx_LocalInvocationIndex;
    gl_PointCoord.x = input.gl_PointCoord.x;
    gl_PointCoord.y = 1.0 - input.gl_PointCoord.y;
    gl_PointSize = clamp(gl_PointSize, minPointSize, maxPointSize);
    gl_Position = vec4((a_texcoord * 2.0) - 1.0, 0.0, 1.0);
    gl_WorkGroupID = input.dx_WorkGroupID;
    height = max(height >> lod, 1);
    if (!isTextureUnitEnabled(unit))
    if (bits != 32 && (resultUnsigned & maskMsb) != 0)
    if (bits != 32)
    if (clamp(v_texcoord, vec2(0.0), vec2(1.0)) != v_texcoord)
    if (combineAlpha != kReplace)
    if (combineAlpha == kInterpolate)
    if (combineRgb != kReplace)
    if (combineRgb == kDot3Rgb || combineRgb == kDot3Rgba)
    if (combineRgb == kInterpolate)
    if (enable_alpha_test && !doAlphaTest(currentFragment))
    if (enable_clip_planes && !enable_draw_texture)
    if (enable_color_material || enable_texture_2d[0] || enable_texture_cube_map[0])
    if (enable_draw_texture)
    if (enable_fog)
    if (enable_lighting)
    if (enable_normalize)
    if (enable_rescale_normal)
    if (multiviewSelectViewportIndex)
    if (negative)
    if (offset < 0 || bits <= 0 || offset >= 32 || bits > 32 || offset + bits > 32)
    if (shade_model_flat)
    if (u_multiply_alpha)
    if (u_unmultiply_alpha && color.a != 0.0)
    if (x > 0.0) return atan(y / x);
    if(dot(Nref, I) >= 0)
    if(x == 0 && y == 0) x = 1;
    if(x[0] == 0 && y[0] == 0) x[0] = 1;
    if(x[1] == 0 && y[1] == 0) x[1] = 1;
    if(x[2] == 0 && y[2] == 0) x[2] = 1;
    if(x[3] == 0 && y[3] == 0) x[3] = 1;
    imulExtended_emu(x.w, y.w, msb.w, lsb.w);
    imulExtended_emu(x.x, y.x, msb.x, lsb.x);
    imulExtended_emu(x.y, y.y, msb.y, lsb.y);
    imulExtended_emu(x.z, y.z, msb.z, lsb.z);
    initAttributes(input);
    insertMask);
    int baseLevel = 0;
    int baseLevel = samplerMetadata[samplerIndex].baseLevel;
    int face = (int)negative + (int)yMajor * 2 + (int)zMajor * 4;
    int w = webgl_toSnorm8(v.w);
    int x = int(round(clamp(v.x, 0.0, 1.0) * 65535.0));
    int x = webgl_toSnorm16(v.x);
    int x = webgl_toSnorm8(v.x);
    int xi = asint(x & 0x7fffu) - asint(x & 0x8000u);
    int xi = asint(x & 0x7fu) - asint(x & 0x80u);
    int y = int(round(clamp(v.y, 0.0, 1.0) * 65535.0));
    int y = webgl_toSnorm16(v.y);
    int y = webgl_toSnorm8(v.y);
    int z = webgl_toSnorm8(v.z);
    lod += bias;
    lsb = asint(unsignedLsb);
    lsb = x * y;
    m[0][1] * m[1][2]
    m[0][1] * m[1][3]
    m[0][1] * m[2][2]
    m[0][1] * m[2][3]
    m[0][2] * m[1][3]
    m[0][2] * m[2][3]
    m[0][2]);
    m[0][2];
    m[0][3]);
    m[0][3];
    m[1][1] * m[2][2]
    m[1][1] * m[2][3]
    m[1][2] * m[2][3]
    m[1][2]);
    m[1][3]);
    m[1][3];
    mat3 mvInvTr3 = mat3(modelview_invtr);
    mip = uint(min(max(round(lod), 0), levels - 1));
    msb = ((ad + bc) >> 16) + (carry << 16) + b * d;
    msb = asint(unsignedMsb);
    nointerpolation 
    nointerpolation uint gl_Layer : 
    nointerpolation uint gl_ViewID_OVR : 
    nointerpolation uint gl_ViewportIndex : 
    outStream.Append(output);
    outStream.RestartStrip();
    output.
    output.dx_Position = dx_Position + float4(1.0f, -dx_ViewScale.y, 1.0f, 1.0f)        * float4(pointSpriteCorners[
    output.dx_Position = dx_Position + float4(pointSpriteCorners[
    output.dx_Position = input.dx_Position;
    output.dx_Position.w = gl_Position.w;
    output.dx_Position.x += (input.spriteVertexPos.x * gl_PointSize / (dx_ViewCoords.x*2)) * output.dx_Position.w;
    output.dx_Position.x = gl_Position.x * dx_ViewAdjust.z + dx_ViewAdjust.x * gl_Position.w;
    output.dx_Position.x = gl_Position.x;
    output.dx_Position.y += (-dx_ViewScale.y * input.spriteVertexPos.y * gl_PointSize / (dx_ViewCoords.y*2)) * output.dx_Position.w;
    output.dx_Position.y += (input.spriteVertexPos.y * gl_PointSize / (dx_ViewCoords.y*2)) * output.dx_Position.w;
    output.dx_Position.y = - gl_Position.y;
    output.dx_Position.y = -(gl_Position.y * dx_ViewAdjust.w + dx_ViewAdjust.y * gl_Position.w);
    output.dx_Position.y = dx_ViewScale.y * (gl_Position.y * dx_ViewAdjust.w + dx_ViewAdjust.y * gl_Position.w);
    output.dx_Position.y = dx_ViewScale.y * gl_Position.y;
    output.dx_Position.z += input.spriteVertexPos.z * output.dx_Position.w;
    output.dx_Position.z = (gl_Position.z + gl_Position.w) * 0.5;
    output.gl_Depth = gl_Depth; 
    output.gl_FragCoord = gl_Position;
    output.gl_FragCoord = input.gl_FragCoord;
    output.gl_Layer = input.gl_Layer;
    output.gl_PointCoord = float2(0.5, 0.5);
    output.gl_PointCoord = input.spriteTexCoord;
    output.gl_PointCoord = pointSpriteTexcoords[
    output.gl_PointSize = gl_PointSize;
    output.gl_PointSize = input.gl_PointSize;
    output.gl_Position = gl_Position;
    output.gl_Position = input.gl_Position;
    output.gl_ViewID_OVR = ViewID_OVR;
    output.gl_ViewID_OVR = input.gl_ViewID_OVR;
    output.gl_ViewportIndex = input.gl_ViewportIndex;
    output.v
    return 
    return ((asuint(w) & 0xffu) << 24) | ((asuint(z) & 0xffu) << 16) 
    return (abs(x) > 15.0) ? sign(x) : tanh(x);
    return (asuint(y) << 16) | (asuint(x) & 0xffffu);
    return (base & baseMask) | ((insert << offset) & insertMask);
    return (frac(x) == 0.5 && trunc(x) % 2.0 == 0.0) ? trunc(x) : round(x);
    return (p || q) && !(p && q);
    return (value & mask) >> offset;
    return (w << 24) | (z << 16) | (y << 8) | x;
    return (x > 0.0 || x < 0.0) ? false : x != 0.0;
    return (y << 16) | x;
    return 0.5 * log((1.0 + x) / (1.0 - x));
    return 1.0;
    return a ? y : x;
    return asint(resultUnsigned);
    return atan2(y, x);
    return clamp(attPointSize, point_size_min, point_size_max);
    return clamp(float(xi) / 127.0, -1.0, 1.0);
    return clamp(float(xi) / 32767.0, -1.0, 1.0);
    return clamp(res, 0.0, 1.0);
    return cof / determinant(transpose(m));
    return enable_texture_2d[unit] || enable_texture_cube_map[unit];
    return float(x) / 255.0;
    return float(x) / 65535.0;
    return float2(atan2(y[0], x[0]), atan2(y[1], x[1]));
    return float2(f16tof32(x), f16tof32(y));
    return float2(webgl_fromSnorm16(x), webgl_fromSnorm16(y));
    return float2(webgl_fromUnorm16(x), webgl_fromUnorm16(y));
    return float3(atan2(y[0], x[0]), atan2(y[1], x[1]), atan2(y[2], x[2]));
    return float4(atan2(y[0], x[0]), atan2(y[1], x[1]), atan2(y[2], 
    return float4(webgl_fromSnorm8(x), webgl_fromSnorm8(y), 
    return float4(webgl_fromUnorm8(x), webgl_fromUnorm8(y), 
    return int(round(clamp(x, -1.0, 1.0) * 127.0));
    return int(round(clamp(x, -1.0, 1.0) * 32767.0));
    return int2(width, height);
    return int3(width, height, depth);
    return isnan;
    return ldexp(x, float(exp));
    return ldexp(x, float2(exp));
    return ldexp(x, float3(exp));
    return ldexp(x, float4(exp));
    return lightingResult;
    return log(x + sqrt(pow(x, 2.0) + 1.0));
    return log(x + sqrt(x + 1.0) * sqrt(x - 1.0));
    return mantissa;
    return max(dot(a, b), 0.0);
    return modelview * posInput;
    return mul(float2x1(r), float1x2(c));
    return mul(float2x1(r), float1x3(c));
    return mul(float2x1(r), float1x4(c));
    return mul(float3x1(r), float1x2(c));
    return mul(float3x1(r), float1x3(c));
    return mul(float3x1(r), float1x4(c));
    return mul(float4x1(r), float1x2(c));
    return mul(float4x1(r), float1x3(c));
    return mul(float4x1(r), float1x4(c));
    return output;
    return projection * worldPos;
    return res;
    return result;
    return rounded;
    return shouldPassAlpha;
    return structure;
    return true;
    return uint((y << 16) | (x & 0xFFFF));
    return uint(round(clamp(x, 0.0, 1.0) * 255.0));
    return uint(round(clamp(x, 0.0, 1.0) * 65535.0));
    return v * 0.00390625;
    return v * exp2(exponent) * (float
    return v * exp2(exponent) * vec
    return v;
    return vec
    return vec2(x, y);
    return vec4(drawTexX, drawTexY, drawTexZ, 0.0) +
    return vec4(texCropU, texCropV, 0.0, 0.0) +
    return x * 0.00390625;
    return x * exp2(exponent) * float(isNonZero);
    return x + y;
    return x - y * floor(x / y);
    return x - y;
    return x;
    rounded[
    struct SamplerMetadata
    switch (alpha_func)
    switch (combineAlpha)
    switch (combineRgb)
    switch (envMode)
    switch (fog_mode)
    switch (opn)
    switch (opnRgb)
    switch (srcn)
    switch (srcnRgb)
    switch (unit)
    switch(comp)
    t.x = (u * 0.5f / m) + 0.5f;
    t.y = (v * 0.5f / m) + 0.5f;
    uint a = (x & 0xffffu);
    uint ad = a * d + ((a * c) >> 16);
    uint b = (x >> 16);
    uint baseMask = ~insertMask;
    uint bc = b * c;
    uint c = (y & 0xffffu);
    uint carry = uint(ad > (0xffffffffu - bc));
    uint d = (y >> 16);
    uint dx_LocalInvocationIndex : 
    uint f32tof16(float val)
    uint insertMask = ((maskMsb - 1u) | maskMsb) << offset;
    uint lastVertexIndex = 
    uint lastVertexIndex = (primitiveID % 2 == 0 ? 2 : 1);
    uint mask = ((maskMsb - 1u) | maskMsb) << offset;
    uint maskMsb = (1u << (bits - 1));
    uint mip = 0;
    uint mip = bias;
    uint mip = uint(min(max(round(lod), 0), levels - 1));
    uint resultUnsigned = (asuint(base) & baseMask) | ((asuint(insert) << offset) & 
    uint resultUnsigned = (asuint(value) & mask) >> offset;
    uint unsignedLsb;
    uint unsignedMsb;
    uint w = (u >> 24) & 0xffu;
    uint w = (u >> 24);
    uint w = webgl_toUnorm8(v.w);
    uint width; uint height;
    uint width; uint height; uint depth;
    uint width; uint height; uint depth; uint numberOfLevels;
    uint width; uint height; uint depth; uint samples;
    uint width; uint height; uint numberOfLevels;
    uint width; uint height; uint samples;
    uint x = f32tof16(v.x);
    uint x = u & 0xffffu;
    uint x = u & 0xffu;
    uint x = u;
    uint x = webgl_toUnorm16(v.x);
    uint x = webgl_toUnorm8(v.x);
    uint y = (u >> 16);
    uint y = (u >> 8) & 0xffu;
    uint y = (u >> 8);
    uint y = f32tof16(v.y);
    uint y = webgl_toUnorm16(v.y);
    uint y = webgl_toUnorm8(v.y);
    uint z = (u >> 16) & 0xffu;
    uint z = (u >> 16);
    uint z = webgl_toUnorm8(v.z);
    uint2 resultUnsigned = (asuint(base) & baseMask) | ((asuint(insert) << offset) & 
    uint2 resultUnsigned = (asuint(value) & mask) >> offset;
    uint3 dx_GlobalInvocationID : 
    uint3 dx_LocalInvocationID : 
    uint3 dx_WorkGroupID : 
    uint3 gl_NumWorkGroups : packoffset(c0);
    uint3 resultUnsigned = (asuint(base) & baseMask) | ((asuint(insert) << offset) & 
    uint3 resultUnsigned = (asuint(value) & mask) >> offset;
    uint4 resultUnsigned = (asuint(base) & baseMask) | ((asuint(insert) << offset) & 
    uint4 resultUnsigned = (asuint(value) & mask) >> offset;
    umulExtended_emu(uint(abs(x)), uint(abs(y)), unsignedMsb, unsignedLsb);
    umulExtended_emu(x.w, y.w, msb.w, lsb.w);
    umulExtended_emu(x.x, y.x, msb.x, lsb.x);
    umulExtended_emu(x.y, y.y, msb.y, lsb.y);
    umulExtended_emu(x.z, y.z, msb.z, lsb.z);
    v = clamp(v, -2.0, 2.0);
    v = clamp(v, -65504.0, 65504.0);
    v = sign(v) * floor(abs(v));
    v = v * 256.0;
    v = v * exp2(-exponent);
    v[0] = (frac(x[0]) == 0.5 && trunc(x[0]) % 2.0 == 0.0) ? trunc(x[0]) : round(x[0]);
    v[1] = (frac(x[1]) == 0.5 && trunc(x[1]) % 2.0 == 0.0) ? trunc(x[1]) : round(x[1]);
    v[2] = (frac(x[2]) == 0.5 && trunc(x[2]) % 2.0 == 0.0) ? trunc(x[2]) : round(x[2]);
    v[3] = (frac(x[3]) == 0.5 && trunc(x[3]) % 2.0 == 0.0) ? trunc(x[3]) : round(x[3]);
    v_texcoord = a_texcoord * u_scale + u_offset;
    vec3 arg0Rgb;
    vec3 arg1Rgb;
    vec3 arg2Rgb;
    vec3 res;
    vec3 resRgb;
    vec3 result   = mvInvTr3 * normalInput;
    vec4  gl_ClipVertex;out vec4  gl_FrontColor;out vec4  gl_BackColor;out vec4  gl_FrontSecondaryColor;out vec4  gl_BackSecondaryColor;out vec4  gl_TexCoord[];out float gl_FogFragCoord;
    vec4 currentFragment;
    vec4 lightingResult = material_emissive + materialAmbientActual * light_model_scene_ambient;
    vec4 materialAmbientActual = material_ambient;
    vec4 materialDiffuseActual = material_diffuse;
    vec4 op;
    vec4 res;
    vec4 result = f * currentFragment + (1.0 - f) * fog_color;
    vec4 texturePrevColor = currentFragment;
    vec4 vertex_color;
    vec4(0.0, 0.0, 0.0, 1.0),
    vec4(0.0, 1.0, 0.0, 1.0));
    vec4(1.0, 0.0, 0.0, 1.0),
    vec4(1.0, 1.0, 0.0, 1.0),
    webgl_fromSnorm8(z), webgl_fromSnorm8(w));
    webgl_fromUnorm8(z), webgl_fromUnorm8(w));
    width = max(width >> lod, 1);
    x = angle_frl(angle_frl(x) 
    x = angle_frm(angle_frm(x) 
    x = clamp(x, -2.0, 2.0);
    x = clamp(x, -65504.0, 65504.0);
    x = sign(x) * floor(abs(x));
    x = x * 256.0;
    x = x * exp2(-exponent);
    x[2]), atan2(y[3], x[3]));
    xfb_buffer 
    {
    | ((asuint(y) & 0xffu) << 8) | (asuint(x) & 0xffu);
    }
    } else {
    };
   $%d = 
   selectView(output, input[
  int abs(  int x);ivec2 abs(ivec2 x);ivec3 abs(ivec3 x);ivec4 abs(ivec4 x);  int sign(  int x);ivec2 sign(ivec2 x);ivec3 sign(ivec3 x);ivec4 sign(ivec4 x);float trunc(float x);vec2  trunc(vec2  x);vec3  trunc(vec3  x);vec4  trunc(vec4  x);float round(float x);vec2  round(vec2  x);vec3  round(vec3  x);vec4  round(vec4  x);float roundEven(float x);vec2  roundEven(vec2  x);vec3  roundEven(vec3  x);vec4  roundEven(vec4  x);float modf(float, out float);vec2  modf(vec2,  out vec2 );vec3  modf(vec3,  out vec3 );vec4  modf(vec4,  out vec4 );  int min(int    x, int y);ivec2 min(ivec2  x, int y);ivec3 min(ivec3  x, int y);ivec4 min(ivec4  x, int y);ivec2 min(ivec2  x, ivec2  y);ivec3 min(ivec3  x, ivec3  y);ivec4 min(ivec4  x, ivec4  y); uint min(uint   x, uint y);uvec2 min(uvec2  x, uint y);uvec3 min(uvec3  x, uint y);uvec4 min(uvec4  x, uint y);uvec2 min(uvec2  x, uvec2  y);uvec3 min(uvec3  x, uvec3  y);uvec4 min(uvec4  x, uvec4  y);  int max(int    x, int y);ivec2 max(ivec2  x, int y);ivec3 max(ivec3  x, int y);ivec4 max(ivec4  x, int y);ivec2 max(ivec2  x, ivec2  y);ivec3 max(ivec3  x, ivec3  y);ivec4 max(ivec4  x, ivec4  y); uint max(uint   x, uint y);uvec2 max(uvec2  x, uint y);uvec3 max(uvec3  x, uint y);uvec4 max(uvec4  x, uint y);uvec2 max(uvec2  x, uvec2  y);uvec3 max(uvec3  x, uvec3  y);uvec4 max(uvec4  x, uvec4  y);int    clamp(int x, int minVal, int maxVal);ivec2  clamp(ivec2  x, int minVal, int maxVal);ivec3  clamp(ivec3  x, int minVal, int maxVal);ivec4  clamp(ivec4  x, int minVal, int maxVal);ivec2  clamp(ivec2  x, ivec2  minVal, ivec2  maxVal);ivec3  clamp(ivec3  x, ivec3  minVal, ivec3  maxVal);ivec4  clamp(ivec4  x, ivec4  minVal, ivec4  maxVal);uint   clamp(uint x, uint minVal, uint maxVal);uvec2  clamp(uvec2  x, uint minVal, uint maxVal);uvec3  clamp(uvec3  x, uint minVal, uint maxVal);uvec4  clamp(uvec4  x, uint minVal, uint maxVal);uvec2  clamp(uvec2  x, uvec2  minVal, uvec2  maxVal);uvec3  clamp(uvec3  x, uvec3  minVal, uvec3  maxVal);uvec4  clamp(uvec4  x, uvec4  minVal, uvec4  maxVal);float mix(float x, float y, bool  a);vec2  mix(vec2  x, vec2  y, bvec2 a);vec3  mix(vec3  x, vec3  y, bvec3 a);vec4  mix(vec4  x, vec4  y, bvec4 a);bool  isnan(float x);bvec2 isnan(vec2  x);bvec3 isnan(vec3  x);bvec4 isnan(vec4  x);bool  isinf(float x);bvec2 isinf(vec2  x);bvec3 isinf(vec3  x);bvec4 isinf(vec4  x);
  int bitCount(  int);ivec2 bitCount(ivec2);ivec3 bitCount(ivec3);ivec4 bitCount(ivec4);  int bitCount( uint);ivec2 bitCount(uvec2);ivec3 bitCount(uvec3);ivec4 bitCount(uvec4);  int findMSB(highp   int);ivec2 findMSB(highp ivec2);ivec3 findMSB(highp ivec3);ivec4 findMSB(highp ivec4);  int findMSB(highp  uint);ivec2 findMSB(highp uvec2);ivec3 findMSB(highp uvec3);ivec4 findMSB(highp uvec4);
  int bitfieldExtract(  int, int, int);ivec2 bitfieldExtract(ivec2, int, int);ivec3 bitfieldExtract(ivec3, int, int);ivec4 bitfieldExtract(ivec4, int, int); uint bitfieldExtract( uint, int, int);uvec2 bitfieldExtract(uvec2, int, int);uvec3 bitfieldExtract(uvec3, int, int);uvec4 bitfieldExtract(uvec4, int, int);  int bitfieldInsert(  int base,   int, int, int);ivec2 bitfieldInsert(ivec2 base, ivec2, int, int);ivec3 bitfieldInsert(ivec3 base, ivec3, int, int);ivec4 bitfieldInsert(ivec4 base, ivec4, int, int); uint bitfieldInsert( uint base,  uint, int, int);uvec2 bitfieldInsert(uvec2 base, uvec2, int, int);uvec3 bitfieldInsert(uvec3 base, uvec3, int, int);uvec4 bitfieldInsert(uvec4 base, uvec4, int, int);
  int findLSB(  int);ivec2 findLSB(ivec2);ivec3 findLSB(ivec3);ivec4 findLSB(ivec4);  int findLSB( uint);ivec2 findLSB(uvec2);ivec3 findLSB(uvec3);ivec4 findLSB(uvec4);
 !"#$%%%%%%&%'%%()*+%%,-%.
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
 !%&'()*+,-./01234
 'L>[
 (ANGLE 
 (const float)
 (const int)
 (const uint)
 (const yuvCscStandardEXT)
 (field '
 (internal function)
 (or there is no acceptable conversion)
 (structure contains a sampler)
 (symbol id 
 * coordWrapped));
 * frac(
 + float(
 / t.w
 / t.z
 8}+M8
 9Q$tn
 : enable
 : register(b
 : register(s
 : register(t
 : register(u
 : require
 <<= 
 = clamp(int(floor(
 = false;
 = input.v
 = int(floor(
 = mul(
 = transpose(mul(transpose(
 = true; break;}
 == 1)
 == 3)
 >>= 
 A9_ w
 A^A\_
 A^_^
 A_A\_
 A_A^A\
 A_A^A\_^
 A_A^A]
 A_A^A]A\_
 A_A^A]A\_^]
 A_A^A]_^
 A_A^]
 A_A^_
 B\kji2
 Base Class Array'
 Base Class Descriptor at (
 C>TQ
 Class Hierarchy Descriptor'
 Complete Object Locator'
 D;j0u
 Direct3D11
 Direct3D9
 Direct3D9Ex
 EXT_create_context_robustness.
 GS_INPUT input[
 H3E H3E
 H9l$xv
 H;l$0H
 Ic|$(M
 Intermediate Window Class
 L	c D
 OpenGL
 Retrying with 
 SHADER BEGIN
 SHADER END
 Type Descriptor'
 [ UNASSIGNED-CoreValidation-Shader-PointSizeMissing ] Object: VK_NULL_HANDLE (Type = 19) | Pipeline topology is set to POINT_LIST, but PointSize is not written to in the shader corresponding to VK_SHADER_STAGE_VERTEX_BIT.
 []_^A\A]A^A_
 []_^A\A^A_
 []_^A^
 []_^A^H
 [_^A\A]A^A_
 [_^A^A_
 [_^A^A_H
 [_^H
 align=
 and 
 and '
 angle_compound_
 angle_frl(
 angle_frl(in 
 angle_frm(
 angle_frm(in 
 atan_emu(emu_precision vec
 binding=
 cache limit of 
 calling 
 cannot initialize this type of qualifier 
 centroid
 coherent
 color = 
 compatibility
 compilation errors.  No code generated.
 component=
 components (
 conflicts with 
 conflicts with another variable.
 constant_id=
 core
 count exceeds 
 delete
 delete[]
 deprecated in version 
 devicecoherent
 does not exist in the vertex shader.
 does not match any 
 elements, removing the least recently used to make room.
 exceeds maximum allowed nesting level of 
 exponent = floor(log2(abs(v) + 1e-30)) - 10.0;
 exponent = floor(log2(abs(x) + 1e-30)) - 10.0;
 field selection requires structure or vector on left hand side
 field selection requires structure, vector, or interface block on left hand side
 flags. (
 flat
 for(
 has internal format 
 imageAtomicAdd(volatile coherent 
 imageAtomicAnd(volatile coherent 
 imageAtomicCompSwap(volatile coherent 
 imageAtomicExchange(volatile coherent 
 imageAtomicLoad(volatile coherent 
 imageAtomicMax(volatile coherent 
 imageAtomicMin(volatile coherent 
 imageAtomicOr(volatile coherent 
 imageAtomicXor(volatile coherent 
 imageSize(readonly writeonly volatile coherent 
 images
 index=
 inout 
 input_attachment_index=
 int;
 invariant
 is being used for 
 is not requestable.
 is the maximum.
 is too big to fit
 isNonZero = exponent < -25.0;
 isNonZero = greaterThanEqual(exponent, vec
 l-value of swizzle cannot have duplicate components
 l-value required
 left of '[' is not of type array, matrix, or vector 
 location=
 l~tG
 m) {
 matrix of
 matrix of 
 must be positive
 new[]
 no such field in interface block
 no such field in structure
 noContraction
 nonprivate
 nonuniform
 noperspective
 not available. Falling back to 
 offset=
 out_
 parameters are required but 
 patch
 push_constant
 queuefamilycoherent
 readonly
 readonlyImages
 restrict
 result = 
 rounded;
 runtime-sized array of
 sample
 sampler_
 samplers
 samples, 
 set=
 shader 
 shaders.
 smooth
 specialization-constant
 specified multiple times
 stage:
 stage: 
 stream=
 structure = { 
 subgroupcoherent
 supported in GLSL ES 1.00 only
 supported in compute shaders only
 supported in vertex shaders only
 tDE3
 t^D9
 textureSize(
 texture_
 textures
 types are not allowed in interface blocks
 u_source_texture;
 uint
 uint uaddCarry(highp  uint, highp  uint, out lowp  uint carry);uvec2 uaddCarry(highp uvec2, highp uvec2, out lowp uvec2 carry);uvec3 uaddCarry(highp uvec3, highp uvec3, out lowp uvec3 carry);uvec4 uaddCarry(highp uvec4, highp uvec4, out lowp uvec4 carry); uint usubBorrow(highp  uint, highp  uint, out lowp  uint borrow);uvec2 usubBorrow(highp uvec2, highp uvec2, out lowp uvec2 borrow);uvec3 usubBorrow(highp uvec3, highp uvec3, out lowp uvec3 borrow);uvec4 usubBorrow(highp uvec4, highp uvec4, out lowp uvec4 borrow);void umulExtended(highp  uint, highp  uint, out highp  uint, out highp  uint lsb);void umulExtended(highp uvec2, highp uvec2, out highp uvec2, out highp uvec2 lsb);void umulExtended(highp uvec3, highp uvec3, out highp uvec3, out highp uvec3 lsb);void umulExtended(highp uvec4, highp uvec4, out highp uvec4, out highp uvec4 lsb);void imulExtended(highp   int, highp   int, out highp   int, out highp   int lsb);void imulExtended(highp ivec2, highp ivec2, out highp ivec2, out highp ivec2 lsb);void imulExtended(highp ivec3, highp ivec3, out highp ivec3, out highp ivec3 lsb);void imulExtended(highp ivec4, highp ivec4, out highp ivec4, out highp ivec4 lsb);  int bitfieldReverse(highp   int);ivec2 bitfieldReverse(highp ivec2);ivec3 bitfieldReverse(highp ivec3);ivec4 bitfieldReverse(highp ivec4); uint bitfieldReverse(highp  uint);uvec2 bitfieldReverse(highp uvec2);uvec3 bitfieldReverse(highp uvec3);uvec4 bitfieldReverse(highp uvec4);
 unsized
 v) {
 vJH+
 valid for GLES with EGL 1.4 and KHR_create_context. Use
 value)
 varying
 varying 
 vec2 a_texcoord;
 vec2 v_texcoord;
 volatile
 were provided.
 with expression
 workgroupcoherent
 writeonly
 wrong operand type
 wrong operand types:
 x) {
 x, in 
 xfb_buffer=
 xfb_offset=
 xfb_stride=
 y) {
 y, emu_precision vec
 |	E1
!	@cb
!""""""
!,X< w
!>6'Y
!T$(H!T$ 
!This program cannot be run in DOS mode.$
!\>G[
" versus "
"""""""
"%s" (%s)
"(" expected after 'debug' keyword
"(" expected after 'optimize' keyword
")" expected to end 'debug' pragma
")" expected to end 'optimize' pragma
"defined" can't be (un)defined:
"e?<<<<<<l?
"on" or "off" expected after '(' for 'debug' pragma
"on" or "off" expected after '(' for 'optimize' pragma
"s =1
#4o>w
#Ib?AG
#define
#define ANGLE_ENABLE_LINE_SEGMENT_RASTERIZATION
#define ANGLE_POINT_SPRITE_SHADER
#define ANGLE_REQUIRES_IEEE_STRICT_COMPILING
#define ANGLE_USES_DISCARD_REWRITING
#define ANGLE_USES_NESTED_BREAK
#define E_GL_EXT_shader_atomic_int64 1
#define FLATTEN
#define FLATTEN [flatten]
#define GL_ANDROID_extension_pack_es31a 1
#define GL_ANGLE_MULTIVIEW_ENABLED
#define GL_ARB_compute_shader 1
#define GL_ARB_derivative_control 1
#define GL_ARB_enhanced_layouts 1
#define GL_ARB_explicit_attrib_location 1
#define GL_ARB_gpu_shader5 1
#define GL_ARB_gpu_shader_int64 1
#define GL_ARB_post_depth_coverage 1
#define GL_ARB_separate_shader_objects 1
#define GL_ARB_shader_atomic_counters 1
#define GL_ARB_shader_ballot 1
#define GL_ARB_shader_draw_parameters 1
#define GL_ARB_shader_group_vote 1
#define GL_ARB_shader_image_load_store 1
#define GL_ARB_shader_stencil_export 1
#define GL_ARB_shader_texture_image_samples 1
#define GL_ARB_shader_texture_lod 1
#define GL_ARB_shading_language_420pack 1
#define GL_ARB_sparse_texture2 1
#define GL_ARB_sparse_texture_clamp 1
#define GL_ARB_tessellation_shader 1
#define GL_ARB_texture_cube_map_array 1
#define GL_ARB_texture_gather 1
#define GL_ARB_texture_rectangle 1
#define GL_ARB_viewport_array 1
#define GL_ES 1
#define GL_EXT_control_flow_attributes 1
#define GL_EXT_device_group 1
#define GL_EXT_frag_depth 1
#define GL_EXT_geometry_point_size 1
#define GL_EXT_geometry_shader 1
#define GL_EXT_gpu_shader5 1
#define GL_EXT_multiview 1
#define GL_EXT_nonuniform_qualifier 1
#define GL_EXT_post_depth_coverage 1
#define GL_EXT_primitive_bounding_box 1
#define GL_EXT_samplerless_texture_functions 1
#define GL_EXT_shader_16bit_storage 1
#define GL_EXT_shader_8bit_storage 1
#define GL_EXT_shader_image_load_formatted 1
#define GL_EXT_shader_io_blocks 1
#define GL_EXT_shader_non_constant_global_initializers 1
#define GL_EXT_shader_texture_lod 1
#define GL_EXT_shadow_samplers 1
#define GL_EXT_tessellation_point_size 1
#define GL_EXT_tessellation_shader 1
#define GL_EXT_texture_buffer 1
#define GL_EXT_texture_cube_map_array 1
#define GL_FRAGMENT_PRECISION_HIGH 1
#define GL_GOOGLE_cpp_style_line_directive 1
#define GL_GOOGLE_include_directive 1
#define GL_KHR_blend_equation_advanced 1
#define GL_KHR_shader_subgroup_arithmetic 1
#define GL_KHR_shader_subgroup_ballot 1
#define GL_KHR_shader_subgroup_basic 1
#define GL_KHR_shader_subgroup_clustered 1
#define GL_KHR_shader_subgroup_quad 1
#define GL_KHR_shader_subgroup_shuffle 1
#define GL_KHR_shader_subgroup_shuffle_relative 1
#define GL_KHR_shader_subgroup_vote 1
#define GL_KHX_shader_explicit_arithmetic_types 1
#define GL_KHX_shader_explicit_arithmetic_types_float16 1
#define GL_KHX_shader_explicit_arithmetic_types_float32 1
#define GL_KHX_shader_explicit_arithmetic_types_float64 1
#define GL_KHX_shader_explicit_arithmetic_types_int16 1
#define GL_KHX_shader_explicit_arithmetic_types_int32 1
#define GL_KHX_shader_explicit_arithmetic_types_int64 1
#define GL_KHX_shader_explicit_arithmetic_types_int8 1
#define GL_OES_EGL_image_external 1
#define GL_OES_EGL_image_external_essl3 1
#define GL_OES_geometry_point_size 1
#define GL_OES_geometry_shader 1
#define GL_OES_gpu_shader5 1
#define GL_OES_primitive_bounding_box 1
#define GL_OES_sample_variables 1
#define GL_OES_shader_image_atomic 1
#define GL_OES_shader_io_blocks 1
#define GL_OES_shader_multisample_interpolation 1
#define GL_OES_standard_derivatives 1
#define GL_OES_tessellation_point_size 1
#define GL_OES_tessellation_shader 1
#define GL_OES_texture_3D 1
#define GL_OES_texture_buffer 1
#define GL_OES_texture_cube_map_array 1
#define GL_OES_texture_storage_multisample_2d_array 1
#define GL_OVR_multiview 1
#define GL_OVR_multiview2 1
#define GL_SPIRV 
#define GL_USES_DEPTH_RANGE
#define GL_USES_FRAG_COLOR
#define GL_USES_FRAG_COORD
#define GL_USES_FRAG_DATA
#define GL_USES_FRAG_DEPTH
#define GL_USES_FRONT_FACING
#define GL_USES_MRT
#define GL_USES_POINT_COORD
#define GL_USES_POINT_SIZE
#define GL_USES_VIEW_ID
#define GL_compatibility_profile 1
#define GL_core_profile 1
#define LOOP
#define LOOP [loop]
#define VULKAN 
#define emu_precision
#define emu_precision highp
#define emu_precision mediump
#define kAdd                            0x0104
#define kAddSigned                      0x8574
#define kAlpha                          0x1906
#define kAlways                         0x0207
#define kAnd                            0x1501
#define kAnd_inverted                   0x1504
#define kAnd_reverse                    0x1502
#define kBlend                          0x0BE2
#define kClear                          0x1500
#define kCombine                        0x8570
#define kConstant                       0x8576
#define kCopy                           0x1503
#define kCopy_inverted                  0x150C
#define kDecal                          0x2101
#define kDot3Rgb                        0x86AE
#define kDot3Rgba                       0x86AF
#define kEqual                          0x0202
#define kEquiv                          0x1509
#define kExp                            0x0800
#define kExp2                           0x0801
#define kGequal                         0x0206
#define kGreater                        0x0204
#define kInterpolate                    0x8575
#define kInvert                         0x150A
#define kLequal                         0x0203
#define kLess                           0x0201
#define kLinear                         0x2601
#define kLuminance                      0x1909
#define kLuminanceAlpha                 0x190A
#define kMaxClipPlanes                       6
#define kMaxLights                           8
#define kMaxTexUnits                         4
#define kMaxTexUnits 4
#define kModulate                       0x2100
#define kNand                           0x150E
#define kNever                          0x0200
#define kNoop                           0x1505
#define kNor                            0x1508
#define kNotequal                       0x0205
#define kOne                               0x1
#define kOneMinusSrcAlpha               0x0303
#define kOneMinusSrcColor               0x0301
#define kOr                             0x1507
#define kOr_inverted                    0x150D
#define kOr_reverse                     0x150B
#define kPrevious                       0x8578
#define kPrimaryColor                   0x8577
#define kRGB                            0x1907
#define kRGBA                           0x1908
#define kReplace                        0x1E01
#define kSet                            0x150F
#define kSrcAlpha                       0x0302
#define kSrcColor                       0x0300
#define kSubtract                       0x84E7
#define kTexture                        0x1702
#define kXor                            0x1506
#define kZero                              0x0
#elif
#elif after #else
#elif defined GL_OES_geometry_shader
#else
#else after #else
#endif
#endif  // ANGLE_POINT_SPRITE_SHADER
#error
#error "No geometry shader extensions available." // Only generate this if the extension is "required"
#extension
#extension 
#extension GL_ARB_draw_buffers : 
#extension GL_ARB_explicit_attrib_location : require
#extension GL_ARB_geometry_shader4 : 
#extension GL_ARB_gpu_shader5 : enable
#extension GL_ARB_shader_texture_lod : 
#extension GL_EXT_geometry_shader : 
#extension GL_NV_draw_buffers : 
#extension GL_NV_shader_framebuffer_fetch : 
#extension GL_NV_viewport_array2 : require
#extension GL_OES_geometry_shader : 
#if !defined(GL_ARB_shading_language_packing)
#if defined(GL_FRAGMENT_PRECISION_HIGH)
#if/#ifdef/#ifndef
#ifdef
#ifdef ANGLE_ENABLE_LOOP_FLATTEN
#ifdef GL_EXT_geometry_shader
#ifndef
#ifndef ANGLE_POINT_SPRITE_SHADER
#include
#line
#line 
#line 1
#line 2 "
#pragma
#pragma STDGL invariant(all)
#pragma STDGL invariant(all) can not be used in fragment shader
#pragma once
#pragma pack_matrix(column_major)
#pragma pack_matrix(row_major)
#undef
#version
#version 
#version 300 es
#version 450 core
#version directive must occur before anything else, except for comments and white space
#version directive must occur on the first line of the shader
#version: Desktop shaders for OpenGL SPIR-V require version 330 or higher
#version: Desktop shaders for Vulkan SPIR-V require version 140 or higher
#version: ES shaders for OpenGL SPIR-V are not supported
#version: ES shaders for Vulkan SPIR-V require version 310 or higher
#version: compilation for SPIR-V does not support the compatibility profile
#version: compute shaders require es profile with version 310 or above, or non-es profile with version 420 or above
#version: geometry shaders require es profile with version 310 or non-es profile with version 150 or above
#version: only version 300, 310, and 320 support the es profile
#version: statement must appear first in es-profile shader; before comments or newlines
#version: tessellation shaders require es profile with version 310 or non-es profile with version 150 or above
#version: versions 300, 310, and 320 require specifying the 'es' profile
#version: versions 300, 310, and 320 support only the es profile
#version: versions before 150 do not allow a profile token
$$M9f
$Global
$H9H t's0L
$H;0t
$H;L$
$I9D$
$I;D$
$I;T$
$Ib?s
$L;d$
$L;|$
$M9t$
$accept
$undefined
%-.13e
%3333
%GoU?*
%d (%s)
%d.%d.%d
%lld (%s)
%llu (%s)
%s %s (
%s (%d)
%s profile; removed in version %d
%s: Located json file "%s" from PnP registry: %s
%s: Unable to resolve symbol "%s" in implicit layer library "%s"
%u (%s)
&	$@06p
&?PPPPPPP?
&A9EL
' (or there is no acceptable conversion)
' aliases attribute '
' and a right operand of type '
' at location 
' conflicting location with previously defined '
' differ between 
' exists that takes a left-hand operand of type '
' exists that takes an operand of type 
' is not an array to be captured by element.
' member '
' to '
':' missing after extension name
'\Direct3DCreate9
'dpy' not a valid EGLDisplay handle
'dpy' not initialized
'imageLoad' cannot be used with images qualified as 'writeonly'
'imageStore' cannot be used with images qualified as 'readonly'
'in' can be only used to specify the local group size
'layout'
'max_vertices' is not specified in the geometry shader.
'src' is greater than MAX_DRAW_BUFFERS.
'src' must be GL_NONE or GL_BACK when reading from the default framebuffer.
( 8PX
('8PW
(-"50
(-25.0));
(...)
(=NK+
(D$ A
(D$ H
(D$ f
(D$@A
(D$@D
(D$@H
(D$PA
(D$PD
(D$PH
(D$PL
(D$Pf
(D$`D
(D$`H
(D$pD
(D$pH
(Did you mean gl_InstanceIndex?)
(Did you mean gl_VertexIndex?)
(H9t$0
(L$ A
(L$0D
(L$PD
(L$`D
(L$`H
(L$pD
(L$pH
(LcA HcQ
(RWByteAddressBuffer buffer, uint loc)
(RWByteAddressBuffer buffer, uint loc, 
(T$ A
(T$ H
(T$PA
(T$`D
(T$pD
(T$pH
(T?j?Y
([]_^
([]_^A\A]A^A_
([]_^A\A]A^A_H
([]_^A^A_
([]_^A^A_H
([]_^H
([_^A\A^A_
([_^A\A^A_H
([_^A^
([_^A^H
([_^A^I
(\$`A
(\$pH
(adapter LUID: %08x%08x)
(color);
(input.
(isNonZero);
(null)
(out 
(symbol id 
(t$ H
(t$0H
(t$@H
(t$@L
(t$PH
(t$`H
(t$`L
(t$pH
(u)int16 types can only be in uniform block or buffer storage
(u)int8 types can only be in uniform block or buffer storage
(u_source_texture, v_texcoord);
(using array)
(|$ H
(|$0D
(|$0H
(|$0I
(|$@D
(|$@H
(|$PD
(|$PH
(|$PI
(|$`D
(|$`H
(|$pD
(|$pH
) - 1);
) : (
) ? (
) at location 
) exceed the maximum interleaved components (
) exceed the maximum separate components (
) in;
) out;
) with the following call chain: 
) { return false; }
)' used in the following call chain:
)(isNonZero);
), 0.0, float(
), bias
), ddx, ddy
), index
), lod
), t.w
), t.z
), transpose(
), while in source code it is (
).length())
)/o>	
)>6{1n
)D$ A
)D$ E
)D$ E1
)D$ H
)D$ I
)D$ L
)D$01
)D$0D
)D$0E1
)D$0H
)D$0H9A t"H
)D$0I
)D$@A
)D$@D
)D$@H
)D$@I
)D$@L
)D$P1
)D$PA
)D$PH
)D$PI
)D$PI9
)D$PL
)D$PM9
)D$`H
)D$`I
)D$`M
)D$p1
)D$pA
)D$pH
)L$ A
)L$0H
)L$PD
)L$`D
)L$`H
)L$`f
)L$pD
)T$ H#
)T$`D
)T$pD
)\$`L
)\$pD
)t$ A
)t$ D
)t$ E
)t$ H
)t$ H#
)t$ I
)t$ L
)t$ L9
)t$ M
)t$0A
)t$0D
)t$0E
)t$0H
)t$0I
)t$0L
)t$0M
)t$0f
)t$@D
)t$@H
)t$@I
)t$@L
)t$@M
)t$P1
)t$PD
)t$PE
)t$PH
)t$PH#
)t$PI
)t$PL
)t$PM
)t$`D
)t$`E
)t$`H
)t$`I
)t$`L
)t$`M
)t$pA
)t$pD
)t$pE
)t$pH
)t$pI
)t$pL
)t$pM
)|$ I
)|$0H
)|$0f
)|$`f
)|$pH
)|$pf
)|B?d!
*StO9>T
*Vc>L
+1.#INF
+;D$DwXI
+D$D+D$L
+J$D8M@
+M<7>
+T$XH
+f)>0'
+h->|
+|$$E
, 0, 
, 0.0)
, alignment=
, bias
, component = 
, components (1/4 stride) needed are 
, const uint 
, expected 
, float
, float bias
, float lod
, float refZ
, float);
, float2 ddx, float2 ddy
, float2 t
, float3 ddx, float3 ddy
, float3 t
, float4 data
, float4 t
, gl_MaxTransformFeedbackInterleavedComponents is 
, in 
, int
, int comp = 0
, int index
, int lod
, int mip
, int, int, int
, int, int, int);
, int, int, int, int, int
, int2 offset
, int2 p
, int2 t
, int3 offset
, int3 p
, int3 t
, int4 data
, ivec
, line 
, local_size_y=
, local_size_z=
, lod
, minimum stride needed: 
, mip)
, offset
, operation at 
, out 
, refZ
, sampler_
, texture_
, transpose(
, uint4 data
, vec
, xfb_stride 
,/<-w
,HR><y5
,HR>O
,I<%w
,float
,float,float
,int);
,ivec
,ivec2
,out 
,t0D9J0v*L
,vec4
-1.#INF
-9D	/9a
-> $$ =
-BH>t
-Failed to open share handle, 
-component vector of
-component vector of 
-element array of
-tx-struct
. &~~T
../../third_party/angle/src/libANGLE/Buffer.cpp
../../third_party/angle/src/libANGLE/GLES1Renderer.cpp
../../third_party/angle/src/libANGLE/renderer/d3d/FramebufferD3D.cpp
../../third_party/angle/src/libANGLE/renderer/d3d/HLSLCompiler.cpp
../../third_party/angle/src/libANGLE/renderer/d3d/IndexBuffer.cpp
../../third_party/angle/src/libANGLE/renderer/d3d/IndexDataManager.cpp
../../third_party/angle/src/libANGLE/renderer/d3d/TextureD3D.cpp
../../third_party/angle/src/libANGLE/renderer/d3d/VertexBuffer.cpp
../../third_party/angle/src/libANGLE/renderer/d3d/VertexDataManager.cpp
../../third_party/angle/src/libANGLE/renderer/d3d/d3d11/Blit11.cpp
../../third_party/angle/src/libANGLE/renderer/d3d/d3d11/Buffer11.cpp
../../third_party/angle/src/libANGLE/renderer/d3d/d3d11/Context11.cpp
../../third_party/angle/src/libANGLE/renderer/d3d/d3d11/Fence11.cpp
../../third_party/angle/src/libANGLE/renderer/d3d/d3d11/Image11.cpp
../../third_party/angle/src/libANGLE/renderer/d3d/d3d11/IndexBuffer11.cpp
../../third_party/angle/src/libANGLE/renderer/d3d/d3d11/Query11.cpp
../../third_party/angle/src/libANGLE/renderer/d3d/d3d11/Renderer11.cpp
../../third_party/angle/src/libANGLE/renderer/d3d/d3d11/TextureStorage11.cpp
../../third_party/angle/src/libANGLE/renderer/d3d/d3d11/renderer11_utils.cpp
../../third_party/angle/src/libANGLE/renderer/d3d/d3d9/Buffer9.cpp
../../third_party/angle/src/libANGLE/renderer/d3d/d3d9/Fence9.cpp
../../third_party/angle/src/libANGLE/renderer/d3d/d3d9/Framebuffer9.cpp
../../third_party/angle/src/libANGLE/renderer/d3d/d3d9/Image9.cpp
../../third_party/angle/src/libANGLE/renderer/d3d/d3d9/IndexBuffer9.cpp
../../third_party/angle/src/libANGLE/renderer/d3d/d3d9/Renderer9.cpp
../../third_party/angle/src/libANGLE/renderer/d3d/d3d9/TextureStorage9.cpp
../../third_party/angle/src/libANGLE/renderer/d3d/d3d9/VertexBuffer9.cpp
../../third_party/angle/src/libANGLE/renderer/d3d/d3d9/VertexDeclarationCache.cpp
../../third_party/angle/src/libANGLE/renderer/gl/BlitGL.cpp
../../third_party/angle/src/libANGLE/renderer/gl/FramebufferGL.cpp
../../third_party/angle/src/libANGLE/renderer/gl/TextureGL.cpp
../../third_party/angle/src/libANGLE/renderer/gl/VertexArrayGL.cpp
../../third_party/angle/src/libANGLE/renderer/gl/renderergl_utils.cpp
../../third_party/angle/src/libANGLE/renderer/null/FramebufferNULL.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/FramebufferVk.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/GlslangWrapper.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/ProgramVk.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/RendererVk.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/SurfaceVk.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/TextureVk.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/vk_helpers.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/vk_utils.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/win32/WindowSurfaceVkWin32.cpp
../../third_party/angle/src\libANGLE/renderer/d3d/d3d9/ShaderCache.h
..om?
.0, aborting!
.8\$!t.9\
.>PJ;I:qE>
.?AUIExecutionContext@Concurrency@@
.?AUIExecutionResource@Concurrency@@
.?AUIResourceManager@Concurrency@@
.?AUIScheduler@Concurrency@@
.?AUISchedulerProxy@Concurrency@@
.?AUIThreadProxy@Concurrency@@
.?AUIThreadProxyFactory@details@Concurrency@@
.?AUITopologyExecutionResource@Concurrency@@
.?AUITopologyNode@Concurrency@@
.?AUIVirtualProcessorRoot@Concurrency@@
.?AUTopologyObject@GlobalCore@details@Concurrency@@
.?AUTopologyObject@GlobalNode@details@Concurrency@@
.?AU_Chore@details@Concurrency@@
.?AU_Crt_new_delete@std@@
.?AV<lambda_0>@?0??findFunction400@TParseContext@glslang@@QEAAPEBVTFunction@3@AEBUTSourceLoc@3@AEBV43@AEA_N@Z@
.?AV<lambda_0>@?0??linkResources@ProgramD3D@rx@@AEAAXAEBUProgramLinkedResources@gl@@@Z@
.?AV<lambda_0>@?0??linkResources@ProgramGL@rx@@AEAAXAEBUProgramLinkedResources@gl@@@Z@
.?AV<lambda_0>@?0??postProcess@Builder@spv@@QEAAXXZ@
.?AV<lambda_0>@?0??resolveCompile@Shader@gl@@AEAAXXZ@
.?AV<lambda_1>@?0???$?0V?$_Fake_no_copy_callable_adapter@V<lambda_0>@?0??checkToRunPendingTasks@AsyncWorkerPool@angle@@AEAAXXZ@@std@@@?$_Task_async_state@X$0A@@std@@QEAA@$$QEAV?$_Fake_no_copy_callable_adapter@V<lambda_0>@?0??checkToRunPendingTasks@AsyncWorkerPool@angle@@AEAAXXZ@@2@@Z@
.?AV<lambda_1>@?0???R0?0??_ScheduleContinuationTask@_Task_impl_base@details@Concurrency@@QEAAXPEAU_ContinuationTaskHandleBase@34@@Z@QEBA?A?<auto>@@XZ@
.?AV<lambda_1>@?0??_CancelAndRunContinuations@?$_Task_impl@E@details@Concurrency@@UEAA_N_N00AEBV?$shared_ptr@U_ExceptionHolder@details@Concurrency@@@std@@@Z@
.?AV<lambda_1>@?0??_MakeVoidToUnitFunc@details@Concurrency@@YA?AV?$function@$$A6AEXZ@std@@AEBV?$function@$$A6AXXZ@5@@Z@
.?AV<lambda_1>@?0??_ScheduleContinuationTask@_Task_impl_base@details@Concurrency@@QEAAXPEAU_ContinuationTaskHandleBase@34@@Z@
.?AV<lambda_1>@?0??dump@Function@spv@@QEBAXAEAV?$vector@IV?$allocator@I@std@@@std@@@Z@
.?AV<lambda_1>@?0??findFunction400@TParseContext@glslang@@QEAAPEBVTFunction@3@AEBUTSourceLoc@3@AEBV43@AEA_N@Z@
.?AV<lambda_1>@?0??linkResources@ProgramD3D@rx@@AEAAXAEBUProgramLinkedResources@gl@@@Z@
.?AV<lambda_1>@?0??linkResources@ProgramGL@rx@@AEAAXAEBUProgramLinkedResources@gl@@@Z@
.?AV<lambda_2>@?0??findFunctionExplicitTypes@TParseContext@glslang@@QEAAPEBVTFunction@3@AEBUTSourceLoc@3@AEBV43@AEA_N@Z@
.?AV<lambda_2>@?0??linkResources@ProgramD3D@rx@@AEAAXAEBUProgramLinkedResources@gl@@@Z@
.?AV<lambda_2>@?0??linkResources@ProgramGL@rx@@AEAAXAEBUProgramLinkedResources@gl@@@Z@
.?AV<lambda_3>@?0??findFunctionExplicitTypes@TParseContext@glslang@@QEAAPEBVTFunction@3@AEBUTSourceLoc@3@AEBV43@AEA_N@Z@
.?AV<lambda_3>@?0??linkResources@ProgramD3D@rx@@AEAAXAEBUProgramLinkedResources@gl@@@Z@
.?AV<lambda_3>@?0??linkResources@ProgramGL@rx@@AEAAXAEBUProgramLinkedResources@gl@@@Z@
.?AV?$ThreadProxyFactory@VFreeThreadProxy@details@Concurrency@@@details@Concurrency@@
.?AV?$_Fake_no_copy_callable_adapter@V<lambda_0>@?0??checkToRunPendingTasks@AsyncWorkerPool@angle@@AEAAXXZ@@std@@
.?AV?$_MallocaArrayHolder@PEAVContext@Concurrency@@@details@Concurrency@@
.?AV?$_MallocaArrayHolder@PEAVevent@Concurrency@@@details@Concurrency@@
.?AV?$_Ref_count_obj@V__ExceptionPtr@@@std@@
.?AV?$_Ref_count_obj_alloc@V__ExceptionPtr@@U?$_StaticAllocator@H@@@std@@
.?AVCacheLocalScheduleGroup@details@Concurrency@@
.?AVCacheLocalScheduleGroupSegment@details@Concurrency@@
.?AVCancellationTokenRegistration_TaskProc@details@Concurrency@@
.?AVContext@Concurrency@@
.?AVContextBase@details@Concurrency@@
.?AVExecutionResource@details@Concurrency@@
.?AVExternalContextBase@details@Concurrency@@
.?AVFairScheduleGroup@details@Concurrency@@
.?AVFairScheduleGroupSegment@details@Concurrency@@
.?AVFreeThreadProxy@details@Concurrency@@
.?AVFreeThreadProxyFactory@details@Concurrency@@
.?AVFreeVirtualProcessorRoot@details@Concurrency@@
.?AVInternalContextBase@details@Concurrency@@
.?AVMultiWaitBlock@details@Concurrency@@
.?AVRealizedChore@details@Concurrency@@
.?AVResourceManager@details@Concurrency@@
.?AVScheduleGroup@Concurrency@@
.?AVScheduleGroupBase@details@Concurrency@@
.?AVScheduleGroupSegmentBase@details@Concurrency@@
.?AVScheduler@Concurrency@@
.?AVSchedulerBase@details@Concurrency@@
.?AVSchedulerProxy@details@Concurrency@@
.?AVSingleWaitBlock@details@Concurrency@@
.?AVThreadInternalContext@details@Concurrency@@
.?AVThreadProxy@details@Concurrency@@
.?AVThreadScheduler@details@Concurrency@@
.?AVThreadVirtualProcessor@details@Concurrency@@
.?AVTimedSingleWaitBlock@details@Concurrency@@
.?AVVirtualProcessor@details@Concurrency@@
.?AVVirtualProcessorRoot@details@Concurrency@@
.?AVWaitAllBlock@details@Concurrency@@
.?AVWaitAnyBlock@details@Concurrency@@
.?AVWaitBlock@details@Concurrency@@
.?AV_CancellationTokenRegistration@details@Concurrency@@
.?AV_Facet_base@std@@
.?AV_Generic_error_category@std@@
.?AV_Interruption_exception@details@Concurrency@@
.?AV_Locimp@locale@std@@
.?AV_RefCounter@details@Concurrency@@
.?AV_Ref_count_base@std@@
.?AV_System_error@std@@
.?AV_System_error_category@std@@
.?AV__non_rtti_object@std@@
.?AVbad_alloc@std@@
.?AVbad_array_new_length@std@@
.?AVbad_cast@std@@
.?AVbad_exception@std@@
.?AVbad_function_call@std@@
.?AVbad_typeid@std@@
.?AVcontext_self_unblock@Concurrency@@
.?AVcontext_unblock_unbalanced@Concurrency@@
.?AVerror_category@std@@
.?AVexception@std@@
.?AVfacet@locale@std@@
.?AVfuture_error@std@@
.?AVimproper_lock@Concurrency@@
.?AVimproper_scheduler_attach@Concurrency@@
.?AVimproper_scheduler_reference@Concurrency@@
.?AVinvalid_argument@std@@
.?AVinvalid_operation@Concurrency@@
.?AVinvalid_oversubscribe_operation@Concurrency@@
.?AVinvalid_scheduler_policy_key@Concurrency@@
.?AVinvalid_scheduler_policy_thread_specification@Concurrency@@
.?AVinvalid_scheduler_policy_value@Concurrency@@
.?AVlength_error@std@@
.?AVlogic_error@std@@
.?AVmissing_wait@Concurrency@@
.?AVnested_scheduler_missing_detach@Concurrency@@
.?AVout_of_range@std@@
.?AVruntime_error@std@@
.?AVscheduler_resource_allocation_error@Concurrency@@
.?AVscheduler_worker_creation_error@Concurrency@@
.?AVstl_condition_variable_concrt@details@Concurrency@@
.?AVstl_condition_variable_interface@details@Concurrency@@
.?AVstl_condition_variable_vista@details@Concurrency@@
.?AVstl_condition_variable_win7@details@Concurrency@@
.?AVstl_critical_section_concrt@details@Concurrency@@
.?AVstl_critical_section_interface@details@Concurrency@@
.?AVstl_critical_section_vista@details@Concurrency@@
.?AVstl_critical_section_win7@details@Concurrency@@
.?AVsystem_error@std@@
.?AVtype_info@@
.?AVunsupported_os@Concurrency@@
.G(u-z+
.G,u z
.GatherCmp(
.GetDimensions(0, width, height, depth, levels);
.GetDimensions(0, width, height, layers, levels);
.GetDimensions(0, width, height, levels);
.GetDimensions(baseLevel, width, height, depth, numberOfLevels);
.GetDimensions(baseLevel, width, height, numberOfLevels);
.GetDimensions(mip, width, height, depth, levels);
.GetDimensions(mip, width, height, layers, levels);
.GetDimensions(mip, width, height, levels);
.GetDimensions(width, height);
.GetDimensions(width, height, depth);
.GetDimensions(width, height, depth, samples);
.GetDimensions(width, height, samples);
.Load(
.M;vT
.Sample(
.SampleBias(
.SampleCmp(
.SampleCmpLevelZero(
.SampleGrad(
.SampleLevel(
.ffffff
.i?0@I
.json
.length
.length()
.length() - 1
.length() on vectors and matrices
.pdata
.rsrc
.text
.xJ>Hf
.xyzw
// Alpha test///////////////////////////////////////////////////////////////////
// Array constructor functions
// Assignment functions
// Attributes
// BEGIN: Generated code for array bounds clamping
// BEGIN: Generated code for built-in function emulation
// COMPILER INPUT HLSL BEGIN
// COMPILER INPUT HLSL END
// Defines for GL constants
// END: Generated code for array bounds clamping
// END: Generated code for built-in function emulation
// Equality functions
// Fog /////////////////////////////////////////////////////////////////////////
// GEOMETRY SHADER BEGIN
// GLSL BEGIN
// GLSL END
// GL_OES_draw_texture uniforms/////////////////////////////////////////////////
// GL_OES_draw_texture//////////////////////////////////////////////////////////
// INITIAL HLSL BEGIN
// INITIAL HLSL END
// OpModuleProcessed 
// Outgoing fragment////////////////////////////////////////////////////////////
// Point rasterization//////////////////////////////////////////////////////////
// Shader Storage Blocks
// Shading: flat shading, lighting, and materials///////////////////////////////
// Structures from std140 blocks with padding removed
// Texture units ///////////////////////////////////////////////////////////////
// These are not arrays because hw support for arrays
// Uniform Blocks
// Uniforms
// User clip plane /////////////////////////////////////////////////////////////
// Varyings
// Varyings/////////////////////////////////////////////////////////////////////
// Vertex attributes////////////////////////////////////////////////////////////
// of samplers is rather lacking.
/2GG>!B
/>58d%
0 (ANGLE 
0123456789-+Ee
0123456789ABCDEFabcdef-+Xx
0123456789ABCDEFabcdef-+XxPp
0123456789abcdefghijklmnopqrstuvwxyz
0><[cZUg^>
0A^_^
0A^_^][
0A_A^A\
0A_A^A\_^
0A_A^A]
0A_A^A]A\_
0A_A^A]A\_^[
0A_A^A]A\_^]
0A_A^A]_]
0A_A^A]_^
0A_A^_
0A_A^_^]
0A__^
0CapplyDeclaration
0Eshift-sampler-binding
0Ic] L
0L9k(t
0M9n(t
0X8b?~
0[]_^A\A^A_
0[]_^A^
0[]_^A^H
0[_^A\A]A^A_
0[_^A^A_
0[_^A^A_H
0[_^H
0[_^I
0ffffff
0iN>/
1#IND
1#INF
1#QNAN
1#SNAN
1.#IND
1.4 (ANGLE 2.1.0.f2ed299569c0)
1/4 stride is too large:
16-bit arrays not supported
16-bit integer literal
16-bit signed integer
16-bit signed integer vector
16-bit unsigned integer
16-bit unsigned integer literal
16-bit unsigned integer vector
16-bit vectors only take vector types
1:ShaderCache initialize
1<.	/>:
1eaB@
2.1.0.f2ed299569c0
2333333
23456789:%;<=>?@%ABCDEFGHIJKLM
255.0
2DArray
2DArray_comparison
2DArray_int4_
2DArray_snorm_float4_
2DArray_uint4_
2DArray_unorm_float4_
2DMSArray
2DMSArray_int4_
2DMSArray_uint4_
2DMS_int4_
2DMS_uint4_
2DRect
2D_comparison
2D_int4_
2D_snorm_float4_
2D_uint4_
2D_unorm_float4_
2L+1I
2VL=N
2[]_^A^A_
2]fQ	?5!
3+5<t
3/D3g
300 es
32-bit signed integer
32-bit signed integer vector
32-bit signed literal
32-bit unsigned integer
32-bit unsigned integer vector
3333333
33333333H
3>N;kU
3>fvw
3A8A#
3D_int4_
3D_snorm_float4_
3D_uint4_
3D_unorm_float4_
3U H	
3U0H	
4$I9n(t
5IcM8
64-bit hexadecimal literal
64-bit integer
64-bit integer literal
64-bit integer vector
64-bit literal
64-bit octal literal
64-bit unsigned integer
64-bit unsigned integer literal
64-bit unsigned integer vector
69c0H	
6H9sXu
6L9t$8
700PP
700WP
7h>?8
8	u=A
8$u2H
8*u;I
8+uGH
8+urI
8,u%H
8,u(L
8,uwH
8-bit arrays not supported
8-bit signed integer
8-bit signed integer vector
8-bit unsigned integer
8-bit unsigned integer vector
8-bit vectors only take vector types
80tWD
8A^_^[
8A_A^A]A\_^][
8Csinf
8D$ u+H
8D$8t
8D$ht
8D+>Hcp
8H;^XtB
8J;@ts
8XPu7I
8[]_^
8[]_^A\A]A^A_
8[]_^A\A]A^A_H
8[]_^A^A_
8[]_^H
8[_^A\A^A_
8[_^A\A^A_H
8[_^A\A^A_I
8[_^A^
8[_^A^H
8_^][
8ke?;
9+toH
9+u:L
9,tsH
9.t	H
9.tPL
9.tpH
9.uPH
9.u\9\$$uV
90t#H
91~/E3
93~?1
98u#H
98u%H
9;~%H
9>expf
9>tqH
9D$(uF
9D$(}k
9D$,u9H
9D$4uR
9D$8u`
9D$<uS
9D$Hu
9FHtGH
9H }kH
9L$Lv
9Q t(H
9V$t+H
9V(t+H
9V,t+H
9V0t+H
9W$v8D
9WP~GM
9WP~HM
9WP~KM
9Xp}^H
9_P~+E3
9_P~,E3
9_P~OE3
9g>@3
9h<~&D
9l$(u
9l$(ueD9d$,t
9l$Pt/H
9u0u	H
9{D~H3
9|$(u
9|$ht`H
9~uVH
: Dependency 
: DontFlatten
: DontUnroll
: Flatten
: Unroll
: direct index for structure
: no shortcircuit
: register(u
:"uS1
:,u4H
:>)*	v
:>t6k'
:ARB_texture_rectangle:
:ARM_shader_framebuffer_fetch:
:EXT_YUV_target:
:EXT_blend_func_extended:
:EXT_draw_buffers:
:EXT_frag_depth:
:EXT_geometry_shader:
:EXT_shader_framebuffer_fetch:
:EXT_shader_texture_lod:
:FragmentPrecisionHigh:
:GPu+
:MaxAtomicCounterBindings:
:MaxAtomicCounterBufferSize:
:MaxCallStackDepth:
:MaxCombinedAtomicCounterBuffers:
:MaxCombinedAtomicCounters:
:MaxCombinedImageUniforms:
:MaxCombinedShaderOutputResources:
:MaxCombinedTextureImageUnits:
:MaxComputeAtomicCounterBuffers:
:MaxComputeAtomicCounters:
:MaxComputeImageUniforms:
:MaxComputeTextureImageUnits:
:MaxComputeUniformComponents:
:MaxComputeWorkGroupCountX:
:MaxComputeWorkGroupCountY:
:MaxComputeWorkGroupCountZ:
:MaxComputeWorkGroupSizeX:
:MaxComputeWorkGroupSizeY:
:MaxComputeWorkGroupSizeZ:
:MaxDrawBuffers:
:MaxDualSourceDrawBuffers:
:MaxExpressionComplexity:
:MaxFragmentAtomicCounterBuffers:
:MaxFragmentAtomicCounters:
:MaxFragmentImageUniforms:
:MaxFragmentInputVectors:
:MaxFragmentUniformVectors:
:MaxFunctionParameters:
:MaxGeometryAtomicCounterBuffers:
:MaxGeometryAtomicCounters:
:MaxGeometryImageUniforms:
:MaxGeometryInputComponents:
:MaxGeometryOutputComponents:
:MaxGeometryOutputVertices:
:MaxGeometryShaderInvocations:
:MaxGeometryShaderStorageBlocks:
:MaxGeometryTextureImageUnits:
:MaxGeometryTotalOutputComponents:
:MaxGeometryUniformBlocks:
:MaxGeometryUniformComponents:
:MaxImageUnits:
:MaxProgramTexelOffset:
:MaxProgramTextureGatherOffset:
:MaxTextureImageUnits:
:MaxVaryingVectors:
:MaxVertexAtomicCounterBuffers:
:MaxVertexAtomicCounters:
:MaxVertexAttribs:
:MaxVertexImageUniforms:
:MaxVertexOutputVectors:
:MaxVertexTextureImageUnits:
:MaxVertexUniformVectors:
:MaxViewsOVR:
:MinProgramTexelOffset:
:MinProgramTextureGatherOffset:
:NV_EGL_stream_consumer_external:
:NV_draw_buffers:
:NV_shader_framebuffer_fetch:
:OES_EGL_image_external:
:OES_EGL_image_external_essl3:
:OES_standard_derivatives:
:OVR_multiview:
:WEBGL_debug_shader_precision:
:gu#H
; ++i)
; may be removed in future release
;.u1L
;:uYH
;A$vTH
;B$vUH
;BIb?
;Ct~EH
;Ct~ZH
;Ct~gH
;D$(}kH
;D$0t
;D$<@
;D$Du
;D$xu*
;D$|~8I
;F s~L
;F }~L
;F(}\
;Glu(
;H }.H
;H$}=H
;H9>&X
;I9}(tiH
;L$8|
;L$xu*
;Odu8
;Ohu0
;T$@u
;\$0|
;\$p|
;\$t|
;l$,r
;l$DwTD
;l$LH
;l$T|
;t^=x
;|$(|
;|$h|
<	w	@
< t=<	t9
</FONT>>];
<8/u=H
<:u#H
<>#n2
<?WUUUUU
<BR/> <FONT POINT-SIZE="10">Node ID 
<PJ*Ax
<\u+I
<acosf
<at <rt
<bad token>
<buffer> must be non null
<buftype> EGL_IOSURFACE_ANGLE requires the EGL_ANGLE_iosurface_client_buffer extension.
<buftype> doesn't support iosurface plane
<buftype> doesn't support rectangle texture targets
<buftype> doesn't support setting GL colorspace
<buftype> doesn't support texture internal format
<buftype> doesn't support texture type
<htn<jt^<lt6<tt&<wt
<rfA;<qH
<unknown op>
<unknown read and write resource>
<unknown read and write texture type>
<unknown read texture type>
<unknown texture type>
<unknown type>
= {[8V
=imb;D
>+t0H
>,ujH
>H;D>
>ffffff
>jtm}S
>m^-|
>mod second child into first child
>s!Hc
>uZ>`
?!5WOo
?+>^m
?,u#H
?../../third_party/angle/src/libANGLE/renderer/d3d/d3d9/Blit9.cpp
?333?
?49HoKC
?7zQ6$
?7{KV
?8UUUUU
?8bunz8
?:kP<
??0PlatformMethods@angle@@QEAA@XZ
??4PlatformMethods@angle@@QEAAAEAU01@$$QEAU01@@Z
??4PlatformMethods@angle@@QEAAAEAU01@AEBU01@@Z
?@En[vP
?ActiveShaderProgram@gl@@YAXII@Z
?ActiveShaderProgramContextANGLE@gl@@YAXPEAXII@Z
?ActiveTexture@gl@@YAXI@Z
?ActiveTextureContextANGLE@gl@@YAXPEAXI@Z
?AlphaFunc@gl@@YAXIM@Z
?AlphaFuncContextANGLE@gl@@YAXPEAXIM@Z
?AlphaFuncx@gl@@YAXIH@Z
?AlphaFuncxContextANGLE@gl@@YAXPEAXIH@Z
?AttachShader@gl@@YAXII@Z
?AttachShaderContextANGLE@gl@@YAXPEAXII@Z
?BeginQuery@gl@@YAXII@Z
?BeginQueryContextANGLE@gl@@YAXPEAXII@Z
?BeginQueryEXT@gl@@YAXII@Z
?BeginQueryEXTContextANGLE@gl@@YAXPEAXII@Z
?BeginTransformFeedback@gl@@YAXI@Z
?BeginTransformFeedbackContextANGLE@gl@@YAXPEAXI@Z
?BindAPI@egl@@YAII@Z
?BindAttribLocation@gl@@YAXIIPEBD@Z
?BindAttribLocationContextANGLE@gl@@YAXPEAXIIPEBD@Z
?BindBuffer@gl@@YAXII@Z
?BindBufferBase@gl@@YAXIII@Z
?BindBufferBaseContextANGLE@gl@@YAXPEAXIII@Z
?BindBufferContextANGLE@gl@@YAXPEAXII@Z
?BindBufferRange@gl@@YAXIII_J0@Z
?BindBufferRangeContextANGLE@gl@@YAXPEAXIII_J1@Z
?BindFragDataLocationEXT@gl@@YAXIIPEBD@Z
?BindFragDataLocationEXTContextANGLE@gl@@YAXPEAXIIPEBD@Z
?BindFragDataLocationIndexedEXT@gl@@YAXIIIPEBD@Z
?BindFragDataLocationIndexedEXTContextANGLE@gl@@YAXPEAXIIIPEBD@Z
?BindFragmentInputLocationCHROMIUM@gl@@YAXIHPEBD@Z
?BindFragmentInputLocationCHROMIUMContextANGLE@gl@@YAXPEAXIHPEBD@Z
?BindFramebuffer@gl@@YAXII@Z
?BindFramebufferContextANGLE@gl@@YAXPEAXII@Z
?BindFramebufferOES@gl@@YAXII@Z
?BindFramebufferOESContextANGLE@gl@@YAXPEAXII@Z
?BindImageTexture@gl@@YAXIIHEHII@Z
?BindImageTextureContextANGLE@gl@@YAXPEAXIIHEHII@Z
?BindProgramPipeline@gl@@YAXI@Z
?BindProgramPipelineContextANGLE@gl@@YAXPEAXI@Z
?BindRenderbuffer@gl@@YAXII@Z
?BindRenderbufferContextANGLE@gl@@YAXPEAXII@Z
?BindRenderbufferOES@gl@@YAXII@Z
?BindRenderbufferOESContextANGLE@gl@@YAXPEAXII@Z
?BindSampler@gl@@YAXII@Z
?BindSamplerContextANGLE@gl@@YAXPEAXII@Z
?BindTexImage@egl@@YAIPEAX0H@Z
?BindTexture@gl@@YAXII@Z
?BindTextureContextANGLE@gl@@YAXPEAXII@Z
?BindTransformFeedback@gl@@YAXII@Z
?BindTransformFeedbackContextANGLE@gl@@YAXPEAXII@Z
?BindUniformLocationCHROMIUM@gl@@YAXIHPEBD@Z
?BindUniformLocationCHROMIUMContextANGLE@gl@@YAXPEAXIHPEBD@Z
?BindVertexArray@gl@@YAXI@Z
?BindVertexArrayContextANGLE@gl@@YAXPEAXI@Z
?BindVertexArrayOES@gl@@YAXI@Z
?BindVertexArrayOESContextANGLE@gl@@YAXPEAXI@Z
?BindVertexBuffer@gl@@YAXII_JH@Z
?BindVertexBufferContextANGLE@gl@@YAXPEAXII_JH@Z
?BlendColor@gl@@YAXMMMM@Z
?BlendColorContextANGLE@gl@@YAXPEAXMMMM@Z
?BlendEquation@gl@@YAXI@Z
?BlendEquationContextANGLE@gl@@YAXPEAXI@Z
?BlendEquationSeparate@gl@@YAXII@Z
?BlendEquationSeparateContextANGLE@gl@@YAXPEAXII@Z
?BlendFunc@gl@@YAXII@Z
?BlendFuncContextANGLE@gl@@YAXPEAXII@Z
?BlendFuncSeparate@gl@@YAXIIII@Z
?BlendFuncSeparateContextANGLE@gl@@YAXPEAXIIII@Z
?BlitFramebuffer@gl@@YAXHHHHHHHHII@Z
?BlitFramebufferANGLE@gl@@YAXHHHHHHHHII@Z
?BlitFramebufferANGLEContextANGLE@gl@@YAXPEAXHHHHHHHHII@Z
?BlitFramebufferContextANGLE@gl@@YAXPEAXHHHHHHHHII@Z
?BufferData@gl@@YAXI_JPEBXI@Z
?BufferDataContextANGLE@gl@@YAXPEAXI_JPEBXI@Z
?BufferSubData@gl@@YAXI_J0PEBX@Z
?BufferSubDataContextANGLE@gl@@YAXPEAXI_J1PEBX@Z
?CheckFramebufferStatus@gl@@YAII@Z
?CheckFramebufferStatusContextANGLE@gl@@YAIPEAXI@Z
?CheckFramebufferStatusOES@gl@@YAII@Z
?CheckFramebufferStatusOESContextANGLE@gl@@YAIPEAXI@Z
?ChooseConfig@egl@@YAIPEAXPEBHPEAPEAXHPEAH@Z
?Clear11 Vertex Buffer
?Clear@gl@@YAXI@Z
?ClearBufferfi@gl@@YAXIHMH@Z
?ClearBufferfiContextANGLE@gl@@YAXPEAXIHMH@Z
?ClearBufferfv@gl@@YAXIHPEBM@Z
?ClearBufferfvContextANGLE@gl@@YAXPEAXIHPEBM@Z
?ClearBufferiv@gl@@YAXIHPEBH@Z
?ClearBufferivContextANGLE@gl@@YAXPEAXIHPEBH@Z
?ClearBufferuiv@gl@@YAXIHPEBI@Z
?ClearBufferuivContextANGLE@gl@@YAXPEAXIHPEBI@Z
?ClearColor@gl@@YAXMMMM@Z
?ClearColorContextANGLE@gl@@YAXPEAXMMMM@Z
?ClearColorx@gl@@YAXHHHH@Z
?ClearColorxContextANGLE@gl@@YAXPEAXHHHH@Z
?ClearContextANGLE@gl@@YAXPEAXI@Z
?ClearDepthf@gl@@YAXM@Z
?ClearDepthfContextANGLE@gl@@YAXPEAXM@Z
?ClearDepthx@gl@@YAXH@Z
?ClearDepthxContextANGLE@gl@@YAXPEAXH@Z
?ClearStencil@gl@@YAXH@Z
?ClearStencilContextANGLE@gl@@YAXPEAXH@Z
?ClientActiveTexture@gl@@YAXI@Z
?ClientActiveTextureContextANGLE@gl@@YAXPEAXI@Z
?ClientWaitSync@egl@@YAHPEAX0H_K@Z
?ClientWaitSync@gl@@YAIPEAU__GLsync@@I_K@Z
?ClientWaitSyncContextANGLE@gl@@YAIPEAXPEAU__GLsync@@I_K@Z
?ClipPlanef@gl@@YAXIPEBM@Z
?ClipPlanefContextANGLE@gl@@YAXPEAXIPEBM@Z
?ClipPlanex@gl@@YAXIPEBH@Z
?ClipPlanexContextANGLE@gl@@YAXPEAXIPEBH@Z
?Color4f@gl@@YAXMMMM@Z
?Color4fContextANGLE@gl@@YAXPEAXMMMM@Z
?Color4ub@gl@@YAXEEEE@Z
?Color4ubContextANGLE@gl@@YAXPEAXEEEE@Z
?Color4x@gl@@YAXHHHH@Z
?Color4xContextANGLE@gl@@YAXPEAXHHHH@Z
?ColorMask@gl@@YAXEEEE@Z
?ColorMaskContextANGLE@gl@@YAXPEAXEEEE@Z
?ColorPointer@gl@@YAXHIHPEBX@Z
?ColorPointerContextANGLE@gl@@YAXPEAXHIHPEBX@Z
?CompileShader@gl@@YAXI@Z
?CompileShaderContextANGLE@gl@@YAXPEAXI@Z
?CompressedCopyTextureCHROMIUM@gl@@YAXII@Z
?CompressedCopyTextureCHROMIUMContextANGLE@gl@@YAXPEAXII@Z
?CompressedTexImage2D@gl@@YAXIHIHHHHPEBX@Z
?CompressedTexImage2DContextANGLE@gl@@YAXPEAXIHIHHHHPEBX@Z
?CompressedTexImage2DRobustANGLE@gl@@YAXIHIHHHHHPEBX@Z
?CompressedTexImage2DRobustANGLEContextANGLE@gl@@YAXPEAXIHIHHHHHPEBX@Z
?CompressedTexImage3D@gl@@YAXIHIHHHHHPEBX@Z
?CompressedTexImage3DContextANGLE@gl@@YAXPEAXIHIHHHHHPEBX@Z
?CompressedTexImage3DRobustANGLE@gl@@YAXIHIHHHHHHPEBX@Z
?CompressedTexImage3DRobustANGLEContextANGLE@gl@@YAXPEAXIHIHHHHHHPEBX@Z
?CompressedTexSubImage2D@gl@@YAXIHHHHHIHPEBX@Z
?CompressedTexSubImage2DContextANGLE@gl@@YAXPEAXIHHHHHIHPEBX@Z
?CompressedTexSubImage2DRobustANGLE@gl@@YAXIHHHHHIHHPEBX@Z
?CompressedTexSubImage2DRobustANGLEContextANGLE@gl@@YAXPEAXIHHHHHIHHPEBX@Z
?CompressedTexSubImage3D@gl@@YAXIHHHHHHHIHPEBX@Z
?CompressedTexSubImage3DContextANGLE@gl@@YAXPEAXIHHHHHHHIHPEBX@Z
?CompressedTexSubImage3DRobustANGLE@gl@@YAXIHHHHHHHIHHPEBX@Z
?CompressedTexSubImage3DRobustANGLEContextANGLE@gl@@YAXPEAXIHHHHHHHIHHPEBX@Z
?CopyBufferSubData@gl@@YAXII_J00@Z
?CopyBufferSubDataContextANGLE@gl@@YAXPEAXII_J11@Z
?CopyBuffers@egl@@YAIPEAX0PEAUHBITMAP__@@@Z
?CopySubTexture3DANGLE@gl@@YAXIHIIHHHHHHHHHHEEE@Z
?CopySubTexture3DANGLEContextANGLE@gl@@YAXPEAXIHIIHHHHHHHHHHEEE@Z
?CopySubTextureCHROMIUM@gl@@YAXIHIIHHHHHHHEEE@Z
?CopySubTextureCHROMIUMContextANGLE@gl@@YAXPEAXIHIIHHHHHHHEEE@Z
?CopyTexImage2D@gl@@YAXIHIHHHHH@Z
?CopyTexImage2DContextANGLE@gl@@YAXPEAXIHIHHHHH@Z
?CopyTexSubImage2D@gl@@YAXIHHHHHHH@Z
?CopyTexSubImage2DContextANGLE@gl@@YAXPEAXIHHHHHHH@Z
?CopyTexSubImage3D@gl@@YAXIHHHHHHHH@Z
?CopyTexSubImage3DContextANGLE@gl@@YAXPEAXIHHHHHHHH@Z
?CopyTexture3DANGLE@gl@@YAXIHIIHHIEEE@Z
?CopyTexture3DANGLEContextANGLE@gl@@YAXPEAXIHIIHHIEEE@Z
?CopyTextureCHROMIUM@gl@@YAXIHIIHHIEEE@Z
?CopyTextureCHROMIUMContextANGLE@gl@@YAXPEAXIHIIHHIEEE@Z
?CoverFillPathCHROMIUM@gl@@YAXII@Z
?CoverFillPathCHROMIUMContextANGLE@gl@@YAXPEAXII@Z
?CoverFillPathInstancedCHROMIUM@gl@@YAXHIPEBXIIIPEBM@Z
?CoverFillPathInstancedCHROMIUMContextANGLE@gl@@YAXPEAXHIPEBXIIIPEBM@Z
?CoverStrokePathCHROMIUM@gl@@YAXII@Z
?CoverStrokePathCHROMIUMContextANGLE@gl@@YAXPEAXII@Z
?CoverStrokePathInstancedCHROMIUM@gl@@YAXHIPEBXIIIPEBM@Z
?CoverStrokePathInstancedCHROMIUMContextANGLE@gl@@YAXPEAXHIPEBXIIIPEBM@Z
?CoverageModulationCHROMIUM@gl@@YAXI@Z
?CoverageModulationCHROMIUMContextANGLE@gl@@YAXPEAXI@Z
?CreateContext@egl@@YAPEAXPEAX00PEBH@Z
?CreateDeviceANGLE@egl@@YAPEAXHPEAXPEB_J@Z
?CreateImage@egl@@YAPEAXPEAX0I0PEB_J@Z
?CreateImageKHR@egl@@YAPEAXPEAX0I0PEBH@Z
?CreatePbufferFromClientBuffer@egl@@YAPEAXPEAXI00PEBH@Z
?CreatePbufferSurface@egl@@YAPEAXPEAX0PEBH@Z
?CreatePixmapSurface@egl@@YAPEAXPEAX0PEAUHBITMAP__@@PEBH@Z
?CreatePlatformPixmapSurface@egl@@YAPEAXPEAX00PEB_J@Z
?CreatePlatformPixmapSurfaceEXT@egl@@YAPEAXPEAX00PEBH@Z
?CreatePlatformWindowSurface@egl@@YAPEAXPEAX00PEB_J@Z
?CreatePlatformWindowSurfaceEXT@egl@@YAPEAXPEAX00PEBH@Z
?CreateProgram@gl@@YAIXZ
?CreateProgramContextANGLE@gl@@YAIPEAX@Z
?CreateShader@gl@@YAII@Z
?CreateShaderContextANGLE@gl@@YAIPEAXI@Z
?CreateShaderProgramv@gl@@YAIIHPEBQEBD@Z
?CreateShaderProgramvContextANGLE@gl@@YAIPEAXIHPEBQEBD@Z
?CreateStreamKHR@egl@@YAPEAXPEAXPEBH@Z
?CreateStreamProducerD3DTextureANGLE@egl@@YAIPEAX0PEB_J@Z
?CreateSync@egl@@YAPEAXPEAXIPEB_J@Z
?CreateWindowSurface@egl@@YAPEAXPEAX0PEAUHWND__@@PEBH@Z
?Cu2fD9
?CullFace@gl@@YAXI@Z
?CullFaceContextANGLE@gl@@YAXPEAXI@Z
?CurrentPaletteMatrixOES@gl@@YAXI@Z
?CurrentPaletteMatrixOESContextANGLE@gl@@YAXPEAXI@Z
?D8d$8
?DebugMessageCallbackKHR@gl@@YAXP6AXIIIIHPEBDPEBX@Z1@Z
?DebugMessageCallbackKHRContextANGLE@gl@@YAXPEAXP6AXIIIIHPEBDPEBX@Z2@Z
?DebugMessageControlKHR@egl@@YAHP6AXIPEBDHPEAX10@ZPEB_J@Z
?DebugMessageControlKHR@gl@@YAXIIIHPEBIE@Z
?DebugMessageControlKHRContextANGLE@gl@@YAXPEAXIIIHPEBIE@Z
?DebugMessageInsertKHR@gl@@YAXIIIIHPEBD@Z
?DebugMessageInsertKHRContextANGLE@gl@@YAXPEAXIIIIHPEBD@Z
?DeleteBuffers@gl@@YAXHPEBI@Z
?DeleteBuffersContextANGLE@gl@@YAXPEAXHPEBI@Z
?DeleteFencesNV@gl@@YAXHPEBI@Z
?DeleteFencesNVContextANGLE@gl@@YAXPEAXHPEBI@Z
?DeleteFramebuffers@gl@@YAXHPEBI@Z
?DeleteFramebuffersContextANGLE@gl@@YAXPEAXHPEBI@Z
?DeleteFramebuffersOES@gl@@YAXHPEBI@Z
?DeleteFramebuffersOESContextANGLE@gl@@YAXPEAXHPEBI@Z
?DeletePathsCHROMIUM@gl@@YAXIH@Z
?DeletePathsCHROMIUMContextANGLE@gl@@YAXPEAXIH@Z
?DeleteProgram@gl@@YAXI@Z
?DeleteProgramContextANGLE@gl@@YAXPEAXI@Z
?DeleteProgramPipelines@gl@@YAXHPEBI@Z
?DeleteProgramPipelinesContextANGLE@gl@@YAXPEAXHPEBI@Z
?DeleteQueries@gl@@YAXHPEBI@Z
?DeleteQueriesContextANGLE@gl@@YAXPEAXHPEBI@Z
?DeleteQueriesEXT@gl@@YAXHPEBI@Z
?DeleteQueriesEXTContextANGLE@gl@@YAXPEAXHPEBI@Z
?DeleteRenderbuffers@gl@@YAXHPEBI@Z
?DeleteRenderbuffersContextANGLE@gl@@YAXPEAXHPEBI@Z
?DeleteRenderbuffersOES@gl@@YAXHPEBI@Z
?DeleteRenderbuffersOESContextANGLE@gl@@YAXPEAXHPEBI@Z
?DeleteSamplers@gl@@YAXHPEBI@Z
?DeleteSamplersContextANGLE@gl@@YAXPEAXHPEBI@Z
?DeleteShader@gl@@YAXI@Z
?DeleteShaderContextANGLE@gl@@YAXPEAXI@Z
?DeleteSync@gl@@YAXPEAU__GLsync@@@Z
?DeleteSyncContextANGLE@gl@@YAXPEAXPEAU__GLsync@@@Z
?DeleteTextures@gl@@YAXHPEBI@Z
?DeleteTexturesContextANGLE@gl@@YAXPEAXHPEBI@Z
?DeleteTransformFeedbacks@gl@@YAXHPEBI@Z
?DeleteTransformFeedbacksContextANGLE@gl@@YAXPEAXHPEBI@Z
?DeleteVertexArrays@gl@@YAXHPEBI@Z
?DeleteVertexArraysContextANGLE@gl@@YAXPEAXHPEBI@Z
?DeleteVertexArraysOES@gl@@YAXHPEBI@Z
?DeleteVertexArraysOESContextANGLE@gl@@YAXPEAXHPEBI@Z
?DepthFunc@gl@@YAXI@Z
?DepthFuncContextANGLE@gl@@YAXPEAXI@Z
?DepthMask@gl@@YAXE@Z
?DepthMaskContextANGLE@gl@@YAXPEAXE@Z
?DepthRangef@gl@@YAXMM@Z
?DepthRangefContextANGLE@gl@@YAXPEAXMM@Z
?DepthRangex@gl@@YAXHH@Z
?DepthRangexContextANGLE@gl@@YAXPEAXHH@Z
?DestroyContext@egl@@YAIPEAX0@Z
?DestroyImage@egl@@YAIPEAX0@Z
?DestroyImageKHR@egl@@YAIPEAX0@Z
?DestroyStreamKHR@egl@@YAIPEAX0@Z
?DestroySurface@egl@@YAIPEAX0@Z
?DestroySync@egl@@YAIPEAX0@Z
?DetachShader@gl@@YAXII@Z
?DetachShaderContextANGLE@gl@@YAXPEAXII@Z
?Disable@gl@@YAXI@Z
?DisableClientState@gl@@YAXI@Z
?DisableClientStateContextANGLE@gl@@YAXPEAXI@Z
?DisableContextANGLE@gl@@YAXPEAXI@Z
?DisableVertexAttribArray@gl@@YAXI@Z
?DisableVertexAttribArrayContextANGLE@gl@@YAXPEAXI@Z
?DiscardFramebufferEXT@gl@@YAXIHPEBI@Z
?DiscardFramebufferEXTContextANGLE@gl@@YAXPEAXIHPEBI@Z
?DispatchCompute@gl@@YAXIII@Z
?DispatchComputeContextANGLE@gl@@YAXPEAXIII@Z
?DispatchComputeIndirect@gl@@YAX_J@Z
?DispatchComputeIndirectContextANGLE@gl@@YAXPEAX_J@Z
?DrawArrays@gl@@YAXIHH@Z
?DrawArraysContextANGLE@gl@@YAXPEAXIHH@Z
?DrawArraysIndirect@gl@@YAXIPEBX@Z
?DrawArraysIndirectContextANGLE@gl@@YAXPEAXIPEBX@Z
?DrawArraysInstanced@gl@@YAXIHHH@Z
?DrawArraysInstancedANGLE@gl@@YAXIHHH@Z
?DrawArraysInstancedANGLEContextANGLE@gl@@YAXPEAXIHHH@Z
?DrawArraysInstancedContextANGLE@gl@@YAXPEAXIHHH@Z
?DrawBuffers@gl@@YAXHPEBI@Z
?DrawBuffersContextANGLE@gl@@YAXPEAXHPEBI@Z
?DrawBuffersEXT@gl@@YAXHPEBI@Z
?DrawBuffersEXTContextANGLE@gl@@YAXPEAXHPEBI@Z
?DrawElements@gl@@YAXIHIPEBX@Z
?DrawElementsContextANGLE@gl@@YAXPEAXIHIPEBX@Z
?DrawElementsIndirect@gl@@YAXIIPEBX@Z
?DrawElementsIndirectContextANGLE@gl@@YAXPEAXIIPEBX@Z
?DrawElementsInstanced@gl@@YAXIHIPEBXH@Z
?DrawElementsInstancedANGLE@gl@@YAXIHIPEBXH@Z
?DrawElementsInstancedANGLEContextANGLE@gl@@YAXPEAXIHIPEBXH@Z
?DrawElementsInstancedContextANGLE@gl@@YAXPEAXIHIPEBXH@Z
?DrawRangeElements@gl@@YAXIIIHIPEBX@Z
?DrawRangeElementsContextANGLE@gl@@YAXPEAXIIIHIPEBX@Z
?DrawTexfOES@gl@@YAXMMMMM@Z
?DrawTexfOESContextANGLE@gl@@YAXPEAXMMMMM@Z
?DrawTexfvOES@gl@@YAXPEBM@Z
?DrawTexfvOESContextANGLE@gl@@YAXPEAXPEBM@Z
?DrawTexiOES@gl@@YAXHHHHH@Z
?DrawTexiOESContextANGLE@gl@@YAXPEAXHHHHH@Z
?DrawTexivOES@gl@@YAXPEBH@Z
?DrawTexivOESContextANGLE@gl@@YAXPEAXPEBH@Z
?DrawTexsOES@gl@@YAXFFFFF@Z
?DrawTexsOESContextANGLE@gl@@YAXPEAXFFFFF@Z
?DrawTexsvOES@gl@@YAXPEBF@Z
?DrawTexsvOESContextANGLE@gl@@YAXPEAXPEBF@Z
?DrawTexxOES@gl@@YAXHHHHH@Z
?DrawTexxOESContextANGLE@gl@@YAXPEAXHHHHH@Z
?DrawTexxvOES@gl@@YAXPEBH@Z
?DrawTexxvOESContextANGLE@gl@@YAXPEAXPEBH@Z
?E=$% B
?EGLImageTargetRenderbufferStorageOES@gl@@YAXIPEAX@Z
?EGLImageTargetRenderbufferStorageOESContextANGLE@gl@@YAXPEAXI0@Z
?EGLImageTargetTexture2DOES@gl@@YAXIPEAX@Z
?EGLImageTargetTexture2DOESContextANGLE@gl@@YAXPEAXI0@Z
?Enable@gl@@YAXI@Z
?EnableClientState@gl@@YAXI@Z
?EnableClientStateContextANGLE@gl@@YAXPEAXI@Z
?EnableContextANGLE@gl@@YAXPEAXI@Z
?EnableVertexAttribArray@gl@@YAXI@Z
?EnableVertexAttribArrayContextANGLE@gl@@YAXPEAXI@Z
?EndQuery@gl@@YAXI@Z
?EndQueryContextANGLE@gl@@YAXPEAXI@Z
?EndQueryEXT@gl@@YAXI@Z
?EndQueryEXTContextANGLE@gl@@YAXPEAXI@Z
?EndTransformFeedback@gl@@YAXXZ
?EndTransformFeedbackContextANGLE@gl@@YAXPEAX@Z
?FenceSync@gl@@YAPEAU__GLsync@@II@Z
?FenceSyncContextANGLE@gl@@YAPEAU__GLsync@@PEAXII@Z
?Finish@gl@@YAXXZ
?FinishContextANGLE@gl@@YAXPEAX@Z
?FinishFenceNV@gl@@YAXI@Z
?FinishFenceNVContextANGLE@gl@@YAXPEAXI@Z
?Flush@gl@@YAXXZ
?FlushContextANGLE@gl@@YAXPEAX@Z
?FlushMappedBufferRange@gl@@YAXI_J0@Z
?FlushMappedBufferRangeContextANGLE@gl@@YAXPEAXI_J1@Z
?FlushMappedBufferRangeEXT@gl@@YAXI_J0@Z
?FlushMappedBufferRangeEXTContextANGLE@gl@@YAXPEAXI_J1@Z
?Fogf@gl@@YAXIM@Z
?FogfContextANGLE@gl@@YAXPEAXIM@Z
?Fogfv@gl@@YAXIPEBM@Z
?FogfvContextANGLE@gl@@YAXPEAXIPEBM@Z
?Fogx@gl@@YAXIH@Z
?FogxContextANGLE@gl@@YAXPEAXIH@Z
?Fogxv@gl@@YAXIPEBH@Z
?FogxvContextANGLE@gl@@YAXPEAXIPEBH@Z
?FramebufferParameteri@gl@@YAXIIH@Z
?FramebufferParameteriContextANGLE@gl@@YAXPEAXIIH@Z
?FramebufferRenderbuffer@gl@@YAXIIII@Z
?FramebufferRenderbufferContextANGLE@gl@@YAXPEAXIIII@Z
?FramebufferRenderbufferOES@gl@@YAXIIII@Z
?FramebufferRenderbufferOESContextANGLE@gl@@YAXPEAXIIII@Z
?FramebufferTexture2D@gl@@YAXIIIIH@Z
?FramebufferTexture2DContextANGLE@gl@@YAXPEAXIIIIH@Z
?FramebufferTexture2DOES@gl@@YAXIIIIH@Z
?FramebufferTexture2DOESContextANGLE@gl@@YAXPEAXIIIIH@Z
?FramebufferTextureEXT@gl@@YAXIIIH@Z
?FramebufferTextureEXTContextANGLE@gl@@YAXPEAXIIIH@Z
?FramebufferTextureLayer@gl@@YAXIIIHH@Z
?FramebufferTextureLayerContextANGLE@gl@@YAXPEAXIIIHH@Z
?FramebufferTextureMultiviewLayeredANGLE@gl@@YAXIIIHHH@Z
?FramebufferTextureMultiviewLayeredANGLEContextANGLE@gl@@YAXPEAXIIIHHH@Z
?FramebufferTextureMultiviewSideBySideANGLE@gl@@YAXIIIHHPEBH@Z
?FramebufferTextureMultiviewSideBySideANGLEContextANGLE@gl@@YAXPEAXIIIHHPEBH@Z
?FrontFace@gl@@YAXI@Z
?FrontFaceContextANGLE@gl@@YAXPEAXI@Z
?Frustumf@gl@@YAXMMMMMM@Z
?FrustumfContextANGLE@gl@@YAXPEAXMMMMMM@Z
?Frustumx@gl@@YAXHHHHHH@Z
?FrustumxContextANGLE@gl@@YAXPEAXHHHHHH@Z
?GenBuffers@gl@@YAXHPEAI@Z
?GenBuffersContextANGLE@gl@@YAXPEAXHPEAI@Z
?GenFencesNV@gl@@YAXHPEAI@Z
?GenFencesNVContextANGLE@gl@@YAXPEAXHPEAI@Z
?GenFramebuffers@gl@@YAXHPEAI@Z
?GenFramebuffersContextANGLE@gl@@YAXPEAXHPEAI@Z
?GenFramebuffersOES@gl@@YAXHPEAI@Z
?GenFramebuffersOESContextANGLE@gl@@YAXPEAXHPEAI@Z
?GenPathsCHROMIUM@gl@@YAIH@Z
?GenPathsCHROMIUMContextANGLE@gl@@YAIPEAXH@Z
?GenProgramPipelines@gl@@YAXHPEAI@Z
?GenProgramPipelinesContextANGLE@gl@@YAXPEAXHPEAI@Z
?GenQueries@gl@@YAXHPEAI@Z
?GenQueriesContextANGLE@gl@@YAXPEAXHPEAI@Z
?GenQueriesEXT@gl@@YAXHPEAI@Z
?GenQueriesEXTContextANGLE@gl@@YAXPEAXHPEAI@Z
?GenRenderbuffers@gl@@YAXHPEAI@Z
?GenRenderbuffersContextANGLE@gl@@YAXPEAXHPEAI@Z
?GenRenderbuffersOES@gl@@YAXHPEAI@Z
?GenRenderbuffersOESContextANGLE@gl@@YAXPEAXHPEAI@Z
?GenSamplers@gl@@YAXHPEAI@Z
?GenSamplersContextANGLE@gl@@YAXPEAXHPEAI@Z
?GenTextures@gl@@YAXHPEAI@Z
?GenTexturesContextANGLE@gl@@YAXPEAXHPEAI@Z
?GenTransformFeedbacks@gl@@YAXHPEAI@Z
?GenTransformFeedbacksContextANGLE@gl@@YAXPEAXHPEAI@Z
?GenVertexArrays@gl@@YAXHPEAI@Z
?GenVertexArraysContextANGLE@gl@@YAXPEAXHPEAI@Z
?GenVertexArraysOES@gl@@YAXHPEAI@Z
?GenVertexArraysOESContextANGLE@gl@@YAXPEAXHPEAI@Z
?GenerateMipmap@gl@@YAXI@Z
?GenerateMipmapContextANGLE@gl@@YAXPEAXI@Z
?GenerateMipmapOES@gl@@YAXI@Z
?GenerateMipmapOESContextANGLE@gl@@YAXPEAXI@Z
?GetActiveAttrib@gl@@YAXIIHPEAH0PEAIPEAD@Z
?GetActiveAttribContextANGLE@gl@@YAXPEAXIIHPEAH1PEAIPEAD@Z
?GetActiveUniform@gl@@YAXIIHPEAH0PEAIPEAD@Z
?GetActiveUniformBlockName@gl@@YAXIIHPEAHPEAD@Z
?GetActiveUniformBlockNameContextANGLE@gl@@YAXPEAXIIHPEAHPEAD@Z
?GetActiveUniformBlockiv@gl@@YAXIIIPEAH@Z
?GetActiveUniformBlockivContextANGLE@gl@@YAXPEAXIIIPEAH@Z
?GetActiveUniformBlockivRobustANGLE@gl@@YAXIIIHPEAH0@Z
?GetActiveUniformBlockivRobustANGLEContextANGLE@gl@@YAXPEAXIIIHPEAH1@Z
?GetActiveUniformContextANGLE@gl@@YAXPEAXIIHPEAH1PEAIPEAD@Z
?GetActiveUniformsiv@gl@@YAXIHPEBIIPEAH@Z
?GetActiveUniformsivContextANGLE@gl@@YAXPEAXIHPEBIIPEAH@Z
?GetAttachedShaders@gl@@YAXIHPEAHPEAI@Z
?GetAttachedShadersContextANGLE@gl@@YAXPEAXIHPEAHPEAI@Z
?GetAttribLocation@gl@@YAHIPEBD@Z
?GetAttribLocationContextANGLE@gl@@YAHPEAXIPEBD@Z
?GetBooleani_v@gl@@YAXIIPEAE@Z
?GetBooleani_vContextANGLE@gl@@YAXPEAXIIPEAE@Z
?GetBooleani_vRobustANGLE@gl@@YAXIIHPEAHPEAE@Z
?GetBooleani_vRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAHPEAE@Z
?GetBooleanv@gl@@YAXIPEAE@Z
?GetBooleanvContextANGLE@gl@@YAXPEAXIPEAE@Z
?GetBooleanvRobustANGLE@gl@@YAXIHPEAHPEAE@Z
?GetBooleanvRobustANGLEContextANGLE@gl@@YAXPEAXIHPEAHPEAE@Z
?GetBufferParameteri64v@gl@@YAXIIPEA_J@Z
?GetBufferParameteri64vContextANGLE@gl@@YAXPEAXIIPEA_J@Z
?GetBufferParameteri64vRobustANGLE@gl@@YAXIIHPEAHPEA_J@Z
?GetBufferParameteri64vRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAHPEA_J@Z
?GetBufferParameteriv@gl@@YAXIIPEAH@Z
?GetBufferParameterivContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetBufferParameterivRobustANGLE@gl@@YAXIIHPEAH0@Z
?GetBufferParameterivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAH1@Z
?GetBufferPointerv@gl@@YAXIIPEAPEAX@Z
?GetBufferPointervContextANGLE@gl@@YAXPEAXIIPEAPEAX@Z
?GetBufferPointervOES@gl@@YAXIIPEAPEAX@Z
?GetBufferPointervOESContextANGLE@gl@@YAXPEAXIIPEAPEAX@Z
?GetBufferPointervRobustANGLE@gl@@YAXIIHPEAHPEAPEAX@Z
?GetBufferPointervRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAHPEAPEAX@Z
?GetClipPlanef@gl@@YAXIPEAM@Z
?GetClipPlanefContextANGLE@gl@@YAXPEAXIPEAM@Z
?GetClipPlanex@gl@@YAXIPEAH@Z
?GetClipPlanexContextANGLE@gl@@YAXPEAXIPEAH@Z
?GetConfigAttrib@egl@@YAIPEAX0HPEAH@Z
?GetConfigs@egl@@YAIPEAXPEAPEAXHPEAH@Z
?GetCurrentContext@egl@@YAPEAXXZ
?GetCurrentDisplay@egl@@YAPEAXXZ
?GetCurrentSurface@egl@@YAPEAXH@Z
?GetDebugMessageLogKHR@gl@@YAIIHPEAI000PEAHPEAD@Z
?GetDebugMessageLogKHRContextANGLE@gl@@YAIPEAXIHPEAI111PEAHPEAD@Z
?GetDisplay@egl@@YAPEAXPEAUHDC__@@@Z
?GetError@egl@@YAHXZ
?GetError@gl@@YAIXZ
?GetErrorContextANGLE@gl@@YAIPEAX@Z
?GetFenceivNV@gl@@YAXIIPEAH@Z
?GetFenceivNVContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetFixedv@gl@@YAXIPEAH@Z
?GetFixedvContextANGLE@gl@@YAXPEAXIPEAH@Z
?GetFloatv@gl@@YAXIPEAM@Z
?GetFloatvContextANGLE@gl@@YAXPEAXIPEAM@Z
?GetFloatvRobustANGLE@gl@@YAXIHPEAHPEAM@Z
?GetFloatvRobustANGLEContextANGLE@gl@@YAXPEAXIHPEAHPEAM@Z
?GetFragDataIndexEXT@gl@@YAHIPEBD@Z
?GetFragDataIndexEXTContextANGLE@gl@@YAHPEAXIPEBD@Z
?GetFragDataLocation@gl@@YAHIPEBD@Z
?GetFragDataLocationContextANGLE@gl@@YAHPEAXIPEBD@Z
?GetFramebufferAttachmentParameteriv@gl@@YAXIIIPEAH@Z
?GetFramebufferAttachmentParameterivContextANGLE@gl@@YAXPEAXIIIPEAH@Z
?GetFramebufferAttachmentParameterivOES@gl@@YAXIIIPEAH@Z
?GetFramebufferAttachmentParameterivOESContextANGLE@gl@@YAXPEAXIIIPEAH@Z
?GetFramebufferAttachmentParameterivRobustANGLE@gl@@YAXIIIHPEAH0@Z
?GetFramebufferAttachmentParameterivRobustANGLEContextANGLE@gl@@YAXPEAXIIIHPEAH1@Z
?GetFramebufferParameteriv@gl@@YAXIIPEAH@Z
?GetFramebufferParameterivContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetFramebufferParameterivRobustANGLE@gl@@YAXIIHPEAH0@Z
?GetFramebufferParameterivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAH1@Z
?GetGraphicsResetStatusEXT@gl@@YAIXZ
?GetGraphicsResetStatusEXTContextANGLE@gl@@YAIPEAX@Z
?GetInteger64i_v@gl@@YAXIIPEA_J@Z
?GetInteger64i_vContextANGLE@gl@@YAXPEAXIIPEA_J@Z
?GetInteger64i_vRobustANGLE@gl@@YAXIIHPEAHPEA_J@Z
?GetInteger64i_vRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAHPEA_J@Z
?GetInteger64v@gl@@YAXIPEA_J@Z
?GetInteger64vContextANGLE@gl@@YAXPEAXIPEA_J@Z
?GetInteger64vRobustANGLE@gl@@YAXIHPEAHPEA_J@Z
?GetInteger64vRobustANGLEContextANGLE@gl@@YAXPEAXIHPEAHPEA_J@Z
?GetIntegeri_v@gl@@YAXIIPEAH@Z
?GetIntegeri_vContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetIntegeri_vRobustANGLE@gl@@YAXIIHPEAH0@Z
?GetIntegeri_vRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAH1@Z
?GetIntegerv@gl@@YAXIPEAH@Z
?GetIntegervContextANGLE@gl@@YAXPEAXIPEAH@Z
?GetIntegervRobustANGLE@gl@@YAXIHPEAH0@Z
?GetIntegervRobustANGLEContextANGLE@gl@@YAXPEAXIHPEAH1@Z
?GetInternalformativ@gl@@YAXIIIHPEAH@Z
?GetInternalformativContextANGLE@gl@@YAXPEAXIIIHPEAH@Z
?GetInternalformativRobustANGLE@gl@@YAXIIIHPEAH0@Z
?GetInternalformativRobustANGLEContextANGLE@gl@@YAXPEAXIIIHPEAH1@Z
?GetLightfv@gl@@YAXIIPEAM@Z
?GetLightfvContextANGLE@gl@@YAXPEAXIIPEAM@Z
?GetLightxv@gl@@YAXIIPEAH@Z
?GetLightxvContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetMaterialfv@gl@@YAXIIPEAM@Z
?GetMaterialfvContextANGLE@gl@@YAXPEAXIIPEAM@Z
?GetMaterialxv@gl@@YAXIIPEAH@Z
?GetMaterialxvContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetMultisamplefv@gl@@YAXIIPEAM@Z
?GetMultisamplefvContextANGLE@gl@@YAXPEAXIIPEAM@Z
?GetMultisamplefvRobustANGLE@gl@@YAXIIHPEAHPEAM@Z
?GetMultisamplefvRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAHPEAM@Z
?GetObjectLabelKHR@gl@@YAXIIHPEAHPEAD@Z
?GetObjectLabelKHRContextANGLE@gl@@YAXPEAXIIHPEAHPEAD@Z
?GetObjectPtrLabelKHR@gl@@YAXPEBXHPEAHPEAD@Z
?GetObjectPtrLabelKHRContextANGLE@gl@@YAXPEAXPEBXHPEAHPEAD@Z
?GetPathParameterfvCHROMIUM@gl@@YAXIIPEAM@Z
?GetPathParameterfvCHROMIUMContextANGLE@gl@@YAXPEAXIIPEAM@Z
?GetPathParameterivCHROMIUM@gl@@YAXIIPEAH@Z
?GetPathParameterivCHROMIUMContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetPlatformDisplay@egl@@YAPEAXIPEAXPEB_J@Z
?GetPlatformDisplayEXT@egl@@YAPEAXIPEAXPEBH@Z
?GetPointerv@gl@@YAXIPEAPEAX@Z
?GetPointervContextANGLE@gl@@YAXPEAXIPEAPEAX@Z
?GetPointervKHR@gl@@YAXIPEAPEAX@Z
?GetPointervKHRContextANGLE@gl@@YAXPEAXIPEAPEAX@Z
?GetPointervRobustANGLERobustANGLE@gl@@YAXIHPEAHPEAPEAX@Z
?GetPointervRobustANGLERobustANGLEContextANGLE@gl@@YAXPEAXIHPEAHPEAPEAX@Z
?GetProcAddress@egl@@YAP6AXXZPEBD@Z
?GetProgramBinary@gl@@YAXIHPEAHPEAIPEAX@Z
?GetProgramBinaryContextANGLE@gl@@YAXPEAXIHPEAHPEAI0@Z
?GetProgramBinaryOES@gl@@YAXIHPEAHPEAIPEAX@Z
?GetProgramBinaryOESContextANGLE@gl@@YAXPEAXIHPEAHPEAI0@Z
?GetProgramInfoLog@gl@@YAXIHPEAHPEAD@Z
?GetProgramInfoLogContextANGLE@gl@@YAXPEAXIHPEAHPEAD@Z
?GetProgramInterfaceiv@gl@@YAXIIIPEAH@Z
?GetProgramInterfaceivContextANGLE@gl@@YAXPEAXIIIPEAH@Z
?GetProgramInterfaceivRobustANGLE@gl@@YAXIIIHPEAH0@Z
?GetProgramInterfaceivRobustANGLEContextANGLE@gl@@YAXPEAXIIIHPEAH1@Z
?GetProgramPipelineInfoLog@gl@@YAXIHPEAHPEAD@Z
?GetProgramPipelineInfoLogContextANGLE@gl@@YAXPEAXIHPEAHPEAD@Z
?GetProgramPipelineiv@gl@@YAXIIPEAH@Z
?GetProgramPipelineivContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetProgramResourceIndex@gl@@YAIIIPEBD@Z
?GetProgramResourceIndexContextANGLE@gl@@YAIPEAXIIPEBD@Z
?GetProgramResourceLocation@gl@@YAHIIPEBD@Z
?GetProgramResourceLocationContextANGLE@gl@@YAHPEAXIIPEBD@Z
?GetProgramResourceLocationIndexEXT@gl@@YAHIIPEBD@Z
?GetProgramResourceLocationIndexEXTContextANGLE@gl@@YAHPEAXIIPEBD@Z
?GetProgramResourceName@gl@@YAXIIIHPEAHPEAD@Z
?GetProgramResourceNameContextANGLE@gl@@YAXPEAXIIIHPEAHPEAD@Z
?GetProgramResourceiv@gl@@YAXIIIHPEBIHPEAH1@Z
?GetProgramResourceivContextANGLE@gl@@YAXPEAXIIIHPEBIHPEAH2@Z
?GetProgramiv@gl@@YAXIIPEAH@Z
?GetProgramivContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetProgramivRobustANGLE@gl@@YAXIIHPEAH0@Z
?GetProgramivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAH1@Z
?GetQueryObjecti64vEXT@gl@@YAXIIPEA_J@Z
?GetQueryObjecti64vEXTContextANGLE@gl@@YAXPEAXIIPEA_J@Z
?GetQueryObjecti64vRobustANGLE@gl@@YAXIIHPEAHPEA_J@Z
?GetQueryObjecti64vRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAHPEA_J@Z
?GetQueryObjectivEXT@gl@@YAXIIPEAH@Z
?GetQueryObjectivEXTContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetQueryObjectivRobustANGLE@gl@@YAXIIHPEAH0@Z
?GetQueryObjectivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAH1@Z
?GetQueryObjectui64vEXT@gl@@YAXIIPEA_K@Z
?GetQueryObjectui64vEXTContextANGLE@gl@@YAXPEAXIIPEA_K@Z
?GetQueryObjectui64vRobustANGLE@gl@@YAXIIHPEAHPEA_K@Z
?GetQueryObjectui64vRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAHPEA_K@Z
?GetQueryObjectuiv@gl@@YAXIIPEAI@Z
?GetQueryObjectuivContextANGLE@gl@@YAXPEAXIIPEAI@Z
?GetQueryObjectuivEXT@gl@@YAXIIPEAI@Z
?GetQueryObjectuivEXTContextANGLE@gl@@YAXPEAXIIPEAI@Z
?GetQueryObjectuivRobustANGLE@gl@@YAXIIHPEAHPEAI@Z
?GetQueryObjectuivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAHPEAI@Z
?GetQueryiv@gl@@YAXIIPEAH@Z
?GetQueryivContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetQueryivEXT@gl@@YAXIIPEAH@Z
?GetQueryivEXTContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetQueryivRobustANGLE@gl@@YAXIIHPEAH0@Z
?GetQueryivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAH1@Z
?GetRenderbufferParameteriv@gl@@YAXIIPEAH@Z
?GetRenderbufferParameterivContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetRenderbufferParameterivOES@gl@@YAXIIPEAH@Z
?GetRenderbufferParameterivOESContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetRenderbufferParameterivRobustANGLE@gl@@YAXIIHPEAH0@Z
?GetRenderbufferParameterivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAH1@Z
?GetSamplerParameterIivRobustANGLE@gl@@YAXIIHPEAH0@Z
?GetSamplerParameterIivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAH1@Z
?GetSamplerParameterIuivRobustANGLE@gl@@YAXIIHPEAHPEAI@Z
?GetSamplerParameterIuivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAHPEAI@Z
?GetSamplerParameterfv@gl@@YAXIIPEAM@Z
?GetSamplerParameterfvContextANGLE@gl@@YAXPEAXIIPEAM@Z
?GetSamplerParameterfvRobustANGLE@gl@@YAXIIHPEAHPEAM@Z
?GetSamplerParameterfvRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAHPEAM@Z
?GetSamplerParameteriv@gl@@YAXIIPEAH@Z
?GetSamplerParameterivContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetSamplerParameterivRobustANGLE@gl@@YAXIIHPEAH0@Z
?GetSamplerParameterivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAH1@Z
?GetShaderInfoLog@gl@@YAXIHPEAHPEAD@Z
?GetShaderInfoLogContextANGLE@gl@@YAXPEAXIHPEAHPEAD@Z
?GetShaderPrecisionFormat@gl@@YAXIIPEAH0@Z
?GetShaderPrecisionFormatContextANGLE@gl@@YAXPEAXIIPEAH1@Z
?GetShaderSource@gl@@YAXIHPEAHPEAD@Z
?GetShaderSourceContextANGLE@gl@@YAXPEAXIHPEAHPEAD@Z
?GetShaderiv@gl@@YAXIIPEAH@Z
?GetShaderivContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetShaderivRobustANGLE@gl@@YAXIIHPEAH0@Z
?GetShaderivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAH1@Z
?GetString@gl@@YAPEBEI@Z
?GetStringContextANGLE@gl@@YAPEBEPEAXI@Z
?GetStringi@gl@@YAPEBEII@Z
?GetStringiContextANGLE@gl@@YAPEBEPEAXII@Z
?GetSyncAttrib@egl@@YAIPEAX0HPEA_J@Z
?GetSyncValuesCHROMIUM@egl@@YAIPEAX0PEA_K11@Z
?GetSynciv@gl@@YAXPEAU__GLsync@@IHPEAH1@Z
?GetSyncivContextANGLE@gl@@YAXPEAXPEAU__GLsync@@IHPEAH2@Z
?GetTexEnvfv@gl@@YAXIIPEAM@Z
?GetTexEnvfvContextANGLE@gl@@YAXPEAXIIPEAM@Z
?GetTexEnviv@gl@@YAXIIPEAH@Z
?GetTexEnvivContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetTexEnvxv@gl@@YAXIIPEAH@Z
?GetTexEnvxvContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetTexGenfvOES@gl@@YAXIIPEAM@Z
?GetTexGenfvOESContextANGLE@gl@@YAXPEAXIIPEAM@Z
?GetTexGenivOES@gl@@YAXIIPEAH@Z
?GetTexGenivOESContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetTexGenxvOES@gl@@YAXIIPEAH@Z
?GetTexGenxvOESContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetTexLevelParameterfv@gl@@YAXIHIPEAM@Z
?GetTexLevelParameterfvContextANGLE@gl@@YAXPEAXIHIPEAM@Z
?GetTexLevelParameterfvRobustANGLE@gl@@YAXIHIHPEAHPEAM@Z
?GetTexLevelParameterfvRobustANGLEContextANGLE@gl@@YAXPEAXIHIHPEAHPEAM@Z
?GetTexLevelParameteriv@gl@@YAXIHIPEAH@Z
?GetTexLevelParameterivContextANGLE@gl@@YAXPEAXIHIPEAH@Z
?GetTexLevelParameterivRobustANGLE@gl@@YAXIHIHPEAH0@Z
?GetTexLevelParameterivRobustANGLEContextANGLE@gl@@YAXPEAXIHIHPEAH1@Z
?GetTexParameterIivRobustANGLE@gl@@YAXIIHPEAH0@Z
?GetTexParameterIivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAH1@Z
?GetTexParameterIuivRobustANGLE@gl@@YAXIIHPEAHPEAI@Z
?GetTexParameterIuivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAHPEAI@Z
?GetTexParameterfv@gl@@YAXIIPEAM@Z
?GetTexParameterfvContextANGLE@gl@@YAXPEAXIIPEAM@Z
?GetTexParameterfvRobustANGLE@gl@@YAXIIHPEAHPEAM@Z
?GetTexParameterfvRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAHPEAM@Z
?GetTexParameteriv@gl@@YAXIIPEAH@Z
?GetTexParameterivContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetTexParameterivRobustANGLE@gl@@YAXIIHPEAH0@Z
?GetTexParameterivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAH1@Z
?GetTexParameterxv@gl@@YAXIIPEAH@Z
?GetTexParameterxvContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetTransformFeedbackVarying@gl@@YAXIIHPEAH0PEAIPEAD@Z
?GetTransformFeedbackVaryingContextANGLE@gl@@YAXPEAXIIHPEAH1PEAIPEAD@Z
?GetTranslatedShaderSourceANGLE@gl@@YAXIHPEAHPEAD@Z
?GetTranslatedShaderSourceANGLEContextANGLE@gl@@YAXPEAXIHPEAHPEAD@Z
?GetUniformBlockIndex@gl@@YAIIPEBD@Z
?GetUniformBlockIndexContextANGLE@gl@@YAIPEAXIPEBD@Z
?GetUniformIndices@gl@@YAXIHPEBQEBDPEAI@Z
?GetUniformIndicesContextANGLE@gl@@YAXPEAXIHPEBQEBDPEAI@Z
?GetUniformLocation@gl@@YAHIPEBD@Z
?GetUniformLocationContextANGLE@gl@@YAHPEAXIPEBD@Z
?GetUniformfv@gl@@YAXIHPEAM@Z
?GetUniformfvContextANGLE@gl@@YAXPEAXIHPEAM@Z
?GetUniformfvRobustANGLE@gl@@YAXIHHPEAHPEAM@Z
?GetUniformfvRobustANGLEContextANGLE@gl@@YAXPEAXIHHPEAHPEAM@Z
?GetUniformiv@gl@@YAXIHPEAH@Z
?GetUniformivContextANGLE@gl@@YAXPEAXIHPEAH@Z
?GetUniformivRobustANGLE@gl@@YAXIHHPEAH0@Z
?GetUniformivRobustANGLEContextANGLE@gl@@YAXPEAXIHHPEAH1@Z
?GetUniformuiv@gl@@YAXIHPEAI@Z
?GetUniformuivContextANGLE@gl@@YAXPEAXIHPEAI@Z
?GetUniformuivRobustANGLE@gl@@YAXIHHPEAHPEAI@Z
?GetUniformuivRobustANGLEContextANGLE@gl@@YAXPEAXIHHPEAHPEAI@Z
?GetVertexAttribIiv@gl@@YAXIIPEAH@Z
?GetVertexAttribIivContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetVertexAttribIivRobustANGLE@gl@@YAXIIHPEAH0@Z
?GetVertexAttribIivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAH1@Z
?GetVertexAttribIuiv@gl@@YAXIIPEAI@Z
?GetVertexAttribIuivContextANGLE@gl@@YAXPEAXIIPEAI@Z
?GetVertexAttribIuivRobustANGLE@gl@@YAXIIHPEAHPEAI@Z
?GetVertexAttribIuivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAHPEAI@Z
?GetVertexAttribPointerv@gl@@YAXIIPEAPEAX@Z
?GetVertexAttribPointervContextANGLE@gl@@YAXPEAXIIPEAPEAX@Z
?GetVertexAttribPointervRobustANGLE@gl@@YAXIIHPEAHPEAPEAX@Z
?GetVertexAttribPointervRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAHPEAPEAX@Z
?GetVertexAttribfv@gl@@YAXIIPEAM@Z
?GetVertexAttribfvContextANGLE@gl@@YAXPEAXIIPEAM@Z
?GetVertexAttribfvRobustANGLE@gl@@YAXIIHPEAHPEAM@Z
?GetVertexAttribfvRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAHPEAM@Z
?GetVertexAttribiv@gl@@YAXIIPEAH@Z
?GetVertexAttribivContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetVertexAttribivRobustANGLE@gl@@YAXIIHPEAH0@Z
?GetVertexAttribivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAH1@Z
?GetnUniformfvEXT@gl@@YAXIHHPEAM@Z
?GetnUniformfvEXTContextANGLE@gl@@YAXPEAXIHHPEAM@Z
?GetnUniformfvRobustANGLE@gl@@YAXIHHPEAHPEAM@Z
?GetnUniformfvRobustANGLEContextANGLE@gl@@YAXPEAXIHHPEAHPEAM@Z
?GetnUniformivEXT@gl@@YAXIHHPEAH@Z
?GetnUniformivEXTContextANGLE@gl@@YAXPEAXIHHPEAH@Z
?GetnUniformivRobustANGLE@gl@@YAXIHHPEAH0@Z
?GetnUniformivRobustANGLEContextANGLE@gl@@YAXPEAXIHHPEAH1@Z
?GetnUniformuivRobustANGLE@gl@@YAXIHHPEAHPEAI@Z
?GetnUniformuivRobustANGLEContextANGLE@gl@@YAXPEAXIHHPEAHPEAI@Z
?Hint@gl@@YAXII@Z
?HintContextANGLE@gl@@YAXPEAXII@Z
?I9>u
?Initialize@egl@@YAIPEAXPEAH1@Z
?InsertEventMarkerEXT@gl@@YAXHPEBD@Z
?InsertEventMarkerEXTContextANGLE@gl@@YAXPEAXHPEBD@Z
?InvalidateFramebuffer@gl@@YAXIHPEBI@Z
?InvalidateFramebufferContextANGLE@gl@@YAXPEAXIHPEBI@Z
?InvalidateSubFramebuffer@gl@@YAXIHPEBIHHHH@Z
?InvalidateSubFramebufferContextANGLE@gl@@YAXPEAXIHPEBIHHHH@Z
?IsBuffer@gl@@YAEI@Z
?IsBufferContextANGLE@gl@@YAEPEAXI@Z
?IsEnabled@gl@@YAEI@Z
?IsEnabledContextANGLE@gl@@YAEPEAXI@Z
?IsFenceNV@gl@@YAEI@Z
?IsFenceNVContextANGLE@gl@@YAEPEAXI@Z
?IsFramebuffer@gl@@YAEI@Z
?IsFramebufferContextANGLE@gl@@YAEPEAXI@Z
?IsFramebufferOES@gl@@YAEI@Z
?IsFramebufferOESContextANGLE@gl@@YAEPEAXI@Z
?IsPathCHROMIUM@gl@@YAEI@Z
?IsPathCHROMIUMContextANGLE@gl@@YAEPEAXI@Z
?IsProgram@gl@@YAEI@Z
?IsProgramContextANGLE@gl@@YAEPEAXI@Z
?IsProgramPipeline@gl@@YAEI@Z
?IsProgramPipelineContextANGLE@gl@@YAEPEAXI@Z
?IsQuery@gl@@YAEI@Z
?IsQueryContextANGLE@gl@@YAEPEAXI@Z
?IsQueryEXT@gl@@YAEI@Z
?IsQueryEXTContextANGLE@gl@@YAEPEAXI@Z
?IsRenderbuffer@gl@@YAEI@Z
?IsRenderbufferContextANGLE@gl@@YAEPEAXI@Z
?IsRenderbufferOES@gl@@YAEI@Z
?IsRenderbufferOESContextANGLE@gl@@YAEPEAXI@Z
?IsSampler@gl@@YAEI@Z
?IsSamplerContextANGLE@gl@@YAEPEAXI@Z
?IsShader@gl@@YAEI@Z
?IsShaderContextANGLE@gl@@YAEPEAXI@Z
?IsSync@gl@@YAEPEAU__GLsync@@@Z
?IsSyncContextANGLE@gl@@YAEPEAXPEAU__GLsync@@@Z
?IsTexture@gl@@YAEI@Z
?IsTextureContextANGLE@gl@@YAEPEAXI@Z
?IsTransformFeedback@gl@@YAEI@Z
?IsTransformFeedbackContextANGLE@gl@@YAEPEAXI@Z
?IsVertexArray@gl@@YAEI@Z
?IsVertexArrayContextANGLE@gl@@YAEPEAXI@Z
?IsVertexArrayOES@gl@@YAEI@Z
?IsVertexArrayOESContextANGLE@gl@@YAEPEAXI@Z
?JV8f
?Ji@9
?L;?t
?LLD PDB.
?LabelObjectKHR@egl@@YAHPEAXI00@Z
?LightModelf@gl@@YAXIM@Z
?LightModelfContextANGLE@gl@@YAXPEAXIM@Z
?LightModelfv@gl@@YAXIPEBM@Z
?LightModelfvContextANGLE@gl@@YAXPEAXIPEBM@Z
?LightModelx@gl@@YAXIH@Z
?LightModelxContextANGLE@gl@@YAXPEAXIH@Z
?LightModelxv@gl@@YAXIPEBH@Z
?LightModelxvContextANGLE@gl@@YAXPEAXIPEBH@Z
?Lightf@gl@@YAXIIM@Z
?LightfContextANGLE@gl@@YAXPEAXIIM@Z
?Lightfv@gl@@YAXIIPEBM@Z
?LightfvContextANGLE@gl@@YAXPEAXIIPEBM@Z
?Lightx@gl@@YAXIIH@Z
?LightxContextANGLE@gl@@YAXPEAXIIH@Z
?Lightxv@gl@@YAXIIPEBH@Z
?LightxvContextANGLE@gl@@YAXPEAXIIPEBH@Z
?LineWidth@gl@@YAXM@Z
?LineWidthContextANGLE@gl@@YAXPEAXM@Z
?LineWidthx@gl@@YAXH@Z
?LineWidthxContextANGLE@gl@@YAXPEAXH@Z
?LinkProgram@gl@@YAXI@Z
?LinkProgramContextANGLE@gl@@YAXPEAXI@Z
?LoadIdentity@gl@@YAXXZ
?LoadIdentityContextANGLE@gl@@YAXPEAX@Z
?LoadMatrixf@gl@@YAXPEBM@Z
?LoadMatrixfContextANGLE@gl@@YAXPEAXPEBM@Z
?LoadMatrixx@gl@@YAXPEBH@Z
?LoadMatrixxContextANGLE@gl@@YAXPEAXPEBH@Z
?LoadPaletteFromModelViewMatrixOES@gl@@YAXXZ
?LoadPaletteFromModelViewMatrixOESContextANGLE@gl@@YAXPEAX@Z
?LogicOp@gl@@YAXI@Z
?LogicOpContextANGLE@gl@@YAXPEAXI@Z
?MakeCurrent@egl@@YAIPEAX000@Z
?MapBufferOES@gl@@YAPEAXII@Z
?MapBufferOESContextANGLE@gl@@YAPEAXPEAXII@Z
?MapBufferRange@gl@@YAPEAXI_J0I@Z
?MapBufferRangeContextANGLE@gl@@YAPEAXPEAXI_J1I@Z
?MapBufferRangeEXT@gl@@YAPEAXI_J0I@Z
?MapBufferRangeEXTContextANGLE@gl@@YAPEAXPEAXI_J1I@Z
?Materialf@gl@@YAXIIM@Z
?MaterialfContextANGLE@gl@@YAXPEAXIIM@Z
?Materialfv@gl@@YAXIIPEBM@Z
?MaterialfvContextANGLE@gl@@YAXPEAXIIPEBM@Z
?Materialx@gl@@YAXIIH@Z
?MaterialxContextANGLE@gl@@YAXPEAXIIH@Z
?Materialxv@gl@@YAXIIPEBH@Z
?MaterialxvContextANGLE@gl@@YAXPEAXIIPEBH@Z
?MatrixIndexPointerOES@gl@@YAXHIHPEBX@Z
?MatrixIndexPointerOESContextANGLE@gl@@YAXPEAXHIHPEBX@Z
?MatrixLoadIdentityCHROMIUM@gl@@YAXI@Z
?MatrixLoadIdentityCHROMIUMContextANGLE@gl@@YAXPEAXI@Z
?MatrixLoadfCHROMIUM@gl@@YAXIPEBM@Z
?MatrixLoadfCHROMIUMContextANGLE@gl@@YAXPEAXIPEBM@Z
?MatrixMode@gl@@YAXI@Z
?MatrixModeContextANGLE@gl@@YAXPEAXI@Z
?MaxShaderCompilerThreadsKHR@gl@@YAXI@Z
?MaxShaderCompilerThreadsKHRContextANGLE@gl@@YAXPEAXI@Z
?MemoryBarrier@gl@@YAXI@Z
?MemoryBarrierByRegion@gl@@YAXI@Z
?MemoryBarrierByRegionContextANGLE@gl@@YAXPEAXI@Z
?MemoryBarrierContextANGLE@gl@@YAXPEAXI@Z
?MultMatrixf@gl@@YAXPEBM@Z
?MultMatrixfContextANGLE@gl@@YAXPEAXPEBM@Z
?MultMatrixx@gl@@YAXPEBH@Z
?MultMatrixxContextANGLE@gl@@YAXPEAXPEBH@Z
?MultiTexCoord4f@gl@@YAXIMMMM@Z
?MultiTexCoord4fContextANGLE@gl@@YAXPEAXIMMMM@Z
?MultiTexCoord4x@gl@@YAXIHHHH@Z
?MultiTexCoord4xContextANGLE@gl@@YAXPEAXIHHHH@Z
?N]TUUU
?Normal3f@gl@@YAXMMM@Z
?Normal3fContextANGLE@gl@@YAXPEAXMMM@Z
?Normal3x@gl@@YAXHHH@Z
?Normal3xContextANGLE@gl@@YAXPEAXHHH@Z
?NormalPointer@gl@@YAXIHPEBX@Z
?NormalPointerContextANGLE@gl@@YAXPEAXIHPEBX@Z
?ObjectLabelKHR@gl@@YAXIIHPEBD@Z
?ObjectLabelKHRContextANGLE@gl@@YAXPEAXIIHPEBD@Z
?ObjectPtrLabelKHR@gl@@YAXPEBXHPEBD@Z
?ObjectPtrLabelKHRContextANGLE@gl@@YAXPEAXPEBXHPEBD@Z
?Orthof@gl@@YAXMMMMMM@Z
?OrthofContextANGLE@gl@@YAXPEAXMMMMMM@Z
?Orthox@gl@@YAXHHHHHH@Z
?OrthoxContextANGLE@gl@@YAXPEAXHHHHHH@Z
?PathCommandsCHROMIUM@gl@@YAXIHPEBEHIPEBX@Z
?PathCommandsCHROMIUMContextANGLE@gl@@YAXPEAXIHPEBEHIPEBX@Z
?PathParameterfCHROMIUM@gl@@YAXIIM@Z
?PathParameterfCHROMIUMContextANGLE@gl@@YAXPEAXIIM@Z
?PathParameteriCHROMIUM@gl@@YAXIIH@Z
?PathParameteriCHROMIUMContextANGLE@gl@@YAXPEAXIIH@Z
?PathStencilFuncCHROMIUM@gl@@YAXIHI@Z
?PathStencilFuncCHROMIUMContextANGLE@gl@@YAXPEAXIHI@Z
?PauseTransformFeedback@gl@@YAXXZ
?PauseTransformFeedbackContextANGLE@gl@@YAXPEAX@Z
?PixelStorei@gl@@YAXIH@Z
?PixelStoreiContextANGLE@gl@@YAXPEAXIH@Z
?PointParameterf@gl@@YAXIM@Z
?PointParameterfContextANGLE@gl@@YAXPEAXIM@Z
?PointParameterfv@gl@@YAXIPEBM@Z
?PointParameterfvContextANGLE@gl@@YAXPEAXIPEBM@Z
?PointParameterx@gl@@YAXIH@Z
?PointParameterxContextANGLE@gl@@YAXPEAXIH@Z
?PointParameterxv@gl@@YAXIPEBH@Z
?PointParameterxvContextANGLE@gl@@YAXPEAXIPEBH@Z
?PointSize@gl@@YAXM@Z
?PointSizeContextANGLE@gl@@YAXPEAXM@Z
?PointSizePointerOES@gl@@YAXIHPEBX@Z
?PointSizePointerOESContextANGLE@gl@@YAXPEAXIHPEBX@Z
?PointSizex@gl@@YAXH@Z
?PointSizexContextANGLE@gl@@YAXPEAXH@Z
?PolygonOffset@gl@@YAXMM@Z
?PolygonOffsetContextANGLE@gl@@YAXPEAXMM@Z
?PolygonOffsetx@gl@@YAXHH@Z
?PolygonOffsetxContextANGLE@gl@@YAXPEAXHH@Z
?PopDebugGroupKHR@gl@@YAXXZ
?PopDebugGroupKHRContextANGLE@gl@@YAXPEAX@Z
?PopGroupMarkerEXT@gl@@YAXXZ
?PopGroupMarkerEXTContextANGLE@gl@@YAXPEAX@Z
?PopMatrix@gl@@YAXXZ
?PopMatrixContextANGLE@gl@@YAXPEAX@Z
?PostSubBufferNV@egl@@YAIPEAX0HHHH@Z
?PresentationTimeANDROID@egl@@YAIPEAX0_J@Z
?ProgramBinary@gl@@YAXIIPEBXH@Z
?ProgramBinaryContextANGLE@gl@@YAXPEAXIIPEBXH@Z
?ProgramBinaryOES@gl@@YAXIIPEBXH@Z
?ProgramBinaryOESContextANGLE@gl@@YAXPEAXIIPEBXH@Z
?ProgramCacheGetAttribANGLE@egl@@YAHPEAXI@Z
?ProgramCachePopulateANGLE@egl@@YAXPEAXPEBXH1H@Z
?ProgramCacheQueryANGLE@egl@@YAXPEAXH0PEAH01@Z
?ProgramCacheResizeANGLE@egl@@YAHPEAXHI@Z
?ProgramParameteri@gl@@YAXIIH@Z
?ProgramParameteriContextANGLE@gl@@YAXPEAXIIH@Z
?ProgramPathFragmentInputGenCHROMIUM@gl@@YAXIHIHPEBM@Z
?ProgramPathFragmentInputGenCHROMIUMContextANGLE@gl@@YAXPEAXIHIHPEBM@Z
?ProgramUniform1f@gl@@YAXIHM@Z
?ProgramUniform1fContextANGLE@gl@@YAXPEAXIHM@Z
?ProgramUniform1fv@gl@@YAXIHHPEBM@Z
?ProgramUniform1fvContextANGLE@gl@@YAXPEAXIHHPEBM@Z
?ProgramUniform1i@gl@@YAXIHH@Z
?ProgramUniform1iContextANGLE@gl@@YAXPEAXIHH@Z
?ProgramUniform1iv@gl@@YAXIHHPEBH@Z
?ProgramUniform1ivContextANGLE@gl@@YAXPEAXIHHPEBH@Z
?ProgramUniform1ui@gl@@YAXIHI@Z
?ProgramUniform1uiContextANGLE@gl@@YAXPEAXIHI@Z
?ProgramUniform1uiv@gl@@YAXIHHPEBI@Z
?ProgramUniform1uivContextANGLE@gl@@YAXPEAXIHHPEBI@Z
?ProgramUniform2f@gl@@YAXIHMM@Z
?ProgramUniform2fContextANGLE@gl@@YAXPEAXIHMM@Z
?ProgramUniform2fv@gl@@YAXIHHPEBM@Z
?ProgramUniform2fvContextANGLE@gl@@YAXPEAXIHHPEBM@Z
?ProgramUniform2i@gl@@YAXIHHH@Z
?ProgramUniform2iContextANGLE@gl@@YAXPEAXIHHH@Z
?ProgramUniform2iv@gl@@YAXIHHPEBH@Z
?ProgramUniform2ivContextANGLE@gl@@YAXPEAXIHHPEBH@Z
?ProgramUniform2ui@gl@@YAXIHII@Z
?ProgramUniform2uiContextANGLE@gl@@YAXPEAXIHII@Z
?ProgramUniform2uiv@gl@@YAXIHHPEBI@Z
?ProgramUniform2uivContextANGLE@gl@@YAXPEAXIHHPEBI@Z
?ProgramUniform3f@gl@@YAXIHMMM@Z
?ProgramUniform3fContextANGLE@gl@@YAXPEAXIHMMM@Z
?ProgramUniform3fv@gl@@YAXIHHPEBM@Z
?ProgramUniform3fvContextANGLE@gl@@YAXPEAXIHHPEBM@Z
?ProgramUniform3i@gl@@YAXIHHHH@Z
?ProgramUniform3iContextANGLE@gl@@YAXPEAXIHHHH@Z
?ProgramUniform3iv@gl@@YAXIHHPEBH@Z
?ProgramUniform3ivContextANGLE@gl@@YAXPEAXIHHPEBH@Z
?ProgramUniform3ui@gl@@YAXIHIII@Z
?ProgramUniform3uiContextANGLE@gl@@YAXPEAXIHIII@Z
?ProgramUniform3uiv@gl@@YAXIHHPEBI@Z
?ProgramUniform3uivContextANGLE@gl@@YAXPEAXIHHPEBI@Z
?ProgramUniform4f@gl@@YAXIHMMMM@Z
?ProgramUniform4fContextANGLE@gl@@YAXPEAXIHMMMM@Z
?ProgramUniform4fv@gl@@YAXIHHPEBM@Z
?ProgramUniform4fvContextANGLE@gl@@YAXPEAXIHHPEBM@Z
?ProgramUniform4i@gl@@YAXIHHHHH@Z
?ProgramUniform4iContextANGLE@gl@@YAXPEAXIHHHHH@Z
?ProgramUniform4iv@gl@@YAXIHHPEBH@Z
?ProgramUniform4ivContextANGLE@gl@@YAXPEAXIHHPEBH@Z
?ProgramUniform4ui@gl@@YAXIHIIII@Z
?ProgramUniform4uiContextANGLE@gl@@YAXPEAXIHIIII@Z
?ProgramUniform4uiv@gl@@YAXIHHPEBI@Z
?ProgramUniform4uivContextANGLE@gl@@YAXPEAXIHHPEBI@Z
?ProgramUniformMatrix2fv@gl@@YAXIHHEPEBM@Z
?ProgramUniformMatrix2fvContextANGLE@gl@@YAXPEAXIHHEPEBM@Z
?ProgramUniformMatrix2x3fv@gl@@YAXIHHEPEBM@Z
?ProgramUniformMatrix2x3fvContextANGLE@gl@@YAXPEAXIHHEPEBM@Z
?ProgramUniformMatrix2x4fv@gl@@YAXIHHEPEBM@Z
?ProgramUniformMatrix2x4fvContextANGLE@gl@@YAXPEAXIHHEPEBM@Z
?ProgramUniformMatrix3fv@gl@@YAXIHHEPEBM@Z
?ProgramUniformMatrix3fvContextANGLE@gl@@YAXPEAXIHHEPEBM@Z
?ProgramUniformMatrix3x2fv@gl@@YAXIHHEPEBM@Z
?ProgramUniformMatrix3x2fvContextANGLE@gl@@YAXPEAXIHHEPEBM@Z
?ProgramUniformMatrix3x4fv@gl@@YAXIHHEPEBM@Z
?ProgramUniformMatrix3x4fvContextANGLE@gl@@YAXPEAXIHHEPEBM@Z
?ProgramUniformMatrix4fv@gl@@YAXIHHEPEBM@Z
?ProgramUniformMatrix4fvContextANGLE@gl@@YAXPEAXIHHEPEBM@Z
?ProgramUniformMatrix4x2fv@gl@@YAXIHHEPEBM@Z
?ProgramUniformMatrix4x2fvContextANGLE@gl@@YAXPEAXIHHEPEBM@Z
?ProgramUniformMatrix4x3fv@gl@@YAXIHHEPEBM@Z
?ProgramUniformMatrix4x3fvContextANGLE@gl@@YAXPEAXIHHEPEBM@Z
?PushDebugGroupKHR@gl@@YAXIIHPEBD@Z
?PushDebugGroupKHRContextANGLE@gl@@YAXPEAXIIHPEBD@Z
?PushGroupMarkerEXT@gl@@YAXHPEBD@Z
?PushGroupMarkerEXTContextANGLE@gl@@YAXPEAXHPEBD@Z
?PushMatrix@gl@@YAXXZ
?PushMatrixContextANGLE@gl@@YAXPEAX@Z
?QY^&
?QueryAPI@egl@@YAIXZ
?QueryContext@egl@@YAIPEAX0HPEAH@Z
?QueryCounterEXT@gl@@YAXII@Z
?QueryCounterEXTContextANGLE@gl@@YAXPEAXII@Z
?QueryDebugKHR@egl@@YAIHPEA_J@Z
?QueryDeviceAttribEXT@egl@@YAIPEAXHPEA_J@Z
?QueryDeviceStringEXT@egl@@YAPEBDPEAXH@Z
?QueryDisplayAttribEXT@egl@@YAIPEAXHPEA_J@Z
?QueryMatrixxOES@gl@@YAIPEAH0@Z
?QueryMatrixxOESContextANGLE@gl@@YAIPEAXPEAH1@Z
?QueryStreamKHR@egl@@YAIPEAX0IPEAH@Z
?QueryStreamu64KHR@egl@@YAIPEAX0IPEA_K@Z
?QueryString@egl@@YAPEBDPEAXH@Z
?QuerySurface@egl@@YAIPEAX0HPEAH@Z
?QuerySurfacePointerANGLE@egl@@YAIPEAX0HPEAPEAX@Z
?R0I?
?ReadBuffer@gl@@YAXI@Z
?ReadBufferContextANGLE@gl@@YAXPEAXI@Z
?ReadPixels@gl@@YAXHHHHIIPEAX@Z
?ReadPixelsContextANGLE@gl@@YAXPEAXHHHHII0@Z
?ReadPixelsRobustANGLE@gl@@YAXHHHHIIHPEAH00PEAX@Z
?ReadPixelsRobustANGLEContextANGLE@gl@@YAXPEAXHHHHIIHPEAH110@Z
?ReadnPixelsEXT@gl@@YAXHHHHIIHPEAX@Z
?ReadnPixelsEXTContextANGLE@gl@@YAXPEAXHHHHIIH0@Z
?ReadnPixelsRobustANGLE@gl@@YAXHHHHIIHPEAH00PEAX@Z
?ReadnPixelsRobustANGLEContextANGLE@gl@@YAXPEAXHHHHIIHPEAH110@Z
?ReleaseDeviceANGLE@egl@@YAIPEAX@Z
?ReleaseShaderCompiler@gl@@YAXXZ
?ReleaseShaderCompilerContextANGLE@gl@@YAXPEAX@Z
?ReleaseTexImage@egl@@YAIPEAX0H@Z
?ReleaseThread@egl@@YAIXZ
?RenderbufferStorage@gl@@YAXIIHH@Z
?RenderbufferStorageContextANGLE@gl@@YAXPEAXIIHH@Z
?RenderbufferStorageMultisample@gl@@YAXIHIHH@Z
?RenderbufferStorageMultisampleANGLE@gl@@YAXIHIHH@Z
?RenderbufferStorageMultisampleANGLEContextANGLE@gl@@YAXPEAXIHIHH@Z
?RenderbufferStorageMultisampleContextANGLE@gl@@YAXPEAXIHIHH@Z
?RenderbufferStorageOES@gl@@YAXIIHH@Z
?RenderbufferStorageOESContextANGLE@gl@@YAXPEAXIIHH@Z
?RequestExtensionANGLE@gl@@YAXPEBD@Z
?RequestExtensionANGLEContextANGLE@gl@@YAXPEAXPEBD@Z
?ResumeTransformFeedback@gl@@YAXXZ
?ResumeTransformFeedbackContextANGLE@gl@@YAXPEAX@Z
?Rotatef@gl@@YAXMMMM@Z
?RotatefContextANGLE@gl@@YAXPEAXMMMM@Z
?Rotatex@gl@@YAXHHHH@Z
?RotatexContextANGLE@gl@@YAXPEAXHHHH@Z
?SampleCoverage@gl@@YAXME@Z
?SampleCoverageContextANGLE@gl@@YAXPEAXME@Z
?SampleCoveragex@gl@@YAXHE@Z
?SampleCoveragexContextANGLE@gl@@YAXPEAXHE@Z
?SampleMaski@gl@@YAXII@Z
?SampleMaskiContextANGLE@gl@@YAXPEAXII@Z
?SamplerParameterIivRobustANGLE@gl@@YAXIIHPEBH@Z
?SamplerParameterIivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEBH@Z
?SamplerParameterIuivRobustANGLE@gl@@YAXIIHPEBI@Z
?SamplerParameterIuivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEBI@Z
?SamplerParameterf@gl@@YAXIIM@Z
?SamplerParameterfContextANGLE@gl@@YAXPEAXIIM@Z
?SamplerParameterfv@gl@@YAXIIPEBM@Z
?SamplerParameterfvContextANGLE@gl@@YAXPEAXIIPEBM@Z
?SamplerParameterfvRobustANGLE@gl@@YAXIIHPEBM@Z
?SamplerParameterfvRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEBM@Z
?SamplerParameteri@gl@@YAXIIH@Z
?SamplerParameteriContextANGLE@gl@@YAXPEAXIIH@Z
?SamplerParameteriv@gl@@YAXIIPEBH@Z
?SamplerParameterivContextANGLE@gl@@YAXPEAXIIPEBH@Z
?SamplerParameterivRobustANGLE@gl@@YAXIIHPEBH@Z
?SamplerParameterivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEBH@Z
?Scalef@gl@@YAXMMM@Z
?ScalefContextANGLE@gl@@YAXPEAXMMM@Z
?Scalex@gl@@YAXHHH@Z
?ScalexContextANGLE@gl@@YAXPEAXHHH@Z
?Scissor@gl@@YAXHHHH@Z
?ScissorContextANGLE@gl@@YAXPEAXHHHH@Z
?SetBlobCacheFuncsANDROID@egl@@YAXPEAXP6AXPEBX_J12@ZP6A_J1202@Z@Z
?SetFenceNV@gl@@YAXII@Z
?SetFenceNVContextANGLE@gl@@YAXPEAXII@Z
?ShadeModel@gl@@YAXI@Z
?ShadeModelContextANGLE@gl@@YAXPEAXI@Z
?ShaderBinary@gl@@YAXHPEBIIPEBXH@Z
?ShaderBinaryContextANGLE@gl@@YAXPEAXHPEBIIPEBXH@Z
?ShaderSource@gl@@YAXIHPEBQEBDPEBH@Z
?ShaderSourceContextANGLE@gl@@YAXPEAXIHPEBQEBDPEBH@Z
?StencilFillPathCHROMIUM@gl@@YAXIII@Z
?StencilFillPathCHROMIUMContextANGLE@gl@@YAXPEAXIII@Z
?StencilFillPathInstancedCHROMIUM@gl@@YAXHIPEBXIIIIPEBM@Z
?StencilFillPathInstancedCHROMIUMContextANGLE@gl@@YAXPEAXHIPEBXIIIIPEBM@Z
?StencilFunc@gl@@YAXIHI@Z
?StencilFuncContextANGLE@gl@@YAXPEAXIHI@Z
?StencilFuncSeparate@gl@@YAXIIHI@Z
?StencilFuncSeparateContextANGLE@gl@@YAXPEAXIIHI@Z
?StencilMask@gl@@YAXI@Z
?StencilMaskContextANGLE@gl@@YAXPEAXI@Z
?StencilMaskSeparate@gl@@YAXII@Z
?StencilMaskSeparateContextANGLE@gl@@YAXPEAXII@Z
?StencilOp@gl@@YAXIII@Z
?StencilOpContextANGLE@gl@@YAXPEAXIII@Z
?StencilOpSeparate@gl@@YAXIIII@Z
?StencilOpSeparateContextANGLE@gl@@YAXPEAXIIII@Z
?StencilStrokePathCHROMIUM@gl@@YAXIHI@Z
?StencilStrokePathCHROMIUMContextANGLE@gl@@YAXPEAXIHI@Z
?StencilStrokePathInstancedCHROMIUM@gl@@YAXHIPEBXIHIIPEBM@Z
?StencilStrokePathInstancedCHROMIUMContextANGLE@gl@@YAXPEAXHIPEBXIHIIPEBM@Z
?StencilThenCoverFillPathCHROMIUM@gl@@YAXIIII@Z
?StencilThenCoverFillPathCHROMIUMContextANGLE@gl@@YAXPEAXIIII@Z
?StencilThenCoverFillPathInstancedCHROMIUM@gl@@YAXHIPEBXIIIIIPEBM@Z
?StencilThenCoverFillPathInstancedCHROMIUMContextANGLE@gl@@YAXPEAXHIPEBXIIIIIPEBM@Z
?StencilThenCoverStrokePathCHROMIUM@gl@@YAXIHII@Z
?StencilThenCoverStrokePathCHROMIUMContextANGLE@gl@@YAXPEAXIHII@Z
?StencilThenCoverStrokePathInstancedCHROMIUM@gl@@YAXHIPEBXIHIIIPEBM@Z
?StencilThenCoverStrokePathInstancedCHROMIUMContextANGLE@gl@@YAXPEAXHIPEBXIHIIIPEBM@Z
?StreamAttribKHR@egl@@YAIPEAX0IH@Z
?StreamConsumerAcquireKHR@egl@@YAIPEAX0@Z
?StreamConsumerGLTextureExternalAttribsNV@egl@@YAIPEAX0PEB_J@Z
?StreamConsumerGLTextureExternalKHR@egl@@YAIPEAX0@Z
?StreamConsumerReleaseKHR@egl@@YAIPEAX0@Z
?StreamPostD3DTextureANGLE@egl@@YAIPEAX00PEB_J@Z
?SurfaceAttrib@egl@@YAIPEAX0HH@Z
?SwapBuffers@egl@@YAIPEAX0@Z
?SwapBuffersWithDamageKHR@egl@@YAIPEAX0PEAHH@Z
?SwapInterval@egl@@YAIPEAXH@Z
?TY,>5
?Terminate@egl@@YAIPEAX@Z
?TestFenceNV@gl@@YAEI@Z
?TestFenceNVContextANGLE@gl@@YAEPEAXI@Z
?TexCoordPointer@gl@@YAXHIHPEBX@Z
?TexCoordPointerContextANGLE@gl@@YAXPEAXHIHPEBX@Z
?TexEnvf@gl@@YAXIIM@Z
?TexEnvfContextANGLE@gl@@YAXPEAXIIM@Z
?TexEnvfv@gl@@YAXIIPEBM@Z
?TexEnvfvContextANGLE@gl@@YAXPEAXIIPEBM@Z
?TexEnvi@gl@@YAXIIH@Z
?TexEnviContextANGLE@gl@@YAXPEAXIIH@Z
?TexEnviv@gl@@YAXIIPEBH@Z
?TexEnvivContextANGLE@gl@@YAXPEAXIIPEBH@Z
?TexEnvx@gl@@YAXIIH@Z
?TexEnvxContextANGLE@gl@@YAXPEAXIIH@Z
?TexEnvxv@gl@@YAXIIPEBH@Z
?TexEnvxvContextANGLE@gl@@YAXPEAXIIPEBH@Z
?TexGenfOES@gl@@YAXIIM@Z
?TexGenfOESContextANGLE@gl@@YAXPEAXIIM@Z
?TexGenfvOES@gl@@YAXIIPEBM@Z
?TexGenfvOESContextANGLE@gl@@YAXPEAXIIPEBM@Z
?TexGeniOES@gl@@YAXIIH@Z
?TexGeniOESContextANGLE@gl@@YAXPEAXIIH@Z
?TexGenivOES@gl@@YAXIIPEBH@Z
?TexGenivOESContextANGLE@gl@@YAXPEAXIIPEBH@Z
?TexGenxOES@gl@@YAXIIH@Z
?TexGenxOESContextANGLE@gl@@YAXPEAXIIH@Z
?TexGenxvOES@gl@@YAXIIPEBH@Z
?TexGenxvOESContextANGLE@gl@@YAXPEAXIIPEBH@Z
?TexImage2D@gl@@YAXIHHHHHIIPEBX@Z
?TexImage2DContextANGLE@gl@@YAXPEAXIHHHHHIIPEBX@Z
?TexImage2DRobustANGLE@gl@@YAXIHHHHHIIHPEBX@Z
?TexImage2DRobustANGLEContextANGLE@gl@@YAXPEAXIHHHHHIIHPEBX@Z
?TexImage3D@gl@@YAXIHHHHHHIIPEBX@Z
?TexImage3DContextANGLE@gl@@YAXPEAXIHHHHHHIIPEBX@Z
?TexImage3DRobustANGLE@gl@@YAXIHHHHHHIIHPEBX@Z
?TexImage3DRobustANGLEContextANGLE@gl@@YAXPEAXIHHHHHHIIHPEBX@Z
?TexParameterIivRobustANGLE@gl@@YAXIIHPEBH@Z
?TexParameterIivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEBH@Z
?TexParameterIuivRobustANGLE@gl@@YAXIIHPEBI@Z
?TexParameterIuivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEBI@Z
?TexParameterf@gl@@YAXIIM@Z
?TexParameterfContextANGLE@gl@@YAXPEAXIIM@Z
?TexParameterfv@gl@@YAXIIPEBM@Z
?TexParameterfvContextANGLE@gl@@YAXPEAXIIPEBM@Z
?TexParameterfvRobustANGLE@gl@@YAXIIHPEBM@Z
?TexParameterfvRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEBM@Z
?TexParameteri@gl@@YAXIIH@Z
?TexParameteriContextANGLE@gl@@YAXPEAXIIH@Z
?TexParameteriv@gl@@YAXIIPEBH@Z
?TexParameterivContextANGLE@gl@@YAXPEAXIIPEBH@Z
?TexParameterivRobustANGLE@gl@@YAXIIHPEBH@Z
?TexParameterivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEBH@Z
?TexParameterx@gl@@YAXIIH@Z
?TexParameterxContextANGLE@gl@@YAXPEAXIIH@Z
?TexParameterxv@gl@@YAXIIPEBH@Z
?TexParameterxvContextANGLE@gl@@YAXPEAXIIPEBH@Z
?TexStorage1DEXT@gl@@YAXIHIH@Z
?TexStorage1DEXTContextANGLE@gl@@YAXPEAXIHIH@Z
?TexStorage2D@gl@@YAXIHIHH@Z
?TexStorage2DContextANGLE@gl@@YAXPEAXIHIHH@Z
?TexStorage2DEXT@gl@@YAXIHIHH@Z
?TexStorage2DEXTContextANGLE@gl@@YAXPEAXIHIHH@Z
?TexStorage2DMultisample@gl@@YAXIHIHHE@Z
?TexStorage2DMultisampleContextANGLE@gl@@YAXPEAXIHIHHE@Z
?TexStorage3D@gl@@YAXIHIHHH@Z
?TexStorage3DContextANGLE@gl@@YAXPEAXIHIHHH@Z
?TexStorage3DEXT@gl@@YAXIHIHHH@Z
?TexStorage3DEXTContextANGLE@gl@@YAXPEAXIHIHHH@Z
?TexStorage3DMultisampleOES@gl@@YAXIHIHHHE@Z
?TexStorage3DMultisampleOESContextANGLE@gl@@YAXPEAXIHIHHHE@Z
?TexSubImage2D@gl@@YAXIHHHHHIIPEBX@Z
?TexSubImage2DContextANGLE@gl@@YAXPEAXIHHHHHIIPEBX@Z
?TexSubImage2DRobustANGLE@gl@@YAXIHHHHHIIHPEBX@Z
?TexSubImage2DRobustANGLEContextANGLE@gl@@YAXPEAXIHHHHHIIHPEBX@Z
?TexSubImage3D@gl@@YAXIHHHHHHHIIPEBX@Z
?TexSubImage3DContextANGLE@gl@@YAXPEAXIHHHHHHHIIPEBX@Z
?TexSubImage3DRobustANGLE@gl@@YAXIHHHHHHHIIHPEBX@Z
?TexSubImage3DRobustANGLEContextANGLE@gl@@YAXPEAXIHHHHHHHIIHPEBX@Z
?TransformFeedbackVaryings@gl@@YAXIHPEBQEBDI@Z
?TransformFeedbackVaryingsContextANGLE@gl@@YAXPEAXIHPEBQEBDI@Z
?Translatef@gl@@YAXMMM@Z
?TranslatefContextANGLE@gl@@YAXPEAXMMM@Z
?Translatex@gl@@YAXHHH@Z
?TranslatexContextANGLE@gl@@YAXPEAXHHH@Z
?UUUUUU
?U[y[
?Uniform1f@gl@@YAXHM@Z
?Uniform1fContextANGLE@gl@@YAXPEAXHM@Z
?Uniform1fv@gl@@YAXHHPEBM@Z
?Uniform1fvContextANGLE@gl@@YAXPEAXHHPEBM@Z
?Uniform1i@gl@@YAXHH@Z
?Uniform1iContextANGLE@gl@@YAXPEAXHH@Z
?Uniform1iv@gl@@YAXHHPEBH@Z
?Uniform1ivContextANGLE@gl@@YAXPEAXHHPEBH@Z
?Uniform1ui@gl@@YAXHI@Z
?Uniform1uiContextANGLE@gl@@YAXPEAXHI@Z
?Uniform1uiv@gl@@YAXHHPEBI@Z
?Uniform1uivContextANGLE@gl@@YAXPEAXHHPEBI@Z
?Uniform2f@gl@@YAXHMM@Z
?Uniform2fContextANGLE@gl@@YAXPEAXHMM@Z
?Uniform2fv@gl@@YAXHHPEBM@Z
?Uniform2fvContextANGLE@gl@@YAXPEAXHHPEBM@Z
?Uniform2i@gl@@YAXHHH@Z
?Uniform2iContextANGLE@gl@@YAXPEAXHHH@Z
?Uniform2iv@gl@@YAXHHPEBH@Z
?Uniform2ivContextANGLE@gl@@YAXPEAXHHPEBH@Z
?Uniform2ui@gl@@YAXHII@Z
?Uniform2uiContextANGLE@gl@@YAXPEAXHII@Z
?Uniform2uiv@gl@@YAXHHPEBI@Z
?Uniform2uivContextANGLE@gl@@YAXPEAXHHPEBI@Z
?Uniform3f@gl@@YAXHMMM@Z
?Uniform3fContextANGLE@gl@@YAXPEAXHMMM@Z
?Uniform3fv@gl@@YAXHHPEBM@Z
?Uniform3fvContextANGLE@gl@@YAXPEAXHHPEBM@Z
?Uniform3i@gl@@YAXHHHH@Z
?Uniform3iContextANGLE@gl@@YAXPEAXHHHH@Z
?Uniform3iv@gl@@YAXHHPEBH@Z
?Uniform3ivContextANGLE@gl@@YAXPEAXHHPEBH@Z
?Uniform3ui@gl@@YAXHIII@Z
?Uniform3uiContextANGLE@gl@@YAXPEAXHIII@Z
?Uniform3uiv@gl@@YAXHHPEBI@Z
?Uniform3uivContextANGLE@gl@@YAXPEAXHHPEBI@Z
?Uniform4f@gl@@YAXHMMMM@Z
?Uniform4fContextANGLE@gl@@YAXPEAXHMMMM@Z
?Uniform4fv@gl@@YAXHHPEBM@Z
?Uniform4fvContextANGLE@gl@@YAXPEAXHHPEBM@Z
?Uniform4i@gl@@YAXHHHHH@Z
?Uniform4iContextANGLE@gl@@YAXPEAXHHHHH@Z
?Uniform4iv@gl@@YAXHHPEBH@Z
?Uniform4ivContextANGLE@gl@@YAXPEAXHHPEBH@Z
?Uniform4ui@gl@@YAXHIIII@Z
?Uniform4uiContextANGLE@gl@@YAXPEAXHIIII@Z
?Uniform4uiv@gl@@YAXHHPEBI@Z
?Uniform4uivContextANGLE@gl@@YAXPEAXHHPEBI@Z
?UniformBlockBinding@gl@@YAXIII@Z
?UniformBlockBindingContextANGLE@gl@@YAXPEAXIII@Z
?UniformMatrix2fv@gl@@YAXHHEPEBM@Z
?UniformMatrix2fvContextANGLE@gl@@YAXPEAXHHEPEBM@Z
?UniformMatrix2x3fv@gl@@YAXHHEPEBM@Z
?UniformMatrix2x3fvContextANGLE@gl@@YAXPEAXHHEPEBM@Z
?UniformMatrix2x4fv@gl@@YAXHHEPEBM@Z
?UniformMatrix2x4fvContextANGLE@gl@@YAXPEAXHHEPEBM@Z
?UniformMatrix3fv@gl@@YAXHHEPEBM@Z
?UniformMatrix3fvContextANGLE@gl@@YAXPEAXHHEPEBM@Z
?UniformMatrix3x2fv@gl@@YAXHHEPEBM@Z
?UniformMatrix3x2fvContextANGLE@gl@@YAXPEAXHHEPEBM@Z
?UniformMatrix3x4fv@gl@@YAXHHEPEBM@Z
?UniformMatrix3x4fvContextANGLE@gl@@YAXPEAXHHEPEBM@Z
?UniformMatrix4fv@gl@@YAXHHEPEBM@Z
?UniformMatrix4fvContextANGLE@gl@@YAXPEAXHHEPEBM@Z
?UniformMatrix4x2fv@gl@@YAXHHEPEBM@Z
?UniformMatrix4x2fvContextANGLE@gl@@YAXPEAXHHEPEBM@Z
?UniformMatrix4x3fv@gl@@YAXHHEPEBM@Z
?UniformMatrix4x3fvContextANGLE@gl@@YAXPEAXHHEPEBM@Z
?UnmapBuffer@gl@@YAEI@Z
?UnmapBufferContextANGLE@gl@@YAEPEAXI@Z
?UnmapBufferOES@gl@@YAEI@Z
?UnmapBufferOESContextANGLE@gl@@YAEPEAXI@Z
?UseProgram@gl@@YAXI@Z
?UseProgramContextANGLE@gl@@YAXPEAXI@Z
?UseProgramStages@gl@@YAXIII@Z
?UseProgramStagesContextANGLE@gl@@YAXPEAXIII@Z
?ValidateProgram@gl@@YAXI@Z
?ValidateProgramContextANGLE@gl@@YAXPEAXI@Z
?ValidateProgramPipeline@gl@@YAXI@Z
?ValidateProgramPipelineContextANGLE@gl@@YAXPEAXI@Z
?VertexAttrib1f@gl@@YAXIM@Z
?VertexAttrib1fContextANGLE@gl@@YAXPEAXIM@Z
?VertexAttrib1fv@gl@@YAXIPEBM@Z
?VertexAttrib1fvContextANGLE@gl@@YAXPEAXIPEBM@Z
?VertexAttrib2f@gl@@YAXIMM@Z
?VertexAttrib2fContextANGLE@gl@@YAXPEAXIMM@Z
?VertexAttrib2fv@gl@@YAXIPEBM@Z
?VertexAttrib2fvContextANGLE@gl@@YAXPEAXIPEBM@Z
?VertexAttrib3f@gl@@YAXIMMM@Z
?VertexAttrib3fContextANGLE@gl@@YAXPEAXIMMM@Z
?VertexAttrib3fv@gl@@YAXIPEBM@Z
?VertexAttrib3fvContextANGLE@gl@@YAXPEAXIPEBM@Z
?VertexAttrib4f@gl@@YAXIMMMM@Z
?VertexAttrib4fContextANGLE@gl@@YAXPEAXIMMMM@Z
?VertexAttrib4fv@gl@@YAXIPEBM@Z
?VertexAttrib4fvContextANGLE@gl@@YAXPEAXIPEBM@Z
?VertexAttribBinding@gl@@YAXII@Z
?VertexAttribBindingContextANGLE@gl@@YAXPEAXII@Z
?VertexAttribDivisor@gl@@YAXII@Z
?VertexAttribDivisorANGLE@gl@@YAXII@Z
?VertexAttribDivisorANGLEContextANGLE@gl@@YAXPEAXII@Z
?VertexAttribDivisorContextANGLE@gl@@YAXPEAXII@Z
?VertexAttribFormat@gl@@YAXIHIEI@Z
?VertexAttribFormatContextANGLE@gl@@YAXPEAXIHIEI@Z
?VertexAttribI4i@gl@@YAXIHHHH@Z
?VertexAttribI4iContextANGLE@gl@@YAXPEAXIHHHH@Z
?VertexAttribI4iv@gl@@YAXIPEBH@Z
?VertexAttribI4ivContextANGLE@gl@@YAXPEAXIPEBH@Z
?VertexAttribI4ui@gl@@YAXIIIII@Z
?VertexAttribI4uiContextANGLE@gl@@YAXPEAXIIIII@Z
?VertexAttribI4uiv@gl@@YAXIPEBI@Z
?VertexAttribI4uivContextANGLE@gl@@YAXPEAXIPEBI@Z
?VertexAttribIFormat@gl@@YAXIHII@Z
?VertexAttribIFormatContextANGLE@gl@@YAXPEAXIHII@Z
?VertexAttribIPointer@gl@@YAXIHIHPEBX@Z
?VertexAttribIPointerContextANGLE@gl@@YAXPEAXIHIHPEBX@Z
?VertexAttribPointer@gl@@YAXIHIEHPEBX@Z
?VertexAttribPointerContextANGLE@gl@@YAXPEAXIHIEHPEBX@Z
?VertexBindingDivisor@gl@@YAXII@Z
?VertexBindingDivisorContextANGLE@gl@@YAXPEAXII@Z
?VertexPointer@gl@@YAXHIHPEBX@Z
?VertexPointerContextANGLE@gl@@YAXPEAXHIHPEBX@Z
?Viewport@gl@@YAXHHHH@Z
?ViewportContextANGLE@gl@@YAXPEAXHHHH@Z
?W(~N
?WUUUUU
?WaitClient@egl@@YAIXZ
?WaitGL@egl@@YAIXZ
?WaitNative@egl@@YAIH@Z
?WaitSync@egl@@YAIPEAX0H@Z
?WaitSync@gl@@YAXPEAU__GLsync@@I_K@Z
?WaitSyncContextANGLE@gl@@YAXPEAXPEAU__GLsync@@I_K@Z
?WeightPointerOES@gl@@YAXHIHPEBX@Z
?WeightPointerOESContextANGLE@gl@@YAXPEAXHIHPEBX@Z
?asinf
?f`Y4
?kxG2)
?loadExecutable
?powf
?t_v>
?{Q}<
@	:GY
@	:Gy
@ :G$
@ :G8
@ ;Gp
@ Hc@
@ HcF8H
@!:G%
@!:G9t
@"|$hH
@$A;E
@(;Gx
@(<+t
@(A;E
@(D9i(
@(H;D$0u
@.00cfg
@.data
@.gfids
@.reloc
@.tls
@09B0u|L
@8+t&H
@8+t7H
@8.t#
@8<)u
@8l$8t
@8l$Ht
@8l$Pt
@8oe@
@8s@t+H
@8t$HtrL
@8t(8}
@8t(8}nH
@8wyu
@8|$^t
@8~$t
@:pTu&H
@:pTu)H
@:pUu
@<"t9<\u
@>%>b
@@ DEFAULT-UNIFORMS-SET-BINDING @@
@@ LAYOUT-
@@ MAIN PROLOGUE @@
@@ PIXEL MAIN PARAMETERS @@
@@ PIXEL OUTPUT @@
@@ QUALIFIER-
@@ VERTEX ATTRIBUTES @@
@@ VERTEX OUTPUT @@
@A^A\_^]
@A^A]A\_^
@A^_^
@A_A^A\
@A_A^A\_^[]
@A_A^A]A\_^]
@A_A^]
@A_A^_^]
@GL_OES_point_size_array not enabled.
@H;D$(
@Invalid D3D device passed into EGLDeviceEXT
@P@uoI
@SUVWATAUAVAWH
@SUVWATAVAWH
@SUVWAVH
@SVWATAUAVAWH
@SVWH
@TA:AT
@TA:ATu7A
@TA:AUt
@UA:AU
@UATAUAVAWH
@UAVAWH
@USVWATAUAVAWH
@USVWATAVAWH
@USVWH
@VWAVH
@[]_^A\A^A_
@[]_^A^
@[_^A\A]A^A_
@[_^A^A_
@^8U)zj
@b;zO]
@count
@ffffff
@hI;@pt4H
@pn>6
@t-$8t)H
@this
@~u#H
A	:B	
A ;B 
A ;B u;
A H+A
A buffer must be bound.
A device memory allocation has failed.
A fence or query has not yet completed.
A host memory allocation has failed.
A program must be bound.
A renderbuffer must be bound.
A requested extension is not supported.
A requested feature is not supported.
A requested format is not supported on this device.
A requested layer is not present or could not be loaded.
A return array was too small for the result.
A surface has changed in such a way that it is no longer compatible with the swapchain.
A surface is no longer available.
A swapchain no longer matches the surface properties exactly, but can still be used to present to the surface successfully.
A texture must be bound.
A transform feedback buffer that would be written to is also bound to a non-transform-feedback target, which would cause undefined behavior.
A wait operation has not completed in the specified time.
A#@(t
A#D$,=
A#E0M
A#E8	
A#G0I
A#M@I
A#\$,E1
A#t$0I
A#t$0M
A#|$8E1
A$+A,t\3
A(9B(D
A(H+A H
A(H;A 
A(H;A t81
A(H;A tbM
A+B$+
A+B$A
A+B$D
A+E\A+EdA
A+X$D
A+n H
A,A9A(v&L
A,u+H
A03>A|
A0H9P
A0HcQ H
A84.u
A8H+A0H
A8H9A0t
A8H9A@tCH
A9,$u
A94$t
A94$u
A9<$t
A9A sUI
A9A u
A9A }UI
A9A }VI
A9A$u
A9Ppu
A9Q M
A:8ueI
A;6}#I
A;A s'H
A;A }'H
A;A$}?H
A;A(}+H
A;H$I
A;H$s
A;J$vdH
A;n`r
A>l$/
A>pP&
A@H;A8t
A@H;A8tPH
A@H;A8tXH
A@H;AH
A@H;D$(
AA,A$
AA<Fu
ABCDEFGHIJKLMNOPQRSTUVWXYZ
ACCSTRUCTNV
AD;AHwcL
ADD_ASSIGN
ADVAPI32.dll
AHt>H
AK>(v
AMPERSAND
AND_ASSIGN
AND_OP
ANGLE
ANGLE (
ANGLE Display::initialize error 
ANGLE DisplayWGL 
ANGLE Dummy Window
ANGLE Intermediate Window
ANGLE Pipeline Cache: 
ANGLEDepthRangeParams
ANGLEGetDisplayPlatform
ANGLEPosition
ANGLEResetDisplayPlatform
ANGLEUniformBlock
ANGLEUniforms
ANGLE_ENABLE_LINE_SEGMENT_RASTERIZATION
ANGLE_ENABLE_LOOP_FLATTEN
ANGLE_REQUIRES_IEEE_STRICT_COMPILING
ANGLE_USES_DISCARD_REWRITING
ANGLE_USES_NESTED_BREAK
ANGLE_copy_texture_3d exposed but not implemented.
ANGLE_lossy_etc_decode extension is not supported.
ANGLE_multiview is not available.
ANGLE_texture_rectangle extension not present
AP uJH
AP@u"H
APH+AHH
APH9AHt
ARB_draw_buffers
ARB_texture_rectangle
ARM_shader_framebuffer_fetch
AT:BTu
ATAUAVH
ATAVAWH
ATOMIC_COUNTERS
ATOMIC_COUNTER_BUFFER is not supported before GLES 3.1
ATOMIC_UINT
ATTRIBUTE
AU:BUu
AUAVAWH
AUUUUUU
AVVWS
AVVWSH
AVVWSM
AVVWUSH
AWAVATVWSH
AWAVATVWUS
AWAVATVWUSD
AWAVATVWUSH
AWAVATVWUSL
AWAVAUATVWSH
AWAVAUATVWSM
AWAVAUATVWUS
AWAVAUATVWUSD
AWAVAUATVWUSH
AWAVAUATVWUSM
AWAVAUATVWUSPL
AWAVVWSH
AWAVVWUS
AWAVVWUSD
AWAVVWUSH
A^A]A\
A^_^[]
A_A^A\
A_A^A\_]
A_A^A\_^
A_A^A\_^[]
A_A^A\_^][
A_A^A]A\]
A_A^A]A\_
A_A^A]A\_^[]
A_A^A]A\_^]
A_A^A]A\_^][
A_A^A]_]
A_A^A]_^
A_A^]
A_A^_
A_A^_^]
A`1w>
A`D9L8
A`H;Ah
A`L9`(slH
Absolute value
Access violation - no RTTI data!
AcquireNextImage2KHR
AcquireNextImageKHR
AcquireSRWLockExclusive
Active atomic counter resources are not assigned name strings.
Adding VK_LAYER_LUNARG_standard_validation using the loader legacy path.  This is not an error.
Advanced Micro Devices
AhH+A`H
AhH;A`tuI
AhH;Ap
AhH;Apt8H
AhH;Bh
AhH;Bht
AlignedAlloc
All contexts within a share group must be created with the same value of EGL_DISPLAY_TEXTURE_SHARE_GROUP_ANGLE.
AllMemoryBarrier(
AllMemoryBarrierWithGroupSync
AllocateCommandBuffers
AllocateCurrentThread
AllocateDescriptorSets
AllocateMemory
An active buffer is mapped
An enabled vertex array has no buffer and no pointer.
An enabled vertex array has no buffer.
An event is signaled.
An event is unsignaled.
Anull
Aon9\
Aon9d
Aon9p
Aon9t
AppPolicyGetProcessTerminationMethod
Application
April
AreFileApisANSI
Array
Array constructor argument has an incorrect type
Array length
Array size
Array size or input primitive declaration doesn't match the size of earlier sized array inputs.
At least one enabled attribute must have a divisor of zero.
At least one shader must specify a layout(max_vertices = value)
At least one shader must specify an input layout primitive
At least one shader must specify an output layout primitive
At least one shader must specify an output layout(vertices=...)
Atomic Counter buffers are not supported in this version of GL
AtomicAdd
AtomicAnd
AtomicCompSwap
AtomicCounter
AtomicCounterAdd
AtomicCounterAnd
AtomicCounterCompSwap
AtomicCounterDecrement
AtomicCounterExchange
AtomicCounterIncrement
AtomicCounterMax
AtomicCounterMin
AtomicCounterOr
AtomicCounterSubtract
AtomicCounterXor
AtomicExchange
AtomicLoad
AtomicMax
AtomicMin
AtomicOr
AtomicStore
AtomicXor
Attached compute shader is not compiled.
Attachment type must be compatible with attachment object.
Attempt to blit from a multisampled framebuffer and the bounds don't match with the draw framebuffer.
Attempt to blit from a multisampled framebuffer and the bounds or format of the color buffer don't match with the draw framebuffer.
Attempt to delete active transform feedback.
Attempt to initialize readonly parameter
Attempt to read from a missing color attachment of a complete framebuffer.
Attempt to read from a missing depth/stencil attachment of a complete framebuffer.
Attempt to read from a multi-view framebuffer.
Attempt to write to a multi-view framebuffer.
Attempted to flush a buffer not mapped for explicit flushing.
Attempted to flush buffer object zero.
Attempted to map buffer object zero.
Attempting to blit and the read and draw buffer formats don't match.
Attempting to read from a multi-view framebuffer.
Attribute '
Attribute (
Attribute EGL_CONTEXT_BIND_GENERATES_RESOURCE_CHROMIUM requires EGL_CHROMIUM_create_context_bind_generates_resource.
Attribute EGL_CONTEXT_CLIENT_ARRAYS_ENABLED_ANGLE requires EGL_ANGLE_create_context_client_arrays.
Attribute EGL_CONTEXT_PROGRAM_BINARY_CACHE_ENABLED_ANGLE requires EGL_ANGLE_program_cache_control.
Attribute EGL_CONTEXT_WEBGL_COMPATIBILITY_ANGLE requires EGL_ANGLE_create_context_webgl_compatibility.
Attribute EGL_DISPLAY_TEXTURE_SHARE_GROUP_ANGLE requires EGL_ANGLE_display_texture_share_group.
Attribute EGL_EXTENSIONS_ENABLED_ANGLE requires EGL_ANGLE_create_context_extensions_enabled.
Attribute EGL_ROBUST_RESOURCE_INITIALIZATION_ANGLE requires EGL_ANGLE_robust_resource_initialization.
Attribute must be EGL_TRUE or EGL_FALSE.
Attributes that begin with 'gl_' are not allowed.
Attributes that begin with 'webgl_', or '_webgl_' are not allowed.
August
AuthD
Auxiliary qualifiers (centroid, patch, and sample) must appear before storage and precision qualifiers
AxH+ApH
B$D+B,toD+B(
B(I9A(u
B0E8XAt
B;T)8
BC1%M
BC?>6t9^	c:>
BF>^G
BOOLCONSTANT
BPH+BHH
BREAK
BT8ATuz
BU8AUurL
BUFFER
BVEC2
BVEC3
BVEC4
Back buffer render target
Back buffer shader resource
Back buffer shader resource view
Back buffer texture
BackColor
BackSecondaryColor
Bad access.
Bad aggregation op
Bad allocation.
Bad attribute.
Bad config.
Bad context.
Bad current surface.
Bad destination in loader trampoline dispatch,Are layers and extensions that you are calling enabled?
Bad device.
Bad display.
Bad dynamic_cast!
Bad match.
Bad native window.
Bad parameter.
Bad platform type.
Bad state.
Bad stream state
Bad stream.
Bad surface.
Bad unary op
Barrier
Base level must be 0 for external textures.
Base level must be 0 for multisampled textures.
Base level must be 0 for rectangle textures.
Base level must be at least 0.
BaseInstance
BaseVertex
BeginCommandBuffer
Binary blob no longer available in cache (removed by a thread?)
BindAccelerationStructureMemoryNVX
BindBufferMemory
BindBufferMemory2
BindBufferMemory2KHR
BindImageMemory
BindImageMemory2
BindImageMemory2KHR
Binding for fragment input 
Binding layout qualifier
Bitwise not
Blit extension not available.
Blit feedback loop: the read and draw framebuffers are the same.
Blit11 2D Array F swizzle pixel shader
Blit11 2D Array I swizzle pixel shader
Blit11 2D Array UI swizzle pixel shader
Blit11 2D BGRA pixel shader
Blit11 2D Cube F swizzle pixel shader
Blit11 2D Cube I swizzle pixel shader
Blit11 2D Cube UI swizzle pixel shader
Blit11 2D F swizzle pixel shader
Blit11 2D I swizzle pixel shader
Blit11 2D LUMA premultiply pixel shader
Blit11 2D LUMA unmultiply pixel shader
Blit11 2D LUMAALPHA premultiply pixel shader
Blit11 2D LUMAALPHA unmultiply pixel shader
Blit11 2D R I pixel shader
Blit11 2D R UI pixel shader
Blit11 2D R pixel shader
Blit11 2D RG I pixel shader
Blit11 2D RG UI pixel shader
Blit11 2D RG pixel shader
Blit11 2D RGB 565 pixel shader
Blit11 2D RGB 565 premultiply pixel shader
Blit11 2D RGB 565 unmultiply pixel shader
Blit11 2D RGB I pixel shader
Blit11 2D RGB UI pixel shader
Blit11 2D RGB pixel shader
Blit11 2D RGB premultiply pixel shader
Blit11 2D RGB to uint pixel shader
Blit11 2D RGB to uint premultiply pixel shader
Blit11 2D RGB to uint unmultiply pixel shader
Blit11 2D RGB unmultiply pixel shader
Blit11 2D RGBA 4444 pixel shader
Blit11 2D RGBA 4444 premultiply pixel shader
Blit11 2D RGBA 4444 unmultiply pixel shader
Blit11 2D RGBA 5551 pixel shader
Blit11 2D RGBA 5551 premultiply pixel shader
Blit11 2D RGBA 5551 unmultiply pixel shader
Blit11 2D RGBA I pixel shader
Blit11 2D RGBA UI pixel shader
Blit11 2D RGBA pixel shader
Blit11 2D RGBA premultiply pixel shader
Blit11 2D RGBA to uint pixel shader
Blit11 2D RGBA to uint premultiply pixel shader
Blit11 2D RGBA to uint unmultiply pixel shader
Blit11 2D RGBA unmultiply pixel shader
Blit11 2D UI swizzle pixel shader
Blit11 2D alpha pixel shader
Blit11 2D depth pixel shader
Blit11 2D input layout
Blit11 2D lum pixel shader
Blit11 2D luminance alpha pixel shader
Blit11 2D vertex shader
Blit11 2DArray BGRA pixel shader
Blit11 2DArray I RGBA pixel shader
Blit11 2DArray LUMA premultiply pixel shader
Blit11 2DArray LUMA unmultiply pixel shader
Blit11 2DArray LUMAALPHA premultiply pixel shader
Blit11 2DArray LUMAALPHA unmultiply pixel shader
Blit11 2DArray R I pixel shader
Blit11 2DArray R UI pixel shader
Blit11 2DArray R pixel shader
Blit11 2DArray RG I pixel shader
Blit11 2DArray RG UI pixel shader
Blit11 2DArray RG pixel shader
Blit11 2DArray RGB 565 pixel shader
Blit11 2DArray RGB 565 premultiply pixel shader
Blit11 2DArray RGB 565 unmultiply pixel shader
Blit11 2DArray RGB I pixel shader
Blit11 2DArray RGB UI pixel shader
Blit11 2DArray RGB pixel shader
Blit11 2DArray RGB premultiply pixel shader
Blit11 2DArray RGB to int pixel shader
Blit11 2DArray RGB to int premultiply pixel shader
Blit11 2DArray RGB to int unmultiply pixel shader
Blit11 2DArray RGB to uint pixel shader
Blit11 2DArray RGB to uint premultiply pixel shader
Blit11 2DArray RGB to uint unmultiply pixel shader
Blit11 2DArray RGB unmultiply pixel shader
Blit11 2DArray RGBA 4444 pixel shader
Blit11 2DArray RGBA 4444 premultiply pixel shader
Blit11 2DArray RGBA 4444 unmultiply pixel shader
Blit11 2DArray RGBA 5551 pixel shader
Blit11 2DArray RGBA 5551 premultiply pixel shader
Blit11 2DArray RGBA 5551 unmultiply pixel shader
Blit11 2DArray RGBA pixel shader
Blit11 2DArray RGBA premultiply pixel shader
Blit11 2DArray RGBA to int pixel shader
Blit11 2DArray RGBA to int premultiply pixel shader
Blit11 2DArray RGBA to int unmultiply pixel shader
Blit11 2DArray RGBA to uint pixel shader
Blit11 2DArray RGBA to uint premultiply pixel shader
Blit11 2DArray RGBA to uint unmultiply pixel shader
Blit11 2DArray RGBA unmultiply pixel shader
Blit11 2DArray UI RGBA pixel shader
Blit11 2DArray alpha pixel shader
Blit11 2DArray luminance alpha pixel shader
Blit11 2DArray luminance pixel shader
Blit11 3D BGRA pixel shader
Blit11 3D F swizzle pixel shader
Blit11 3D I RGBA pixel shader
Blit11 3D I swizzle pixel shader
Blit11 3D LUMA premultiply pixel shader
Blit11 3D LUMA unmultiply pixel shader
Blit11 3D LUMAALPHA premultiply pixel shader
Blit11 3D LUMAALPHA unmultiply pixel shader
Blit11 3D R I pixel shader
Blit11 3D R UI pixel shader
Blit11 3D R pixel shader
Blit11 3D RG I pixel shader
Blit11 3D RG UI pixel shader
Blit11 3D RG pixel shader
Blit11 3D RGB 565 pixel shader
Blit11 3D RGB 565 premultiply pixel shader
Blit11 3D RGB 565 unmultiply pixel shader
Blit11 3D RGB I pixel shader
Blit11 3D RGB UI pixel shader
Blit11 3D RGB pixel shader
Blit11 3D RGB premultiply pixel shader
Blit11 3D RGB to int pixel shader
Blit11 3D RGB to int premultiply pixel shader
Blit11 3D RGB to int unmultiply pixel shader
Blit11 3D RGB to uint pixel shader
Blit11 3D RGB to uint premultiply pixel shader
Blit11 3D RGB to uint unmultiply pixel shader
Blit11 3D RGB unmultiply pixel shader
Blit11 3D RGBA 4444 pixel shader
Blit11 3D RGBA 4444 premultiply pixel shader
Blit11 3D RGBA 4444 unmultiply pixel shader
Blit11 3D RGBA 5551 pixel shader
Blit11 3D RGBA 5551 premultiply pixel shader
Blit11 3D RGBA 5551 unmultiply pixel shader
Blit11 3D RGBA pixel shader
Blit11 3D RGBA premultiply pixel shader
Blit11 3D RGBA to int pixel shader
Blit11 3D RGBA to int premultiply pixel shader
Blit11 3D RGBA to int unmultiply pixel shader
Blit11 3D RGBA to uint pixel shader
Blit11 3D RGBA to uint premultiply pixel shader
Blit11 3D RGBA to uint unmultiply pixel shader
Blit11 3D RGBA unmultiply pixel shader
Blit11 3D UI RGBA pixel shader
Blit11 3D UI swizzle pixel shader
Blit11 3D alpha pixel shader
Blit11 3D geometry shader
Blit11 3D input layout
Blit11 3D luminance alpha pixel shader
Blit11 3D luminance pixel shader
Blit11 3D vertex shader
Blit11 Alpha Mask Blend
Blit11 depth stencil state
Blit11 linear sampler
Blit11 no scissoring rasterizer state
Blit11 point sampler
Blit11 scissoring rasterizer state
Blit11 swizzle constant buffer
Blit11 vertex buffer
Blit11::initResources
Blit11::mResolveDepthPS
Blit11::mResolveDepthStencilPS
Blit11::mResolveDepthStencilVS
Blit11::mResolveStencilPS
Blit11::mResolvedDepth
Blit11::mResolvedDepthDSView
Blit11::mResolvedDepthStencil
Blit11::mResolvedDepthStencilRTView
Blit11::mStencilSRV
BlitFramebuffer dimensions out of 32-bit integer range.
Blits are only supported from 2D texture, renderbuffer or default framebuffer attachments in this extension.
Blits are only supported to 2D texture, renderbuffer or default framebuffer attachments in this extension.
Blob cache callbacks cannot be null.
Blob cache functions can only be set once in the lifetime of a Display
Border must be 0.
Both compute and graphics shaders are attached to the same program.
Both width and height argument of drawn texture must be positive.
BoundingBox
Branch: Break
Branch: Continue
Branch: Kill
Branch: Return
Branch: Unknown Branch
Buffer
Buffer is already mapped.
Buffer is bound for transform feedback.
Buffer is currently bound for transform feedback.
Buffer is not generated.
Buffer mapping length is zero.
Buffer not mapped.
Buffer offset overflow in CopyBufferSubData
Buffer size does not align with data type.
Buffer target not valid
Buffer value is greater than MAX_DRAW_BUFFERS
Buffer was not generated.
Buffer11::EmulatedIndexedStorage
Buffer11::NativeStorage
Buffer4F
Buffer4I
Buffer4UI
BufferCopyParams
BufferToTexture GS
BufferToTexture RGBA ps
BufferToTexture RGBA-I ps
BufferToTexture RGBA-UI ps
BufferToTexture VS
Build ICD instance extension list
C	:D$$
C	:D$pu!H
C	:D$pu6H
C	:D$pu7H
C H9G
C$u	H
C(H+C H
C(H;C0r
C0H;C8t
C0HcF
C4D+@ H
C5R?	
C847u
C8<(u
C8H9k@v
C8L9s@v
C9|0$uA
C@H+C8H
CA< t(<#t
CARET
CB(A;J,A
CB0A;B(A
CD$@3
CD$@A
CE,D;m0D
CENTROID
CHH;CP
CHH;CPtNH
CHH;CPt`
CHROMIUM_copy_compressed_texture exposed but not implemented.
CHROMIUM_copy_texture exposed but not implemented.
CL:>8
CM_Get_Child
CM_Get_DevNode_Registry_PropertyW
CM_Get_DevNode_Status
CM_Get_Device_IDW
CM_Get_Device_ID_ListW
CM_Get_Device_ID_List_SizeW
CM_Get_Sibling
CM_Locate_DevNodeW
CM_Open_DevNode_Key
COHERENT
COLON
COLOR
COMMA
COMPUTE
CONST
CONSTANT_COLOR (or ONE_MINUS_CONSTANT_COLOR) and CONSTANT_ALPHA (or ONE_MINUS_CONSTANT_ALPHA) cannot be used together as source and destination factors in the blend function.
CONTINUE
CPH+CHH
CWD>~3
CXH;C`t
C`;F`
C`D;Sh|
C`H;CX
Call a built-in function
Call an internal function with raw implementation
Call an user-defined function
Call stack too deep (larger than 
Can not get pointer for reserved buffer name zero.
Can only be highp
Can only use one of gl_ClipDistance or gl_ClipVertex (gl_ClipDistance is preferred)
Can only use one of gl_CullDistance or gl_ClipVertex (gl_ClipDistance is preferred)
Cannot attach multiple ES shaders of the same type to a single program
Cannot be qualified as invariant.
Cannot call CopyBufferSubData on a mapped buffer
Cannot capture outbound array element '
Cannot change active program while transform feedback is unpaused.
Cannot change program binary while program is associated with an active transform feedback object.
Cannot create an OpenGL ES platform on Windows without the WGL_EXT_create_context_es(2)_profile extension.
Cannot cross link ES and desktop profiles
Cannot have multiple different invocations specifiers
Cannot have multiple different max_vertices specifiers
Cannot have multiple different primitive specifiers
Cannot have multiple different work group size specifiers
Cannot have multiple index specifiers
Cannot have negative height or width.
Cannot have negative height, width, or depth.
Cannot have negative start.
Cannot have negative stride.
Cannot link program while program is associated with an active transform feedback object.
Cannot load program binaries across different ES context versions.
Cannot mix ES profile with non-ES profile shaders
Cannot pop the default debug group.
Cannot push more than GL_MAX_DEBUG_GROUP_STACK_DEPTH debug groups.
Cannot reuse block name within the same interface:
Cannot use GL_LINEAR filter when blitting a integer framebuffer.
Cannot use both gl_FragColor and gl_FragData
Cannot use current query for timestamp
Cannot use gl_FragColor or gl_FragData when using user-defined outputs
Cannot use negative values in PixelStorei
Capture of array elements is undefined and not supported.
Capture of arrays is undefined and not supported.
Ccoshf
Ceiling
ChH;Cp
ChH;Cpt6H
ChH;CptXH
ChangeTimerQueueTimer
CheckCompileStatus
CheckLinkStatus
ChoosePhysicalDevice
ChoosePixelFormat
Cl;Fl
Clamp
Cleanup: discarding lookahead
Cleanup: popping
Clear11 Constant Buffer
Clear11 GS Multiview
Clear11 PS Depth
Clear11 PS Float1
Clear11 PS Float2
Clear11 PS Float3
Clear11 PS Float4
Clear11 PS Float5
Clear11 PS Float6
Clear11 PS Float7
Clear11 PS Float8
Clear11 PS FloatFL9
Clear11 PS Sint1
Clear11 PS Sint2
Clear11 PS Sint3
Clear11 PS Sint4
Clear11 PS Sint5
Clear11 PS Sint6
Clear11 PS Sint7
Clear11 PS Sint8
Clear11 PS Uint1
Clear11 PS Uint2
Clear11 PS Uint3
Clear11 PS Uint4
Clear11 PS Uint5
Clear11 PS Uint6
Clear11 PS Uint7
Clear11 PS Uint8
Clear11 Rasterizer State with scissor disabled
Clear11 Rasterizer State with scissor enabled
Clear11 VS
Clear11 VS FL9
Clear11 VS Multiview
Clear11::ensureResourcesInitialized
Client buffer is not a IDirect3DTexture9
Client data cannot be used with a non-default vertex array object.
ClipDistance
ClipVertex
CloseHandle
CloseThreadpoolTimer
CloseThreadpoolWait
CloseThreadpoolWork
CmdBeginConditionalRenderingEXT
CmdBeginDebugUtilsLabelEXT
CmdBeginQuery
CmdBeginRenderPass
CmdBeginRenderPass2KHR
CmdBindDescriptorSets
CmdBindIndexBuffer
CmdBindPipeline
CmdBindShadingRateImageNV
CmdBindVertexBuffers
CmdBlitImage
CmdBuildAccelerationStructureNVX
CmdClearAttachments
CmdClearColorImage
CmdClearDepthStencilImage
CmdCopyAccelerationStructureNVX
CmdCopyBuffer
CmdCopyBufferToImage
CmdCopyImage
CmdCopyImageToBuffer
CmdCopyQueryPoolResults
CmdDebugMarkerBeginEXT
CmdDebugMarkerEndEXT
CmdDebugMarkerInsertEXT
CmdDispatch
CmdDispatchBase
CmdDispatchBaseKHR
CmdDispatchIndirect
CmdDraw
CmdDrawIndexed
CmdDrawIndexedIndirect
CmdDrawIndexedIndirectCountAMD
CmdDrawIndexedIndirectCountKHR
CmdDrawIndirect
CmdDrawIndirectCountAMD
CmdDrawIndirectCountKHR
CmdDrawMeshTasksIndirectCountNV
CmdDrawMeshTasksIndirectNV
CmdDrawMeshTasksNV
CmdEndConditionalRenderingEXT
CmdEndDebugUtilsLabelEXT
CmdEndQuery
CmdEndRenderPass
CmdEndRenderPass2KHR
CmdExecuteCommands
CmdFillBuffer
CmdInsertDebugUtilsLabelEXT
CmdNextSubpass
CmdNextSubpass2KHR
CmdPipelineBarrier
CmdProcessCommandsNVX
CmdPushConstants
CmdPushDescriptorSetKHR
CmdPushDescriptorSetWithTemplateKHR
CmdReserveSpaceForCommandsNVX
CmdResetEvent
CmdResetQueryPool
CmdResolveImage
CmdSetBlendConstants
CmdSetCheckpointNV
CmdSetCoarseSampleOrderNV
CmdSetDepthBias
CmdSetDepthBounds
CmdSetDeviceMask
CmdSetDeviceMaskKHR
CmdSetDiscardRectangleEXT
CmdSetEvent
CmdSetExclusiveScissorNV
CmdSetLineWidth
CmdSetSampleLocationsEXT
CmdSetScissor
CmdSetStencilCompareMask
CmdSetStencilReference
CmdSetStencilWriteMask
CmdSetViewport
CmdSetViewportShadingRatePaletteNV
CmdSetViewportWScalingNV
CmdTraceRaysNVX
CmdUpdateBuffer
CmdWaitEvents
CmdWriteAccelerationStructurePropertiesNVX
CmdWriteBufferMarkerAMD
CmdWriteTimestamp
Code block
Color
Color buffer component types are not compatible.
Color buffer sizes are not compatible.
Color buffer types are not compatible.
Color number for primary color greater than or equal to MAX_DRAW_BUFFERS
Color number for secondary color greater than or equal to MAX_DUAL_SOURCE_DRAW_BUFFERS
ColorAndDepthDataFloat
ColorAndDepthDataSint
ColorAndDepthDataUint
Comma
Command successfully completed.
Compare Equal
Compare Greater Than
Compare Greater Than or Equal
Compare Less Than
Compare Less Than or Equal
Compare Not Equal
CompareStringEx
CompareStringW
CompileDeferredNVX
Component must be in the range [0;3]
Compressed texture dimensions must exactly match the dimensions of the data passed in.
Compressed textures cannot be attached to a framebuffer.
Compute shader is not supported in this shader version.
Condition
Constant folded addition overflowed to infinity
Constant folded division overflowed to infinity
Constant folded multiplication overflowed to infinity
Constant folded subtraction overflowed to infinity
Constant folded undefined addition generated NaN
Constant folded undefined multiplication generated NaN
Constant folded undefined subtraction generated NaN
Constant value cannot be passed for 'out' or 'inout' parameters.
Constant:
Construct
Construct bmat2
Construct bmat2x3
Construct bmat2x4
Construct bmat3
Construct bmat3x2
Construct bmat3x4
Construct bmat4
Construct bmat4x2
Construct bmat4x3
Construct bool
Construct bvec2
Construct bvec3
Construct bvec4
Construct combined texture-sampler
Construct dmat2
Construct dmat2x3
Construct dmat2x4
Construct dmat3
Construct dmat3x2
Construct dmat3x4
Construct dmat4
Construct dmat4x2
Construct dmat4x3
Construct double
Construct dvec2
Construct dvec3
Construct dvec4
Construct f16mat2
Construct f16mat2x3
Construct f16mat2x4
Construct f16mat3
Construct f16mat3x2
Construct f16mat3x4
Construct f16mat4
Construct f16mat4x2
Construct f16mat4x3
Construct f16vec2
Construct f16vec3
Construct f16vec4
Construct float
Construct float16_t
Construct i16vec2
Construct i16vec3
Construct i16vec4
Construct i64vec2
Construct i64vec3
Construct i64vec4
Construct i8vec2
Construct i8vec3
Construct i8vec4
Construct imat2
Construct imat2x3
Construct imat2x4
Construct imat3
Construct imat3x2
Construct imat3x4
Construct imat4
Construct imat4x2
Construct imat4x3
Construct int
Construct int16_t
Construct int64
Construct int8_t
Construct ivec2
Construct ivec3
Construct ivec4
Construct mat2
Construct mat2x3
Construct mat2x4
Construct mat3
Construct mat3x2
Construct mat3x4
Construct mat4
Construct mat4x2
Construct mat4x3
Construct structure
Construct u16vec2
Construct u16vec3
Construct u16vec4
Construct u64vec2
Construct u64vec3
Construct u64vec4
Construct u8vec2
Construct u8vec3
Construct u8vec4
Construct uint
Construct uint16_t
Construct uint64
Construct uint8_t
Construct umat2
Construct umat2x3
Construct umat2x4
Construct umat3
Construct umat3x2
Construct umat3x4
Construct umat4
Construct umat4x2
Construct umat4x3
Construct uvec2
Construct uvec3
Construct uvec4
Construct vec2
Construct vec3
Construct vec4
Consumer GL extension not enabled
Consumer GLTexture extension not active
Context does not support GL_ANGLE_texture_rectangle
Context does not support OpenGL ES 3.0 or GL_OES_mapbuffer is not enabled.
Context does not support OpenGL ES 3.0.
Context has been lost.
Context is lost.
Context lost.
ContextPriority
ContextStackSize
Contradictory depth layouts
Contradictory input layout primitives
Contradictory input vertex spacing
Contradictory layout max_vertices values
Contradictory layout vertices values
Contradictory local size
Contradictory local size specialization ids
Contradictory output layout primitives
Contradictory triangle ordering
Contradictory xfb_stride
Convert bool to double
Convert bool to float
Convert bool to float16_t
Convert bool to in16t_t
Convert bool to int
Convert bool to int64
Convert bool to int8_t
Convert bool to uint
Convert bool to uint16_t
Convert bool to uint64
Convert bool to uint8_t
Convert double to bool
Convert double to float
Convert double to float16_t
Convert double to int
Convert double to int16_t
Convert double to int64
Convert double to int8_t
Convert double to uint
Convert double to uint16_t
Convert double to uint64
Convert double to uint8_t
Convert float to bool
Convert float to double
Convert float to float16_t
Convert float to int
Convert float to int16_t
Convert float to int64
Convert float to int8_t
Convert float to uint
Convert float to uint16_t
Convert float to uint64
Convert float to uint8_t
Convert float16_t to bool
Convert float16_t to double
Convert float16_t to float
Convert float16_t to int
Convert float16_t to int16_t
Convert float16_t to int64
Convert float16_t to int8_t
Convert float16_t to uint
Convert float16_t to uint16_t
Convert float16_t to uint64
Convert float16_t to uint8_t
Convert int to bool
Convert int to double
Convert int to float
Convert int to float16_t
Convert int to int16_t
Convert int to int64
Convert int to int8_t
Convert int to uint
Convert int to uint16_t
Convert int to uint64
Convert int to uint8_t
Convert int16_t to bool
Convert int16_t to double
Convert int16_t to float
Convert int16_t to float16_t
Convert int16_t to int
Convert int16_t to int64
Convert int16_t to int8_t
Convert int16_t to uint
Convert int16_t to uint16_t
Convert int16_t to uint64
Convert int16_t to uint8_t
Convert int64 to bool
Convert int64 to double
Convert int64 to float
Convert int64 to float16_t
Convert int64 to int
Convert int64 to int16_t
Convert int64 to int8_t
Convert int64 to uint
Convert int64 to uint16_t
Convert int64 to uint64
Convert int64 to uint8_t
Convert int8_t to bool
Convert int8_t to double
Convert int8_t to float
Convert int8_t to float16_t
Convert int8_t to int
Convert int8_t to int16_t
Convert int8_t to int64
Convert int8_t to uint
Convert int8_t to uint16_t
Convert int8_t to uint64
Convert int8_t to uint8_t
Convert uint to bool
Convert uint to double
Convert uint to float
Convert uint to float16_t
Convert uint to int
Convert uint to int16_t
Convert uint to int64
Convert uint to int8_t
Convert uint to uint16_t
Convert uint to uint64
Convert uint to uint8_t
Convert uint16_t to bool
Convert uint16_t to double
Convert uint16_t to float
Convert uint16_t to float16_t
Convert uint16_t to int
Convert uint16_t to int16_t
Convert uint16_t to int64
Convert uint16_t to int8_t
Convert uint16_t to uint
Convert uint16_t to uint64
Convert uint16_t to uint8_t
Convert uint64 to bool
Convert uint64 to double
Convert uint64 to float
Convert uint64 to float16_t
Convert uint64 to int
Convert uint64 to int16_t
Convert uint64 to int64
Convert uint64 to int8_t
Convert uint64 to uint
Convert uint64 to uint16
Convert uint64 to uint8_t
Convert uint8_t to bool
Convert uint8_t to double
Convert uint8_t to float
Convert uint8_t to float16_t
Convert uint8_t to int
Convert uint8_t to int16_t
Convert uint8_t to int64
Convert uint8_t to int8_t
Convert uint8_t to uint
Convert uint8_t to uint16_t
Convert uint8_t to uint64
CopyImage
CopyLockableSurfaces
Copying 2D array textures is unimplemented.
Copying 3D textures is unimplemented.
Copyright (c) by P.J. Plauger, licensed by Dinkumware, Ltd. ALL RIGHTS RESERVED.
CorExitProcess
Could not create D3D11 device, 
Could not create D3D11 device.
Could not create D3D9 device.
Could not create a counting index buffer for glDrawArraysInstanced.
Could not create additional swap chains or offscreen surfaces, 
Could not create compute shader.
Could not create depthstencil surface for new swap chain, 
Could not create geometry shader.
Could not create matching destination surface
Could not create offscreen texture, 
Could not create pixel shader.
Could not create vertex shader.
Could not find a compatible pixel format for the dummy OpenGL window.
Could not find a compatible pixel format for the intermediate OpenGL window.
Could not fit output variable into available locations: 
Could not get offscreen texture shared handle, 
Could not load D3D11 or DXGI library.
Could not open shared handle. 
Could not pack varying 
Could not process include directive
Could not query description of the D3D9 surface.
Could not query offscreen texture resource, 
Could not query the D3D11 device from the client buffer.
Could not query the D3D9 device from the client buffer.
Could not read DXGI adaptor description.
Could not reinitialize D3D11 device: 
Could not retrieve D3D11CreateDevice address.
Could not retrieve DXGI adapter
Could not retrieve the window dimensions
Could not set thread local storage.
Could not use provided offscreen texture, texture not renderable.
CreateAccelerationStructureNVX
CreateBuffer
CreateBufferView
CreateCommandPool
CreateComputePipelines
CreateDebugReportCallbackEXT
CreateDebugUtilsMessengerEXT
CreateDescriptorPool
CreateDescriptorSetLayout
CreateDescriptorUpdateTemplate
CreateDescriptorUpdateTemplateKHR
CreateDevice
CreateDevice failed: device lost of out of memory
CreateDevice2 failed: device lost, not available, or of out of memory
CreateDisplayModeKHR
CreateDisplayPlaneSurfaceKHR
CreateEvent
CreateEventExW
CreateEventW
CreateFence
CreateFileW
CreateFramebuffer
CreateGraphicsPipelines
CreateImage
CreateImageView
CreateIndirectCommandsLayoutNVX
CreateInstance
CreateMutexW
CreateObjectTableNVX
CreatePipelineCache
CreatePipelineLayout
CreatePlatformPixmapSurfaceEXT unimplemented.
CreatePlatformWindowSurfaceEXT unimplemented.
CreateQueryPool
CreateRaytracingPipelinesNVX
CreateRemoteThreadEx
CreateRenderPass
CreateRenderPass2KHR
CreateSampler
CreateSamplerYcbcrConversion
CreateSamplerYcbcrConversionKHR
CreateSemaphore
CreateSemaphoreExW
CreateSemaphoreW
CreateShaderModule
CreateSharedSwapchainsKHR
CreateSwapchainKHR
CreateSymbolicLinkW
CreateThread
CreateThreadpoolTimer
CreateThreadpoolWait
CreateThreadpoolWork
CreateTimerQueue
CreateTimerQueueTimer
CreateUmsCompletionList
CreateUmsThreadContext
CreateValidationCacheEXT
CreateWin32SurfaceKHR
CreateWindowEx
CreateWindowExA
CreateWindowExW
Csinhf
Cube_comparison
Cube_float4_
Cube_int4_
Cube_snorm_float4_
Cube_uint4_
Cube_unorm_float4_
Cull mode not recognized.
CullDistance
Current GL context not associated with stream consumer
Current driver does not support transform feedback in binary programs.
Current matrix stack has only a single matrix.
Current matrix stack is full.
Current renderer doesn't support alpha-to-coverage
Cy2@K>
D W?{W
D!l$xA
D"t$%
D"t$%D
D#	A	
D$	@8
D$ 3A
D$ 3Q
D$ 80
D$ @B
D$ A;
D$ E1
D$ E3
D$ H9
D$ H;
D$ H;C
D$ H;F
D$ H;GPu
D$ H;L$0
D$ Hc@
D$ I9
D$ I;
D$ I;E
D$ L9
D$ t"H
D$ t7H
D$ u'L9
D$$A9D?
D$$tgH
D$(;D$,s;H
D$(@u
D$(D9
D$(E1
D$(H9
D$(H9D$8t=H
D$(H9T$@t
D$(H;
D$(H;4
D$(H;C
D$(H;D$ u
D$(H;D$0u
D$(H;D$8
D$(H;E@u
D$(H;F
D$(H;FPu
D$(H;L$8
D$(H;L$H
D$(Hc@
D$(HcP8H
D$(I9
D$(I;
D$(Ic
D$(Ii
D$(L9
D$(L;
D$(M)
D$(m	
D$(t5H
D$(tdH
D$(z	
D$," 
D$,# 
D$,' 
D$,+ 
D$,9C
D$,A9D?
D$,H)
D$,H9T$@t
D$,H9V
D$,H;
D$,Hc
D$,Ic
D$,vwH
D$09C
D$0D	
D$0E1
D$0E3
D$0E;
D$0H#
D$0H+
D$0H+D$8
D$0H9
D$0H9D$@
D$0H;
D$0H;D$(u
D$0Hc
D$0HcH
D$0I)
D$0I9
D$0I;
D$0Ic
D$0L9
D$0L;|$P
D$0f;VPu
D$0fD
D$0fH
D$0t&L
D$0t:H
D$0tVA
D$49C
D$4;D$8@
D$4;D$L
D$7E1
D$8D	
D$8E1
D$8H)
D$8H+D$0H
D$8H9
D$8H;D$0
D$8H;G
D$8H;t$@
D$8H=
D$8Hc
D$8HcJ
D$8I9
D$8I;D$@u
D$8Ic
D$8L9
D$8L;|$`H
D$8M)
D$8fB
D$8fD
D$<;GLt
D$<C9
D$<E1
D$?E1
D$?t\H
D$?t]H
D$@D8x
D$@E1
D$@E3
D$@H)
D$@H+
D$@H9
D$@H9A
D$@H9D$Ht41
D$@H9|$Hv
D$@H;
D$@H;G
D$@Hc
D$@I)
D$@I9
D$@Ic
D$@L9
D$@[H
D$@fD
D$C=es
D$D;C
D$Gu'H
D$H;E
D$HE1
D$HH+D$@H
D$HH9
D$HH9A
D$HH;D$P
D$HI)
D$HI9F
D$HIi
D$HL)
D$HL9
D$HM)
D$It\L
D$LA;
D$LM;
D$LfA
D$MfA
D$OE1
D$P I
D$PA#
D$PA+
D$PA;
D$PD	
D$PE1
D$PH+
D$PH9
D$PH9T$@
D$PH;
D$PH;D$Xu?
D$PHi
D$PI)
D$PI;
D$PIc
D$PL9
D$PL9	s
D$PL;
D$PLc
D$Pt=H
D$Rtz
D$T3D$L
D$TE1
D$THi
D$WtEC
D$XE1
D$XH+
D$XH9
D$XH9D$Pt
D$XH9D$`
D$XH;D$`u8H
D$XI)
D$XI9
D$XIc
D$XIcA
D$XM)
D$XM9
D$Xu3
D$\E1
D$_)H9
D$_HcF
D$_Hc}
D$_}H9
D$`9i
D$`E1
D$`E3
D$`H;D$H
D$`H;D$P
D$`Hc
D$`I)
D$`Ic
D$`Ic}
D$`L;
D$`M9
D$`~-H
D$h9t$P
D$hE1
D$hE;
D$hH9
D$hH;D$`
D$hI9
D$hL)
D$hfA
D$kt#
D$mfA
D$pE:
D$pH)
D$pH9t$xv
D$pHc
D$pI)
D$pI+D$hH
D$pI9
D$pI;D$xtXL
D$pIc
D$pIcA
D$pt	H
D$tE1
D$tLcC
D$xE1
D$xH9
D$xHc
D$xI)
D$xI+D$pH
D$xI9
D$xI;
D$xsTL
D$|E1
D$|H9
D$|Lc
D$}fA
D&HK;D&Pt*
D&HK;D&PuiK
D):A:
D+ 90
D+ShHcChM
D+\$ 
D+d$8H
D.XK;D.`t*
D.XK;D.`upK
D/0L;|$(
D3D compiler module not found.
D3D11 device creation extension not active
D3D11CreateDevice
D3D11CreateDevice (Debug)
D3D9 doesn't support ES 3.1 DispatchCompute API
D3D9 doesn't support ES 3.1 DrawArraysIndirect API
D3D9 doesn't support ES 3.1 DrawElementsIndirect API
D3D9 doesn't support ES 3.1 dispatchComputeIndirect API
D3D9 doesn't support ES 3.1 memoryBarrier API
D3D9 doesn't support ES 3.1 memoryBarrierByRegion API
D3DCompile
D3DDisassemble
D3DPERF_BeginEvent
D3DPERF_EndEvent
D3DPERF_GetStatus
D3DPERF_SetMarker
D3d9Ex_QueryInterface
D3d9_CreateDevice
D3d9_CreateDevice2
D8&t 
D8&t4H
D88Ht;I
D8?t	H
D8M@t
D8M@t^
D8T$p
D8T$pt
D8\$Pt
D8d$8t
D8d$Xt
D8l$/A
D8l$`
D8l$ht
D8t$8t
D8uOt	H
D8|$0u
D9!tPH
D9!u7D9i
D9$(u
D9&t H
D9&t!H
D9&t/
D96t8L
D96tKH
D96tzH
D96}\H
D9<8u<
D9>t$H
D9>t\
D9A u
D9A4A
D9A`t
D9B,t
D9G$s5
D9H t
D9I s
D9I$u
D9I$|
D9I(s
D9J t"
D9J,w
D9Q$u
D9Q,u
D9Y$v+E
D9c t
D9d$$u
D9d$,t#1
D9d$,u
D9d$4u
D9d$@}
D9d$l
D9g@~2Ic
D9h(uiE
D9h@uU
D9k(u
D9l$@u
D9l$D~jE
D9l$htAA
D9m4A
D9m8A
D9t$8
D9v(u
D9{<D
D9|$(
D9|$4H
D9|$T
D;8t)L
D;B @
D;XJ;D;`t
D;d$$A
D;d$$u
D;d$8
D;j0v
D;l$0
D;t$(
D;t$<E
D;w@|
D;z,A
D;z,u
D;z,v	A
D;|$0}
D;|$H
D;|$l
D?HJ;D?PtlH
DCompositionCreateDevice
DD$TH
DD8T$pu
DEBUG
DEC_OP
DEFAULT
DEPTH
DEVICE
DEVICECOHERENT
DISCARD
DIV_ASSIGN
DIcMx
DMAT2
DMAT2X2
DMAT2X3
DMAT2X4
DMAT3
DMAT3X2
DMAT3X3
DMAT3X4
DMAT4
DMAT4X2
DMAT4X3
DMAT4X4
DOUBLE
DOUBLECONSTANT
DVEC2
DVEC3
DVEC4
DXBC :]T
DXBC"
DXBC"z
DXBC#
DXBC%8+
DXBC'
DXBC(H
DXBC(PW
DXBC*
DXBC+
DXBC-
DXBC0
DXBC0Ta
DXBC2p
DXBC3Z1
DXBC6
DXBC=
DXBC>w=
DXBC?:
DXBC@
DXBC@}n
DXBCE
DXBCG
DXBCL9
DXBCM
DXBCO
DXBCQ
DXBCR
DXBCT
DXBCU=<$!
DXBCVy
DXBCW
DXBCY
DXBCY{
DXBCZ
DXBC\
DXBC\#
DXBC][
DXBC^p2iqm
DXBC^u
DXBCa
DXBCafK
DXBCg
DXBCi
DXBCj+
DXBCk
DXBCl
DXBClh
DXBCn
DXBCqe)
DXBCu
DXBCvi
DXBCz
DXBC{
DXGI 1.2 required to present to HWNDs owned by another process.
DXGISwapChainWindowSurfaceWGL requires an orientation of EGL_SURFACE_ORIENTATION_INVERT_Y_ANGLE.
DXT1E1
DXT3E1
DXT5E1
DebugMarkerSetObjectNameEXT
DebugMarkerSetObjectTagEXT
DebugReportCallback
DebugReportMessageEXT
December
Declaration
DecodePointer
DefWindowProcA
Default
Default framebuffer is bound to target.
Default vertex array buffer is bound.
Default vertex array object is bound.
DeleteCriticalSection
DeleteProcThreadAttributeList
DeleteTimerQueueTimer
DeleteUmsCompletionList
DeleteUmsThreadContext
Deleting
Deprecated behavior
Depth
Depth-stencil buffer types are not compatible.
Depth/stencil buffer format combination not allowed for blit.
DepthOnlyData
DequeueUmsCompletionListItems
DescribePixelFormat
Desired resource size is greater than max texture size.
Destination cannot be immutable.
Destination internal format and type combination is not valid.
Destination texture a valid texture type.
Destination texture cannot be immutable.
Destination texture is immutable.
Destination texture is not a valid texture object.
Destination texture level is not valid.
Destination texture must be of type GL_TEXTURE_2D.
Destination texture not large enough to copy to.
Destination texture too small.
Destination width and height must be equal for cube map textures.
DestroyAccelerationStructureNVX
DestroyBuffer
DestroyBufferView
DestroyCommandPool
DestroyDebugReportCallbackEXT
DestroyDebugUtilsMessengerEXT
DestroyDescriptorPool
DestroyDescriptorSetLayout
DestroyDescriptorUpdateTemplate
DestroyDescriptorUpdateTemplateKHR
DestroyDevice
DestroyEvent
DestroyFence
DestroyFramebuffer
DestroyImage
DestroyImageView
DestroyIndirectCommandsLayoutNVX
DestroyInstance
DestroyObjectTableNVX
DestroyPipeline
DestroyPipelineCache
DestroyPipelineLayout
DestroyQueryPool
DestroyRenderPass
DestroySampler
DestroySamplerYcbcrConversion
DestroySamplerYcbcrConversionKHR
DestroySemaphore
DestroyShaderModule
DestroySurfaceKHR
DestroySwapchainKHR
DestroyValidationCacheEXT
DestroyWindow
Device Extension: %s (%s) version %s
Device creation extension not active
Device layers are deprecated skipping this layer
Device lost reset failed multiple times
Device must have been created using eglCreateDevice
Device was lost while querying result of an event query.
Device was lost while waiting for sync.
Device wasn't created using eglCreateDeviceANGLE, and the Display that created it doesn't support device querying
DeviceContext
DeviceIndex
DeviceMemoryBarrier
DeviceMemoryBarrier(
DeviceMemoryBarrierWithGroupSync
DeviceWaitIdle
Didn't find required layer child value disable_environmentin manifest JSON file, skipping this layer
Didn't find required layer object %s in manifest JSON file, skipping this layer
Didn't find required layer value %s in manifest JSON file, skipping this layer
Direct3D platform is unsupported.
Direct3DCreate9
Direct3DCreate9Ex
Disjoint timer query not enabled
Dispatch indirect buffer must be bound.
Display type EGL_PLATFORM_ANGLE_TYPE_NULL_ANGLE requires EGL_ANGLE_platform_angle_null.
DisplayImpl::validateClientBuffer unimplemented.
DisplayPowerControlEXT
Divide by zero during constant folding
Divide by zero error during constant folding
Dl$8E
Draw framebuffer is incomplete
Draw mode must match current transform feedback object's draw mode.
DrawArraysIndirect hasn't been implemented for vulkan backend.
DrawCallParams
DrawElementsIndirect hasn't been implemented for vulkan backend.
DrawId
Drop stencil texture not implemented.
DuplicateHandle
DynamicProgressFeedback
E  uQ
E H+E
E#e0K
E#e@K
E#n0I
E#o0I
E(H9E0
E(f95$
E+BhIcBhM
E0HcH
E0Lcx
E8H9]@v
E8I9E@
E8X@t8A
E94$u,A
E;A M
E;B0E
E;Bl}DM
E>nEA
E@H;EHtOE1
E@I+E8H
EGL image internal format is not supported as a renderbuffer.
EGL image internal format is not supported as a texture.
EGL image is not valid.
EGL stream consumer external GL extension not enabled
EGL_ANDROID_blob_cache
EGL_ANDROID_presentation_time
EGL_ANDROID_presentation_time is not available.
EGL_ANGLE_create_context_client_arrays
EGL_ANGLE_create_context_extensions_enabled
EGL_ANGLE_create_context_webgl_compatibility
EGL_ANGLE_d3d_share_handle_client_buffer
EGL_ANGLE_d3d_texture_client_buffer
EGL_ANGLE_device_creation
EGL_ANGLE_device_creation_d3d11
EGL_ANGLE_device_d3d
EGL_ANGLE_direct_composition
EGL_ANGLE_display_texture_share_group
EGL_ANGLE_experimental_present_path
EGL_ANGLE_experimental_present_path extension not active
EGL_ANGLE_explicit_context
EGL_ANGLE_flexible_surface_compatibility
EGL_ANGLE_iosurface_client_buffer
EGL_ANGLE_keyed_mutex
EGL_ANGLE_platform_angle
EGL_ANGLE_platform_angle extension not active
EGL_ANGLE_platform_angle_context_virtualization
EGL_ANGLE_platform_angle_context_virtualization extension not active
EGL_ANGLE_platform_angle_d3d
EGL_ANGLE_platform_angle_d3d is not supported
EGL_ANGLE_platform_angle_null
EGL_ANGLE_platform_angle_opengl
EGL_ANGLE_platform_angle_vulkan
EGL_ANGLE_program_cache_control
EGL_ANGLE_query_surface_pointer
EGL_ANGLE_robust_resource_initialization
EGL_ANGLE_stream_producer_d3d_texture
EGL_ANGLE_surface_d3d_texture_2d_share_handle
EGL_ANGLE_surface_orientation
EGL_ANGLE_surface_orientation is not enabled.
EGL_ANGLE_window_fixed_size
EGL_ANGLE_x11_visual
EGL_CHROMIUM_create_context_bind_generates_resource
EGL_CHROMIUM_sync_control
EGL_CONTEXT_BIND_GENERATES_RESOURCE_CHROMIUM must be EGL_TRUE or EGL_FALSE.
EGL_CONTEXT_CLIENT_ARRAYS_ENABLED_ANGLE must be EGL_TRUE or EGL_FALSE.
EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_KHR is not
EGL_CONTEXT_PROGRAM_BINARY_CACHE_ENABLED_ANGLE must be EGL_TRUE or EGL_FALSE.
EGL_CONTEXT_WEBGL_COMPATIBILITY_ANGLE must be EGL_TRUE or EGL_FALSE.
EGL_DIRECT_COMPOSITION_ANGLE cannot be used without EGL_ANGLE_direct_composition support.
EGL_DISPLAY_TEXTURE_SHARE_GROUP_ANGLE must be EGL_TRUE or EGL_FALSE.
EGL_EXPERIMENTAL_PRESENT_PATH_ANGLE requires a device type of EGL_PLATFORM_ANGLE_TYPE_D3D11_ANGLE.
EGL_EXTENSIONS_ENABLED_ANGLE must be either EGL_TRUE or EGL_FALSE.
EGL_EXT_client_extensions
EGL_EXT_create_context_robustness
EGL_EXT_device_query
EGL_EXT_pixel_format_float
EGL_EXT_pixel_format_float is not enabled.
EGL_EXT_platform_base
EGL_EXT_platform_base not supported
EGL_EXT_platform_device
EGL_FIXED_SIZE_ANGLE cannot be used without EGL_ANGLE_window_fixed_size support.
EGL_FLEXIBLE_SURFACE_COMPATIBILITY_SUPPORTED_ANGLE cannot be used without EGL_ANGLE_flexible_surface_compatibility support.
EGL_GL_COLORSPACE may only be specified for TYPELESS textures
EGL_GL_TEXTURE_LEVEL_KHR cannot be negative.
EGL_GL_TEXTURE_LEVEL_KHR cannot be used in conjunction with a renderbuffer target.
EGL_GL_TEXTURE_LEVEL_KHR cannot be used without KHR_gl_texture_*_image support.
EGL_GL_TEXTURE_ZOFFSET_KHR cannot be used without KHR_gl_texture_3D_image support.
EGL_GL_TEXTURE_ZOFFSET_KHR must be used with a 3D texture target.
EGL_IMAGE_PRESERVED_KHR must be EGL_TRUE or EGL_FALSE.
EGL_IOSURFACE requires the EGL_TEXTURE_RECTANGLE target
EGL_IOSURFACE requires the EGL_TEXTURE_RGBA format
EGL_KHR_client_get_all_proc_addresses
EGL_KHR_create_context
EGL_KHR_debug
EGL_KHR_debug extension is not available.
EGL_KHR_get_all_proc_addresses
EGL_KHR_gl_renderbuffer_image
EGL_KHR_gl_texture_2D_image
EGL_KHR_gl_texture_3D_image
EGL_KHR_gl_texture_cubemap_image
EGL_KHR_image
EGL_KHR_image not supported.
EGL_KHR_image_base
EGL_KHR_image_pixmap
EGL_KHR_stream
EGL_KHR_stream_consumer_gltexture
EGL_KHR_surfaceless_context
EGL_KHR_swap_buffers_with_damage
EGL_KHR_swap_buffers_with_damage is not available.
EGL_NV_post_sub_buffer
EGL_NV_stream_consumer_gltexture_yuv
EGL_PLATFORM_ANGLE_DEBUG_LAYERS_ENABLED_ANGLE must be EGL_TRUE, EGL_FALSE, or EGL_DONT_CARE.
EGL_PLATFORM_ANGLE_DEVICE_TYPE_WARP_ANGLE requires a device type of EGL_PLATFORM_ANGLE_TYPE_D3D11_ANGLE.
EGL_PLATFORM_ANGLE_EGL_HANDLE_ANGLE requires a device type of EGL_PLATFORM_ANGLE_TYPE_OPENGLES_ANGLE.
EGL_PLATFORM_ANGLE_ENABLE_AUTOMATIC_TRIM_ANGLE requires a device type of EGL_PLATFORM_ANGLE_TYPE_D3D11_ANGLE.
EGL_PLATFORM_ANGLE_TYPE_VULKAN_ANGLE currently only supports Vulkan 1.0.
EGL_POST_SUB_BUFFER_SUPPORTED_NV cannot be used without EGL_ANGLE_surface_orientation support.
EGL_ROBUST_RESOURCE_INITIALIZATION_ANGLE cannot be used without EGL_ANGLE_robust_resource_initialization support.
EGL_ROBUST_RESOURCE_INITIALIZATION_ANGLE must be either EGL_TRUE or EGL_FALSE.
EGL_SURFACE_ORIENTATION_ANGLE cannot be queried without EGL_ANGLE_surface_orientation support.
EGL_WIDTH or EGL_HEIGHT cannot be set without EGL_ANGLE_window_fixed_size support.
EGL_WIDTH or EGL_HEIGHT cannot be set without EGL_FIXED_SIZE_ANGLE being enabled on the surface.
EHA9Wp
EHH;EPt
EHH;EPt$H
EOF while in a comment
EP*?H
EPHc@
EPI+EHH
EQUAL
EQ_OP
ERROR
ERROR: 
ES3 texture parameters are not available without GL_OES_EGL_image_external_essl3.
ET$(H
ETC lossy decode formats can't be copied to.
EXPLICITINTERPAMD
EXT_YUV_target
EXT_blend_func_extended
EXT_draw_buffers
EXT_frag_depth
EXT_geometry_shader
EXT_shader_framebuffer_fetch
EXT_shader_texture_lod
Each cubemap face must have equal width and height.
EhI+E`H
El$@u
Element value exceeds maximum element index.
Embedded struct definitions are not allowed
EmitStreamVertex
EmitVertex
EncodePointer
Encountered meta-layer %s
Encountered the vkEnumerateDeviceLayerProperties terminator.  This means a layer improperly continued.
End of input in comment
End of input in macro
End of line in macro substitution:
End of line in string
EndCommandBuffer
EndPrimitive
EndStreamPrimitive
EnterCriticalSection
EnterUmsSchedulingMode
Entering state %d
Entry point not found
Enum is not currently supported.
Enum requires GLES 3.1
EnumSystemLocalesEx
EnumSystemLocalesW
EnumerateDeviceExtensionProperties
EnumerateDeviceLayerProperties
EnumerateInstanceExtensionProperties
EnumerateInstanceLayerProperties
EnumerateInstanceVersion
EnumeratePhysicalDeviceGroups
EnumeratePhysicalDeviceGroupsKHR
EnumeratePhysicalDevices
Equal
Error
Error allocating BlendState
Error allocating Buffer
Error allocating ComputeShader
Error allocating DepthStencilState
Error allocating DepthStencilView
Error allocating GeometryShader
Error allocating InputLayout
Error allocating PixelShader
Error allocating Query
Error allocating RasterizerState
Error allocating RenderTargetView
Error allocating SamplerState
Error allocating ShaderResourceView
Error allocating Texture2D
Error allocating Texture3D
Error allocating UnorderedAccessView
Error allocating VertexShader
Error compiling dynamic compute executable:
Error compiling dynamic geometry executable
Error compiling dynamic geometry executable:
Error compiling dynamic geometry executable: 
Error compiling dynamic pixel executable
Error compiling dynamic pixel executable:
Error compiling dynamic pixel executable: 
Error compiling dynamic vertex executable
Error compiling dynamic vertex executable:
Error compiling dynamic vertex executable: 
Error during layout qualifier parsing.
Error finding D3DCompile entry point.
Error getting CWD for Vulkan layers init.
Error querying driver version from DXGI Adapter.
Error reading swap chain description, 
Error resizing swap chain buffers, 
Error setting CWD for Vulkan layers init.
Error setting Path for Mock/Null Driver.
Error setting environment for Vulkan layers init.
Error: discarding
Error: popping
Except for images with the r32f, r32i and r32ui format qualifiers, image variables must be qualified readonly and/or writeonly
ExecuteUmsThread
ExitProcess
Expected a program name, but found a shader name.
Expected a shader name, but found a program name.
Expected invariant
Expected loop index
Expression too complex.
Extension 
Extension %s not supported for this physical device
Extension is not enabled.
Extension not supported
Extension not supported.
External texture extension not enabled
ExternalOES
E|$8H
F 9G u
F H+F
F I;F(u6
F(9Plv<H
F(9X8
F(9X<
F(9X@
F(9XlvHM
F(9x\s@H
F(;X 
F(;X4r
F(D9@4v
F(D9@4v?H
F(D9@4v~H
F(D9w
F(H+F
F(H+F H
F(H9O(t
F(HcF
F(LcF I
F,9G,u_H
F0HcN H
F16IMAGE1D
F16IMAGE1DARRAY
F16IMAGE2D
F16IMAGE2DARRAY
F16IMAGE2DMS
F16IMAGE2DMSARRAY
F16IMAGE2DRECT
F16IMAGE3D
F16IMAGEBUFFER
F16IMAGECUBE
F16IMAGECUBEARRAY
F16MAT2
F16MAT2X2
F16MAT2X3
F16MAT2X4
F16MAT3
F16MAT3X2
F16MAT3X3
F16MAT3X4
F16MAT4
F16MAT4X2
F16MAT4X3
F16MAT4X4
F16SAMPLER1D
F16SAMPLER1DARRAY
F16SAMPLER1DARRAYSHADOW
F16SAMPLER1DSHADOW
F16SAMPLER2D
F16SAMPLER2DARRAY
F16SAMPLER2DARRAYSHADOW
F16SAMPLER2DMS
F16SAMPLER2DMSARRAY
F16SAMPLER2DRECT
F16SAMPLER2DRECTSHADOW
F16SAMPLER2DSHADOW
F16SAMPLER3D
F16SAMPLERBUFFER
F16SAMPLERCUBE
F16SAMPLERCUBEARRAY
F16SAMPLERCUBEARRAYSHADOW
F16SAMPLERCUBESHADOW
F16SUBPASSINPUT
F16SUBPASSINPUTMS
F16TEXTURE1D
F16TEXTURE1DARRAY
F16TEXTURE2D
F16TEXTURE2DARRAY
F16TEXTURE2DMS
F16TEXTURE2DMSARRAY
F16TEXTURE2DRECT
F16TEXTURE3D
F16TEXTUREBUFFER
F16TEXTURECUBE
F16TEXTURECUBEARRAY
F16VEC2
F16VEC3
F16VEC4
F32MAT2
F32MAT2X2
F32MAT2X3
F32MAT2X4
F32MAT3
F32MAT3X2
F32MAT3X3
F32MAT3X4
F32MAT4
F32MAT4X2
F32MAT4X3
F32MAT4X4
F32VEC2
F32VEC3
F32VEC4
F64MAT2
F64MAT2X2
F64MAT2X3
F64MAT2X4
F64MAT3
F64MAT3X2
F64MAT3X3
F64MAT3X4
F64MAT4
F64MAT4X2
F64MAT4X3
F64MAT4X4
F64VEC2
F64VEC3
F64VEC4
F8H98u
F8H9n@v
F8L9f@H
F<9G<u
F>qUxv
F@H;F8u
FHH9x
FHH;FPt	H
FHH;FPt3H
FHH;FPt?H
FHH;FPtMH
FHH;FPtgH
FHH;h
FI9n@u
FLATTEN 
FLOAT
FLOAT16CONSTANT
FLOAT16_T
FLOAT32_T
FLOAT64_T
FLOATCONSTANT
FPH+FHH
FPH9FHtGL
FRAGMENT
FX8HXt
FXH+FHH
FXH9~Hu
FXL9f`v
F`H+FXH
F`H;FXt/1
Fail to schedule the chore!
Failed creating Debug D3D11 device - falling back to release runtime.
Failed to DescribePixelFormat, 
Failed to allocate event query
Failed to allocate host memory
Failed to allocate internal index buffer
Failed to allocate internal texture for ReadPixels.
Failed to allocate internal texture for blit
Failed to allocate internal vertex buffer
Failed to allocate memory for binary blob
Failed to allocate path handle range.
Failed to allocate path objects.
Failed to allocate space for legacy VK_LAYER_LUNARG_standard_validation meta-layer component_layers information.
Failed to begin internal query, 
Failed to bind native wgl pbuffer, 
Failed to blit internal texture
Failed to compile internal blit shader.
Failed to copy between internal blit textures
Failed to copy render target
Failed to create 2D storage texture
Failed to create D3D Shaders
Failed to create D3D compute shader.
Failed to create a 16-bit looping index buffer for GL_LINE_LOOP, too many indices required.
Failed to create a 32-bit looping index buffer for GL_LINE_LOOP, too many indices required.
Failed to create a WGL context for the intermediate OpenGL window.
Failed to create a native WGL pbuffer, 
Failed to create a scratch index buffer for GL_TRIANGLE_FAN, too many indices required.
Failed to create cube storage texture
Failed to create dummy OpenGL window.
Failed to create event query
Failed to create image surface
Failed to create intermediate OpenGL window.
Failed to create internal blit vertex shader
Failed to create internal blit vertex shader declaration
Failed to create internal vertex declaration
Failed to create render target
Failed to create shader
Failed to create swap chain for window, 
Failed to end event query, 
Failed to end internal query, 
Failed to find function "%s" in dynamic library
Failed to find vkGetDeviceProcAddr in layer %s
Failed to get device caps, 
Failed to get event query data
Failed to get frame statistics, 
Failed to get query data
Failed to get the WGL pbuffer handle, 
Failed to get the data of an internal query
Failed to get the device context from the native window, 
Failed to get the device context of the dummy OpenGL window.
Failed to get the device context of the intermediate OpenGL window.
Failed to get the surface from a texture
Failed to initialize display because device creation failed: 
Failed to issue event query
Failed to link internal blit program.
Failed to load DXGI library.
Failed to load OpenGL library.
Failed to load binary from cache: 
Failed to load d3d11 library.
Failed to lock D3D object, 
Failed to lock destination surface for copy
Failed to lock image surface
Failed to lock internal blit vertex shader
Failed to lock internal index buffer
Failed to lock internal render target.
Failed to lock internal vertex buffer
Failed to lock internal vertex buffer for discarding
Failed to lock object, 
Failed to lock source surface for copy
Failed to lock the destination surface for CopyImage
Failed to lock the destination surface for mipmap generation
Failed to lock the source surface (rectangle might be invalid)
Failed to lock the source surface for CopyImage
Failed to lock the source surface for mipmap generation
Failed to make the WGL context current.
Failed to make the dummy WGL context current.
Failed to make the intermediate WGL context current.
Failed to map D3D11 resource.
Failed to open D3D device.
Failed to open dynamic library "%s" with error %lu
Failed to present swap chain, 
Failed to query ID3D11Texture2D object from share handle.
Failed to query surface of internal blit texture
Failed to query texture from swap chain, 
Failed to query the DXGIFactory.
Failed to query the WGL pbuffer's dimensions, 
Failed to query the destination surface description for CopyImage
Failed to query the destination surface description for mipmap generation
Failed to query the source surface description for CopyImage
Failed to query the source surface description for mipmap generation
Failed to query the window size.
Failed to read internal render target data.
Failed to register D3D object, 
Failed to register intermediate OpenGL window class "
Failed to resize buffer data shadow copy.
Failed to resize internal buffer.
Failed to set shader for blit operation
Failed to set the pixel format on the device context, 
Failed to set the pixel format on the intermediate OpenGL window.
Failed to store binary blob in memory cache, blob is too large.
Failed to swap buffers on the child window.
Failed to test get query result, device is lost.
Failed to unbind native wgl pbuffer, 
Failed to unlock D3D object, 
Failed to unlock image surface
Failed to unlock internal index buffer
Failed to unlock internal vertex buffer for discarding
Failed to unlock object, 
Failed to unmap the client data streaming buffer.
Failed to unregister D3D object, 
Failed to unregister OpenGL window class: 
FcGw)+
Fd9Gdu
February
Feedback loop formed between Framebuffer and active Texture.
Fence must be set.
FenceSetHelper
FenceTestHelper
Fetch
FhH9FptY1
FhH9G rDH
FhH;Fpt)H
FhH;Fpt*H
FhI;Fpt
Field name
Field number
FileTimeToSystemTime
FindClose
FindFirstFileExW
FindNextFileW
FirstPixelOffset
FirstSlice
Fl9Glu.
Float overflow
Floating-point suffix unsupported prior to GLSL ES 3.00
Floor
FlsAlloc
FlsFree
FlsGetValue
FlsSetValue
Flush is unimplemented. http://anglebug.com/2504
FlushFileBuffers
FlushMappedMemoryRanges
FlushProcessWriteBuffers
Flushed range does not fit into buffer mapping dimensions.
FogFragCoord
Format cannot be GL_DEPTH_COMPONENT or GL_DEPTH_STENCIL if target is GL_TEXTURE_3D
Format must match the internal format of the texture.
FormatMessageW
Found ICD manifest file %s, version %s
Found manifest file %s, version %s
Found pre_instance_functions section in explicit layer from "%s". This section is only valid in implicit layers. The section will be ignored
Found pre_instance_functions section in layer from "%s". This section is only valid in manifest version 1.1.2 or later. The section will be ignored
Fp9Gpu&
FpH;Fxt
FpM+FhI
Fraction
FragColor
FragCoord
FragData
FragDepth
FragStencilRef
Fragment input type is not a floating point scalar or vector.
Fragment output color index must be zero or one.
Fragment shader output type does not match the bound framebuffer attachment type.
Fragment shader version does not match vertex shader version.
Framebuffer
Framebuffer layer cannot be less than 0 or greater than GL_MAX_FRAMEBUFFER_LAYERS_EXT.
FreeCommandBuffers
FreeDescriptorSets
FreeEnvironmentStringsW
FreeLibrary
FreeLibraryAndExitThread
FreeLibraryWhenCallbackReturns
FreeMemory
Friday
Front-end Error: 
FrontColor
FrontFacing
FrontSecondaryColor
Ft9Gtu
Function Call: 
Function Definition:
Function Definition: 
Function Parameters: 
Function Prototype
Function call discards the 'coherent' qualifier from image
Function call discards the 'readonly' qualifier from image
Function call discards the 'volatile' qualifier from image
Function call discards the 'writeonly' qualifier from image
Function has too many parameters.
Function parameter type cannot be a structure definition
Fu{Hc
G	:D$`u
G	:D$vu
G	:D$wu
G	:D$xu1
G	:D$yt
G A+G
G H+G
G H;Fhv0H
G I9G(M
G$;G,
G(9G u
G(H+G
G(H+G H
G(I+G
G(I+G H
G,9G$u
G0H9_8v
G0Hc	H
G0LcGDI
G4;F4
G8H+G0H
G8H9G0t<H
G8H9G0u
G8H9_@v
G8H;G0
G8H;G@tCH
G8HcODI
G8L98u	H
G8L9w@v
G;)3\
G@H)F
G@H9G8stH
GD=T4
GDI32.dll
GEOMETRY
GEOMETRY SHADER END
GE_OP
GHH9_Pv
GHH;GP
GHH;GPt3H
GHH;X
GHI;GPt
GHcQ 
GL framebuffer returned incomplete.
GLES1-only function.
GLES1Renderer program link failed.
GLES1Renderer shader compile failed.
GLOBAL
GLSL.std.450
GL_3DL_array_objects
GL_ANDROID_extension_pack_es31a
GL_ANGLE_MULTIVIEW_ENABLED
GL_ANGLE_client_arrays
GL_ANGLE_copy_texture_3d
GL_ANGLE_copy_texture_3d extension not available.
GL_ANGLE_depth_texture
GL_ANGLE_explicit_context
GL_ANGLE_explicit_context_gles1
GL_ANGLE_framebuffer_blit
GL_ANGLE_framebuffer_multisample
GL_ANGLE_framebuffer_multisample not available
GL_ANGLE_instanced_arrays
GL_ANGLE_lossy_etc_decode
GL_ANGLE_multiview
GL_ANGLE_multiview_multisample
GL_ANGLE_pack_reverse_row_order
GL_ANGLE_program_cache_control
GL_ANGLE_request_extension
GL_ANGLE_request_extension is not available.
GL_ANGLE_robust_client_memory
GL_ANGLE_robust_client_memory is not available.
GL_ANGLE_robust_resource_initialization
GL_ANGLE_texture_compression_dxt3
GL_ANGLE_texture_compression_dxt5
GL_ANGLE_texture_multisample_array not enabled.
GL_ANGLE_texture_rectangle
GL_ANGLE_texture_usage
GL_ANGLE_translated_shader_source
GL_ANGLE_webgl_compatibility
GL_ARB_ES2_compatibility
GL_ARB_ES3_1_compatibility
GL_ARB_ES3_2_compatibility
GL_ARB_ES3_compatibility
GL_ARB_base_instance
GL_ARB_blend_func_extended
GL_ARB_buffer_storage
GL_ARB_clear_buffer_object
GL_ARB_clear_texture
GL_ARB_clip_control
GL_ARB_color_buffer_float
GL_ARB_compute_shader
GL_ARB_copy_buffer
GL_ARB_copy_image
GL_ARB_debug_output
GL_ARB_depth_buffer_float
GL_ARB_depth_texture
GL_ARB_derivative_control
GL_ARB_direct_state_access
GL_ARB_draw_buffers
GL_ARB_draw_buffers_blend
GL_ARB_draw_elements_base_vertex
GL_ARB_draw_indirect
GL_ARB_draw_instanced
GL_ARB_enhanced_layouts
GL_ARB_explicit_attrib_location
GL_ARB_explicit_uniform_location
GL_ARB_fragment_program
GL_ARB_fragment_shader
GL_ARB_framebuffer_no_attachments
GL_ARB_framebuffer_object
GL_ARB_framebuffer_sRGB
GL_ARB_geometry_shader4
GL_ARB_get_program_binary
GL_ARB_get_texture_sub_image
GL_ARB_gpu_shader5
GL_ARB_gpu_shader_fp64
GL_ARB_gpu_shader_int64
GL_ARB_imaging
GL_ARB_instanced_arrays
GL_ARB_internalformat_query
GL_ARB_internalformat_query2
GL_ARB_invalidate_subdata
GL_ARB_map_buffer_range
GL_ARB_multi_bind
GL_ARB_multi_draw_indirect
GL_ARB_multisample
GL_ARB_multitexture
GL_ARB_occlusion_query
GL_ARB_occlusion_query2
GL_ARB_point_parameters
GL_ARB_post_depth_coverage
GL_ARB_program_interface_query
GL_ARB_provoking_vertex
GL_ARB_robust_buffer_access_behavior
GL_ARB_robustness
GL_ARB_sample_shading
GL_ARB_sampler_objects
GL_ARB_separate_shader_objects
GL_ARB_shader_atomic_counters
GL_ARB_shader_ballot
GL_ARB_shader_bit_encoding
GL_ARB_shader_draw_parameters
GL_ARB_shader_group_vote
GL_ARB_shader_image_load_store
GL_ARB_shader_objects
GL_ARB_shader_stencil_export
GL_ARB_shader_storage_buffer_object
GL_ARB_shader_subroutine
GL_ARB_shader_texture_image_samples
GL_ARB_shader_texture_lod
GL_ARB_shader_viewport_layer_array
GL_ARB_shading_language_420pack
GL_ARB_shading_language_packing
GL_ARB_sparse_texture2
GL_ARB_sparse_texture_clamp
GL_ARB_sync
GL_ARB_tessellation_shader
GL_ARB_texture_barrier
GL_ARB_texture_buffer_object
GL_ARB_texture_buffer_range
GL_ARB_texture_compression
GL_ARB_texture_compression_bptc
GL_ARB_texture_cube_map_array
GL_ARB_texture_float
GL_ARB_texture_float GL_ARB_color_buffer_float
GL_ARB_texture_gather
GL_ARB_texture_multisample
GL_ARB_texture_rectangle
GL_ARB_texture_rg
GL_ARB_texture_rg ARB_texture_float
GL_ARB_texture_rg GL_ARB_texture_float
GL_ARB_texture_rg GL_ARB_texture_float GL_ARB_color_buffer_float
GL_ARB_texture_rgb10_a2ui
GL_ARB_texture_storage
GL_ARB_texture_storage_multisample
GL_ARB_texture_swizzle
GL_ARB_texture_view
GL_ARB_timer_query
GL_ARB_transform_feedback2
GL_ARB_transform_feedback3
GL_ARB_transform_feedback_instanced
GL_ARB_uniform_buffer_object
GL_ARB_vertex_array_object
GL_ARB_vertex_attrib_64bit
GL_ARB_vertex_attrib_binding
GL_ARB_vertex_buffer_object
GL_ARB_vertex_program
GL_ARB_vertex_shader
GL_ARB_vertex_type_2_10_10_10_rev
GL_ARB_viewport_array
GL_ARM_shader_framebuffer_fetch
GL_BUFFER_MAP_POINTER can only be queried with GetBufferPointerv.
GL_CHROMIUM_bind_generates_resource
GL_CHROMIUM_bind_uniform_location
GL_CHROMIUM_bind_uniform_location is not available.
GL_CHROMIUM_color_buffer_float_rgb
GL_CHROMIUM_color_buffer_float_rgba
GL_CHROMIUM_copy_compressed_texture
GL_CHROMIUM_copy_compressed_texture extension not available.
GL_CHROMIUM_copy_texture
GL_CHROMIUM_copy_texture extension not available.
GL_CHROMIUM_framebuffer_mixed_samples
GL_CHROMIUM_framebuffer_mixed_samples is not available.
GL_CHROMIUM_path_rendering
GL_CHROMIUM_path_rendering is not available.
GL_CHROMIUM_sync_query
GL_ES
GL_ETC1_RGB8_OES
GL_EXT_YUV_target
GL_EXT_base_instance
GL_EXT_bgra
GL_EXT_blend_color
GL_EXT_blend_equation_separate
GL_EXT_blend_func_extended
GL_EXT_blend_func_separate
GL_EXT_blend_minmax
GL_EXT_buffer_storage
GL_EXT_clear_texture
GL_EXT_clip_control
GL_EXT_color_buffer_float
GL_EXT_color_buffer_half_float
GL_EXT_control_flow_attributes
GL_EXT_copy_image
GL_EXT_copy_texture
GL_EXT_debug_label
GL_EXT_debug_marker
GL_EXT_device_group
GL_EXT_direct_state_access
GL_EXT_discard_framebuffer
GL_EXT_disjoint_timer_query
GL_EXT_draw_buffers
GL_EXT_draw_buffers_indexed
GL_EXT_draw_elements_base_vertex
GL_EXT_draw_instanced
GL_EXT_draw_range_elements
GL_EXT_draw_transform_feedback
GL_EXT_frag_depth
GL_EXT_framebuffer_blit
GL_EXT_framebuffer_multisample
GL_EXT_framebuffer_object
GL_EXT_framebuffer_sRGB
GL_EXT_geometry_point_size
GL_EXT_geometry_shader
GL_EXT_geometry_shader extension not enabled.
GL_EXT_gpu_shader4
GL_EXT_gpu_shader5
GL_EXT_instanced_arrays
GL_EXT_map_buffer_range
GL_EXT_multi_draw_arrays
GL_EXT_multi_draw_indirect
GL_EXT_multisample_compatibility
GL_EXT_multisampled_render_to_texture
GL_EXT_multiview
GL_EXT_multiview_draw_buffers
GL_EXT_nonuniform_qualifier
GL_EXT_occlusion_query_boolean
GL_EXT_packed_depth_stencil
GL_EXT_packed_float
GL_EXT_packed_float GL_ARB_color_buffer_float
GL_EXT_point_parameters
GL_EXT_polygon_offset
GL_EXT_post_depth_coverage
GL_EXT_primitive_bounding_box
GL_EXT_provoking_vertex
GL_EXT_read_format_bgra
GL_EXT_robustness
GL_EXT_sRGB
GL_EXT_sRGB_write_control
GL_EXT_samplerless_texture_functions
GL_EXT_separate_shader_objects
GL_EXT_shader_16bit_storage
GL_EXT_shader_8bit_storage
GL_EXT_shader_atomic_int64
GL_EXT_shader_framebuffer_fetch
GL_EXT_shader_image_load_formatted
GL_EXT_shader_image_load_store
GL_EXT_shader_io_blocks
GL_EXT_shader_non_constant_global_initializers
GL_EXT_shader_texture_lod
GL_EXT_shadow_samplers
GL_EXT_subtexture
GL_EXT_tessellation_point_size
GL_EXT_tessellation_shader
GL_EXT_texture3D
GL_EXT_texture_array
GL_EXT_texture_border_clamp
GL_EXT_texture_buffer
GL_EXT_texture_buffer_object
GL_EXT_texture_compression_bptc
GL_EXT_texture_compression_dxt1
GL_EXT_texture_compression_s3tc
GL_EXT_texture_compression_s3tc_srgb
GL_EXT_texture_cube_map_array
GL_EXT_texture_filter_anisotropic
GL_EXT_texture_format_BGRA8888
GL_EXT_texture_integer
GL_EXT_texture_lod_bias
GL_EXT_texture_norm16
GL_EXT_texture_object
GL_EXT_texture_rg
GL_EXT_texture_rg GL_OES_texture_half_float GL_EXT_color_buffer_half_float
GL_EXT_texture_sRGB
GL_EXT_texture_sRGB_decode
GL_EXT_texture_sRGB_decode is not enabled.
GL_EXT_texture_shared_exponent
GL_EXT_texture_storage
GL_EXT_texture_storage GL_OES_texture_half_float GL_EXT_color_buffer_half_float
GL_EXT_texture_storage GL_OES_texture_half_float GL_EXT_texture_rg GL_EXT_color_buffer_half_float
GL_EXT_texture_swizzle
GL_EXT_texture_view
GL_EXT_timer_query
GL_EXT_transform_feedback
GL_EXT_unpack_subimage
GL_EXT_vertex_array
GL_EXT_vertex_attrib_64bit
GL_FIXED is not supported in WebGL.
GL_FRAGMENT_PRECISION_HIGH
GL_GOOGLE_cpp_style_line_directive
GL_GOOGLE_include_directive
GL_KHR_blend_equation_advanced
GL_KHR_debug
GL_KHR_memory_scope_semantics
GL_KHR_parallel_shader_compile
GL_KHR_robust_buffer_access_behavior
GL_KHR_robustness
GL_KHR_shader_subgroup_arithmetic
GL_KHR_shader_subgroup_ballot
GL_KHR_shader_subgroup_basic
GL_KHR_shader_subgroup_clustered
GL_KHR_shader_subgroup_quad
GL_KHR_shader_subgroup_shuffle
GL_KHR_shader_subgroup_shuffle_relative
GL_KHR_shader_subgroup_vote
GL_KHR_texture_compression_astc_hdr
GL_KHR_texture_compression_astc_ldr
GL_KHX_shader_explicit_arithmetic_types
GL_KHX_shader_explicit_arithmetic_types_float16
GL_KHX_shader_explicit_arithmetic_types_float32
GL_KHX_shader_explicit_arithmetic_types_float64
GL_KHX_shader_explicit_arithmetic_types_int16
GL_KHX_shader_explicit_arithmetic_types_int32
GL_KHX_shader_explicit_arithmetic_types_int64
GL_KHX_shader_explicit_arithmetic_types_int8
GL_MAX_
GL_NV_EGL_stream_consumer_external
GL_NV_fence
GL_NV_fence is not supported
GL_NV_framebuffer_mixed_samples
GL_NV_geometry_program4
GL_NV_internalformat_sample_query
GL_NV_pack_subimage
GL_NV_path_rendering
GL_NV_pixel_buffer_object
GL_NV_shader_framebuffer_fetch
GL_NV_vertex_program4
GL_NV_viewport_array2
GL_OES_EGL_image
GL_OES_EGL_image_external
GL_OES_EGL_image_external_essl3
GL_OES_compressed_ETC1_RGB8_texture
GL_OES_copy_image
GL_OES_depth32
GL_OES_depth_texture
GL_OES_depth_texture GL_OES_packed_depth_stencil
GL_OES_draw_buffers_indexed
GL_OES_draw_elements_base_vertex
GL_OES_draw_texture
GL_OES_element_index_uint
GL_OES_fbo_render_mipmap
GL_OES_geometry_point_size
GL_OES_geometry_shader
GL_OES_get_program_binary
GL_OES_gpu_shader5
GL_OES_mapbuffer
GL_OES_packed_depth_stencil
GL_OES_point_size_array
GL_OES_point_sprite
GL_OES_primitive_bounding_box
GL_OES_rgb8_rgba8
GL_OES_sample_shading
GL_OES_sample_variables
GL_OES_shader_image_atomic
GL_OES_shader_io_blocks
GL_OES_shader_multisample_interpolation
GL_OES_single_precision
GL_OES_standard_derivatives
GL_OES_surfaceless_context
GL_OES_tessellation_point_size
GL_OES_tessellation_shader
GL_OES_texture_3D
GL_OES_texture_border_clamp
GL_OES_texture_buffer
GL_OES_texture_cube_map
GL_OES_texture_cube_map_array
GL_OES_texture_float
GL_OES_texture_float GL_EXT_texture_rg
GL_OES_texture_float_linear
GL_OES_texture_half_float
GL_OES_texture_half_float GL_EXT_color_buffer_half_float
GL_OES_texture_half_float GL_EXT_texture_rg
GL_OES_texture_half_float_linear
GL_OES_texture_npot
GL_OES_texture_storage_multisample_2d_array
GL_OES_texture_view
GL_OES_vertex_array_object
GL_OES_viewport_array
GL_OVR_multiview
GL_OVR_multiview2
GL_TEXTURE_2D texture target requires GL_OES_EGL_image.
GL_TEXTURE_EXTERNAL_OES texture target requires GL_OES_EGL_image_external.
GL_USES_DEPTH_RANGE
GL_USES_FRAG_COLOR
GL_USES_FRAG_COORD
GL_USES_FRAG_DATA
GL_USES_FRAG_DEPTH
GL_USES_FRONT_FACING
GL_USES_MRT
GL_USES_POINT_COORD
GL_USES_POINT_SIZE
GL_USES_VIEW_ID
GL_VERTEX_ATTRIB_ARRAY_DIVISOR requires OpenGL ES 3.0 or GL_ANGLE_instanced_arrays.
GL_VERTEX_ATTRIB_ARRAY_INTEGER requires OpenGL ES 3.0.
GLenum components is not one of GL_RGB, GL_RGBA, GL_ALPHA or GL_NONE.
GPH+GHH
GPH9GHtJH
GPH9_Xv
GPU.ANGLE.Buffer11CPUMemoryMB
GPU.ANGLE.D3D11CreateDeviceError
GPU.ANGLE.D3D11CreateDeviceMS
GPU.ANGLE.D3D11FeatureLevel
GPU.ANGLE.D3D11InitializeResult
GPU.ANGLE.D3D9InitializeResult
GPU.ANGLE.D3DCompileMS
GPU.ANGLE.DisplayInitializeMS
GPU.ANGLE.ProgramCache.CacheResult
GPU.ANGLE.ProgramCache.LoadBinarySuccess
GPU.ANGLE.ProgramCache.ProgramBinarySizeBytes
GPU.ANGLE.ProgramCache.ProgramCacheHitTimeUS
GPU.ANGLE.Renderer11InitializeDLLsMS
GPU.ANGLE.Renderer11InitializeDeviceMS
GPU.ANGLE.SupportsDXGI1_2
GTA:FTu
GUA:FU
Gather
GatherAlpha
GatherBlue
GatherGreen
GatherRed
Gdeque<T> too long
GenerateInitialTextureData
GenerateMip
Generating SPIR-V array-of-arrays, but Vulkan only supports single array level for this resource
Geometry shader input variable must be declared as an array
Geometry shader is not supported in this shader version.
Geometry shader version does not match vertex shader version.
GetACP
GetAccelerationStructureHandleNVX
GetAccelerationStructureMemoryRequirementsNVX
GetAccelerationStructureScratchMemoryRequirementsNVX
GetAdapterIdentifier
GetAvailableValidationLayers
GetBufferMemoryRequirements
GetBufferMemoryRequirements2
GetBufferMemoryRequirements2KHR
GetCPInfo
GetClientRect
GetCommandLineA
GetCommandLineW
GetConsoleCP
GetConsoleMode
GetCurrentDirectoryA
GetCurrentPackageId
GetCurrentProcess
GetCurrentProcessId
GetCurrentProcessorNumber
GetCurrentProcessorNumberEx
GetCurrentThread
GetCurrentThreadId
GetCurrentUmsThread
GetDC
GetDateFormatEx
GetDescriptorSetLayoutSupport
GetDescriptorSetLayoutSupportKHR
GetDesiredPresentMode
GetDeviceCaps
GetDeviceGroupPeerMemoryFeatures
GetDeviceGroupPeerMemoryFeaturesKHR
GetDeviceGroupPresentCapabilitiesKHR
GetDeviceGroupSurfacePresentModesKHR
GetDeviceMemoryCommitment
GetDeviceProcAddr
GetDeviceQueue
GetDeviceQueue2
GetDisplayModeProperties2KHR
GetDisplayModePropertiesKHR
GetDisplayPlaneCapabilities2KHR
GetDisplayPlaneCapabilitiesKHR
GetDisplayPlaneSupportedDisplaysKHR
GetEnvironmentStringsW
GetEnvironmentVariableA
GetEventStatus
GetFenceFdKHR
GetFenceStatus
GetFenceWin32HandleKHR
GetFileAttributesExW
GetFileInformationByHandleEx
GetFileType
GetImageMemoryRequirements
GetImageMemoryRequirements2
GetImageMemoryRequirements2KHR
GetImageSparseMemoryRequirements
GetImageSparseMemoryRequirements2
GetImageSparseMemoryRequirements2KHR
GetImageSubresourceLayout
GetInstanceProcAddr
GetLastError
GetLocaleInfoEx
GetLocaleInfoW
GetLogicalProcessorInformation
GetLogicalProcessorInformationEx
GetMemoryFdKHR
GetMemoryFdPropertiesKHR
GetMemoryHostPointerPropertiesEXT
GetMemoryWin32HandleKHR
GetMemoryWin32HandleNV
GetMemoryWin32HandlePropertiesKHR
GetModuleFileNameA
GetModuleFileNameW
GetModuleHandleA
GetModuleHandleExA
GetModuleHandleExW
GetModuleHandleW
GetModuleHandle_d3d9
GetNativeSystemInfo
GetNextUmsListItem
GetNumaHighestNodeNumber
GetOEMCP
GetPastPresentationTimingGOOGLE
GetPhysicalDeviceDisplayPlaneProperties2KHR
GetPhysicalDeviceDisplayPlanePropertiesKHR
GetPhysicalDeviceDisplayProperties2KHR
GetPhysicalDeviceDisplayPropertiesKHR
GetPhysicalDeviceExternalBufferProperties
GetPhysicalDeviceExternalBufferPropertiesKHR
GetPhysicalDeviceExternalFenceProperties
GetPhysicalDeviceExternalFencePropertiesKHR
GetPhysicalDeviceExternalImageFormatPropertiesNV
GetPhysicalDeviceExternalSemaphoreProperties
GetPhysicalDeviceExternalSemaphorePropertiesKHR
GetPhysicalDeviceFeatures
GetPhysicalDeviceFeatures2
GetPhysicalDeviceFeatures2KHR
GetPhysicalDeviceFormatProperties
GetPhysicalDeviceFormatProperties2
GetPhysicalDeviceFormatProperties2KHR
GetPhysicalDeviceGeneratedCommandsPropertiesNVX
GetPhysicalDeviceImageFormatProperties
GetPhysicalDeviceImageFormatProperties2
GetPhysicalDeviceImageFormatProperties2KHR
GetPhysicalDeviceMemoryProperties
GetPhysicalDeviceMemoryProperties2
GetPhysicalDeviceMemoryProperties2KHR
GetPhysicalDeviceMultisamplePropertiesEXT
GetPhysicalDevicePresentRectanglesKHR
GetPhysicalDeviceProperties
GetPhysicalDeviceProperties2
GetPhysicalDeviceProperties2KHR
GetPhysicalDeviceQueueFamilyProperties
GetPhysicalDeviceQueueFamilyProperties2
GetPhysicalDeviceQueueFamilyProperties2KHR
GetPhysicalDeviceSparseImageFormatProperties
GetPhysicalDeviceSparseImageFormatProperties2
GetPhysicalDeviceSparseImageFormatProperties2KHR
GetPhysicalDeviceSurfaceCapabilities2EXT
GetPhysicalDeviceSurfaceCapabilities2KHR
GetPhysicalDeviceSurfaceCapabilitiesKHR
GetPhysicalDeviceSurfaceFormats2KHR
GetPhysicalDeviceSurfaceFormatsKHR
GetPhysicalDeviceSurfacePresentModesKHR
GetPhysicalDeviceSurfaceSupportKHR
GetPhysicalDeviceWin32PresentationSupportKHR
GetPipelineCacheData
GetPixelFormat
GetProcAddress
GetProcessAffinityMask
GetProcessHeap
GetQueryPoolResults
GetQueueCheckpointDataNV
GetRaytracingShaderHandlesNVX
GetRefreshCycleDurationGOOGLE
GetRenderAreaGranularity
GetRenderTargetData unexpectedly failed
GetSemaphoreFdKHR
GetSemaphoreWin32HandleKHR
GetShaderCodeImpl
GetShaderInfoAMD
GetStartupInfoW
GetStdHandle
GetStringTypeW
GetSwapchainCounterEXT
GetSwapchainImagesKHR
GetSwapchainStatusKHR
GetSystemTimeAsFileTime
GetSystemTimePreciseAsFileTime
GetTempFileNameA
GetTempPathA
GetThreadGroupAffinity
GetThreadPriority
GetThreadTimes
GetTickCount
GetTickCount64
GetTimeFormatEx
GetTimeZoneInformation
GetTraceEnableFlags
GetTraceEnableLevel
GetTraceLoggerHandle
GetUmsCompletionListEvent
GetUserDefaultLCID
GetUserDefaultLocaleName
GetValidationCacheDataEXT
GetVersionExW
GetWindowThreadProcessId
GhH;GpH
GhH;GptnH
GhI;Fh
Global
GlobalInvocationID
Google Inc.
Gp;Fpu^H
GpL+GhH
GrJoq>@
GroupMemoryBarrier
GroupMemoryBarrier(
GroupMemoryBarrierWithGroupSync(
H	FhH
H	SHH
H H+H
H H;H
H!D$ H
H!T$0D
H#A0H
H#G0L
H#O0H
H#Q0L
H#T$0H
H#W0H
H#q0H
H#|$0tB
H$;Ot
H(;H8u
H(I;L$
H)D$ I
H)OHH
H+AhH
H+B@H
H+C H=
H+D$XH+D$@3
H+FhH
H+FxH
H+G H=
H+L$(x?H
H+L$(xAH
H+ShI
H+T$`HcD$|H
H+VhE1
H+VhH
H+WhH
H+\$ H
H+\$@H
H+\$HH
H,;H,
H,;O|u
H0A;N0L
H0H+H(H9H@
H3\$HH
H91u%L
H97t(M
H97t4I
H99u{
H9>u+A
H9A v
H9A@t*H
H9AHt
H9Ahv
H9AxtdI
H9B v
H9C @
H9CXu
H9Chv
H9Chv"H
H9ChvBH
H9ChvXH
H9ChvmH
H9D$(
H9D$0tHH
H9D$0tKH
H9D$8
H9D$8r
H9D$8sHI
H9D$@sn
H9D$Pu@H
H9D$xv
H9EHt
H9Ehv
H9Ehv4H
H9Ehv>H
H9Ehv^H
H9F0r
H9F@r
H9Fhr
H9Fhv
H9Fhv$H
H9Fhv%H
H9Fhv(H
H9Fhv>H
H9G0t:1
H9Ghv
H9Ghv<H
H9GhvXH
H9HHt 
H9J t1
H9K u
H9KHt
H9L$ t
H9L$Ht?H
H9L$Xv
H9L8Ht
H9M v
H9M@v
H9Nht
H9O@r
H9P r
H9Q @
H9Q A
H9Q H
H9Q I
H9Q t
H9Q(r
H9Q(t
H9Q0H
H9Q0t
H9Q8H
H9Q8t
H9Q8v-H
H9Q`t
H9Qhs
H9S @
H9T$@t
H9T$@tF
H9T$ht
H9T$pt
H9X v
H9Y H
H9Z @
H9Z v
H9\$ u
H9\$0t-H
H9\$0t/H
H9\$0t0H
H9\$0tDH
H9\$0u
H9\$@v
H9\$H
H9\$Pv
H9\$X
H9\$`
H9\$hv
H9\$xv
H9^0v
H9^ps
H9_ t
H9_ v
H9_0t
H9_0v
H9_8v
H9_Xt
H9_ht0H
H9i0r
H9kPr
H9l$0t-H
H9l$0t/H
H9l$0te
H9l$Xv
H9l$xv
H9n v
H9n(t
H9n@r
H9o t
H9o t%H
H9o v
H9o vKH
H9q I
H9r @
H9s t
H9t$(u
H9t$8
H9t$8t=H
H9t$@t
H9t$@t 
H9t$H
H9t$Pt
H9t$hv
H9u v
H9x0w
H9y H
H9y tR1
H9z @
H9{ v
H9|$(
H9|$0t5H
H9|$0u
H9|$8tDH
H9|$H
H9|$Hv
H9|$xt
H9|$xv
H9} v
H9~ t
H9~ v
H9~ vvH
H;9t$H
H;9t`I
H;;tFH
H;@0u
H;@Xu
H;A0s
H;B H
H;B I
H;D$(
H;D$0u
H;D$8
H;D$H
H;D$P
H;D$Pr/
H;D$Pu
H;D$`
H;F0H
H;F0t$
H;F8t
H;F@t
H;G t
H;G t L
H;G t#H
H;G0s
H;GptDH
H;H H
H;H r	H
H;L$0
H;L$@
H;L$pw
H;N0u
H;OPuVH
H;T$@
H;T$H
H;T$pw
H;XXs
H;\$ w
H;\$(u
H;\$0t
H;\$@t
H;\$Hr
H;\$`
H;_0r
H;_Xt
H;h0r
H;l$(
H;l$0
H;l$0u
H;l$@r
H;q H
H;t$(
H;t$@H
H;t$X
H;t$hI
H;xXu5
H;xpv
H;y8t;H
H;|$8
H;~0r
H<;H<u
H@H;H
HH:mm:ss
HIGH_PRECISION
HITATTRNV
HKEY_CURRENT_USER
HKEY_LOCAL_MACHINE
HLSL compiler had an unexpected failure
HLSLCompiler::initialize
HRESULT: 
H[><y5
H[]_^
H[]_^A\A]A^A_
H[]_^A\A]A^A_H
H[]_^A^A_
H[_^A\A^A_
H[_^A^
H[_^A^H
H_^[]
HandleAllocator::allocate allocating 
HandleAllocator::allocate reusing 
HandleAllocator::release releasing 
HandleAllocator::reserve reserving 
Hc(HcX
Hc,JA
Hc;HcK
Hc@DA
HcA HcI
HcA HcQ
HcADA
HcC H
HcCHH
HcD$8H
HcD$DH
HcD$PH
HcD$PL
HcD$`I
HcD$pH
HcF HcN
HcG HcO
HcG(H
HcGTL
HcGl;Gh}
HcK H
HcKhH
HcKpH
HcL$(
HcN8H
HcO4H
HcO8D
HcO8H
HcO<H
HcS H
HcT$,H
HcT$PH
HcT$`I
HcT$dE1
HcT$hE1
Hc]`M
Hcl$lL
Hcs8L
Hct$PHcl$`
Hcw8L
Hc~8L
HeapAlloc
HeapFree
HeapReAlloc
HeapSize
HelperInvocation
HiD$8
HiL$x
Hkt$hpH
Ht;Ht
I HcI
I#_0I
I#_0L
I#u0H
I#|$0H
I+u0H
I16VEC2
I16VEC3
I16VEC4
I32VEC2
I32VEC3
I32VEC4
I64VEC2
I64VEC3
I64VEC4
I8VEC2
I8VEC3
I8VEC4
I9A s,M
I9A s\I
I9A s]I
I9A }\I
I9D$h
I9Ehv$I
I9F tC
I9Fhv
I9Fhv>I
I9Ghv<I
I9L$ 
I9L$ v
I9Q M
I9R M
I9^ v
I9_ v
I9n(t
I;<$t
I;?tCH
I;A s+H
I;A }+H
I;D$@tB
I;D$Hv.H
I;K M
I;^ t
I;mHA
I;u8H
I;u>A
ICD "%s" associated with VkPhysicalDevice does not support vkReleaseDisplayEXT - Consequently, the call is invalid because it should not be possible to acquire a display on this device
ICD associated with VkPhysicalDevice does not support GetPhysicalDeviceGeneratedCommandsPropertiesNVX
ICD associated with VkPhysicalDevice does not support GetPhysicalDeviceMultisamplePropertiesEXT
ICD associated with VkPhysicalDevice does not support GetPhysicalDevicePresentRectanglesKHX
ICD for selected physical device is not exporting vkCreateDisplayModeKHR!
ICD for selected physical device is not exporting vkGetDisplayModePropertiesKHR!
ICD for selected physical device is not exporting vkGetDisplayPlaneCapabilitiesKHR!
ICD for selected physical device is not exporting vkGetDisplayPlaneSupportedDisplaysKHR!
ICD for selected physical device is not exporting vkGetPhysicalDeviceDisplayPlanePropertiesKHR!
ICD for selected physical device is not exporting vkGetPhysicalDeviceDisplayPropertiesKHR!
ICD for selected physical device is not exporting vkGetPhysicalDeviceSurfaceCapabilitiesKHR!
ICD for selected physical device is not exporting vkGetPhysicalDeviceSurfacePresentModesKHR!
ICD for selected physical device is not exporting vkGetPhysicalDeviceSurfaceSupportKHR!
ICD for selected physical device is not exporting vkGetPhysicalDeviceWin32PresentationSupportKHR!
IDENTIFIER
IIMAGE1D
IIMAGE1DARRAY
IIMAGE2D
IIMAGE2DARRAY
IIMAGE2DMS
IIMAGE2DMSARRAY
IIMAGE2DRECT
IIMAGE3D
IIMAGEBUFFER
IIMAGECUBE
IIMAGECUBEARRAY
IMAGE1D
IMAGE1DARRAY
IMAGE2D
IMAGE2DARRAY
IMAGE2DMS
IMAGE2DMSARRAY
IMAGE2DRECT
IMAGE3D
IMAGEBUFFER
IMAGECUBE
IMAGECUBEARRAY
IMAGE_UNIFORMS
INC_OP
IND)ind)
INITY
INOUT
INSTANCE
INT16CONSTANT
INT16_T
INT32CONSTANT
INT32_T
INT64CONSTANT
INT64_T
INT8_T
INTCONSTANT
INTERNAL ERROR: 
INTZA
INVARIANT
IPHc	I
ISAMPLER1D
ISAMPLER1DARRAY
ISAMPLER2D
ISAMPLER2DARRAY
ISAMPLER2DMS
ISAMPLER2DMSARRAY
ISAMPLER2DRECT
ISAMPLER3D
ISAMPLERBUFFER
ISAMPLERCUBE
ISAMPLERCUBEARRAY
ISGN,
ISGNL
ISGNP
ISGNT
ISGNh
ISGNl
ISGNt
ISUBPASSINPUT
ISUBPASSINPUTMS
ITEXTURE1D
ITEXTURE1DARRAY
ITEXTURE2D
ITEXTURE2DARRAY
ITEXTURE2DMS
ITEXTURE2DMSARRAY
ITEXTURE2DRECT
ITEXTURE3D
ITEXTUREBUFFER
ITEXTURECUBE
ITEXTURECUBEARRAY
IVEC2
IVEC3
IVEC4
IcD$8D9
IcI A
IcJ 3
IcJPHc
IcM@H9
IcMXH!
IcMtH9
If count is greater than zero, severity must be GL_DONT_CARE.
If count is greater than zero, source and severity cannot be GL_DONT_CARE.
If ctx is EGL_NO_CONTEXT, surfaces must be EGL_NO_SURFACE
If ctx is not EGL_NOT_CONTEXT, draw or read must both be EGL_NO_SURFACE, or both not
If ctx is not EGL_NO_CONTEXT, surfaces must not be EGL_NO_SURFACE
If index layout qualifier is specified for a fragment output, location must also be specified.
If test
If the read buffer contains fixed-point or floating-point values, the draw buffer must as well.
If the read buffer contains fixed-point values, the draw buffer must as well.
If the read buffer contains signed integer values the draw buffer must as well.
If the read buffer contains unsigned integer values the draw buffer must as well.
If you crashed here, your aligned allocation is incorrect: 
Il?333333c?
Illegal character at fieldname start
Illegal to have non-comment, non-whitespace tokens before #version
Illegal use of reserved word
Image
Image unit cannot be greater than or equal to the value of MAX_IMAGE_UNITS.
Image11::StagingTexture2D
Image11::StagingTexture3D
ImportFenceFdKHR
ImportFenceWin32HandleKHR
ImportSemaphoreFdKHR
ImportSemaphoreWin32HandleKHR
Incompatible stream consumer type
Incompatible stream producer
Index buffer is mapped.
Index buffer map range is not inside the buffer.
Index exceeds MAX_DRAW_BUFFERS.
Index exceeds MAX_VERTEX_ATTRIBS.
Index exceeds program active uniform count.
Index expression must be constant
Index must be less than the value of SAMPLES.
IndexBuffer11 (dynamic)
IndexBuffer11 (static)
Indicating meta-layer-specific component_layers, but also defining layer library path.  Both are not compatible, so skipping this layer
Indicating meta-layer-specific component_layers, but using older JSON file version.
Indices are out of the start, end range.
Infinity divided by infinity during constant folding generated NaN
InitOnceExecuteOnce
Initialization of an object could not be completed for implementation-specific reasons.
InitializeConditionVariable
InitializeCriticalSection
InitializeCriticalSectionAndSpinCount
InitializeCriticalSectionEx
InitializeProcThreadAttributeList
InitializeSListHead
InitializeSRWLock
Initializers must match:
Input
Input buffer overflow
Input primitive type is not specified in the geometry shader.
Inputted D3D11 device has been lost.
Inputted D3D11 device must be Feature Level 9_3 or greater.
Insert instance layer %s (%s)
Inserted device layer %s (%s)
Instance Extension: %s (%s) version %s
InstanceID
InstanceId
InstanceIndex
Insufficient buffer size.
Integer overflow
Integer overflow on line number
Integer overflow when computing the product of local_size_x, 
Integer overflow when validating copy offsets.
Integer overflow when validating same buffer copy.
Integer overflow.
Intel
Intel OpenGL ES drivers are not supported.
InterlockedAdd(
InterlockedAnd(
InterlockedCompareExchange(
InterlockedExchange(
InterlockedFlushSList
InterlockedMax(
InterlockedMin(
InterlockedOr(
InterlockedPopEntrySList
InterlockedPushEntrySList
InterlockedXor(
Internal CreateOffscreenPlainSurface call failed
Internal D3D11 error: 
Internal D3D9 error: 
Internal Error
Internal GLES 1 shader compile failed. Info log: 
Internal GLES 1 shader link failed. Info log: 
Internal OpenGL error: 
Internal UpdateSurface call failed
Internal Vulkan bufffer could not be released. This is likely due to having extra images defined in the Texture.
Internal Vulkan error: 
Internal blit failed.
Internal blit shader type mismatch
Internal error linking Vulkan shaders:
Internal error parsing Vulkan fragment shader:
Internal error parsing Vulkan vertex shader:
Internal error, unknown blit filter mode.
Internal format is not renderable.
Internal index buffer is not initialized.
Internal query creation failed, 
Internalformat is one of the unsupported unsized base internalformats.
Interpolation and auxiliary storage qualifiers must match:
Interpolation type
Invalid (negative) numPaths.
Invalid Attachment Type.
Invalid Context attribute.
Invalid YUV plane count
Invalid access bits when mapping buffer for reading: 0x
Invalid access bits: 0x
Invalid attachment when the default framebuffer is bound.
Invalid attrib_list parameter
Invalid attribute
Invalid automatic trim attribute
Invalid blend equation.
Invalid blend function.
Invalid blit filter.
Invalid blit mask.
Invalid bufSize.
Invalid buffer target
Invalid buffer target enum.
Invalid buffer usage enum.
Invalid buffer value
Invalid cache resize mode.
Invalid client vertex array type.
Invalid clip plane.
Invalid color buffer type
Invalid combination of format, type and internalFormat.
Invalid command.
Invalid components.
Invalid compressed format dimension.
Invalid condition
Invalid context attribute.
Invalid coordinate type.
Invalid cover mode.
Invalid debug severity.
Invalid debug source.
Invalid debug type.
Invalid destination texture type.
Invalid device parameter
Invalid device_type parameter
Invalid draw mode.
Invalid end caps.
Invalid enum.
Invalid expression
Invalid fence object.
Invalid fill mode.
Invalid fog density (must be nonnegative).
Invalid fog mode.
Invalid fog parameter.
Invalid format and type combination.
Invalid format.
Invalid framebuffer operation.
Invalid framebuffer target.
Invalid gen mode.
Invalid identifier.
Invalid index: 
Invalid init declaration
Invalid internal format.
Invalid join style.
Invalid light model parameter.
Invalid light parameter.
Invalid light.
Invalid logical operation.
Invalid mask bits.
Invalid material face.
Invalid material parameter.
Invalid matrix mode.
Invalid matrix.
Invalid memory barrier bit.
Invalid miter limit.
Invalid multisample resolve type.
Invalid name.
Invalid number of commands.
Invalid number of coordinates.
Invalid operation for arrays
Invalid operation for interface blocks
Invalid operation for structs
Invalid operation for variables with an opaque type
Invalid operation for variables with writeonly
Invalid operation on multisampled framebuffer
Invalid operation.
Invalid operator
Invalid or unsupported precision type.
Invalid or unsupported texture target.
Invalid parameter for 2D multisampled textures.
Invalid parameter name for framebuffer attachment.
Invalid parameter qualifier 
Invalid path name type.
Invalid path parameter.
Invalid plane count
Invalid plane offset
Invalid plane specified
Invalid platform method count: 
Invalid platform method name: 
Invalid pname.
Invalid pname: 0x
Invalid point parameter value (must be non-negative).
Invalid point parameter.
Invalid point size (must be positive).
Invalid pointer query.
Invalid primitive mode.
Invalid program binary format.
Invalid program binary version.
Invalid program binary, device configuration has changed.
Invalid program binary.
Invalid program cache attribute.
Invalid program interface.
Invalid program interface: 0x
Invalid program key size.
Invalid projection matrix. Left/right, top/bottom, near/far intervals cannot be zero, and near/far cannot be less than zero.
Invalid prop.
Invalid propCount.
Invalid query Id.
Invalid query target.
Invalid query type.
Invalid range.
Invalid relational operator
Invalid renderbuffer internalformat.
Invalid renderbuffer target.
Invalid semantics value
Invalid shader binary format.
Invalid shader type.
Invalid shading model.
Invalid source texture height or width.
Invalid source texture level.
Invalid stencil bit mask.
Invalid stencil.
Invalid storage class semantics value
Invalid stream
Invalid stream attribute
Invalid stream consumer type
Invalid stream state
Invalid stride for built-in vertex attribute.
Invalid stroke width.
Invalid subresource index
Invalid surface attribute.
Invalid swap behaviour.
Invalid sync object.
Invalid target.
Invalid texture combine mode.
Invalid texture combine operand.
Invalid texture combine source.
Invalid texture dimensions.
Invalid texture environment mode.
Invalid texture environment parameter.
Invalid texture environment scale.
Invalid texture environment target.
Invalid texture parameters in share handle texture.
Invalid texture target and format combination.
Invalid texture unit
Invalid transformation.
Invalid type for built-in vertex attribute.
Invalid type for loop index
Invalid type, should be integer
Invalid type.
Invalid uniform location
Invalid value for EGL_EXPERIMENTAL_PRESENT_PATH_ANGLE
Invalid value for EGL_PLATFORM_ANGLE_CONTEXT_VIRTUALIZATION_ANGLE attrib
Invalid value for EGL_PLATFORM_ANGLE_DEVICE_TYPE_ANGLE attrib
Invalid value for EGL_TEXTURE_FORMAT
Invalid value for EGL_TEXTURE_TARGET
Invalid value, expected GL_FALSE or GL_TRUE: 
Invalid value.
Invalid width.
Invalid wrap mode for texture type.
InvalidateMappedMemoryRanges
InvalidateRect
Invariance
Invariant Declaration:
InvocationID
IsDebuggerPresent
IsIconic
IsProcessorFeaturePresent
IsValidCodePage
IsValidLocale
IsValidLocaleName
IsWindow
IsWow64Process
It is a undefined behaviour to render without vertex shader stage or fragment shader stage.
It is an error to use gl_WorkGroupSize before declaring the local group size
It is invalid to change default FBO's attachments
It is undefined behavior to use a pixel pack buffer that is bound for transform feedback.
It is undefined behavior to use a pixel unpack buffer that is bound for transform feedback.
It is undefined behavior to use a vertex buffer that is bound for transform feedback.
It is undefined behavior to use an element array buffer that is bound for transform feedback.
It is undefined behavior to use an uniform buffer that is bound for transform feedback.
It is undefined behaviour to clear a render buffer which is not normalized fixed point or floating-point to floating point values (color attachment 
It is undefined behaviour to have a used but unbound uniform buffer.
It is undefined behaviour to use a uniform buffer that is too small.
Ith value does not match COLOR_ATTACHMENTi or NONE
J H+J
J `>,
J$A;H$A
J9l. v
JA9EH
JHc~8L
J`E;Bh|
January
K 9N v@H
K H9y
K&>.yC
K0u2H
K4A+H 
K8Hc@
K;D.(u
KERNEL32.dll
KH;_XtW3
KHR_gl_renderbuffer_image not supported.
KHR_gl_texture_2D_image not supported.
KHR_gl_texture_3D_image not supported.
KHR_gl_texture_cubemap_image not supported.
K~Je#>!
L!|$(L!
L#C0H
L#K0H
L$ E1
L$ E3
L$ H9
L$ H;
L$ I;
L$ L;
L$ SH
L$ SUVWH
L$ UVWATAUAVAWH
L$ VWAVH
L$ WH
L$ fA
L$ fff
L$ tOH
L$ tgA
L$ |+L;
L$$H9
L$&8\$&t,8Y
L$(#A
L$(A)
L$(E1
L$(E3
L$(H)
L$(H1
L$(H9
L$(H;L$0
L$(Ic
L$(Mc
L$(tPI
L$(tTI
L$,+L$$+D$ 
L$,E1
L$/E1
L$0#P0H
L$0;H
L$0;Vhu
L$0E1
L$0H!
L$0H#
L$0H)
L$0H1
L$0H3
L$0H9
L$0H;
L$0Hi
L$0L9
L$0L;
L$0fH
L$0fI
L$0tVH
L$0u6H
L$4+L$8
L$4+L$@
L$4E9
L$8#A,D	
L$8#A4D	
L$8D9
L$8E1
L$8H1
L$8H3
L$8H9
L$8H9q s,H
L$8L9
L$<;L$H
L$<E1
L$<fA
L$@;|
L$@D)
L$@E1
L$@H1
L$@H3
L$@H9
L$@H;L$8
L$@HcAtH
L$@I)
L$@I9
L$@fA
L$@tM1
L$@uU
L$@w4
L$DA9
L$HE1
L$HH)
L$HH1
L$HH3
L$HH9
L$HH;L$P
L$HH;L$h
L$LA9
L$LH9
L$OE1
L$P;A
L$PA9
L$PE1
L$PH1
L$PH3
L$PH9
L$PH;L$p
L$PHcW
L$PI)
L$Pt%1
L$TD9
L$TH9
L$XE1
L$XE3
L$XH)
L$XH1
L$XH3
L$XH9
L$XH;L$`u
L$XHcS
L$XI9
L$XL9
L$XL;
L$\E1
L$`@0
L$`H	
L$`H)
L$`H1
L$`H3
L$`H;
L$d+N
L$hE1
L$hH1
L$hH9
L$pD9L
L$pH)
L$pH1
L$pH3
L$pH;L$X
L$pHc
L$tA+O
L$xE1
L$xH1
L$xH9
L$xH;
L$xH;L$0
L$xL;<$u
L(;A:
L(<A:
L+FhI
L+d$ I
L+t$ I
L+|$ I
L-n>4
L.(H9
L9	u%L
L9"u&
L9,(t H
L9I A
L9I s
L9I t!L
L9I(s!L
L9I8s!L
L9O s$H
L9`0tRH
L9`8u'L
L9c v=H
L9c vBH
L9d$8t
L9d$P
L9d$hv
L9d$xv
L9fhvYH
L9l$ 
L9l$Hv
L9l$Xt
L9l$hv
L9l$pv
L9p v
L9s v
L9t$8t
L9t$P
L9t$Pv
L9t$Xv
L9t$h
L9w v
L9y H
L9|$8t
L9|$H
L9|$Ht
L9|$Xv
L9|$h
L9|$xv
L9~ t
L;<$u
L;B @
L;D$8u
L;FHu
L;L$ 
L;d$(
L;d$(|
L;d$0
L;d$Hu"
L;d$h
L;l$8
L;l$@
L;l$P
L;l$h
L;t$(
L;t$8
L;t$H
L;t$P
L;t$X
L;t$`
L;t$h
L;|$ 
L;|$ v"I
L;|$ v`I
L;|$(u
L;|$0
L;|$@
L;|$@s6L
L;|$@u
L>../../third_party/angle/src/libANGLE/renderer/d3d/d3d11/ResourceManager11.cpp
L?UUUUUUU?
LAYER
LAYOUT
LCIDToLocaleName
LCMapStringEx
LCMapStringW
LCould not query DXGI device.
LEFT_ANGLE
LEFT_ASSIGN
LEFT_BRACE
LEFT_BRACKET
LEFT_OP
LEFT_PAREN
LE_OP
LOW_PRECISION
Label length is larger than GL_MAX_LABEL_LENGTH.
LastFragColor
LastFragData
Latency must be positive
Layer
Layer "%s" using deprecated 'vkGetDeviceProcAddr' tag which was deprecated starting with JSON file version 1.1.0.  Instead, use the new vkNegotiateLayerInterfaceVersion function to return the GetDeviceProcAddr function for this layer.
Layer "%s" using deprecated 'vkGetInstanceProcAddr' tag which was deprecated starting with JSON file version 1.1.0.  Instead, use the new vkNegotiateLayerInterfaceVersion function to return the GetInstanceProcAddr function for this layer.
Layer invalid for framebuffer texture attachment.
Layer missing both library_path and component_layers fields.  One or the other MUST be defined.  Skipping this layer
Layout qualification must match:
Layout qualifier
LcA<E3
LcCP3
LcD$,H
LcGDI
LcGP3
LcO8L
LcT$PH
LceoA
Lct$,H
Lct$LH
LeaveCriticalSection
Level of detail outside of range.
LfA;LU
LfA;LW
Light parameter out of range.
Linear blit not supported in this extension.
Linked 
Linker Objects
Linking 
Lj[;>
LoadCursorA
LoadLibraryA
LoadLibraryExA
LoadLibraryExW
LoadLibraryW
Loader Message
Loading layer library %s
Local variables can only use the const storage qualifier.
LocalContextCacheSize
LocalInvocationID
LocalInvocationIndex
LocaleNameToLCID
Located json file "%s" from registry "%s\%s"
Location cannot be less than 0.
Location exceeds max varying.
Location layout qualifier
Location lengths must not be greater than 1024 characters.
Location must be less than (MAX_VERTEX_UNIFORM_VECTORS + MAX_FRAGMENT_UNIFORM_VECTORS) * 4
Location name lengths must not be greater than 256 characters.
Location of variable 
Lock already taken
Lod0(
LogGLDebugMessage
Loop Body
Loop Condition
Loop Terminal Expression
Loop index cannot be compared with non-constant expression
Loop index cannot be initialized with non-constant expression
Loop index cannot be modified by non-constant expression
Loop index cannot be statically assigned to within the body of the loop
Loop with condition 
LunarG Standard Validation Layer
M H1E
M!uHM
M'y>0y
M9e8v
M9eXv
M9eXvZI
M9g v
M9n(t
M9u v
MAT2X2
MAT2X3
MAT2X4
MAT3X2
MAT3X3
MAT3X4
MAT4X2
MAT4X3
MAT4X4
MAX_COMPUTE_WORK_GROUP_INVOCATIONS.
MAX_NUM_ACTIVE_VARIABLES requires a buffer or block interface.
MAX_TEXTURE_IMAGE_UNITS
MEDIUM_PRECISION
MM/dd/yy
MOD_ASSIGN
MUL_ASSIGN
Macro redefined; different argument names:
Macro redefined; different number of arguments:
Macro redefined; different substitutions:
Map buffer extension not available.
Map buffer range extension not available.
MapMemory
Mapped range does not fit into buffer dimensions.
Mapping of a memory object has failed.
Mapping of internal index buffer would cause an integer overflow.
March
Marker
MaskNumber cannot be greater than or equal to the value of MAX_SAMPLE_MASK_WORDS.
Material parameter out of range.
Matrix Packing
MaxConcurrency
MaxPolicyElementKey
Mbp?333333
Mct$hI
Md$LA
Medium
Memory qualifiers must match:
MemoryBarrier
MemoryBarrierAtomicCounter
MemoryBarrierBuffer
MemoryBarrierImage
MemoryBarrierShared
MergePipelineCaches
MergeValidationCachesEXT
Message length is larger than GL_MAX_DEBUG_MESSAGE_LENGTH.
Meta-layer %s all %d component layers appear to be valid.
Meta-layer %s can't find component layer %s at index %d.  Skipping this layer.
Meta-layer %s can't find property for component layer %s at index %d.  Skipping this layer.
Meta-layer %s component layer %s adding device extension %s
Meta-layer %s component layer %s adding instance extension %s
Meta-layer %s component layer %s can not find all component layers.  Skipping this layer.
Meta-layer %s lists itself in its component layer list at index %d.  Skipping this layer.
Meta-layer uses API version %d.%d, but component layer %d uses API version %d.%d.  Skipping this layer.
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
MinConcurrency
Mip level invalid for framebuffer texture attachment.
Mipmap level must be 0 when attaching a texture.
Mismatched compilation flags.
Missing a valid input primitive declaration before declaring an unsized array input
Missing condition
Missing entry point: Each stage requires one entry point
Missing expression
Missing init declaration
Missing main()
Missing program object
Missing read attachment.
Missing required attribute for EGL_IOSURFACE
Missing shader object
Monday
MultiByteToWideChar
MultiTexCoord0
MultiTexCoord1
MultiTexCoord2
MultiTexCoord3
MultiTexCoord4
MultiTexCoord5
MultiTexCoord6
MultiTexCoord7
Multiple function bodies in multiple compilation units for the same signature in the same stage:
Multiple planes bound to same texture object
Multiple uniforms bound to location 
Multisampled depth/stencil blit is not supported by this extension.
Must have element array buffer binding.
Must specify a valid 3D texture destination target
Must specify major version if you specify a minor version.
N(9Ah
N(;A4
N(;ADs
N(H9o(t
N3`d?
N8@8yo
N>O=I9
NAN(IND)
NAN(SNAN)
NE_OP
NONPRIVATE
NONUNIFORM
NOPERSPECTIVE
NOTE: 
NULL pointer passed into vkGetPhysicalDeviceSurfaceCapabilitiesKHR for pSurfaceCapabilities!
NULL pointer passed into vkGetPhysicalDeviceSurfaceFormatsKHR for pSurfaceFormatCount!
NULL pointer passed into vkGetPhysicalDeviceSurfacePresentModesKHR for pPresentModeCount!
NULL pointer passed into vkGetPhysicalDeviceSurfaceSupportKHR for pSupported!
NULL share handle.
NULLA
NULLI
NVIDIA
NV_EGL_stream_consumer_external
NV_shader_framebuffer_fetch
NXI;N`t
Name conflicts between a uniform and an attribute: 
Name contains invalid characters.
Name of a built-in function cannot be redeclared as function
Near value cannot be greater than far.
Need to map buffer for either reading or writing.
Negate conditional
Negate value
Negative buffer size.
Negative count.
Negative index value.
Negative length.
Negative maxcount.
Negative modulus operator operand encountered during constant folding. Results are undefined.
Negative number of attachments.
Negative offset.
Negative value overflow.
Neither NV_EGL_stream_consumer_external nor GL_OES_EGL_image_external extensions enabled
Neither a front-end constant nor a spec constant.
New vertex buffer size would result in an overflow.
Next token is
NhH9Npt11
NhH;NptSH9
No D3D9 module found.
No GL context current to calling thread.
No active compute shader stage in this program.
No active geometry shader stage in this program.
No active program for the compute shader stage.
No active read framebuffer.
No available renderers.
No buffer bound to target
No coefficients array given.
No commands array given.
No compiled fragment shader when at least one graphics shader is attached.
No compiled vertex shader when at least one graphics shader is attached.
No coordinate array given.
No defined conversion between clear value and attachment format.
No element array buffer and no pointer.
No errors.  No code generation or linking was requested.
No external texture bound
No external texture bound at one or more specified texture units
No function definition (body) found: 
No image internal format specified
No local work group size specified
No loop body
No loop condition
No name given.
No native support for sync queries.
No num_views specified
No path name array.
No precision specified
No precision specified (int)
No precision specified for (float)
No program binary formats supported.
No such binding.
No such path object.
No such path or path has no data.
No texture bound.
No transform array given.
No value array.
Non-L-value cannot be passed for 'out' or 'inout' parameters.
Non-constant-index-expression
Non-write buffer mapping not supported.
Normal
Not a valid compressed texture format
Not a valid texture object name.
Not all planes specified
Not an allowed prop for interface
Not enough arguments for macro
Not enough space in bound transform feedback buffers.
Not initialized.
NotEqual
Note: Additional non-conformant packing restrictions are enforced on D3D9.
Notification
November
Now at end of input.
NumWorkGroups
Number of constructor parameters does not match the number of structure fields
Number of views does not match the previous declaration
O ;N uo
O$;N$ug
O(;N(u_H
O,D9O(vcH
O0HcQ
O0LcQ
O9d7 v
OC:\fakepath
OES_EGL_image_external
OES_EGL_image_external_essl3
OES_compressed_EAC_R11_signed_texture
OES_compressed_EAC_R11_unsigned_texture
OES_compressed_EAC_RG11_signed_texture
OES_compressed_EAC_RG11_unsigned_texture
OES_compressed_ETC2_RGB8_texture
OES_compressed_ETC2_RGBA8_texture
OES_compressed_ETC2_punchthroughA_RGBA8_texture
OES_compressed_ETC2_punchthroughA_sRGB8_alpha_texture
OES_compressed_ETC2_sRGB8_alpha8_texture
OES_compressed_ETC2_sRGB8_texture
OES_standard_derivatives
OES_texture_storage_multisample_2d_array
OF>;^
OPPPPPP
OR_ASSIGN
OR_OP
OSGN,
OSGNL
OSGNP
OSGN`
OSGNd
OSGNl
OSGN|
OVR_multiview
O`H9Oht/1
Object cannot be used because it has not been generated.
October
Offscreen back buffer copy for SRV
Offscreen back buffer render target
Offscreen back buffer shader resource
Offscreen back buffer texture
Offscreen depth stencil shader resource
Offscreen depth stencil texture
Offscreen depth stencil view
Offset
Offset = 
Offset layout qualilfier
Offset must be a multiple of the passed in datatype.
Offset must be a multiple of the size, in basic machine units, of uint
Offset overlapping
Offset) * 0.5) * 2.0 - 1.0);
Offset)));
Offset)), 0, int(
Offsets
Only NONE or BACK are valid values when drawing to the default framebuffer
Only UNSIGNED_SHORT and UNSIGNED_BYTE types are supported.
Only allowed with shader storage blocks, variables declared within shader storage blocks and variables declared as image types.
Only nearest filtering can be used when blitting buffers other than the color buffer.
Only one push_constant block is allowed per stage
Only std140 layout is allowed in WebGL
Only whole-buffer blit is supported from a multisampled read buffer in this extension.
Only whole-buffer depth and stencil blits are supported by this extension.
OpenGL
OpenGL ES
OpenGL ES 
OpenGL ES 2.0 is not supportable.
OpenGL ES 3.0 Required.
OpenGL ES 3.1 Required
OpenGL ES GLSL ES 
OpenGL platform is unsupported.
OpenGL_ES
Other
Other query is active
Out of memory.
Output layout location specified multiple times.
Output primitive type is not specified in the geometry shader.
OutputDebugStringA
Overflowed the 
P 9V@t+H
P H+P
P L9h8r
P$9VDt+H
P(9.t6H
P(9VHu
P(@8+t
P(A9,$
P(L9p v
P0;D$<
P0;D$\~
P0@8+t
P8@8+t
P>q_Y~
P@@8+t
P@H;P
PACKED
PATCH
PAYLOADINNV
PAYLOADNV
PA^_^
PERCENT
PERPRIMITIVENV
PERTASKNV
PERVERTEXNV
PERVIEWNV
PH#p(
PH#x(
PH@8+t
POSITION
PP@8/t
PRECISE
PRECISION
PROGRAM_SEPARABLE is not supported before GLES 3.1
PSIZE
PS_INPUT input
PS_INPUT input, bool isFrontFace : SV_IsFrontFace
PS_INPUT input, float vFace : VFACE
PS_OUTPUT generateOutput()
PS_OUTPUT main(@@ PIXEL MAIN PARAMETERS @@)
PXD9>t9H
PXE9e
P[]_^A\A^A_
P[]_^A^
P[_^A\A]A^A_
P[_^A\A]A^A_H
P[_^A^A_
P[_^H
PackDouble2x32
PackSnorm4x8
PackUnorm4x8
Parameter outside of bounds.
Params less than 0 or greater than GL_MAX_FRAMEBUFFER_HEIGHT.
Params less than 0 or greater than GL_MAX_FRAMEBUFFER_SAMPLES.
Params less than 0 or greater than GL_MAX_FRAMEBUFFER_WIDTH.
Passed in texture target and format must match the one originally used to define the texture.
PatchVertices
Performance
Performance: dynamic indexing of vectors and matrices is emulated and can be slow.
Performance: non-empty fall-through cases in switch statements generate extra code.
Pixel data cannot be null.
Pixel data must be null.
Pixel format of the NativeWindow and NativeDisplayType must match.
Pixel pack buffer is mapped.
Pixel unpack buffer is mapped.
PixelTransfer11 constant buffer
PixelsPerRow
Plane count must be 0 for RGB buffer
Plane out of range
Planes cannot be specified
Platform ANGLE extension is not active
Platform Device extension is not active
Pname must be SAMPLE_POSITION.
Point
Point rendering without writing to gl_PointSize.
PointCoord
PointSize
Portability
Position
PositionOffset
PositionScale
Positive sign
Possible extensions include:
Post-Decrement
Post-Increment
Pre-Decrement
Pre-Increment
Precision
Precision emulation not supported for this output type.
Precision qualifiers have to be after interpolation qualifiers.
Precision qualifiers have to be after layout qualifiers.
Precision qualifiers have to be after memory qualifiers.
Precision qualifiers have to be after storage qualifiers.
Precision qualifiers must match:
Presence of invariant qualifier must match:
Presence of precise qualifier must match:
Present failed with 
Present failed: the D3D11 device was removed, 
Present failed: the D3D11 device was reset from a bad command.
Present mode 
Primcount must be greater than or equal to zero.
Primitive mode is incompatible with the input primitive type of the geometry shader.
PrimitiveID
Problem accessing layer value %s in manifest JSON file, skipping this layer
Problem accessing layer value library_path in manifest JSON file, skipping this layer
Program binary format is not valid.
Program binary not accessible.
Program binary too large or changed during access.
Program doesn't exist.
Program has not been successfully linked.
Program index out of range.
Program is not successfully linked.
Program link or binary loading failed with no info log.
Program link or binary loading failed: 
Program not linked.
Program object expected.
Provided buffer is not a IDirect3DTexture9 or ID3D11Texture2D.
P|> ,o
Q H;Q
Q(LcA J;
Q0Hcq H
Q5rHg,>
Q>.3Z<
QUESTION
QUEUEFAMILYCOHERENT
QpH+QhH
Qualcomm
Query
Query extension not enabled.
Query id is 0
Query is active.
Query target not active
Query type does not match target
QueryDepthSList
QueryPerformanceCounter
QueryPerformanceFrequency
QueryUmsThreadInformation
Querying GL_PROGRAM_BINARY_LENGTH requires GL_OES_get_program_binary or ES 3.0.
QueueBeginDebugUtilsLabelEXT
QueueBindSparse
QueueEndDebugUtilsLabelEXT
QueueInsertDebugUtilsLabelEXT
QueuePresentKHR
QueueSubmit
QueueUserWorkItem
QueueWaitIdle
R0E8XAt
RDEF(
RDEF,
RDEFP
RDEFt
RDEFx
RDEF|
READONLY
RESOURCE
RESTRICT
RETURN
RH#h(A
RIGHT_ANGLE
RIGHT_ASSIGN
RIGHT_BRACE
RIGHT_BRACKET
RIGHT_OP
RIGHT_PAREN
RW2DArray_float4_
RW2DArray_int4_
RW2DArray_snorm_float4_
RW2DArray_uint4_
RW2DArray_unorm_float4_
RW2D_float4_
RW2D_int4_
RW2D_snorm_float4_
RW2D_uint4_
RW2D_unorm_float4_
RW3D_float4_
RW3D_int4_
RW3D_snorm_float4_
RW3D_uint4_
RW3D_unorm_float4_
RWByteAddressBuffer 
RWCube_float4_
RWCube_int4_
RWCube_uint4_
RWCube_unorm_float4_
RWTexture2D<float4>
RWTexture2D<int4>
RWTexture2D<snorm float4>
RWTexture2D<uint4>
RWTexture2D<unorm float4>
RWTexture2DArray<float4>
RWTexture2DArray<int4>
RWTexture2DArray<snorm float4>
RWTexture2DArray<uint4>
RWTexture2DArray<unorm float4>
RWTexture3D<float4>
RWTexture3D<int4>
RWTexture3D<snorm float4>
RWTexture3D<uint4>
RWTexture3D<unorm float4>
RX9D$du
RaiseException
Reaching warning limit for cache load failures, silencing subsequent warnings.
Read and draw framebuffers must both exist for a blit to succeed.
Read and write color attachments cannot be the same image.
Read and write depth stencil attachments cannot be the same image.
Read buffer is GL_NONE.
ReadConsoleW
ReadFile
ReadPixels is unimplemented for multisampled framebuffer attachments.
Reading a token: 
Reads would overflow the pixel unpack buffer.
Rectangle texture cannot have a compressed format.
Recursion detected:
Recursive function call in the following call chain:
Reducing stack by rule %d (line %lu):
Reference of struct type 
RegCloseKey
RegEnumValueA
RegOpenKeyExA
RegQueryValueExA
RegisterClassA
RegisterDeviceEventEXT
RegisterDisplayEventEXT
RegisterObjectsNVX
RegisterTraceGuidsW
RegisterWaitForSingleObject
ReleaseDC
ReleaseDisplayEXT
ReleaseMutex
ReleaseSRWLockExclusive
ReleaseSemaphore
Removing meta-layer %s from instance layer list since it appears invalid.
Renderbuffer format does not support 
Renderbuffer width and height cannot be negative and cannot exceed maximum texture size.
Renderer does not support PS 
Renderer does not support StretctRect from textures.
Renderer11::initialize (ComQueries)
Renderer11::initialize (DXGICheck)
Renderer11::initialize (HideWarnings)
Renderer11::initialize (Load DLLs)
Renderer11::initializeDevice
Requested 
Requested GLES version is not supported.
Requested color attachment is greater than the maximum supported color attachments
Requires both binding and offset
ResType
Reserved word.
Reserving indices exceeds the maximum buffer size.
Reset/ResetEx failed multiple times, 
ResetCommandBuffer
ResetCommandPool
ResetDescriptorPool
ResetEvent
ResetFences
RoInitialize
RoUninitialize
RowStride
RowsPerSlice
RtlCaptureContext
RtlLookupFunctionEntry
RtlPcToFileHeader
RtlUnwindEx
RtlVirtualUnwind
S(9.t0H
S(H9S0t	
S*P}y
S8H+S0H
S;\$0tH
S>$hkDh$h>[2
SAMPLE
SAMPLER
SAMPLER1D
SAMPLER1DARRAY
SAMPLER1DARRAYSHADOW
SAMPLER1DSHADOW
SAMPLER2D
SAMPLER2DARRAY
SAMPLER2DARRAYSHADOW
SAMPLER2DMS
SAMPLER2DMSARRAY
SAMPLER2DRECT
SAMPLER2DRECTSHADOW
SAMPLER2DSHADOW
SAMPLER3D
SAMPLERBUFFER
SAMPLERCUBE
SAMPLERCUBEARRAY
SAMPLERCUBEARRAYSHADOW
SAMPLERCUBESHADOW
SAMPLEREXTERNALOES
SAMPLERSHADOW
SD8d$8t
SEMICOLON
SETUPAPI.dll
SHADER_STORAGE_BLOCKS
SHADER_STORAGE_BUFFER is not supported in GLES3.
SHARED
SHDR$
SHDR,
SHDR4
SHDR8
SHDR<
SHDR@
SHDRL
SHDRP
SHDRX
SHDR\
SHDR`
SHDRd
SHDRp
SHDRx
SLASH
SMOOTH
SNAN)
SOFTWARE\Khronos\Vulkan\Drivers
SOFTWARE\Khronos\Vulkan\ExplicitLayers
SOFTWARE\Khronos\Vulkan\ImplicitLayers
SPIR-V requires location for user input/output
SPRITEPOSITION
SPRITETEXCOORD
SPV_EXT_descriptor_indexing
SPV_EXT_shader_stencil_export
SPV_EXT_shader_viewport_index_layer
SPV_GOOGLE_hlsl_functionality1
SPV_KHR_16bit_storage
SPV_KHR_8bit_storage
SPV_KHR_device_group
SPV_KHR_multiview
SPV_KHR_post_depth_coverage
SPV_KHR_shader_atomic_counter_ops
SPV_KHR_shader_ballot
SPV_KHR_shader_draw_parameters
SPV_KHR_storage_buffer_storage_class
SPV_KHR_subgroup_vote
SPV_KHR_vulkan_memory_model
STATt
STDGL
STRUCT
SUBGROUPCOHERENT
SUBPASSINPUT
SUBPASSINPUTMS
SUBROUTINE
SUB_ASSIGN
SUPERP
SUVWATAUAVAWH
SUVWATAUAVAWL
SVWATAUAVAWH
SVWAVAWH
SVWAVH
SV_DEPTH
SV_Depth
SV_DispatchThreadID;
SV_GroupID;
SV_GroupIndex;
SV_GroupThreadID;
SV_InstanceID
SV_POSITION
SV_Position
SV_RENDERTARGETARRAYINDEX
SV_RenderTargetArrayIndex
SV_SAMPLEINDEX
SV_TARGET
SV_Target
SV_VertexID
SV_ViewportArrayIndex
SWITCH
S^>#/
SampleId
SampleMaskIn
SamplePosition
Sampler
Sampler is not valid
SamplerComparisonState
SamplerState
Samplers of conflicting types refer to the same texture image unit (
Samples may not be zero.
Samples must not be greater than maximum supported value for the format.
Saturday
Saving program binary with transform feedback, which is not supported on this driver.
Scaling and flipping in BlitFramebufferANGLE not supported by this implementation.
SchedulerKind
SchedulingProtocol
ScopedVkLoaderEnvironment
Searching for ICD drivers named %s, using default dir %s
Searching the following paths for manifest files: %s
SecondaryColor
SecondaryFragColorEXT
SecondaryFragDataEXT
Semantics must include exactly one of gl_SemanticsRelease, gl_SemanticsAcquire, or gl_SemanticsAcquireRelease
Semantics must not include multiple of gl_SemanticsRelease, gl_SemanticsAcquire, or gl_SemanticsAcquireRelease
September
Sequence
Serialize
SetCurrentDirectoryA
SetDebugUtilsObjectNameEXT
SetDebugUtilsObjectTagEXT
SetEndOfFile
SetEnvironmentVariableA
SetEnvironmentVariableW
SetEvent
SetFileInformationByHandle
SetFilePointerEx
SetHdrMetadataEXT
SetLastError
SetPixelFormat
SetStdHandle
SetThreadAffinityMask
SetThreadGroupAffinity
SetThreadPriority
SetThreadpoolTimer
SetThreadpoolWait
SetUmsThreadInformation
SetUnhandledExceptionFilter
Shader Compiler
Shader attachment already has a shader.
Shader compilation failed with no info log.
Shader object expected.
Shader source contains invalid characters.
Shader storage buffers are not supported in this version of GL
Shader to be detached must be currently attached to the program.
Shader version: 
Shadow
Shared memory declarations cannot have layout specified
Shifting
ShouldApplyLastRowPaddingWorkaround
SignalObjectAndWait
Simultaneous use of GL_CONSTANT_ALPHA/GL_ONE_MINUS_CONSTANT_ALPHA and GL_CONSTANT_COLOR/GL_ONE_MINUS_CONSTANT_COLOR not supported by this implementation.
Size for built-in vertex attribute is outside allowed range.
Sized GL_RGB32F internal format requires GL_CHROMIUM_color_buffer_float_rgb
Sized GL_RGBA32F internal format requires GL_CHROMIUM_color_buffer_float_rgba
SizedInternalformat must be color-renderable, depth-renderable, or stencil-renderable.
Skipping adding of json file "%s" from registry "%s\%s" to the list due to duplication
Skipping manifest file %s - The file has already been read once
Skipping manifest file %s, file name must end in .json
Sleep
SleepConditionVariableCS
SleepConditionVariableSRW
Source entry point must be "main"
Source texture a valid texture type.
Source texture internal format is invalid.
Source texture is not a valid texture object.
Source texture level is not valid.
Source texture must be of type GL_TEXTURE_2D.
Source texture must have a compressed internal format.
Source texture must level 0 defined.
Specified unit must be in [GL_TEXTURE0, GL_TEXTURE0 + GL_MAX_COMBINED_IMAGE_UNITS)
Specified unit must be in [GL_TEXTURE0, GL_TEXTURE0 + GL_MAX_TEXTURE_UNITS)
Stack now
Stack overflow.
Stack size increased to %lu
Stack underflow.
Starting parse
Stencil
Stencil reference and mask values must be the same for front facing and back facing triangles.
Storage class semantics must not be zero
Storage qualifiers have to be after interpolation qualifiers.
Storage qualifiers have to be after layout qualifiers.
Storage qualifiers must match:
Store
Stream consumer extension not active
Stream extension not active
Stream not fully configured
Stream not in connecting state
Stream producer extension not active
Stream<GS_OUTPUT> outStream)
StreamInIndexBuffer
StretchRect failed to blit between textures
Stride is over the maximum stride allowed by WebGL.
Stride must be a multiple of the passed in datatype.
Struct cannot be captured directly (
Struct nesting
Structure constructor arguments do not match structure fields
Structure name
SubGroupEqMask
SubGroupGeMask
SubGroupGtMask
SubGroupInvocation
SubGroupLeMask
SubGroupLtMask
SubGroupSize
SubmitDebugUtilsMessageEXT
SubmitThreadpoolWork
Sunday
Surface cannot be EGL_NO_SURFACE.
Surface does not support EGL_MULTISAMPLE_RESOLVE_BOX.
Surface does not support EGL_SWAP_BEHAVIOR_PRESERVED.
Surface types are not compatible.
Swap chain pass through layout
Swap chain pass through pixel shader
Swap chain pass through rasterizer state
Swap chain pass through sampler
Swap chain pass through vertex shader
Swap chain quad vertex buffer
Swap chain uninitialized
Swap surface cannot be EGL_NO_SURFACE.
SwapBuffers
SwapChain11::initPassThroughResources
SwapChain11::reset
SwapChain11::resetOffscreenTexture
SwapChain11::resize
Switch
SwitchToThread
Swizzle shader type not found
SwizzleIndices
SwizzleProperties
Sync objects are unimplemented.
SystemTimeToTzSpecificLocalTime
T$ 3Q
T$ D)s
T$ E1
T$ E3
T$ H)
T$ Hc)A
T$ I	
T$ L9t$8v
T$ Lc
T$ t"H
T$ |kH
T$(D:z	M
T$(E1
T$(H9
T$(I+T$ H
T$(I9
T$(L9
T$(Lc
T$(t+I
T$,A9
T$,D9
T$/E1
T$0E1
T$0E3
T$0H)
T$0H9
T$0H9T$8
T$0H;
T$0I)
T$0I;
T$0L9
T$0fE
T$49Q
T$4u	L
T$8#J,
T$8#J8	
T$8E1
T$8H)
T$8H+T$0H
T$8H;Z
T$8v	H
T$@E1
T$@H)
T$@H9
T$HE1
T$HH9
T$HI)
T$HMcI
T$PD+
T$PE1
T$PE3
T$PH3
T$PH9
T$XE1
T$Xw	H
T$`D9I r
T$`D9I(r
T$`H)
T$`H9
T$dE1
T$efA
T$hE1
T$hH9
T$hH9T$`t=H
T$hM9
T$nfA
T$pE1
T$pE3
T$pH)
T$pH9
T$pHc
T$pLcL$xH
T$pt?H
T$xD;D$x
T$xHc
T(;E:
T)$A9
T;(H9
TEXCOORD
TEXCORD
TEXTURE1D
TEXTURE1DARRAY
TEXTURE2D
TEXTURE2DARRAY
TEXTURE2DMS
TEXTURE2DMSARRAY
TEXTURE2DRECT
TEXTURE3D
TEXTUREBUFFER
TEXTURECUBE
TEXTURECUBEARRAY
TEXTURE_IMAGE_UNITS
TILDE
TUUUU
TUUUUUU
TYPE_NAME
Target must be TEXTURE_2D_MULTISAMPLE.
Target must be TEXTURE_2D_MULTISAMPLE_ARRAY_OES.
TargetOversubscriptionFactor
Temporary
TerminateProcess
Ternary selection
TessCoord
TessLevelInner
TessLevelOuter
Test condition and select
TexCoord
TexLocationOffset
TexLocationScale
TexStorage2D.DSV
TexStorage2D.DropStencil
TexStorage2D.Level0RTV
TexStorage2D.Level0Texture
TexStorage2D.RTV
TexStorage2D.SRV
TexStorage2D.SRVForImage
TexStorage2D.SwizzleTexture
TexStorage2D.Texture
TexStorage2D.UAVForImage
TexStorage2DArray.DropStencil
TexStorage2DArray.RenderTargetDSV
TexStorage2DArray.RenderTargetRTV
TexStorage2DArray.RenderTargetSRV
TexStorage2DArray.SRV
TexStorage2DArray.SRVForImage
TexStorage2DArray.SwizzleTexture
TexStorage2DArray.Texture
TexStorage2DArray.UAVForImage
TexStorage2DMS.SRV
TexStorage2DMS.Texture
TexStorage2DMSArray.RenderTargetDSV
TexStorage2DMSArray.RenderTargetRTV
TexStorage2DMSArray.RenderTargetSRV
TexStorage2DMSArray.SRV
TexStorage2DMSArray.Texture
TexStorage3D.LayerRTV
TexStorage3D.RTV
TexStorage3D.SRV
TexStorage3D.SRVForImage
TexStorage3D.SwizzleRTV
TexStorage3D.SwizzleTexture
TexStorage3D.Texture
TexStorage3D.UAVForImage
TexStorageCube.DropStencil
TexStorageCube.RenderTargetDSV
TexStorageCube.RenderTargetRTV
TexStorageCube.RenderTargetSRV
TexStorageCube.SRV
TexStorageCube.SRVForImage
TexStorageCube.SwizzleTexture
TexStorageCube.Texture
TexStorageCube.UAVForImage
TexStorageEGLImage.SRV
TexStorageEGLImage.SwizzleTexture
Textarget must match the texture target type.
Texture component must be a constant expression
Texture filter not recognized.
Texture format does not support mipmap generation.
Texture is not a three-dimensional or two-dimensionsal array texture.
Texture is not cubemap complete. All cubemaps faces must be defined and be the same size.
Texture is null
Texture level does not exist.
Texture level must be zero.
Texture not created on ANGLE D3D device
Texture offset must be a constant expression
Texture offset value out of valid range
Texture only supports NEAREST and LINEAR filtering.
Texture target requires at least OpenGL ES 3.1.
Texture was not generated
Texture wrap mode not recognized.
Texture's device does not match.
Texture's sample count does not match.
Texture's target must be GL_TEXTURE_2D.
Texture's target must be GL_TEXTURE_2D_ARRAY.
Texture2D
Texture2D<float4>
Texture2D<int4>
Texture2D<snorm float4>
Texture2D<uint4>
Texture2D<unorm float4>
Texture2DArray
Texture2DArray<float4>
Texture2DArray<int4>
Texture2DArray<snorm float4>
Texture2DArray<uint4>
Texture2DArray<unorm float4>
Texture2DMS<float4>
Texture2DMS<int4>
Texture2DMS<uint4>
Texture2DMSArray<float4>
Texture2DMSArray<int4>
Texture2DMSArray<uint4>
Texture3D<float4>
Texture3D<int4>
Texture3D<snorm float4>
Texture3D<uint4>
Texture3D<unorm float4>
TextureCube
TextureCube<float4>
TextureCube<snorm float4>
TextureCube<unorm float4>
TextureF
TextureF2D
TextureF2DArray
TextureF3D
TextureF_2DArray
TextureF_3D
TextureF_MS
TextureI
TextureI2D
TextureI2DArray
TextureI3D
TextureUI
TextureUI2D
TextureUI2DArray
TextureUI3D
The D3D11 device was removed, 
The active program has specified no output variables to record.
The active read framebuffer object has multiview attachments.
The attached geometry shader isn't compiled.
The current context doesn't support setting a non-zero divisor on the attribute with index zero. Please reorder the attributes in your vertex shader so that attribute zero can have a zero divisor.
The current renderer doesn't support gl_FrontFacing
The destination level of the destination texture must be defined.
The display used by a swapchain does not use the same presentable image layout, or is incompatible in a way that prevents sharing an image.
The draw command is unsupported when transform feedback is active and not paused.
The explicit flushing bit may only be set if the buffer is mapped for writing.
The following extension must be enabled to use this feature:
The interpolation qualifier specified multiple times.
The invariant qualifier has to be first in the expression.
The invariant qualifier specified multiple times.
The layout qualifier and invariant qualifier cannot coexist in the same declaration according to the grammar.
The layout qualifier specified multiple times.
The logical or physical device has been lost.
The number of views in the active draw framebuffer is greater than 1.
The number of views in the active program and draw framebuffer does not match.
The precision qualifier specified multiple times.
The provided parameters overflow with the provided buffer.
The requested version of Vulkan is not supported by the driver or is otherwise incompatible for implementation-specific reasons.
The requested window is already connected to a VkSurfaceKHR, or to some other non-Vulkan API.
The source level of the source texture must be defined.
The specified dimensions are outside of the bounds of the texture.
The std430 layout is supported only for shader storage blocks.
The sum of the number of active image uniforms, active shader storage blocks and active fragment shader outputs exceeds MAX_COMBINED_SHADER_OUTPUT_RESOURCES (
The sum of the number of active shader storage blocks exceeds MAX_COMBINED_SHADER_STORAGE_BLOCKS (
The sum of the number of active uniform blocks exceeds MAX_COMBINED_UNIFORM_BLOCKS (
The texture is a non-power-of-two texture.
The total number of invocations within a work group exceeds 
The validation layers detected invalid API usage.
The value of TEXTURE_IMMUTABLE_FORMAT for the texture currently bound to target on the active texture unit is true.
The value passed to the mem argument of an atomic memory function does not correspond to a buffer or shared variable.
There is an active query for target GL_TIME_ELAPSED_EXT when the number of views in the active draw framebuffer is greater than 1.
There is an active transform feedback object when the number of views in the active draw framebuffer is greater than 1.
Third Party
This ANGLE implementation does not support separate front/back stencil writemasks, reference values, or stencil mask values.
This device type requires a platform type of EGL_PLATFORM_ANGLE_TYPE_D3D9_ANGLE or EGL_PLATFORM_ANGLE_TYPE_D3D9_ANGLE.
This type of loop is not allowed
Thursday
Timeout must be positive
Timer query extension not enabled
TlsAlloc
TlsFree
TlsGetValue
TlsSetValue
Too few args in Macro
Too many args in macro
Too many arguments for macro
Too many attributes (
Too many objects of the type have already been created.
Too many vertex attributes.
TraceEvent
Transform feedback has a mapped buffer.
Transform feedback is already active.
Transform feedback object that does not exist.
Transform feedback varying 
Transform feedback varying total components (
Triangle
TrimCache
TrimCommandPool
TrimCommandPoolKHR
TryAcquireSRWLockExclusive
TryEnterCriticalSection
Tuesday
Two textures of different types use the same sampler location.
Two transform feedback varyings include the same array element (
Two transform feedback varyings specify the same output variable (
Type is INT_2_10_10_10_REV or UNSIGNED_INT_2_10_10_10_REV and size is not 4.
Types must match:
U(t	Ak
U16VEC2
U16VEC3
U16VEC4
U32VEC2
U32VEC3
U32VEC4
U64VEC2
U64VEC3
U64VEC4
U8D8;A
U8VEC2
U8VEC3
U8VEC4
U@D83t
UA>N0Wl
UATAUAVAWH
UAVAWH
UAWAVATVWSH
UAWAVAUATVWSH
UAWAVAUATVWSPH
UAWAVVWSH
UAWAVVWSPH
UIMAGE1D
UIMAGE1DARRAY
UIMAGE2D
UIMAGE2DARRAY
UIMAGE2DMS
UIMAGE2DMSARRAY
UIMAGE2DRECT
UIMAGE3D
UIMAGEBUFFER
UIMAGECUBE
UIMAGECUBEARRAY
UINT16CONSTANT
UINT16_T
UINT32CONSTANT
UINT32_T
UINT64CONSTANT
UINT64_T
UINT8_T
UINTCONSTANT
UNIFORM
UNIFORM_BUFFERS
UNIFORM_COMPONENTS
UNIFORM_VECTORS
UNIMPLEMENTED: 
UNKNOWN
UNKNOWN ERROR: 
UNKOWN ERROR: 
UPE94$
USAMPLER1D
USAMPLER1DARRAY
USAMPLER2D
USAMPLER2DARRAY
USAMPLER2DMS
USAMPLER2DMSARRAY
USAMPLER2DRECT
USAMPLER3D
USAMPLERBUFFER
USAMPLERCUBE
USAMPLERCUBEARRAY
USER32.dll
USUBPASSINPUT
USUBPASSINPUTMS
USVWATAUAVAWH
USVWAVH
UTEXTURE1D
UTEXTURE1DARRAY
UTEXTURE2D
UTEXTURE2DARRAY
UTEXTURE2DMS
UTEXTURE2DMSARRAY
UTEXTURE2DRECT
UTEXTURE3D
UTEXTUREBUFFER
UTEXTURECUBE
UTEXTURECUBEARRAY
UTF-16LEUNICODE
UTF-8
UUUU)
UUUU1
UUUUE
UUUUU
UUUUUU
UUUUUUU
UUUUUUUUH!
UVEC2
UVEC3
UVEC4
UVWATAUAVAWH
UVWATAVH
UVWAVAWH
UWATAVAWH
UWAVH
UmsThreadYield
Unable to allocate internal buffer storage.
Unable to determine source language
Unable to parse built-ins
Undefined behavior
Undefined function '
Undefined shift (operand out of range)
Unexpected number of components
Unhandled internal error: 
UnhandledExceptionFilter
Uniform location out of range
Uniform size does not match uniform method.
Unimplemented
Unimplemented pixel store parameters in fastUnpackPixels
Unknown
Unknown Stage.
Unknown attribute.
Unknown buftype for D3DTextureSurfaceWGL.
Unknown client buffer texture format: 
Unknown constant
Unknown enum for 'src' in ReadBuffer
Unknown error.
Unknown exception
Unknown glslang keyword
Unknown parameter value.
Unknown platform type.
Unknown property of program interface.
Unknown vulkan error code.
Unloading layer library %s
UnmapMemory
Unpack alignment must be 1, 2, 4, or 8.
UnpackDouble2x32
UnpackSnorm4x8
UnpackUnorm4x8
Unreachable Error
Unreachble code reached.
UnregisterClassA
UnregisterObjectsNVX
UnregisterTraceGuids
UnregisterWait
UnregisterWaitEx
Unsigned integers are unsupported prior to GLSL ES 3.00
Unsupported format
Unsupported internal format.
UpdateDescriptorSetWithTemplate
UpdateDescriptorSetWithTemplateKHR
UpdateDescriptorSets
UpdateProcThreadAttribute
V(H9_(t
V6E>`"(5
VARYING
VD$Pf
VERTEX
VERTICAL_BAR
VK_EXT_debug_marker
VK_EXT_debug_report
VK_EXT_debug_utils
VK_EXT_direct_mode_display
VK_EXT_display_surface_counter
VK_EXT_swapchain_colorspace
VK_EXT_validation_flags
VK_ICD_FILENAMES
VK_INSTANCE_LAYERS
VK_KHR_device_group_creation
VK_KHR_display
VK_KHR_display extension not enabled.  vkCreateDisplayModeKHR not executed!
VK_KHR_display extension not enabled.  vkGetDisplayModePropertiesKHR not executed!
VK_KHR_display extension not enabled.  vkGetDisplayPlaneCapabilitiesKHR not executed!
VK_KHR_display extension not enabled.  vkGetDisplayPlaneSupportedDisplaysKHR not executed!
VK_KHR_display extension not enabled.  vkGetPhysicalDeviceDisplayPlanePropertiesKHR not executed!
VK_KHR_display extension not enabled.  vkGetPhysicalDeviceDisplayPropertiesKHR not executed!
VK_KHR_display_swapchain
VK_KHR_external_fence_capabilities
VK_KHR_external_memory_capabilities
VK_KHR_external_semaphore_capabilities
VK_KHR_get_display_properties2
VK_KHR_get_physical_device_properties2
VK_KHR_get_surface_capabilities2
VK_KHR_maintenance1
VK_KHR_mir_surface
VK_KHR_surface
VK_KHR_surface extension not enabled.  vkCreateDisplayPlaneSurfaceKHR not executed!
VK_KHR_surface extension not enabled.  vkGetPhysicalDeviceSurfaceCapabilitiesKHR not executed!
VK_KHR_surface extension not enabled.  vkGetPhysicalDeviceSurfaceFormatsKHR not executed!
VK_KHR_surface extension not enabled.  vkGetPhysicalDeviceSurfacePresentModesKHR not executed!
VK_KHR_surface extension not enabled.  vkGetPhysicalDeviceSurfaceSupportKHR not executed!
VK_KHR_swapchain
VK_KHR_wayland_surface
VK_KHR_win32_surface
VK_KHR_win32_surface extension not enabled.  vkCreateWin32SurfaceKHR not executed!
VK_KHR_win32_surface extension not enabled.  vkGetPhysicalDeviceWin32PresentationSupportKHR not executed!
VK_KHR_xcb_surface
VK_KHR_xlib_surface
VK_LAYER_GOOGLE_threading
VK_LAYER_GOOGLE_unique_objects
VK_LAYER_LUNARG_core_validation
VK_LAYER_LUNARG_object_tracker
VK_LAYER_LUNARG_parameter_validation
VK_LAYER_LUNARG_standard_validation
VK_LAYER_PATH
VK_LOADER_DEBUG
VK_LOADER_DISABLE_INST_EXT_FILTER
VK_NV_external_memory_capabilities
VOLATILE
VS_OUTPUT generateOutput(VS_INPUT input)
VS_OUTPUT main(VS_INPUT input)
VT$PD
VUUUL
VUUUUUU
VUUUUUUUH
VWATAUAVAWL
VWATAVAW
VWATAVAWH
VWAUAVAWH
VWAUH
VWAVH
VWAWH
VWUSH
VWUSM
ValidateBlendFuncSeparate
ValidateCreatePlatformPixmapSurfaceEXT unimplemented.
ValidateCreatePlatformWindowSurfaceEXT unimplemented.
ValidateDrawStates
ValidateEnable
ValidateVertexAttribDivisorANGLE
Varying '
VerSetConditionMask
VerifyVersionInfoW
Vertex
Vertex Attrib Bindings are not supported in this version of GL
Vertex Attrib Bindings require OpenGL ES 3.1.
Vertex attribute size must be 1, 2, 3, or 4.
Vertex buffer is not big enough for the draw call
Vertex buffer is not big enough for the draw call.
Vertex shader input type does not match the type of the bound vertex attribute.
Vertex type not supported before OpenGL ES 3.0.
VertexBuffer11 (dynamic)
VertexBuffer11 (static)
VertexID
VertexId
VertexIndex
ViewIDOVR
ViewID_OVR
ViewIndex
Viewport size cannot be negative.
ViewportIndex
VirtualAlloc
VirtualFree
VirtualProtect
VpH+VhH
Vulkan 
Vulkan Mock Device
Vulkan Mock Driver was requested but Mock Device was not found. Using default physicalDevice instead.
Vulkan platform is unsupported.
Vulkan validation layers are missing.
VulkanDriverName
VulkanDriverNameWow
VulkanExplicitLayers
VulkanExplicitLayersWow
VulkanImplicitLayers
VulkanImplicitLayersWow
VwIJc
W(H9C(t
W0;Ct~ZH
W0H;\$0H
W8HcH
WARNING
WARNING: 
WATAUAVAWH
WATAVH
WATAWH
WAVAWH
WGL_ARB_create_context
WGL_ARB_create_context_robustness
WGL_ARB_create_context_robustness exists but unable to OpenGL context with robustness.
WGL_ARB_pbuffer
WGL_ARB_pixel_format
WGL_ARB_render_texture
WGL_EXT_create_context_es2_profile
WGL_EXT_create_context_es_profile
WGL_EXT_swap_control
WGL_NV_DX_interop
WGL_NV_DX_interop2
WGL_NV_DX_interop2 is required but not present.
WHILE
WORKGROUPCOHERENT
WPH;WXu
WRITEONLY
W`;Ct~|H
WaNd?
WaitForFences
WaitForSingleObject
WaitForSingleObjectEx
WaitForThreadpoolTimerCallbacks
Wak>E
WakeAllConditionVariable
WakeConditionVariable
Warning, (version, profile) forced to be (
Warning: D3D shader compilation failed with 
Wednesday
WideCharToMultiByte
Width and Height are not supported for thie <buftype>
Width and Height must be positive
Width and height must be less than or equal to GL_MAX_TEXTURE_SIZE.
Width or height < 1
WinRTInitialization
WindowFromDC
Windows
Work group size does not match the previous declaration
Work group size is not specified.
WorkGroupID
WorkGroupSize
WorkgroupMemoryBarrier
WorkgroupMemoryBarrierWithGroupSync
WriteConsoleW
WriteFile
Writeonly value cannot be passed for 'in' or 'inout' parameters.
X E9j
X H+X
X UVWATAUAVAWH
X!t5~
X?fff?;
X@H+,
XHH;\
XOR_ASSIGN
XOR_OP
X[]_^
X[]_^A\A]A^A_
X[]_^A\A]A^A_H
X[]_^A^A_
X[_^A\A^A_
X[_^A^
X~u8H
Y$D;R
Y0t>H
Y>kX>
Y>kX>M
YD$@f
YUV 4:2:0 textures must have even width and height.
Z(D9Z
Z>w_F
Z\>z8
Zero divided by zero during constant folding generated NaN
Zero is bound to target.
Zod(^?
[*ncd>0
[*ncd>TQ
[]_^A\A]A^A_
[]_^A\A]A^A_H
[]_^A\A^A_
[]_^A^
[]_^A^A_
[_^A\A]A^A_
[_^A\A]A^A_]
[_^A\A]A^A_]H
[_^A\A^A_
[_^A\A^A_H
[_^A\A^A_]
[_^A\A^A_]H
[_^A^
[_^A^A_
[_^A^A_H
[_^A^A_]
[_^A^A_]H
[aOni*{
[gl_MinProgramTexelOffset, gl_MaxProgramTexelOffset]
[index]
[int(clamp(float(
[label =<
[maxvertexcount(
[numthreads(
[p] = data;
[samplerArrayIndex]
[samplerIndex]
[textureIndex]
[uint2(p.x, p.y)];
[uint3(p.x, p.y, p.z)];
[webgl_int_clamp(
\$ E1
\$ E3
\$ H9
\$ UH
\$ UVWATAUAVAWH
\$ UVWAVAWH
\$ UVWH
\$ VWATAUAVH
\$ WH
\$(E1
\$(H)
\$(H9
\$(H9x(u
\$(H;
\$(Hc
\$(r(H
\$,H9
\$0E1
\$0H9\$(u
\$0H;
\$0Hi
\$0Ii
\$0L9
\$0eH
\$0t	
\$0t.H
\$2E1
\$3E1
\$7E1
\$7tgIc
\$8D9
\$8E1
\$8H)
\$8H9
\$8I;
\$8L9
\$8M9
\$8t'I
\$8t)
\$8t+H
\$8t<E
\$8u*I
\$8uEH
\$<9_8t<H
\$<D2
\$@E1
\$@H;
\$@H;l$8u
\$@I)
\$HH)
\$HH9
\$HH;\$h
\$Ht	H
\$Lf	
\$PE1
\$PE3
\$PH)
\$PH9
\$PH;
\$PH;\$X
\$PfH
\$PtFH
\$Pt`L
\$Pu-H
\$XE1
\$XH;
\$Xt0
\$`E1
\$`t)H
\$`u-
\$`u<H
\$efA
\$gm?
\$jfD
\$lt#I
\$xE1
\>$hkDh$h>
\ffff
] * viewportScale * gl_PointSize, 0.0f, 0.0f);
] : packoffset(
] of 
])6M>&
], input[lastVertexIndex]);
], x[
]-?Z8
]>)2X
^(9S4
^8U)zj
^<V7w
^>&qN
^H_Gx@
^RfN>
_(H9n
_External
_L9WLu
_Load
_RWTS_invalid_
_Store
_TTS_invalid_
__FILE__
__LINE__
__VERSION__
__based(
__cdecl
__clrcall
__eabi
__fastcall
__pascal
__ptr64
__restrict
__samplerExternal2DY2YEXT
__stdcall
__swift
__thiscall
__unaligned
__vectorcall
_cabs
_ctor
_f>PH
_frl(inout 
_frm(inout 
_hypot
_level_9_3
_logb
_nextafter
_oD>Kg
_type
_webgl_
_webgl_struct_
_~u>H
`+!]?
`.rdata
`0AWAVVWUSH
`0VWSH
`>n>w%
`A^_^
`A_A^A]A\_^]
`A_A^_^[
`INFO
`RTTI
`[]_^A\A^A_
`[]_^A^
`[_^A\A]A^A_
`[_^A^A_
`[_^H
`copy constructor closure'
`default constructor closure'
`dynamic atexit destructor for '
`dynamic initializer for '
`eh vector constructor iterator'
`eh vector copy constructor iterator'
`eh vector destructor iterator'
`eh vector vbase constructor iterator'
`eh vector vbase copy constructor iterator'
`h````
`h`hhh
`local static guard'
`local static thread guard'
`local vftable constructor closure'
`local vftable'
`managed vector constructor iterator'
`managed vector copy constructor iterator'
`managed vector destructor iterator'
`omni callsig'
`placement delete closure'
`placement delete[] closure'
`scalar deleting destructor'
`string'
`typeof'
`udt returning'
`vbase destructor'
`vbtable'
`vcall'
`vector constructor iterator'
`vector copy constructor iterator'
`vector deleting destructor'
`vector destructor iterator'
`vector vbase constructor iterator'
`vector vbase copy constructor iterator'
`vftable'
`virtual displacement map'
a struct cannot be used as a constructor argument for this type
a/XpL
abcdefghijklmnopqrstuvwxyz
access is not one of the supported tokens.
acos(
acosh
active
add second child into first child
addCarry
addTraceEvent
additive_expression
address family not supported
address in use
address not available
align
all default precisions are highp; use precision statements to quiet warning, e.g.:
all redeclarations must use the same depth layout on
all stride settings must match for xfb buffer
allInvocations
allInvocationsARB
allInvocationsEqual
allInvocationsEqualARB
allocate
allocateEventQuery
alpha_func
alpha_test_ref
already connected
ambiguous best function under implicit type conversion
ambiguous function signature match: multiple signatures match under implicit type conversion
and second child into first child
and_expression
angle
angle_
angle_SecondaryFragColor
angle_SecondaryFragData
angle_assign
angle_compound_
angle_construct_into
angle_eq
angle_eq_
angle_frl
angle_frm
angle_return
angledata
angledata/VkICD_mock_icd.json
anon@
anonymous member 
anyInvocation
anyInvocationARB
api_version
arc cosine
arc hyp. cosine
arc hyp. sine
arc hyp. tangent
arc sine
arc tangent
argument cannot drop memory qualifier when passed to formal parameter
argument list too long
argument must be a power of 2
argument must be at least 1
argument must be compile-time constant
argument out of domain
array / non-array mismatch
array argument must be sized
array assignment
array comparison
array constructor argument not correct type to construct array element
array constructor must have at least one argument
array constructor needs one argument per array element
array constructor supported in GLSL ES 3.00 and above only
array in function return type
array index for gl_FragData must be constant zero
array index for gl_FragData must be zero when GL_EXT_draw_buffers is disabled
array index out of range
array index out of range '%d'
array indexes for fragment outputs must be constant integral expressions
array indexes for uniform block arrays and shader storage block arrays must be constant integral expressions
array initializer
array initializer must be sized
array length
array members of interface blocks must specify a size
array members of structs must specify a size
array must be declared with a size before using this method
array must be explicitly sized
array must be redeclared with a size before being indexed with a variable
array must be sized by a redeclaration or layout qualifier before being indexed with a variable
array must first be sized by a redeclaration or layout qualifier
array size mismatch
array size must be a constant integer expression
array size must be a positive integer
array size must be greater than zero
array size must be non-negative
array size required
array size too large
array variable name expected
array-of-array of block
array[
array_specifier
arrayed constructor
arrayed type
arrays of arrays
arrays of arrays supported in GLSL ES 3.10 only
asfloat(
asin(
asinh
asint(
assign
assigning non-constant to '
assignment_expression
assignment_operator
assuming binding count of one for compile-time checking of binding numbers for unsized array
asuint(
atan(
atan2
atan_emu(y[
atanh
atomic counter
atomic counter binding greater than gl_MaxAtomicCounterBindings
atomic counter count exceeds MAX_COMBINED_ATOMIC_COUNTERS
atomic counter types
atomic counters can only be highp
atomic counters sharing the same offset:
atomicAdd
atomicAnd
atomicCompSwap
atomicCompSwap(0D0D0D
atomicCounter
atomicCounterAdd
atomicCounterAnd
atomicCounterCompSwap
atomicCounterDecrement
atomicCounterExchange
atomicCounterIncrement
atomicCounterMax
atomicCounterMin
atomicCounterOr
atomicCounterSubtract
atomicCounterXor
atomicExchange
atomicLoad
atomicMax
atomicMin
atomicOr
atomicStore
atomicXor
atomic_uint
atomic_uint binding is too large
atomic_uint binding is too large; see gl_MaxAtomicCounterBindings
atomic_uints can only be used in uniform variables or function parameters:
attachment index is too large
attribute
attribute does not apply to a loop
attribute does not apply to a selection
attribute does not apply to a switch
attribute vec4  gl_Color;attribute vec4  gl_SecondaryColor;attribute vec3  gl_Normal;attribute vec4  gl_Vertex;attribute vec4  gl_MultiTexCoord0;attribute vec4  gl_MultiTexCoord1;attribute vec4  gl_MultiTexCoord2;attribute vec4  gl_MultiTexCoord3;attribute vec4  gl_MultiTexCoord4;attribute vec4  gl_MultiTexCoord5;attribute vec4  gl_MultiTexCoord6;attribute vec4  gl_MultiTexCoord7;attribute float gl_FogCoord;
attribute with arguments not recognized, skipping
attribute_list
avoid flow control
b?^Cy
bad address
bad allocation
bad argument
bad array new length
bad character in float exponent
bad digit in hexadecimal literal
bad exception
bad expression
bad file descriptor
bad function call
bad locale name
bad message
bad profile name; use es, core, or compatibility
bad tokens following profile -- expected newline
ballot
ballotARB
barrier
baseViewIndex cannot be less than 0.
baseViewIndex+numViews cannot be greater than GL_MAX_ARRAY_TEXTURE_LAYERS.
behavior for extension not specified
behavior invalid
behavior not supported:
bias(
binarysize out of valid range.
binding
binding = 
binding is too large
bindingindex must be smaller than MAX_VERTEX_ATTRIB_BINDINGS
bindingindex must be smaller than MAX_VERTEX_ATTRIB_BINDINGS.
bit shift left
bit shift right
bit-shift left assign
bit-shift right assign
bit-wise and
bit-wise and second child into first child
bit-wise not
bit-wise operator supported in GLSL ES 3.00 and above only
bit-wise or
bit-wise or second child into first child
bit-wise shift first child left by second child
bit-wise shift first child right by second child
bit-wise shift left
bit-wise shift right
bit-wise xor
bit-wise xor second child into first child
bitCount
bitFieldReverse
bitfieldExtract
bitfieldExtract(0D0C0C
bitfieldExtract(1C0C0C
bitfieldExtract(3C0C0C
bitfieldInsert
bitfieldInsert(0C0C0C0C
bitfieldInsert(0D0D0C0C
bitfieldInsert(1C1C0C0C
bitfieldInsert(1D1D0C0C
bitfieldInsert(2C2C0C0C
bitfieldInsert(2D2D0C0C
bitfieldInsert(3C3C0C0C
bitfieldInsert(3D3D0C0C
bitfieldReverse
bitwise and
bitwise exclusive or
bitwise inclusive or
bitwise not
bitwise-and assign
bitwise-or assign
bitwise-xor assign
blend equation
blend state
blend_support
blend_support_all_equations
blend_support_colorburn
blend_support_colordodge
blend_support_darken
blend_support_difference
blend_support_exclusion
blend_support_hardlight
blend_support_hsl_color
blend_support_hsl_hue
blend_support_hsl_luminosity
blend_support_hsl_saturation
blend_support_lighten
blend_support_multiply
blend_support_overlay
blend_support_screen
blend_support_softlight
blitImpl
block
block declaration
block instance name redefinition
block name cannot redefine a non-block name
block redeclaration has extra members
block-
block_structure
bool 
bool   subgroupAllEqual(bool);
bool   subgroupAllEqual(bvec2);
bool   subgroupAllEqual(bvec3);
bool   subgroupAllEqual(bvec4);
bool   subgroupAllEqual(double);
bool   subgroupAllEqual(dvec2);
bool   subgroupAllEqual(dvec3);
bool   subgroupAllEqual(dvec4);
bool   subgroupAllEqual(float);
bool   subgroupAllEqual(int);
bool   subgroupAllEqual(ivec2);
bool   subgroupAllEqual(ivec3);
bool   subgroupAllEqual(ivec4);
bool   subgroupAllEqual(uint);
bool   subgroupAllEqual(uvec2);
bool   subgroupAllEqual(uvec3);
bool   subgroupAllEqual(uvec4);
bool   subgroupAllEqual(vec2);
bool   subgroupAllEqual(vec3);
bool   subgroupAllEqual(vec4);
bool   subgroupAnd(bool);
bool   subgroupAny(bool);
bool   subgroupBallotBitExtract(uvec4, uint);
bool   subgroupBroadcast(bool, uint);
bool   subgroupBroadcastFirst(bool);
bool   subgroupClusteredAnd(bool, uint);
bool   subgroupClusteredOr(bool, uint);
bool   subgroupClusteredXor(bool, uint);
bool   subgroupExclusiveAnd(bool);
bool   subgroupExclusiveOr(bool);
bool   subgroupExclusiveXor(bool);
bool   subgroupInclusiveAnd(bool);
bool   subgroupInclusiveOr(bool);
bool   subgroupInclusiveXor(bool);
bool   subgroupInverseBallot(uvec4);
bool   subgroupOr(bool);
bool   subgroupQuadBroadcast(bool, uint);
bool   subgroupQuadSwapDiagonal(bool);
bool   subgroupQuadSwapHorizontal(bool);
bool   subgroupQuadSwapVertical(bool);
bool   subgroupShuffle(bool, uint);
bool   subgroupShuffleDown(bool, uint delta);
bool   subgroupShuffleUp(bool, uint delta);
bool   subgroupShuffleXor(bool, uint);
bool   subgroupXor(bool);
bool Break
bool anyInvocation(bool);bool allInvocations(bool);bool allInvocationsEqual(bool);
bool anyInvocationARB(bool);bool allInvocationsARB(bool);bool allInvocationsEqualARB(bool);
bool doAlphaTest(vec4 currentFragment)
bool doClipPlaneTest()
bool gl_HelperInvocation;flat in highp int gl_PrimitiveID;flat in highp int gl_Layer;
bool isTextureUnitEnabled(int unit)
bool isnan_emu(float x)
bool isnan_emu(float x) { return (x > 0.0 || x < 0.0) ? false : x != 0.0; }
bool sparseTexelsResidentARB(int code);
bool xor(bool p, bool q)
bool2
bool2 isnan_emu(float2 x)
bool3
bool3 isnan_emu(float3 x)
bool4
bool4 isnan_emu(float4 x)
boolean expression expected
bp(=>?g
branch
break
break statement only allowed in loops and switch statements
break statement only allowed in switch and loops
broken pipe
broken promise
buffer
buffer block
buffer cannot reference a 2D texture with the name 0.
buffer cannot reference a 3D texture with the name 0.
buffer cannot reference a cubemap texture with the name 0.
buffer cannot reference a renderbuffer with the name 0.
buffer is non-zero and offset is negative.
buffer is non-zero and size is less than or equal to zero.
buffer is too large:
buffer.Load(loc));
bufferData
buffers can be declared only as blocks
built in unary operator function.  Type: %s
built-in block redeclaration
built-in function
built-in functions cannot be redefined
bvec2
bvec2  subgroupAnd(bvec2);
bvec2  subgroupBroadcast(bvec2, uint);
bvec2  subgroupBroadcastFirst(bvec2);
bvec2  subgroupClusteredAnd(bvec2, uint);
bvec2  subgroupClusteredOr(bvec2, uint);
bvec2  subgroupClusteredXor(bvec2, uint);
bvec2  subgroupExclusiveAnd(bvec2);
bvec2  subgroupExclusiveOr(bvec2);
bvec2  subgroupExclusiveXor(bvec2);
bvec2  subgroupInclusiveAnd(bvec2);
bvec2  subgroupInclusiveOr(bvec2);
bvec2  subgroupInclusiveXor(bvec2);
bvec2  subgroupOr(bvec2);
bvec2  subgroupQuadBroadcast(bvec2, uint);
bvec2  subgroupQuadSwapDiagonal(bvec2);
bvec2  subgroupQuadSwapHorizontal(bvec2);
bvec2  subgroupQuadSwapVertical(bvec2);
bvec2  subgroupShuffle(bvec2, uint);
bvec2  subgroupShuffleDown(bvec2, uint delta);
bvec2  subgroupShuffleUp(bvec2, uint delta);
bvec2  subgroupShuffleXor(bvec2, uint);
bvec2  subgroupXor(bvec2);
bvec2 isnan_emu(vec2 x)
bvec2 lessThan(uvec2 x, uvec2 y);bvec3 lessThan(uvec3 x, uvec3 y);bvec4 lessThan(uvec4 x, uvec4 y);bvec2 lessThanEqual(uvec2 x, uvec2 y);bvec3 lessThanEqual(uvec3 x, uvec3 y);bvec4 lessThanEqual(uvec4 x, uvec4 y);bvec2 greaterThan(uvec2 x, uvec2 y);bvec3 greaterThan(uvec3 x, uvec3 y);bvec4 greaterThan(uvec4 x, uvec4 y);bvec2 greaterThanEqual(uvec2 x, uvec2 y);bvec3 greaterThanEqual(uvec3 x, uvec3 y);bvec4 greaterThanEqual(uvec4 x, uvec4 y);bvec2 equal(uvec2 x, uvec2 y);bvec3 equal(uvec3 x, uvec3 y);bvec4 equal(uvec4 x, uvec4 y);bvec2 notEqual(uvec2 x, uvec2 y);bvec3 notEqual(uvec3 x, uvec3 y);bvec4 notEqual(uvec4 x, uvec4 y);
bvec2 lessThan(vec2 x, vec2 y);bvec3 lessThan(vec3 x, vec3 y);bvec4 lessThan(vec4 x, vec4 y);bvec2 lessThan(ivec2 x, ivec2 y);bvec3 lessThan(ivec3 x, ivec3 y);bvec4 lessThan(ivec4 x, ivec4 y);bvec2 lessThanEqual(vec2 x, vec2 y);bvec3 lessThanEqual(vec3 x, vec3 y);bvec4 lessThanEqual(vec4 x, vec4 y);bvec2 lessThanEqual(ivec2 x, ivec2 y);bvec3 lessThanEqual(ivec3 x, ivec3 y);bvec4 lessThanEqual(ivec4 x, ivec4 y);bvec2 greaterThan(vec2 x, vec2 y);bvec3 greaterThan(vec3 x, vec3 y);bvec4 greaterThan(vec4 x, vec4 y);bvec2 greaterThan(ivec2 x, ivec2 y);bvec3 greaterThan(ivec3 x, ivec3 y);bvec4 greaterThan(ivec4 x, ivec4 y);bvec2 greaterThanEqual(vec2 x, vec2 y);bvec3 greaterThanEqual(vec3 x, vec3 y);bvec4 greaterThanEqual(vec4 x, vec4 y);bvec2 greaterThanEqual(ivec2 x, ivec2 y);bvec3 greaterThanEqual(ivec3 x, ivec3 y);bvec4 greaterThanEqual(ivec4 x, ivec4 y);bvec2 equal(vec2 x, vec2 y);bvec3 equal(vec3 x, vec3 y);bvec4 equal(vec4 x, vec4 y);bvec2 equal(ivec2 x, ivec2 y);bvec3 equal(ivec3 x, ivec3 y);bvec4 equal(ivec4 x, ivec4 y);bvec2 equal(bvec2 x, bvec2 y);bvec3 equal(bvec3 x, bvec3 y);bvec4 equal(bvec4 x, bvec4 y);bvec2 notEqual(vec2 x, vec2 y);bvec3 notEqual(vec3 x, vec3 y);bvec4 notEqual(vec4 x, vec4 y);bvec2 notEqual(ivec2 x, ivec2 y);bvec3 notEqual(ivec3 x, ivec3 y);bvec4 notEqual(ivec4 x, ivec4 y);bvec2 notEqual(bvec2 x, bvec2 y);bvec3 notEqual(bvec3 x, bvec3 y);bvec4 notEqual(bvec4 x, bvec4 y);bool any(bvec2 x);bool any(bvec3 x);bool any(bvec4 x);bool all(bvec2 x);bool all(bvec3 x);bool all(bvec4 x);bvec2 not(bvec2 x);bvec3 not(bvec3 x);bvec4 not(bvec4 x);
bvec3
bvec3  subgroupAnd(bvec3);
bvec3  subgroupBroadcast(bvec3, uint);
bvec3  subgroupBroadcastFirst(bvec3);
bvec3  subgroupClusteredAnd(bvec3, uint);
bvec3  subgroupClusteredOr(bvec3, uint);
bvec3  subgroupClusteredXor(bvec3, uint);
bvec3  subgroupExclusiveAnd(bvec3);
bvec3  subgroupExclusiveOr(bvec3);
bvec3  subgroupExclusiveXor(bvec3);
bvec3  subgroupInclusiveAnd(bvec3);
bvec3  subgroupInclusiveOr(bvec3);
bvec3  subgroupInclusiveXor(bvec3);
bvec3  subgroupOr(bvec3);
bvec3  subgroupQuadBroadcast(bvec3, uint);
bvec3  subgroupQuadSwapDiagonal(bvec3);
bvec3  subgroupQuadSwapHorizontal(bvec3);
bvec3  subgroupQuadSwapVertical(bvec3);
bvec3  subgroupShuffle(bvec3, uint);
bvec3  subgroupShuffleDown(bvec3, uint delta);
bvec3  subgroupShuffleUp(bvec3, uint delta);
bvec3  subgroupShuffleXor(bvec3, uint);
bvec3  subgroupXor(bvec3);
bvec3 isnan_emu(vec3 x)
bvec4
bvec4  subgroupAnd(bvec4);
bvec4  subgroupBroadcast(bvec4, uint);
bvec4  subgroupBroadcastFirst(bvec4);
bvec4  subgroupClusteredAnd(bvec4, uint);
bvec4  subgroupClusteredOr(bvec4, uint);
bvec4  subgroupClusteredXor(bvec4, uint);
bvec4  subgroupExclusiveAnd(bvec4);
bvec4  subgroupExclusiveOr(bvec4);
bvec4  subgroupExclusiveXor(bvec4);
bvec4  subgroupInclusiveAnd(bvec4);
bvec4  subgroupInclusiveOr(bvec4);
bvec4  subgroupInclusiveXor(bvec4);
bvec4  subgroupOr(bvec4);
bvec4  subgroupQuadBroadcast(bvec4, uint);
bvec4  subgroupQuadSwapDiagonal(bvec4);
bvec4  subgroupQuadSwapHorizontal(bvec4);
bvec4  subgroupQuadSwapVertical(bvec4);
bvec4  subgroupShuffle(bvec4, uint);
bvec4  subgroupShuffleDown(bvec4, uint delta);
bvec4  subgroupShuffleUp(bvec4, uint delta);
bvec4  subgroupShuffleXor(bvec4, uint);
bvec4  subgroupXor(bvec4);
bvec4 isnan_emu(vec4 x)
c [1>H'
c(>\,
c0&>`
c>v	k
c?FA@s}
cacheProgram
call argument
calling user function from global scope
can only apply depth layout to gl_FragDepth
can only apply highp to atomic_uint
can only apply origin_upper_left and pixel_center_origin to gl_FragCoord
can only apply to 'in'
can only apply to 'out'
can only apply to a standalone qualifier
can only apply to an output
can only apply to an output, or to an input in a non-vertex stage
can only apply to uniform, buffer, in, or out storage qualifiers
can only be applied to 'const'-qualified scalar
can only be applied to a scalar
can only be applied to a standalone 'out'
can only be followed by a single macro name
can only be used on an output
can only be used on variable declaration
can only be used with a block
can only be used with a subpass
can only be used with a uniform
can only be used with an explicit location
can only be used with std140 or std430 layout packing
can only change layout qualification of
can only have one auxiliary qualifier (centroid, patch, and sample)
can only have one interpolation qualifier (flat, smooth, noperspective)
can only redeclare a built-in block once, and before any use
can only specify on a uniform block
can only use in an in/out block
can only use on input in tessellation-evaluation shader
can only use on output in tessellation-control shader
can't construct structure containing 16-bit type
can't construct structure containing 8-bit type
can't convert
can't evaluate expression
can't find function
can't handle multiple entry points per stage
can't link compilation units from different source languages
can't modify a const
can't modify a readonly buffer
can't modify a readonly variable
can't modify a sampler
can't modify a uniform
can't modify a variable with type 
can't modify a varying
can't modify an atomic_uint
can't modify an attribute
can't modify an input
can't modify any member in gl_in
can't modify gl_FragCoord
can't modify gl_FragDepth if using early_fragment_tests
can't modify gl_FrontFace
can't modify gl_FrontFacing
can't modify gl_GlobalInvocationID
can't modify gl_InstanceID
can't modify gl_InvocationID
can't modify gl_Layer in a fragment shader
can't modify gl_LocalInvocationID
can't modify gl_LocalInvocationIndex
can't modify gl_NumWorkGroups
can't modify gl_PointCoord
can't modify gl_PrimitiveID in a fragment shader
can't modify gl_PrimitiveIDIn
can't modify gl_VertexID
can't modify gl_ViewID_OVR
can't modify gl_WorkGroupID
can't modify gl_WorkGroupSize
can't modify shader input
can't modify void
can't modify work group size variable
can't read from writeonly object: 
can't swizzle types containing (u)int16
can't swizzle types containing (u)int8
can't swizzle types containing float16
can't use auxiliary qualifier on a fragment output
can't use function syntax on variable
can't use interpolation qualifier on a fragment output
can't use with arrays containing float16
can't use with arrays containing int16
can't use with arrays containing int8
can't use with arrays containing uint16
can't use with arrays containing uint8
can't use with samplers or structs containing samplers
can't use with structs containing float16
can't use with structs containing int16
can't use with structs containing int8
can't use with structs containing uint16
can't use with structs containing uint8
can't use with types containing arrays sized with a specialization constant
cannot add memory qualifier to redeclared block member
cannot add non-XFB layout to redeclared block member
cannot add patch to redeclared block member
cannot add storage, auxiliary, memory, interpolation, layout, or precision qualifier to an existing variable
cannot appear outside switch statement
cannot apply dot operator to an array
cannot apply layout qualifier to
cannot apply layout qualifiers to a shared variable
cannot apply precision statement to this type; use 'float', 'int' or a sampler type
cannot apply to 'out'
cannot apply to a block
cannot apply to a matrix, structure, or block
cannot apply to an array:
cannot apply to input
cannot apply to uniform or buffer block
cannot apply to:
cannot be a matrix
cannot be a parameter type except for '(void)'
cannot be a structure
cannot be a structure containing a bool
cannot be a structure containing a structure
cannot be a structure containing an array
cannot be a structure or array
cannot be an argument type except for '(void)'
cannot be an array of structures
cannot be applied to this type
cannot be array
cannot be bool
cannot be bool or int
cannot be matrix
cannot be negative
cannot be nested inside control flow
cannot be used (maybe an instance name is needed)
cannot be used with a structure
cannot be used with a yuvCscStandardEXT
cannot be used with push_constant
cannot change array size of redeclared block
cannot change array size of redeclared block member
cannot change arrayness of redeclared block
cannot change arrayness of redeclared block member
cannot change input storage qualification of
cannot change interpolation qualification of
cannot change output storage qualification of
cannot change previously set input primitive
cannot change previously set layout value
cannot change previously set output primitive
cannot change previously set size
cannot change previously set vertex order
cannot change previously set vertex spacing
cannot change qualification after use
cannot change qualification of
cannot change storage, memory, or auxiliary qualification of
cannot change the type of
cannot construct this type
cannot construct with these arguments
cannot contain a double, int64, or uint64
cannot convert a sampler
cannot convert a variable with type 
cannot convert a variable with writeonly
cannot convert a void
cannot convert an atomic_uint
cannot convert from '
cannot convert from '%s' to '%s'
cannot convert parameter %d from '%s' to '%s'
cannot convert return value to function return type
cannot create a 2D texture from a multisampled EGL image.
cannot declare a default, can only be used on a block
cannot declare a default, can only be used on a scalar
cannot declare a default, include a type or full declaration
cannot declare a default, use a full declaration
cannot declare arrays of arrays
cannot declare arrays of structs of this qualifier
cannot declare arrays of this qualifier
cannot declare buffer variables at global scope(outside a block)
cannot have statements before first case/default label
cannot lie in previous members
cannot nest a block definition inside a structure or block
cannot nest a structure definition inside a structure or block
cannot re-qualify a function name
cannot redeclare a built-in block with a user name
cannot redeclare a non block as a block
cannot redeclare a user-block member array
cannot redeclare after use
cannot redeclare block member with a different type
cannot redeclare block: 
cannot redeclare with different qualification:
cannot specify matrix layout on a variable declaration
cannot specify on a variable declaration
cannot specify packing on a variable declaration
cannot use 'inout' at global scope
cannot use auxiliary or interpolation qualifiers on a function parameter
cannot use auxiliary, memory, interpolation, or precision qualifier in a default qualifier declaration (declaration with no type)
cannot use both gl_FragData and gl_FragColor
cannot use both output variable sets (gl_FragData, gl_SecondaryFragDataEXT) and (gl_FragColor, gl_SecondaryFragColorEXT)
cannot use centroid qualifier on an interface block
cannot use in a block array where new locations are needed for each block element
cannot use in preprocessor expression when expanded from macros
cannot use interpolation qualifiers on an interface block
cannot use interpolation qualifiers with patch
cannot use invariant qualifier on a function parameter
cannot use invariant qualifier on an interface block
cannot use invariant qualifier on structure members
cannot use layout qualifiers on a function parameter
cannot use layout qualifiers on structure members
cannot use memory qualifiers on structure members
cannot use offset or align qualifiers in a default qualifier declaration (declaration with no type)
cannot use sample qualifier on an interface block
cannot use storage or interpolation qualifiers on structure members
case (
case label must be a scalar integer
case label must be constant
case label must have a condition
case label type does not match switch init-expression type
case labels need to be inside switch statements
case: 
case_label
casting a negative float to uint is undefined
cbuffer 
cbuffer DriverConstants : register(b0)
cbuffer DriverConstants : register(b1)
ceil(
centroid
centroid/sample/patch
character literals not supported
checkLinkStatus
checkStatus
clamp
clamp(
clamp(0D0D0D
clamp(1B0B0B
clamp(1B1B1B
clamp(1C0C0C
clamp(1C1C1C
clamp(1D1D1D
clamp(2C2C2C
clamp(3B0B0B
clamp(3C0C0C
clamp(3D0D0D
class
clearFramebuffer
client buffer is not a ID3D11Texture2D
client opengl100
client vulkan100
clip_plane_enables
clip_planes
cluster size
coherent
coherent 
color
colorIn
colorOut
color_Float
color_Sint
color_Uint
column_major
combine_alpha
combine_rgb
combined token is invalid
combined tokens are too long
comma
comment
common
comparison operator only defined for scalars
compatibility
compilation terminated
compileComputeExecutable
compileShader
compileToBinary
compileToExecutable
component
component argument
component is too large
component-wise equal
component-wise greater than
component-wise greater than or equal
component-wise less than
component-wise less than or equal
component-wise multiply
component-wise not
component-wise not equal
component_layers
compound_statement
compound_statement_no_new_scope
compute
compute shader precision not yet implemented.
compute shaders
computeOffset
condition
condition must be a scalar integer expression
conditional_expression
conditionopt
conflicting output locations with previously defined output '
connection aborted
connection already in progress
connection refused
connection reset
const
const (read only)
const array
const bool
const int
const int  gl_MaxClipPlanes = %d;
const int  gl_MaxCombinedTextureImageUnits = %d;
const int  gl_MaxDrawBuffers = %d;
const int  gl_MaxFragmentUniformComponents = %d;
const int  gl_MaxLights = %d;
const int  gl_MaxTextureCoords = %d;
const int  gl_MaxTextureImageUnits = %d;
const int  gl_MaxTextureUnits = %d;
const int  gl_MaxVaryingFloats = %d;
const int  gl_MaxVertexAttribs = %d;
const int  gl_MaxVertexTextureImageUnits = %d;
const int  gl_MaxVertexUniformComponents = %d;
const int gl_MaxAtomicCounterBindings = %d;
const int gl_MaxAtomicCounterBufferSize = %d;
const int gl_MaxClipDistances = %d;
const int gl_MaxCombinedAtomicCounterBuffers = %d;
const int gl_MaxCombinedAtomicCounters = %d;
const int gl_MaxCombinedClipAndCullDistances = %d;
const int gl_MaxCombinedImageUniforms = %d;
const int gl_MaxCombinedImageUnitsAndFragmentOutputs = %d;
const int gl_MaxCombinedShaderOutputResources = %d;
const int gl_MaxComputeAtomicCounterBuffers = %d;
const int gl_MaxComputeAtomicCounters = %d;
const int gl_MaxComputeImageUniforms = %d;
const int gl_MaxComputeTextureImageUnits = %d;
const int gl_MaxComputeUniformComponents = %d;
const int gl_MaxCullDistances = %d;
const int gl_MaxFragmentAtomicCounterBuffers = %d;
const int gl_MaxFragmentAtomicCounters = %d;
const int gl_MaxFragmentImageUniforms = %d;
const int gl_MaxFragmentInputComponents = %d;
const int gl_MaxGeometryAtomicCounterBuffers = %d;
const int gl_MaxGeometryAtomicCounters = %d;
const int gl_MaxGeometryImageUniforms = %d;
const int gl_MaxGeometryInputComponents = %d;
const int gl_MaxGeometryOutputComponents = %d;
const int gl_MaxGeometryOutputVertices = %d;
const int gl_MaxGeometryTextureImageUnits = %d;
const int gl_MaxGeometryTotalOutputComponents = %d;
const int gl_MaxGeometryUniformComponents = %d;
const int gl_MaxGeometryVaryingComponents = %d;
const int gl_MaxImageSamples = %d;
const int gl_MaxImageUnits = %d;
const int gl_MaxPatchVertices = %d;
const int gl_MaxSamples = %d;
const int gl_MaxTessControlAtomicCounterBuffers = %d;
const int gl_MaxTessControlAtomicCounters = %d;
const int gl_MaxTessControlImageUniforms = %d;
const int gl_MaxTessControlInputComponents = %d;
const int gl_MaxTessControlOutputComponents = %d;
const int gl_MaxTessControlTextureImageUnits = %d;
const int gl_MaxTessControlTotalOutputComponents = %d;
const int gl_MaxTessControlUniformComponents = %d;
const int gl_MaxTessEvaluationAtomicCounterBuffers = %d;
const int gl_MaxTessEvaluationAtomicCounters = %d;
const int gl_MaxTessEvaluationImageUniforms = %d;
const int gl_MaxTessEvaluationInputComponents = %d;
const int gl_MaxTessEvaluationOutputComponents = %d;
const int gl_MaxTessEvaluationTextureImageUnits = %d;
const int gl_MaxTessEvaluationUniformComponents = %d;
const int gl_MaxTessGenLevel = %d;
const int gl_MaxTessPatchComponents = %d;
const int gl_MaxTransformFeedbackBuffers = %d;
const int gl_MaxTransformFeedbackInterleavedComponents = %d;
const int gl_MaxVaryingComponents = %d;
const int gl_MaxVertexAtomicCounterBuffers = %d;
const int gl_MaxVertexAtomicCounters = %d;
const int gl_MaxVertexImageUniforms = %d;
const int gl_MaxVertexOutputComponents = %d;
const int gl_MaxViewports = %d;
const int gl_ScopeDevice      = 1;
const int gl_ScopeInvocation  = 4;
const int gl_ScopeQueueFamily = 5;
const int gl_ScopeSubgroup    = 3;
const int gl_ScopeWorkgroup   = 2;
const int gl_SemanticsAcquire         = 0x2;
const int gl_SemanticsAcquireRelease  = 0x8;
const int gl_SemanticsMakeAvailable   = 0x2000;
const int gl_SemanticsMakeVisible     = 0x4000;
const int gl_SemanticsRelaxed         = 0x0;
const int gl_SemanticsRelease         = 0x4;
const int gl_StorageSemanticsBuffer   = 0x40;
const int gl_StorageSemanticsImage    = 0x800;
const int gl_StorageSemanticsNone     = 0x0;
const int gl_StorageSemanticsOutput   = 0x1000;
const int gl_StorageSemanticsShared   = 0x100;
const int16_t
const int64_t
const int8_t
const ivec3 gl_MaxComputeWorkGroupCount = ivec3(%d,%d,%d);
const ivec3 gl_MaxComputeWorkGroupSize = ivec3(%d,%d,%d);
const mediump int  gl_MaxCombinedTextureImageUnits = %d;
const mediump int  gl_MaxDrawBuffers = %d;
const mediump int  gl_MaxFragmentInputVectors = %d;
const mediump int  gl_MaxFragmentUniformVectors = %d;
const mediump int  gl_MaxProgramTexelOffset = %d;
const mediump int  gl_MaxTextureImageUnits = %d;
const mediump int  gl_MaxVaryingVectors = %d;
const mediump int  gl_MaxVertexAttribs = %d;
const mediump int  gl_MaxVertexOutputVectors = %d;
const mediump int  gl_MaxVertexTextureImageUnits = %d;
const mediump int  gl_MaxVertexUniformVectors = %d;
const mediump int  gl_MinProgramTexelOffset = %d;
const uint
const uint 
const uint16_t
const uint64_t
const uint8_t
const vec4 drawTextureVertices[6] = vec4[](
constant expression required
constant_expression
constant_id
constructing from a non-dereferenced array
constructing matrix from matrix
constructing matrix from matrix can only take one argument
constructing non-array constituent from array argument
constructor
constructor argument does not have a type
constructor can't be a structure definition
constructor does not have any arguments
continue
continue statement only allowed in loops
controlBarrier
copyCompressedTexture
copyFromRTInternal
copyImage
copyImage2DArray
copyImage3D
copySubTextureCPUReadback
copySubTextureImpl
copySurfaceToTexture
copyTexture
copyToRenderTarget
copyToStorage
copyToSurface
cosh(
cosine
count
countbits(
create
createRenderTarget
createRenderTarget.BlitSRV
createRenderTarget.DSV
createRenderTarget.RTV
createRenderTarget.SRV
createRenderTarget.Texture
createRenderTargetCopy
createSRVForImage is unimplemented.
createSurface
createUAVForImage is unimplemented.
cross
cross device link
cross product
cross(
cross-product
currentTime
d$ E1
d$ E3
d$ I9
d$ Ii
d$ UAVAWH
d$#wXA9
d$$u9A
d$(E9
d$(Hc
d$0!s!
d$0E1
d$0t2I
d$8E1
d$8E;
d$8H9V
d$8L9
d$8M9
d$8t3I
d$@E1
d$@H9
d$@Hk
d$@t81
d$@tx
d$@uNL
d$DE;
d$HE1
d$H~@
d$PIc
d$XD9
d$XE1
d$`E1
d3d9.dll
d3dcompiler_43.dll
d3dcompiler_46.dll
d3dcompiler_47.dll
d?000000`?
dFdxCoarse
dFdxFine
dFdyCoarse
dFdyFine
dPdxCoarse
dPdxFine
dPdyCoarse
dPdyFine
dataSize must be at least 
dddd, MMMM dd, yyyy
debug
debug pragma syntax is incorrect
declaration
declaration_statement
default
default labels need to be inside switch statements
default qualifier requires 'uniform', 'buffer', 'in', or 'out' storage qualification
default:
default: 
define
defined
degrees
degrees(
dependency_infinite
dependency_length
deprecated, may be removed in future release
depth
depth layout qualifier
depth stencil state
depthRange
depth_any
depth_greater
depth_less
depth_unchanged
description
descriptor set
destination address required
destroy
determinant
determinant(transpose(
device is EGL_NO_DEVICE.
device is not valid.
device or resource busy
device_extensions
devicecoherent
digraph {
dimension mismatch
dimension out of bounds
direct index
direct index for interface block
direct index for structure
directive must end with a newline
directory not empty
disable
disable_environment
disallowed type in struct
discard
discard supported in fragment shaders only
display had a context loss
display is EGL_NO_DISPLAY.
display is not a valid display.
display is not initialized.
distance
distance(
divide
divide second child into first child
division by 0
division by zero
dmat2
dmat2x2
dmat2x3
dmat2x4
dmat3
dmat3x2
dmat3x3
dmat3x4
dmat4
dmat4x2
dmat4x3
dmat4x4
do-while loops not available
does not apply to floating point images
does not apply to signed integer images
does not apply to this type:
does not apply to unsigned integer images
does not operate on this type:
does not operate on types containing (u)int16
does not operate on types containing (u)int8
does not operate on types containing float16
dont_flatten
dont_unroll
dot product
dot-product
double
double floating-point suffix
double fma(double, double, double);dvec2  fma(dvec2,  dvec2,  dvec2 );dvec3  fma(dvec3,  dvec3,  dvec3 );dvec4  fma(dvec4,  dvec4,  dvec4 );
double frexp(double, out int);dvec2  frexp( dvec2, out ivec2);dvec3  frexp( dvec3, out ivec3);dvec4  frexp( dvec4, out ivec4);double ldexp(double, int);dvec2  ldexp( dvec2, ivec2);dvec3  ldexp( dvec3, ivec3);dvec4  ldexp( dvec4, ivec4);double packDouble2x32(uvec2);uvec2 unpackDouble2x32(double);
double literal
double matrix
double sqrt(double);dvec2  sqrt(dvec2);dvec3  sqrt(dvec3);dvec4  sqrt(dvec4);double inversesqrt(double);dvec2  inversesqrt(dvec2);dvec3  inversesqrt(dvec3);dvec4  inversesqrt(dvec4);double abs(double);dvec2  abs(dvec2);dvec3  abs(dvec3);dvec4  abs(dvec4);double sign(double);dvec2  sign(dvec2);dvec3  sign(dvec3);dvec4  sign(dvec4);double floor(double);dvec2  floor(dvec2);dvec3  floor(dvec3);dvec4  floor(dvec4);double trunc(double);dvec2  trunc(dvec2);dvec3  trunc(dvec3);dvec4  trunc(dvec4);double round(double);dvec2  round(dvec2);dvec3  round(dvec3);dvec4  round(dvec4);double roundEven(double);dvec2  roundEven(dvec2);dvec3  roundEven(dvec3);dvec4  roundEven(dvec4);double ceil(double);dvec2  ceil(dvec2);dvec3  ceil(dvec3);dvec4  ceil(dvec4);double fract(double);dvec2  fract(dvec2);dvec3  fract(dvec3);dvec4  fract(dvec4);double mod(double, double);dvec2  mod(dvec2 , double);dvec3  mod(dvec3 , double);dvec4  mod(dvec4 , double);dvec2  mod(dvec2 , dvec2);dvec3  mod(dvec3 , dvec3);dvec4  mod(dvec4 , dvec4);double modf(double, out double);dvec2  modf(dvec2,  out dvec2);dvec3  modf(dvec3,  out dvec3);dvec4  modf(dvec4,  out dvec4);double min(double, double);dvec2  min(dvec2,  double);dvec3  min(dvec3,  double);dvec4  min(dvec4,  double);dvec2  min(dvec2,  dvec2);dvec3  min(dvec3,  dvec3);dvec4  min(dvec4,  dvec4);double max(double, double);dvec2  max(dvec2 , double);dvec3  max(dvec3 , double);dvec4  max(dvec4 , double);dvec2  max(dvec2 , dvec2);dvec3  max(dvec3 , dvec3);dvec4  max(dvec4 , dvec4);double clamp(double, double, double);dvec2  clamp(dvec2 , double, double);dvec3  clamp(dvec3 , double, double);dvec4  clamp(dvec4 , double, double);dvec2  clamp(dvec2 , dvec2 , dvec2);dvec3  clamp(dvec3 , dvec3 , dvec3);dvec4  clamp(dvec4 , dvec4 , dvec4);double mix(double, double, double);dvec2  mix(dvec2,  dvec2,  double);dvec3  mix(dvec3,  dvec3,  double);dvec4  mix(dvec4,  dvec4,  double);dvec2  mix(dvec2,  dvec2,  dvec2);dvec3  mix(dvec3,  dvec3,  dvec3);dvec4  mix(dvec4,  dvec4,  dvec4);double mix(double, double, bool);dvec2  mix(dvec2,  dvec2,  bvec2);dvec3  mix(dvec3,  dvec3,  bvec3);dvec4  mix(dvec4,  dvec4,  bvec4);double step(double, double);dvec2  step(dvec2 , dvec2);dvec3  step(dvec3 , dvec3);dvec4  step(dvec4 , dvec4);dvec2  step(double, dvec2);dvec3  step(double, dvec3);dvec4  step(double, dvec4);double smoothstep(double, double, double);dvec2  smoothstep(dvec2 , dvec2 , dvec2);dvec3  smoothstep(dvec3 , dvec3 , dvec3);dvec4  smoothstep(dvec4 , dvec4 , dvec4);dvec2  smoothstep(double, double, dvec2);dvec3  smoothstep(double, double, dvec3);dvec4  smoothstep(double, double, dvec4);bool  isnan(double);bvec2 isnan(dvec2);bvec3 isnan(dvec3);bvec4 isnan(dvec4);bool  isinf(double);bvec2 isinf(dvec2);bvec3 isinf(dvec3);bvec4 isinf(dvec4);double length(double);double length(dvec2);double length(dvec3);double length(dvec4);double distance(double, double);double distance(dvec2 , dvec2);double distance(dvec3 , dvec3);double distance(dvec4 , dvec4);double dot(double, double);double dot(dvec2 , dvec2);double dot(dvec3 , dvec3);double dot(dvec4 , dvec4);dvec3 cross(dvec3, dvec3);double normalize(double);dvec2  normalize(dvec2);dvec3  normalize(dvec3);dvec4  normalize(dvec4);double faceforward(double, double, double);dvec2  faceforward(dvec2,  dvec2,  dvec2);dvec3  faceforward(dvec3,  dvec3,  dvec3);dvec4  faceforward(dvec4,  dvec4,  dvec4);double reflect(double, double);dvec2  reflect(dvec2 , dvec2 );dvec3  reflect(dvec3 , dvec3 );dvec4  reflect(dvec4 , dvec4 );double refract(double, double, double);dvec2  refract(dvec2 , dvec2 , double);dvec3  refract(dvec3 , dvec3 , double);dvec4  refract(dvec4 , dvec4 , double);dmat2 matrixCompMult(dmat2, dmat2);dmat3 matrixCompMult(dmat3, dmat3);dmat4 matrixCompMult(dmat4, dmat4);dmat2x3 matrixCompMult(dmat2x3, dmat2x3);dmat2x4 matrixCompMult(dmat2x4, dmat2x4);dmat3x2 matrixCompMult(dmat3x2, dmat3x2);dmat3x4 matrixCompMult(dmat3x4, dmat3x4);dmat4x2 matrixCompMult(dmat4x2, dmat4x2);dmat4x3 matrixCompMult(dmat4x3, dmat4x3);dmat2   outerProduct(dvec2, dvec2);dmat3   outerProduct(dvec3, dvec3);dmat4   outerProduct(dvec4, dvec4);dmat2x3 outerProduct(dvec3, dvec2);dmat3x2 outerProduct(dvec2, dvec3);dmat2x4 outerProduct(dvec4, dvec2);dmat4x2 outerProduct(dvec2, dvec4);dmat3x4 outerProduct(dvec4, dvec3);dmat4x3 outerProduct(dvec3, dvec4);dmat2   transpose(dmat2);dmat3   transpose(dmat3);dmat4   transpose(dmat4);dmat2x3 transpose(dmat3x2);dmat3x2 transpose(dmat2x3);dmat2x4 transpose(dmat4x2);dmat4x2 transpose(dmat2x4);dmat3x4 transpose(dmat4x3);dmat4x3 transpose(dmat3x4);double determinant(dmat2);double determinant(dmat3);double determinant(dmat4);dmat2 inverse(dmat2);dmat3 inverse(dmat3);dmat4 inverse(dmat4);bvec2 lessThan(dvec2, dvec2);bvec3 lessThan(dvec3, dvec3);bvec4 lessThan(dvec4, dvec4);bvec2 lessThanEqual(dvec2, dvec2);bvec3 lessThanEqual(dvec3, dvec3);bvec4 lessThanEqual(dvec4, dvec4);bvec2 greaterThan(dvec2, dvec2);bvec3 greaterThan(dvec3, dvec3);bvec4 greaterThan(dvec4, dvec4);bvec2 greaterThanEqual(dvec2, dvec2);bvec3 greaterThanEqual(dvec3, dvec3);bvec4 greaterThanEqual(dvec4, dvec4);bvec2 equal(dvec2, dvec2);bvec3 equal(dvec3, dvec3);bvec4 equal(dvec4, dvec4);bvec2 notEqual(dvec2, dvec2);bvec3 notEqual(dvec3, dvec3);bvec4 notEqual(dvec4, dvec4);
double subgroupAdd(double);
double subgroupBroadcast(double, uint);
double subgroupBroadcastFirst(double);
double subgroupClusteredAdd(double, uint);
double subgroupClusteredMax(double, uint);
double subgroupClusteredMin(double, uint);
double subgroupClusteredMul(double, uint);
double subgroupExclusiveAdd(double);
double subgroupExclusiveMax(double);
double subgroupExclusiveMin(double);
double subgroupExclusiveMul(double);
double subgroupInclusiveAdd(double);
double subgroupInclusiveMax(double);
double subgroupInclusiveMin(double);
double subgroupInclusiveMul(double);
double subgroupMax(double);
double subgroupMin(double);
double subgroupMul(double);
double subgroupQuadBroadcast(double, uint);
double subgroupQuadSwapDiagonal(double);
double subgroupQuadSwapHorizontal(double);
double subgroupQuadSwapVertical(double);
double subgroupShuffle(double, uint);
double subgroupShuffleDown(double, uint delta);
double subgroupShuffleUp(double, uint delta);
double subgroupShuffleXor(double, uint);
double vector
doubleBitsToInt64
doubleBitsToUint64
doubles cannot start on an odd-numbered component
drawLineLoop
drawTriangleFan
draw_texture_coords
draw_texture_dims
draw_texture_normalized_crop_rect
dummy
dummyPacker
duplicate case label
duplicate default label
duplicate field name in structure
duplicate function prototype declarations are not allowed
duplicate label
duplicate macro parameter
duplicate macro parameter name
duplicate member name:
duplicated value
dvec2
dvec2  subgroupAdd(dvec2);
dvec2  subgroupBroadcast(dvec2, uint);
dvec2  subgroupBroadcastFirst(dvec2);
dvec2  subgroupClusteredAdd(dvec2, uint);
dvec2  subgroupClusteredMax(dvec2, uint);
dvec2  subgroupClusteredMin(dvec2, uint);
dvec2  subgroupClusteredMul(dvec2, uint);
dvec2  subgroupExclusiveAdd(dvec2);
dvec2  subgroupExclusiveMax(dvec2);
dvec2  subgroupExclusiveMin(dvec2);
dvec2  subgroupExclusiveMul(dvec2);
dvec2  subgroupInclusiveAdd(dvec2);
dvec2  subgroupInclusiveMax(dvec2);
dvec2  subgroupInclusiveMin(dvec2);
dvec2  subgroupInclusiveMul(dvec2);
dvec2  subgroupMax(dvec2);
dvec2  subgroupMin(dvec2);
dvec2  subgroupMul(dvec2);
dvec2  subgroupQuadBroadcast(dvec2, uint);
dvec2  subgroupQuadSwapDiagonal(dvec2);
dvec2  subgroupQuadSwapHorizontal(dvec2);
dvec2  subgroupQuadSwapVertical(dvec2);
dvec2  subgroupShuffle(dvec2, uint);
dvec2  subgroupShuffleDown(dvec2, uint delta);
dvec2  subgroupShuffleUp(dvec2, uint delta);
dvec2  subgroupShuffleXor(dvec2, uint);
dvec3
dvec3  subgroupAdd(dvec3);
dvec3  subgroupBroadcast(dvec3, uint);
dvec3  subgroupBroadcastFirst(dvec3);
dvec3  subgroupClusteredAdd(dvec3, uint);
dvec3  subgroupClusteredMax(dvec3, uint);
dvec3  subgroupClusteredMin(dvec3, uint);
dvec3  subgroupClusteredMul(dvec3, uint);
dvec3  subgroupExclusiveAdd(dvec3);
dvec3  subgroupExclusiveMax(dvec3);
dvec3  subgroupExclusiveMin(dvec3);
dvec3  subgroupExclusiveMul(dvec3);
dvec3  subgroupInclusiveAdd(dvec3);
dvec3  subgroupInclusiveMax(dvec3);
dvec3  subgroupInclusiveMin(dvec3);
dvec3  subgroupInclusiveMul(dvec3);
dvec3  subgroupMax(dvec3);
dvec3  subgroupMin(dvec3);
dvec3  subgroupMul(dvec3);
dvec3  subgroupQuadBroadcast(dvec3, uint);
dvec3  subgroupQuadSwapDiagonal(dvec3);
dvec3  subgroupQuadSwapHorizontal(dvec3);
dvec3  subgroupQuadSwapVertical(dvec3);
dvec3  subgroupShuffle(dvec3, uint);
dvec3  subgroupShuffleDown(dvec3, uint delta);
dvec3  subgroupShuffleUp(dvec3, uint delta);
dvec3  subgroupShuffleXor(dvec3, uint);
dvec4
dvec4  subgroupAdd(dvec4);
dvec4  subgroupBroadcast(dvec4, uint);
dvec4  subgroupBroadcastFirst(dvec4);
dvec4  subgroupClusteredAdd(dvec4, uint);
dvec4  subgroupClusteredMax(dvec4, uint);
dvec4  subgroupClusteredMin(dvec4, uint);
dvec4  subgroupClusteredMul(dvec4, uint);
dvec4  subgroupExclusiveAdd(dvec4);
dvec4  subgroupExclusiveMax(dvec4);
dvec4  subgroupExclusiveMin(dvec4);
dvec4  subgroupExclusiveMul(dvec4);
dvec4  subgroupInclusiveAdd(dvec4);
dvec4  subgroupInclusiveMax(dvec4);
dvec4  subgroupInclusiveMin(dvec4);
dvec4  subgroupInclusiveMul(dvec4);
dvec4  subgroupMax(dvec4);
dvec4  subgroupMin(dvec4);
dvec4  subgroupMul(dvec4);
dvec4  subgroupQuadBroadcast(dvec4, uint);
dvec4  subgroupQuadSwapDiagonal(dvec4);
dvec4  subgroupQuadSwapHorizontal(dvec4);
dvec4  subgroupQuadSwapVertical(dvec4);
dvec4  subgroupShuffle(dvec4, uint);
dvec4  subgroupShuffleDown(dvec4, uint delta);
dvec4  subgroupShuffleUp(dvec4, uint delta);
dvec4  subgroupShuffleXor(dvec4, uint);
dyn_index_
d|$=I
e+000
e0A_A^A]A\]
e0A_A^]
e8A_A^A]A\_^[]
e@A_A^]
eLK(w
early_fragment_tests
effffff
egl::Display::initialize
eglBindAPI
eglBindTexImage
eglChooseConfig
eglClientWaitSync
eglClientWaitSync unimplemented.
eglCopyBuffers
eglCreateContext
eglCreateDeviceANGLE
eglCreateImage
eglCreateImage unimplemented.
eglCreateImageKHR
eglCreatePbufferFromClientBuffer
eglCreatePbufferSurface
eglCreatePixmapSurface
eglCreatePlatformPixmapSurface
eglCreatePlatformPixmapSurface unimplemented.
eglCreatePlatformPixmapSurfaceEXT
eglCreatePlatformWindowSurface
eglCreatePlatformWindowSurface unimplemented.
eglCreatePlatformWindowSurfaceEXT
eglCreateStreamKHR
eglCreateStreamProducerD3DTextureANGLE
eglCreateSync
eglCreateSync unimplemented.
eglCreateWindowSurface
eglDebugMessageControlKHR
eglDestroyContext
eglDestroyImage
eglDestroyImage unimplemented.
eglDestroyImageKHR
eglDestroyStreamKHR
eglDestroySurface
eglDestroySync
eglDestroySync unimplemented.
eglGetConfigAttrib
eglGetConfigs
eglGetCurrentContext
eglGetCurrentDisplay
eglGetCurrentSurface
eglGetDisplay
eglGetError
eglGetPlatformDisplay
eglGetPlatformDisplayEXT
eglGetProcAddress
eglGetSyncAttrib
eglGetSyncValuesCHROMIUM
eglInitialize
eglLabelObjectKHR
eglMakeCurrent
eglPostSubBufferNV
eglPresentationTimeANDROID
eglProgramCacheGetAttribANGLE
eglProgramCachePopulateANGLE
eglProgramCacheQueryANGLE
eglProgramCacheResizeANGLE
eglQueryAPI
eglQueryContext
eglQueryDebugKHR
eglQueryDeviceAttribEXT
eglQueryDeviceStringEXT
eglQueryDisplayAttribEXT
eglQueryStreamKHR
eglQueryStreamu64KHR
eglQueryString
eglQuerySurface
eglQuerySurfacePointerANGLE
eglReleaseDeviceANGLE
eglReleaseTexImage
eglReleaseThread
eglSStreamConsumerReleaseKHR
eglSetBlobCacheFuncsANDROID
eglStreamAttribKHR
eglStreamConsumerAcquireKHR
eglStreamConsumerGLTextureExternalAttribsNV
eglStreamConsumerGLTextureExternalKHR
eglStreamConsumerReleaseKHR
eglStreamPostD3DTextureANGLE
eglSurfaceAttrib
eglSwapBuffers
eglSwapBuffersWithDamageEXT
eglSwapBuffersWithDamageKHR
eglSwapInterval
eglSyncAttrib unimplemented.
eglTerminate
eglWaitClient
eglWaitGL
eglWaitNative
eglWaitSync
eglWaitSync unimplemented.
eh[_^A\A]A^A_]
either the block needs a location, or all members need a location, or no members have a location
else if (
empty array declaration needs to specify a size
emu_precision float atan_emu(emu_precision float y, emu_precision float x)
emu_precision vec
enable
enable_alpha_test
enable_clip_planes
enable_color_material
enable_draw_texture
enable_environment
enable_fog
enable_lighting
enable_normalize
enable_rescale_normal
enable_texture_2d
enable_texture_cube_map
end < start
endif
ensureInitialized
ensureRenderTarget
entry point cannot return a value
entry-point
entrypoints
equal
equal_spacing
equality_expression
error
error X3531:
error X4014:
error: 
eventObject
ex[_^A\A]A^A_]
exclusive or second child into first child
exclusive-or
exclusive_or_expression
executable format error
exp2(
expected
expected ')'
expected 'INF'
expected a single integer argument
expected newline after header name:
expected type name
expression
expression_statement
extension
extension 
extension 'all' cannot have 'require' or 'enable' behavior
extension cannot have 'enable' behavior
extension cannot have 'require' behavior
extension directive must occur before any non-preprocessor tokens in ESSL3
extension directive should occur before any non-preprocessor tokens
extension is being used
extension is disabled
extension is not supported
extension is only partially supported:
extension name expected
extension name not specified
extension not supported:
extern
external
external_declaration
extra content after header name:
extra tokens
extra tokens -- expected newline
extraneous layout qualifier: only has an effect on matrix types
extraneous semicolon
e|$"L$%t
f16mat2
f16mat2x2
f16mat2x3
f16mat2x4
f16mat3
f16mat3x2
f16mat3x3
f16mat3x4
f16mat4
f16mat4x2
f16mat4x3
f16mat4x4
f16vec2
f16vec3
f16vec4
f2ed299569c0
f2ed2995H3
f32mat2
f32mat2x2
f32mat2x3
f32mat2x4
f32mat3
f32mat3x2
f32mat3x3
f32mat3x4
f32mat4
f32mat4x2
f32mat4x3
f32mat4x4
f32vec2
f32vec3
f32vec4
f64mat2
f64mat2x2
f64mat2x3
f64mat2x4
f64mat3
f64mat3x2
f64mat3x3
f64mat3x4
f64mat4
f64mat4x2
f64mat4x3
f64mat4x4
f64vec2
f64vec3
f64vec4
f9)u H
f9)uUH
f9,Ju
f9,Yu
f9,~u
f9<Bu
f9<^u
f9M`tVH
f9t$bu
f;4ju
fA9	t	I
fA9,Au
fA90u
fA;4_u
fA;|m
fB9,Nu
fB94Ou
fB9<@u
fB9<@}eH
fB9<Bu
fB9<Hu
fD9	t(L
fD9 t
fD9!H
fD9!u
fD9$Hu
fD9&u
fD9)H
fD9,Au
fD90t
fD94Fu
fD94H}0L
fD94Xu
fD96u
fD97t&
fD98t
fD98u
fD9;u
fD9<Au
fD9t$b
fE98t'
fF9<qu
fG9$Ou
fJBGo
face-forward
faceforward
faceforward(1B1B1B
faceforward(2B2B2B
faceforward(3B3B3B
failed to insert the global constant buffer
false
false case
fastCopyBufferToTexture
fastUnpackPixels
fatal error - scanner input buffer overflow
fatal flex scanner internal error--end of buffer missed
fatal flex scanner internal error--no action found
feature not yet implemented
fffff
ffffff
fffffff
file exists
file too large
file_format_version
filename too long
filename-based #line
filename-based __FILE__
filter
findLSB
findMSB
finish
first argument must be an interpolant, or interpolant-array element
first-class array
first-class arrays (array initializer) supported in GLSL ES 3.00 and above only
firstbithigh(
firstbitlow(
fixed
flat  in lowp     int gl_SampleID;      in mediump vec2 gl_SamplePosition;flat  in highp    int gl_SampleMaskIn[];     out highp    int gl_SampleMask[];
flat in
flat in  int  gl_SampleID;     in  vec2 gl_SamplePosition;flat in  int  gl_SampleMaskIn[];     out int  gl_SampleMask[];
flat in highp int gl_DeviceIndex;flat in highp int gl_ViewIndex;
flat in highp uint gl_ViewID_OVR;
flat in int gl_Layer;flat in int gl_ViewportIndex;
flat in int gl_PrimitiveID;
flat in mediump uint  gl_SubgroupSize;flat in mediump uint  gl_SubgroupInvocationID;flat in highp   uvec4 gl_SubgroupEqMask;flat in highp   uvec4 gl_SubgroupGeMask;flat in highp   uvec4 gl_SubgroupGtMask;flat in highp   uvec4 gl_SubgroupLeMask;flat in highp   uvec4 gl_SubgroupLtMask;
flat in vec4 color_varying_flat;
flat out
flat out vec4 color_varying_flat;
flat/smooth/noperspective
flatten
flippedFragCoord
flippedPointCoord
float
float 
float  fma(float,  float,  float );vec2   fma(vec2,   vec2,   vec2  );vec3   fma(vec3,   vec3,   vec3  );vec4   fma(vec4,   vec4,   vec4  );
float  subgroupAdd(float);
float  subgroupBroadcast(float, uint);
float  subgroupBroadcastFirst(float);
float  subgroupClusteredAdd(float, uint);
float  subgroupClusteredMax(float, uint);
float  subgroupClusteredMin(float, uint);
float  subgroupClusteredMul(float, uint);
float  subgroupExclusiveAdd(float);
float  subgroupExclusiveMax(float);
float  subgroupExclusiveMin(float);
float  subgroupExclusiveMul(float);
float  subgroupInclusiveAdd(float);
float  subgroupInclusiveMax(float);
float  subgroupInclusiveMin(float);
float  subgroupInclusiveMul(float);
float  subgroupMax(float);
float  subgroupMin(float);
float  subgroupMul(float);
float  subgroupQuadBroadcast(float, uint);
float  subgroupQuadSwapDiagonal(float);
float  subgroupQuadSwapHorizontal(float);
float  subgroupQuadSwapVertical(float);
float  subgroupShuffle(float, uint);
float  subgroupShuffleDown(float, uint delta);
float  subgroupShuffleUp(float, uint delta);
float  subgroupShuffleXor(float, uint);
float abs(float x);vec2  abs(vec2  x);vec3  abs(vec3  x);vec4  abs(vec4  x);float sign(float x);vec2  sign(vec2  x);vec3  sign(vec3  x);vec4  sign(vec4  x);float floor(float x);vec2  floor(vec2  x);vec3  floor(vec3  x);vec4  floor(vec4  x);float ceil(float x);vec2  ceil(vec2  x);vec3  ceil(vec3  x);vec4  ceil(vec4  x);float fract(float x);vec2  fract(vec2  x);vec3  fract(vec3  x);vec4  fract(vec4  x);float mod(float x, float y);vec2  mod(vec2  x, float y);vec3  mod(vec3  x, float y);vec4  mod(vec4  x, float y);vec2  mod(vec2  x, vec2  y);vec3  mod(vec3  x, vec3  y);vec4  mod(vec4  x, vec4  y);float min(float x, float y);vec2  min(vec2  x, float y);vec3  min(vec3  x, float y);vec4  min(vec4  x, float y);vec2  min(vec2  x, vec2  y);vec3  min(vec3  x, vec3  y);vec4  min(vec4  x, vec4  y);float max(float x, float y);vec2  max(vec2  x, float y);vec3  max(vec3  x, float y);vec4  max(vec4  x, float y);vec2  max(vec2  x, vec2  y);vec3  max(vec3  x, vec3  y);vec4  max(vec4  x, vec4  y);float clamp(float x, float minVal, float maxVal);vec2  clamp(vec2  x, float minVal, float maxVal);vec3  clamp(vec3  x, float minVal, float maxVal);vec4  clamp(vec4  x, float minVal, float maxVal);vec2  clamp(vec2  x, vec2  minVal, vec2  maxVal);vec3  clamp(vec3  x, vec3  minVal, vec3  maxVal);vec4  clamp(vec4  x, vec4  minVal, vec4  maxVal);float mix(float x, float y, float a);vec2  mix(vec2  x, vec2  y, float a);vec3  mix(vec3  x, vec3  y, float a);vec4  mix(vec4  x, vec4  y, float a);vec2  mix(vec2  x, vec2  y, vec2  a);vec3  mix(vec3  x, vec3  y, vec3  a);vec4  mix(vec4  x, vec4  y, vec4  a);float step(float edge, float x);vec2  step(vec2  edge, vec2  x);vec3  step(vec3  edge, vec3  x);vec4  step(vec4  edge, vec4  x);vec2  step(float edge, vec2  x);vec3  step(float edge, vec3  x);vec4  step(float edge, vec4  x);float smoothstep(float edge0, float edge1, float x);vec2  smoothstep(vec2  edge0, vec2  edge1, vec2  x);vec3  smoothstep(vec3  edge0, vec3  edge1, vec3  x);vec4  smoothstep(vec4  edge0, vec4  edge1, vec4  x);vec2  smoothstep(float edge0, float edge1, vec2  x);vec3  smoothstep(float edge0, float edge1, vec3  x);vec4  smoothstep(float edge0, float edge1, vec4  x);
float acosh_emu(in float x)
float asinh_emu(in float x)
float atan_emu(float y, float x)
float atanh_emu(in float x)
float calcPointSize(vec4 ndcPos)
float dFdx(float p);vec2  dFdx(vec2  p);vec3  dFdx(vec3  p);vec4  dFdx(vec4  p);float dFdy(float p);vec2  dFdy(vec2  p);vec3  dFdy(vec3  p);vec4  dFdy(vec4  p);float fwidth(float p);vec2  fwidth(vec2  p);vec3  fwidth(vec3  p);vec4  fwidth(vec4  p);
float dFdxFine(float p);vec2  dFdxFine(vec2  p);vec3  dFdxFine(vec3  p);vec4  dFdxFine(vec4  p);float dFdyFine(float p);vec2  dFdyFine(vec2  p);vec3  dFdyFine(vec3  p);vec4  dFdyFine(vec4  p);float fwidthFine(float p);vec2  fwidthFine(vec2  p);vec3  fwidthFine(vec3  p);vec4  fwidthFine(vec4  p);float dFdxCoarse(float p);vec2  dFdxCoarse(vec2  p);vec3  dFdxCoarse(vec3  p);vec4  dFdxCoarse(vec4  p);float dFdyCoarse(float p);vec2  dFdyCoarse(vec2  p);vec3  dFdyCoarse(vec3  p);vec4  dFdyCoarse(vec4  p);float fwidthCoarse(float p);vec2  fwidthCoarse(vec2  p);vec3  fwidthCoarse(vec3  p);vec4  fwidthCoarse(vec4  p);
float determinant(mat2 m);float determinant(mat3 m);float determinant(mat4 m);mat2 inverse(mat2 m);mat3 inverse(mat3 m);mat4 inverse(mat4 m);
float faceforward_emu(float N, float I, float Nref)
float frexp(highp float, out highp int);vec2  frexp(highp vec2,  out highp ivec2);vec3  frexp(highp vec3,  out highp ivec3);vec4  frexp(highp vec4,  out highp ivec4);float ldexp(highp float, highp int);vec2  ldexp(highp vec2,  highp ivec2);vec3  ldexp(highp vec3,  highp ivec3);vec4  ldexp(highp vec4,  highp ivec4);
float frexp_emu(float x, out int exp)
float gl_CullDistance[];
float imageAtomicExchange(volatile coherent 
float interpolateAtCentroid(float);vec2  interpolateAtCentroid(vec2);vec3  interpolateAtCentroid(vec3);vec4  interpolateAtCentroid(vec4);float interpolateAtSample(float, int);vec2  interpolateAtSample(vec2,  int);vec3  interpolateAtSample(vec3,  int);vec4  interpolateAtSample(vec4,  int);float interpolateAtOffset(float, vec2);vec2  interpolateAtOffset(vec2,  vec2);vec3  interpolateAtOffset(vec3,  vec2);vec4  interpolateAtOffset(vec4,  vec2);
float ldexp_emu(float x, int exp)
float length(float x);float length(vec2  x);float length(vec3  x);float length(vec4  x);float distance(float p0, float p1);float distance(vec2  p0, vec2  p1);float distance(vec3  p0, vec3  p1);float distance(vec4  p0, vec4  p1);float dot(float x, float y);float dot(vec2  x, vec2  y);float dot(vec3  x, vec3  y);float dot(vec4  x, vec4  y);vec3 cross(vec3 x, vec3 y);float normalize(float x);vec2  normalize(vec2  x);vec3  normalize(vec3  x);vec4  normalize(vec4  x);float faceforward(float N, float I, float Nref);vec2  faceforward(vec2  N, vec2  I, vec2  Nref);vec3  faceforward(vec3  N, vec3  I, vec3  Nref);vec4  faceforward(vec4  N, vec4  I, vec4  Nref);float reflect(float I, float N);vec2  reflect(vec2  I, vec2  N);vec3  reflect(vec3  I, vec3  N);vec4  reflect(vec4  I, vec4  N);float refract(float I, float N, float eta);vec2  refract(vec2  I, vec2  N, float eta);vec3  refract(vec3  I, vec3  N, float eta);vec4  refract(vec4  I, vec4  N, float eta);
float literal needs a decimal point or exponent
float literal too long
float mix_emu(float x, float y, bool a)
float mod_emu(float x, float y)
float near;float far;float diff;
float noise1(float x);float noise1(vec2  x);float noise1(vec3  x);float noise1(vec4  x);vec2 noise2(float x);vec2 noise2(vec2  x);vec2 noise2(vec3  x);vec2 noise2(vec4  x);vec3 noise3(float x);vec3 noise3(vec2  x);vec3 noise3(vec3  x);vec3 noise3(vec4  x);vec4 noise4(float x);vec4 noise4(vec2  x);vec4 noise4(vec3  x);vec4 noise4(vec4  x);
float overflow
float posDot(vec3 a, vec3 b)
float pow(float x, float y);vec2  pow(vec2  x, vec2  y);vec3  pow(vec3  x, vec3  y);vec4  pow(vec4  x, vec4  y);float exp(float x);vec2  exp(vec2  x);vec3  exp(vec3  x);vec4  exp(vec4  x);float log(float x);vec2  log(vec2  x);vec3  log(vec3  x);vec4  log(vec4  x);float exp2(float x);vec2  exp2(vec2  x);vec3  exp2(vec3  x);vec4  exp2(vec4  x);float log2(float x);vec2  log2(vec2  x);vec3  log2(vec3  x);vec4  log2(vec4  x);float sqrt(float x);vec2  sqrt(vec2  x);vec3  sqrt(vec3  x);vec4  sqrt(vec4  x);float inversesqrt(float x);vec2  inversesqrt(vec2  x);vec3  inversesqrt(vec3  x);vec4  inversesqrt(vec4  x);
float radians(float degrees);vec2  radians(vec2  degrees);vec3  radians(vec3  degrees);vec4  radians(vec4  degrees);float degrees(float radians);vec2  degrees(vec2  radians);vec3  degrees(vec3  radians);vec4  degrees(vec4  radians);float sin(float angle);vec2  sin(vec2  angle);vec3  sin(vec3  angle);vec4  sin(vec4  angle);float cos(float angle);vec2  cos(vec2  angle);vec3  cos(vec3  angle);vec4  cos(vec4  angle);float tan(float angle);vec2  tan(vec2  angle);vec3  tan(vec3  angle);vec4  tan(vec4  angle);float asin(float x);vec2  asin(vec2  x);vec3  asin(vec3  x);vec4  asin(vec4  x);float acos(float x);vec2  acos(vec2  x);vec3  acos(vec3  x);vec4  acos(vec4  x);float atan(float y, float x);vec2  atan(vec2  y, vec2  x);vec3  atan(vec3  y, vec3  x);vec4  atan(vec4  y, vec4  x);float atan(float y_over_x);vec2  atan(vec2  y_over_x);vec3  atan(vec3  y_over_x);vec4  atan(vec4  y_over_x);
float roundEven_emu(in float x)
float sinh(float angle);vec2  sinh(vec2  angle);vec3  sinh(vec3  angle);vec4  sinh(vec4  angle);float cosh(float angle);vec2  cosh(vec2  angle);vec3  cosh(vec3  angle);vec4  cosh(vec4  angle);float tanh(float angle);vec2  tanh(vec2  angle);vec3  tanh(vec3  angle);vec4  tanh(vec4  angle);float asinh(float x);vec2  asinh(vec2  x);vec3  asinh(vec3  x);vec4  asinh(vec4  x);float acosh(float x);vec2  acosh(vec2  x);vec3  acosh(vec3  x);vec4  acosh(vec4  x);float atanh(float y_over_x);vec2  atanh(vec2  y_over_x);vec3  atanh(vec3  y_over_x);vec4  atanh(vec4  y_over_x);
float tanh_emu(float x)
float textureCombineSrcnOpnAlpha(int srcn,
float webgl_fromSnorm16(in uint x) {
float webgl_fromSnorm8(in uint x) {
float webgl_fromUnorm16(in uint x) {
float webgl_fromUnorm8(in uint x) {
float16 types can only be in uniform block or buffer storage
float16BitsToInt16
float16BitsToUint16
float16_t
float16_t dFdx(float16_t);f16vec2   dFdx(f16vec2);f16vec3   dFdx(f16vec3);f16vec4   dFdx(f16vec4);float16_t dFdy(float16_t);f16vec2   dFdy(f16vec2);f16vec3   dFdy(f16vec3);f16vec4   dFdy(f16vec4);float16_t dFdxFine(float16_t);f16vec2   dFdxFine(f16vec2);f16vec3   dFdxFine(f16vec3);f16vec4   dFdxFine(f16vec4);float16_t dFdyFine(float16_t);f16vec2   dFdyFine(f16vec2);f16vec3   dFdyFine(f16vec3);f16vec4   dFdyFine(f16vec4);float16_t dFdxCoarse(float16_t);f16vec2   dFdxCoarse(f16vec2);f16vec3   dFdxCoarse(f16vec3);f16vec4   dFdxCoarse(f16vec4);float16_t dFdyCoarse(float16_t);f16vec2   dFdyCoarse(f16vec2);f16vec3   dFdyCoarse(f16vec3);f16vec4   dFdyCoarse(f16vec4);float16_t fwidth(float16_t);f16vec2   fwidth(f16vec2);f16vec3   fwidth(f16vec3);f16vec4   fwidth(f16vec4);float16_t fwidthFine(float16_t);f16vec2   fwidthFine(f16vec2);f16vec3   fwidthFine(f16vec3);f16vec4   fwidthFine(f16vec4);float16_t fwidthCoarse(float16_t);f16vec2   fwidthCoarse(f16vec2);f16vec3   fwidthCoarse(f16vec3);f16vec4   fwidthCoarse(f16vec4);
float16_t radians(float16_t);f16vec2   radians(f16vec2);f16vec3   radians(f16vec3);f16vec4   radians(f16vec4);float16_t degrees(float16_t);f16vec2   degrees(f16vec2);f16vec3   degrees(f16vec3);f16vec4   degrees(f16vec4);float16_t sin(float16_t);f16vec2   sin(f16vec2);f16vec3   sin(f16vec3);f16vec4   sin(f16vec4);float16_t cos(float16_t);f16vec2   cos(f16vec2);f16vec3   cos(f16vec3);f16vec4   cos(f16vec4);float16_t tan(float16_t);f16vec2   tan(f16vec2);f16vec3   tan(f16vec3);f16vec4   tan(f16vec4);float16_t asin(float16_t);f16vec2   asin(f16vec2);f16vec3   asin(f16vec3);f16vec4   asin(f16vec4);float16_t acos(float16_t);f16vec2   acos(f16vec2);f16vec3   acos(f16vec3);f16vec4   acos(f16vec4);float16_t atan(float16_t, float16_t);f16vec2   atan(f16vec2,   f16vec2);f16vec3   atan(f16vec3,   f16vec3);f16vec4   atan(f16vec4,   f16vec4);float16_t atan(float16_t);f16vec2   atan(f16vec2);f16vec3   atan(f16vec3);f16vec4   atan(f16vec4);float16_t sinh(float16_t);f16vec2   sinh(f16vec2);f16vec3   sinh(f16vec3);f16vec4   sinh(f16vec4);float16_t cosh(float16_t);f16vec2   cosh(f16vec2);f16vec3   cosh(f16vec3);f16vec4   cosh(f16vec4);float16_t tanh(float16_t);f16vec2   tanh(f16vec2);f16vec3   tanh(f16vec3);f16vec4   tanh(f16vec4);float16_t asinh(float16_t);f16vec2   asinh(f16vec2);f16vec3   asinh(f16vec3);f16vec4   asinh(f16vec4);float16_t acosh(float16_t);f16vec2   acosh(f16vec2);f16vec3   acosh(f16vec3);f16vec4   acosh(f16vec4);float16_t atanh(float16_t);f16vec2   atanh(f16vec2);f16vec3   atanh(f16vec3);f16vec4   atanh(f16vec4);float16_t pow(float16_t, float16_t);f16vec2   pow(f16vec2,   f16vec2);f16vec3   pow(f16vec3,   f16vec3);f16vec4   pow(f16vec4,   f16vec4);float16_t exp(float16_t);f16vec2   exp(f16vec2);f16vec3   exp(f16vec3);f16vec4   exp(f16vec4);float16_t log(float16_t);f16vec2   log(f16vec2);f16vec3   log(f16vec3);f16vec4   log(f16vec4);float16_t exp2(float16_t);f16vec2   exp2(f16vec2);f16vec3   exp2(f16vec3);f16vec4   exp2(f16vec4);float16_t log2(float16_t);f16vec2   log2(f16vec2);f16vec3   log2(f16vec3);f16vec4   log2(f16vec4);float16_t sqrt(float16_t);f16vec2   sqrt(f16vec2);f16vec3   sqrt(f16vec3);f16vec4   sqrt(f16vec4);float16_t inversesqrt(float16_t);f16vec2   inversesqrt(f16vec2);f16vec3   inversesqrt(f16vec3);f16vec4   inversesqrt(f16vec4);float16_t abs(float16_t);f16vec2   abs(f16vec2);f16vec3   abs(f16vec3);f16vec4   abs(f16vec4);float16_t sign(float16_t);f16vec2   sign(f16vec2);f16vec3   sign(f16vec3);f16vec4   sign(f16vec4);float16_t floor(float16_t);f16vec2   floor(f16vec2);f16vec3   floor(f16vec3);f16vec4   floor(f16vec4);float16_t trunc(float16_t);f16vec2   trunc(f16vec2);f16vec3   trunc(f16vec3);f16vec4   trunc(f16vec4);float16_t round(float16_t);f16vec2   round(f16vec2);f16vec3   round(f16vec3);f16vec4   round(f16vec4);float16_t roundEven(float16_t);f16vec2   roundEven(f16vec2);f16vec3   roundEven(f16vec3);f16vec4   roundEven(f16vec4);float16_t ceil(float16_t);f16vec2   ceil(f16vec2);f16vec3   ceil(f16vec3);f16vec4   ceil(f16vec4);float16_t fract(float16_t);f16vec2   fract(f16vec2);f16vec3   fract(f16vec3);f16vec4   fract(f16vec4);float16_t mod(float16_t, float16_t);f16vec2   mod(f16vec2,   float16_t);f16vec3   mod(f16vec3,   float16_t);f16vec4   mod(f16vec4,   float16_t);f16vec2   mod(f16vec2,   f16vec2);f16vec3   mod(f16vec3,   f16vec3);f16vec4   mod(f16vec4,   f16vec4);float16_t modf(float16_t, out float16_t);f16vec2   modf(f16vec2,   out f16vec2);f16vec3   modf(f16vec3,   out f16vec3);f16vec4   modf(f16vec4,   out f16vec4);float16_t min(float16_t, float16_t);f16vec2   min(f16vec2,   float16_t);f16vec3   min(f16vec3,   float16_t);f16vec4   min(f16vec4,   float16_t);f16vec2   min(f16vec2,   f16vec2);f16vec3   min(f16vec3,   f16vec3);f16vec4   min(f16vec4,   f16vec4);float16_t max(float16_t, float16_t);f16vec2   max(f16vec2,   float16_t);f16vec3   max(f16vec3,   float16_t);f16vec4   max(f16vec4,   float16_t);f16vec2   max(f16vec2,   f16vec2);f16vec3   max(f16vec3,   f16vec3);f16vec4   max(f16vec4,   f16vec4);float16_t clamp(float16_t, float16_t, float16_t);f16vec2   clamp(f16vec2,   float16_t, float16_t);f16vec3   clamp(f16vec3,   float16_t, float16_t);f16vec4   clamp(f16vec4,   float16_t, float16_t);f16vec2   clamp(f16vec2,   f16vec2,   f16vec2);f16vec3   clamp(f16vec3,   f16vec3,   f16vec3);f16vec4   clamp(f16vec4,   f16vec4,   f16vec4);float16_t mix(float16_t, float16_t, float16_t);f16vec2   mix(f16vec2,   f16vec2,   float16_t);f16vec3   mix(f16vec3,   f16vec3,   float16_t);f16vec4   mix(f16vec4,   f16vec4,   float16_t);f16vec2   mix(f16vec2,   f16vec2,   f16vec2);f16vec3   mix(f16vec3,   f16vec3,   f16vec3);f16vec4   mix(f16vec4,   f16vec4,   f16vec4);float16_t mix(float16_t, float16_t, bool);f16vec2   mix(f16vec2,   f16vec2,   bvec2);f16vec3   mix(f16vec3,   f16vec3,   bvec3);f16vec4   mix(f16vec4,   f16vec4,   bvec4);float16_t step(float16_t, float16_t);f16vec2   step(f16vec2,   f16vec2);f16vec3   step(f16vec3,   f16vec3);f16vec4   step(f16vec4,   f16vec4);f16vec2   step(float16_t, f16vec2);f16vec3   step(float16_t, f16vec3);f16vec4   step(float16_t, f16vec4);float16_t smoothstep(float16_t, float16_t, float16_t);f16vec2   smoothstep(f16vec2,   f16vec2,   f16vec2);f16vec3   smoothstep(f16vec3,   f16vec3,   f16vec3);f16vec4   smoothstep(f16vec4,   f16vec4,   f16vec4);f16vec2   smoothstep(float16_t, float16_t, f16vec2);f16vec3   smoothstep(float16_t, float16_t, f16vec3);f16vec4   smoothstep(float16_t, float16_t, f16vec4);bool  isnan(float16_t);bvec2 isnan(f16vec2);bvec3 isnan(f16vec3);bvec4 isnan(f16vec4);bool  isinf(float16_t);bvec2 isinf(f16vec2);bvec3 isinf(f16vec3);bvec4 isinf(f16vec4);float16_t fma(float16_t, float16_t, float16_t);f16vec2   fma(f16vec2,   f16vec2,   f16vec2);f16vec3   fma(f16vec3,   f16vec3,   f16vec3);f16vec4   fma(f16vec4,   f16vec4,   f16vec4);float16_t frexp(float16_t, out int);f16vec2   frexp(f16vec2,   out ivec2);f16vec3   frexp(f16vec3,   out ivec3);f16vec4   frexp(f16vec4,   out ivec4);float16_t ldexp(float16_t, in int);f16vec2   ldexp(f16vec2,   in ivec2);f16vec3   ldexp(f16vec3,   in ivec3);f16vec4   ldexp(f16vec4,   in ivec4);uint    packFloat2x16(f16vec2);f16vec2 unpackFloat2x16(uint);float16_t length(float16_t);float16_t length(f16vec2);float16_t length(f16vec3);float16_t length(f16vec4);float16_t distance(float16_t, float16_t);float16_t distance(f16vec2,   f16vec2);float16_t distance(f16vec3,   f16vec3);float16_t distance(f16vec4,   f16vec4);float16_t dot(float16_t, float16_t);float16_t dot(f16vec2,   f16vec2);float16_t dot(f16vec3,   f16vec3);float16_t dot(f16vec4,   f16vec4);f16vec3 cross(f16vec3, f16vec3);float16_t normalize(float16_t);f16vec2   normalize(f16vec2);f16vec3   normalize(f16vec3);f16vec4   normalize(f16vec4);float16_t faceforward(float16_t, float16_t, float16_t);f16vec2   faceforward(f16vec2,   f16vec2,   f16vec2);f16vec3   faceforward(f16vec3,   f16vec3,   f16vec3);f16vec4   faceforward(f16vec4,   f16vec4,   f16vec4);float16_t reflect(float16_t, float16_t);f16vec2   reflect(f16vec2,   f16vec2);f16vec3   reflect(f16vec3,   f16vec3);f16vec4   reflect(f16vec4,   f16vec4);float16_t refract(float16_t, float16_t, float16_t);f16vec2   refract(f16vec2,   f16vec2,   float16_t);f16vec3   refract(f16vec3,   f16vec3,   float16_t);f16vec4   refract(f16vec4,   f16vec4,   float16_t);f16mat2   matrixCompMult(f16mat2,   f16mat2);f16mat3   matrixCompMult(f16mat3,   f16mat3);f16mat4   matrixCompMult(f16mat4,   f16mat4);f16mat2x3 matrixCompMult(f16mat2x3, f16mat2x3);f16mat2x4 matrixCompMult(f16mat2x4, f16mat2x4);f16mat3x2 matrixCompMult(f16mat3x2, f16mat3x2);f16mat3x4 matrixCompMult(f16mat3x4, f16mat3x4);f16mat4x2 matrixCompMult(f16mat4x2, f16mat4x2);f16mat4x3 matrixCompMult(f16mat4x3, f16mat4x3);f16mat2   outerProduct(f16vec2, f16vec2);f16mat3   outerProduct(f16vec3, f16vec3);f16mat4   outerProduct(f16vec4, f16vec4);f16mat2x3 outerProduct(f16vec3, f16vec2);f16mat3x2 outerProduct(f16vec2, f16vec3);f16mat2x4 outerProduct(f16vec4, f16vec2);f16mat4x2 outerProduct(f16vec2, f16vec4);f16mat3x4 outerProduct(f16vec4, f16vec3);f16mat4x3 outerProduct(f16vec3, f16vec4);f16mat2   transpose(f16mat2);f16mat3   transpose(f16mat3);f16mat4   transpose(f16mat4);f16mat2x3 transpose(f16mat3x2);f16mat3x2 transpose(f16mat2x3);f16mat2x4 transpose(f16mat4x2);f16mat4x2 transpose(f16mat2x4);f16mat3x4 transpose(f16mat4x3);f16mat4x3 transpose(f16mat3x4);float16_t determinant(f16mat2);float16_t determinant(f16mat3);float16_t determinant(f16mat4);f16mat2 inverse(f16mat2);f16mat3 inverse(f16mat3);f16mat4 inverse(f16mat4);bvec2 lessThan(f16vec2, f16vec2);bvec3 lessThan(f16vec3, f16vec3);bvec4 lessThan(f16vec4, f16vec4);bvec2 lessThanEqual(f16vec2, f16vec2);bvec3 lessThanEqual(f16vec3, f16vec3);bvec4 lessThanEqual(f16vec4, f16vec4);bvec2 greaterThan(f16vec2, f16vec2);bvec3 greaterThan(f16vec3, f16vec3);bvec4 greaterThan(f16vec4, f16vec4);bvec2 greaterThanEqual(f16vec2, f16vec2);bvec3 greaterThanEqual(f16vec3, f16vec3);bvec4 greaterThanEqual(f16vec4, f16vec4);bvec2 equal(f16vec2, f16vec2);bvec3 equal(f16vec3, f16vec3);bvec4 equal(f16vec4, f16vec4);bvec2 notEqual(f16vec2, f16vec2);bvec3 notEqual(f16vec3, f16vec3);bvec4 notEqual(f16vec4, f16vec4);
float2
float2 acosh_emu(in float2 x)
float2 asinh_emu(in float2 x)
float2 atan_emu(float2 y, float2 x)
float2 atanh_emu(in float2 x)
float2 faceforward_emu(float2 N, float2 I, float2 Nref)
float2 frexp_emu(float2 x, out int2 exp)
float2 ldexp_emu(float2 x, int2 exp)
float2 mix_emu(float2 x, float2 y, bool2 a)
float2 mod_emu(float2 x, float y)
float2 mod_emu(float2 x, float2 y)
float2 roundEven_emu(in float2 x)
float2 tanh_emu(float2 x)
float2 unpackHalf2x16_emu(in uint u)
float2 unpackSnorm2x16_emu(in uint u)
float2 unpackUnorm2x16_emu(in uint u)
float2x2
float2x2 inverse_emu(in float2x2 m)
float2x2 outerProduct_emu(in float2 c, in float2 r)
float2x3
float2x3 outerProduct_emu(in float3 c, in float2 r)
float2x4
float2x4 outerProduct_emu(in float4 c, in float2 r)
float3
float3 acosh_emu(in float3 x)
float3 asinh_emu(in float3 x)
float3 atan_emu(float3 y, float3 x)
float3 atanh_emu(in float3 x)
float3 faceforward_emu(float3 N, float3 I, float3 Nref)
float3 frexp_emu(float3 x, out int3 exp)
float3 ldexp_emu(float3 x, int3 exp)
float3 mix_emu(float3 x, float3 y, bool3 a)
float3 mod_emu(float3 x, float y)
float3 mod_emu(float3 x, float3 y)
float3 roundEven_emu(in float3 x)
float3 tanh_emu(float3 x)
float32_t
float32_t matrix
float32_t vector
float3x2
float3x2 outerProduct_emu(in float2 c, in float3 r)
float3x3
float3x3 inverse_emu(in float3x3 m)
float3x3 outerProduct_emu(in float3 c, in float3 r)
float3x4
float3x4 outerProduct_emu(in float4 c, in float3 r)
float4
float4 acosh_emu(in float4 x)
float4 asinh_emu(in float4 x)
float4 atan_emu(float4 y, float4 x)
float4 atanh_emu(in float4 x)
float4 faceforward_emu(float4 N, float4 I, float4 Nref)
float4 frexp_emu(float4 x, out int4 exp)
float4 ldexp_emu(float4 x, int4 exp)
float4 mix_emu(float4 x, float4 y, bool4 a)
float4 mod_emu(float4 x, float y)
float4 mod_emu(float4 x, float4 y)
float4 roundEven_emu(in float4 x)
float4 tanh_emu(float4 x)
float4 unpackSnorm4x8_emu(in uint u)
float4 unpackUnorm4x8_emu(in uint u)
float4(0, 0, 0, 1)
float4x2
float4x2 outerProduct_emu(in float2 c, in float4 r)
float4x3
float4x3 outerProduct_emu(in float3 c, in float4 r)
float4x4
float4x4 inverse_emu(in float4x4 m)
float4x4 outerProduct_emu(in float4 c, in float4 r)
float64_t
float64_t dFdx(float64_t);f64vec2   dFdx(f64vec2);f64vec3   dFdx(f64vec3);f64vec4   dFdx(f64vec4);float64_t dFdy(float64_t);f64vec2   dFdy(f64vec2);f64vec3   dFdy(f64vec3);f64vec4   dFdy(f64vec4);float64_t dFdxFine(float64_t);f64vec2   dFdxFine(f64vec2);f64vec3   dFdxFine(f64vec3);f64vec4   dFdxFine(f64vec4);float64_t dFdyFine(float64_t);f64vec2   dFdyFine(f64vec2);f64vec3   dFdyFine(f64vec3);f64vec4   dFdyFine(f64vec4);float64_t dFdxCoarse(float64_t);f64vec2   dFdxCoarse(f64vec2);f64vec3   dFdxCoarse(f64vec3);f64vec4   dFdxCoarse(f64vec4);float64_t dFdyCoarse(float64_t);f64vec2   dFdyCoarse(f64vec2);f64vec3   dFdyCoarse(f64vec3);f64vec4   dFdyCoarse(f64vec4);float64_t fwidth(float64_t);f64vec2   fwidth(f64vec2);f64vec3   fwidth(f64vec3);f64vec4   fwidth(f64vec4);float64_t fwidthFine(float64_t);f64vec2   fwidthFine(f64vec2);f64vec3   fwidthFine(f64vec3);f64vec4   fwidthFine(f64vec4);float64_t fwidthCoarse(float64_t);f64vec2   fwidthCoarse(f64vec2);f64vec3   fwidthCoarse(f64vec3);f64vec4   fwidthCoarse(f64vec4);
float64_t interpolateAtCentroid(float64_t);f64vec2   interpolateAtCentroid(f64vec2);f64vec3   interpolateAtCentroid(f64vec3);f64vec4   interpolateAtCentroid(f64vec4);float64_t interpolateAtSample(float64_t, int);f64vec2   interpolateAtSample(f64vec2,   int);f64vec3   interpolateAtSample(f64vec3,   int);f64vec4   interpolateAtSample(f64vec4,   int);float64_t interpolateAtOffset(float64_t, f64vec2);f64vec2   interpolateAtOffset(f64vec2,   f64vec2);f64vec3   interpolateAtOffset(f64vec3,   f64vec2);f64vec4   interpolateAtOffset(f64vec4,   f64vec2);
float64_t matrix
float64_t vector
floatBitsToInt
floatBitsToUint
floating-point suffix
floor
floor(
flush
flushUpdatesToImage
fog_color
fog_density
fog_end
fog_mode
fog_start
for (
for header name: %s
for non-parameter, can only apply to 'in' or no storage qualifier
for_init_statement
for_rest_statement
format is not one of supported image unit formats.
format requires readonly or writeonly memory qualifier
frac(
fract
fractional_even_spacing
fractional_odd_spacing
fragColor
fragment
fragment input block
fragment outputs sharing the same location must be the same basic type
fragment shader output
fragment-shader array-of-array input
fragment-shader array-of-array output
fragment-shader array-of-struct input
fragment-shader struct input
fragment-shader struct input containing an array
fragment-shader struct input containing structure
frexp
frexp(3B3C
ftransform
fully_specified_type
function
function already has a body
function call, method, or subroutine call expected
function cannot take any parameter(s)
function does not return a value:
function must have the same parameter qualifiers in all of its declarations
function must have the same return type in all of its declarations
function name expected
function name is redeclaration of existing name
function not supported
function parameter array must be sized at compile time
function parameter array must specify a size
function return is not matching type:
function_call
function_call_generic
function_call_header
function_call_header_no_parameters
function_call_header_with_parameters
function_call_or_method
function_declarator
function_definition
function_header
function_header_with_parameters
function_identifier
function_prototype
functions
future
future already retrieved
future reserved word in ES 300 and keyword in GLSL
fvec2
fvec3
fvec4
fwidth
fwidth(
fwidthCoarse
fwidthFine
generateMipmap
generateMipmapUsingD3D
generateOutput()
generateOutput(input)
generic
geometry
geometry shaders
getBaseTexture
getBuffer
getCountingIB
getGLFrameDescription
getGeometryExecutableForPrimitiveType
getPixelExecutableForCachedOutputLayout
getProgram
getRenderTarget
getSamplePosition is unimplemented.
getSamplePosition is unsupported to d3d9.
getScratchMemoryBuffer
getSpaceRequired
getSurfaceLevel
getSwizzleRenderTarget is unimplemented.
getSwizzleTexture is unimplemented.
getSyncValues extension not active
getSyncValues surface cannot be EGL_NO_SURFACE
getSyncValues surface requires Direct Composition to be enabled
getTraceCategoryEnabledFlag
getVertexExecutableForCachedInputLayout
getVertexSpaceRequired
gfffA
gffffff
gfffffffH
glActiveShaderProgram
glActiveShaderProgramContextANGLE
glActiveShaderProgramEXT
glActiveTexture
glActiveTextureARB
glActiveTextureContextANGLE
glAlphaFunc
glAlphaFuncContextANGLE
glAlphaFuncx
glAlphaFuncxContextANGLE
glAttachShader
glAttachShaderContextANGLE
glBeginConditionalRender
glBeginQuery
glBeginQueryARB
glBeginQueryContextANGLE
glBeginQueryEXT
glBeginQueryEXTContextANGLE
glBeginQueryIndexed
glBeginTransformFeedback
glBeginTransformFeedbackContextANGLE
glBeginTransformFeedbackEXT
glBindAttribLocation
glBindAttribLocationARB
glBindAttribLocationContextANGLE
glBindBuffer
glBindBufferARB
glBindBufferBase
glBindBufferBaseContextANGLE
glBindBufferBaseEXT
glBindBufferContextANGLE
glBindBufferRange
glBindBufferRangeContextANGLE
glBindBufferRangeEXT
glBindBuffersBase
glBindBuffersRange
glBindFragDataLocation
glBindFragDataLocationEXT
glBindFragDataLocationEXTContextANGLE
glBindFragDataLocationIndexed
glBindFragDataLocationIndexedEXT
glBindFragDataLocationIndexedEXTContextANGLE
glBindFragmentInputLocationCHROMIUM
glBindFragmentInputLocationCHROMIUMContextANGLE
glBindFramebuffer
glBindFramebufferContextANGLE
glBindFramebufferEXT
glBindFramebufferOES
glBindFramebufferOESContextANGLE
glBindImageTexture
glBindImageTextureContextANGLE
glBindImageTextureEXT
glBindImageTextures
glBindProgramPipeline
glBindProgramPipelineContextANGLE
glBindProgramPipelineEXT
glBindRenderbuffer
glBindRenderbufferContextANGLE
glBindRenderbufferEXT
glBindRenderbufferOES
glBindRenderbufferOESContextANGLE
glBindSampler
glBindSamplerContextANGLE
glBindSamplers
glBindTexture
glBindTextureContextANGLE
glBindTextureEXT
glBindTextureUnit
glBindTextures
glBindTransformFeedback
glBindTransformFeedbackContextANGLE
glBindUniformLocationCHROMIUM
glBindUniformLocationCHROMIUMContextANGLE
glBindVertexArray
glBindVertexArrayContextANGLE
glBindVertexArrayOES
glBindVertexArrayOESContextANGLE
glBindVertexBuffer
glBindVertexBufferContextANGLE
glBindVertexBuffers
glBlendBarrier
glBlendColor
glBlendColorContextANGLE
glBlendColorEXT
glBlendEquation
glBlendEquationContextANGLE
glBlendEquationEXT
glBlendEquationSeparate
glBlendEquationSeparateContextANGLE
glBlendEquationSeparateEXT
glBlendEquationSeparatei
glBlendEquationSeparateiARB
glBlendEquationSeparateiEXT
glBlendEquationSeparateiOES
glBlendEquationi
glBlendEquationiARB
glBlendEquationiEXT
glBlendEquationiOES
glBlendFunc
glBlendFuncContextANGLE
glBlendFuncSeparate
glBlendFuncSeparateContextANGLE
glBlendFuncSeparateEXT
glBlendFuncSeparatei
glBlendFuncSeparateiARB
glBlendFuncSeparateiEXT
glBlendFuncSeparateiOES
glBlendFunci
glBlendFunciARB
glBlendFunciEXT
glBlendFunciOES
glBlitFramebuffer
glBlitFramebufferANGLE
glBlitFramebufferANGLEContextANGLE
glBlitFramebufferContextANGLE
glBlitFramebufferEXT
glBlitNamedFramebuffer
glBufferData
glBufferDataARB
glBufferDataContextANGLE
glBufferStorage
glBufferStorageEXT
glBufferSubData
glBufferSubDataARB
glBufferSubDataContextANGLE
glCheckFramebufferStatus
glCheckFramebufferStatusContextANGLE
glCheckFramebufferStatusEXT
glCheckFramebufferStatusOES
glCheckFramebufferStatusOESContextANGLE
glCheckNamedFramebufferStatus
glCheckNamedFramebufferStatusEXT
glClampColor
glClampColorARB
glClear
glClearBufferData
glClearBufferSubData
glClearBufferfi
glClearBufferfiContextANGLE
glClearBufferfv
glClearBufferfvContextANGLE
glClearBufferiv
glClearBufferivContextANGLE
glClearBufferuiv
glClearBufferuivContextANGLE
glClearColor
glClearColorContextANGLE
glClearColorx
glClearColorxContextANGLE
glClearContextANGLE
glClearDepth
glClearDepthf
glClearDepthfContextANGLE
glClearDepthfOES
glClearDepthx
glClearDepthxContextANGLE
glClearNamedBufferData
glClearNamedBufferDataEXT
glClearNamedBufferSubData
glClearNamedBufferSubDataEXT
glClearNamedFramebufferfi
glClearNamedFramebufferfv
glClearNamedFramebufferiv
glClearNamedFramebufferuiv
glClearStencil
glClearStencilContextANGLE
glClearTexImage
glClearTexImageEXT
glClearTexSubImage
glClearTexSubImageEXT
glClientActiveTexture
glClientActiveTextureContextANGLE
glClientWaitSync
glClientWaitSyncContextANGLE
glClipControl
glClipControlEXT
glClipPlanef
glClipPlanefContextANGLE
glClipPlanex
glClipPlanexContextANGLE
glColor4f
glColor4fContextANGLE
glColor4ub
glColor4ubContextANGLE
glColor4x
glColor4xContextANGLE
glColorMask
glColorMaskContextANGLE
glColorMaski
glColorMaskiEXT
glColorMaskiOES
glColorPointer
glColorPointerContextANGLE
glCompileShader
glCompileShaderARB
glCompileShaderContextANGLE
glCompressedCopyTextureCHROMIUM
glCompressedCopyTextureCHROMIUMContextANGLE
glCompressedTexImage1D
glCompressedTexImage1DARB
glCompressedTexImage2D
glCompressedTexImage2DARB
glCompressedTexImage2DContextANGLE
glCompressedTexImage2DRobustANGLE
glCompressedTexImage2DRobustANGLEContextANGLE
glCompressedTexImage3D
glCompressedTexImage3DARB
glCompressedTexImage3DContextANGLE
glCompressedTexImage3DOES
glCompressedTexImage3DRobustANGLE
glCompressedTexImage3DRobustANGLEContextANGLE
glCompressedTexSubImage1D
glCompressedTexSubImage1DARB
glCompressedTexSubImage2D
glCompressedTexSubImage2DARB
glCompressedTexSubImage2DContextANGLE
glCompressedTexSubImage2DRobustANGLE
glCompressedTexSubImage2DRobustANGLEContextANGLE
glCompressedTexSubImage3D
glCompressedTexSubImage3DARB
glCompressedTexSubImage3DContextANGLE
glCompressedTexSubImage3DOES
glCompressedTexSubImage3DRobustANGLE
glCompressedTexSubImage3DRobustANGLEContextANGLE
glCompressedTextureSubImage1D
glCompressedTextureSubImage1DEXT
glCompressedTextureSubImage2D
glCompressedTextureSubImage2DEXT
glCompressedTextureSubImage3D
glCompressedTextureSubImage3DEXT
glCopyBufferSubData
glCopyBufferSubDataContextANGLE
glCopyImageSubData
glCopyImageSubDataEXT
glCopyImageSubDataOES
glCopyNamedBufferSubData
glCopySubTexture3DANGLE
glCopySubTexture3DANGLEContextANGLE
glCopySubTextureCHROMIUM
glCopySubTextureCHROMIUMContextANGLE
glCopyTexImage1D
glCopyTexImage1DEXT
glCopyTexImage2D
glCopyTexImage2DContextANGLE
glCopyTexImage2DEXT
glCopyTexSubImage1D
glCopyTexSubImage1DEXT
glCopyTexSubImage2D
glCopyTexSubImage2DContextANGLE
glCopyTexSubImage2DEXT
glCopyTexSubImage3D
glCopyTexSubImage3DContextANGLE
glCopyTexSubImage3DEXT
glCopyTexSubImage3DOES
glCopyTexture3DANGLE
glCopyTexture3DANGLEContextANGLE
glCopyTextureCHROMIUM
glCopyTextureCHROMIUM with sourceLevel != 0 not implemented.
glCopyTextureCHROMIUMContextANGLE
glCopyTextureSubImage1D
glCopyTextureSubImage1DEXT
glCopyTextureSubImage2D
glCopyTextureSubImage2DEXT
glCopyTextureSubImage3D
glCopyTextureSubImage3DEXT
glCoverFillPathCHROMIUM
glCoverFillPathCHROMIUMContextANGLE
glCoverFillPathInstancedCHROMIUM
glCoverFillPathInstancedCHROMIUMContextANGLE
glCoverFillPathInstancedNV
glCoverFillPathNV
glCoverStrokePathCHROMIUM
glCoverStrokePathCHROMIUMContextANGLE
glCoverStrokePathInstancedCHROMIUM
glCoverStrokePathInstancedCHROMIUMContextANGLE
glCoverStrokePathInstancedNV
glCoverStrokePathNV
glCoverageModulationCHROMIUM
glCoverageModulationCHROMIUMContextANGLE
glCoverageModulationNV
glCreateBuffers
glCreateFramebuffers
glCreateProgram
glCreateProgramContextANGLE
glCreateProgramPipelines
glCreateQueries
glCreateRenderbuffers
glCreateSamplers
glCreateShader
glCreateShaderContextANGLE
glCreateShaderProgramv
glCreateShaderProgramvContextANGLE
glCreateShaderProgramvEXT
glCreateTextures
glCreateTransformFeedbacks
glCreateVertexArrays
glCullFace
glCullFaceContextANGLE
glCurrentPaletteMatrixOES
glCurrentPaletteMatrixOESContextANGLE
glDebugMessageCallback
glDebugMessageCallbackARB
glDebugMessageCallbackKHR
glDebugMessageCallbackKHRContextANGLE
glDebugMessageControl
glDebugMessageControlARB
glDebugMessageControlKHR
glDebugMessageControlKHRContextANGLE
glDebugMessageInsert
glDebugMessageInsertARB
glDebugMessageInsertKHR
glDebugMessageInsertKHRContextANGLE
glDeleteBuffers
glDeleteBuffersARB
glDeleteBuffersContextANGLE
glDeleteFencesNV
glDeleteFencesNVContextANGLE
glDeleteFramebuffers
glDeleteFramebuffersContextANGLE
glDeleteFramebuffersEXT
glDeleteFramebuffersOES
glDeleteFramebuffersOESContextANGLE
glDeletePathsCHROMIUM
glDeletePathsCHROMIUMContextANGLE
glDeletePathsNV
glDeleteProgram
glDeleteProgramContextANGLE
glDeleteProgramPipelines
glDeleteProgramPipelinesContextANGLE
glDeleteProgramPipelinesEXT
glDeleteQueries
glDeleteQueriesARB
glDeleteQueriesContextANGLE
glDeleteQueriesEXT
glDeleteQueriesEXTContextANGLE
glDeleteRenderbuffers
glDeleteRenderbuffersContextANGLE
glDeleteRenderbuffersEXT
glDeleteRenderbuffersOES
glDeleteRenderbuffersOESContextANGLE
glDeleteSamplers
glDeleteSamplersContextANGLE
glDeleteShader
glDeleteShaderContextANGLE
glDeleteSync
glDeleteSyncContextANGLE
glDeleteTextures
glDeleteTexturesContextANGLE
glDeleteTexturesEXT
glDeleteTransformFeedbacks
glDeleteTransformFeedbacksContextANGLE
glDeleteVertexArrays
glDeleteVertexArraysContextANGLE
glDeleteVertexArraysOES
glDeleteVertexArraysOESContextANGLE
glDepthFunc
glDepthFuncContextANGLE
glDepthMask
glDepthMaskContextANGLE
glDepthRange
glDepthRangeArrayv
glDepthRangeIndexed
glDepthRangef
glDepthRangefContextANGLE
glDepthRangefOES
glDepthRangex
glDepthRangexContextANGLE
glDetachShader
glDetachShaderContextANGLE
glDisable
glDisableClientState
glDisableClientStateContextANGLE
glDisableContextANGLE
glDisableVertexArrayAttrib
glDisableVertexArrayAttribEXT
glDisableVertexAttribArray
glDisableVertexAttribArrayARB
glDisableVertexAttribArrayContextANGLE
glDisablei
glDisableiEXT
glDisableiOES
glDiscardFramebufferEXT
glDiscardFramebufferEXTContextANGLE
glDispatchCompute
glDispatchComputeContextANGLE
glDispatchComputeIndirect
glDispatchComputeIndirectContextANGLE
glDrawArrays
glDrawArraysContextANGLE
glDrawArraysEXT
glDrawArraysIndirect
glDrawArraysIndirectContextANGLE
glDrawArraysInstanced
glDrawArraysInstancedANGLE
glDrawArraysInstancedANGLEContextANGLE
glDrawArraysInstancedARB
glDrawArraysInstancedBaseInstance
glDrawArraysInstancedBaseInstanceEXT
glDrawArraysInstancedContextANGLE
glDrawArraysInstancedEXT
glDrawBuffer
glDrawBuffers
glDrawBuffersARB
glDrawBuffersContextANGLE
glDrawBuffersEXT
glDrawBuffersEXTContextANGLE
glDrawElements
glDrawElementsBaseVertex
glDrawElementsBaseVertexEXT
glDrawElementsBaseVertexOES
glDrawElementsContextANGLE
glDrawElementsIndirect
glDrawElementsIndirectContextANGLE
glDrawElementsInstanced
glDrawElementsInstancedANGLE
glDrawElementsInstancedANGLEContextANGLE
glDrawElementsInstancedARB
glDrawElementsInstancedBaseInstance
glDrawElementsInstancedBaseInstanceEXT
glDrawElementsInstancedBaseVertex
glDrawElementsInstancedBaseVertexBaseInstance
glDrawElementsInstancedBaseVertexBaseInstanceEXT
glDrawElementsInstancedBaseVertexEXT
glDrawElementsInstancedBaseVertexOES
glDrawElementsInstancedContextANGLE
glDrawElementsInstancedEXT
glDrawRangeElements
glDrawRangeElementsBaseVertex
glDrawRangeElementsBaseVertexEXT
glDrawRangeElementsBaseVertexOES
glDrawRangeElementsContextANGLE
glDrawRangeElementsEXT
glDrawTexfOES
glDrawTexfOESContextANGLE
glDrawTexfvOES
glDrawTexfvOESContextANGLE
glDrawTexiOES
glDrawTexiOESContextANGLE
glDrawTexivOES
glDrawTexivOESContextANGLE
glDrawTexsOES
glDrawTexsOESContextANGLE
glDrawTexsvOES
glDrawTexsvOESContextANGLE
glDrawTexxOES
glDrawTexxOESContextANGLE
glDrawTexxvOES
glDrawTexxvOESContextANGLE
glDrawTransformFeedback
glDrawTransformFeedbackEXT
glDrawTransformFeedbackInstanced
glDrawTransformFeedbackInstancedEXT
glDrawTransformFeedbackStream
glDrawTransformFeedbackStreamInstanced
glEGLImageTargetRenderbufferStorageOES
glEGLImageTargetRenderbufferStorageOESContextANGLE
glEGLImageTargetTexture2DOES
glEGLImageTargetTexture2DOESContextANGLE
glEnable
glEnableClientState
glEnableClientStateContextANGLE
glEnableContextANGLE
glEnableVertexArrayAttrib
glEnableVertexArrayAttribEXT
glEnableVertexAttribArray
glEnableVertexAttribArrayARB
glEnableVertexAttribArrayContextANGLE
glEnablei
glEnableiEXT
glEnableiOES
glEndConditionalRender
glEndQuery
glEndQueryARB
glEndQueryContextANGLE
glEndQueryEXT
glEndQueryEXTContextANGLE
glEndQueryIndexed
glEndTransformFeedback
glEndTransformFeedbackContextANGLE
glEndTransformFeedbackEXT
glFenceSync
glFenceSync failed to create a GLsync object.
glFenceSyncContextANGLE
glFinish
glFinishContextANGLE
glFinishFenceNV
glFinishFenceNVContextANGLE
glFlush
glFlushContextANGLE
glFlushMappedBufferRange
glFlushMappedBufferRangeContextANGLE
glFlushMappedBufferRangeEXT
glFlushMappedBufferRangeEXTContextANGLE
glFlushMappedNamedBufferRange
glFlushMappedNamedBufferRangeEXT
glFogf
glFogfContextANGLE
glFogfv
glFogfvContextANGLE
glFogx
glFogxContextANGLE
glFogxv
glFogxvContextANGLE
glFramebufferParameteri
glFramebufferParameteriContextANGLE
glFramebufferRenderbuffer
glFramebufferRenderbufferContextANGLE
glFramebufferRenderbufferEXT
glFramebufferRenderbufferOES
glFramebufferRenderbufferOESContextANGLE
glFramebufferTexture
glFramebufferTexture1D
glFramebufferTexture1DEXT
glFramebufferTexture2D
glFramebufferTexture2DContextANGLE
glFramebufferTexture2DEXT
glFramebufferTexture2DOES
glFramebufferTexture2DOESContextANGLE
glFramebufferTexture3D
glFramebufferTexture3DEXT
glFramebufferTexture3DOES
glFramebufferTextureARB
glFramebufferTextureEXT
glFramebufferTextureEXTContextANGLE
glFramebufferTextureLayer
glFramebufferTextureLayerARB
glFramebufferTextureLayerContextANGLE
glFramebufferTextureLayerEXT
glFramebufferTextureMultiviewLayeredANGLE
glFramebufferTextureMultiviewLayeredANGLEContextANGLE
glFramebufferTextureMultiviewSideBySideANGLE
glFramebufferTextureMultiviewSideBySideANGLEContextANGLE
glFramebufferTextureOES
glFrontFace
glFrontFaceContextANGLE
glFrustumf
glFrustumfContextANGLE
glFrustumx
glFrustumxContextANGLE
glGenBuffers
glGenBuffersARB
glGenBuffersContextANGLE
glGenFencesNV
glGenFencesNVContextANGLE
glGenFramebuffers
glGenFramebuffersContextANGLE
glGenFramebuffersEXT
glGenFramebuffersOES
glGenFramebuffersOESContextANGLE
glGenPathsCHROMIUM
glGenPathsCHROMIUMContextANGLE
glGenPathsNV
glGenProgramPipelines
glGenProgramPipelinesContextANGLE
glGenProgramPipelinesEXT
glGenQueries
glGenQueriesARB
glGenQueriesContextANGLE
glGenQueriesEXT
glGenQueriesEXTContextANGLE
glGenRenderbuffers
glGenRenderbuffersContextANGLE
glGenRenderbuffersEXT
glGenRenderbuffersOES
glGenRenderbuffersOESContextANGLE
glGenSamplers
glGenSamplersContextANGLE
glGenTextures
glGenTexturesContextANGLE
glGenTexturesEXT
glGenTransformFeedbacks
glGenTransformFeedbacksContextANGLE
glGenVertexArrays
glGenVertexArraysContextANGLE
glGenVertexArraysOES
glGenVertexArraysOESContextANGLE
glGenerateMipmap
glGenerateMipmapContextANGLE
glGenerateMipmapEXT
glGenerateMipmapOES
glGenerateMipmapOESContextANGLE
glGenerateTextureMipmap
glGenerateTextureMipmapEXT
glGetActiveAtomicCounterBufferiv
glGetActiveAttrib
glGetActiveAttribARB
glGetActiveAttribContextANGLE
glGetActiveSubroutineName
glGetActiveSubroutineUniformName
glGetActiveSubroutineUniformiv
glGetActiveUniform
glGetActiveUniformARB
glGetActiveUniformBlockName
glGetActiveUniformBlockNameContextANGLE
glGetActiveUniformBlockiv
glGetActiveUniformBlockivContextANGLE
glGetActiveUniformBlockivRobustANGLE
glGetActiveUniformBlockivRobustANGLEContextANGLE
glGetActiveUniformContextANGLE
glGetActiveUniformName
glGetActiveUniformsiv
glGetActiveUniformsivContextANGLE
glGetAttachedShaders
glGetAttachedShadersContextANGLE
glGetAttribLocation
glGetAttribLocationARB
glGetAttribLocationContextANGLE
glGetBooleani_v
glGetBooleani_vContextANGLE
glGetBooleani_vRobustANGLE
glGetBooleani_vRobustANGLEContextANGLE
glGetBooleanv
glGetBooleanvContextANGLE
glGetBooleanvRobustANGLE
glGetBooleanvRobustANGLEContextANGLE
glGetBufferParameteri64v
glGetBufferParameteri64vContextANGLE
glGetBufferParameteri64vRobustANGLE
glGetBufferParameteri64vRobustANGLEContextANGLE
glGetBufferParameteriv
glGetBufferParameterivARB
glGetBufferParameterivContextANGLE
glGetBufferParameterivRobustANGLE
glGetBufferParameterivRobustANGLEContextANGLE
glGetBufferPointerv
glGetBufferPointervARB
glGetBufferPointervContextANGLE
glGetBufferPointervOES
glGetBufferPointervOESContextANGLE
glGetBufferPointervRobustANGLE
glGetBufferPointervRobustANGLEContextANGLE
glGetBufferSubData
glGetBufferSubDataARB
glGetClipPlanef
glGetClipPlanefContextANGLE
glGetClipPlanex
glGetClipPlanexContextANGLE
glGetCompressedTexImage
glGetCompressedTexImageARB
glGetCompressedTextureImage
glGetCompressedTextureImageEXT
glGetCompressedTextureSubImage
glGetDebugMessageLog
glGetDebugMessageLogARB
glGetDebugMessageLogKHR
glGetDebugMessageLogKHRContextANGLE
glGetDoublei_v
glGetDoublei_vEXT
glGetDoublev
glGetError
glGetErrorContextANGLE
glGetFenceivNV
glGetFenceivNVContextANGLE
glGetFixedv
glGetFixedvContextANGLE
glGetFloati_v
glGetFloati_vEXT
glGetFloati_vOES
glGetFloatv
glGetFloatvContextANGLE
glGetFloatvRobustANGLE
glGetFloatvRobustANGLEContextANGLE
glGetFragDataIndex
glGetFragDataIndexEXT
glGetFragDataIndexEXTContextANGLE
glGetFragDataLocation
glGetFragDataLocationContextANGLE
glGetFragDataLocationEXT
glGetFramebufferAttachmentParameteriv
glGetFramebufferAttachmentParameterivContextANGLE
glGetFramebufferAttachmentParameterivEXT
glGetFramebufferAttachmentParameterivOES
glGetFramebufferAttachmentParameterivOESContextANGLE
glGetFramebufferAttachmentParameterivRobustANGLE
glGetFramebufferAttachmentParameterivRobustANGLEContextANGLE
glGetFramebufferParameteriv
glGetFramebufferParameterivContextANGLE
glGetFramebufferParameterivEXT
glGetFramebufferParameterivRobustANGLE
glGetFramebufferParameterivRobustANGLEContextANGLE
glGetGraphicsResetStatus
glGetGraphicsResetStatusARB
glGetGraphicsResetStatusEXT
glGetGraphicsResetStatusEXTContextANGLE
glGetGraphicsResetStatusKHR
glGetInteger64i_v
glGetInteger64i_vContextANGLE
glGetInteger64i_vRobustANGLE
glGetInteger64i_vRobustANGLEContextANGLE
glGetInteger64v
glGetInteger64vContextANGLE
glGetInteger64vRobustANGLE
glGetInteger64vRobustANGLEContextANGLE
glGetIntegeri_v
glGetIntegeri_vContextANGLE
glGetIntegeri_vEXT
glGetIntegeri_vRobustANGLE
glGetIntegeri_vRobustANGLEContextANGLE
glGetIntegerv
glGetIntegervContextANGLE
glGetIntegervRobustANGLE
glGetIntegervRobustANGLEContextANGLE
glGetInternalformatSampleivNV
glGetInternalformati64v
glGetInternalformativ
glGetInternalformativContextANGLE
glGetInternalformativRobustANGLE
glGetInternalformativRobustANGLEContextANGLE
glGetLightfv
glGetLightfvContextANGLE
glGetLightxv
glGetLightxvContextANGLE
glGetMaterialfv
glGetMaterialfvContextANGLE
glGetMaterialxv
glGetMaterialxvContextANGLE
glGetMultisamplefv
glGetMultisamplefvContextANGLE
glGetMultisamplefvRobustANGLE
glGetMultisamplefvRobustANGLEContextANGLE
glGetNamedBufferParameteri64v
glGetNamedBufferParameteriv
glGetNamedBufferParameterivEXT
glGetNamedBufferPointerv
glGetNamedBufferPointervEXT
glGetNamedBufferSubData
glGetNamedBufferSubDataEXT
glGetNamedFramebufferAttachmentParameteriv
glGetNamedFramebufferAttachmentParameterivEXT
glGetNamedFramebufferParameteriv
glGetNamedFramebufferParameterivEXT
glGetNamedRenderbufferParameteriv
glGetNamedRenderbufferParameterivEXT
glGetObjectLabel
glGetObjectLabelEXT
glGetObjectLabelKHR
glGetObjectLabelKHRContextANGLE
glGetObjectPtrLabel
glGetObjectPtrLabelKHR
glGetObjectPtrLabelKHRContextANGLE
glGetPathParameterfvCHROMIUM
glGetPathParameterfvCHROMIUMContextANGLE
glGetPathParameterfvNV
glGetPathParameterivCHROMIUM
glGetPathParameterivCHROMIUMContextANGLE
glGetPathParameterivNV
glGetPointerv
glGetPointervContextANGLE
glGetPointervEXT
glGetPointervKHR
glGetPointervKHRContextANGLE
glGetPointervRobustANGLERobustANGLE
glGetPointervRobustANGLERobustANGLEContextANGLE
glGetProgramBinary
glGetProgramBinaryContextANGLE
glGetProgramBinaryOES
glGetProgramBinaryOESContextANGLE
glGetProgramInfoLog
glGetProgramInfoLogContextANGLE
glGetProgramInterfaceiv
glGetProgramInterfaceivContextANGLE
glGetProgramInterfaceivRobustANGLE
glGetProgramInterfaceivRobustANGLEContextANGLE
glGetProgramPipelineInfoLog
glGetProgramPipelineInfoLogContextANGLE
glGetProgramPipelineInfoLogEXT
glGetProgramPipelineiv
glGetProgramPipelineivContextANGLE
glGetProgramPipelineivEXT
glGetProgramResourceIndex
glGetProgramResourceIndexContextANGLE
glGetProgramResourceLocation
glGetProgramResourceLocationContextANGLE
glGetProgramResourceLocationIndex
glGetProgramResourceLocationIndexEXT
glGetProgramResourceLocationIndexEXTContextANGLE
glGetProgramResourceName
glGetProgramResourceNameContextANGLE
glGetProgramResourceiv
glGetProgramResourceivContextANGLE
glGetProgramStageiv
glGetProgramiv
glGetProgramivARB
glGetProgramivContextANGLE
glGetProgramivRobustANGLE
glGetProgramivRobustANGLEContextANGLE
glGetQueryBufferObjecti64v
glGetQueryBufferObjectiv
glGetQueryBufferObjectui64v
glGetQueryBufferObjectuiv
glGetQueryIndexediv
glGetQueryObjecti64v
glGetQueryObjecti64vEXT
glGetQueryObjecti64vEXTContextANGLE
glGetQueryObjecti64vRobustANGLE
glGetQueryObjecti64vRobustANGLEContextANGLE
glGetQueryObjectiv
glGetQueryObjectivARB
glGetQueryObjectivEXT
glGetQueryObjectivEXTContextANGLE
glGetQueryObjectivRobustANGLE
glGetQueryObjectivRobustANGLEContextANGLE
glGetQueryObjectui64v
glGetQueryObjectui64vEXT
glGetQueryObjectui64vEXTContextANGLE
glGetQueryObjectui64vRobustANGLE
glGetQueryObjectui64vRobustANGLEContextANGLE
glGetQueryObjectuiv
glGetQueryObjectuivARB
glGetQueryObjectuivContextANGLE
glGetQueryObjectuivEXT
glGetQueryObjectuivEXTContextANGLE
glGetQueryObjectuivRobustANGLE
glGetQueryObjectuivRobustANGLEContextANGLE
glGetQueryiv
glGetQueryivARB
glGetQueryivContextANGLE
glGetQueryivEXT
glGetQueryivEXTContextANGLE
glGetQueryivRobustANGLE
glGetQueryivRobustANGLEContextANGLE
glGetRenderbufferParameteriv
glGetRenderbufferParameterivContextANGLE
glGetRenderbufferParameterivEXT
glGetRenderbufferParameterivOES
glGetRenderbufferParameterivOESContextANGLE
glGetRenderbufferParameterivRobustANGLE
glGetRenderbufferParameterivRobustANGLEContextANGLE
glGetSamplerParameterIiv
glGetSamplerParameterIivEXT
glGetSamplerParameterIivOES
glGetSamplerParameterIivRobustANGLE
glGetSamplerParameterIivRobustANGLEContextANGLE
glGetSamplerParameterIuiv
glGetSamplerParameterIuivEXT
glGetSamplerParameterIuivOES
glGetSamplerParameterIuivRobustANGLE
glGetSamplerParameterIuivRobustANGLEContextANGLE
glGetSamplerParameterfv
glGetSamplerParameterfvContextANGLE
glGetSamplerParameterfvRobustANGLE
glGetSamplerParameterfvRobustANGLEContextANGLE
glGetSamplerParameteriv
glGetSamplerParameterivContextANGLE
glGetSamplerParameterivRobustANGLE
glGetSamplerParameterivRobustANGLEContextANGLE
glGetShaderInfoLog
glGetShaderInfoLogContextANGLE
glGetShaderPrecisionFormat
glGetShaderPrecisionFormatContextANGLE
glGetShaderSource
glGetShaderSourceARB
glGetShaderSourceContextANGLE
glGetShaderiv
glGetShaderivContextANGLE
glGetShaderivRobustANGLE
glGetShaderivRobustANGLEContextANGLE
glGetString
glGetStringContextANGLE
glGetStringi
glGetStringiContextANGLE
glGetSubroutineIndex
glGetSubroutineUniformLocation
glGetSynciv
glGetSyncivContextANGLE
glGetTexEnvfv
glGetTexEnvfvContextANGLE
glGetTexEnviv
glGetTexEnvivContextANGLE
glGetTexEnvxv
glGetTexEnvxvContextANGLE
glGetTexGenfvOES
glGetTexGenfvOESContextANGLE
glGetTexGenivOES
glGetTexGenivOESContextANGLE
glGetTexGenxvOES
glGetTexGenxvOESContextANGLE
glGetTexImage
glGetTexLevelParameterfv
glGetTexLevelParameterfvContextANGLE
glGetTexLevelParameterfvRobustANGLE
glGetTexLevelParameterfvRobustANGLEContextANGLE
glGetTexLevelParameteriv
glGetTexLevelParameterivContextANGLE
glGetTexLevelParameterivRobustANGLE
glGetTexLevelParameterivRobustANGLEContextANGLE
glGetTexParameterIiv
glGetTexParameterIivEXT
glGetTexParameterIivOES
glGetTexParameterIivRobustANGLE
glGetTexParameterIivRobustANGLEContextANGLE
glGetTexParameterIuiv
glGetTexParameterIuivEXT
glGetTexParameterIuivOES
glGetTexParameterIuivRobustANGLE
glGetTexParameterIuivRobustANGLEContextANGLE
glGetTexParameterfv
glGetTexParameterfvContextANGLE
glGetTexParameterfvRobustANGLE
glGetTexParameterfvRobustANGLEContextANGLE
glGetTexParameteriv
glGetTexParameterivContextANGLE
glGetTexParameterivRobustANGLE
glGetTexParameterivRobustANGLEContextANGLE
glGetTexParameterxv
glGetTexParameterxvContextANGLE
glGetTextureImage
glGetTextureImageEXT
glGetTextureLevelParameterfv
glGetTextureLevelParameterfvEXT
glGetTextureLevelParameteriv
glGetTextureLevelParameterivEXT
glGetTextureParameterIiv
glGetTextureParameterIivEXT
glGetTextureParameterIuiv
glGetTextureParameterIuivEXT
glGetTextureParameterfv
glGetTextureParameterfvEXT
glGetTextureParameteriv
glGetTextureParameterivEXT
glGetTextureSubImage
glGetTransformFeedbackVarying
glGetTransformFeedbackVaryingContextANGLE
glGetTransformFeedbackVaryingEXT
glGetTransformFeedbacki64_v
glGetTransformFeedbacki_v
glGetTransformFeedbackiv
glGetTranslatedShaderSourceANGLE
glGetTranslatedShaderSourceANGLEContextANGLE
glGetUniformBlockIndex
glGetUniformBlockIndexContextANGLE
glGetUniformIndices
glGetUniformIndicesContextANGLE
glGetUniformLocation
glGetUniformLocationARB
glGetUniformLocationContextANGLE
glGetUniformSubroutineuiv
glGetUniformdv
glGetUniformfv
glGetUniformfvARB
glGetUniformfvContextANGLE
glGetUniformfvRobustANGLE
glGetUniformfvRobustANGLEContextANGLE
glGetUniformiv
glGetUniformivARB
glGetUniformivContextANGLE
glGetUniformivRobustANGLE
glGetUniformivRobustANGLEContextANGLE
glGetUniformuiv
glGetUniformuivContextANGLE
glGetUniformuivEXT
glGetUniformuivRobustANGLE
glGetUniformuivRobustANGLEContextANGLE
glGetVertexArrayIndexed64iv
glGetVertexArrayIndexediv
glGetVertexArrayiv
glGetVertexAttribIiv
glGetVertexAttribIivContextANGLE
glGetVertexAttribIivEXT
glGetVertexAttribIivRobustANGLE
glGetVertexAttribIivRobustANGLEContextANGLE
glGetVertexAttribIuiv
glGetVertexAttribIuivContextANGLE
glGetVertexAttribIuivEXT
glGetVertexAttribIuivRobustANGLE
glGetVertexAttribIuivRobustANGLEContextANGLE
glGetVertexAttribLdv
glGetVertexAttribLdvEXT
glGetVertexAttribPointerv
glGetVertexAttribPointervARB
glGetVertexAttribPointervContextANGLE
glGetVertexAttribPointervRobustANGLE
glGetVertexAttribPointervRobustANGLEContextANGLE
glGetVertexAttribdv
glGetVertexAttribdvARB
glGetVertexAttribfv
glGetVertexAttribfvARB
glGetVertexAttribfvContextANGLE
glGetVertexAttribfvRobustANGLE
glGetVertexAttribfvRobustANGLEContextANGLE
glGetVertexAttribiv
glGetVertexAttribivARB
glGetVertexAttribivContextANGLE
glGetVertexAttribivRobustANGLE
glGetVertexAttribivRobustANGLEContextANGLE
glGetnCompressedTexImage
glGetnCompressedTexImageARB
glGetnTexImage
glGetnTexImageARB
glGetnUniformdv
glGetnUniformdvARB
glGetnUniformfv
glGetnUniformfvARB
glGetnUniformfvEXT
glGetnUniformfvEXTContextANGLE
glGetnUniformfvKHR
glGetnUniformfvRobustANGLE
glGetnUniformfvRobustANGLEContextANGLE
glGetnUniformiv
glGetnUniformivARB
glGetnUniformivEXT
glGetnUniformivEXTContextANGLE
glGetnUniformivKHR
glGetnUniformivRobustANGLE
glGetnUniformivRobustANGLEContextANGLE
glGetnUniformuiv
glGetnUniformuivARB
glGetnUniformuivKHR
glGetnUniformuivRobustANGLE
glGetnUniformuivRobustANGLEContextANGLE
glHint
glHintContextANGLE
glInsertEventMarkerEXT
glInsertEventMarkerEXTContextANGLE
glInvalidateBufferData
glInvalidateBufferSubData
glInvalidateFramebuffer
glInvalidateFramebufferContextANGLE
glInvalidateNamedFramebufferData
glInvalidateNamedFramebufferSubData
glInvalidateSubFramebuffer
glInvalidateSubFramebufferContextANGLE
glInvalidateTexImage
glInvalidateTexSubImage
glIsBuffer
glIsBufferARB
glIsBufferContextANGLE
glIsEnabled
glIsEnabledContextANGLE
glIsEnabledi
glIsEnablediEXT
glIsEnablediOES
glIsFenceNV
glIsFenceNVContextANGLE
glIsFramebuffer
glIsFramebufferContextANGLE
glIsFramebufferEXT
glIsFramebufferOES
glIsFramebufferOESContextANGLE
glIsPathCHROMIUM
glIsPathCHROMIUMContextANGLE
glIsPathNV
glIsProgram
glIsProgramARB
glIsProgramContextANGLE
glIsProgramPipeline
glIsProgramPipelineContextANGLE
glIsProgramPipelineEXT
glIsQuery
glIsQueryARB
glIsQueryContextANGLE
glIsQueryEXT
glIsQueryEXTContextANGLE
glIsRenderbuffer
glIsRenderbufferContextANGLE
glIsRenderbufferEXT
glIsRenderbufferOES
glIsRenderbufferOESContextANGLE
glIsSampler
glIsSamplerContextANGLE
glIsShader
glIsShaderContextANGLE
glIsSync
glIsSyncContextANGLE
glIsTexture
glIsTextureContextANGLE
glIsTextureEXT
glIsTransformFeedback
glIsTransformFeedbackContextANGLE
glIsVertexArray
glIsVertexArrayContextANGLE
glIsVertexArrayOES
glIsVertexArrayOESContextANGLE
glLightModelf
glLightModelfContextANGLE
glLightModelfv
glLightModelfvContextANGLE
glLightModelx
glLightModelxContextANGLE
glLightModelxv
glLightModelxvContextANGLE
glLightf
glLightfContextANGLE
glLightfv
glLightfvContextANGLE
glLightx
glLightxContextANGLE
glLightxv
glLightxvContextANGLE
glLineWidth
glLineWidthContextANGLE
glLineWidthx
glLineWidthxContextANGLE
glLinkProgram
glLinkProgramARB
glLinkProgramContextANGLE
glLoadIdentity
glLoadIdentityContextANGLE
glLoadMatrixf
glLoadMatrixfContextANGLE
glLoadMatrixx
glLoadMatrixxContextANGLE
glLoadPaletteFromModelViewMatrixOES
glLoadPaletteFromModelViewMatrixOESContextANGLE
glLogicOp
glLogicOpContextANGLE
glMapBuffer
glMapBufferARB
glMapBufferOES
glMapBufferOESContextANGLE
glMapBufferRange
glMapBufferRangeContextANGLE
glMapBufferRangeEXT
glMapBufferRangeEXTContextANGLE
glMapNamedBuffer
glMapNamedBufferEXT
glMapNamedBufferRange
glMapNamedBufferRangeEXT
glMaterialf
glMaterialfContextANGLE
glMaterialfv
glMaterialfvContextANGLE
glMaterialx
glMaterialxContextANGLE
glMaterialxv
glMaterialxvContextANGLE
glMatrixIndexPointerOES
glMatrixIndexPointerOESContextANGLE
glMatrixLoadIdentityCHROMIUM
glMatrixLoadIdentityCHROMIUMContextANGLE
glMatrixLoadfCHROMIUM
glMatrixLoadfCHROMIUMContextANGLE
glMatrixLoadfEXT
glMatrixMode
glMatrixModeContextANGLE
glMaxShaderCompilerThreadsKHR
glMaxShaderCompilerThreadsKHRContextANGLE
glMemoryBarrier
glMemoryBarrierByRegion
glMemoryBarrierByRegionContextANGLE
glMemoryBarrierContextANGLE
glMemoryBarrierEXT
glMinSampleShading
glMinSampleShadingARB
glMinSampleShadingOES
glMultMatrixf
glMultMatrixfContextANGLE
glMultMatrixx
glMultMatrixxContextANGLE
glMultiDrawArrays
glMultiDrawArraysEXT
glMultiDrawArraysIndirect
glMultiDrawArraysIndirectEXT
glMultiDrawElements
glMultiDrawElementsBaseVertex
glMultiDrawElementsBaseVertexEXT
glMultiDrawElementsEXT
glMultiDrawElementsIndirect
glMultiDrawElementsIndirectEXT
glMultiTexCoord4f
glMultiTexCoord4fContextANGLE
glMultiTexCoord4x
glMultiTexCoord4xContextANGLE
glNamedBufferData
glNamedBufferDataEXT
glNamedBufferStorage
glNamedBufferStorageEXT
glNamedBufferSubData
glNamedBufferSubDataEXT
glNamedFramebufferDrawBuffer
glNamedFramebufferDrawBuffers
glNamedFramebufferParameteri
glNamedFramebufferParameteriEXT
glNamedFramebufferReadBuffer
glNamedFramebufferRenderbuffer
glNamedFramebufferRenderbufferEXT
glNamedFramebufferTexture
glNamedFramebufferTextureEXT
glNamedFramebufferTextureLayer
glNamedFramebufferTextureLayerEXT
glNamedRenderbufferStorage
glNamedRenderbufferStorageEXT
glNamedRenderbufferStorageMultisample
glNamedRenderbufferStorageMultisampleEXT
glNormal3f
glNormal3fContextANGLE
glNormal3x
glNormal3xContextANGLE
glNormalPointer
glNormalPointerContextANGLE
glObjectLabel
glObjectLabelKHR
glObjectLabelKHRContextANGLE
glObjectPtrLabel
glObjectPtrLabelKHR
glObjectPtrLabelKHRContextANGLE
glOrthof
glOrthofContextANGLE
glOrthox
glOrthoxContextANGLE
glPatchParameterfv
glPatchParameteri
glPatchParameteriEXT
glPatchParameteriOES
glPathCommandsCHROMIUM
glPathCommandsCHROMIUMContextANGLE
glPathCommandsNV
glPathParameterfCHROMIUM
glPathParameterfCHROMIUMContextANGLE
glPathParameterfNV
glPathParameteriCHROMIUM
glPathParameteriCHROMIUMContextANGLE
glPathParameteriNV
glPathStencilFuncCHROMIUM
glPathStencilFuncCHROMIUMContextANGLE
glPathStencilFuncNV
glPauseTransformFeedback
glPauseTransformFeedbackContextANGLE
glPixelStoref
glPixelStorei
glPixelStoreiContextANGLE
glPointParameterf
glPointParameterfARB
glPointParameterfContextANGLE
glPointParameterfEXT
glPointParameterfv
glPointParameterfvARB
glPointParameterfvContextANGLE
glPointParameterfvEXT
glPointParameteri
glPointParameteriv
glPointParameterx
glPointParameterxContextANGLE
glPointParameterxv
glPointParameterxvContextANGLE
glPointSize
glPointSizeContextANGLE
glPointSizePointerOES
glPointSizePointerOESContextANGLE
glPointSizex
glPointSizexContextANGLE
glPolygonMode
glPolygonOffset
glPolygonOffsetContextANGLE
glPolygonOffsetEXT
glPolygonOffsetx
glPolygonOffsetxContextANGLE
glPopDebugGroup
glPopDebugGroupKHR
glPopDebugGroupKHRContextANGLE
glPopGroupMarkerEXT
glPopGroupMarkerEXTContextANGLE
glPopMatrix
glPopMatrixContextANGLE
glPrimitiveBoundingBox
glPrimitiveBoundingBoxARB
glPrimitiveBoundingBoxEXT
glPrimitiveBoundingBoxOES
glPrimitiveRestartIndex
glProgramBinary
glProgramBinaryContextANGLE
glProgramBinaryOES
glProgramBinaryOESContextANGLE
glProgramParameteri
glProgramParameteriARB
glProgramParameteriContextANGLE
glProgramParameteriEXT
glProgramPathFragmentInputGenCHROMIUM
glProgramPathFragmentInputGenCHROMIUMContextANGLE
glProgramPathFragmentInputGenNV
glProgramUniform1d
glProgramUniform1dEXT
glProgramUniform1dv
glProgramUniform1dvEXT
glProgramUniform1f
glProgramUniform1fContextANGLE
glProgramUniform1fEXT
glProgramUniform1fv
glProgramUniform1fvContextANGLE
glProgramUniform1fvEXT
glProgramUniform1i
glProgramUniform1iContextANGLE
glProgramUniform1iEXT
glProgramUniform1iv
glProgramUniform1ivContextANGLE
glProgramUniform1ivEXT
glProgramUniform1ui
glProgramUniform1uiContextANGLE
glProgramUniform1uiEXT
glProgramUniform1uiv
glProgramUniform1uivContextANGLE
glProgramUniform1uivEXT
glProgramUniform2d
glProgramUniform2dEXT
glProgramUniform2dv
glProgramUniform2dvEXT
glProgramUniform2f
glProgramUniform2fContextANGLE
glProgramUniform2fEXT
glProgramUniform2fv
glProgramUniform2fvContextANGLE
glProgramUniform2fvEXT
glProgramUniform2i
glProgramUniform2iContextANGLE
glProgramUniform2iEXT
glProgramUniform2iv
glProgramUniform2ivContextANGLE
glProgramUniform2ivEXT
glProgramUniform2ui
glProgramUniform2uiContextANGLE
glProgramUniform2uiEXT
glProgramUniform2uiv
glProgramUniform2uivContextANGLE
glProgramUniform2uivEXT
glProgramUniform3d
glProgramUniform3dEXT
glProgramUniform3dv
glProgramUniform3dvEXT
glProgramUniform3f
glProgramUniform3fContextANGLE
glProgramUniform3fEXT
glProgramUniform3fv
glProgramUniform3fvContextANGLE
glProgramUniform3fvEXT
glProgramUniform3i
glProgramUniform3iContextANGLE
glProgramUniform3iEXT
glProgramUniform3iv
glProgramUniform3ivContextANGLE
glProgramUniform3ivEXT
glProgramUniform3ui
glProgramUniform3uiContextANGLE
glProgramUniform3uiEXT
glProgramUniform3uiv
glProgramUniform3uivContextANGLE
glProgramUniform3uivEXT
glProgramUniform4d
glProgramUniform4dEXT
glProgramUniform4dv
glProgramUniform4dvEXT
glProgramUniform4f
glProgramUniform4fContextANGLE
glProgramUniform4fEXT
glProgramUniform4fv
glProgramUniform4fvContextANGLE
glProgramUniform4fvEXT
glProgramUniform4i
glProgramUniform4iContextANGLE
glProgramUniform4iEXT
glProgramUniform4iv
glProgramUniform4ivContextANGLE
glProgramUniform4ivEXT
glProgramUniform4ui
glProgramUniform4uiContextANGLE
glProgramUniform4uiEXT
glProgramUniform4uiv
glProgramUniform4uivContextANGLE
glProgramUniform4uivEXT
glProgramUniformMatrix2dv
glProgramUniformMatrix2dvEXT
glProgramUniformMatrix2fv
glProgramUniformMatrix2fvContextANGLE
glProgramUniformMatrix2fvEXT
glProgramUniformMatrix2x3dv
glProgramUniformMatrix2x3dvEXT
glProgramUniformMatrix2x3fv
glProgramUniformMatrix2x3fvContextANGLE
glProgramUniformMatrix2x3fvEXT
glProgramUniformMatrix2x4dv
glProgramUniformMatrix2x4dvEXT
glProgramUniformMatrix2x4fv
glProgramUniformMatrix2x4fvContextANGLE
glProgramUniformMatrix2x4fvEXT
glProgramUniformMatrix3dv
glProgramUniformMatrix3dvEXT
glProgramUniformMatrix3fv
glProgramUniformMatrix3fvContextANGLE
glProgramUniformMatrix3fvEXT
glProgramUniformMatrix3x2dv
glProgramUniformMatrix3x2dvEXT
glProgramUniformMatrix3x2fv
glProgramUniformMatrix3x2fvContextANGLE
glProgramUniformMatrix3x2fvEXT
glProgramUniformMatrix3x4dv
glProgramUniformMatrix3x4dvEXT
glProgramUniformMatrix3x4fv
glProgramUniformMatrix3x4fvContextANGLE
glProgramUniformMatrix3x4fvEXT
glProgramUniformMatrix4dv
glProgramUniformMatrix4dvEXT
glProgramUniformMatrix4fv
glProgramUniformMatrix4fvContextANGLE
glProgramUniformMatrix4fvEXT
glProgramUniformMatrix4x2dv
glProgramUniformMatrix4x2dvEXT
glProgramUniformMatrix4x2fv
glProgramUniformMatrix4x2fvContextANGLE
glProgramUniformMatrix4x2fvEXT
glProgramUniformMatrix4x3dv
glProgramUniformMatrix4x3dvEXT
glProgramUniformMatrix4x3fv
glProgramUniformMatrix4x3fvContextANGLE
glProgramUniformMatrix4x3fvEXT
glProvokingVertex
glProvokingVertexEXT
glPushDebugGroup
glPushDebugGroupKHR
glPushDebugGroupKHRContextANGLE
glPushGroupMarkerEXT
glPushGroupMarkerEXTContextANGLE
glPushMatrix
glPushMatrixContextANGLE
glQueryCounter
glQueryCounterEXT
glQueryCounterEXTContextANGLE
glQueryMatrixxOES
glQueryMatrixxOESContextANGLE
glReadBuffer
glReadBufferContextANGLE
glReadPixels
glReadPixelsContextANGLE
glReadPixelsRobustANGLE
glReadPixelsRobustANGLEContextANGLE
glReadnPixels
glReadnPixelsARB
glReadnPixelsEXT
glReadnPixelsEXTContextANGLE
glReadnPixelsKHR
glReadnPixelsRobustANGLE
glReadnPixelsRobustANGLEContextANGLE
glReleaseShaderCompiler
glReleaseShaderCompilerContextANGLE
glRenderbufferStorage
glRenderbufferStorageContextANGLE
glRenderbufferStorageEXT
glRenderbufferStorageMultisample
glRenderbufferStorageMultisampleANGLE
glRenderbufferStorageMultisampleANGLEContextANGLE
glRenderbufferStorageMultisampleContextANGLE
glRenderbufferStorageMultisampleEXT
glRenderbufferStorageOES
glRenderbufferStorageOESContextANGLE
glRequestExtensionANGLE
glRequestExtensionANGLEContextANGLE
glResumeTransformFeedback
glResumeTransformFeedbackContextANGLE
glRotatef
glRotatefContextANGLE
glRotatex
glRotatexContextANGLE
glSampleCoverage
glSampleCoverageARB
glSampleCoverageContextANGLE
glSampleCoveragex
glSampleCoveragexContextANGLE
glSampleMaski
glSampleMaskiContextANGLE
glSamplerParameterIiv
glSamplerParameterIivEXT
glSamplerParameterIivOES
glSamplerParameterIivRobustANGLE
glSamplerParameterIivRobustANGLEContextANGLE
glSamplerParameterIuiv
glSamplerParameterIuivEXT
glSamplerParameterIuivOES
glSamplerParameterIuivRobustANGLE
glSamplerParameterIuivRobustANGLEContextANGLE
glSamplerParameterf
glSamplerParameterfContextANGLE
glSamplerParameterfv
glSamplerParameterfvContextANGLE
glSamplerParameterfvRobustANGLE
glSamplerParameterfvRobustANGLEContextANGLE
glSamplerParameteri
glSamplerParameteriContextANGLE
glSamplerParameteriv
glSamplerParameterivContextANGLE
glSamplerParameterivRobustANGLE
glSamplerParameterivRobustANGLEContextANGLE
glScalef
glScalefContextANGLE
glScalex
glScalexContextANGLE
glScissor
glScissorArrayv
glScissorArrayvOES
glScissorContextANGLE
glScissorIndexed
glScissorIndexedOES
glScissorIndexedv
glScissorIndexedvOES
glSetFenceNV
glSetFenceNVContextANGLE
glShadeModel
glShadeModelContextANGLE
glShaderBinary
glShaderBinaryContextANGLE
glShaderSource
glShaderSourceARB
glShaderSourceContextANGLE
glShaderStorageBlockBinding
glStencilFillPathCHROMIUM
glStencilFillPathCHROMIUMContextANGLE
glStencilFillPathInstancedCHROMIUM
glStencilFillPathInstancedCHROMIUMContextANGLE
glStencilFillPathInstancedNV
glStencilFillPathNV
glStencilFunc
glStencilFuncContextANGLE
glStencilFuncSeparate
glStencilFuncSeparateContextANGLE
glStencilMask
glStencilMaskContextANGLE
glStencilMaskSeparate
glStencilMaskSeparateContextANGLE
glStencilOp
glStencilOpContextANGLE
glStencilOpSeparate
glStencilOpSeparateContextANGLE
glStencilStrokePathCHROMIUM
glStencilStrokePathCHROMIUMContextANGLE
glStencilStrokePathInstancedCHROMIUM
glStencilStrokePathInstancedCHROMIUMContextANGLE
glStencilStrokePathInstancedNV
glStencilStrokePathNV
glStencilThenCoverFillPathCHROMIUM
glStencilThenCoverFillPathCHROMIUMContextANGLE
glStencilThenCoverFillPathInstancedCHROMIUM
glStencilThenCoverFillPathInstancedCHROMIUMContextANGLE
glStencilThenCoverFillPathInstancedNV
glStencilThenCoverFillPathNV
glStencilThenCoverStrokePathCHROMIUM
glStencilThenCoverStrokePathCHROMIUMContextANGLE
glStencilThenCoverStrokePathInstancedCHROMIUM
glStencilThenCoverStrokePathInstancedCHROMIUMContextANGLE
glStencilThenCoverStrokePathInstancedNV
glStencilThenCoverStrokePathNV
glTestFenceNV
glTestFenceNVContextANGLE
glTexBuffer
glTexBufferARB
glTexBufferEXT
glTexBufferOES
glTexBufferRange
glTexBufferRangeEXT
glTexBufferRangeOES
glTexCoordPointer
glTexCoordPointerContextANGLE
glTexEnvf
glTexEnvfContextANGLE
glTexEnvfv
glTexEnvfvContextANGLE
glTexEnvi
glTexEnviContextANGLE
glTexEnviv
glTexEnvivContextANGLE
glTexEnvx
glTexEnvxContextANGLE
glTexEnvxv
glTexEnvxvContextANGLE
glTexGenfOES
glTexGenfOESContextANGLE
glTexGenfvOES
glTexGenfvOESContextANGLE
glTexGeniOES
glTexGeniOESContextANGLE
glTexGenivOES
glTexGenivOESContextANGLE
glTexGenxOES
glTexGenxOESContextANGLE
glTexGenxvOES
glTexGenxvOESContextANGLE
glTexImage1D
glTexImage2D
glTexImage2DContextANGLE
glTexImage2DMultisample
glTexImage2DRobustANGLE
glTexImage2DRobustANGLEContextANGLE
glTexImage3D
glTexImage3DContextANGLE
glTexImage3DEXT
glTexImage3DMultisample
glTexImage3DOES
glTexImage3DRobustANGLE
glTexImage3DRobustANGLEContextANGLE
glTexParameterIiv
glTexParameterIivEXT
glTexParameterIivOES
glTexParameterIivRobustANGLE
glTexParameterIivRobustANGLEContextANGLE
glTexParameterIuiv
glTexParameterIuivEXT
glTexParameterIuivOES
glTexParameterIuivRobustANGLE
glTexParameterIuivRobustANGLEContextANGLE
glTexParameterf
glTexParameterfContextANGLE
glTexParameterfv
glTexParameterfvContextANGLE
glTexParameterfvRobustANGLE
glTexParameterfvRobustANGLEContextANGLE
glTexParameteri
glTexParameteriContextANGLE
glTexParameteriv
glTexParameterivContextANGLE
glTexParameterivRobustANGLE
glTexParameterivRobustANGLEContextANGLE
glTexParameterx
glTexParameterxContextANGLE
glTexParameterxv
glTexParameterxvContextANGLE
glTexStorage1D
glTexStorage1DEXT
glTexStorage1DEXTContextANGLE
glTexStorage2D
glTexStorage2DContextANGLE
glTexStorage2DEXT
glTexStorage2DEXTContextANGLE
glTexStorage2DMultisample
glTexStorage2DMultisampleContextANGLE
glTexStorage3D
glTexStorage3DContextANGLE
glTexStorage3DEXT
glTexStorage3DEXTContextANGLE
glTexStorage3DMultisample
glTexStorage3DMultisampleOES
glTexStorage3DMultisampleOESContextANGLE
glTexSubImage1D
glTexSubImage1DEXT
glTexSubImage2D
glTexSubImage2DContextANGLE
glTexSubImage2DEXT
glTexSubImage2DRobustANGLE
glTexSubImage2DRobustANGLEContextANGLE
glTexSubImage3D
glTexSubImage3DContextANGLE
glTexSubImage3DEXT
glTexSubImage3DOES
glTexSubImage3DRobustANGLE
glTexSubImage3DRobustANGLEContextANGLE
glTextureBarrier
glTextureBuffer
glTextureBufferEXT
glTextureBufferRange
glTextureBufferRangeEXT
glTextureParameterIiv
glTextureParameterIivEXT
glTextureParameterIuiv
glTextureParameterIuivEXT
glTextureParameterf
glTextureParameterfEXT
glTextureParameterfv
glTextureParameterfvEXT
glTextureParameteri
glTextureParameteriEXT
glTextureParameteriv
glTextureParameterivEXT
glTextureStorage1D
glTextureStorage1DEXT
glTextureStorage2D
glTextureStorage2DEXT
glTextureStorage2DMultisample
glTextureStorage2DMultisampleEXT
glTextureStorage3D
glTextureStorage3DEXT
glTextureStorage3DMultisample
glTextureStorage3DMultisampleEXT
glTextureSubImage1D
glTextureSubImage1DEXT
glTextureSubImage2D
glTextureSubImage2DEXT
glTextureSubImage3D
glTextureSubImage3DEXT
glTextureView
glTextureViewEXT
glTextureViewOES
glTransformFeedbackBufferBase
glTransformFeedbackBufferRange
glTransformFeedbackVaryings
glTransformFeedbackVaryingsContextANGLE
glTransformFeedbackVaryingsEXT
glTranslatef
glTranslatefContextANGLE
glTranslatex
glTranslatexContextANGLE
glUniform1d
glUniform1dv
glUniform1f
glUniform1fARB
glUniform1fContextANGLE
glUniform1fv
glUniform1fvARB
glUniform1fvContextANGLE
glUniform1i
glUniform1iARB
glUniform1iContextANGLE
glUniform1iv
glUniform1ivARB
glUniform1ivContextANGLE
glUniform1ui
glUniform1uiContextANGLE
glUniform1uiEXT
glUniform1uiv
glUniform1uivContextANGLE
glUniform1uivEXT
glUniform2d
glUniform2dv
glUniform2f
glUniform2fARB
glUniform2fContextANGLE
glUniform2fv
glUniform2fvARB
glUniform2fvContextANGLE
glUniform2i
glUniform2iARB
glUniform2iContextANGLE
glUniform2iv
glUniform2ivARB
glUniform2ivContextANGLE
glUniform2ui
glUniform2uiContextANGLE
glUniform2uiEXT
glUniform2uiv
glUniform2uivContextANGLE
glUniform2uivEXT
glUniform3d
glUniform3dv
glUniform3f
glUniform3fARB
glUniform3fContextANGLE
glUniform3fv
glUniform3fvARB
glUniform3fvContextANGLE
glUniform3i
glUniform3iARB
glUniform3iContextANGLE
glUniform3iv
glUniform3ivARB
glUniform3ivContextANGLE
glUniform3ui
glUniform3uiContextANGLE
glUniform3uiEXT
glUniform3uiv
glUniform3uivContextANGLE
glUniform3uivEXT
glUniform4d
glUniform4dv
glUniform4f
glUniform4fARB
glUniform4fContextANGLE
glUniform4fv
glUniform4fvARB
glUniform4fvContextANGLE
glUniform4i
glUniform4iARB
glUniform4iContextANGLE
glUniform4iv
glUniform4ivARB
glUniform4ivContextANGLE
glUniform4ui
glUniform4uiContextANGLE
glUniform4uiEXT
glUniform4uiv
glUniform4uivContextANGLE
glUniform4uivEXT
glUniformBlockBinding
glUniformBlockBindingContextANGLE
glUniformMatrix2dv
glUniformMatrix2fv
glUniformMatrix2fvARB
glUniformMatrix2fvContextANGLE
glUniformMatrix2x3dv
glUniformMatrix2x3fv
glUniformMatrix2x3fvContextANGLE
glUniformMatrix2x4dv
glUniformMatrix2x4fv
glUniformMatrix2x4fvContextANGLE
glUniformMatrix3dv
glUniformMatrix3fv
glUniformMatrix3fvARB
glUniformMatrix3fvContextANGLE
glUniformMatrix3x2dv
glUniformMatrix3x2fv
glUniformMatrix3x2fvContextANGLE
glUniformMatrix3x4dv
glUniformMatrix3x4fv
glUniformMatrix3x4fvContextANGLE
glUniformMatrix4dv
glUniformMatrix4fv
glUniformMatrix4fvARB
glUniformMatrix4fvContextANGLE
glUniformMatrix4x2dv
glUniformMatrix4x2fv
glUniformMatrix4x2fvContextANGLE
glUniformMatrix4x3dv
glUniformMatrix4x3fv
glUniformMatrix4x3fvContextANGLE
glUniformSubroutinesuiv
glUnmapBuffer
glUnmapBufferARB
glUnmapBufferContextANGLE
glUnmapBufferOES
glUnmapBufferOESContextANGLE
glUnmapNamedBuffer
glUnmapNamedBufferEXT
glUseProgram
glUseProgramContextANGLE
glUseProgramStages
glUseProgramStagesContextANGLE
glUseProgramStagesEXT
glValidateProgram
glValidateProgramARB
glValidateProgramContextANGLE
glValidateProgramPipeline
glValidateProgramPipelineContextANGLE
glValidateProgramPipelineEXT
glVertexArrayAttribBinding
glVertexArrayAttribFormat
glVertexArrayAttribIFormat
glVertexArrayAttribLFormat
glVertexArrayBindingDivisor
glVertexArrayElementBuffer
glVertexArrayVertexBuffer
glVertexArrayVertexBuffers
glVertexAttrib1d
glVertexAttrib1dARB
glVertexAttrib1dv
glVertexAttrib1dvARB
glVertexAttrib1f
glVertexAttrib1fARB
glVertexAttrib1fContextANGLE
glVertexAttrib1fv
glVertexAttrib1fvARB
glVertexAttrib1fvContextANGLE
glVertexAttrib1s
glVertexAttrib1sARB
glVertexAttrib1sv
glVertexAttrib1svARB
glVertexAttrib2d
glVertexAttrib2dARB
glVertexAttrib2dv
glVertexAttrib2dvARB
glVertexAttrib2f
glVertexAttrib2fARB
glVertexAttrib2fContextANGLE
glVertexAttrib2fv
glVertexAttrib2fvARB
glVertexAttrib2fvContextANGLE
glVertexAttrib2s
glVertexAttrib2sARB
glVertexAttrib2sv
glVertexAttrib2svARB
glVertexAttrib3d
glVertexAttrib3dARB
glVertexAttrib3dv
glVertexAttrib3dvARB
glVertexAttrib3f
glVertexAttrib3fARB
glVertexAttrib3fContextANGLE
glVertexAttrib3fv
glVertexAttrib3fvARB
glVertexAttrib3fvContextANGLE
glVertexAttrib3s
glVertexAttrib3sARB
glVertexAttrib3sv
glVertexAttrib3svARB
glVertexAttrib4Nbv
glVertexAttrib4NbvARB
glVertexAttrib4Niv
glVertexAttrib4NivARB
glVertexAttrib4Nsv
glVertexAttrib4NsvARB
glVertexAttrib4Nub
glVertexAttrib4NubARB
glVertexAttrib4Nubv
glVertexAttrib4NubvARB
glVertexAttrib4Nuiv
glVertexAttrib4NuivARB
glVertexAttrib4Nusv
glVertexAttrib4NusvARB
glVertexAttrib4bv
glVertexAttrib4bvARB
glVertexAttrib4d
glVertexAttrib4dARB
glVertexAttrib4dv
glVertexAttrib4dvARB
glVertexAttrib4f
glVertexAttrib4fARB
glVertexAttrib4fContextANGLE
glVertexAttrib4fv
glVertexAttrib4fvARB
glVertexAttrib4fvContextANGLE
glVertexAttrib4iv
glVertexAttrib4ivARB
glVertexAttrib4s
glVertexAttrib4sARB
glVertexAttrib4sv
glVertexAttrib4svARB
glVertexAttrib4ubv
glVertexAttrib4ubvARB
glVertexAttrib4uiv
glVertexAttrib4uivARB
glVertexAttrib4usv
glVertexAttrib4usvARB
glVertexAttribBinding
glVertexAttribBindingContextANGLE
glVertexAttribDivisor
glVertexAttribDivisorANGLE
glVertexAttribDivisorANGLEContextANGLE
glVertexAttribDivisorARB
glVertexAttribDivisorContextANGLE
glVertexAttribDivisorEXT
glVertexAttribFormat
glVertexAttribFormatContextANGLE
glVertexAttribI1i
glVertexAttribI1iEXT
glVertexAttribI1iv
glVertexAttribI1ivEXT
glVertexAttribI1ui
glVertexAttribI1uiEXT
glVertexAttribI1uiv
glVertexAttribI1uivEXT
glVertexAttribI2i
glVertexAttribI2iEXT
glVertexAttribI2iv
glVertexAttribI2ivEXT
glVertexAttribI2ui
glVertexAttribI2uiEXT
glVertexAttribI2uiv
glVertexAttribI2uivEXT
glVertexAttribI3i
glVertexAttribI3iEXT
glVertexAttribI3iv
glVertexAttribI3ivEXT
glVertexAttribI3ui
glVertexAttribI3uiEXT
glVertexAttribI3uiv
glVertexAttribI3uivEXT
glVertexAttribI4bv
glVertexAttribI4bvEXT
glVertexAttribI4i
glVertexAttribI4iContextANGLE
glVertexAttribI4iEXT
glVertexAttribI4iv
glVertexAttribI4ivContextANGLE
glVertexAttribI4ivEXT
glVertexAttribI4sv
glVertexAttribI4svEXT
glVertexAttribI4ubv
glVertexAttribI4ubvEXT
glVertexAttribI4ui
glVertexAttribI4uiContextANGLE
glVertexAttribI4uiEXT
glVertexAttribI4uiv
glVertexAttribI4uivContextANGLE
glVertexAttribI4uivEXT
glVertexAttribI4usv
glVertexAttribI4usvEXT
glVertexAttribIFormat
glVertexAttribIFormatContextANGLE
glVertexAttribIPointer
glVertexAttribIPointerContextANGLE
glVertexAttribIPointerEXT
glVertexAttribL1d
glVertexAttribL1dEXT
glVertexAttribL1dv
glVertexAttribL1dvEXT
glVertexAttribL2d
glVertexAttribL2dEXT
glVertexAttribL2dv
glVertexAttribL2dvEXT
glVertexAttribL3d
glVertexAttribL3dEXT
glVertexAttribL3dv
glVertexAttribL3dvEXT
glVertexAttribL4d
glVertexAttribL4dEXT
glVertexAttribL4dv
glVertexAttribL4dvEXT
glVertexAttribLFormat
glVertexAttribLPointer
glVertexAttribLPointerEXT
glVertexAttribP1ui
glVertexAttribP1uiv
glVertexAttribP2ui
glVertexAttribP2uiv
glVertexAttribP3ui
glVertexAttribP3uiv
glVertexAttribP4ui
glVertexAttribP4uiv
glVertexAttribPointer
glVertexAttribPointerARB
glVertexAttribPointerContextANGLE
glVertexBindingDivisor
glVertexBindingDivisorContextANGLE
glVertexPointer
glVertexPointerContextANGLE
glViewport
glViewportArrayv
glViewportArrayvOES
glViewportContextANGLE
glViewportIndexedf
glViewportIndexedfOES
glViewportIndexedfv
glViewportIndexedfvOES
glWaitSync
glWaitSyncContextANGLE
glWeightPointerOES
glWeightPointerOESContextANGLE
gl_BackColor
gl_BackSecondaryColor
gl_BaseInstance
gl_BaseInstanceARB
gl_BaseVertex
gl_BaseVertexARB
gl_BoundingBoxOES
gl_ClipDistance
gl_ClipDistance array size
gl_ClipVertex
gl_Color
gl_Color[
gl_Color[0]
gl_CullDistance
gl_CullDistance array size
gl_Depth
gl_DepthRange
gl_DepthRangeParameters
gl_DeviceIndex
gl_DrawID
gl_DrawIDARB
gl_FogCoord
gl_FogFragCoord
gl_FragColor
gl_FragCoord
gl_FragCoord can only be declared invariant if and only if gl_Position is declared invariant.
gl_FragCoord origin is upper left
gl_FragCoord pixel center is integer
gl_FragCoord redeclarations must match across shaders
gl_FragData
gl_FragDepth
gl_FragDepthEXT
gl_FragStencilRefARB
gl_FrontColor
gl_FrontFacing
gl_FrontSecondaryColor
gl_GlobalInvocationID
gl_HelperInvocation
gl_InstanceID
gl_InstanceId
gl_InstanceIndex
gl_InvocationID
gl_LastFragColor
gl_LastFragColorARM
gl_LastFragData
gl_Layer
gl_LocalInvocationID
gl_LocalInvocationIndex
gl_MaxAtomicCounterBindings
gl_MaxAtomicCounterBufferSize
gl_MaxClipDistances
gl_MaxCombinedAtomicCounterBuffers
gl_MaxCombinedAtomicCounters
gl_MaxCombinedImageUniforms
gl_MaxCombinedShaderOutputResources
gl_MaxCombinedTextureImageUnits
gl_MaxComputeAtomicCounterBuffers
gl_MaxComputeAtomicCounters
gl_MaxComputeImageUniforms
gl_MaxComputeTextureImageUnits
gl_MaxComputeUniformComponents
gl_MaxComputeWorkGroupCount
gl_MaxComputeWorkGroupSize
gl_MaxCullDistances
gl_MaxDrawBuffers
gl_MaxDualSourceDrawBuffersEXT
gl_MaxFragmentAtomicCounterBuffers
gl_MaxFragmentAtomicCounters
gl_MaxFragmentImageUniforms
gl_MaxFragmentInputVectors
gl_MaxFragmentUniformVectors
gl_MaxGeometryAtomicCounterBuffers
gl_MaxGeometryAtomicCounters
gl_MaxGeometryImageUniforms
gl_MaxGeometryInputComponents
gl_MaxGeometryOutputComponents
gl_MaxGeometryOutputVertices
gl_MaxGeometryTextureImageUnits
gl_MaxGeometryTotalOutputComponents
gl_MaxGeometryUniformComponents
gl_MaxImageUnits
gl_MaxProgramTexelOffset
gl_MaxTextureCoords
gl_MaxTextureImageUnits
gl_MaxTransformFeedbackBuffers
gl_MaxTransformFeedbackBuffers is %d
gl_MaxTransformFeedbackInterleavedComponents
gl_MaxTransformFeedbackInterleavedComponents is %d
gl_MaxVaryingVectors
gl_MaxVertexAtomicCounterBuffers
gl_MaxVertexAtomicCounters
gl_MaxVertexAttribs
gl_MaxVertexImageUniforms
gl_MaxVertexOutputVectors
gl_MaxVertexTextureImageUnits
gl_MaxVertexUniformVectors
gl_MaxViewports
gl_MinProgramTexelOffset
gl_MultiTexCoord0
gl_MultiTexCoord1
gl_MultiTexCoord2
gl_MultiTexCoord3
gl_MultiTexCoord4
gl_MultiTexCoord5
gl_MultiTexCoord6
gl_MultiTexCoord7
gl_Normal
gl_NumSamples
gl_NumSubgroups
gl_NumWorkGroups
gl_PatchVerticesIn
gl_PerFragment
gl_PerVertex
gl_PointCoord
gl_PointCoord can only be declared invariant if and only if gl_PointSize is declared invariant.
gl_PointSize
gl_Position
gl_PrimitiveID
gl_PrimitiveIDIn
gl_SampleID
gl_SampleMask
gl_SampleMaskIn
gl_SamplePosition
gl_ScopeDevice
gl_ScopeInvocation
gl_ScopeSubgroup
gl_ScopeWorkgroup
gl_SecondaryColor
gl_SecondaryFragColorEXT
gl_SecondaryFragDataEXT
gl_SemanticsAcquire
gl_SemanticsAcquire must not be used with (image) atomic store
gl_SemanticsAcquireRelease
gl_SemanticsAcquireRelease must not be used with (image) atomic load/store
gl_SemanticsMakeAvailable
gl_SemanticsMakeAvailable requires gl_SemanticsRelease or gl_SemanticsAcquireRelease
gl_SemanticsMakeVisible
gl_SemanticsMakeVisible requires gl_SemanticsAcquire or gl_SemanticsAcquireRelease
gl_SemanticsRelaxed
gl_SemanticsRelease
gl_SemanticsRelease must not be used with (image) atomic load
gl_StorageSemanticsBuffer
gl_StorageSemanticsImage
gl_StorageSemanticsNone
gl_StorageSemanticsOutput
gl_StorageSemanticsShared
gl_SubGroupEqMaskARB
gl_SubGroupGeMaskARB
gl_SubGroupGtMaskARB
gl_SubGroupInvocationARB
gl_SubGroupLeMaskARB
gl_SubGroupLtMaskARB
gl_SubGroupSizeARB
gl_SubgroupEqMask
gl_SubgroupGeMask
gl_SubgroupGtMask
gl_SubgroupID
gl_SubgroupInvocationID
gl_SubgroupLeMask
gl_SubgroupLtMask
gl_SubgroupSize
gl_TessCoord
gl_TessLevelInner
gl_TessLevelOuter
gl_TexCoord
gl_TexCoord array size
gl_Vertex
gl_VertexID
gl_VertexId
gl_VertexIndex
gl_ViewID_OVR
gl_ViewIndex
gl_ViewportIndex
gl_WorkGroupID
gl_WorkGroupSize
gl_image
gl_in
gl_out
gl_texture
global
global const initializers must be constant
global storage input qualifier cannot be used in a compute shader
global storage output qualifier cannot be used in a compute shader
global variable initializers must be constant expressions
global variable initializers should be constant expressions (uniforms and globals are allowed in global initializers for legacy compatibility)
glslang_binary_double_output
gpu.angle
grad(
greaterThan
greaterThanEqual
groupMemoryBarrier
groupshared 
h>1my
hA_A^A]A\_^][
hHH;,
h[]_^
h[]_^A\A]A^A_
h[]_^A\A]A^A_H
h[]_^A^A_
h[_^A\A^A_
h[_^A^
h[_^A^H
half float literal
half float matrix
half float vector
half floating-point suffix
halfBitsToInt16
halfBitsToUint16
halfPixelSize
halfRenderAreaHeight
header name too long
height
hexadecimal literal too big
hexadecimal literal too long
highp
highp 
highp   in uint  gl_NumSubgroups;highp   in uint  gl_SubgroupID;
highp   vec4  gl_FragCoord;        bool  gl_FrontFacing;mediump vec2  gl_PointCoord;highp   float gl_FragDepth;
highp   vec4  gl_Position;mediump float gl_PointSize;
highp float gl_FragDepthEXT;
highp float near;highp float far;highp float diff;
highp int
highp ivec2 textureSize(samplerExternalOES, int lod);vec4 texture(samplerExternalOES, vec2);vec4 texture(samplerExternalOES, vec2, float bias);vec4 textureProj(samplerExternalOES, vec3);vec4 textureProj(samplerExternalOES, vec3, float bias);vec4 textureProj(samplerExternalOES, vec4);vec4 textureProj(samplerExternalOES, vec4, float bias);vec4 texelFetch(samplerExternalOES, ivec2, int lod);
highp precision qualifier
highp uint
highp uint packSnorm2x16(vec2);      vec2 unpackSnorm2x16(highp uint);highp uint packHalf2x16(vec2);
highp uint packSnorm4x8(vec4);highp uint packUnorm4x8(vec4);
highp uint packUnorm2x16(vec2);vec2 unpackUnorm2x16(highp uint);
highp vec4  gl_Position;highp float gl_PointSize;
hint requires OES_standard_derivatives.
histogramBoolean
histogramCustomCounts
histogramEnumeration
histogramSparse
hj>>d
hlsl-offsets
host unreachable
hvec2
hvec3
hvec4
hyp. cosine
hyp. sine
hyp. tangent
i16vec2
i16vec3
i16vec4
i32vec2
i32vec3
i32vec4
i64vec2
i64vec3
i64vec4
i8vec2
i8vec3
i8vec4
iCould not create DXGI factory.
iMulExtended
identifier not previously declared
identifier removed
identifier_list
identifiers containing consecutive underscores ("__") are reserved
identifiers containing consecutive underscores ("__") are reserved, and an error if version <= 300
identifiers containing two consecutive underscores (__) are reserved as possible future keywords
identifiers starting with "gl_" are reserved
if (!Break
if level is zero and the texture is incomplete, it must have all of its faces specified at level zero.
if level is zero and the texture is incomplete, it must have no mip levels specified except zero.
ifdef
ifndef
iimage1D
iimage1DArray
iimage2D
iimage2DArray
iimage2DMS
iimage2DMSArray
iimage2DRect
iimage3D
iimageBuffer
iimageCube
iimageCubeArray
illegal - vector component fields not from the same set
illegal byte sequence
illegal type argument for default precision qualifier
illegal type for precision qualifier
illegal use of escape character
illegal use of type 'void'
illegal vector field selection
image
image binding greater than gl_MaxImageUnits
image is not valid.
image load store
image load-store format
image uniform
image variables not declared 'writeonly' and without a format layout qualifier
image1D
image1DArray
image2D
image2DArray
image2DMS
image2DMSArray
image2DRect
image3D
imageAtomic
imageAtomicAdd
imageAtomicAnd
imageAtomicCompSwap
imageAtomicExchange
imageAtomicLoad
imageAtomicMax
imageAtomicMin
imageAtomicOr
imageAtomicStore
imageAtomicXor
imageBuffer
imageCube
imageCubeArray
imageLoad
imageQuerySamples
imageQuerySize
imageSamples
imageSamples(readonly writeonly volatile coherent 
imageSize
imageSize must be 0 if no texture data is provided.
imageSize must be at least 
imageStore
imageStore(0h1C3D
imageStore(0j2C3C
imageStore(0l2C3B
imageStore(0n2C3D
imageStore(0p2C3C
images
implementation_version
implicitly sized array constructor must have at least one argument
implicitly sized array of arrays constructor argument dimensionality is too low
implicitly sized array of arrays constructor argument is not an array
implicitly sized array supported in GLSL ES 3.00 and above only
implicitly sized arrays need to be initialized
imulExtended
imulExtended(0C0C0C0C
imulExtended(1C1C1C1C
imulExtended(2C2C2C2C
imulExtended(3C3C3C3C
in    highp uvec3 gl_NumWorkGroups;const highp uvec3 gl_WorkGroupSize = uvec3(1,1,1);in highp uvec3 gl_WorkGroupID;in highp uvec3 gl_LocalInvocationID;in highp uvec3 gl_GlobalInvocationID;in highp uint gl_LocalInvocationIndex;
in float gl_ClipDistance[];
in float gl_CullDistance[];bool gl_HelperInvocation;
in float gl_FogFragCoord;in vec4  gl_TexCoord[];in vec4  gl_Color;in vec4  gl_SecondaryColor;
in float pointsize;
in for stage inputs
in gl_PerFragment {in float gl_FogFragCoord;in vec4  gl_TexCoord[];in vec4  gl_Color;in vec4  gl_SecondaryColor;};
in gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize;} gl_in[];
in gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize;} gl_in[gl_MaxPatchVertices];
in gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];
in highp int gl_DeviceIndex;
in highp int gl_DeviceIndex;in highp int gl_ViewIndex;
in highp int gl_PatchVerticesIn;in highp int gl_PrimitiveID;in highp int gl_InvocationID;out gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize;
in highp int gl_PatchVerticesIn;in highp int gl_PrimitiveID;in highp vec3 gl_TessCoord;patch in highp float gl_TessLevelOuter[4];patch in highp float gl_TessLevelInner[2];out gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize;
in highp int gl_PrimitiveIDIn;in highp int gl_InvocationID;
in highp int gl_VertexID;in highp int gl_InstanceID;
in highp int gl_VertexIndex;in highp int gl_InstanceIndex;
in highp uint gl_ViewID_OVR;
in int gl_BaseVertex;in int gl_BaseInstance;in int gl_DrawID;
in int gl_BaseVertexARB;in int gl_BaseInstanceARB;in int gl_DrawIDARB;
in int gl_InvocationID;
in int gl_PatchVerticesIn;in int gl_PrimitiveID;in int gl_InvocationID;out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];
in int gl_PatchVerticesIn;in int gl_PrimitiveID;in vec3 gl_TessCoord;patch in float gl_TessLevelOuter[4];patch in float gl_TessLevelInner[2];out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];
in int gl_VertexIndex;in int gl_InstanceIndex;
in mediump uint  gl_SubgroupSize;in mediump uint  gl_SubgroupInvocationID;in highp   uvec4 gl_SubgroupEqMask;in highp   uvec4 gl_SubgroupGeMask;in highp   uvec4 gl_SubgroupGtMask;in highp   uvec4 gl_SubgroupLeMask;in highp   uvec4 gl_SubgroupLtMask;
in type qualifier supported in GLSL ES 3.10 only
in vec3 normal;
in vec3 normal_varying;
in vec4  gl_Color;in vec4  gl_SecondaryColor;in vec3  gl_Normal;in vec4  gl_Vertex;in vec4  gl_MultiTexCoord0;in vec4  gl_MultiTexCoord1;in vec4  gl_MultiTexCoord2;in vec4  gl_MultiTexCoord3;in vec4  gl_MultiTexCoord4;in vec4  gl_MultiTexCoord5;in vec4  gl_MultiTexCoord6;in vec4  gl_MultiTexCoord7;in float gl_FogCoord;
in vec4 color;
in vec4 color_varying;
in vec4 pos;
in vec4 pos_varying;
in vec4 texcoord0;
in vec4 texcoord0_varying;
in vec4 texcoord1;
in vec4 texcoord1_varying;
in vec4 texcoord2;
in vec4 texcoord2_varying;
in vec4 texcoord3;
in vec4 texcoord3_varying;
in xfb mode
in/out must appear before const
inappropriate io control operation
include
inclusive-or
inclusive_or_expression
incomplete method syntax
inconsistent input primitive for array size of
inconsistent output number of vertices for array size of
incorrect directive, expected identifier
index
index = 
index expression is negative
index is greater than or equal to the number of ATOMIC_COUNTER_BUFFER indexed binding points.
index is greater than or equal to the number of SHADER_STORAGE_BUFFER indexed binding points.
index is greater than or equal to the number of TRANSFORM_FEEDBACK_BUFFER indexed binding points.
index is greater than or equal to the number of UNIFORM_BUFFER indexed binding points.
index is outside the valid range for GL_ATOMIC_COUNTER_BUFFER_BINDING
index is outside the valid range for GL_SHADER_STORAGE_BUFFER_BINDING
index layout qualifier on fragment output
index must be less than the number of extension strings.
index must be less than the number of requestable extension strings.
index must be smaller than MAX_VERTEX_ATTRIB_BINDINGS.
index out of range '%d'
indexable
indirect index
indirect is not a multiple of the size, in basic machine units, of uint
inductive loop index modified
inductive loop requires a scalar 'int' or 'float' loop index
inductive-loop condition requires the form "loop-index <comparison-op> constant-expression"
inductive-loop init-declaration requires the form "type-specifier loop-index = constant-expression"
inductive-loop termination requires the form "loop-index++, loop-index--, loop-index += constant-expression, or loop-index -= constant-expression"
init-expression in a switch statement must be a scalar integer
initGLBuiltins(input);
initGlobals
initMipmapImages
init_declarator_list
initialize
initialize first child with second child
initializeContents
initializeD3DDevice
initializeImpl
initializer
initializer list
initializer requires a variable, not a member
initializer_list
inity
inline
inout
input
input block
input layout
input primitive = 
input.
input.v
input_attachment_index
instance_extensions
int    mix(int    x, int    y, bool  a);ivec2  mix(ivec2  x, ivec2  y, bvec2 a);ivec3  mix(ivec3  x, ivec3  y, bvec3 a);ivec4  mix(ivec4  x, ivec4  y, bvec4 a);uint   mix(uint   x, uint   y, bool  a);uvec2  mix(uvec2  x, uvec2  y, bvec2 a);uvec3  mix(uvec3  x, uvec3  y, bvec3 a);uvec4  mix(uvec4  x, uvec4  y, bvec4 a);bool   mix(bool   x, bool   y, bool  a);bvec2  mix(bvec2  x, bvec2  y, bvec2 a);bvec3  mix(bvec3  x, bvec3  y, bvec3 a);bvec4  mix(bvec4  x, bvec4  y, bvec4 a);
int    subgroupAdd(int);
int    subgroupAnd(int);
int    subgroupBroadcast(int, uint);
int    subgroupBroadcastFirst(int);
int    subgroupClusteredAdd(int, uint);
int    subgroupClusteredAnd(int, uint);
int    subgroupClusteredMax(int, uint);
int    subgroupClusteredMin(int, uint);
int    subgroupClusteredMul(int, uint);
int    subgroupClusteredOr(int, uint);
int    subgroupClusteredXor(int, uint);
int    subgroupExclusiveAdd(int);
int    subgroupExclusiveAnd(int);
int    subgroupExclusiveMax(int);
int    subgroupExclusiveMin(int);
int    subgroupExclusiveMul(int);
int    subgroupExclusiveOr(int);
int    subgroupExclusiveXor(int);
int    subgroupInclusiveAdd(int);
int    subgroupInclusiveAnd(int);
int    subgroupInclusiveMax(int);
int    subgroupInclusiveMin(int);
int    subgroupInclusiveMul(int);
int    subgroupInclusiveOr(int);
int    subgroupInclusiveXor(int);
int    subgroupMax(int);
int    subgroupMin(int);
int    subgroupMul(int);
int    subgroupOr(int);
int    subgroupQuadBroadcast(int, uint);
int    subgroupQuadSwapDiagonal(int);
int    subgroupQuadSwapHorizontal(int);
int    subgroupQuadSwapVertical(int);
int    subgroupShuffle(int, uint);
int    subgroupShuffleDown(int, uint delta);
int    subgroupShuffleUp(int, uint delta);
int    subgroupShuffleXor(int, uint);
int    subgroupXor(int);
int   floatBitsToInt(highp float value);ivec2 floatBitsToInt(highp vec2  value);ivec3 floatBitsToInt(highp vec3  value);ivec4 floatBitsToInt(highp vec4  value);uint  floatBitsToUint(highp float value);uvec2 floatBitsToUint(highp vec2  value);uvec3 floatBitsToUint(highp vec3  value);uvec4 floatBitsToUint(highp vec4  value);float intBitsToFloat(highp int   value);vec2  intBitsToFloat(highp ivec2 value);vec3  intBitsToFloat(highp ivec3 value);vec4  intBitsToFloat(highp ivec4 value);float uintBitsToFloat(highp uint  value);vec2  uintBitsToFloat(highp uvec2 value);vec3  uintBitsToFloat(highp uvec3 value);vec4  uintBitsToFloat(highp uvec4 value);
int abs_emu(int x) { return x * sign(x); }
int bitfieldExtract_emu(int value, int offset, int bits)
int bitfieldInsert_emu(int base, int insert, int offset, int bits)
int gl_InstanceID;
int gl_VertexID;
int sparseImageLoadARB(readonly volatile coherent 
int textureQueryLevels(
int webgl_int_clamp(int value, int minValue, int maxValue) { return ((value < minValue) ? minValue : ((value > maxValue) ? maxValue : value)); }
int webgl_toSnorm16(in float x) {
int webgl_toSnorm8(in float x) {
int wrapR = (samplerMetadata[samplerIndex].wrapModes >> 4) & 0x3;
int wrapS = samplerMetadata[samplerIndex].wrapModes & 0x3;
int wrapT = (samplerMetadata[samplerIndex].wrapModes >> 2) & 0x3;
int(floor(height * frac(
int(floor(width * frac(
int(max(0, min(layers - 1, floor(0.5 + t.z))))
int16BitsToFloat16
int16BitsToHalf
int16_t
int2 bitfieldExtract_emu(int2 value, int offset, int bits)
int2 bitfieldInsert_emu(int2 base, int2 insert, int offset, int bits)
int3 bitfieldExtract_emu(int3 value, int offset, int bits)
int3 bitfieldInsert_emu(int3 base, int3 insert, int offset, int bits)
int32_t
int4 bitfieldExtract_emu(int4 value, int offset, int bits)
int4 bitfieldInsert_emu(int4 base, int4 insert, int offset, int bits)
int64BitsToDouble
int64_t
int64_t abs(int64_t);i64vec2 abs(i64vec2);i64vec3 abs(i64vec3);i64vec4 abs(i64vec4);int64_t sign(int64_t);i64vec2 sign(i64vec2);i64vec3 sign(i64vec3);i64vec4 sign(i64vec4);int64_t  min(int64_t,  int64_t);i64vec2  min(i64vec2,  int64_t);i64vec3  min(i64vec3,  int64_t);i64vec4  min(i64vec4,  int64_t);i64vec2  min(i64vec2,  i64vec2);i64vec3  min(i64vec3,  i64vec3);i64vec4  min(i64vec4,  i64vec4);uint64_t min(uint64_t, uint64_t);u64vec2  min(u64vec2,  uint64_t);u64vec3  min(u64vec3,  uint64_t);u64vec4  min(u64vec4,  uint64_t);u64vec2  min(u64vec2,  u64vec2);u64vec3  min(u64vec3,  u64vec3);u64vec4  min(u64vec4,  u64vec4);int64_t  max(int64_t,  int64_t);i64vec2  max(i64vec2,  int64_t);i64vec3  max(i64vec3,  int64_t);i64vec4  max(i64vec4,  int64_t);i64vec2  max(i64vec2,  i64vec2);i64vec3  max(i64vec3,  i64vec3);i64vec4  max(i64vec4,  i64vec4);uint64_t max(uint64_t, uint64_t);u64vec2  max(u64vec2,  uint64_t);u64vec3  max(u64vec3,  uint64_t);u64vec4  max(u64vec4,  uint64_t);u64vec2  max(u64vec2,  u64vec2);u64vec3  max(u64vec3,  u64vec3);u64vec4  max(u64vec4,  u64vec4);int64_t  clamp(int64_t,  int64_t,  int64_t);i64vec2  clamp(i64vec2,  int64_t,  int64_t);i64vec3  clamp(i64vec3,  int64_t,  int64_t);i64vec4  clamp(i64vec4,  int64_t,  int64_t);i64vec2  clamp(i64vec2,  i64vec2,  i64vec2);i64vec3  clamp(i64vec3,  i64vec3,  i64vec3);i64vec4  clamp(i64vec4,  i64vec4,  i64vec4);uint64_t clamp(uint64_t, uint64_t, uint64_t);u64vec2  clamp(u64vec2,  uint64_t, uint64_t);u64vec3  clamp(u64vec3,  uint64_t, uint64_t);u64vec4  clamp(u64vec4,  uint64_t, uint64_t);u64vec2  clamp(u64vec2,  u64vec2,  u64vec2);u64vec3  clamp(u64vec3,  u64vec3,  u64vec3);u64vec4  clamp(u64vec4,  u64vec4,  u64vec4);int64_t  mix(int64_t,  int64_t,  bool);i64vec2  mix(i64vec2,  i64vec2,  bvec2);i64vec3  mix(i64vec3,  i64vec3,  bvec3);i64vec4  mix(i64vec4,  i64vec4,  bvec4);uint64_t mix(uint64_t, uint64_t, bool);u64vec2  mix(u64vec2,  u64vec2,  bvec2);u64vec3  mix(u64vec3,  u64vec3,  bvec3);u64vec4  mix(u64vec4,  u64vec4,  bvec4);int64_t doubleBitsToInt64(double);i64vec2 doubleBitsToInt64(dvec2);i64vec3 doubleBitsToInt64(dvec3);i64vec4 doubleBitsToInt64(dvec4);uint64_t doubleBitsToUint64(double);u64vec2  doubleBitsToUint64(dvec2);u64vec3  doubleBitsToUint64(dvec3);u64vec4  doubleBitsToUint64(dvec4);double int64BitsToDouble(int64_t);dvec2  int64BitsToDouble(i64vec2);dvec3  int64BitsToDouble(i64vec3);dvec4  int64BitsToDouble(i64vec4);double uint64BitsToDouble(uint64_t);dvec2  uint64BitsToDouble(u64vec2);dvec3  uint64BitsToDouble(u64vec3);dvec4  uint64BitsToDouble(u64vec4);int64_t  packInt2x32(ivec2);uint64_t packUint2x32(uvec2);ivec2    unpackInt2x32(int64_t);uvec2    unpackUint2x32(uint64_t);bvec2 lessThan(i64vec2, i64vec2);bvec3 lessThan(i64vec3, i64vec3);bvec4 lessThan(i64vec4, i64vec4);bvec2 lessThan(u64vec2, u64vec2);bvec3 lessThan(u64vec3, u64vec3);bvec4 lessThan(u64vec4, u64vec4);bvec2 lessThanEqual(i64vec2, i64vec2);bvec3 lessThanEqual(i64vec3, i64vec3);bvec4 lessThanEqual(i64vec4, i64vec4);bvec2 lessThanEqual(u64vec2, u64vec2);bvec3 lessThanEqual(u64vec3, u64vec3);bvec4 lessThanEqual(u64vec4, u64vec4);bvec2 greaterThan(i64vec2, i64vec2);bvec3 greaterThan(i64vec3, i64vec3);bvec4 greaterThan(i64vec4, i64vec4);bvec2 greaterThan(u64vec2, u64vec2);bvec3 greaterThan(u64vec3, u64vec3);bvec4 greaterThan(u64vec4, u64vec4);bvec2 greaterThanEqual(i64vec2, i64vec2);bvec3 greaterThanEqual(i64vec3, i64vec3);bvec4 greaterThanEqual(i64vec4, i64vec4);bvec2 greaterThanEqual(u64vec2, u64vec2);bvec3 greaterThanEqual(u64vec3, u64vec3);bvec4 greaterThanEqual(u64vec4, u64vec4);bvec2 equal(i64vec2, i64vec2);bvec3 equal(i64vec3, i64vec3);bvec4 equal(i64vec4, i64vec4);bvec2 equal(u64vec2, u64vec2);bvec3 equal(u64vec3, u64vec3);bvec4 equal(u64vec4, u64vec4);bvec2 notEqual(i64vec2, i64vec2);bvec3 notEqual(i64vec3, i64vec3);bvec4 notEqual(i64vec4, i64vec4);bvec2 notEqual(u64vec2, u64vec2);bvec3 notEqual(u64vec3, u64vec3);bvec4 notEqual(u64vec4, u64vec4);int   findLSB(int64_t);ivec2 findLSB(i64vec2);ivec3 findLSB(i64vec3);ivec4 findLSB(i64vec4);int   findLSB(uint64_t);ivec2 findLSB(u64vec2);ivec3 findLSB(u64vec3);ivec4 findLSB(u64vec4);int   findMSB(int64_t);ivec2 findMSB(i64vec2);ivec3 findMSB(i64vec3);ivec4 findMSB(i64vec4);int   findMSB(uint64_t);ivec2 findMSB(u64vec2);ivec3 findMSB(u64vec3);ivec4 findMSB(u64vec4);
int8_t
int8_t abs(int8_t);i8vec2 abs(i8vec2);i8vec3 abs(i8vec3);i8vec4 abs(i8vec4);int8_t sign(int8_t);i8vec2 sign(i8vec2);i8vec3 sign(i8vec3);i8vec4 sign(i8vec4);int8_t min(int8_t x, int8_t y);i8vec2 min(i8vec2 x, int8_t y);i8vec3 min(i8vec3 x, int8_t y);i8vec4 min(i8vec4 x, int8_t y);i8vec2 min(i8vec2 x, i8vec2 y);i8vec3 min(i8vec3 x, i8vec3 y);i8vec4 min(i8vec4 x, i8vec4 y);uint8_t min(uint8_t x, uint8_t y);u8vec2 min(u8vec2 x, uint8_t y);u8vec3 min(u8vec3 x, uint8_t y);u8vec4 min(u8vec4 x, uint8_t y);u8vec2 min(u8vec2 x, u8vec2 y);u8vec3 min(u8vec3 x, u8vec3 y);u8vec4 min(u8vec4 x, u8vec4 y);int8_t max(int8_t x, int8_t y);i8vec2 max(i8vec2 x, int8_t y);i8vec3 max(i8vec3 x, int8_t y);i8vec4 max(i8vec4 x, int8_t y);i8vec2 max(i8vec2 x, i8vec2 y);i8vec3 max(i8vec3 x, i8vec3 y);i8vec4 max(i8vec4 x, i8vec4 y);uint8_t max(uint8_t x, uint8_t y);u8vec2 max(u8vec2 x, uint8_t y);u8vec3 max(u8vec3 x, uint8_t y);u8vec4 max(u8vec4 x, uint8_t y);u8vec2 max(u8vec2 x, u8vec2 y);u8vec3 max(u8vec3 x, u8vec3 y);u8vec4 max(u8vec4 x, u8vec4 y);int8_t    clamp(int8_t x, int8_t minVal, int8_t maxVal);i8vec2  clamp(i8vec2  x, int8_t minVal, int8_t maxVal);i8vec3  clamp(i8vec3  x, int8_t minVal, int8_t maxVal);i8vec4  clamp(i8vec4  x, int8_t minVal, int8_t maxVal);i8vec2  clamp(i8vec2  x, i8vec2  minVal, i8vec2  maxVal);i8vec3  clamp(i8vec3  x, i8vec3  minVal, i8vec3  maxVal);i8vec4  clamp(i8vec4  x, i8vec4  minVal, i8vec4  maxVal);uint8_t   clamp(uint8_t x, uint8_t minVal, uint8_t maxVal);u8vec2  clamp(u8vec2  x, uint8_t minVal, uint8_t maxVal);u8vec3  clamp(u8vec3  x, uint8_t minVal, uint8_t maxVal);u8vec4  clamp(u8vec4  x, uint8_t minVal, uint8_t maxVal);u8vec2  clamp(u8vec2  x, u8vec2  minVal, u8vec2  maxVal);u8vec3  clamp(u8vec3  x, u8vec3  minVal, u8vec3  maxVal);u8vec4  clamp(u8vec4  x, u8vec4  minVal, u8vec4  maxVal);int8_t  mix(int8_t,  int8_t,  bool);i8vec2  mix(i8vec2,  i8vec2,  bvec2);i8vec3  mix(i8vec3,  i8vec3,  bvec3);i8vec4  mix(i8vec4,  i8vec4,  bvec4);uint8_t mix(uint8_t, uint8_t, bool);u8vec2  mix(u8vec2,  u8vec2,  bvec2);u8vec3  mix(u8vec3,  u8vec3,  bvec3);u8vec4  mix(u8vec4,  u8vec4,  bvec4);bvec2 lessThan(i8vec2, i8vec2);bvec3 lessThan(i8vec3, i8vec3);bvec4 lessThan(i8vec4, i8vec4);bvec2 lessThan(u8vec2, u8vec2);bvec3 lessThan(u8vec3, u8vec3);bvec4 lessThan(u8vec4, u8vec4);bvec2 lessThanEqual(i8vec2, i8vec2);bvec3 lessThanEqual(i8vec3, i8vec3);bvec4 lessThanEqual(i8vec4, i8vec4);bvec2 lessThanEqual(u8vec2, u8vec2);bvec3 lessThanEqual(u8vec3, u8vec3);bvec4 lessThanEqual(u8vec4, u8vec4);bvec2 greaterThan(i8vec2, i8vec2);bvec3 greaterThan(i8vec3, i8vec3);bvec4 greaterThan(i8vec4, i8vec4);bvec2 greaterThan(u8vec2, u8vec2);bvec3 greaterThan(u8vec3, u8vec3);bvec4 greaterThan(u8vec4, u8vec4);bvec2 greaterThanEqual(i8vec2, i8vec2);bvec3 greaterThanEqual(i8vec3, i8vec3);bvec4 greaterThanEqual(i8vec4, i8vec4);bvec2 greaterThanEqual(u8vec2, u8vec2);bvec3 greaterThanEqual(u8vec3, u8vec3);bvec4 greaterThanEqual(u8vec4, u8vec4);bvec2 equal(i8vec2, i8vec2);bvec3 equal(i8vec3, i8vec3);bvec4 equal(i8vec4, i8vec4);bvec2 equal(u8vec2, u8vec2);bvec3 equal(u8vec3, u8vec3);bvec4 equal(u8vec4, u8vec4);bvec2 notEqual(i8vec2, i8vec2);bvec3 notEqual(i8vec3, i8vec3);bvec4 notEqual(i8vec4, i8vec4);bvec2 notEqual(u8vec2, u8vec2);bvec3 notEqual(u8vec3, u8vec3);bvec4 notEqual(u8vec4, u8vec4);  int8_t bitfieldExtract(  int8_t, int8_t, int8_t);i8vec2 bitfieldExtract(i8vec2, int8_t, int8_t);i8vec3 bitfieldExtract(i8vec3, int8_t, int8_t);i8vec4 bitfieldExtract(i8vec4, int8_t, int8_t); uint8_t bitfieldExtract( uint8_t, int8_t, int8_t);u8vec2 bitfieldExtract(u8vec2, int8_t, int8_t);u8vec3 bitfieldExtract(u8vec3, int8_t, int8_t);u8vec4 bitfieldExtract(u8vec4, int8_t, int8_t);  int8_t bitfieldInsert(  int8_t base,   int8_t, int8_t, int8_t);i8vec2 bitfieldInsert(i8vec2 base, i8vec2, int8_t, int8_t);i8vec3 bitfieldInsert(i8vec3 base, i8vec3, int8_t, int8_t);i8vec4 bitfieldInsert(i8vec4 base, i8vec4, int8_t, int8_t); uint8_t bitfieldInsert( uint8_t base,  uint8_t, int8_t, int8_t);u8vec2 bitfieldInsert(u8vec2 base, u8vec2, int8_t, int8_t);u8vec3 bitfieldInsert(u8vec3 base, u8vec3, int8_t, int8_t);u8vec4 bitfieldInsert(u8vec4 base, u8vec4, int8_t, int8_t);  int8_t bitCount(  int8_t);i8vec2 bitCount(i8vec2);i8vec3 bitCount(i8vec3);i8vec4 bitCount(i8vec4);  int8_t bitCount( uint8_t);i8vec2 bitCount(u8vec2);i8vec3 bitCount(u8vec3);i8vec4 bitCount(u8vec4);  int8_t findLSB(  int8_t);i8vec2 findLSB(i8vec2);i8vec3 findLSB(i8vec3);i8vec4 findLSB(i8vec4);  int8_t findLSB( uint8_t);i8vec2 findLSB(u8vec2);i8vec3 findLSB(u8vec3);i8vec4 findLSB(u8vec4);  int8_t findMSB(  int8_t);i8vec2 findMSB(i8vec2);i8vec3 findMSB(i8vec3);i8vec4 findMSB(i8vec4);  int8_t findMSB( uint8_t);i8vec2 findMSB(u8vec2);i8vec3 findMSB(u8vec3);i8vec4 findMSB(u8vec4);int16_t abs(int16_t);i16vec2 abs(i16vec2);i16vec3 abs(i16vec3);i16vec4 abs(i16vec4);int16_t sign(int16_t);i16vec2 sign(i16vec2);i16vec3 sign(i16vec3);i16vec4 sign(i16vec4);int16_t min(int16_t x, int16_t y);i16vec2 min(i16vec2 x, int16_t y);i16vec3 min(i16vec3 x, int16_t y);i16vec4 min(i16vec4 x, int16_t y);i16vec2 min(i16vec2 x, i16vec2 y);i16vec3 min(i16vec3 x, i16vec3 y);i16vec4 min(i16vec4 x, i16vec4 y);uint16_t min(uint16_t x, uint16_t y);u16vec2 min(u16vec2 x, uint16_t y);u16vec3 min(u16vec3 x, uint16_t y);u16vec4 min(u16vec4 x, uint16_t y);u16vec2 min(u16vec2 x, u16vec2 y);u16vec3 min(u16vec3 x, u16vec3 y);u16vec4 min(u16vec4 x, u16vec4 y);int16_t max(int16_t x, int16_t y);i16vec2 max(i16vec2 x, int16_t y);i16vec3 max(i16vec3 x, int16_t y);i16vec4 max(i16vec4 x, int16_t y);i16vec2 max(i16vec2 x, i16vec2 y);i16vec3 max(i16vec3 x, i16vec3 y);i16vec4 max(i16vec4 x, i16vec4 y);uint16_t max(uint16_t x, uint16_t y);u16vec2 max(u16vec2 x, uint16_t y);u16vec3 max(u16vec3 x, uint16_t y);u16vec4 max(u16vec4 x, uint16_t y);u16vec2 max(u16vec2 x, u16vec2 y);u16vec3 max(u16vec3 x, u16vec3 y);u16vec4 max(u16vec4 x, u16vec4 y);int16_t    clamp(int16_t x, int16_t minVal, int16_t maxVal);i16vec2  clamp(i16vec2  x, int16_t minVal, int16_t maxVal);i16vec3  clamp(i16vec3  x, int16_t minVal, int16_t maxVal);i16vec4  clamp(i16vec4  x, int16_t minVal, int16_t maxVal);i16vec2  clamp(i16vec2  x, i16vec2  minVal, i16vec2  maxVal);i16vec3  clamp(i16vec3  x, i16vec3  minVal, i16vec3  maxVal);i16vec4  clamp(i16vec4  x, i16vec4  minVal, i16vec4  maxVal);uint16_t   clamp(uint16_t x, uint16_t minVal, uint16_t maxVal);u16vec2  clamp(u16vec2  x, uint16_t minVal, uint16_t maxVal);u16vec3  clamp(u16vec3  x, uint16_t minVal, uint16_t maxVal);u16vec4  clamp(u16vec4  x, uint16_t minVal, uint16_t maxVal);u16vec2  clamp(u16vec2  x, u16vec2  minVal, u16vec2  maxVal);u16vec3  clamp(u16vec3  x, u16vec3  minVal, u16vec3  maxVal);u16vec4  clamp(u16vec4  x, u16vec4  minVal, u16vec4  maxVal);int16_t  mix(int16_t,  int16_t,  bool);i16vec2  mix(i16vec2,  i16vec2,  bvec2);i16vec3  mix(i16vec3,  i16vec3,  bvec3);i16vec4  mix(i16vec4,  i16vec4,  bvec4);uint16_t mix(uint16_t, uint16_t, bool);u16vec2  mix(u16vec2,  u16vec2,  bvec2);u16vec3  mix(u16vec3,  u16vec3,  bvec3);u16vec4  mix(u16vec4,  u16vec4,  bvec4);float16_t frexp(float16_t, out int16_t);f16vec2   frexp(f16vec2,   out i16vec2);f16vec3   frexp(f16vec3,   out i16vec3);f16vec4   frexp(f16vec4,   out i16vec4);float16_t ldexp(float16_t, int16_t);f16vec2   ldexp(f16vec2,   i16vec2);f16vec3   ldexp(f16vec3,   i16vec3);f16vec4   ldexp(f16vec4,   i16vec4);int16_t halfBitsToInt16(float16_t);i16vec2 halfBitsToInt16(f16vec2);i16vec3 halhBitsToInt16(f16vec3);i16vec4 halfBitsToInt16(f16vec4);uint16_t halfBitsToUint16(float16_t);u16vec2  halfBitsToUint16(f16vec2);u16vec3  halfBitsToUint16(f16vec3);u16vec4  halfBitsToUint16(f16vec4);int16_t float16BitsToInt16(float16_t);i16vec2 float16BitsToInt16(f16vec2);i16vec3 float16BitsToInt16(f16vec3);i16vec4 float16BitsToInt16(f16vec4);uint16_t float16BitsToUint16(float16_t);u16vec2  float16BitsToUint16(f16vec2);u16vec3  float16BitsToUint16(f16vec3);u16vec4  float16BitsToUint16(f16vec4);float16_t int16BitsToFloat16(int16_t);f16vec2   int16BitsToFloat16(i16vec2);f16vec3   int16BitsToFloat16(i16vec3);f16vec4   int16BitsToFloat16(i16vec4);float16_t uint16BitsToFloat16(uint16_t);f16vec2   uint16BitsToFloat16(u16vec2);f16vec3   uint16BitsToFloat16(u16vec3);f16vec4   uint16BitsToFloat16(u16vec4);float16_t int16BitsToHalf(int16_t);f16vec2   int16BitsToHalf(i16vec2);f16vec3   int16BitsToHalf(i16vec3);f16vec4   int16BitsToHalf(i16vec4);float16_t uint16BitsToHalf(uint16_t);f16vec2   uint16BitsToHalf(u16vec2);f16vec3   uint16BitsToHalf(u16vec3);f16vec4   uint16BitsToHalf(u16vec4);int      packInt2x16(i16vec2);uint     packUint2x16(u16vec2);int64_t  packInt4x16(i16vec4);uint64_t packUint4x16(u16vec4);i16vec2  unpackInt2x16(int);u16vec2  unpackUint2x16(uint);i16vec4  unpackInt4x16(int64_t);u16vec4  unpackUint4x16(uint64_t);bvec2 lessThan(i16vec2, i16vec2);bvec3 lessThan(i16vec3, i16vec3);bvec4 lessThan(i16vec4, i16vec4);bvec2 lessThan(u16vec2, u16vec2);bvec3 lessThan(u16vec3, u16vec3);bvec4 lessThan(u16vec4, u16vec4);bvec2 lessThanEqual(i16vec2, i16vec2);bvec3 lessThanEqual(i16vec3, i16vec3);bvec4 lessThanEqual(i16vec4, i16vec4);bvec2 lessThanEqual(u16vec2, u16vec2);bvec3 lessThanEqual(u16vec3, u16vec3);bvec4 lessThanEqual(u16vec4, u16vec4);bvec2 greaterThan(i16vec2, i16vec2);bvec3 greaterThan(i16vec3, i16vec3);bvec4 greaterThan(i16vec4, i16vec4);bvec2 greaterThan(u16vec2, u16vec2);bvec3 greaterThan(u16vec3, u16vec3);bvec4 greaterThan(u16vec4, u16vec4);bvec2 greaterThanEqual(i16vec2, i16vec2);bvec3 greaterThanEqual(i16vec3, i16vec3);bvec4 greaterThanEqual(i16vec4, i16vec4);bvec2 greaterThanEqual(u16vec2, u16vec2);bvec3 greaterThanEqual(u16vec3, u16vec3);bvec4 greaterThanEqual(u16vec4, u16vec4);bvec2 equal(i16vec2, i16vec2);bvec3 equal(i16vec3, i16vec3);bvec4 equal(i16vec4, i16vec4);bvec2 equal(u16vec2, u16vec2);bvec3 equal(u16vec3, u16vec3);bvec4 equal(u16vec4, u16vec4);bvec2 notEqual(i16vec2, i16vec2);bvec3 notEqual(i16vec3, i16vec3);bvec4 notEqual(i16vec4, i16vec4);bvec2 notEqual(u16vec2, u16vec2);bvec3 notEqual(u16vec3, u16vec3);bvec4 notEqual(u16vec4, u16vec4);  int16_t bitfieldExtract(  int16_t, int16_t, int16_t);i16vec2 bitfieldExtract(i16vec2, int16_t, int16_t);i16vec3 bitfieldExtract(i16vec3, int16_t, int16_t);i16vec4 bitfieldExtract(i16vec4, int16_t, int16_t); uint16_t bitfieldExtract( uint16_t, int16_t, int16_t);u16vec2 bitfieldExtract(u16vec2, int16_t, int16_t);u16vec3 bitfieldExtract(u16vec3, int16_t, int16_t);u16vec4 bitfieldExtract(u16vec4, int16_t, int16_t);  int16_t bitfieldInsert(  int16_t base,   int16_t, int16_t, int16_t);i16vec2 bitfieldInsert(i16vec2 base, i16vec2, int16_t, int16_t);i16vec3 bitfieldInsert(i16vec3 base, i16vec3, int16_t, int16_t);i16vec4 bitfieldInsert(i16vec4 base, i16vec4, int16_t, int16_t); uint16_t bitfieldInsert( uint16_t base,  uint16_t, int16_t, int16_t);u16vec2 bitfieldInsert(u16vec2 base, u16vec2, int16_t, int16_t);u16vec3 bitfieldInsert(u16vec3 base, u16vec3, int16_t, int16_t);u16vec4 bitfieldInsert(u16vec4 base, u16vec4, int16_t, int16_t);  int16_t bitCount(  int16_t);i16vec2 bitCount(i16vec2);i16vec3 bitCount(i16vec3);i16vec4 bitCount(i16vec4);  int16_t bitCount( uint16_t);i16vec2 bitCount(u16vec2);i16vec3 bitCount(u16vec3);i16vec4 bitCount(u16vec4);  int16_t findLSB(  int16_t);i16vec2 findLSB(i16vec2);i16vec3 findLSB(i16vec3);i16vec4 findLSB(i16vec4);  int16_t findLSB( uint16_t);i16vec2 findLSB(u16vec2);i16vec3 findLSB(u16vec3);i16vec4 findLSB(u16vec4);  int16_t findMSB(  int16_t);i16vec2 findMSB(i16vec2);i16vec3 findMSB(i16vec3);i16vec4 findMSB(i16vec4);  int16_t findMSB( uint16_t);i16vec2 findMSB(u16vec2);i16vec3 findMSB(u16vec3);i16vec4 findMSB(u16vec4);int16_t  pack16(i8vec2);uint16_t pack16(u8vec2);int32_t  pack32(i8vec4);uint32_t pack32(u8vec4);int32_t  pack32(i16vec2);uint32_t pack32(u16vec2);int64_t  pack64(i16vec4);uint64_t pack64(u16vec4);int64_t  pack64(i32vec2);uint64_t pack64(u32vec2);i8vec2   unpack8(int16_t);u8vec2   unpack8(uint16_t);i8vec4   unpack8(int32_t);u8vec4   unpack8(uint32_t);i16vec2  unpack16(int32_t);u16vec2  unpack16(uint32_t);i16vec4  unpack16(int64_t);u16vec4  unpack16(uint64_t);i32vec2  unpack32(int64_t);u32vec2  unpack32(uint64_t);float64_t radians(float64_t);f64vec2   radians(f64vec2);f64vec3   radians(f64vec3);f64vec4   radians(f64vec4);float64_t degrees(float64_t);f64vec2   degrees(f64vec2);f64vec3   degrees(f64vec3);f64vec4   degrees(f64vec4);float64_t sin(float64_t);f64vec2   sin(f64vec2);f64vec3   sin(f64vec3);f64vec4   sin(f64vec4);float64_t cos(float64_t);f64vec2   cos(f64vec2);f64vec3   cos(f64vec3);f64vec4   cos(f64vec4);float64_t tan(float64_t);f64vec2   tan(f64vec2);f64vec3   tan(f64vec3);f64vec4   tan(f64vec4);float64_t asin(float64_t);f64vec2   asin(f64vec2);f64vec3   asin(f64vec3);f64vec4   asin(f64vec4);float64_t acos(float64_t);f64vec2   acos(f64vec2);f64vec3   acos(f64vec3);f64vec4   acos(f64vec4);float64_t atan(float64_t, float64_t);f64vec2   atan(f64vec2,   f64vec2);f64vec3   atan(f64vec3,   f64vec3);f64vec4   atan(f64vec4,   f64vec4);float64_t atan(float64_t);f64vec2   atan(f64vec2);f64vec3   atan(f64vec3);f64vec4   atan(f64vec4);float64_t sinh(float64_t);f64vec2   sinh(f64vec2);f64vec3   sinh(f64vec3);f64vec4   sinh(f64vec4);float64_t cosh(float64_t);f64vec2   cosh(f64vec2);f64vec3   cosh(f64vec3);f64vec4   cosh(f64vec4);float64_t tanh(float64_t);f64vec2   tanh(f64vec2);f64vec3   tanh(f64vec3);f64vec4   tanh(f64vec4);float64_t asinh(float64_t);f64vec2   asinh(f64vec2);f64vec3   asinh(f64vec3);f64vec4   asinh(f64vec4);float64_t acosh(float64_t);f64vec2   acosh(f64vec2);f64vec3   acosh(f64vec3);f64vec4   acosh(f64vec4);float64_t atanh(float64_t);f64vec2   atanh(f64vec2);f64vec3   atanh(f64vec3);f64vec4   atanh(f64vec4);float64_t pow(float64_t, float64_t);f64vec2   pow(f64vec2,   f64vec2);f64vec3   pow(f64vec3,   f64vec3);f64vec4   pow(f64vec4,   f64vec4);float64_t exp(float64_t);f64vec2   exp(f64vec2);f64vec3   exp(f64vec3);f64vec4   exp(f64vec4);float64_t log(float64_t);f64vec2   log(f64vec2);f64vec3   log(f64vec3);f64vec4   log(f64vec4);float64_t exp2(float64_t);f64vec2   exp2(f64vec2);f64vec3   exp2(f64vec3);f64vec4   exp2(f64vec4);float64_t log2(float64_t);f64vec2   log2(f64vec2);f64vec3   log2(f64vec3);f64vec4   log2(f64vec4);
intBitsToFloat
integer expression required
integer modulus operator supported in GLSL ES 3.00 and above only
integer overflow
integer_expression
interface
interface block
interface block has no fields
interface blocks supported in GLSL ES 3.00 and above only
internal error
internal image format requires a floating image type
internal image format requires an integer image type
internal image format requires an unsigned image type
internal max is %d
internal tokenizer error
internalformat is an ETC2/EAC format and target is not GL_TEXTURE_2D_ARRAY.
internalformat is not a supported compressed internal format.
interpolateAtCentroid
interpolateAtOffset
interpolateAtSample
interpolation qualifiers must appear before storage and precision qualifiers
interpolation_qualifier
interrupted
invalid GL colorspace
invalid argument
invalid array<T, N> subscript
invalid attribute: 0x
invalid character
invalid directive
invalid directive name
invalid directive:
invalid expression
invalid extension behavior
invalid extension directive
invalid extension name
invalid file number
invalid layout qualifier
invalid layout qualifier combination
invalid layout qualifier: cannot be used here
invalid layout qualifier: location requires an argument
invalid layout qualifier: not supported
invalid layout qualifier: only valid on program inputs and outputs
invalid layout qualifier: only valid on program outputs
invalid layout qualifier: only valid on shader inputs, outputs, and uniforms
invalid layout qualifier: only valid when used with 'in' in a compute shader global layout declaration
invalid layout qualifier: only valid when used with a fragment shader output in ESSL version >= 3.00 and EXT_blend_func_extended is enabled
invalid layout qualifier: only valid when used with atomic counters
invalid layout qualifier: only valid when used with images
invalid layout qualifier: only valid when used with opaque types or blocks
invalid line directive
invalid line number
invalid map<K, T> key
invalid method
invalid number
invalid parameter qualifier
invalid pragma value - 'on' or 'off' expected
invalid preprocessor command
invalid primitive type for 'in' layout
invalid primitive type for 'out' layout
invalid qualifier combination
invalid qualifier on interface block member
invalid qualifier on shader storage block member
invalid qualifier on struct member
invalid qualifier on uniform block member
invalid qualifier: can be only used with function parameters
invalid qualifier: global layout can only be set for blocks
invalid qualifier: interface blocks must be uniform in version lower than GLSL ES 3.10
invalid qualifier: interface blocks must be uniform or buffer
invalid seek
invalid string position
invalid target: 0x
invalid unordered_map<K, T> key
invalid value: Value must be at least 1 and no greater than 
invalid vector<T> subscript
invalid version directive
invalid version number
invariant
invariant 
invariant declaration specifies layout
invariant declaration specifies precision
invariant declaration specifies qualifier
invariant gl_Position;
invariant qualifier must appear before interpolation, storage, and precision qualifiers 
invariant varying
invariant_qualifier
inverse
inverse sqrt
inversesqrt
invocation operation
invocations
invocations = 
invocations can only be declared in 'in' layout in a geometry shader
invocations contradicts to the earlier declaration
io error
ios_base::badbit set
ios_base::eofbit set
ios_base::failbit set
iostream
iostream stream error
is a directory
isampler1D
isampler1DArray
isampler2D
isampler2DArray
isampler2DMS
isampler2DMSArray
isampler2DRect
isampler3D
isamplerBuffer
isamplerCube
isamplerCubeArray
isfinite
isinf
isinf(
isnan
isnan(
isolines
isubpassInput
isubpassInputMS
iteration_statement
iteration_statement_nonattributed
itexture1D
itexture1DArray
itexture2D
itexture2DArray
itexture2DMS
itexture2DMSArray
itexture2DRect
itexture3D
itextureBuffer
itextureCube
itextureCubeArray
itu_601
itu_601_full_range
itu_709
iu+-,
ivec2
ivec2  subgroupAdd(ivec2);
ivec2  subgroupAnd(ivec2);
ivec2  subgroupBroadcast(ivec2, uint);
ivec2  subgroupBroadcastFirst(ivec2);
ivec2  subgroupClusteredAdd(ivec2, uint);
ivec2  subgroupClusteredAnd(ivec2, uint);
ivec2  subgroupClusteredMax(ivec2, uint);
ivec2  subgroupClusteredMin(ivec2, uint);
ivec2  subgroupClusteredMul(ivec2, uint);
ivec2  subgroupClusteredOr(ivec2, uint);
ivec2  subgroupClusteredXor(ivec2, uint);
ivec2  subgroupExclusiveAdd(ivec2);
ivec2  subgroupExclusiveAnd(ivec2);
ivec2  subgroupExclusiveMax(ivec2);
ivec2  subgroupExclusiveMin(ivec2);
ivec2  subgroupExclusiveMul(ivec2);
ivec2  subgroupExclusiveOr(ivec2);
ivec2  subgroupExclusiveXor(ivec2);
ivec2  subgroupInclusiveAdd(ivec2);
ivec2  subgroupInclusiveAnd(ivec2);
ivec2  subgroupInclusiveMax(ivec2);
ivec2  subgroupInclusiveMin(ivec2);
ivec2  subgroupInclusiveMul(ivec2);
ivec2  subgroupInclusiveOr(ivec2);
ivec2  subgroupInclusiveXor(ivec2);
ivec2  subgroupMax(ivec2);
ivec2  subgroupMin(ivec2);
ivec2  subgroupMul(ivec2);
ivec2  subgroupOr(ivec2);
ivec2  subgroupQuadBroadcast(ivec2, uint);
ivec2  subgroupQuadSwapDiagonal(ivec2);
ivec2  subgroupQuadSwapHorizontal(ivec2);
ivec2  subgroupQuadSwapVertical(ivec2);
ivec2  subgroupShuffle(ivec2, uint);
ivec2  subgroupShuffleDown(ivec2, uint delta);
ivec2  subgroupShuffleUp(ivec2, uint delta);
ivec2  subgroupShuffleXor(ivec2, uint);
ivec2  subgroupXor(ivec2);
ivec3
ivec3  subgroupAdd(ivec3);
ivec3  subgroupAnd(ivec3);
ivec3  subgroupBroadcast(ivec3, uint);
ivec3  subgroupBroadcastFirst(ivec3);
ivec3  subgroupClusteredAdd(ivec3, uint);
ivec3  subgroupClusteredAnd(ivec3, uint);
ivec3  subgroupClusteredMax(ivec3, uint);
ivec3  subgroupClusteredMin(ivec3, uint);
ivec3  subgroupClusteredMul(ivec3, uint);
ivec3  subgroupClusteredOr(ivec3, uint);
ivec3  subgroupClusteredXor(ivec3, uint);
ivec3  subgroupExclusiveAdd(ivec3);
ivec3  subgroupExclusiveAnd(ivec3);
ivec3  subgroupExclusiveMax(ivec3);
ivec3  subgroupExclusiveMin(ivec3);
ivec3  subgroupExclusiveMul(ivec3);
ivec3  subgroupExclusiveOr(ivec3);
ivec3  subgroupExclusiveXor(ivec3);
ivec3  subgroupInclusiveAdd(ivec3);
ivec3  subgroupInclusiveAnd(ivec3);
ivec3  subgroupInclusiveMax(ivec3);
ivec3  subgroupInclusiveMin(ivec3);
ivec3  subgroupInclusiveMul(ivec3);
ivec3  subgroupInclusiveOr(ivec3);
ivec3  subgroupInclusiveXor(ivec3);
ivec3  subgroupMax(ivec3);
ivec3  subgroupMin(ivec3);
ivec3  subgroupMul(ivec3);
ivec3  subgroupOr(ivec3);
ivec3  subgroupQuadBroadcast(ivec3, uint);
ivec3  subgroupQuadSwapDiagonal(ivec3);
ivec3  subgroupQuadSwapHorizontal(ivec3);
ivec3  subgroupQuadSwapVertical(ivec3);
ivec3  subgroupShuffle(ivec3, uint);
ivec3  subgroupShuffleDown(ivec3, uint delta);
ivec3  subgroupShuffleUp(ivec3, uint delta);
ivec3  subgroupShuffleXor(ivec3, uint);
ivec3  subgroupXor(ivec3);
ivec4
ivec4  subgroupAdd(ivec4);
ivec4  subgroupAnd(ivec4);
ivec4  subgroupBroadcast(ivec4, uint);
ivec4  subgroupBroadcastFirst(ivec4);
ivec4  subgroupClusteredAdd(ivec4, uint);
ivec4  subgroupClusteredAnd(ivec4, uint);
ivec4  subgroupClusteredMax(ivec4, uint);
ivec4  subgroupClusteredMin(ivec4, uint);
ivec4  subgroupClusteredMul(ivec4, uint);
ivec4  subgroupClusteredOr(ivec4, uint);
ivec4  subgroupClusteredXor(ivec4, uint);
ivec4  subgroupExclusiveAdd(ivec4);
ivec4  subgroupExclusiveAnd(ivec4);
ivec4  subgroupExclusiveMax(ivec4);
ivec4  subgroupExclusiveMin(ivec4);
ivec4  subgroupExclusiveMul(ivec4);
ivec4  subgroupExclusiveOr(ivec4);
ivec4  subgroupExclusiveXor(ivec4);
ivec4  subgroupInclusiveAdd(ivec4);
ivec4  subgroupInclusiveAnd(ivec4);
ivec4  subgroupInclusiveMax(ivec4);
ivec4  subgroupInclusiveMin(ivec4);
ivec4  subgroupInclusiveMul(ivec4);
ivec4  subgroupInclusiveOr(ivec4);
ivec4  subgroupInclusiveXor(ivec4);
ivec4  subgroupMax(ivec4);
ivec4  subgroupMin(ivec4);
ivec4  subgroupMul(ivec4);
ivec4  subgroupOr(ivec4);
ivec4  subgroupQuadBroadcast(ivec4, uint);
ivec4  subgroupQuadSwapDiagonal(ivec4);
ivec4  subgroupQuadSwapHorizontal(ivec4);
ivec4  subgroupQuadSwapVertical(ivec4);
ivec4  subgroupShuffle(ivec4, uint);
ivec4  subgroupShuffleDown(ivec4, uint delta);
ivec4  subgroupShuffleUp(ivec4, uint delta);
ivec4  subgroupShuffleXor(ivec4, uint);
ivec4  subgroupXor(ivec4);
j>>A?1
j?V()
j?{$*
jump_statement
k>4	F
keep-uncalled
key and binary must both be null or both non-null.
keysize and binarysize must always be valid pointers.
l$ E1
l$ E3
l$ H9
l$ VWATAUAVAWE3
l$ VWATAVAWH
l$ VWAVH
l$ tkL
l$$E1
l$(D9n0uS
l$(E1
l$(L9fh
l$(M9
l$(r'H
l$(tAH
l$(thE1
l$(v0H
l$,tgI
l$0E1
l$0E3
l$0H9
l$0L+} H
l$0r(H
l$0t61
l$0tCI
l$0tYH
l$0te
l$0t}I
l$4+l$@
l$4E;C
l$4t!H
l$8+l$0
l$8+l$D
l$8D)
l$8E1
l$8E3
l$8L9
l$8t2
l$8tWL
l$<+l$H
l$<E1
l$@D9
l$@E1
l$@H=
l$@L9
l$@M9
l$@tkH
l$@|QH
l$DE1
l$H;\$,
l$HA_A^A]A\_^
l$HH9
l$HI9
l$HL)
l$HM;.
l$Ht$
l$HtVL
l$LA9
l$LD9
l$LHc
l$PA_A^A]A\_^
l$PE)
l$PE1
l$PE;C
l$PM9
l$TE1
l$XE1
l$XHc
l$XtUA
l$XtzL
l$\Hc
l$`E1
l$`E;
l$`H)
l$`fD
l$`t'
l$`t+H
l$`tZ
l$`tyD
l$hE1
l$hL+l$`
l$hLcD
l$hw)H
l$lLcC
l$lt9H
l$oE1
l$pE1
l$pH)
l$pI9
l$pt]H
l$xE1
l$xH9
l( B9l) t
l*$D+l*,tDD+l*(
l-value required
label statement nested inside control flow
last case/default label not followed by statements
layer
layer is negative.
layers
layout
layout (
layout (local_size_x=
layout qualifier
layout qualifier only valid for interface blocks
layout qualifiers supported in GLSL ES 3.00 and above
layout(
layout(@@ DEFAULT-UNIFORMS-SET-BINDING @@) uniform defaultUniforms
layout(binding=X) is required
layout(location = 0) out vec4 webgl_FragColor;
layout(location = 0) out vec4 webgl_FragData[gl_MaxDrawBuffers];
layout-id value
layout_qualifier
layout_qualifier_id
layout_qualifier_id_list
ldexp
left shift second child into first child
left-shift
length
length can only be called on arrays
length(
lerp(
lessThan
lessThanEqual
level is negative.
libGLESv2.dll
libGLESv2.dll.pdb
library_path
light_ambients
light_attenuation_consts
light_attenuation_linears
light_attenuation_quadratics
light_diffuses
light_directions
light_enables
light_model_scene_ambient
light_model_two_sided
light_positions
light_speculars
light_spotlight_cutoff_angles
light_spotlight_exponents
limit must be non-negative.
limitation
limitations
line continuation
line_strip
linear
lines
lines_adjacency
linkProgram
list<T> too long
loadCompressedData
loadData
loaderAddJsonEntry
loaderAddJsonEntry: Failed to allocate space for registry data for key %s
loaderAddJsonEntry: Failed to reallocate space for registry value of size %d for key %s
loaderGetDeviceRegistryEntry: Device ID(%d) Does not contain a value for "%s"
loaderGetDeviceRegistryEntry: DeviceID(%d) Failed to obtain %s
loaderGetDeviceRegistryEntry: DeviceID(%d) Failed to obtain %s size
loaderGetDeviceRegistryEntry: Failed to allocate space for DriverName.
loaderGetDeviceRegistryEntry: Failed to open registry key for DeviceID(%d)
loaderGetDeviceRegistryEntry: Invalid %s data type. Expected REG_SZ or REG_MULTI_SZ.
loaderGetDeviceRegistryFiles: Failed to allocate space for display device names.
loaderGetDeviceRegistryFiles: GUID for %d is not SoftwareComponent skipping
loaderGetDeviceRegistryFiles: Opening child device %d - %s
loaderGetDeviceRegistryFiles: device %s is pending reboot, skipping ...
loaderGetDeviceRegistryFiles: failed to open DevNode %s
loaderGetDeviceRegistryFiles: failed to probe device status %s
loaderGetDeviceRegistryFiles: opening device %s
loaderGetDeviceRegistryFiles: unable to obtain GUID for:%d error:%d
loaderGetDeviceRegistryFiles: unable to open child-device error:%d
loaderGetRegistryFiles: Failed to allocate space for registry data for key %s
loaderGetRegistryFiles: Failed to reallocate space for registry value of size %d for key %s
loader_add_dev_ext_table() can't reallocate func_name memory
loader_add_dev_ext_table:  Could not insert into hash table; is it full?
loader_add_dev_ext_table: Failed to allocate memory for func_name %s
loader_add_dev_ext_table: Failed to allocate memory for list index
loader_add_dev_ext_table: Failed to reallocate memory for list index
loader_add_device_extensions: Error getting physical device extension info count from library %s
loader_add_implicit_layer: Disabling implicit layer %s for using an old API version %d.%d versus application requested %d.%d
loader_add_instance_extensions: Error getting Instance extension count from %s
loader_add_instance_extensions: Error getting Instance extensions from %s
loader_add_instance_extensions: Failed to add %s to Instance extension list
loader_add_layer_names_to_list: Unable to find layer %s
loader_add_layer_properties: %s invalid layer manifest file version %d.%d.%d.  May cause errors.
loader_add_layer_properties: 'layers' tag not supported until file version 1.0.1, but %s is reporting version %s
loader_add_layer_properties: Can not find 'layer' object in manifest JSON file %s.  Skipping this file.
loader_add_layer_properties: Can not find 'layers' array element %d object in manifest JSON file %s.  Skipping this file
loader_add_layer_properties: Multiple 'layer' nodes are deprecated starting in file version "1.0.1".  Please use 'layers' : [] array instead in %s.
loader_add_meta_layer: Failed to find layer name %s component layer %s to activate
loader_add_phys_dev_ext_table() can't allocate list memory
loader_add_phys_dev_ext_table() can't allocate memory for func_name
loader_add_phys_dev_ext_table() can't reallocate list memory
loader_add_phys_dev_ext_table() couldn't insert into hash table; is it full?
loader_add_to_dev_ext_list: Failed to allocate space for device extension entrypoint %d name
loader_add_to_dev_ext_list: Failed to allocate space for device extension entrypoint list in list %d
loader_add_to_dev_ext_list: Failed to reallocate space for device extension list
loader_add_to_ext_list: Failed to reallocate space for extension list
loader_add_to_layer_list: Explicit layer %s is using an old API version %hu.%hu versus application requested %hu.%hu
loader_add_to_layer_list: Realloc failed for when attempting to add new layer
loader_create_device_chain: Failed to find 'vkCreateDevice' in layer %s
loader_create_device_chain: Failed to find 'vkGetInstanceProcAddr' in layer %s.  Skipping layer.
loader_create_instance_chain: Failed to find 'vkCreateInstance'
loader_create_instance_chain: Failed to find 'vkGetInstanceProcAddr' in layer %s
loader_create_logical_device: Failed to alloc struct loader_device
loader_enable_instance_layers: Failed to initialize application version of the layer list
loader_enable_instance_layers: Failed to initialize expanded version of the layer list
loader_find_layer_name_add_list: Failed to find layer name %s to activate
loader_get_json: Failed to open JSON file %s
loader_get_json: Failed to parse JSON file %s, this is usually because something ran out of memory.
loader_get_json: Failed to read JSON file %s.
loader_get_json: Received invalid JSON file
loader_get_manifest_files: Can not get manifest files with NULL location, env_override=%s
loader_get_manifest_files: Failed to allocate space for manifest file %d list
loader_get_manifest_files: Failed to allocate space for manifest file name list
loader_get_manifest_files: Failed to reallocate space for manifest file name list
loader_get_manifest_files: Registry lookup failed to get ICD manifest files.  Possibly missing Vulkan driver?
loader_get_manifest_files: Registry lookup failed to get layer manifest files.
loader_get_next_layer_property: Out of memory can not add any layer properties to list
loader_get_next_layer_property: realloc failed for layer list
loader_gpa_instance_internal() unrecognized name %s
loader_gpdpa_instance_internal() unrecognized name %s
loader_gpdpa_instance_terminator() unrecognized name %s
loader_icd_scan: Can not find 'ICD' object in ICD JSON file %s.  Skipping ICD JSON
loader_icd_scan: Failed retrieving ICD JSON %s 'api_version' field.  Skipping ICD JSON.
loader_icd_scan: Failed retrieving ICD JSON %s 'file_format_version' field.  Skipping ICD JSON
loader_icd_scan: Failed retrieving ICD JSON %s 'library_path' field.  Skipping ICD JSON.
loader_icd_scan: Failed to add ICD JSON %s.  Skipping ICD JSON.
loader_icd_scan: Failed to find 'library_path' object in ICD JSON file %s.  Skipping ICD JSON.
loader_icd_scan: ICD JSON %s 'library_path' field is empty.  Skipping ICD JSON.
loader_icd_scan: ICD JSON %s does not have a 'file_format_version' field. Skipping ICD JSON.
loader_icd_scan: ICD JSON %s does not have an 'api_version' field.
loader_icd_scan: Unexpected manifest file version (expected 1.0.0 or 1.0.1), may cause errors
loader_init_generic_list: Failed to allocate space for generic list
loader_scanned_icd_add:  Failed querying 'vkCreateInstance' via dlsym/loadlibrary for ICD %s
loader_scanned_icd_add: Attempt to retrieve either 'vkGetInstanceProcAddr' or 'vk_icdGetInstanceProcAddr' from ICD %s failed.
loader_scanned_icd_add: Could not get 'vkCreateInstance' via 'vk_icdGetInstanceProcAddr' for ICD %s
loader_scanned_icd_add: Could not get 'vkEnumerateInstanceExtensionProperties' via 'vk_icdGetInstanceProcAddr' for ICD %s
loader_scanned_icd_add: Could not get 'vkEnumerateInstanceExtensionProperties' via dlsym/loadlibrary for ICD %s
loader_scanned_icd_add: ICD %s doesn't support interface version compatible with loader, skip this ICD.
loader_scanned_icd_add: Out of memory can't add ICD %s
loader_scanned_icd_add: Realloc failed on icd library list for ICD %s
loader_scanned_icd_add: Using deprecated ICD interface of 'vkGetInstanceProcAddr' instead of 'vk_icdGetInstanceProcAddr' for ICD %s
loader_scanned_icd_init: Realloc failed for layer list when attempting to add new layer
loader_validate_device_extensions: Device extension %s not supported by selected physical device or enabled layers.
loader_validate_device_extensions: Device ppEnabledExtensionNames contains string that is too long or is badly formed
loader_validate_instance_extensions: Extension %s not found in list of known instance extensions.
loader_validate_instance_extensions: Instance extension %s not supported by available ICDs or enabled layers.
loader_validate_instance_extensions: Instance ppEnabledExtensionNames contains string that is too long or is badly formed
loader_validate_layers: Device ppEnabledLayerNames contains string that is too long or is badly formed
loader_validate_layers: Layer %d does not exist in the list of available layers
local function declaration
local function prototype declarations are not allowed
local_size
local_size = (
local_size id
local_size ids = (
local_size_
local_size_x
local_size_x_id
local_size_y
local_size_y and local_size_z.
local_size_y_id
local_size_z
local_size_z_id
location
location = 
location is too large
location must not be set for atomic_uint
location must only be specified for a single input or output variable
location on block member
location qualifier on in/out block
location qualifier on input
location qualifier on output
location qualifier on uniform or buffer
location/component/index
log10
log2(
logError
logInfo
logWarning
logical-and
logical-or
logical-xor
logical_and_expression
logical_or_expression
logical_xor_expression
lowp   int bitCount(  int);lowp ivec2 bitCount(ivec2);lowp ivec3 bitCount(ivec3);lowp ivec4 bitCount(ivec4);lowp   int bitCount( uint);lowp ivec2 bitCount(uvec2);lowp ivec3 bitCount(uvec3);lowp ivec4 bitCount(uvec4);lowp   int findMSB(highp   int);lowp ivec2 findMSB(highp ivec2);lowp ivec3 findMSB(highp ivec3);lowp ivec4 findMSB(highp ivec4);lowp   int findMSB(highp  uint);lowp ivec2 findMSB(highp uvec2);lowp ivec3 findMSB(highp uvec3);lowp ivec4 findMSB(highp uvec4);
lowp   int findLSB(  int);lowp ivec2 findLSB(ivec2);lowp ivec3 findLSB(ivec3);lowp ivec4 findLSB(ivec4);lowp   int findLSB( uint);lowp ivec2 findLSB(uvec2);lowp ivec3 findLSB(uvec3);lowp ivec4 findLSB(uvec4);
lowp precision qualifier
mDevice_QueryInterface
mL+6H
macro expansion
macro invocation chain too deep
macro name is reserved
macro name with a double underscore is reserved - unintented behavior is possible
macro redefined
macro undefined while being invoked
main function cannot return a value
main(
map/set<T> too long
mapBuffer
mapRange
mapResource
markTransformFeedbackUsage
mat2   outerProduct(vec2 c, vec2 r);mat3   outerProduct(vec3 c, vec3 r);mat4   outerProduct(vec4 c, vec4 r);mat2x3 outerProduct(vec3 c, vec2 r);mat3x2 outerProduct(vec2 c, vec3 r);mat2x4 outerProduct(vec4 c, vec2 r);mat4x2 outerProduct(vec2 c, vec4 r);mat3x4 outerProduct(vec4 c, vec3 r);mat4x3 outerProduct(vec3 c, vec4 r);mat2   transpose(mat2   m);mat3   transpose(mat3   m);mat4   transpose(mat4   m);mat2x3 transpose(mat3x2 m);mat3x2 transpose(mat2x3 m);mat2x4 transpose(mat4x2 m);mat4x2 transpose(mat2x4 m);mat3x4 transpose(mat4x3 m);mat4x3 transpose(mat3x4 m);mat2x3 matrixCompMult(mat2x3, mat2x3);mat2x4 matrixCompMult(mat2x4, mat2x4);mat3x2 matrixCompMult(mat3x2, mat3x2);mat3x4 matrixCompMult(mat3x4, mat3x4);mat4x2 matrixCompMult(mat4x2, mat4x2);mat4x3 matrixCompMult(mat4x3, mat4x3);
mat2 matrixCompMult(mat2 x, mat2 y);mat3 matrixCompMult(mat3 x, mat3 y);mat4 matrixCompMult(mat4 x, mat4 y);
mat2x2
mat2x3
mat2x4
mat3x2
mat3x3
mat3x4
mat4x2
mat4x3
mat4x4
material_ambient
material_diffuse
material_emissive
material_specular
material_specular_exponent
matrix constructed from matrix can only have one argument
matrix field selection out of range
matrix index out of range '%d'
matrix mult second child into first child
matrix or packing qualifiers can only be used on a uniform or buffer
matrix scale second child into first child
matrix swizzle
matrix-multiply
matrix-scale
matrix-times-vector
matrixCompMult
max_vertices
max_vertices = 
max_vertices can only be declared in 'out' layout in a geometry shader
max_vertices contradicts to the earlier declaration
maximum nesting depth exceeded
mediump
mediump precision qualifier
mediump vec2 unpackHalf2x16(highp uint);
mediump vec4 gl_FragCoord;        bool gl_FrontFacing;mediump vec4 gl_FragColor;mediump vec2 gl_PointCoord;
mediump vec4 unpackSnorm4x8(highp uint);mediump vec4 unpackUnorm4x8(highp uint);
member cannot contradict block
member cannot contradict block (or what block inherited from global)
member of block cannot be or contain a sampler, image, or atomic_uint type
member of block cannot have a packing layout qualifier
member of nameless block was not redeclared
member of uniform or buffer block cannot have an auxiliary or interpolation qualifier
member storage qualifier cannot contradict block storage qualifier
memory exhausted
memory qualifiers cannot be used on this type
memoryBarrier
memoryBarrierAtomicCounter
memoryBarrierBuffer
memoryBarrierImage
memoryBarrierShared
message controls must be EGL_TRUE or EGL_FALSE.
message size
method does not accept any arguments
method takes no parameters
methods supported in GLSL ES 3.00 and above only
mismatched statements
mismatching ternary operator operand types '
missing #endif
missing input primitive declaration before calling length on gl_in
missing input primitive declaration before indexing gl_in.
missing parenthesis
missing user function; linker needs to catch that
mix(0B0B0E
mix(1B1B1B
mix(1B1B1E
mix(3B3B0B
mix(3B3B3B
modelview
modelview_invtr
modf(
modulo
modulo second child into first child
monotonicallyIncreasingTime
move second child to first child
mo~u/
msc is null
mul(transpose(
multiple prototypes for same function
multiplicative_expression
multiply second child into first child
multiviewBaseViewLayerIndex
must be 0, 1, 2, or 3:
must be a compile-time constant:
must be a multiple of size of first component
must be a multiple of the member's alignment
must be a power of 2
must be at least 1
must be followed by a header name
must be followed by macro name
must be followed by version number
must be greater than 0
must be less than or equal to
must be positive
must be qualified as flat
must by followed by an integral literal
must explicitly specify all locations when using multiple fragment outputs
must occur first in shader
must specify 'location' to use 'component'
must use 'flat' interpolation here
n must be 1 when GL is bound to the default framebuffer
n03>Pu
nD8-N
nL$`f
n]?iJ
n_rects cannot be greater than zero when rects is NULL.
n_rects cannot be negative.
name is not a valid buffer.
name is not a valid framebuffer.
name is not a valid program.
name is not a valid query.
name is not a valid renderbuffer.
name is not a valid sampler.
name is not a valid shader.
name is not a valid sync.
name is not a valid texture.
name is not a valid transform feedback.
name is not a valid vertex array.
name too long
nameless block contains a member that already has a name at global scope
names beginning with "GL_" can't be (un)defined:
names containing consecutive underscores are reserved, and an error if version <= 300:
names containing consecutive underscores are reserved:
namespace
nan(ind)
nan(snan)
native_display should be a valid EGL device if platform equals EGL_PLATFORM_DEVICE_EXT
negViewportYScale
negation
network down
network reset
network unreachable
nhH;npu
no binding specified
no buffer space
no child process
no declaration found for redeclaration
no link
no lock available
no longer supported in
no matching overloaded function found
no message
no message available
no operation '%s' exists that takes a left-hand operand of type '%s' and a right operand of type '%s' (or there is no acceptable conversion)
no operation '%s' exists that takes an operand of type %s (or there is no acceptable conversion)
no protocol option
no qualifiers allowed for function return
no space on device
no state
no statement between the last label and the end of the switch statement
no stream resources
no such device
no such device or address
no such field in structure
no such file or directory
no such process
node is still EOpNull!
noinline
nointerpolation
noise
noise1
noise2
noise3
noise4
non-constant global initializer (needs GL_EXT_shader_non_constant_global_initializers)
non-constant initializer
non-constant offset argument
non-literal layout-id value
non-matching or non-convertible constant type for const initializer
non-opaque uniform variables need a layout(location=L)
non-opaque uniforms outside a block
non-uniform struct contains a sampler or image:
non-uniform struct contains an atomic_uint:
non-void function must return a value
non_uniform_qualifier
nonportable when expanded from macros for preprocessor expression
nonprivate
nonuniformEXT
noperspective
normal
normalize
normalize(
not a directory
not a socket
not a stream
not allowed in nested scope
not allowed in this version
not allowed on block or structure members
not allowed to specify yuv qualifier when using depth or multiple color fragment outputs
not allowed when generating SPIR-V
not allowed when using GLSL for Vulkan
not connected
not enough data provided for construction
not enough memory
not implemented
not supported
not supported for these tokens
not supported for this version or the enabled extensions
not supported in this stage:
not supported with this profile:
not-component-type
not-matrix-type
notEqual
ntelD
nterm
null pointer in arguments.
numViews cannot be greater than GL_MAX_VIEWS_ANGLE.
numViews cannot be less than 1.
num_config cannot be null.
num_groups_x cannot be greater than MAX_COMPUTE_WORK_GROUP_COUNT[0]=
num_groups_y cannot be greater than MAX_COMPUTE_WORK_GROUP_COUNT[1]=
num_groups_z cannot be greater than MAX_COMPUTE_WORK_GROUP_COUNT[2]=
num_views
num_views greater than the value of GL_MAX_VIEWS_OVR
number of invocations must match between compilation units
numeric literal too big
numeric literal too long
o0t$I
oI>O7
oL$ f
obwQ4
octal and hex sequences not supported
octal literal digit too large
octal literal too big
offset
offset %d in buffer %d
offset = 
offset and size must be multiple of 4.
offset is too large:
offset must be a multiple of 4.
offset must be multiple of value of SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT.
offset must be multiple of value of UNIFORM_BUFFER_OFFSET_ALIGNMENT.
offset on block member
offset.x
offset.y
offset.z
offset/align
offset/align can only be used on a uniform or buffer
offsets argument
ohA9n
onDestroy
only allowed at global scope
only allowed when generating SPIR-V
only allowed when using GLSL for Vulkan
only applies to block members, not blocks
only apply to images
only one coherent/devicecoherent/queuefamilycoherent/workgroupcoherent/subgroupcoherent qualifier allowed
only one precision qualifier allowed
only outermost dimension of an array of arrays can be a specialization constant
only outermost dimension of an array of arrays can be implicitly sized
only supported on image with format r32f
only supported on image with format r32i or r32ui
only supported on integer images
only uniform, buffer, in, or out blocks are supported
op0_alpha
op0_rgb
op1_alpha
op1_rgb
op2_alpha
op2_rgb
opaque types cannot be output parameters
opengl32.dll
operation canceled
operation in progress
operation not permitted
operation not supported
operation result is undefined for the values passed in
operation would block
operator
operator "" 
operator co_await
operator()
optimize
optimize pragma syntax is incorrect
or second child into first child
origin_upper_left
ot$ H
ot$0H
out float gl_ClipDistance[];
out for stage outputs
out gl_PerVertex {highp vec4  gl_Position;highp float gl_PointSize;};
out gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize;};
out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];
out highp int gl_PrimitiveID;out highp int gl_Layer;
out int gl_FragStencilRefARB;
out int gl_ViewportIndex;
out int gl_ViewportIndex;out int gl_Layer;
out of dynamic memory in yy_create_buffer()
out of dynamic memory in yy_get_next_buffer()
out of dynamic memory in yyensure_buffer_stack()
out of memory
out of range: 
out of range: binding must be non-negative
out of range: index layout qualifier can only be 0 or 1
out of range: invocations must be in the range of [1, MAX_GEOMETRY_SHADER_INVOCATIONS_OES]
out of range: location must be non-negative
out of range: max_vertices must be in the range of [0, gl_MaxGeometryOutputVertices]
out of range: num_views must be positive
out of range: offset must be non-negative
out type qualifier supported in GLSL ES 3.10 only
out vec3 normal_varying;
out vec4 angle_SecondaryFragColor;
out vec4 angle_SecondaryFragData[
out vec4 color_varying;
out vec4 frag_color;
out vec4 gl_ClipVertex;
out vec4 pos_varying;
out vec4 texcoord0_varying;
out vec4 texcoord1_varying;
out vec4 texcoord2_varying;
out vec4 texcoord3_varying;
out vec4 webgl_FragColor;
out vec4 webgl_FragData[gl_MaxDrawBuffers];
outer product
outerProduct
output
output array locations would exceed MAX_DRAW_BUFFERS
output block
output location must be < MAX_DRAW_BUFFERS
output primitive = 
outputUint
overlapping offsets at
overlapping use of location
overloaded functions must have the same parameter precision qualifiers for argument
overloaded functions must have the same parameter storage qualifiers for argument
overloaded functions must have the same return type
overrideWorkaroundsD3D
owner dead
o|$0f
p AWH
p D9V
p WAVAWH
p>.G1
pA_A^A]A\_^[
pA_A^A]A\_^]
pContext
pEvents
pExecutionResource
pLMc}
pScheduler
pThreadProxy
p[]_^A\A^A_
p[]_^A^
p[_^A\A]A^A_
p[_^A^A_
pack16
pack32
pack64
packDouble2x32
packFloat2x16
packHalf2x16
packInt2x16
packInt2x32
packInt4x16
packSnorm2x16
packSnorm4x8
packUint2x16
packUint2x32
packUint4x16
packUnorm2x16
packUnorm4x8
packed
padding
param
parameter: 
parameter_declaration
parameter_declarator
parameter_type_specifier
partition
patch
permission denied
pixel_center_integer
pm>6/
pname requires OpenGL ES 3.0 or GL_EXT_map_buffer_range.
pname requires OpenGL ES 3.0 or GL_OES_mapbuffer.
pname requires OpenGL ES 3.0, GL_OES_mapbuffer or GL_EXT_map_buffer_range.
pname requires OpenGL ES 3.0.
point
point_distance_attenuation
point_mode
point_rasterization
point_size_max
point_size_min
point_sprite_coord_replace
point_sprite_enabled
points
pointsize
populate
populateRenderer11DeviceCaps
post depth coverage
postTranslateCompile
post_coverage_coverage
post_depth_coverage
post_depth_coverage requires early_fragment_tests
postfix_expression
ppVirtualProcessorRoots
pragma
pre_instance_functions
precise
precise qualifier must appear first
precise_qualifier
precision
precision highp float;
precision is not supported in fragment shader
precision qualifier must appear as last qualifier
precision statement
precision_qualifier
predefined macro redefined
predefined macro undefined
predefined names can't be (un)defined:
prefer flow control
preprocessor directive cannot be preceded by another token
preprocessor evaluation
present
primary_expression
primitive doesn't match earlier input primitive declaration
primitive doesn't match earlier output primitive declaration
programInterface must be set to GL_PROGRAM_OUTPUT.
projection
promise already satisfied
protocol error
protocol not supported
ps_2_0
public
push_constant
py~u>H
py~uN
q(9qD~[E3
q(H;4
q>F,3
qS>g?h3
quads
qualifier
qualifier has no effect on non-output parameters
qualifier sequence
qualifier supported in GLSL ES 3.00 and above only
queuefamilycoherent
r	Vr.>T
r	uAD;d$$u:
r#E9X
r11f_g11f_b10f
r16_snorm
r16ui
r32ui
r8_snorm
r>@8o
rBu/H
rKt(@
rLp>B
rNm>)
ra;P(w\H
radians
radians(
rasterizer state
read only file system
readFirstInvocation
readFirstInvocationARB
readFromAttachment::resolvedTextureHelper
readFromAttachment::stagingHelper
readInvocation
readInvocationARB
readOffset, writeOffset and size must all be non-negative
readPixels
readPixelsAllAtOnce
readPixelsImpl
readPixelsRowByRow
readonly
readonly 
readonlyImages
redeclaration
redeclaration of array with a different array dimensions or sizes
redeclaration of array with a different element type
redeclaration of array with size
redeclaration of gl_LastFragData as an array of arrays
redeclaration of gl_LastFragData with size != gl_MaxDrawBuffers
redeclaring non-array as array
redefinition
redefinition of a function
redefinition of a struct
redefinition of an interface block instance name
redefinition of an interface block member name
redefinition of an interface block name
redefinition of built-in function
reflect
reflect(
refract
refract(
refract(3B3B0B
register(
relational_expression
relativeOffset cannot be greater than MAX_VERTEX_ATTRIB_RELATIVE_OFFSET.
relaxed-errors
release
replicated qualifiers
require
required extension not requested:
requires SPIR-V 1.3
requires an input_attachment_index layout qualifier
requires block, or sampler/image, or atomic-counter type
requires the 'buffer' storage qualifier
requires uniform or buffer storage qualifier
reserve
reserveSpaceForAttrib
reserveVertexSpace
reserved built-in name
reset
resetDevice
resetOffscreenColorBuffer
resetOffscreenDepthBuffer
resize
resolveCompile
resource
resource deadlock would occur
resource unavailable try again
restrict
restrict 
restrict(
result out of range
return
return 
reversebits(
rg16_snorm
rg16f
rg16i
rg16ui
rg32f
rg32i
rg32ui
rg8_snorm
rg8ui
rgb10_a2
rgb10_a2ui
rgb_2_yuv
rgba16
rgba16_snorm
rgba16f
rgba16i
rgba16ui
rgba32f
rgba32i
rgba32ui
rgba8
rgba8_snorm
rgba8i
rgba8ui
ri9O vdH
right shift second child into first child
right-shift
round
round(
roundEven
row_major
rsqrt(
s WATAUAVAWH
s WAVAWH
s can't be function return values
s count exceeds 
s must be uniform
s of 
s(+{PL
s.H9l$P
s4+sP+
sS9L$$v,
sample
sampler
sampler binding greater than maximum texture units
sampler binding not less than gl_MaxCombinedTextureImageUnits
sampler constructor must appear at point of use
sampler state
sampler uniform value out of range
sampler-constructor cannot make an array of samplers
sampler-constructor first argument must be a scalar textureXXX type
sampler-constructor first argument must match type and dimensionality of constructor type
sampler-constructor requires two arguments
sampler-constructor second argument must be a scalar type 'sampler'
sampler/image
sampler/image types can only be used in uniform variables or function parameters:
sampler/texture/image requires layout(binding=X)
sampler1D
sampler1DArray
sampler1DArrayShadow
sampler1DShadow
sampler2D
sampler2D s
sampler2DArray
sampler2DArrayShadow
sampler2DMS
sampler2DMSArray
sampler2DRect
sampler2DRectShadow
sampler2DShadow
sampler3D
sampler3DRect
samplerBuffer
samplerCUBE
samplerCUBE s
samplerCube
samplerCubeArray
samplerCubeArrayShadow
samplerCubeShadow
samplerExternalOES
samplerShadow
samplers
samplers and atomic_uints cannot be output parameters
saturate
sbc is null
scalar integer expression required
scalar swizzle
selecting output stream
selection_rest_statement
selection_statement
selection_statement_nonattributed
semUnequal must not be gl_SemanticsRelease or gl_SemanticsAcquireRelease
semUnequal must not include multiple of gl_SemanticsRelease, gl_SemanticsAcquire, or gl_SemanticsAcquireRelease
sequence operator is not allowed for void, arrays, or structs containing arrays
set = 0, binding = 
set = 0, binding = 0
set = 0, binding = 1
set = 1, binding = 
set = 2, binding = 0
set is too large
setCompressedImage
setCompressedSubImage
setData
setImage
setPresentationTime implementation missing.
setShader
setStorage
setStorageMultisample is unimplemented.
setSubImage
setSubImagePaddingWorkaround
setSubImageRowByRowWorkaround
setupLoaderTermPhysDevGroups:  Failed during dispatch call of 'EnumeratePhysicalDeviceGroups' to ICD %d to get content.
setupLoaderTermPhysDevGroups:  Failed during dispatch call of 'EnumeratePhysicalDeviceGroups' to ICD %d to get count.
setupLoaderTermPhysDevGroups:  Failed during dispatch call of 'EnumeratePhysicalDevices' to ICD %d to get plain phys dev count.
setupLoaderTermPhysDevGroups:  Failed to allocate new physical device group array of size %d
setupLoaderTermPhysDevGroups:  Failed to allocate physical device group Terminator object %d
setupLoaderTermPhysDevGroups:  Failed to find GPU %d in group %d returned by 'EnumeratePhysicalDeviceGroups' in list returned by 'EnumeratePhysicalDevices'
setupLoaderTermPhysDevGroups:  Loader failed to setup physical device terminator info before calling 'EnumeratePhysicalDeviceGroups'.
setupLoaderTermPhysDevs:  Call to ICD %d's 'vkEnumeratePhysicalDevices' failed with error 0x%08x
setupLoaderTermPhysDevs:  Failed to allocate new physical device array of size %d
setupLoaderTermPhysDevs:  Failed to allocate physical device terminator object %d
setupLoaderTermPhysDevs:  Failed to detect any valid GPUs in the current config
setupLoaderTrampPhysDevGroups:  Failed during dispatch call of 'EnumeratePhysicalDeviceGroupsKHR' to lower layers or loader to get count.
setupLoaderTrampPhysDevGroups:  Failed to allocate new physical device group array of size %d
setupLoaderTrampPhysDevGroups:  Failed to allocate physical device group trampoline object %d
setupLoaderTrampPhysDevGroups:  Failed to find GPU %d in group %d returned by 'EnumeratePhysicalDeviceGroupsKHR' in list returned by 'EnumeratePhysicalDevices'
setupLoaderTrampPhysDevs:  Failed during dispatch call of 'vkEnumeratePhysicalDevices' to lower layers or loader to get content.
setupLoaderTrampPhysDevs:  Failed during dispatch call of 'vkEnumeratePhysicalDevices' to lower layers or loader to get count.
setupLoaderTrampPhysDevs:  Failed to allocate new physical device array of size %d
setupLoaderTrampPhysDevs:  Failed to allocate physical device trampoline object %d
shade_model_flat
shader input/output
shader storage block
shader storage block binding greater than MAX_SHADER_STORAGE_BUFFER_BINDINGS
shadow1D
shadow1DGradARB
shadow1DLod
shadow1DProj
shadow1DProjGradARB
shadow1DProjLod
shadow2D
shadow2DEXT
shadow2DGradARB
shadow2DLod
shadow2DProj
shadow2DProjEXT
shadow2DProjGradARB
shadow2DProjLod
shadow2DRect
shadow2DRectGradARB
shadow2DRectProj
shadow2DRectProjGradARB
shared
shift exponent is negative or undefined
shift-UBO-binding
shift-image-binding
shift-ssbo-binding
shift-texture-binding
shift-uav-binding
shift_expression
short
sign(
simple_statement
sincos
single_attribute
single_declaration
single_type_qualifier
sinh(
size=
sizeof
skip optimization
skip validation
skipDraw
smooth
smooth centroid in
smooth centroid out
smooth in
smooth out
smoothstep
smoothstep(
smoothstep(0B0B3B
smoothstep(1B1B1B
smoothstep(3B3B3B
snan)
source-entrypoint
sparseImageLoad
sparseImageLoadARB
sparseTexel
sparseTexelFetch
sparseTexelFetchARB
sparseTexelFetchOffset
sparseTexelFetchOffsetARB
sparseTexelsResident
sparseTexelsResidentARB
sparseTexture
sparseTextureARB
sparseTextureClamp
sparseTextureClampARB
sparseTextureGather
sparseTextureGatherARB
sparseTextureGatherOffset
sparseTextureGatherOffsetARB
sparseTextureGatherOffsets
sparseTextureGatherOffsetsARB
sparseTextureGrad
sparseTextureGradARB
sparseTextureGradClamp
sparseTextureGradClampARB
sparseTextureGradOffset
sparseTextureGradOffsetARB
sparseTextureGradOffsetClam
sparseTextureGradOffsetClampARB
sparseTextureLod
sparseTextureLodARB
sparseTextureLodOffset
sparseTextureLodOffsetARB
sparseTextureOffset
sparseTextureOffsetARB
sparseTextureOffsetClamp
sparseTextureOffsetClampARB
spec_version
specialization-constant id already used
specialization-constant id is too large
sqrt(
sqrtf
src0_alpha
src0_rgb
src1_alpha
src1_rgb
src2_alpha
src2_rgb
stages must match when linking into a single stage
state not recoverable
statement
statement before the first label
statement_list
statement_no_new_scope
statement_scoped
static
static 
static bool gl_FrontFacing = false;
static const uint 
static const uint imageIndexOffset
static const uint readonlyImageIndexOffset
static const uint samplerIndexOffset
static const uint textureIndexOffset
static float gl_Depth = 0.0;
static float gl_PointSize = float(1);
static float maxPointSize = 
static float minPointSize = 
static float2 gl_PointCoord = float2(0.5, 0.5);
static float2 pointSpriteCorners[] = 
static float2 pointSpriteTexcoords[] = 
static float4 gl_Color[
static float4 gl_FragCoord = float4(0, 0, 0, 0);
static float4 gl_Position = float4(0, 0, 0, 0);
static gl_DepthRangeParameters gl_DepthRange = {dx_DepthRange.x, dx_DepthRange.y, dx_DepthRange.z};
static int gl_InstanceID;
static int gl_VertexID;
static uint gl_LocalInvocationIndex = uint(0);
static uint3 gl_GlobalInvocationID = uint3(0, 0, 0);
static uint3 gl_LocalInvocationID = uint3(0, 0, 0);
static uint3 gl_WorkGroupID = uint3(0, 0, 0);
std140
std430
step(
storage qualifier isn't supported in compute shaders
storage qualifier not allowed on function parameter
storage qualifier supported in GLSL ES 3.00 and above only
storage qualifier supported in GLSL ES 3.10 only
storage_qualifier
storeDynamicAttribute
storeVertexAttributes
stream
stream timeout
streamAttributes
stride cannot be greater than MAX_VERTEX_ATTRIB_STRIDE.
stride is too large:
stride must be between 0 and MAX_VERTEX_ATTRIB_STRIDE.
string
string literals not supported
string too long
struct
struct 
struct CS_INPUT
struct GS_INPUT
struct GS_OUTPUT
struct PS_INPUT
struct PS_OUTPUT
struct VS_INPUT
struct VS_OUTPUT
struct gl_DepthRangeParameters
struct gl_DepthRangeParameters {
struct-
struct_declaration
struct_declaration_list
struct_declarator
struct_declarator_list
struct_specifier
structure
structure has no fields
structures containing arrays can't be function return values
structures containing arrays may not be declared constant since they cannot be initialized
su	A;
su	E;
subBorrow
subgroup op
subgroupAdd
subgroupAll
subgroupAllEqual
subgroupAnd
subgroupAny
subgroupBallot
subgroupBallotBitCount
subgroupBallotBitExtract
subgroupBallotExclusiveBitCount
subgroupBallotFindLSB
subgroupBallotFindMSB
subgroupBallotInclusiveBitCount
subgroupBarrier
subgroupBroadcast
subgroupBroadcastFirst
subgroupClusteredAdd
subgroupClusteredAnd
subgroupClusteredMax
subgroupClusteredMin
subgroupClusteredMul
subgroupClusteredOr
subgroupClusteredXor
subgroupElect
subgroupExclusiveAdd
subgroupExclusiveAnd
subgroupExclusiveMax
subgroupExclusiveMin
subgroupExclusiveMul
subgroupExclusiveOr
subgroupExclusiveXor
subgroupInclusiveAdd
subgroupInclusiveAnd
subgroupInclusiveMax
subgroupInclusiveMin
subgroupInclusiveMul
subgroupInclusiveOr
subgroupInclusiveXor
subgroupInverseBallot
subgroupMax
subgroupMemoryBarrier
subgroupMemoryBarrierBuffer
subgroupMemoryBarrierImage
subgroupMemoryBarrierShared
subgroupMin
subgroupMul
subgroupOr
subgroupQuadBroadcast
subgroupQuadSwapDiagonal
subgroupQuadSwapHorizontal
subgroupQuadSwapVertical
subgroupShuffle
subgroupShuffleDown
subgroupShuffleUp
subgroupShuffleXor
subgroupXor
subgroupcoherent
subpass
subpass input
subpassInput
subpassInputMS
subpassLoad
subpassLoadMS
subroutine
substituting 'mediump'
subtract
subtract second child into first child
superp
suppress-warnings
swapWithDamage implementation missing.
switch
switch (
switch statements
switchState
switch_statement
switch_statement_list
switch_statement_nonattributed
sxu/H
sxuIH
sxutH
syncPrimitiveTopology
syntax error
syntax error, unexpected %s
syntax error, unexpected %s, expecting %s
syntax error, unexpected %s, expecting %s or %s
syntax error, unexpected %s, expecting %s or %s or %s
syntax error, unexpected %s, expecting %s or %s or %s or %s
system
t	9^ H
t	9i H
t	9q H
t	9w H
t	;E H
t	;J H
t	;J I
t	;i H
t	H9Q t	1
t	HcADA
t	HcJ
t H9X8t]
t L;|$@M
t"<.u
t$ E1
t$ E3
t$ H9
t$ UH
t$ UWAUAVAWH
t$ WATAUAVAW
t$ WATAUAVAWH
t$ WAVAWH
t$ WH
t$ tL
t$&t2H
t$(E1
t$(H9
t$(H;s
t$(HcBD
t$(I;
t$(L9
t$(f9
t$(t0
t$(t4
t$(uOH
t$,E1
t$0+t$(
t$0E1
t$0H9
t$0t/H
t$0t9
t$4+t$,
t$4H9
t$8E1
t$8H)
t$8H+
t$8H9
t$8H9W
t$8f9L$`
t$8|WL
t$<Lc
t$@H9
t$@H;
t$@tnH
t$@toH
t$A8P
t$DA 
t$Dt3L
t$HA_A^A]A\_
t$HE1
t$HH)
t$HI+
t$HL;
t$HfA
t$LD)
t$LfD
t$PA+7A
t$PE1
t$PL9
t$PtPH
t$TE1
t$XE1
t$XH9
t$XH;t$@H
t$XHc
t$Xt+H
t$Xw	H
t$`;w
t$`I9
t$bfD
t$hH)
t$hL9
t$ht~A
t$hw#D
t$h|(
t$lLcC
t$pH9\$ u
t$pI9
t$pIi
t$pfD
t$tLcC
t$xE1
t$xfD
t%H=[4
t&A88t
t'D8d$8t
t'fE9
t(B;\ 
t)H;L$`t"L
t*H9p8u$@8
t*H;L$pt#M
t+H;E
t-H;L$pt&H
t-H=_0
t.8\$P
t/I;1t
t/L9w
t0H;}
t0fE;
t4H;(t
t4I;1t
t4I;9t
t5H;}
t5HcP
t6Hc;
t7D9B
t8H;U
t:H;^
t:H;s
t:H;w
t:I;1t
t;LcF
t<H=P4
t<ffff
t=I9X(t&H
t>IcE
t?D+d$4L
t?H95
t?I;)t
t?I;9t
t@LcM
tEHcN
tELcC
tFA9h
tFF+4
tG8\$ u08\$!t*E
tHHc~8L
tKI;D
tL$ f
tMH=S4
tQfD9 tK
tRLcY
tSf91tNH
tT$0f
tUHcNdH
t[LcD$,H
tangent
target 2D texture does not have a valid size at specified level.
target 3D texture does not have a valid size at specified level.
target 3D texture does not have enough layers for the specified Z offset at the specified level.
target cubemap texture does not have a valid size at specified level and face.
target is TRANSFORM_FEEDBACK_BUFFER and transform feedback is currently active.
target is not a 2D texture.
target is not a 3D texture.
target is not a cubemap texture.
target is not a renderbuffer.
target renderbuffer cannot be multisampled.
target-env opengl
target-env vulkan1.0
tbA;G
tempArg
tempReturn
template
terminator_CreateDevice: Failed in ICD %s vkCreateDevicecall
terminator_CreateDevice: No vkCreateDevice command exposed by ICD %s
terminator_CreateInstance: Failed to CreateInstance and find entrypoints with ICD.  Skipping ICD.
terminator_CreateInstance: Failed to CreateInstance in ICD %d.  Skipping ICD.
terminator_CreateInstance: Failed to add ICD %d to ICD trampoline list.
terminator_CreateInstance: ICD "%s" vkEnumerateInstanceVersion returned error. The ICD will be treated as a 1.0 ICD
ternary operator is not allowed for interface blocks
ternary operator is not allowed for opaque types
ternary operator is not allowed for structures or arrays
ternary operator is not allowed for variables with writeonly
ternary operator is not allowed for void
tessellation control
tessellation control barrier() cannot be placed after a return from main()
tessellation control barrier() cannot be placed within flow control
tessellation control barrier() must be in main()
tessellation evaluation
tessellation input array size must be gl_MaxPatchVertices or implicitly sized
tessellation shaders
tessellation-control per-vertex output l-value must be indexed with gl_InvocationID
testDeviceLost
testHelper
testQuery
tested first
tex2D
texCUBE
tex_cube_sampler
tex_sampler
texcoord
texcoordOffset
texel
texel offset
texelFetch
texelFetch(0H1C0C
texelFetch(0I2C0C
texelFetch(0K2C0C
texelFetch(0L1C0C
texelFetch(0O1C0C
texelFetch(0P2C0C
texelFetch(0Q1C0C
texelFetch(0T2C0C
texelFetch(0V2C0C
texelFetch(0X2C0C
texelFetch(0Z2C0C
texelFetchOffset
texelFetchOffset(0H1C0C1C
texelFetchOffset(0I2C0C2C
texelFetchOffset(0K2C0C1C
texelFetchOffset(0Q1C0C1C
texelFetchOffset(0R2C0C2C
texelFetchOffset(0T2C0C1C
texelFetchOffset(0W1C0C1C
texelFetchOffset(0X2C0C2C
texelFetchOffset(0Z2C0C1C
text file busy
texture
texture has a surface bound to it.
texture image unit
texture is not the name of an existing texture object.
texture is not the name of an immutable texture object.
texture must be complete if level is non-zero.
texture(0Q1B0B
texture(0c2B0B
texture(0d3B0B
texture-rectangle sampler keyword
texture1D
texture1DArray
texture1DGradARB
texture1DLod
texture1DProj
texture1DProjGradARB
texture1DProjLod
texture2D
texture2DArray
texture2DGradARB
texture2DGradEXT
texture2DGradEXT(0H1B1B1B
texture2DLod
texture2DLod(0H1B0B
texture2DLodEXT
texture2DLodEXT(0H1B0B
texture2DMS
texture2DMSArray
texture2DProj
texture2DProj(0H2B0B
texture2DProjGradARB
texture2DProjGradEXT
texture2DProjGradEXT(0H2B1B1B
texture2DProjGradEXT(0H3B1B1B
texture2DProjLod
texture2DProjLod(0H2B0B
texture2DProjLodEXT
texture2DProjLodEXT(0H2B0B
texture2DRect
texture2DRectGradARB
texture2DRectProj
texture2DRectProjGradARB
texture3D
texture3DGradARB
texture3DLod
texture3DProj
texture3DProjGradARB
texture3DProjLod
textureBuffer
textureClamp
textureClampARB
textureCube
textureCubeArray
textureCubeGradARB
textureCubeGradEXT
textureCubeGradEXT(0J2B2B2B
textureCubeLod
textureCubeLodEXT
textureFetch
textureFetchOffset
textureGather
textureGather(0J2B0C
textureGather(0S2B0C
textureGather(0T2B0C
textureGather(0Z2B0C
textureGatherOffset
textureGatherOffset(0H1B1C0C
textureGatherOffset(0K2B1C0C
textureGatherOffset(0Q1B1C0C
textureGatherOffset(0T2B1C
textureGatherOffset(0T2B1C0C
textureGatherOffset(0W1B1C
textureGatherOffset(0W1B1C0C
textureGatherOffset(0Z2B1C0C
textureGatherOffset(0c1B0B1C
textureGatherOffset(0e2B0B1C
textureGatherOffsets
textureGrad
textureGrad(0H1B1B1B
textureGrad(0I2B2B2B
textureGrad(0J2B2B2B
textureGrad(0K2B1B1B
textureGrad(0Q1B1B1B
textureGrad(0R2B2B2B
textureGrad(0S2B2B2B
textureGrad(0T2B1B1B
textureGrad(0W1B1B1B
textureGrad(0X2B2B2B
textureGrad(0Y2B2B2B
textureGrad(0Z2B1B1B
textureGrad(0c2B1B1B
textureGrad(0d3B2B2B
textureGrad(0e3B1B1B
textureGradClamp
textureGradClampARB
textureGradOffset
textureGradOffset(0H1B1B1B1C
textureGradOffset(0I2B2B2B2C
textureGradOffset(0K2B1B1B1C
textureGradOffset(0Q1B1B1B1C
textureGradOffset(0R2B2B2B2C
textureGradOffset(0T2B1B1B1C
textureGradOffset(0W1B1B1B1C
textureGradOffset(0X2B2B2B2C
textureGradOffset(0Z2B1B1B1C
textureGradOffset(0c2B1B1B1C
textureGradOffset(0e3B1B1B1C
textureGradOffsetClamp
textureGradOffsetClampARB
textureLod
textureLod(0J2B0B
textureLod(0Q1B0B
textureLod(0S2B0B
textureLod(0W1B0B
textureLod(0Y2B0B
textureLod(0Z2B0B
textureLodOffset
textureLodOffset(0H1B0B1C
textureLodOffset(0I2B0B2C
textureLodOffset(0K2B0B1C
textureLodOffset(0Q1B0B1C
textureLodOffset(0R2B0B2C
textureLodOffset(0T2B0B1C
textureLodOffset(0W1B0B1C
textureLodOffset(0X2B0B2C
textureLodOffset(0Z2B0B1C
textureLodOffset(0c2B0B1C
textureOffset
textureOffset(0H1B1C0B
textureOffset(0I2B2C0B
textureOffset(0K2B1C0B
textureOffset(0Q1B1C0B
textureOffset(0R2B2C0B
textureOffset(0T2B1C0B
textureOffset(0W1B1C0B
textureOffset(0X2B2C
textureOffset(0X2B2C0B
textureOffset(0Z2B1C0B
textureOffset(0c2B1C0B
textureOffsetClamp
textureOffsetClampARB
textureProj
textureProj(0Q2B0B
textureProj(0R3B0B
textureProj(0X3B0B
textureProjGrad
textureProjGrad(0H2B1B1B
textureProjGrad(0H3B1B1B
textureProjGrad(0I3B2B2B
textureProjGrad(0Q2B1B1B
textureProjGrad(0Q3B1B1B
textureProjGrad(0R3B2B2B
textureProjGrad(0W2B1B1B
textureProjGrad(0W3B1B1B
textureProjGrad(0X3B2B2B
textureProjGrad(0c3B1B1B
textureProjGradOffset
textureProjGradOffset(0H2B1B1B1C
textureProjGradOffset(0H3B1B1B1C
textureProjGradOffset(0I3B2B2B2C
textureProjGradOffset(0Q2B1B1B1C
textureProjGradOffset(0Q3B1B1B1C
textureProjGradOffset(0R3B2B2B2C
textureProjGradOffset(0W2B1B1B1C
textureProjGradOffset(0W3B1B1B1C
textureProjGradOffset(0X3B2B2B2C
textureProjGradOffset(0c3B1B1B1C
textureProjLod
textureProjLod(0H3B0B
textureProjLod(0I3B0B
textureProjLod(0Q2B0B
textureProjLod(0Q3B0B
textureProjLodOffset
textureProjLodOffset(0H2B0B1C
textureProjLodOffset(0H3B0B1C
textureProjLodOffset(0I3B0B2C
textureProjLodOffset(0Q2B0B1C
textureProjLodOffset(0Q3B0B1C
textureProjLodOffset(0R3B0B2C
textureProjLodOffset(0W2B0B1C
textureProjLodOffset(0W3B0B1C
textureProjLodOffset(0X3B0B2C
textureProjLodOffset(0c3B0B1C
textureProjOffset
textureProjOffset(0H2B1C
textureProjOffset(0H2B1C0B
textureProjOffset(0H3B1C
textureProjOffset(0H3B1C0B
textureProjOffset(0I3B2C0B
textureProjOffset(0Q2B1C
textureProjOffset(0Q2B1C0B
textureProjOffset(0Q3B1C
textureProjOffset(0Q3B1C0B
textureProjOffset(0R3B2C0B
textureProjOffset(0W2B1C0B
textureProjOffset(0W3B1C
textureProjOffset(0W3B1C0B
textureProjOffset(0X3B2C
textureProjOffset(0X3B2C0B
textureProjOffset(0c3B1C0B
textureQueryLevels
textureQueryLod
textureSamples
textureSamples and imageSamples
textureSamples(
textureSize
texture_
texture_env_alpha_scale
texture_env_color
texture_env_mode
texture_env_rgb_scale
texture_format
texture_matrix
textures
the  command  would source data beyond the end of the buffer object.
the 'engine' parameter has an unrecognized value
the target is not supported.
there is no such layout identifier for this stage taking an assigned value
timed out
tlLcA
tlMcH
token
token pasting (##)
token too long
too complex expressions inside a switch statement
too large for fragment output
too large, must be less than gl_MaxGeometryOutputVertices
too large; see gl_MaxComputeWorkGroupSize
too many arguments
too many files open
too many files open in system
too many links
too many storage qualifiers
too many symbolic link levels
too many uniforms
transform feedback qualifier
translation_unit
transpose
transpose(
transpose(input.
transpose(mul(transpose(
triangle
triangle order = 
triangle_strip
triangles
triangles_adjacency
triggerDrawCallProgramRecompilation
true case
true case is null
trunc
trunc(
ttIcF
ttIcG
tvLcK
twHcG
tyfD9 tsH
type cannot have precision qualifier
type contains double; xfb_offset must be a multiple of 8
type contains half float; xfb_offset must be a multiple of 2
type conversion on return values was not explicitly allowed until version 420
type does not match, or is not convertible to, the function's return type
type must be an array:
type overflows the available 4 components
type requires declaration of default precision qualifier
type_name_list
type_qualifier
type_specifier
type_specifier_nonarray
typedef
t|IcE
t}H;3u
t}H;7u
u	9o$
u	HcI
u D9~
u HcA<H
u Hc_
u N9t&
u!!D$(H
u$Hc_
u%!D$@H
u%04x
u(8J(t
u)!t$(H
u+D9y
u+z)fI
u-HcF HcN
u.HcC
u/A9@
u1!D$0H
u16vec2
u16vec3
u16vec4
u1D9q
u2A8D
u32vec2
u32vec3
u32vec4
u3H=\0
u3HcH<H
u4D9~
u4I9}(
u64vec2
u64vec3
u64vec4
u8vec2
u8vec3
u8vec4
u8z6H
uMulExtended
uT9|$huN9l$luH
uY8\$ t
u_multiply_alpha
u_offset
u_scale
u_source_texture
u_unmultiply_alpha
uaddCarry
uaddCarry(2D2D2D
uaddCarry(3D3D3D
ub'vb'v
ue!T$(H!T$ 
uimage1D
uimage1DArray
uimage2D
uimage2DArray
uimage2DMS
uimage2DMSArray
uimage2DRect
uimage3D
uimageBuffer
uimageCube
uimageCubeArray
uint   subgroupAdd(uint);
uint   subgroupAnd(uint);
uint   subgroupBallotBitCount(uvec4);
uint   subgroupBallotExclusiveBitCount(uvec4);
uint   subgroupBallotFindLSB(uvec4);
uint   subgroupBallotFindMSB(uvec4);
uint   subgroupBallotInclusiveBitCount(uvec4);
uint   subgroupBroadcast(uint, uint);
uint   subgroupBroadcastFirst(uint);
uint   subgroupClusteredAdd(uint, uint);
uint   subgroupClusteredAnd(uint, uint);
uint   subgroupClusteredMax(uint, uint);
uint   subgroupClusteredMin(uint, uint);
uint   subgroupClusteredMul(uint, uint);
uint   subgroupClusteredOr(uint, uint);
uint   subgroupClusteredXor(uint, uint);
uint   subgroupExclusiveAdd(uint);
uint   subgroupExclusiveAnd(uint);
uint   subgroupExclusiveMax(uint);
uint   subgroupExclusiveMin(uint);
uint   subgroupExclusiveMul(uint);
uint   subgroupExclusiveOr(uint);
uint   subgroupExclusiveXor(uint);
uint   subgroupInclusiveAdd(uint);
uint   subgroupInclusiveAnd(uint);
uint   subgroupInclusiveMax(uint);
uint   subgroupInclusiveMin(uint);
uint   subgroupInclusiveMul(uint);
uint   subgroupInclusiveOr(uint);
uint   subgroupInclusiveXor(uint);
uint   subgroupMax(uint);
uint   subgroupMin(uint);
uint   subgroupMul(uint);
uint   subgroupOr(uint);
uint   subgroupQuadBroadcast(uint, uint);
uint   subgroupQuadSwapDiagonal(uint);
uint   subgroupQuadSwapHorizontal(uint);
uint   subgroupQuadSwapVertical(uint);
uint   subgroupShuffle(uint, uint);
uint   subgroupShuffleDown(uint, uint delta);
uint   subgroupShuffleUp(uint, uint delta);
uint   subgroupShuffleXor(uint, uint);
uint   subgroupXor(uint);
uint atomicAdd(coherent volatile inout uint, uint); int atomicAdd(coherent volatile inout  int,  int);uint atomicAdd(coherent volatile inout uint, uint, int, int, int); int atomicAdd(coherent volatile inout  int,  int, int, int, int);uint atomicMin(coherent volatile inout uint, uint); int atomicMin(coherent volatile inout  int,  int);uint atomicMin(coherent volatile inout uint, uint, int, int, int); int atomicMin(coherent volatile inout  int,  int, int, int, int);uint atomicMax(coherent volatile inout uint, uint); int atomicMax(coherent volatile inout  int,  int);uint atomicMax(coherent volatile inout uint, uint, int, int, int); int atomicMax(coherent volatile inout  int,  int, int, int, int);uint atomicAnd(coherent volatile inout uint, uint); int atomicAnd(coherent volatile inout  int,  int);uint atomicAnd(coherent volatile inout uint, uint, int, int, int); int atomicAnd(coherent volatile inout  int,  int, int, int, int);uint atomicOr (coherent volatile inout uint, uint); int atomicOr (coherent volatile inout  int,  int);uint atomicOr (coherent volatile inout uint, uint, int, int, int); int atomicOr (coherent volatile inout  int,  int, int, int, int);uint atomicXor(coherent volatile inout uint, uint); int atomicXor(coherent volatile inout  int,  int);uint atomicXor(coherent volatile inout uint, uint, int, int, int); int atomicXor(coherent volatile inout  int,  int, int, int, int);uint atomicExchange(coherent volatile inout uint, uint); int atomicExchange(coherent volatile inout  int,  int);uint atomicExchange(coherent volatile inout uint, uint, int, int, int); int atomicExchange(coherent volatile inout  int,  int, int, int, int);uint atomicCompSwap(coherent volatile inout uint, uint, uint); int atomicCompSwap(coherent volatile inout  int,  int,  int);uint atomicCompSwap(coherent volatile inout uint, uint, uint, int, int, int, int, int); int atomicCompSwap(coherent volatile inout  int,  int,  int, int, int, int, int, int);uint atomicLoad(coherent volatile in uint, int, int, int); int atomicLoad(coherent volatile in  int, int, int, int);void atomicStore(coherent volatile out uint, uint, int, int, int);void atomicStore(coherent volatile out  int,  int, int, int, int);
uint atomicCounterAdd(atomic_uint, uint);uint atomicCounterSubtract(atomic_uint, uint);uint atomicCounterMin(atomic_uint, uint);uint atomicCounterMax(atomic_uint, uint);uint atomicCounterAnd(atomic_uint, uint);uint atomicCounterOr(atomic_uint, uint);uint atomicCounterXor(atomic_uint, uint);uint atomicCounterExchange(atomic_uint, uint);uint atomicCounterCompSwap(atomic_uint, uint, uint);
uint atomicCounterIncrement(atomic_uint);uint atomicCounterDecrement(atomic_uint);uint atomicCounter(atomic_uint);
uint bitfieldExtract_emu(uint value, int offset, int bits)
uint bitfieldInsert_emu(uint base, uint insert, int offset, int bits)
uint imageIndex
uint packHalf2x16_emu(in float2 v)
uint packHalf2x16_emu(vec2 v)
uint packSnorm2x16_emu(in float2 v)
uint packSnorm2x16_emu(vec2 v)
uint packSnorm4x8_emu(in float4 v)
uint packUnorm2x16_emu(in float2 v)
uint packUnorm2x16_emu(vec2 v)
uint packUnorm4x8_emu(in float4 v)
uint primitiveID : SV_PrimitiveID, 
uint samplerIndex
uint uaddCarry_emu(uint x, uint y, out uint carry)
uint usubBorrow_emu(uint x, uint y, out uint borrow)
uint webgl_toUnorm16(in float x) {
uint webgl_toUnorm8(in float x) {
uint16BitsToFloat16
uint16BitsToHalf
uint16_t
uint2
uint2 bitfieldExtract_emu(uint2 value, int offset, int bits)
uint2 bitfieldInsert_emu(uint2 base, uint2 insert, int offset, int bits)
uint2 uaddCarry_emu(uint2 x, uint2 y, out uint2 carry)
uint2 usubBorrow_emu(uint2 x, uint2 y, out uint2 borrow)
uint3
uint3 bitfieldExtract_emu(uint3 value, int offset, int bits)
uint3 bitfieldInsert_emu(uint3 base, uint3 insert, int offset, int bits)
uint3 uaddCarry_emu(uint3 x, uint3 y, out uint3 carry)
uint3 usubBorrow_emu(uint3 x, uint3 y, out uint3 borrow)
uint32_t
uint4
uint4 bitfieldExtract_emu(uint4 value, int offset, int bits)
uint4 bitfieldInsert_emu(uint4 base, uint4 insert, int offset, int bits)
uint4 uaddCarry_emu(uint4 x, uint4 y, out uint4 carry)
uint4 usubBorrow_emu(uint4 x, uint4 y, out uint4 borrow)
uint64BitsToDouble
uint64_t
uint64_t atomicMin(coherent volatile inout uint64_t, uint64_t); int64_t atomicMin(coherent volatile inout  int64_t,  int64_t);uint64_t atomicMin(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicMin(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicMax(coherent volatile inout uint64_t, uint64_t); int64_t atomicMax(coherent volatile inout  int64_t,  int64_t);uint64_t atomicMax(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicMax(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicAnd(coherent volatile inout uint64_t, uint64_t); int64_t atomicAnd(coherent volatile inout  int64_t,  int64_t);uint64_t atomicAnd(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicAnd(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicOr (coherent volatile inout uint64_t, uint64_t); int64_t atomicOr (coherent volatile inout  int64_t,  int64_t);uint64_t atomicOr (coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicOr (coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicXor(coherent volatile inout uint64_t, uint64_t); int64_t atomicXor(coherent volatile inout  int64_t,  int64_t);uint64_t atomicXor(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicXor(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicAdd(coherent volatile inout uint64_t, uint64_t); int64_t atomicAdd(coherent volatile inout  int64_t,  int64_t);uint64_t atomicAdd(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicAdd(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicExchange(coherent volatile inout uint64_t, uint64_t); int64_t atomicExchange(coherent volatile inout  int64_t,  int64_t);uint64_t atomicExchange(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicExchange(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicCompSwap(coherent volatile inout uint64_t, uint64_t, uint64_t); int64_t atomicCompSwap(coherent volatile inout  int64_t,  int64_t,  int64_t);uint64_t atomicCompSwap(coherent volatile inout uint64_t, uint64_t, uint64_t, int, int, int, int, int); int64_t atomicCompSwap(coherent volatile inout  int64_t,  int64_t,  int64_t, int, int, int, int, int);uint64_t atomicLoad(coherent volatile in uint64_t, int, int, int); int64_t atomicLoad(coherent volatile in  int64_t, int, int, int);void atomicStore(coherent volatile out uint64_t, uint64_t, int, int, int);void atomicStore(coherent volatile out  int64_t,  int64_t, int, int, int);
uint64_t ballotARB(bool);float readInvocationARB(float, uint);vec2  readInvocationARB(vec2,  uint);vec3  readInvocationARB(vec3,  uint);vec4  readInvocationARB(vec4,  uint);int   readInvocationARB(int,   uint);ivec2 readInvocationARB(ivec2, uint);ivec3 readInvocationARB(ivec3, uint);ivec4 readInvocationARB(ivec4, uint);uint  readInvocationARB(uint,  uint);uvec2 readInvocationARB(uvec2, uint);uvec3 readInvocationARB(uvec3, uint);uvec4 readInvocationARB(uvec4, uint);float readFirstInvocationARB(float);vec2  readFirstInvocationARB(vec2);vec3  readFirstInvocationARB(vec3);vec4  readFirstInvocationARB(vec4);int   readFirstInvocationARB(int);ivec2 readFirstInvocationARB(ivec2);ivec3 readFirstInvocationARB(ivec3);ivec4 readFirstInvocationARB(ivec4);uint  readFirstInvocationARB(uint);uvec2 readFirstInvocationARB(uvec2);uvec3 readFirstInvocationARB(uvec3);uvec4 readFirstInvocationARB(uvec4);
uint8_t
uintBitsToFloat
uintBitsToFloat(
ujGs?
umulExtended
umulExtended(0D0D0D0D
umulExtended(1D1D1D1D
umulExtended(2D2D2D2D
umulExtended(3D3D3D3D
unary_expression
unary_operator
undeclared identifier
undeclared identifier declared as invariant
undef
undefined macro in expression not allowed in es profile
undefined operation for structs containing arrays
undefined operation for structs containing samplers
unexpected
unexpected #elif found after #else
unexpected #elif found without a matching #if
unexpected #else found after another #else
unexpected #else found without a matching #if
unexpected #endif found without a matching #if
unexpected '#'
unexpected end of file found in comment
unexpected end of file found in conditional block
unexpected end of file found in directive
unexpected initializer-list type:
unexpected location
unexpected location; end of argument
unexpected location; end of replacement list
unexpected token
unexpected token after conditional expression
unexpected tokens following #ifdef directive - expected a newline
unexpected tokens following directive
unexpected use of
unexpected use of .length()
uniform
uniform 
uniform block
uniform block binding greater than MAX_UNIFORM_BUFFER_BINDINGS
uniform bool clip_plane_enables[kMaxClipPlanes];
uniform bool enable_alpha_test;
uniform bool enable_clip_planes;
uniform bool enable_color_material;
uniform bool enable_draw_texture;
uniform bool enable_fog;
uniform bool enable_lighting;
uniform bool enable_normalize;
uniform bool enable_rescale_normal;
uniform bool enable_texture_2d[kMaxTexUnits];
uniform bool enable_texture_cube_map[kMaxTexUnits];
uniform bool light_enables[kMaxLights];
uniform bool light_model_two_sided;
uniform bool point_rasterization;
uniform bool point_sprite_coord_replace[kMaxTexUnits];
uniform bool point_sprite_enabled;
uniform bool shade_model_flat;
uniform bool u_multiply_alpha;
uniform bool u_unmultiply_alpha;
uniform buffer-member align
uniform float alpha_test_ref;
uniform float fog_density;
uniform float fog_end;
uniform float fog_start;
uniform float light_attenuation_consts[kMaxLights];
uniform float light_attenuation_linears[kMaxLights];
uniform float light_attenuation_quadratics[kMaxLights];
uniform float light_spotlight_cutoff_angles[kMaxLights];
uniform float light_spotlight_exponents[kMaxLights];
uniform float material_specular_exponent;
uniform float point_size_max;
uniform float point_size_min;
uniform float texture_env_alpha_scale[kMaxTexUnits];
uniform float texture_env_rgb_scale[kMaxTexUnits];
uniform float2 dx_ViewCoords : register(c2);
uniform float3 dx_DepthFront : register(c2);
uniform float3 dx_DepthRange : register(c0);
uniform float4 dx_ViewAdjust : register(c1);
uniform float4 dx_ViewCoords : register(c1);
uniform initializers must be constant
uniform int alpha_func;
uniform int combine_alpha[kMaxTexUnits];
uniform int combine_rgb[kMaxTexUnits];
uniform int fog_mode;
uniform int gl_NumSamples;
uniform int op0_alpha[kMaxTexUnits];
uniform int op0_rgb[kMaxTexUnits];
uniform int op1_alpha[kMaxTexUnits];
uniform int op1_rgb[kMaxTexUnits];
uniform int op2_alpha[kMaxTexUnits];
uniform int op2_rgb[kMaxTexUnits];
uniform int src0_alpha[kMaxTexUnits];
uniform int src0_rgb[kMaxTexUnits];
uniform int src1_alpha[kMaxTexUnits];
uniform int src1_rgb[kMaxTexUnits];
uniform int src2_alpha[kMaxTexUnits];
uniform int src2_rgb[kMaxTexUnits];
uniform int texture_env_mode[kMaxTexUnits];
uniform int texture_format[kMaxTexUnits];
uniform lowp int gl_NumSamples;
uniform mat4  gl_ModelViewMatrix;uniform mat4  gl_ProjectionMatrix;uniform mat4  gl_ModelViewProjectionMatrix;uniform mat3  gl_NormalMatrix;uniform mat4  gl_ModelViewMatrixInverse;uniform mat4  gl_ProjectionMatrixInverse;uniform mat4  gl_ModelViewProjectionMatrixInverse;uniform mat4  gl_ModelViewMatrixTranspose;uniform mat4  gl_ProjectionMatrixTranspose;uniform mat4  gl_ModelViewProjectionMatrixTranspose;uniform mat4  gl_ModelViewMatrixInverseTranspose;uniform mat4  gl_ProjectionMatrixInverseTranspose;uniform mat4  gl_ModelViewProjectionMatrixInverseTranspose;uniform float gl_NormalScale;struct gl_PointParameters {float size;float sizeMin;float sizeMax;float fadeThresholdSize;float distanceConstantAttenuation;float distanceLinearAttenuation;float distanceQuadraticAttenuation;};uniform gl_PointParameters gl_Point;struct gl_MaterialParameters {vec4  emission;vec4  ambient;vec4  diffuse;vec4  specular;float shininess;};uniform gl_MaterialParameters  gl_FrontMaterial;uniform gl_MaterialParameters  gl_BackMaterial;struct gl_LightSourceParameters {vec4  ambient;vec4  diffuse;vec4  specular;vec4  position;vec4  halfVector;vec3  spotDirection;float spotExponent;float spotCutoff;float spotCosCutoff;float constantAttenuation;float linearAttenuation;float quadraticAttenuation;};struct gl_LightModelParameters {vec4  ambient;};uniform gl_LightModelParameters  gl_LightModel;struct gl_LightModelProducts {vec4  sceneColor;};uniform gl_LightModelProducts gl_FrontLightModelProduct;uniform gl_LightModelProducts gl_BackLightModelProduct;struct gl_LightProducts {vec4  ambient;vec4  diffuse;vec4  specular;};struct gl_FogParameters {vec4  color;float density;float start;float end;float scale;};uniform gl_FogParameters gl_Fog;
uniform mat4  gl_TextureMatrix[gl_MaxTextureCoords];uniform mat4  gl_TextureMatrixInverse[gl_MaxTextureCoords];uniform mat4  gl_TextureMatrixTranspose[gl_MaxTextureCoords];uniform mat4  gl_TextureMatrixInverseTranspose[gl_MaxTextureCoords];uniform vec4  gl_ClipPlane[gl_MaxClipPlanes];uniform gl_LightSourceParameters  gl_LightSource[gl_MaxLights];uniform gl_LightProducts gl_FrontLightProduct[gl_MaxLights];uniform gl_LightProducts gl_BackLightProduct[gl_MaxLights];uniform vec4  gl_TextureEnvColor[gl_MaxTextureImageUnits];uniform vec4  gl_EyePlaneS[gl_MaxTextureCoords];uniform vec4  gl_EyePlaneT[gl_MaxTextureCoords];uniform vec4  gl_EyePlaneR[gl_MaxTextureCoords];uniform vec4  gl_EyePlaneQ[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneS[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneT[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneR[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneQ[gl_MaxTextureCoords];
uniform mat4 modelview;
uniform mat4 modelview_invtr;
uniform mat4 projection;
uniform mat4 texture_matrix[kMaxTexUnits];
uniform sampler2D tex_sampler0;
uniform sampler2D tex_sampler1;
uniform sampler2D tex_sampler2;
uniform sampler2D tex_sampler3;
uniform samplerCube tex_cube_sampler0;
uniform samplerCube tex_cube_sampler1;
uniform samplerCube tex_cube_sampler2;
uniform samplerCube tex_cube_sampler3;
uniform uint gl_SubGroupSizeARB;flat in uint     gl_SubGroupInvocationARB;flat in uint64_t gl_SubGroupEqMaskARB;flat in uint64_t gl_SubGroupGeMaskARB;flat in uint64_t gl_SubGroupGtMaskARB;flat in uint64_t gl_SubGroupLeMaskARB;flat in uint64_t gl_SubGroupLtMaskARB;
uniform uint gl_SubGroupSizeARB;in uint     gl_SubGroupInvocationARB;in uint64_t gl_SubGroupEqMaskARB;in uint64_t gl_SubGroupGeMaskARB;in uint64_t gl_SubGroupGtMaskARB;in uint64_t gl_SubGroupLeMaskARB;in uint64_t gl_SubGroupLtMaskARB;
uniform vec2 draw_texture_dims;
uniform vec2 u_offset;
uniform vec2 u_scale;
uniform vec3 light_directions[kMaxLights];
uniform vec3 point_distance_attenuation;
uniform vec4 clip_planes[kMaxClipPlanes];
uniform vec4 draw_texture_coords;
uniform vec4 draw_texture_normalized_crop_rect[kMaxTexUnits];
uniform vec4 fog_color;
uniform vec4 light_ambients[kMaxLights];
uniform vec4 light_diffuses[kMaxLights];
uniform vec4 light_model_scene_ambient;
uniform vec4 light_positions[kMaxLights];
uniform vec4 light_speculars[kMaxLights];
uniform vec4 material_ambient;
uniform vec4 material_diffuse;
uniform vec4 material_emissive;
uniform vec4 material_specular;
uniform vec4 texture_env_color[kMaxTexUnits];
uniform/buffer blocks require layout(binding=X)
uniformBlockIndex exceeds active uniform block count.
union
unit cannot be greater than or equal than MAX_IMAGE_UNITS = 
unknown
unknown attribute.
unknown blend equation
unknown block storage
unknown built-in variable
unknown color space conversion standard
unknown error
unknown exception
unknown geometry shader primitive type
unknown glslang aggregate
unknown glslang binary operation
unknown glslang unary
unknown internal image format
unknown matrix packing
unknown object type.
unknown operation with no arguments
unknown precision qualifier
unknown profile
unknown qualifier
unknown requalification
unknown stage
unknown swizzle selection
unknown type
unmapBuffer
unpack16
unpack32
unpack8
unpackDouble2x32
unpackFloat2x16
unpackHalf2x16
unpackInt2x16
unpackInt2x32
unpackInt4x16
unpackSnorm2x16
unpackSnorm4x8
unpackUint2x16
unpackUint2x32
unpackUint4x16
unpackUnorm2x16
unpackUnorm4x8
unrecognized layout identifier, or qualifier requires assignment (e.g., binding = 4)
unrecognized pragma
unrecognized token
unroll
unsigned
unsigned integer
unsigned integer vector
unsigned literal
unsupported construction
unsupported shader version
unsupported type
unsupported type - 
unsupported value
unterminated macro invocation
updateTraceEventDuration
usampler1D
usampler1DArray
usampler2D
usampler2DArray
usampler2DMS
usampler2DMSArray
usampler2DRect
usampler3D
usamplerBuffer
usamplerCube
usamplerCubeArray
use-storage-buffer
use-vulkan-memory-model
useLevelZeroWorkaroundTexture
use_storage_buffer
use_vulkan_memory_model
used at end of comment, but this version does not provide line continuation
used at end of comment; the following line is still part of the comment
useless application of layout qualifier
using
using 
using ES precision qualifier keyword
using early_fragment_tests
using future keyword
using future non-square matrix type keyword
using future reserved keyword
using future type keyword
using point mode
using post_depth_coverage
ust is null
usubBorrow
usubBorrow(0D0D0D
usubBorrow(1D1D1D
usubBorrow(3D3D3D
usubpassInput
usubpassInputMS
utexture1D
utexture1DArray
utexture2D
utexture2DArray
utexture2DMS
utexture2DMSArray
utexture2DRect
utexture3D
utextureBuffer
utextureCube
utextureCubeArray
uvec2
uvec2  subgroupAdd(uvec2);
uvec2  subgroupAnd(uvec2);
uvec2  subgroupBroadcast(uvec2, uint);
uvec2  subgroupBroadcastFirst(uvec2);
uvec2  subgroupClusteredAdd(uvec2, uint);
uvec2  subgroupClusteredAnd(uvec2, uint);
uvec2  subgroupClusteredMax(uvec2, uint);
uvec2  subgroupClusteredMin(uvec2, uint);
uvec2  subgroupClusteredMul(uvec2, uint);
uvec2  subgroupClusteredOr(uvec2, uint);
uvec2  subgroupClusteredXor(uvec2, uint);
uvec2  subgroupExclusiveAdd(uvec2);
uvec2  subgroupExclusiveAnd(uvec2);
uvec2  subgroupExclusiveMax(uvec2);
uvec2  subgroupExclusiveMin(uvec2);
uvec2  subgroupExclusiveMul(uvec2);
uvec2  subgroupExclusiveOr(uvec2);
uvec2  subgroupExclusiveXor(uvec2);
uvec2  subgroupInclusiveAdd(uvec2);
uvec2  subgroupInclusiveAnd(uvec2);
uvec2  subgroupInclusiveMax(uvec2);
uvec2  subgroupInclusiveMin(uvec2);
uvec2  subgroupInclusiveMul(uvec2);
uvec2  subgroupInclusiveOr(uvec2);
uvec2  subgroupInclusiveXor(uvec2);
uvec2  subgroupMax(uvec2);
uvec2  subgroupMin(uvec2);
uvec2  subgroupMul(uvec2);
uvec2  subgroupOr(uvec2);
uvec2  subgroupQuadBroadcast(uvec2, uint);
uvec2  subgroupQuadSwapDiagonal(uvec2);
uvec2  subgroupQuadSwapHorizontal(uvec2);
uvec2  subgroupQuadSwapVertical(uvec2);
uvec2  subgroupShuffle(uvec2, uint);
uvec2  subgroupShuffleDown(uvec2, uint delta);
uvec2  subgroupShuffleUp(uvec2, uint delta);
uvec2  subgroupShuffleXor(uvec2, uint);
uvec2  subgroupXor(uvec2);
uvec3
uvec3  subgroupAdd(uvec3);
uvec3  subgroupAnd(uvec3);
uvec3  subgroupBroadcast(uvec3, uint);
uvec3  subgroupBroadcastFirst(uvec3);
uvec3  subgroupClusteredAdd(uvec3, uint);
uvec3  subgroupClusteredAnd(uvec3, uint);
uvec3  subgroupClusteredMax(uvec3, uint);
uvec3  subgroupClusteredMin(uvec3, uint);
uvec3  subgroupClusteredMul(uvec3, uint);
uvec3  subgroupClusteredOr(uvec3, uint);
uvec3  subgroupClusteredXor(uvec3, uint);
uvec3  subgroupExclusiveAdd(uvec3);
uvec3  subgroupExclusiveAnd(uvec3);
uvec3  subgroupExclusiveMax(uvec3);
uvec3  subgroupExclusiveMin(uvec3);
uvec3  subgroupExclusiveMul(uvec3);
uvec3  subgroupExclusiveOr(uvec3);
uvec3  subgroupExclusiveXor(uvec3);
uvec3  subgroupInclusiveAdd(uvec3);
uvec3  subgroupInclusiveAnd(uvec3);
uvec3  subgroupInclusiveMax(uvec3);
uvec3  subgroupInclusiveMin(uvec3);
uvec3  subgroupInclusiveMul(uvec3);
uvec3  subgroupInclusiveOr(uvec3);
uvec3  subgroupInclusiveXor(uvec3);
uvec3  subgroupMax(uvec3);
uvec3  subgroupMin(uvec3);
uvec3  subgroupMul(uvec3);
uvec3  subgroupOr(uvec3);
uvec3  subgroupQuadBroadcast(uvec3, uint);
uvec3  subgroupQuadSwapDiagonal(uvec3);
uvec3  subgroupQuadSwapHorizontal(uvec3);
uvec3  subgroupQuadSwapVertical(uvec3);
uvec3  subgroupShuffle(uvec3, uint);
uvec3  subgroupShuffleDown(uvec3, uint delta);
uvec3  subgroupShuffleUp(uvec3, uint delta);
uvec3  subgroupShuffleXor(uvec3, uint);
uvec3  subgroupXor(uvec3);
uvec4
uvec4  subgroupAdd(uvec4);
uvec4  subgroupAnd(uvec4);
uvec4  subgroupBallot(bool);
uvec4  subgroupBroadcast(uvec4, uint);
uvec4  subgroupBroadcastFirst(uvec4);
uvec4  subgroupClusteredAdd(uvec4, uint);
uvec4  subgroupClusteredAnd(uvec4, uint);
uvec4  subgroupClusteredMax(uvec4, uint);
uvec4  subgroupClusteredMin(uvec4, uint);
uvec4  subgroupClusteredMul(uvec4, uint);
uvec4  subgroupClusteredOr(uvec4, uint);
uvec4  subgroupClusteredXor(uvec4, uint);
uvec4  subgroupExclusiveAdd(uvec4);
uvec4  subgroupExclusiveAnd(uvec4);
uvec4  subgroupExclusiveMax(uvec4);
uvec4  subgroupExclusiveMin(uvec4);
uvec4  subgroupExclusiveMul(uvec4);
uvec4  subgroupExclusiveOr(uvec4);
uvec4  subgroupExclusiveXor(uvec4);
uvec4  subgroupInclusiveAdd(uvec4);
uvec4  subgroupInclusiveAnd(uvec4);
uvec4  subgroupInclusiveMax(uvec4);
uvec4  subgroupInclusiveMin(uvec4);
uvec4  subgroupInclusiveMul(uvec4);
uvec4  subgroupInclusiveOr(uvec4);
uvec4  subgroupInclusiveXor(uvec4);
uvec4  subgroupMax(uvec4);
uvec4  subgroupMin(uvec4);
uvec4  subgroupMul(uvec4);
uvec4  subgroupOr(uvec4);
uvec4  subgroupQuadBroadcast(uvec4, uint);
uvec4  subgroupQuadSwapDiagonal(uvec4);
uvec4  subgroupQuadSwapHorizontal(uvec4);
uvec4  subgroupQuadSwapVertical(uvec4);
uvec4  subgroupShuffle(uvec4, uint);
uvec4  subgroupShuffleDown(uvec4, uint delta);
uvec4  subgroupShuffleUp(uvec4, uint delta);
uvec4  subgroupShuffleXor(uvec4, uint);
uvec4  subgroupXor(uvec4);
uxHcOP
uzKs@>
u~9t$Xt
u~LcW
v0D8eou\H
v2!L.2
v8I9v@tl
vA9E|
vVH97H
value
value is out of range:
value must be 0 or 1
value too large
variable expected
variable index
variable indexing buffer block array
variable indexing fragment shader output array
variable indexing sampler array
variable indexing uniform block array
variable name expected
variable_identifier
variables with qualifier 'const' must be initialized
varying
varying vec4  gl_Color;varying vec4  gl_SecondaryColor;varying vec4  gl_TexCoord[];varying float gl_FogFragCoord;
vec2   subgroupAdd(vec2);
vec2   subgroupBroadcast(vec2, uint);
vec2   subgroupBroadcastFirst(vec2);
vec2   subgroupClusteredAdd(vec2, uint);
vec2   subgroupClusteredMax(vec2, uint);
vec2   subgroupClusteredMin(vec2, uint);
vec2   subgroupClusteredMul(vec2, uint);
vec2   subgroupExclusiveAdd(vec2);
vec2   subgroupExclusiveMax(vec2);
vec2   subgroupExclusiveMin(vec2);
vec2   subgroupExclusiveMul(vec2);
vec2   subgroupInclusiveAdd(vec2);
vec2   subgroupInclusiveMax(vec2);
vec2   subgroupInclusiveMin(vec2);
vec2   subgroupInclusiveMul(vec2);
vec2   subgroupMax(vec2);
vec2   subgroupMin(vec2);
vec2   subgroupMul(vec2);
vec2   subgroupQuadBroadcast(vec2, uint);
vec2   subgroupQuadSwapDiagonal(vec2);
vec2   subgroupQuadSwapHorizontal(vec2);
vec2   subgroupQuadSwapVertical(vec2);
vec2   subgroupShuffle(vec2, uint);
vec2   subgroupShuffleDown(vec2, uint delta);
vec2   subgroupShuffleUp(vec2, uint delta);
vec2   subgroupShuffleXor(vec2, uint);
vec2 gl_PointCoord;
vec2 textureQueryLod(
vec2 unpackHalf2x16_emu(uint u)
vec2 unpackSnorm2x16_emu(uint u)
vec2 unpackUnorm2x16_emu(uint u)
vec3   subgroupAdd(vec3);
vec3   subgroupBroadcast(vec3, uint);
vec3   subgroupBroadcastFirst(vec3);
vec3   subgroupClusteredAdd(vec3, uint);
vec3   subgroupClusteredMax(vec3, uint);
vec3   subgroupClusteredMin(vec3, uint);
vec3   subgroupClusteredMul(vec3, uint);
vec3   subgroupExclusiveAdd(vec3);
vec3   subgroupExclusiveMax(vec3);
vec3   subgroupExclusiveMin(vec3);
vec3   subgroupExclusiveMul(vec3);
vec3   subgroupInclusiveAdd(vec3);
vec3   subgroupInclusiveMax(vec3);
vec3   subgroupInclusiveMin(vec3);
vec3   subgroupInclusiveMul(vec3);
vec3   subgroupMax(vec3);
vec3   subgroupMin(vec3);
vec3   subgroupMul(vec3);
vec3   subgroupQuadBroadcast(vec3, uint);
vec3   subgroupQuadSwapDiagonal(vec3);
vec3   subgroupQuadSwapHorizontal(vec3);
vec3   subgroupQuadSwapVertical(vec3);
vec3   subgroupShuffle(vec3, uint);
vec3   subgroupShuffleDown(vec3, uint delta);
vec3   subgroupShuffleUp(vec3, uint delta);
vec3   subgroupShuffleXor(vec3, uint);
vec3 calcNormal(vec3 normalInput)
vec3 textureCombineSrcnOpnRgb(int srcnRgb,
vec4 
vec4   subgroupAdd(vec4);
vec4   subgroupBroadcast(vec4, uint);
vec4   subgroupBroadcastFirst(vec4);
vec4   subgroupClusteredAdd(vec4, uint);
vec4   subgroupClusteredMax(vec4, uint);
vec4   subgroupClusteredMin(vec4, uint);
vec4   subgroupClusteredMul(vec4, uint);
vec4   subgroupExclusiveAdd(vec4);
vec4   subgroupExclusiveMax(vec4);
vec4   subgroupExclusiveMin(vec4);
vec4   subgroupExclusiveMul(vec4);
vec4   subgroupInclusiveAdd(vec4);
vec4   subgroupInclusiveMax(vec4);
vec4   subgroupInclusiveMin(vec4);
vec4   subgroupInclusiveMul(vec4);
vec4   subgroupMax(vec4);
vec4   subgroupMin(vec4);
vec4   subgroupMul(vec4);
vec4   subgroupQuadBroadcast(vec4, uint);
vec4   subgroupQuadSwapDiagonal(vec4);
vec4   subgroupQuadSwapHorizontal(vec4);
vec4   subgroupQuadSwapVertical(vec4);
vec4   subgroupShuffle(vec4, uint);
vec4   subgroupShuffleDown(vec4, uint delta);
vec4   subgroupShuffleUp(vec4, uint delta);
vec4   subgroupShuffleXor(vec4, uint);
vec4  gl_FragCoord;bool  gl_FrontFacing;float gl_FragDepth;
vec4 calcNdcFromWorldPosition(vec4 worldPos)
vec4 calcWorldPosition(vec4 posInput)
vec4 doFog(vec4 currentFragment)
vec4 doLighting(vec4 currentFragment)
vec4 drawTexturePosition(int vertexId)
vec4 drawTextureTexCoord(int vertexId, int textureUnit)
vec4 ftransform();
vec4 getPointSpriteTextureColor(int unit)
vec4 getTextureColor(int unit)
vec4 gl_ClipVertex;vec4 gl_FrontColor;vec4 gl_BackColor;vec4 gl_FrontSecondaryColor;vec4 gl_BackSecondaryColor;vec4 gl_TexCoord[];float gl_FogFragCoord;
vec4 gl_FragColor;
vec4 gl_Position;float gl_PointSize;
vec4 imageLoad(readonly volatile coherent 
vec4 subpassLoad
vec4 texture1D(sampler1D, float);vec4 texture1DProj(sampler1D, vec2);vec4 texture1DProj(sampler1D, vec4);vec4 shadow1D(sampler1DShadow, vec3);vec4 shadow2D(sampler2DShadow, vec3);vec4 shadow1DProj(sampler1DShadow, vec4);vec4 shadow2DProj(sampler2DShadow, vec4);vec4 texture2DRect(sampler2DRect, vec2);vec4 texture2DRectProj(sampler2DRect, vec3);vec4 texture2DRectProj(sampler2DRect, vec4);vec4 shadow2DRect(sampler2DRectShadow, vec3);vec4 shadow2DRectProj(sampler2DRectShadow, vec4);
vec4 texture1D(sampler1D, float, float);vec4 texture1DProj(sampler1D, vec2, float);vec4 texture1DProj(sampler1D, vec4, float);vec4 shadow1D(sampler1DShadow, vec3, float);vec4 shadow2D(sampler2DShadow, vec3, float);vec4 shadow1DProj(sampler1DShadow, vec4, float);vec4 shadow2DProj(sampler2DShadow, vec4, float);
vec4 texture1DLod(sampler1D, float, float);vec4 texture1DProjLod(sampler1D, vec2, float);vec4 texture1DProjLod(sampler1D, vec4, float);vec4 shadow1DLod(sampler1DShadow, vec3, float);vec4 shadow2DLod(sampler2DShadow, vec3, float);vec4 shadow1DProjLod(sampler1DShadow, vec4, float);vec4 shadow2DProjLod(sampler2DShadow, vec4, float);vec4 texture1DGradARB(sampler1D, float, float, float);vec4 texture1DProjGradARB(sampler1D, vec2, float, float);vec4 texture1DProjGradARB(sampler1D, vec4, float, float);vec4 texture2DGradARB(sampler2D, vec2, vec2, vec2);vec4 texture2DProjGradARB(sampler2D, vec3, vec2, vec2);vec4 texture2DProjGradARB(sampler2D, vec4, vec2, vec2);vec4 texture3DGradARB(sampler3D, vec3, vec3, vec3);vec4 texture3DProjGradARB(sampler3D, vec4, vec3, vec3);vec4 textureCubeGradARB(samplerCube, vec3, vec3, vec3);vec4 shadow1DGradARB(sampler1DShadow, vec3, float, float);vec4 shadow1DProjGradARB( sampler1DShadow, vec4, float, float);vec4 shadow2DGradARB(sampler2DShadow, vec3, vec2, vec2);vec4 shadow2DProjGradARB( sampler2DShadow, vec4, vec2, vec2);vec4 texture2DRectGradARB(sampler2DRect, vec2, vec2, vec2);vec4 texture2DRectProjGradARB( sampler2DRect, vec3, vec2, vec2);vec4 texture2DRectProjGradARB( sampler2DRect, vec4, vec2, vec2);vec4 shadow2DRectGradARB( sampler2DRectShadow, vec3, vec2, vec2);vec4 shadow2DRectProjGradARB(sampler2DRectShadow, vec4, vec2, vec2);
vec4 texture2D(sampler2D, vec2);vec4 texture2DProj(sampler2D, vec3);vec4 texture2DProj(sampler2D, vec4);vec4 texture3D(sampler3D, vec3);vec4 texture3DProj(sampler3D, vec4);vec4 textureCube(samplerCube, vec3);
vec4 texture2D(sampler2D, vec2, float);vec4 texture2DProj(sampler2D, vec3, float);vec4 texture2DProj(sampler2D, vec4, float);vec4 texture3D(sampler3D, vec3, float);vec4 texture3DProj(sampler3D, vec4, float);vec4 textureCube(samplerCube, vec3, float);
vec4 texture2D(samplerExternalOES, vec2 coord);vec4 texture2DProj(samplerExternalOES, vec3);vec4 texture2DProj(samplerExternalOES, vec4);
vec4 texture2DGradEXT(sampler2D, vec2, vec2, vec2);vec4 texture2DProjGradEXT(sampler2D, vec3, vec2, vec2);vec4 texture2DProjGradEXT(sampler2D, vec4, vec2, vec2);vec4 textureCubeGradEXT(samplerCube, vec3, vec3, vec3);float shadow2DEXT(sampler2DShadow, vec3);float shadow2DProjEXT(sampler2DShadow, vec4);
vec4 texture2DLod(sampler2D, vec2, float);vec4 texture2DProjLod(sampler2D, vec3, float);vec4 texture2DProjLod(sampler2D, vec4, float);vec4 texture3DLod(sampler3D, vec3, float);vec4 texture3DProjLod(sampler3D, vec4, float);vec4 textureCubeLod(samplerCube, vec3, float);
vec4 texture2DLodEXT(sampler2D, vec2, float);vec4 texture2DProjLodEXT(sampler2D, vec3, float);vec4 texture2DProjLodEXT(sampler2D, vec4, float);vec4 textureCubeLodEXT(samplerCube, vec3, float);
vec4 textureCombine(int combineRgb,
vec4 textureFunction(int unit,
vec4 unpackSnorm4x8(highp uint);vec4 unpackUnorm4x8(highp uint);
vec4);
vector field selection out of range
vector index out of range '%d'
vector scale second child into first child
vector swizzle
vector swizzle (
vector swizzle selection out of range
vector swizzle selectors not from the same set
vector swizzle too long
vector-scale
vector-times-matrix
vector<T> too long
vector<bool> too long
verify_meta_layer_comp_layers: Adding meta-layer %s which also contains meta-layer %s
version
version not supported
version number not supported
vertex
vertex input arrays
vertex input cannot be further qualified
vertex output block
vertex spacing = 
vertex-shader `double` type input
vertex-shader array-of-array output
vertex-shader array-of-struct output
vertex-shader struct output
vertex-shader struct output containing an array
vertex-shader struct output containing structure
vertices
vertices = 
viewport
viewportOffsets cannot contain negative values.
viewportYScale
vkAcquireNextImage2KHR
vkAcquireNextImageKHR
vkAllocateCommandBuffers
vkAllocateDescriptorSets
vkAllocateMemory
vkBeginCommandBuffer
vkBindAccelerationStructureMemoryNVX
vkBindBufferMemory
vkBindBufferMemory2
vkBindBufferMemory2KHR
vkBindImageMemory
vkBindImageMemory2
vkBindImageMemory2KHR
vkCmdBeginConditionalRenderingEXT
vkCmdBeginDebugUtilsLabelEXT
vkCmdBeginQuery
vkCmdBeginRenderPass
vkCmdBeginRenderPass2KHR
vkCmdBindDescriptorSets
vkCmdBindIndexBuffer
vkCmdBindPipeline
vkCmdBindShadingRateImageNV
vkCmdBindVertexBuffers
vkCmdBlitImage
vkCmdBuildAccelerationStructureNVX
vkCmdClearAttachments
vkCmdClearColorImage
vkCmdClearDepthStencilImage
vkCmdCopyAccelerationStructureNVX
vkCmdCopyBuffer
vkCmdCopyBufferToImage
vkCmdCopyImage
vkCmdCopyImageToBuffer
vkCmdCopyQueryPoolResults
vkCmdDebugMarkerBeginEXT
vkCmdDebugMarkerEndEXT
vkCmdDebugMarkerInsertEXT
vkCmdDispatch
vkCmdDispatchBase
vkCmdDispatchBaseKHR
vkCmdDispatchIndirect
vkCmdDraw
vkCmdDrawIndexed
vkCmdDrawIndexedIndirect
vkCmdDrawIndexedIndirectCountAMD
vkCmdDrawIndexedIndirectCountKHR
vkCmdDrawIndirect
vkCmdDrawIndirectCountAMD
vkCmdDrawIndirectCountKHR
vkCmdDrawMeshTasksIndirectCountNV
vkCmdDrawMeshTasksIndirectNV
vkCmdDrawMeshTasksNV
vkCmdEndConditionalRenderingEXT
vkCmdEndDebugUtilsLabelEXT
vkCmdEndQuery
vkCmdEndRenderPass
vkCmdEndRenderPass2KHR
vkCmdExecuteCommands
vkCmdFillBuffer
vkCmdInsertDebugUtilsLabelEXT
vkCmdNextSubpass
vkCmdNextSubpass2KHR
vkCmdPipelineBarrier
vkCmdProcessCommandsNVX
vkCmdPushConstants
vkCmdPushDescriptorSetKHR
vkCmdPushDescriptorSetWithTemplateKHR
vkCmdReserveSpaceForCommandsNVX
vkCmdResetEvent
vkCmdResetQueryPool
vkCmdResolveImage
vkCmdSetBlendConstants
vkCmdSetCheckpointNV
vkCmdSetCoarseSampleOrderNV
vkCmdSetDepthBias
vkCmdSetDepthBounds
vkCmdSetDeviceMask
vkCmdSetDeviceMaskKHR
vkCmdSetDiscardRectangleEXT
vkCmdSetEvent
vkCmdSetExclusiveScissorNV
vkCmdSetLineWidth
vkCmdSetSampleLocationsEXT
vkCmdSetScissor
vkCmdSetStencilCompareMask
vkCmdSetStencilReference
vkCmdSetStencilWriteMask
vkCmdSetViewport
vkCmdSetViewportShadingRatePaletteNV
vkCmdSetViewportWScalingNV
vkCmdTraceRaysNVX
vkCmdUpdateBuffer
vkCmdWaitEvents
vkCmdWriteAccelerationStructurePropertiesNVX
vkCmdWriteBufferMarkerAMD
vkCmdWriteTimestamp
vkCompileDeferredNVX
vkCreateAccelerationStructureNVX
vkCreateBuffer
vkCreateBufferView
vkCreateCommandPool
vkCreateComputePipelines
vkCreateDebugReportCallbackEXT
vkCreateDebugUtilsMessengerEXT
vkCreateDescriptorPool
vkCreateDescriptorSetLayout
vkCreateDescriptorUpdateTemplate
vkCreateDescriptorUpdateTemplateKHR
vkCreateDevice
vkCreateDevice extension %s not available for devices associated with ICD %s
vkCreateDevice:  Failed to add extensions to list
vkCreateDevice:  Failed to allocate application activated layer list of size %d.
vkCreateDevice:  Failed to allocate expanded activated layer list of size %d.
vkCreateDevice:  Failed to create ICD extension list
vkCreateDevice:  Failed to create device chain.
vkCreateDevice:  Failed to validate extensions in list
vkCreateDevice: Emulating handling of VkPhysicalDeviceFeatures2 in pNext chain for ICD "%s"
vkCreateDevice: Emulating handling of VkPhysicalDeviceGroupProperties in pNext chain for ICD "%s"
vkCreateDevice: Emulation failed to create device from device group info
vkCreateDisplayModeKHR
vkCreateDisplayPlaneSurfaceKHR
vkCreateEvent
vkCreateFence
vkCreateFramebuffer
vkCreateGraphicsPipelines
vkCreateImage
vkCreateImageView
vkCreateIndirectCommandsLayoutNVX
vkCreateInstance
vkCreateInstance:  Failed to allocate Loader's full Instance dispatch table.
vkCreateObjectTableNVX
vkCreatePipelineCache
vkCreatePipelineLayout
vkCreateQueryPool
vkCreateRaytracingPipelinesNVX
vkCreateRenderPass
vkCreateRenderPass2KHR
vkCreateSampler
vkCreateSamplerYcbcrConversion
vkCreateSamplerYcbcrConversionKHR
vkCreateSemaphore
vkCreateShaderModule
vkCreateSharedSwapchainsKHR
vkCreateSwapchainKHR
vkCreateValidationCacheEXT
vkCreateWin32SurfaceKHR
vkDebugMarkerSetObjectNameEXT
vkDebugMarkerSetObjectTagEXT
vkDebugReportMessageEXT
vkDestroyAccelerationStructureNVX
vkDestroyBuffer
vkDestroyBufferView
vkDestroyCommandPool
vkDestroyDebugReportCallbackEXT
vkDestroyDebugUtilsMessengerEXT
vkDestroyDescriptorPool
vkDestroyDescriptorSetLayout
vkDestroyDescriptorUpdateTemplate
vkDestroyDescriptorUpdateTemplateKHR
vkDestroyDevice
vkDestroyEvent
vkDestroyFence
vkDestroyFramebuffer
vkDestroyImage
vkDestroyImageView
vkDestroyIndirectCommandsLayoutNVX
vkDestroyInstance
vkDestroyObjectTableNVX
vkDestroyPipeline
vkDestroyPipelineCache
vkDestroyPipelineLayout
vkDestroyQueryPool
vkDestroyRenderPass
vkDestroySampler
vkDestroySamplerYcbcrConversion
vkDestroySamplerYcbcrConversionKHR
vkDestroySemaphore
vkDestroyShaderModule
vkDestroySurfaceKHR
vkDestroySwapchainKHR
vkDestroyValidationCacheEXT
vkDeviceWaitIdle
vkDisplayPowerControlEXT
vkEndCommandBuffer
vkEnumerateDeviceExtensionProperties
vkEnumerateDeviceExtensionProperties:  pLayerName is too long or is badly formed
vkEnumerateDeviceLayerProperties
vkEnumerateInstanceExtensionProperties
vkEnumerateInstanceLayerProperties
vkEnumerateInstanceVersion
vkEnumeratePhysicalDeviceGroups
vkEnumeratePhysicalDeviceGroupsKHR
vkEnumeratePhysicalDeviceGroupsKHR: Received NULL pointer for physical device group count return value.
vkEnumeratePhysicalDeviceGroupsKHR: Trimming device group count down by application request from %d to %d physical device groups
vkEnumeratePhysicalDevices
vkEnumeratePhysicalDevices: Received NULL pointer for physical device count return value.
vkEnumeratePhysicalDevices: Trimming device count down by application request from %d to %d physical devices
vkFlushMappedMemoryRanges
vkFreeCommandBuffers
vkFreeDescriptorSets
vkFreeMemory
vkGetAccelerationStructureHandleNVX
vkGetAccelerationStructureMemoryRequirementsNVX
vkGetAccelerationStructureScratchMemoryRequirementsNVX
vkGetBufferMemoryRequirements
vkGetBufferMemoryRequirements2
vkGetBufferMemoryRequirements2KHR
vkGetDescriptorSetLayoutSupport
vkGetDescriptorSetLayoutSupportKHR
vkGetDeviceGroupPeerMemoryFeatures
vkGetDeviceGroupPeerMemoryFeaturesKHR
vkGetDeviceGroupPresentCapabilitiesKHR
vkGetDeviceGroupSurfacePresentModesKHR
vkGetDeviceMemoryCommitment
vkGetDeviceProcAddr
vkGetDeviceQueue
vkGetDeviceQueue2
vkGetDisplayModeProperties2KHR
vkGetDisplayModeProperties2KHR: Emulating call in ICD "%s"
vkGetDisplayModePropertiesKHR
vkGetDisplayPlaneCapabilities2KHR
vkGetDisplayPlaneCapabilities2KHR: Emulating call in ICD "%s"
vkGetDisplayPlaneCapabilitiesKHR
vkGetDisplayPlaneSupportedDisplaysKHR
vkGetEventStatus
vkGetFenceFdKHR
vkGetFenceStatus
vkGetFenceWin32HandleKHR
vkGetImageMemoryRequirements
vkGetImageMemoryRequirements2
vkGetImageMemoryRequirements2KHR
vkGetImageSparseMemoryRequirements
vkGetImageSparseMemoryRequirements2
vkGetImageSparseMemoryRequirements2KHR
vkGetImageSubresourceLayout
vkGetInstanceProcAddr
vkGetMemoryFdKHR
vkGetMemoryFdPropertiesKHR
vkGetMemoryHostPointerPropertiesEXT
vkGetMemoryWin32HandleKHR
vkGetMemoryWin32HandleNV
vkGetMemoryWin32HandlePropertiesKHR
vkGetPastPresentationTimingGOOGLE
vkGetPhysicalDeviceDisplayPlaneProperties2KHR
vkGetPhysicalDeviceDisplayPlaneProperties2KHR: Emulating call in ICD "%s"
vkGetPhysicalDeviceDisplayPlanePropertiesKHR
vkGetPhysicalDeviceDisplayProperties2KHR
vkGetPhysicalDeviceDisplayProperties2KHR: Emulating call in ICD "%s"
vkGetPhysicalDeviceDisplayPropertiesKHR
vkGetPhysicalDeviceExternalBufferProperties
vkGetPhysicalDeviceExternalBufferProperties: Emulating call in ICD "%s"
vkGetPhysicalDeviceExternalBufferProperties: Emulation found unrecognized structure type in pExternalBufferInfo->pNext - this struct will be ignored
vkGetPhysicalDeviceExternalBufferProperties: Emulation found unrecognized structure type in pExternalBufferProperties->pNext - this struct will be ignored
vkGetPhysicalDeviceExternalBufferPropertiesKHR
vkGetPhysicalDeviceExternalFenceProperties
vkGetPhysicalDeviceExternalFenceProperties: Emulating call in ICD "%s"
vkGetPhysicalDeviceExternalFenceProperties: Emulation found unrecognized structure type in pExternalFenceInfo->pNext - this struct will be ignored
vkGetPhysicalDeviceExternalFenceProperties: Emulation found unrecognized structure type in pExternalFenceProperties->pNext - this struct will be ignored
vkGetPhysicalDeviceExternalFencePropertiesKHR
vkGetPhysicalDeviceExternalImageFormatPropertiesNV
vkGetPhysicalDeviceExternalSemaphoreProperties
vkGetPhysicalDeviceExternalSemaphoreProperties: Emulating call in ICD "%s"
vkGetPhysicalDeviceExternalSemaphoreProperties: Emulation found unrecognized structure type in pExternalSemaphoreInfo->pNext - this struct will be ignored
vkGetPhysicalDeviceExternalSemaphoreProperties: Emulation found unrecognized structure type in pExternalSemaphoreProperties->pNext - this struct will be ignored
vkGetPhysicalDeviceExternalSemaphorePropertiesKHR
vkGetPhysicalDeviceFeatures
vkGetPhysicalDeviceFeatures2
vkGetPhysicalDeviceFeatures2: Emulating call in ICD "%s" using vkGetPhysicalDeviceFeatures
vkGetPhysicalDeviceFeatures2: Emulation found unrecognized structure type in pFeatures->pNext - this struct will be ignored
vkGetPhysicalDeviceFeatures2KHR
vkGetPhysicalDeviceFormatProperties
vkGetPhysicalDeviceFormatProperties2
vkGetPhysicalDeviceFormatProperties2: Emulating call in ICD "%s" using vkGetPhysicalDeviceFormatProperties
vkGetPhysicalDeviceFormatProperties2: Emulation found unrecognized structure type in pFormatProperties->pNext - this struct will be ignored
vkGetPhysicalDeviceFormatProperties2KHR
vkGetPhysicalDeviceGeneratedCommandsPropertiesNVX
vkGetPhysicalDeviceImageFormatProperties
vkGetPhysicalDeviceImageFormatProperties2
vkGetPhysicalDeviceImageFormatProperties2: Emulating call in ICD "%s" using vkGetPhysicalDeviceImageFormatProperties
vkGetPhysicalDeviceImageFormatProperties2KHR
vkGetPhysicalDeviceMemoryProperties
vkGetPhysicalDeviceMemoryProperties2
vkGetPhysicalDeviceMemoryProperties2: Emulating call in ICD "%s" using vkGetPhysicalDeviceMemoryProperties
vkGetPhysicalDeviceMemoryProperties2: Emulation found unrecognized structure type in pMemoryProperties->pNext - this struct will be ignored
vkGetPhysicalDeviceMemoryProperties2KHR
vkGetPhysicalDeviceMultisamplePropertiesEXT
vkGetPhysicalDevicePresentRectanglesKHR
vkGetPhysicalDeviceProperties
vkGetPhysicalDeviceProperties2
vkGetPhysicalDeviceProperties2: Emulating call in ICD "%s" using vkGetPhysicalDeviceProperties
vkGetPhysicalDeviceProperties2: Emulation cannot generate unique IDs for struct VkPhysicalDeviceIDProperties - setting IDs to zero instead
vkGetPhysicalDeviceProperties2KHR
vkGetPhysicalDeviceProperties2KHR: Emulation found unrecognized structure type in pProperties->pNext - this struct will be ignored
vkGetPhysicalDeviceQueueFamilyProperties
vkGetPhysicalDeviceQueueFamilyProperties2
vkGetPhysicalDeviceQueueFamilyProperties2: Emulating call in ICD "%s" using vkGetPhysicalDeviceQueueFamilyProperties
vkGetPhysicalDeviceQueueFamilyProperties2: Emulation found unrecognized structure type in pQueueFamilyProperties[%d].pNext - this struct will be ignored
vkGetPhysicalDeviceQueueFamilyProperties2KHR
vkGetPhysicalDeviceSparseImageFormatProperties
vkGetPhysicalDeviceSparseImageFormatProperties2
vkGetPhysicalDeviceSparseImageFormatProperties2: Emulating call in ICD "%s" using vkGetPhysicalDeviceSparseImageFormatProperties
vkGetPhysicalDeviceSparseImageFormatProperties2: Emulation found unrecognized structure type in pFormatInfo->pNext - this struct will be ignored
vkGetPhysicalDeviceSparseImageFormatProperties2: Emulation found unrecognized structure type in pProperties[%d].pNext - this struct will be ignored
vkGetPhysicalDeviceSparseImageFormatProperties2KHR
vkGetPhysicalDeviceSurfaceCapabilities2EXT
vkGetPhysicalDeviceSurfaceCapabilities2EXT: Emulating call in ICD "%s" using vkGetPhysicalDeviceSurfaceCapabilitiesKHR
vkGetPhysicalDeviceSurfaceCapabilities2EXT: Emulation found unrecognized structure type in pSurfaceCapabilities->pNext - this struct will be ignored
vkGetPhysicalDeviceSurfaceCapabilities2KHR
vkGetPhysicalDeviceSurfaceCapabilities2KHR: Emulating call in ICD "%s" using vkGetPhysicalDeviceSurfaceCapabilitiesKHR
vkGetPhysicalDeviceSurfaceCapabilities2KHR: Emulation found unrecognized structure type in pSurfaceCapabilities->pNext - this struct will be ignored
vkGetPhysicalDeviceSurfaceCapabilities2KHR: Emulation found unrecognized structure type in pSurfaceInfo->pNext - this struct will be ignored
vkGetPhysicalDeviceSurfaceCapabilitiesKHR
vkGetPhysicalDeviceSurfaceFormats2KHR
vkGetPhysicalDeviceSurfaceFormats2KHR: Emulating call in ICD "%s" using vkGetPhysicalDeviceSurfaceFormatsKHR
vkGetPhysicalDeviceSurfaceFormats2KHR: Emulation found unrecognized structure type in pSurfaceFormats[%d].pNext - this struct will be ignored
vkGetPhysicalDeviceSurfaceFormats2KHR: Emulation found unrecognized structure type in pSurfaceInfo->pNext - this struct will be ignored
vkGetPhysicalDeviceSurfaceFormatsKHR
vkGetPhysicalDeviceSurfacePresentModesKHR
vkGetPhysicalDeviceSurfaceSupportKHR
vkGetPhysicalDeviceWin32PresentationSupportKHR
vkGetPipelineCacheData
vkGetQueryPoolResults
vkGetQueueCheckpointDataNV
vkGetRaytracingShaderHandlesNVX
vkGetRefreshCycleDurationGOOGLE
vkGetRenderAreaGranularity
vkGetSemaphoreFdKHR
vkGetSemaphoreWin32HandleKHR
vkGetShaderInfoAMD
vkGetSwapchainCounterEXT
vkGetSwapchainImagesKHR
vkGetSwapchainStatusKHR
vkGetValidationCacheDataEXT
vkImportFenceFdKHR
vkImportFenceWin32HandleKHR
vkImportSemaphoreFdKHR
vkImportSemaphoreWin32HandleKHR
vkInvalidateMappedMemoryRanges
vkMapMemory
vkMergePipelineCaches
vkMergeValidationCachesEXT
vkNegotiateLoaderLayerInterfaceVersion
vkQueueBeginDebugUtilsLabelEXT
vkQueueBindSparse
vkQueueEndDebugUtilsLabelEXT
vkQueueInsertDebugUtilsLabelEXT
vkQueuePresentKHR
vkQueueSubmit
vkQueueWaitIdle
vkRegisterDeviceEventEXT
vkRegisterDisplayEventEXT
vkRegisterObjectsNVX
vkReleaseDisplayEXT
vkResetCommandBuffer
vkResetCommandPool
vkResetDescriptorPool
vkResetEvent
vkResetFences
vkSetDebugUtilsObjectNameEXT
vkSetDebugUtilsObjectTagEXT
vkSetEvent
vkSetHdrMetadataEXT
vkSetInstanceDispatch: Can not retrieve Instance dispatch table.
vkSubmitDebugUtilsMessageEXT
vkTrimCommandPool
vkTrimCommandPoolKHR
vkUnmapMemory
vkUnregisterObjectsNVX
vkUpdateDescriptorSetWithTemplate
vkUpdateDescriptorSetWithTemplateKHR
vkUpdateDescriptorSets
vkWaitForFences
vk_icdGetInstanceProcAddr
vk_icdGetPhysicalDeviceProcAddr
vk_icdNegotiateLoaderICDInterfaceVersion
vk_layerGetPhysicalDeviceProcAddr
vnH97t H
void 
void EmitStreamVertex(int);void EndStreamPrimitive(int);
void EmitVertex();void EndPrimitive();
void barrier();
void controlBarrier(int, int, int, int);
void copyVertex(inout GS_OUTPUT output, GS_INPUT input, GS_INPUT flatinput)
void function cannot return a value
void imageAtomicStore(volatile coherent 
void imageStore(writeonly volatile coherent 
void imulExtended_emu(int x, int y, out int msb, out int lsb)
void imulExtended_emu(int2 x, int2 y, out int2 msb, out int2 lsb)
void imulExtended_emu(int3 x, int3 y, out int3 msb, out int3 lsb)
void imulExtended_emu(int4 x, int4 y, out int4 msb, out int4 lsb)
void initAttributes(VS_INPUT input)
void initGLBuiltins(CS_INPUT input)
void main(
void main()
void main(CS_INPUT input)
void memoryBarrier();
void memoryBarrier(int, int, int);
void memoryBarrierAtomicCounter();void memoryBarrierBuffer();void memoryBarrierImage();
void memoryBarrierShared();void groupMemoryBarrier();
void selectView(inout GS_OUTPUT output, GS_INPUT input)
void subgroupBarrier();void subgroupMemoryBarrier();void subgroupMemoryBarrierBuffer();void subgroupMemoryBarrierImage();bool subgroupElect();bool   subgroupAll(bool);
void subgroupMemoryBarrierShared();
void umulExtended_emu(uint x, uint y, out uint msb, out uint lsb)
void umulExtended_emu(uint2 x, uint2 y, out uint2 msb, out uint2 lsb)
void umulExtended_emu(uint3 x, uint3 y, out uint3 msb, out uint3 lsb)
void umulExtended_emu(uint4 x, uint4 y, out uint4 msb, out uint4 lsb)
volatile
volatile 
vs_2_0
v}`[>
w(H9t$@t!
w(HcODI
w)A9@
w5HcD
wEHcD
webgl_
webgl_FragColor
webgl_FragData
webgl_debug_shader_precision
wglBindTexImageARB
wglChoosePixelFormatARB
wglCopyContext
wglCreateContext
wglCreateContextAttribsARB
wglCreateLayerContext
wglCreatePbufferARB
wglDXCloseDeviceNV
wglDXLockObjectsNV
wglDXObjectAccessNV
wglDXOpenDeviceNV
wglDXRegisterObjectNV
wglDXSetResourceShareHandleNV
wglDXUnlockObjectsNV
wglDXUnregisterObjectNV
wglDeleteContext
wglDescribeLayerPlane
wglDestroyPbufferARB
wglGetCurrentContext
wglGetCurrentDC
wglGetExtensionsStringARB
wglGetExtensionsStringEXT
wglGetLayerPaletteEntries
wglGetPbufferDCARB
wglGetPixelFormatAttribfvARB
wglGetPixelFormatAttribivARB
wglGetProcAddress
wglMakeCurrent
wglQueryPbufferARB
wglRealizeLayerPalette
wglReleasePbufferDCARB
wglReleaseTexImageARB
wglSetLayerPaletteEntries
wglSetPbufferAttribARB
wglShareLists
wglSwapIntervalEXT
wglSwapLayerBuffers
wglSwapMultipleBuffers
wglUseFontBitmapsA
wglUseFontBitmapsW
wglUseFontOutlinesA
wglUseFontOutlinesW
when more than one fragment shader output, all must have location qualifiers
when object type is EGL_OBJECT_DISPLAY_KHR, the object must be the same as the display.
while
while (
while loops not available
width
workgroupcoherent
wrapR
wrapS
wrapT
write_
writeonly
writeonly 
wrong number of matrix columns:
wrong number of structure members
wrong operand type - no operation '
wrong operand types - no operation '
wrong protocol type
wrong type of value for uniform
wrong vector size (or rows in a matrix column):
x	9Hp
x ATAVAWH
x AVAWE3
x AVAWL
x AVE3
x AVH
x AVHcA
x AWH
x UAVAWH
x and y cannot be negative.
x(1tF
x, y, or z cannot be negative.
x@H+\
xMHcC
xWI96tRI
x[]_^
x[]_^A\A]A^A_
x[]_^A^A_
x[_^A\A^A_
x[_^A^
x`M;NH
xfb layout qualifier
xfb_buffer
xfb_offset
xfb_stride
xfb_stride is too large:
xfb_stride is too small to hold all buffer entries:
xfb_stride must be multiple of 4:
xfb_stride must be multiple of 8 for buffer holding a double:
xpxxxx
xwpwpp
y(H;<
yE>cb
yH;YXtl
y\PD>!
yhL9yp
yuvCscStandardEXT
yuv_2_rgb
yyset_column called with no buffer
yyset_lineno called with no buffer
z(H+z H
z>@G'h
zHL9zP
zL7u+D
zValueF_Float
zValueF_Sint
zValueF_Uint
zValue_Depth
zY;>u:m	
zero is bound to DRAW_INDIRECT_BUFFER
zero is bound to ELEMENT_ARRAY_BUFFER
zero is bound to VERTEX_ARRAY_BINDING
{ ATAVAWH
{ AVH
{ tjL
{ } style initializers
{&1q>
{Break
{int 
{w8&-
|	(0u
|#tAM
|$ AVH
|$ D!
|$ E1
|$ E3
|$ H9p(t
|$ H9p(tLH
|$ H;~
|$ Hc_
|$ L9
|$ UATAUAVAWH
|$ UH
|$ fA
|$ t7L
|$ tzA
|$$t+L
|$(A^
|$(E1
|$(I)
|$(I9}
|$(L9
|$(tBL
|$(tNL
|$(t]H
|$0@"
|$0A_A^
|$0E1
|$0E3
|$0H9
|$0Hc
|$0I9
|$0Ik
|$0Mi
|$0fA
|$0u5H
|$0uBH
|$8;3
|$8E1
|$8H9
|$8H9V
|$8H;|$ L
|$8I)
|$8L9
|$8t)H
|$<+|$4H
|$<D)
|$<u7H
|$?E1
|$@-D
|$@-H
|$@E1
|$@E;
|$@Ic
|$@Mc
|$@t;
|$@tZH
|$@w5H
|$Ccoreu
|$HD)
|$HH)
|$HtRH
|$P-H
|$PE1
|$PfA
|$PtpH
|$TLcC
|$XE1
|$XE3
|$XHcU
|$XIc
|$\.u
|$`CI
|$`E1
|$`H9
|$`M)
|$`M9
|$`t(H
|$`tAH
|$`ugH
|$dHc
|$gv,A
|$h9i
|$h9w
|$hE1
|$ht\
|$pE1
|$pI9
|(tFM
|>fj;
|GwS=
|GwWA
|IcMh
|b=})>
} H+}
} H99u
} gl_in[];in int gl_PrimitiveIDIn;out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];
} gl_in[gl_MaxPatchVertices];
} gl_out[];patch out float gl_TessLevelOuter[4];patch out float gl_TessLevelInner[2];
} gl_out[];patch out highp float gl_TessLevelOuter[4];patch out highp float gl_TessLevelInner[2];patch out highp vec4 gl_BoundingBoxOES[2];
};out int gl_PrimitiveID;out int gl_Layer;
};uniform gl_DepthRangeParameters gl_DepthRange;
~	D9O
~ $s%r
~!%^&*()-+=|,.<>/?;:[]{}#\
~(H;<
~Compiler
~D$ H
~D$Hf
~D$Pf
~GwWA
~GwY=
~Gw`A
~L$ f
~L7u(
~PI9~X
~`D8I!t-
