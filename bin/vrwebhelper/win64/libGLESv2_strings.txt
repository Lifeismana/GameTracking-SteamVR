.?AV?$_Fake_no_copy_callable_adapter@V<lambda_0>@?0??checkToRunPendingTasks@AsyncWorkerPool@angle@@AEAAXXZ@@std@@
.?AV<lambda_1>@?0???R0?0??_ScheduleContinuationTask@_Task_impl_base@details@Concurrency@@QEAAXPEAU_ContinuationTaskHandleBase@34@@Z@QEBA?A?<auto>@@XZ@
.?AV<lambda_1>@?0??_ScheduleContinuationTask@_Task_impl_base@details@Concurrency@@QEAAXPEAU_ContinuationTaskHandleBase@34@@Z@
.?AV<lambda_1>@?0??_CancelAndRunContinuations@?$_Task_impl@E@details@Concurrency@@UEAA_N_N00AEBV?$shared_ptr@U_ExceptionHolder@details@Concurrency@@@std@@@Z@
.?AV<lambda_1>@?0??_MakeVoidToUnitFunc@details@Concurrency@@YA?AV?$function@$$A6AEXZ@std@@AEBV?$function@$$A6AXXZ@5@@Z@
.?AV<lambda_1>@?0???$?0V?$_Fake_no_copy_callable_adapter@V<lambda_0>@?0??checkToRunPendingTasks@AsyncWorkerPool@angle@@AEAAXXZ@@std@@@?$_Task_async_state@X$0A@@std@@QEAA@$$QEAV?$_Fake_no_copy_callable_adapter@V<lambda_0>@?0??checkToRunPendingTasks@AsyncWorkerPool@angle@@AEAAXXZ@@2@@Z@
.?AV<lambda_0>@?0??resolveCompile@Shader@gl@@AEAAXXZ@
Copyright (c) by P.J. Plauger, licensed by Dinkumware, Ltd. ALL RIGHTS RESERVED.
.?AV<lambda_0>@?0??linkResources@ProgramD3D@rx@@AEAAXAEBUProgramLinkedResources@gl@@@Z@
.?AV<lambda_1>@?0??linkResources@ProgramD3D@rx@@AEAAXAEBUProgramLinkedResources@gl@@@Z@
.?AV<lambda_2>@?0??linkResources@ProgramD3D@rx@@AEAAXAEBUProgramLinkedResources@gl@@@Z@
.?AV<lambda_3>@?0??linkResources@ProgramD3D@rx@@AEAAXAEBUProgramLinkedResources@gl@@@Z@
.?AV<lambda_0>@?0??linkResources@ProgramGL@rx@@AEAAXAEBUProgramLinkedResources@gl@@@Z@
.?AV<lambda_1>@?0??linkResources@ProgramGL@rx@@AEAAXAEBUProgramLinkedResources@gl@@@Z@
.?AV<lambda_2>@?0??linkResources@ProgramGL@rx@@AEAAXAEBUProgramLinkedResources@gl@@@Z@
.?AV<lambda_3>@?0??linkResources@ProgramGL@rx@@AEAAXAEBUProgramLinkedResources@gl@@@Z@
.?AV<lambda_0>@?0??findFunction400@TParseContext@glslang@@QEAAPEBVTFunction@3@AEBUTSourceLoc@3@AEBV43@AEA_N@Z@
.?AV<lambda_1>@?0??findFunction400@TParseContext@glslang@@QEAAPEBVTFunction@3@AEBUTSourceLoc@3@AEBV43@AEA_N@Z@
.?AV<lambda_2>@?0??findFunctionExplicitTypes@TParseContext@glslang@@QEAAPEBVTFunction@3@AEBUTSourceLoc@3@AEBV43@AEA_N@Z@
.?AV<lambda_3>@?0??findFunctionExplicitTypes@TParseContext@glslang@@QEAAPEBVTFunction@3@AEBUTSourceLoc@3@AEBV43@AEA_N@Z@
.?AV<lambda_1>@?0??dump@Function@spv@@QEBAXAEAV?$vector@IV?$allocator@I@std@@@std@@@Z@
.?AV<lambda_0>@?0??postProcess@Builder@spv@@QEAAXXZ@
                          
abcdefghijklmnopqrstuvwxyz
ABCDEFGHIJKLMNOPQRSTUVWXYZ
                          
abcdefghijklmnopqrstuvwxyz
ABCDEFGHIJKLMNOPQRSTUVWXYZ
.?AVsystem_error@std@@
.?AV_System_error@std@@
.?AVruntime_error@std@@
.?AVexception@std@@
.?AVerror_category@std@@
.?AV_Generic_error_category@std@@
.?AV_System_error_category@std@@
.?AV_Facet_base@std@@
.?AV_Locimp@locale@std@@
.?AVfacet@locale@std@@
.?AU_Crt_new_delete@std@@
.?AVbad_alloc@std@@
.?AVinvalid_argument@std@@
.?AVlogic_error@std@@
.?AVlength_error@std@@
.?AVout_of_range@std@@
.?AVbad_function_call@std@@
.?AVbad_array_new_length@std@@
.?AVtype_info@@
.?AVbad_cast@std@@
.?AVstl_critical_section_interface@details@Concurrency@@
.?AVstl_critical_section_vista@details@Concurrency@@
.?AVstl_critical_section_win7@details@Concurrency@@
.?AVstl_critical_section_concrt@details@Concurrency@@
.?AVstl_condition_variable_interface@details@Concurrency@@
.?AVstl_condition_variable_vista@details@Concurrency@@
.?AVstl_condition_variable_win7@details@Concurrency@@
.?AVstl_condition_variable_concrt@details@Concurrency@@
.?AVfuture_error@std@@
.?AVbad_exception@std@@
.?AV_Ref_count_base@std@@
.?AV?$_Ref_count_obj_alloc@V__ExceptionPtr@@U?$_StaticAllocator@H@@@std@@
.?AV?$_Ref_count_obj@V__ExceptionPtr@@@std@@
.?AVWaitBlock@details@Concurrency@@
.?AVSingleWaitBlock@details@Concurrency@@
.?AVMultiWaitBlock@details@Concurrency@@
.?AVWaitAllBlock@details@Concurrency@@
.?AVWaitAnyBlock@details@Concurrency@@
.?AVTimedSingleWaitBlock@details@Concurrency@@
.?AV?$_MallocaArrayHolder@PEAVContext@Concurrency@@@details@Concurrency@@
.?AVimproper_lock@Concurrency@@
.?AVscheduler_resource_allocation_error@Concurrency@@
.?AVunsupported_os@Concurrency@@
.?AVinvalid_operation@Concurrency@@
.?AVResourceManager@details@Concurrency@@
.?AUIResourceManager@Concurrency@@
.?AUITopologyExecutionResource@Concurrency@@
.?AUITopologyNode@Concurrency@@
.?AUTopologyObject@GlobalCore@details@Concurrency@@
.?AUTopologyObject@GlobalNode@details@Concurrency@@
.?AVscheduler_worker_creation_error@Concurrency@@
.?AVimproper_scheduler_reference@Concurrency@@
.?AVimproper_scheduler_attach@Concurrency@@
.?AVScheduleGroupBase@details@Concurrency@@
.?AVScheduleGroup@Concurrency@@
.?AVCacheLocalScheduleGroup@details@Concurrency@@
.?AVFairScheduleGroup@details@Concurrency@@
.?AVSchedulerBase@details@Concurrency@@
.?AVScheduler@Concurrency@@
.?AU_Chore@details@Concurrency@@
.?AVRealizedChore@details@Concurrency@@
.?AVCacheLocalScheduleGroupSegment@details@Concurrency@@
.?AVScheduleGroupSegmentBase@details@Concurrency@@
.?AVFairScheduleGroupSegment@details@Concurrency@@
.?AVcontext_unblock_unbalanced@Concurrency@@
.?AVcontext_self_unblock@Concurrency@@
.?AVmissing_wait@Concurrency@@
.?AVinvalid_scheduler_policy_key@Concurrency@@
.?AVinvalid_scheduler_policy_value@Concurrency@@
.?AVinvalid_scheduler_policy_thread_specification@Concurrency@@
.?AVnested_scheduler_missing_detach@Concurrency@@
.?AVinvalid_oversubscribe_operation@Concurrency@@
.?AVContextBase@details@Concurrency@@
.?AVContext@Concurrency@@
.?AV_Interruption_exception@details@Concurrency@@
.?AV_RefCounter@details@Concurrency@@
.?AV_CancellationTokenRegistration@details@Concurrency@@
.?AVCancellationTokenRegistration_TaskProc@details@Concurrency@@
.?AV?$_MallocaArrayHolder@PEAVevent@Concurrency@@@details@Concurrency@@
.?AVExecutionResource@details@Concurrency@@
.?AUIExecutionResource@Concurrency@@
.?AVSchedulerProxy@details@Concurrency@@
.?AUISchedulerProxy@Concurrency@@
.?AVFreeThreadProxy@details@Concurrency@@
.?AVThreadProxy@details@Concurrency@@
.?AUIThreadProxy@Concurrency@@
.?AUIThreadProxyFactory@details@Concurrency@@
.?AVFreeThreadProxyFactory@details@Concurrency@@
.?AV?$ThreadProxyFactory@VFreeThreadProxy@details@Concurrency@@@details@Concurrency@@
.?AVVirtualProcessor@details@Concurrency@@
.?AVInternalContextBase@details@Concurrency@@
.?AUIExecutionContext@Concurrency@@
.?AVExternalContextBase@details@Concurrency@@
.?AVThreadScheduler@details@Concurrency@@
.?AUIScheduler@Concurrency@@
.?AVThreadInternalContext@details@Concurrency@@
.?AVVirtualProcessorRoot@details@Concurrency@@
.?AUIVirtualProcessorRoot@Concurrency@@
.?AVFreeVirtualProcessorRoot@details@Concurrency@@
.?AVThreadVirtualProcessor@details@Concurrency@@
.?AV__non_rtti_object@std@@
.?AVbad_typeid@std@@
eglInitialize
eglTerminate
eglQueryString
OpenGL_ES
1.4 (ANGLE 2.1.0.f2ed299569c0)
eglGetConfigs
eglChooseConfig
eglGetConfigAttrib
eglCreateWindowSurface
eglCreatePbufferSurface
eglCreatePixmapSurface
eglDestroySurface
eglQuerySurface
eglCreateContext
eglDestroyContext
eglMakeCurrent
eglGetCurrentSurface
eglQueryContext
eglWaitGL
eglWaitNative
eglSwapBuffers
eglCopyBuffers
eglBindTexImage
eglSurfaceAttrib
eglReleaseTexImage
eglSwapInterval
eglBindAPI
eglCreatePbufferFromClientBuffer
eglWaitClient
eglCreateSync
eglCreateSync unimplemented.
eglDestroySync
eglDestroySync unimplemented.
eglClientWaitSync
eglClientWaitSync unimplemented.
eglGetSyncAttrib
eglSyncAttrib unimplemented.
eglCreateImage
eglCreateImage unimplemented.
eglDestroyImage
eglDestroyImage unimplemented.
eglGetPlatformDisplay
eglCreatePlatformWindowSurface
eglCreatePlatformWindowSurface unimplemented.
eglCreatePlatformPixmapSurface
eglCreatePlatformPixmapSurface unimplemented.
eglWaitSync
eglWaitSync unimplemented.
ios_base::badbit set
ios_base::failbit set
ios_base::eofbit set
string too long
iostream
iostream stream error
unknown exception
bad locale name
eglQuerySurfacePointerANGLE
eglPostSubBufferNV
eglGetPlatformDisplayEXT
eglCreatePlatformWindowSurfaceEXT
CreatePlatformWindowSurfaceEXT unimplemented.
eglCreatePlatformPixmapSurfaceEXT
CreatePlatformPixmapSurfaceEXT unimplemented.
eglQueryDeviceAttribEXT
Device wasn't created using eglCreateDeviceANGLE, and the Display that created it doesn't support device querying
eglQueryDeviceStringEXT
eglQueryDisplayAttribEXT
eglCreateImageKHR
eglDestroyImageKHR
eglCreateDeviceANGLE
eglReleaseDeviceANGLE
eglCreateStreamKHR
eglDestroyStreamKHR
eglStreamAttribKHR
eglQueryStreamKHR
eglQueryStreamu64KHR
eglStreamConsumerGLTextureExternalKHR
eglStreamConsumerAcquireKHR
eglSStreamConsumerReleaseKHR
eglStreamConsumerReleaseKHR
eglStreamConsumerGLTextureExternalAttribsNV
eglCreateStreamProducerD3DTextureANGLE
eglStreamPostD3DTextureANGLE
eglGetSyncValuesCHROMIUM
eglSwapBuffersWithDamageEXT
eglPresentationTimeANDROID
eglSetBlobCacheFuncsANDROID
eglProgramCacheGetAttribANGLE
eglProgramCacheQueryANGLE
eglProgramCachePopulateANGLE
eglProgramCacheResizeANGLE
eglDebugMessageControlKHR
eglQueryDebugKHR
eglLabelObjectKHR
Invalid buffer target enum.
Object cannot be used because it has not been generated.
AllocateCurrentThread
Could not set thread local storage.
ANGLEGetDisplayPlatform
ANGLEResetDisplayPlatform
eglGetCurrentContext
eglGetCurrentDisplay
eglGetDisplay
eglGetError
eglGetProcAddress
eglQueryAPI
eglReleaseThread
eglSwapBuffersWithDamageKHR
glActiveShaderProgram
glActiveShaderProgramContextANGLE
glActiveTexture
glActiveTextureContextANGLE
glAlphaFunc
glAlphaFuncContextANGLE
glAlphaFuncx
glAlphaFuncxContextANGLE
glAttachShader
glAttachShaderContextANGLE
glBeginQuery
glBeginQueryContextANGLE
glBeginQueryEXT
glBeginQueryEXTContextANGLE
glBeginTransformFeedback
glBeginTransformFeedbackContextANGLE
glBindAttribLocation
glBindAttribLocationContextANGLE
glBindBuffer
glBindBufferBase
glBindBufferBaseContextANGLE
glBindBufferContextANGLE
glBindBufferRange
glBindBufferRangeContextANGLE
glBindFramebuffer
glBindFramebufferContextANGLE
glBindImageTexture
glBindImageTextureContextANGLE
glBindProgramPipeline
glBindProgramPipelineContextANGLE
glBindRenderbuffer
glBindRenderbufferContextANGLE
glBindSampler
glBindSamplerContextANGLE
glBindTexture
glBindTextureContextANGLE
glBindTransformFeedback
glBindTransformFeedbackContextANGLE
glBindUniformLocationCHROMIUM
glBindUniformLocationCHROMIUMContextANGLE
glBindVertexArray
glBindVertexArrayContextANGLE
glBindVertexArrayOES
glBindVertexArrayOESContextANGLE
glBindVertexBuffer
glBindVertexBufferContextANGLE
glBlendColor
glBlendColorContextANGLE
glBlendEquation
glBlendEquationContextANGLE
glBlendEquationSeparate
glBlendEquationSeparateContextANGLE
glBlendFunc
glBlendFuncContextANGLE
glBlendFuncSeparate
glBlendFuncSeparateContextANGLE
glBlitFramebuffer
glBlitFramebufferANGLE
glBlitFramebufferANGLEContextANGLE
glBlitFramebufferContextANGLE
glBufferData
glBufferDataContextANGLE
glBufferSubData
glBufferSubDataContextANGLE
glCheckFramebufferStatus
glCheckFramebufferStatusContextANGLE
glClear
glClearBufferfi
glClearBufferfiContextANGLE
glClearBufferfv
glClearBufferfvContextANGLE
glClearBufferiv
glClearBufferivContextANGLE
glClearBufferuiv
glClearBufferuivContextANGLE
glClearColor
glClearColorContextANGLE
glClearColorx
glClearColorxContextANGLE
glClearContextANGLE
glClearDepthf
glClearDepthfContextANGLE
glClearDepthx
glClearDepthxContextANGLE
glClearStencil
glClearStencilContextANGLE
glClientActiveTexture
glClientActiveTextureContextANGLE
glClientWaitSync
glClientWaitSyncContextANGLE
glClipPlanef
glClipPlanefContextANGLE
glClipPlanex
glClipPlanexContextANGLE
glColor4f
glColor4fContextANGLE
glColor4ub
glColor4ubContextANGLE
glColor4x
glColor4xContextANGLE
glColorMask
glColorMaskContextANGLE
glColorPointer
glColorPointerContextANGLE
glCompileShader
glCompileShaderContextANGLE
glCompressedCopyTextureCHROMIUM
glCompressedCopyTextureCHROMIUMContextANGLE
glCompressedTexImage2D
glCompressedTexImage2DContextANGLE
glCompressedTexImage2DRobustANGLE
glCompressedTexImage2DRobustANGLEContextANGLE
glCompressedTexImage3D
glCompressedTexImage3DContextANGLE
glCompressedTexImage3DRobustANGLE
glCompressedTexImage3DRobustANGLEContextANGLE
glCompressedTexSubImage2D
glCompressedTexSubImage2DContextANGLE
glCompressedTexSubImage2DRobustANGLE
glCompressedTexSubImage2DRobustANGLEContextANGLE
glCompressedTexSubImage3D
glCompressedTexSubImage3DContextANGLE
glCompressedTexSubImage3DRobustANGLE
glCompressedTexSubImage3DRobustANGLEContextANGLE
glCopyBufferSubData
glCopyBufferSubDataContextANGLE
glCopySubTexture3DANGLE
glCopySubTexture3DANGLEContextANGLE
glCopySubTextureCHROMIUM
glCopySubTextureCHROMIUMContextANGLE
glCopyTexImage2D
glCopyTexImage2DContextANGLE
glCopyTexSubImage2D
glCopyTexSubImage2DContextANGLE
glCopyTexSubImage3D
glCopyTexSubImage3DContextANGLE
glCopyTexture3DANGLE
glCopyTexture3DANGLEContextANGLE
glCopyTextureCHROMIUM
glCopyTextureCHROMIUMContextANGLE
glCreateProgram
glCreateProgramContextANGLE
glCreateShader
glCreateShaderContextANGLE
glCreateShaderProgramv
glCreateShaderProgramvContextANGLE
glCullFace
glCullFaceContextANGLE
glCurrentPaletteMatrixOES
glCurrentPaletteMatrixOESContextANGLE
glDebugMessageCallbackKHR
glDebugMessageCallbackKHRContextANGLE
glDebugMessageControlKHR
glDebugMessageControlKHRContextANGLE
glDebugMessageInsertKHR
glDebugMessageInsertKHRContextANGLE
glDeleteBuffers
glDeleteBuffersContextANGLE
glDeleteFencesNV
glDeleteFencesNVContextANGLE
glDeleteFramebuffers
glDeleteFramebuffersContextANGLE
glDeleteProgram
glDeleteProgramContextANGLE
glDeleteProgramPipelines
glDeleteProgramPipelinesContextANGLE
glDeleteQueries
glDeleteQueriesContextANGLE
glDeleteQueriesEXT
glDeleteQueriesEXTContextANGLE
glDeleteRenderbuffers
glDeleteRenderbuffersContextANGLE
glDeleteSamplers
glDeleteSamplersContextANGLE
glDeleteShader
glDeleteShaderContextANGLE
glDeleteSync
glDeleteSyncContextANGLE
glDeleteTextures
glDeleteTexturesContextANGLE
glDeleteTransformFeedbacks
glDeleteTransformFeedbacksContextANGLE
glDeleteVertexArrays
glDeleteVertexArraysContextANGLE
glDeleteVertexArraysOES
glDeleteVertexArraysOESContextANGLE
glDepthFunc
glDepthFuncContextANGLE
glDepthMask
glDepthMaskContextANGLE
glDepthRangef
glDepthRangefContextANGLE
glDepthRangex
glDepthRangexContextANGLE
glDetachShader
glDetachShaderContextANGLE
glDisable
glDisableClientState
glDisableClientStateContextANGLE
glDisableContextANGLE
glDisableVertexAttribArray
glDisableVertexAttribArrayContextANGLE
glDiscardFramebufferEXT
glDiscardFramebufferEXTContextANGLE
glDispatchCompute
glDispatchComputeContextANGLE
glDispatchComputeIndirect
glDispatchComputeIndirectContextANGLE
glDrawArrays
glDrawArraysContextANGLE
glDrawArraysIndirect
glDrawArraysIndirectContextANGLE
glDrawArraysInstanced
glDrawArraysInstancedANGLE
glDrawArraysInstancedANGLEContextANGLE
glDrawArraysInstancedContextANGLE
glDrawBuffers
glDrawBuffersContextANGLE
glDrawBuffersEXT
glDrawBuffersEXTContextANGLE
glDrawElements
glDrawElementsContextANGLE
glDrawElementsIndirect
glDrawElementsIndirectContextANGLE
glDrawElementsInstanced
glDrawElementsInstancedANGLE
glDrawElementsInstancedANGLEContextANGLE
glDrawElementsInstancedContextANGLE
glDrawRangeElements
glDrawRangeElementsContextANGLE
glDrawTexfOES
glDrawTexfOESContextANGLE
glDrawTexfvOES
glDrawTexfvOESContextANGLE
glDrawTexiOES
glDrawTexiOESContextANGLE
glDrawTexivOES
glDrawTexivOESContextANGLE
glDrawTexsOES
glDrawTexsOESContextANGLE
glDrawTexsvOES
glDrawTexsvOESContextANGLE
glDrawTexxOES
glDrawTexxOESContextANGLE
glDrawTexxvOES
glDrawTexxvOESContextANGLE
glEGLImageTargetRenderbufferStorageOES
glEGLImageTargetRenderbufferStorageOESContextANGLE
glEGLImageTargetTexture2DOES
glEGLImageTargetTexture2DOESContextANGLE
glEnable
glEnableClientState
glEnableClientStateContextANGLE
glEnableContextANGLE
glEnableVertexAttribArray
glEnableVertexAttribArrayContextANGLE
glEndQuery
glEndQueryContextANGLE
glEndQueryEXT
glEndQueryEXTContextANGLE
glEndTransformFeedback
glEndTransformFeedbackContextANGLE
glFenceSync
glFenceSyncContextANGLE
glFinish
glFinishContextANGLE
glFinishFenceNV
glFinishFenceNVContextANGLE
glFlush
glFlushContextANGLE
glFlushMappedBufferRange
glFlushMappedBufferRangeContextANGLE
glFlushMappedBufferRangeEXT
glFlushMappedBufferRangeEXTContextANGLE
glFogf
glFogfContextANGLE
glFogfv
glFogfvContextANGLE
glFogx
glFogxContextANGLE
glFogxv
glFogxvContextANGLE
glFramebufferParameteri
glFramebufferParameteriContextANGLE
glFramebufferRenderbuffer
glFramebufferRenderbufferContextANGLE
glFramebufferTexture2D
glFramebufferTexture2DContextANGLE
glFramebufferTextureEXT
glFramebufferTextureEXTContextANGLE
glFramebufferTextureLayer
glFramebufferTextureLayerContextANGLE
glFramebufferTextureMultiviewLayeredANGLE
glFramebufferTextureMultiviewLayeredANGLEContextANGLE
glFramebufferTextureMultiviewSideBySideANGLE
glFramebufferTextureMultiviewSideBySideANGLEContextANGLE
glFrontFace
glFrontFaceContextANGLE
glFrustumf
glFrustumfContextANGLE
glFrustumx
glFrustumxContextANGLE
glGenBuffers
glGenBuffersContextANGLE
glGenFencesNV
glGenFencesNVContextANGLE
glGenFramebuffers
glGenFramebuffersContextANGLE
glGenProgramPipelines
glGenProgramPipelinesContextANGLE
glGenQueries
glGenQueriesContextANGLE
glGenQueriesEXT
glGenQueriesEXTContextANGLE
glGenRenderbuffers
glGenRenderbuffersContextANGLE
glGenSamplers
glGenSamplersContextANGLE
glGenTextures
glGenTexturesContextANGLE
glGenTransformFeedbacks
glGenTransformFeedbacksContextANGLE
glGenVertexArrays
glGenVertexArraysContextANGLE
glGenVertexArraysOES
glGenVertexArraysOESContextANGLE
glGenerateMipmap
glGenerateMipmapContextANGLE
glGetActiveAttrib
glGetActiveAttribContextANGLE
glGetActiveUniform
glGetActiveUniformBlockName
glGetActiveUniformBlockNameContextANGLE
glGetActiveUniformBlockiv
glGetActiveUniformBlockivContextANGLE
glGetActiveUniformBlockivRobustANGLE
glGetActiveUniformBlockivRobustANGLEContextANGLE
glGetActiveUniformContextANGLE
glGetActiveUniformsiv
glGetActiveUniformsivContextANGLE
glGetAttachedShaders
glGetAttachedShadersContextANGLE
glGetAttribLocation
glGetAttribLocationContextANGLE
glGetBooleani_v
glGetBooleani_vContextANGLE
glGetBooleani_vRobustANGLE
glGetBooleani_vRobustANGLEContextANGLE
glGetBooleanv
glGetBooleanvContextANGLE
glGetBooleanvRobustANGLE
glGetBooleanvRobustANGLEContextANGLE
glGetBufferParameteri64v
glGetBufferParameteri64vContextANGLE
glGetBufferParameteri64vRobustANGLE
glGetBufferParameteri64vRobustANGLEContextANGLE
glGetBufferParameteriv
glGetBufferParameterivContextANGLE
glGetBufferParameterivRobustANGLE
glGetBufferParameterivRobustANGLEContextANGLE
glGetBufferPointerv
glGetBufferPointervContextANGLE
glGetBufferPointervOES
glGetBufferPointervOESContextANGLE
glGetBufferPointervRobustANGLE
glGetBufferPointervRobustANGLEContextANGLE
glGetClipPlanef
glGetClipPlanefContextANGLE
glGetClipPlanex
glGetClipPlanexContextANGLE
glGetDebugMessageLogKHR
glGetDebugMessageLogKHRContextANGLE
glGetError
glGetErrorContextANGLE
glGetFenceivNV
glGetFenceivNVContextANGLE
glGetFixedv
glGetFixedvContextANGLE
glGetFloatv
glGetFloatvContextANGLE
glGetFloatvRobustANGLE
glGetFloatvRobustANGLEContextANGLE
glGetFragDataLocation
glGetFragDataLocationContextANGLE
glGetFramebufferAttachmentParameteriv
glGetFramebufferAttachmentParameterivContextANGLE
glGetFramebufferAttachmentParameterivRobustANGLE
glGetFramebufferAttachmentParameterivRobustANGLEContextANGLE
glGetFramebufferParameteriv
glGetFramebufferParameterivContextANGLE
glGetFramebufferParameterivRobustANGLE
glGetFramebufferParameterivRobustANGLEContextANGLE
glGetGraphicsResetStatusEXT
glGetGraphicsResetStatusEXTContextANGLE
glGetInteger64i_v
glGetInteger64i_vContextANGLE
glGetInteger64i_vRobustANGLE
glGetInteger64i_vRobustANGLEContextANGLE
glGetInteger64v
glGetInteger64vContextANGLE
glGetInteger64vRobustANGLE
glGetInteger64vRobustANGLEContextANGLE
glGetIntegeri_v
glGetIntegeri_vContextANGLE
glGetIntegeri_vRobustANGLE
glGetIntegeri_vRobustANGLEContextANGLE
glGetIntegerv
glGetIntegervContextANGLE
glGetIntegervRobustANGLE
glGetIntegervRobustANGLEContextANGLE
glGetInternalformativ
glGetInternalformativContextANGLE
glGetInternalformativRobustANGLE
glGetInternalformativRobustANGLEContextANGLE
glGetLightfv
glGetLightfvContextANGLE
glGetLightxv
glGetLightxvContextANGLE
glGetMaterialfv
glGetMaterialfvContextANGLE
glGetMaterialxv
glGetMaterialxvContextANGLE
glGetMultisamplefv
glGetMultisamplefvContextANGLE
glGetMultisamplefvRobustANGLE
glGetMultisamplefvRobustANGLEContextANGLE
glGetObjectLabelKHR
glGetObjectLabelKHRContextANGLE
glGetObjectPtrLabelKHR
glGetObjectPtrLabelKHRContextANGLE
glGetPointerv
glGetPointervContextANGLE
glGetPointervKHR
glGetPointervKHRContextANGLE
glGetPointervRobustANGLERobustANGLE
glGetPointervRobustANGLERobustANGLEContextANGLE
glGetProgramBinary
glGetProgramBinaryContextANGLE
glGetProgramBinaryOES
glGetProgramBinaryOESContextANGLE
glGetProgramInfoLog
glGetProgramInfoLogContextANGLE
glGetProgramInterfaceiv
glGetProgramInterfaceivContextANGLE
glGetProgramInterfaceivRobustANGLE
glGetProgramInterfaceivRobustANGLEContextANGLE
glGetProgramPipelineInfoLog
glGetProgramPipelineInfoLogContextANGLE
glGetProgramPipelineiv
glGetProgramPipelineivContextANGLE
glGetProgramResourceIndex
glGetProgramResourceIndexContextANGLE
glGetProgramResourceLocation
glGetProgramResourceLocationContextANGLE
glGetProgramResourceName
glGetProgramResourceNameContextANGLE
glGetProgramResourceiv
glGetProgramResourceivContextANGLE
glGetProgramiv
glGetProgramivContextANGLE
glGetProgramivRobustANGLE
glGetProgramivRobustANGLEContextANGLE
glGetQueryObjecti64vEXT
glGetQueryObjecti64vEXTContextANGLE
glGetQueryObjecti64vRobustANGLE
glGetQueryObjecti64vRobustANGLEContextANGLE
glGetQueryObjectivEXT
glGetQueryObjectivEXTContextANGLE
glGetQueryObjectivRobustANGLE
glGetQueryObjectivRobustANGLEContextANGLE
glGetQueryObjectui64vEXT
glGetQueryObjectui64vEXTContextANGLE
glGetQueryObjectui64vRobustANGLE
glGetQueryObjectui64vRobustANGLEContextANGLE
glGetQueryObjectuiv
glGetQueryObjectuivContextANGLE
glGetQueryObjectuivEXT
glGetQueryObjectuivEXTContextANGLE
glGetQueryObjectuivRobustANGLE
glGetQueryObjectuivRobustANGLEContextANGLE
glGetQueryiv
glGetQueryivContextANGLE
glGetQueryivEXT
glGetQueryivEXTContextANGLE
glGetQueryivRobustANGLE
glGetQueryivRobustANGLEContextANGLE
glGetRenderbufferParameteriv
glGetRenderbufferParameterivContextANGLE
glGetRenderbufferParameterivRobustANGLE
glGetRenderbufferParameterivRobustANGLEContextANGLE
glGetSamplerParameterIivRobustANGLE
glGetSamplerParameterIivRobustANGLEContextANGLE
glGetSamplerParameterIuivRobustANGLE
glGetSamplerParameterIuivRobustANGLEContextANGLE
glGetSamplerParameterfv
glGetSamplerParameterfvContextANGLE
glGetSamplerParameterfvRobustANGLE
glGetSamplerParameterfvRobustANGLEContextANGLE
glGetSamplerParameteriv
glGetSamplerParameterivContextANGLE
glGetSamplerParameterivRobustANGLE
glGetSamplerParameterivRobustANGLEContextANGLE
glGetShaderInfoLog
glGetShaderInfoLogContextANGLE
glGetShaderPrecisionFormat
glGetShaderPrecisionFormatContextANGLE
glGetShaderSource
glGetShaderSourceContextANGLE
glGetShaderiv
glGetShaderivContextANGLE
glGetShaderivRobustANGLE
glGetShaderivRobustANGLEContextANGLE
glGetString
glGetStringContextANGLE
glGetStringi
glGetStringiContextANGLE
glGetSynciv
glGetSyncivContextANGLE
glGetTexEnvfv
glGetTexEnvfvContextANGLE
glGetTexEnviv
glGetTexEnvivContextANGLE
glGetTexEnvxv
glGetTexEnvxvContextANGLE
glGetTexLevelParameterfv
glGetTexLevelParameterfvContextANGLE
glGetTexLevelParameterfvRobustANGLE
glGetTexLevelParameterfvRobustANGLEContextANGLE
glGetTexLevelParameteriv
glGetTexLevelParameterivContextANGLE
glGetTexLevelParameterivRobustANGLE
glGetTexLevelParameterivRobustANGLEContextANGLE
glGetTexParameterIivRobustANGLE
glGetTexParameterIivRobustANGLEContextANGLE
glGetTexParameterIuivRobustANGLE
glGetTexParameterIuivRobustANGLEContextANGLE
glGetTexParameterfv
glGetTexParameterfvContextANGLE
glGetTexParameterfvRobustANGLE
glGetTexParameterfvRobustANGLEContextANGLE
glGetTexParameteriv
glGetTexParameterivContextANGLE
glGetTexParameterivRobustANGLE
glGetTexParameterivRobustANGLEContextANGLE
glGetTexParameterxv
glGetTexParameterxvContextANGLE
glGetTransformFeedbackVarying
glGetTransformFeedbackVaryingContextANGLE
glGetTranslatedShaderSourceANGLE
glGetTranslatedShaderSourceANGLEContextANGLE
glGetUniformBlockIndex
glGetUniformBlockIndexContextANGLE
glGetUniformIndices
glGetUniformIndicesContextANGLE
glGetUniformLocation
glGetUniformLocationContextANGLE
glGetUniformfv
glGetUniformfvContextANGLE
glGetUniformfvRobustANGLE
glGetUniformfvRobustANGLEContextANGLE
glGetUniformiv
glGetUniformivContextANGLE
glGetUniformivRobustANGLE
glGetUniformivRobustANGLEContextANGLE
glGetUniformuiv
glGetUniformuivContextANGLE
glGetUniformuivRobustANGLE
glGetUniformuivRobustANGLEContextANGLE
glGetVertexAttribIiv
glGetVertexAttribIivContextANGLE
glGetVertexAttribIivRobustANGLE
glGetVertexAttribIivRobustANGLEContextANGLE
glGetVertexAttribIuiv
glGetVertexAttribIuivContextANGLE
glGetVertexAttribIuivRobustANGLE
glGetVertexAttribIuivRobustANGLEContextANGLE
glGetVertexAttribPointerv
glGetVertexAttribPointervContextANGLE
glGetVertexAttribPointervRobustANGLE
glGetVertexAttribPointervRobustANGLEContextANGLE
glGetVertexAttribfv
glGetVertexAttribfvContextANGLE
glGetVertexAttribfvRobustANGLE
glGetVertexAttribfvRobustANGLEContextANGLE
glGetVertexAttribiv
glGetVertexAttribivContextANGLE
glGetVertexAttribivRobustANGLE
glGetVertexAttribivRobustANGLEContextANGLE
glGetnUniformfvEXT
glGetnUniformfvEXTContextANGLE
glGetnUniformfvRobustANGLE
glGetnUniformfvRobustANGLEContextANGLE
glGetnUniformivEXT
glGetnUniformivEXTContextANGLE
glGetnUniformivRobustANGLE
glGetnUniformivRobustANGLEContextANGLE
glGetnUniformuivRobustANGLE
glGetnUniformuivRobustANGLEContextANGLE
glHint
glHintContextANGLE
glInsertEventMarkerEXT
glInsertEventMarkerEXTContextANGLE
glInvalidateFramebuffer
glInvalidateFramebufferContextANGLE
glInvalidateSubFramebuffer
glInvalidateSubFramebufferContextANGLE
glIsBuffer
glIsBufferContextANGLE
glIsEnabled
glIsEnabledContextANGLE
glIsFenceNV
glIsFenceNVContextANGLE
glIsFramebuffer
glIsFramebufferContextANGLE
glIsProgram
glIsProgramContextANGLE
glIsProgramPipeline
glIsProgramPipelineContextANGLE
glIsQuery
glIsQueryContextANGLE
glIsQueryEXT
glIsQueryEXTContextANGLE
glIsRenderbuffer
glIsRenderbufferContextANGLE
glIsSampler
glIsSamplerContextANGLE
glIsShader
glIsShaderContextANGLE
glIsSync
glIsSyncContextANGLE
glIsTexture
glIsTextureContextANGLE
glIsTransformFeedback
glIsTransformFeedbackContextANGLE
glIsVertexArray
glIsVertexArrayContextANGLE
glIsVertexArrayOES
glIsVertexArrayOESContextANGLE
glLightModelf
glLightModelfContextANGLE
glLightModelfv
glLightModelfvContextANGLE
glLightModelx
glLightModelxContextANGLE
glLightModelxv
glLightModelxvContextANGLE
glLightf
glLightfContextANGLE
glLightfv
glLightfvContextANGLE
glLightx
glLightxContextANGLE
glLightxv
glLightxvContextANGLE
glLineWidth
glLineWidthContextANGLE
glLineWidthx
glLineWidthxContextANGLE
glLinkProgram
glLinkProgramContextANGLE
glLoadIdentity
glLoadIdentityContextANGLE
glLoadMatrixf
glLoadMatrixfContextANGLE
glLoadMatrixx
glLoadMatrixxContextANGLE
glLoadPaletteFromModelViewMatrixOES
glLoadPaletteFromModelViewMatrixOESContextANGLE
glLogicOp
glLogicOpContextANGLE
glMapBufferOES
glMapBufferOESContextANGLE
glMapBufferRange
glMapBufferRangeContextANGLE
glMapBufferRangeEXT
glMapBufferRangeEXTContextANGLE
glMaterialf
glMaterialfContextANGLE
glMaterialfv
glMaterialfvContextANGLE
glMaterialx
glMaterialxContextANGLE
glMaterialxv
glMaterialxvContextANGLE
glMatrixIndexPointerOES
glMatrixIndexPointerOESContextANGLE
glMatrixMode
glMatrixModeContextANGLE
glMaxShaderCompilerThreadsKHR
glMaxShaderCompilerThreadsKHRContextANGLE
glMemoryBarrier
glMemoryBarrierByRegion
glMemoryBarrierByRegionContextANGLE
glMemoryBarrierContextANGLE
glMultMatrixf
glMultMatrixfContextANGLE
glMultMatrixx
glMultMatrixxContextANGLE
glMultiTexCoord4f
glMultiTexCoord4fContextANGLE
glMultiTexCoord4x
glMultiTexCoord4xContextANGLE
glNormal3f
glNormal3fContextANGLE
glNormal3x
glNormal3xContextANGLE
glNormalPointer
glNormalPointerContextANGLE
glObjectLabelKHR
glObjectLabelKHRContextANGLE
glObjectPtrLabelKHR
glObjectPtrLabelKHRContextANGLE
glOrthof
glOrthofContextANGLE
glOrthox
glOrthoxContextANGLE
glPauseTransformFeedback
glPauseTransformFeedbackContextANGLE
glPixelStorei
glPixelStoreiContextANGLE
glPointParameterf
glPointParameterfContextANGLE
glPointParameterfv
glPointParameterfvContextANGLE
glPointParameterx
glPointParameterxContextANGLE
glPointParameterxv
glPointParameterxvContextANGLE
glPointSize
glPointSizeContextANGLE
glPointSizePointerOES
glPointSizePointerOESContextANGLE
glPointSizex
glPointSizexContextANGLE
glPolygonOffset
glPolygonOffsetContextANGLE
glPolygonOffsetx
glPolygonOffsetxContextANGLE
glPopDebugGroupKHR
glPopDebugGroupKHRContextANGLE
glPopGroupMarkerEXT
glPopGroupMarkerEXTContextANGLE
glPopMatrix
glPopMatrixContextANGLE
glProgramBinary
glProgramBinaryContextANGLE
glProgramBinaryOES
glProgramBinaryOESContextANGLE
glProgramParameteri
glProgramParameteriContextANGLE
glProgramUniform1f
glProgramUniform1fContextANGLE
glProgramUniform1fv
glProgramUniform1fvContextANGLE
glProgramUniform1i
glProgramUniform1iContextANGLE
glProgramUniform1iv
glProgramUniform1ivContextANGLE
glProgramUniform1ui
glProgramUniform1uiContextANGLE
glProgramUniform1uiv
glProgramUniform1uivContextANGLE
glProgramUniform2f
glProgramUniform2fContextANGLE
glProgramUniform2fv
glProgramUniform2fvContextANGLE
glProgramUniform2i
glProgramUniform2iContextANGLE
glProgramUniform2iv
glProgramUniform2ivContextANGLE
glProgramUniform2ui
glProgramUniform2uiContextANGLE
glProgramUniform2uiv
glProgramUniform2uivContextANGLE
glProgramUniform3f
glProgramUniform3fContextANGLE
glProgramUniform3fv
glProgramUniform3fvContextANGLE
glProgramUniform3i
glProgramUniform3iContextANGLE
glProgramUniform3iv
glProgramUniform3ivContextANGLE
glProgramUniform3ui
glProgramUniform3uiContextANGLE
glProgramUniform3uiv
glProgramUniform3uivContextANGLE
glProgramUniform4f
glProgramUniform4fContextANGLE
glProgramUniform4fv
glProgramUniform4fvContextANGLE
glProgramUniform4i
glProgramUniform4iContextANGLE
glProgramUniform4iv
glProgramUniform4ivContextANGLE
glProgramUniform4ui
glProgramUniform4uiContextANGLE
glProgramUniform4uiv
glProgramUniform4uivContextANGLE
glProgramUniformMatrix2fv
glProgramUniformMatrix2fvContextANGLE
glProgramUniformMatrix2x3fv
glProgramUniformMatrix2x3fvContextANGLE
glProgramUniformMatrix2x4fv
glProgramUniformMatrix2x4fvContextANGLE
glProgramUniformMatrix3fv
glProgramUniformMatrix3fvContextANGLE
glProgramUniformMatrix3x2fv
glProgramUniformMatrix3x2fvContextANGLE
glProgramUniformMatrix3x4fv
glProgramUniformMatrix3x4fvContextANGLE
glProgramUniformMatrix4fv
glProgramUniformMatrix4fvContextANGLE
glProgramUniformMatrix4x2fv
glProgramUniformMatrix4x2fvContextANGLE
glProgramUniformMatrix4x3fv
glProgramUniformMatrix4x3fvContextANGLE
glPushDebugGroupKHR
glPushDebugGroupKHRContextANGLE
glPushGroupMarkerEXT
glPushGroupMarkerEXTContextANGLE
glPushMatrix
glPushMatrixContextANGLE
glQueryCounterEXT
glQueryCounterEXTContextANGLE
glQueryMatrixxOES
glQueryMatrixxOESContextANGLE
glReadBuffer
glReadBufferContextANGLE
glReadPixels
glReadPixelsContextANGLE
glReadPixelsRobustANGLE
glReadPixelsRobustANGLEContextANGLE
glReadnPixelsEXT
glReadnPixelsEXTContextANGLE
glReadnPixelsRobustANGLE
glReadnPixelsRobustANGLEContextANGLE
glReleaseShaderCompiler
glReleaseShaderCompilerContextANGLE
glRenderbufferStorage
glRenderbufferStorageContextANGLE
glRenderbufferStorageMultisample
glRenderbufferStorageMultisampleANGLE
glRenderbufferStorageMultisampleANGLEContextANGLE
glRenderbufferStorageMultisampleContextANGLE
glRequestExtensionANGLE
glRequestExtensionANGLEContextANGLE
glResumeTransformFeedback
glResumeTransformFeedbackContextANGLE
glRotatef
glRotatefContextANGLE
glRotatex
glRotatexContextANGLE
glSampleCoverage
glSampleCoverageContextANGLE
glSampleCoveragex
glSampleCoveragexContextANGLE
glSampleMaski
glSampleMaskiContextANGLE
glSamplerParameterIivRobustANGLE
glSamplerParameterIivRobustANGLEContextANGLE
glSamplerParameterIuivRobustANGLE
glSamplerParameterIuivRobustANGLEContextANGLE
glSamplerParameterf
glSamplerParameterfContextANGLE
glSamplerParameterfv
glSamplerParameterfvContextANGLE
glSamplerParameterfvRobustANGLE
glSamplerParameterfvRobustANGLEContextANGLE
glSamplerParameteri
glSamplerParameteriContextANGLE
glSamplerParameteriv
glSamplerParameterivContextANGLE
glSamplerParameterivRobustANGLE
glSamplerParameterivRobustANGLEContextANGLE
glScalef
glScalefContextANGLE
glScalex
glScalexContextANGLE
glScissor
glScissorContextANGLE
glSetFenceNV
glSetFenceNVContextANGLE
glShadeModel
glShadeModelContextANGLE
glShaderBinary
glShaderBinaryContextANGLE
glShaderSource
glShaderSourceContextANGLE
glStencilFunc
glStencilFuncContextANGLE
glStencilFuncSeparate
glStencilFuncSeparateContextANGLE
glStencilMask
glStencilMaskContextANGLE
glStencilMaskSeparate
glStencilMaskSeparateContextANGLE
glStencilOp
glStencilOpContextANGLE
glStencilOpSeparate
glStencilOpSeparateContextANGLE
glTestFenceNV
glTestFenceNVContextANGLE
glTexCoordPointer
glTexCoordPointerContextANGLE
glTexEnvf
glTexEnvfContextANGLE
glTexEnvfv
glTexEnvfvContextANGLE
glTexEnvi
glTexEnviContextANGLE
glTexEnviv
glTexEnvivContextANGLE
glTexEnvx
glTexEnvxContextANGLE
glTexEnvxv
glTexEnvxvContextANGLE
glTexImage2D
glTexImage2DContextANGLE
glTexImage2DRobustANGLE
glTexImage2DRobustANGLEContextANGLE
glTexImage3D
glTexImage3DContextANGLE
glTexImage3DRobustANGLE
glTexImage3DRobustANGLEContextANGLE
glTexParameterIivRobustANGLE
glTexParameterIivRobustANGLEContextANGLE
glTexParameterIuivRobustANGLE
glTexParameterIuivRobustANGLEContextANGLE
glTexParameterf
glTexParameterfContextANGLE
glTexParameterfv
glTexParameterfvContextANGLE
glTexParameterfvRobustANGLE
glTexParameterfvRobustANGLEContextANGLE
glTexParameteri
glTexParameteriContextANGLE
glTexParameteriv
glTexParameterivContextANGLE
glTexParameterivRobustANGLE
glTexParameterivRobustANGLEContextANGLE
glTexParameterx
glTexParameterxContextANGLE
glTexParameterxv
glTexParameterxvContextANGLE
glTexStorage2D
glTexStorage2DContextANGLE
glTexStorage2DEXT
glTexStorage2DEXTContextANGLE
glTexStorage2DMultisample
glTexStorage2DMultisampleContextANGLE
glTexStorage3D
glTexStorage3DContextANGLE
glTexStorage3DEXT
glTexStorage3DEXTContextANGLE
glTexStorage3DMultisampleOES
glTexStorage3DMultisampleOESContextANGLE
glTexSubImage2D
glTexSubImage2DContextANGLE
glTexSubImage2DRobustANGLE
glTexSubImage2DRobustANGLEContextANGLE
glTexSubImage3D
glTexSubImage3DContextANGLE
glTexSubImage3DRobustANGLE
glTexSubImage3DRobustANGLEContextANGLE
glTransformFeedbackVaryings
glTransformFeedbackVaryingsContextANGLE
glTranslatef
glTranslatefContextANGLE
glTranslatex
glTranslatexContextANGLE
glUniform1f
glUniform1fContextANGLE
glUniform1fv
glUniform1fvContextANGLE
glUniform1i
glUniform1iContextANGLE
glUniform1iv
glUniform1ivContextANGLE
glUniform1ui
glUniform1uiContextANGLE
glUniform1uiv
glUniform1uivContextANGLE
glUniform2f
glUniform2fContextANGLE
glUniform2fv
glUniform2fvContextANGLE
glUniform2i
glUniform2iContextANGLE
glUniform2iv
glUniform2ivContextANGLE
glUniform2ui
glUniform2uiContextANGLE
glUniform2uiv
glUniform2uivContextANGLE
glUniform3f
glUniform3fContextANGLE
glUniform3fv
glUniform3fvContextANGLE
glUniform3i
glUniform3iContextANGLE
glUniform3iv
glUniform3ivContextANGLE
glUniform3ui
glUniform3uiContextANGLE
glUniform3uiv
glUniform3uivContextANGLE
glUniform4f
glUniform4fContextANGLE
glUniform4fv
glUniform4fvContextANGLE
glUniform4i
glUniform4iContextANGLE
glUniform4iv
glUniform4ivContextANGLE
glUniform4ui
glUniform4uiContextANGLE
glUniform4uiv
glUniform4uivContextANGLE
glUniformBlockBinding
glUniformBlockBindingContextANGLE
glUniformMatrix2fv
glUniformMatrix2fvContextANGLE
glUniformMatrix2x3fv
glUniformMatrix2x3fvContextANGLE
glUniformMatrix2x4fv
glUniformMatrix2x4fvContextANGLE
glUniformMatrix3fv
glUniformMatrix3fvContextANGLE
glUniformMatrix3x2fv
glUniformMatrix3x2fvContextANGLE
glUniformMatrix3x4fv
glUniformMatrix3x4fvContextANGLE
glUniformMatrix4fv
glUniformMatrix4fvContextANGLE
glUniformMatrix4x2fv
glUniformMatrix4x2fvContextANGLE
glUniformMatrix4x3fv
glUniformMatrix4x3fvContextANGLE
glUnmapBuffer
glUnmapBufferContextANGLE
glUnmapBufferOES
glUnmapBufferOESContextANGLE
glUseProgram
glUseProgramContextANGLE
glUseProgramStages
glUseProgramStagesContextANGLE
glValidateProgram
glValidateProgramContextANGLE
glValidateProgramPipeline
glValidateProgramPipelineContextANGLE
glVertexAttrib1f
glVertexAttrib1fContextANGLE
glVertexAttrib1fv
glVertexAttrib1fvContextANGLE
glVertexAttrib2f
glVertexAttrib2fContextANGLE
glVertexAttrib2fv
glVertexAttrib2fvContextANGLE
glVertexAttrib3f
glVertexAttrib3fContextANGLE
glVertexAttrib3fv
glVertexAttrib3fvContextANGLE
glVertexAttrib4f
glVertexAttrib4fContextANGLE
glVertexAttrib4fv
glVertexAttrib4fvContextANGLE
glVertexAttribBinding
glVertexAttribBindingContextANGLE
glVertexAttribDivisor
glVertexAttribDivisorANGLE
glVertexAttribDivisorANGLEContextANGLE
glVertexAttribDivisorContextANGLE
glVertexAttribFormat
glVertexAttribFormatContextANGLE
glVertexAttribI4i
glVertexAttribI4iContextANGLE
glVertexAttribI4iv
glVertexAttribI4ivContextANGLE
glVertexAttribI4ui
glVertexAttribI4uiContextANGLE
glVertexAttribI4uiv
glVertexAttribI4uivContextANGLE
glVertexAttribIFormat
glVertexAttribIFormatContextANGLE
glVertexAttribIPointer
glVertexAttribIPointerContextANGLE
glVertexAttribPointer
glVertexAttribPointerContextANGLE
glVertexBindingDivisor
glVertexBindingDivisorContextANGLE
glVertexPointer
glVertexPointerContextANGLE
glViewport
glViewportContextANGLE
glWaitSync
glWaitSyncContextANGLE
glWeightPointerOES
glWeightPointerOESContextANGLE
map/set<T> too long
ANGLE (
OpenGL ES 
 (ANGLE 
2.1.0.f2ed299569c0
OpenGL ES GLSL ES 
0 (ANGLE 
Google Inc.
Front-end Error: 
, in 
vector<T> too long
list<T> too long
false
true
invalid string position
Unreachable Error
invalid map<K, T> key
;\ A
Gdeque<T> too long
gpu.angle
egl::Display::initialize
initialize
ANGLE Display::initialize error 
Failed to initialize display because device creation failed: 
Program binary not accessible.
Program binary too large or changed during access.
GPU.ANGLE.DisplayInitializeMS
Invalid platform method count: 
, expected 
Invalid platform method name: 
currentTime
monotonicallyIncreasingTime
logError
logWarning
logInfo
getTraceCategoryEnabledFlag
addTraceEvent
updateTraceEventDuration
histogramCustomCounts
histogramEnumeration
histogramSparse
histogramBoolean
overrideWorkaroundsD3D
cacheProgram
operator()
Unhandled internal error: 
Context has been lost.
DrawCallParams
Negative index value.
Negative value overflow.
display is not initialized.
display had a context loss
image is not valid.
device is EGL_NO_DEVICE.
device is not valid.
EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_KHR is not
 valid for GLES with EGL 1.4 and KHR_create_context. Use
 EXT_create_context_robustness.
Invalid Context attribute.
Attribute must be EGL_TRUE or EGL_FALSE.
Attribute EGL_CONTEXT_WEBGL_COMPATIBILITY_ANGLE requires EGL_ANGLE_create_context_webgl_compatibility.
EGL_CONTEXT_WEBGL_COMPATIBILITY_ANGLE must be EGL_TRUE or EGL_FALSE.
Attribute EGL_CONTEXT_BIND_GENERATES_RESOURCE_CHROMIUM requires EGL_CHROMIUM_create_context_bind_generates_resource.
EGL_CONTEXT_BIND_GENERATES_RESOURCE_CHROMIUM must be EGL_TRUE or EGL_FALSE.
Attribute EGL_DISPLAY_TEXTURE_SHARE_GROUP_ANGLE requires EGL_ANGLE_display_texture_share_group.
EGL_DISPLAY_TEXTURE_SHARE_GROUP_ANGLE must be EGL_TRUE or EGL_FALSE.
All contexts within a share group must be created with the same value of EGL_DISPLAY_TEXTURE_SHARE_GROUP_ANGLE.
Attribute EGL_CONTEXT_CLIENT_ARRAYS_ENABLED_ANGLE requires EGL_ANGLE_create_context_client_arrays.
EGL_CONTEXT_CLIENT_ARRAYS_ENABLED_ANGLE must be EGL_TRUE or EGL_FALSE.
Attribute EGL_CONTEXT_PROGRAM_BINARY_CACHE_ENABLED_ANGLE requires EGL_ANGLE_program_cache_control.
EGL_CONTEXT_PROGRAM_BINARY_CACHE_ENABLED_ANGLE must be EGL_TRUE or EGL_FALSE.
Attribute EGL_ROBUST_RESOURCE_INITIALIZATION_ANGLE requires EGL_ANGLE_robust_resource_initialization.
EGL_ROBUST_RESOURCE_INITIALIZATION_ANGLE must be either EGL_TRUE or EGL_FALSE.
Attribute EGL_EXTENSIONS_ENABLED_ANGLE requires EGL_ANGLE_create_context_extensions_enabled.
EGL_EXTENSIONS_ENABLED_ANGLE must be either EGL_TRUE or EGL_FALSE.
Unknown attribute.
Requested GLES version is not supported.
EGL_ANGLE_surface_orientation is not enabled.
EGL_FLEXIBLE_SURFACE_COMPATIBILITY_SUPPORTED_ANGLE cannot be used without EGL_ANGLE_flexible_surface_compatibility support.
<buftype> EGL_IOSURFACE_ANGLE requires the EGL_ANGLE_iosurface_client_buffer extension.
<buffer> must be non null
Width and Height are not supported for thie <buftype>
Width and Height must be positive
Invalid value for EGL_TEXTURE_FORMAT
<buftype> doesn't support rectangle texture targets
Invalid value for EGL_TEXTURE_TARGET
<buftype> doesn't support iosurface plane
<buftype> doesn't support texture type
<buftype> doesn't support texture internal format
<buftype> doesn't support setting GL colorspace
invalid GL colorspace
EGL_IOSURFACE requires the EGL_TEXTURE_RECTANGLE target
EGL_IOSURFACE requires the EGL_TEXTURE_RGBA format
Missing required attribute for EGL_IOSURFACE
If ctx is EGL_NO_CONTEXT, surfaces must be EGL_NO_SURFACE
If ctx is not EGL_NOT_CONTEXT, draw or read must both be EGL_NO_SURFACE, or both not
If ctx is not EGL_NO_CONTEXT, surfaces must not be EGL_NO_SURFACE
'dpy' not a valid EGLDisplay handle
'dpy' not initialized
Color buffer types are not compatible.
Color buffer sizes are not compatible.
Color buffer component types are not compatible.
Depth-stencil buffer types are not compatible.
Surface types are not compatible.
EGL_KHR_image not supported.
EGL_IMAGE_PRESERVED_KHR must be EGL_TRUE or EGL_FALSE.
EGL_GL_TEXTURE_LEVEL_KHR cannot be used without KHR_gl_texture_*_image support.
EGL_GL_TEXTURE_LEVEL_KHR cannot be negative.
EGL_GL_TEXTURE_ZOFFSET_KHR cannot be used without KHR_gl_texture_3D_image support.
invalid attribute: 0x
KHR_gl_texture_2D_image not supported.
buffer cannot reference a 2D texture with the name 0.
target is not a 2D texture.
texture has a surface bound to it.
target 2D texture does not have a valid size at specified level.
KHR_gl_texture_cubemap_image not supported.
buffer cannot reference a cubemap texture with the name 0.
target is not a cubemap texture.
target cubemap texture does not have a valid size at specified level and face.
if level is zero and the texture is incomplete, it must have all of its faces specified at level zero.
KHR_gl_texture_3D_image not supported.
buffer cannot reference a 3D texture with the name 0.
target is not a 3D texture.
target 3D texture does not have a valid size at specified level.
target 3D texture does not have enough layers for the specified Z offset at the specified level.
KHR_gl_renderbuffer_image not supported.
EGL_GL_TEXTURE_LEVEL_KHR cannot be used in conjunction with a renderbuffer target.
buffer cannot reference a renderbuffer with the name 0.
target is not a renderbuffer.
target renderbuffer cannot be multisampled.
invalid target: 0x
EGL_GL_TEXTURE_ZOFFSET_KHR must be used with a 3D texture target.
Device creation extension not active
Invalid attrib_list parameter
D3D11 device creation extension not active
Invalid device_type parameter
Invalid device parameter
Device must have been created using eglCreateDevice
Stream extension not active
Bad stream state
Consumer GLTexture extension not active
Invalid attribute
Stream consumer extension not active
EGL stream consumer external GL extension not enabled
Invalid stream
Invalid stream state
No external texture bound
No GL context current to calling thread.
Current GL context not associated with stream consumer
Invalid stream consumer type
Invalid color buffer type
Invalid plane count
Invalid texture unit
Plane count must be 0 for RGB buffer
Planes cannot be specified
Invalid YUV plane count
Invalid plane specified
Not all planes specified
No external texture bound at one or more specified texture units
Multiple planes bound to same texture object
Stream producer extension not active
Stream not in connecting state
Incompatible stream consumer type
Invalid subresource index
Invalid plane offset
Stream not fully configured
Incompatible stream producer
Texture is null
getSyncValues extension not active
Context is lost.
getSyncValues surface cannot be EGL_NO_SURFACE
getSyncValues surface requires Direct Composition to be enabled
ust is null
msc is null
sbc is null
EGL_KHR_swap_buffers_with_damage is not available.
Swap surface cannot be EGL_NO_SURFACE.
n_rects cannot be negative.
n_rects cannot be greater than zero when rects is NULL.
the 'engine' parameter has an unrecognized value
EGL_ANDROID_presentation_time is not available.
Blob cache functions can only be set once in the lifetime of a Display
Blob cache callbacks cannot be null.
num_config cannot be null.
EGL_EXT_platform_base not supported
ValidateCreatePlatformWindowSurfaceEXT unimplemented.
ValidateCreatePlatformPixmapSurfaceEXT unimplemented.
Extension not supported
Invalid program cache attribute.
Program index out of range.
keysize and binarysize must always be valid pointers.
Invalid program key size.
key and binary must both be null or both non-null.
null pointer in arguments.
binarysize out of valid range.
limit must be non-negative.
Invalid cache resize mode.
Surface cannot be EGL_NO_SURFACE.
Surface does not support EGL_MULTISAMPLE_RESOLVE_BOX.
Invalid multisample resolve type.
Surface does not support EGL_SWAP_BEHAVIOR_PRESERVED.
Invalid swap behaviour.
EGL_WIDTH or EGL_HEIGHT cannot be set without EGL_ANGLE_window_fixed_size support.
EGL_WIDTH or EGL_HEIGHT cannot be set without EGL_FIXED_SIZE_ANGLE being enabled on the surface.
Invalid surface attribute.
EGL_POST_SUB_BUFFER_SUPPORTED_NV cannot be used without EGL_ANGLE_surface_orientation support.
EGL_FIXED_SIZE_ANGLE cannot be used without EGL_ANGLE_window_fixed_size support.
EGL_SURFACE_ORIENTATION_ANGLE cannot be queried without EGL_ANGLE_surface_orientation support.
EGL_DIRECT_COMPOSITION_ANGLE cannot be used without EGL_ANGLE_direct_composition support.
EGL_ROBUST_RESOURCE_INITIALIZATION_ANGLE cannot be used without EGL_ANGLE_robust_resource_initialization support.
Invalid context attribute.
EGL_KHR_debug extension is not available.
message controls must be EGL_TRUE or EGL_FALSE.
unknown attribute.
display is EGL_NO_DISPLAY.
display is not a valid display.
when object type is EGL_OBJECT_DISPLAY_KHR, the object must be the same as the display.
Sync objects are unimplemented.
unknown object type.
texture must be complete if level is non-zero.
if level is zero and the texture is incomplete, it must have no mip levels specified except zero.
Attempt to initialize readonly parameter
Latency must be positive
Consumer GL extension not enabled
Timeout must be positive
Invalid stream attribute
EGL_EXT_pixel_format_float is not enabled.
Platform ANGLE extension is not active
Platform Device extension is not active
Bad platform type.
Invalid automatic trim attribute
EGL_ANGLE_experimental_present_path extension not active
Invalid value for EGL_EXPERIMENTAL_PRESENT_PATH_ANGLE
EGL_ANGLE_platform_angle_d3d is not supported
Invalid value for EGL_PLATFORM_ANGLE_DEVICE_TYPE_ANGLE attrib
EGL_ANGLE_platform_angle extension not active
EGL_PLATFORM_ANGLE_DEBUG_LAYERS_ENABLED_ANGLE must be EGL_TRUE, EGL_FALSE, or EGL_DONT_CARE.
EGL_ANGLE_platform_angle_context_virtualization extension not active
Invalid value for EGL_PLATFORM_ANGLE_CONTEXT_VIRTUALIZATION_ANGLE attrib
Must specify major version if you specify a minor version.
EGL_PLATFORM_ANGLE_DEVICE_TYPE_WARP_ANGLE requires a device type of EGL_PLATFORM_ANGLE_TYPE_D3D11_ANGLE.
EGL_PLATFORM_ANGLE_ENABLE_AUTOMATIC_TRIM_ANGLE requires a device type of EGL_PLATFORM_ANGLE_TYPE_D3D11_ANGLE.
EGL_EXPERIMENTAL_PRESENT_PATH_ANGLE requires a device type of EGL_PLATFORM_ANGLE_TYPE_D3D11_ANGLE.
This device type requires a platform type of EGL_PLATFORM_ANGLE_TYPE_D3D9_ANGLE or EGL_PLATFORM_ANGLE_TYPE_D3D9_ANGLE.
EGL_PLATFORM_ANGLE_TYPE_VULKAN_ANGLE currently only supports Vulkan 1.0.
EGL_PLATFORM_ANGLE_EGL_HANDLE_ANGLE requires a device type of EGL_PLATFORM_ANGLE_TYPE_OPENGLES_ANGLE.
native_display should be a valid EGL device if platform equals EGL_PLATFORM_DEVICE_EXT
Direct3D platform is unsupported.
OpenGL platform is unsupported.
Display type EGL_PLATFORM_ANGLE_TYPE_NULL_ANGLE requires EGL_ANGLE_platform_angle_null.
Vulkan platform is unsupported.
Unknown platform type.
Primcount must be greater than or equal to zero.
At least one enabled attribute must have a divisor of zero.
Cannot have negative height or width.
The texture is a non-power-of-two texture.
Level of detail outside of range.
Integer overflow.
It is undefined behavior to use a pixel unpack buffer that is bound for transform feedback.
imageSize must be 0 if no texture data is provided.
imageSize must be at least 
Stride is over the maximum stride allowed by WebGL.
Offset must be a multiple of the passed in datatype.
Stride must be a multiple of the passed in datatype.
Expected a program name, but found a shader name.
Program object expected.
Expected a shader name, but found a program name.
Shader object expected.
Invalid Attachment Type.
Invalid renderbuffer target.
Renderbuffer width and height cannot be negative and cannot exceed maximum texture size.
Invalid renderbuffer internalformat.
It is invalid to change default FBO's attachments
Invalid blit filter.
Invalid blit mask.
Only nearest filtering can be used when blitting buffers other than the color buffer.
Read and draw framebuffers must both exist for a blit to succeed.
Blit feedback loop: the read and draw framebuffers are the same.
BlitFramebuffer dimensions out of 32-bit integer range.
If the read buffer contains fixed-point or floating-point values, the draw buffer must as well.
If the read buffer contains fixed-point values, the draw buffer must as well.
If the read buffer contains unsigned integer values the draw buffer must as well.
If the read buffer contains signed integer values the draw buffer must as well.
Attempt to blit from a multisampled framebuffer and the bounds or format of the color buffer don't match with the draw framebuffer.
Read and write color attachments cannot be the same image.
Cannot use GL_LINEAR filter when blitting a integer framebuffer.
Attempt to read from a missing color attachment of a complete framebuffer.
Depth/stencil buffer format combination not allowed for blit.
Attempt to blit from a multisampled framebuffer and the bounds don't match with the draw framebuffer.
Read and write depth stencil attachments cannot be the same image.
Attempt to read from a missing depth/stencil attachment of a complete framebuffer.
Attempt to read from a multi-view framebuffer.
Attempt to write to a multi-view framebuffer.
Negative buffer size.
Query extension not enabled.
Invalid query type.
Query id is 0
Other query is active
Invalid query Id.
Query type does not match target
Query target not active
Disjoint timer query not enabled
Invalid query target.
Query is active.
Cannot use current query for timestamp
Invalid pname.
Extension is not enabled.
Enum is not currently supported.
Timer query extension not enabled
Negative count.
Program not linked.
Invalid uniform location
sampler uniform value out of range
wrong type of value for uniform
GL_ANGLE_texture_multisample_array not enabled.
ANGLE_texture_rectangle extension not present
Neither NV_EGL_stream_consumer_external nor GL_OES_EGL_image_external extensions enabled
Read buffer is GL_NONE.
Negative offset.
Border must be 0.
Missing read attachment.
The active read framebuffer object has multiview attachments.
A texture must be bound.
Texture is not cubemap complete. All cubemaps faces must be defined and be the same size.
Desired resource size is greater than max texture size.
Feedback loop formed between Framebuffer and active Texture.
An active buffer is mapped
ValidateDrawStates
This ANGLE implementation does not support separate front/back stencil writemasks, reference values, or stencil mask values.
Stencil reference and mask values must be the same for front facing and back facing triangles.
Draw framebuffer is incomplete
An enabled vertex array has no buffer.
An enabled vertex array has no buffer and no pointer.
A program must be bound.
It is a undefined behaviour to render without vertex shader stage or fragment shader stage.
Two textures of different types use the same sampler location.
The number of views in the active program and draw framebuffer does not match.
There is an active transform feedback object when the number of views in the active draw framebuffer is greater than 1.
There is an active query for target GL_TIME_ELAPSED_EXT when the number of views in the active draw framebuffer is greater than 1.
It is undefined behaviour to have a used but unbound uniform buffer.
It is undefined behaviour to use a uniform buffer that is too small.
It is undefined behavior to use an uniform buffer that is bound for transform feedback.
A transform feedback buffer that would be written to is also bound to a non-transform-feedback target, which would cause undefined behavior.
Vertex shader input type does not match the type of the bound vertex attribute.
Fragment shader output type does not match the bound framebuffer attachment type.
It is undefined behavior to use a vertex buffer that is bound for transform feedback.
GL_EXT_geometry_shader extension not enabled.
Invalid draw mode.
Primitive mode is incompatible with the input primitive type of the geometry shader.
Cannot have negative start.
Draw mode must match current transform feedback object's draw mode.
Not enough space in bound transform feedback buffers.
Only UNSIGNED_SHORT and UNSIGNED_BYTE types are supported.
The draw command is unsupported when transform feedback is active and not paused.
Index buffer is mapped.
Must have element array buffer binding.
No element array buffer and no pointer.
Insufficient buffer size.
Buffer size does not align with data type.
It is undefined behavior to use an element array buffer that is bound for transform feedback.
Element value exceeds maximum element index.
Invalid framebuffer target.
OpenGL ES 3.0 Required.
Negative number of attachments.
Invalid attachment when the default framebuffer is bound.
Requested color attachment is greater than the maximum supported color attachments
GL_TEXTURE_2D texture target requires GL_OES_EGL_image.
GL_TEXTURE_EXTERNAL_OES texture target requires GL_OES_EGL_image_external.
Invalid or unsupported texture target.
EGL image is not valid.
cannot create a 2D texture from a multisampled EGL image.
EGL image internal format is not supported as a texture.
EGL image internal format is not supported as a renderbuffer.
Program binary format is not valid.
Cannot change program binary while program is associated with an active transform feedback object.
No program binary formats supported.
Index exceeds MAX_DRAW_BUFFERS.
Invalid buffer value
Buffer value is greater than MAX_DRAW_BUFFERS
Ith value does not match COLOR_ATTACHMENTi or NONE
n must be 1 when GL is bound to the default framebuffer
Only NONE or BACK are valid values when drawing to the default framebuffer
Context does not support OpenGL ES 3.0 or GL_OES_mapbuffer is not enabled.
Buffer target not valid
Can not get pointer for reserved buffer name zero.
Buffer not mapped.
Negative length.
Attempted to map buffer object zero.
Mapped range does not fit into buffer dimensions.
Invalid access bits: 0x
Buffer mapping length is zero.
Buffer is already mapped.
Need to map buffer for either reading or writing.
Invalid access bits when mapping buffer for reading: 0x
The explicit flushing bit may only be set if the buffer is mapped for writing.
Attempted to flush buffer object zero.
Attempted to flush a buffer not mapped for explicit flushing.
Flushed range does not fit into buffer mapping dimensions.
GL_ANGLE_robust_client_memory is not available.
 parameters are required but 
 were provided.
Attachment type must be compatible with attachment object.
Invalid parameter name for framebuffer attachment.
Querying GL_PROGRAM_BINARY_LENGTH requires GL_OES_get_program_binary or ES 3.0.
OpenGL ES 3.1 Required
No active compute shader stage in this program.
No active geometry shader stage in this program.
Index exceeds MAX_VERTEX_ATTRIBS.
Vertex attribute size must be 1, 2, 3, or 4.
Vertex type not supported before OpenGL ES 3.0.
Invalid type, should be integer
Type is INT_2_10_10_10_REV or UNSIGNED_INT_2_10_10_10_REV and size is not 4.
Invalid type.
No defined conversion between clear value and attachment format.
dataSize must be at least 
A buffer must be bound.
pname requires OpenGL ES 3.0 or GL_OES_mapbuffer.
pname requires OpenGL ES 3.0, GL_OES_mapbuffer or GL_EXT_map_buffer_range.
GL_BUFFER_MAP_POINTER can only be queried with GetBufferPointerv.
pname requires OpenGL ES 3.0 or GL_EXT_map_buffer_range.
A renderbuffer must be bound.
pname requires OpenGL ES 3.0.
GL_EXT_texture_sRGB_decode is not enabled.
Enum requires GLES 3.1
GLES1-only function.
Context does not support OpenGL ES 3.0.
GL_VERTEX_ATTRIB_ARRAY_DIVISOR requires OpenGL ES 3.0 or GL_ANGLE_instanced_arrays.
GL_VERTEX_ATTRIB_ARRAY_INTEGER requires OpenGL ES 3.0.
Vertex Attrib Bindings require OpenGL ES 3.1.
Attempting to read from a multi-view framebuffer.
Invalid format.
Invalid format and type combination.
Pixel pack buffer is mapped.
It is undefined behavior to use a pixel pack buffer that is bound for transform feedback.
The provided parameters overflow with the provided buffer.
uniformBlockIndex exceeds active uniform block count.
Sampler is not valid
Internal format is not renderable.
Texture target requires at least OpenGL ES 3.1.
Invalid target.
Invalid operation on multisampled framebuffer
Specified unit must be in [GL_TEXTURE0, GL_TEXTURE0 + GL_MAX_TEXTURE_UNITS)
Width and height must be less than or equal to GL_MAX_TEXTURE_SIZE.
Samples may not be zero.
SizedInternalformat must be color-renderable, depth-renderable, or stencil-renderable.
Internalformat is one of the unsupported unsized base internalformats.
Samples must not be greater than maximum supported value for the format.
Zero is bound to target.
The value of TEXTURE_IMMUTABLE_FORMAT for the texture currently bound to target on the active texture unit is true.
ES3 texture parameters are not available without GL_OES_EGL_image_external_essl3.
Invalid parameter for 2D multisampled textures.
Base level must be at least 0.
Base level must be 0 for external textures.
Base level must be 0 for multisampled textures.
Base level must be 0 for rectangle textures.
Uniform size does not match uniform method.
Vertex buffer is not big enough for the draw call
Parameter outside of bounds.
Invalid wrap mode for texture type.
Texture wrap mode not recognized.
Texture only supports NEAREST and LINEAR filtering.
Texture filter not recognized.
Unknown parameter value.
@GL_OES_point_size_array not enabled.
Invalid client vertex array type.
Invalid stride for built-in vertex attribute.
Size for built-in vertex attribute is outside allowed range.
Invalid type for built-in vertex attribute.
Invalid light.
Light parameter out of range.
Invalid light parameter.
Material parameter out of range.
Invalid material parameter.
Invalid material face.
Invalid light model parameter.
Invalid clip plane.
Invalid fog mode.
Invalid fog density (must be nonnegative).
Invalid fog parameter.
Invalid texture environment mode.
Invalid texture combine mode.
Invalid texture combine source.
Invalid texture combine operand.
Invalid texture environment scale.
Invalid texture environment parameter.
Invalid texture environment target.
Invalid point parameter value (must be non-negative).
Invalid point parameter.
Invalid point size (must be positive).
Both width and height argument of drawn texture must be positive.
Invalid projection matrix. Left/right, top/bottom, near/far intervals cannot be zero, and near/far cannot be less than zero.
Invalid pointer query.
Invalid logical operation.
Invalid matrix mode.
Current matrix stack has only a single matrix.
Current matrix stack is full.
Invalid shading model.
Rectangle texture cannot have a compressed format.
Each cubemap face must have equal width and height.
Texture level does not exist.
Passed in texture target and format must match the one originally used to define the texture.
Pixel data cannot be null.
Invalid internal format.
Invalid compressed format dimension.
ANGLE_lossy_etc_decode extension is not supported.
Invalid texture target and format combination.
Pixel data must be null.
Texture level must be zero.
Sized GL_RGBA32F internal format requires GL_CHROMIUM_color_buffer_float_rgba
Sized GL_RGB32F internal format requires GL_CHROMIUM_color_buffer_float_rgb
Invalid debug source.
Invalid debug type.
Invalid debug severity.
If count is greater than zero, source and severity cannot be GL_DONT_CARE.
If count is greater than zero, severity must be GL_DONT_CARE.
Message length is larger than GL_MAX_DEBUG_MESSAGE_LENGTH.
Cannot push more than GL_MAX_DEBUG_GROUP_STACK_DEPTH debug groups.
Cannot pop the default debug group.
Blit extension not available.
Scaling and flipping in BlitFramebufferANGLE not supported by this implementation.
Linear blit not supported in this extension.
Blits are only supported from 2D texture, renderbuffer or default framebuffer attachments in this extension.
Blits are only supported to 2D texture, renderbuffer or default framebuffer attachments in this extension.
Attempting to blit and the read and draw buffer formats don't match.
Only whole-buffer blit is supported from a multisampled read buffer in this extension.
Only whole-buffer depth and stencil blits are supported by this extension.
Multisampled depth/stencil blit is not supported by this extension.
Invalid mask bits.
Extension not supported.
Compressed texture dimensions must exactly match the dimensions of the data passed in.
Map buffer extension not available.
Non-write buffer mapping not supported.
Map buffer range extension not available.
Buffer is currently bound for transform feedback.
Buffer is bound for transform feedback.
Texture was not generated
GL_CHROMIUM_bind_uniform_location is not available.
Location cannot be less than 0.
Location must be less than (MAX_VERTEX_UNIFORM_VECTORS + MAX_FRAGMENT_UNIFORM_VECTORS) * 4
Name contains invalid characters.
Attributes that begin with 'gl_' are not allowed.
GL_CHROMIUM_framebuffer_mixed_samples is not available.
GLenum components is not one of GL_RGB, GL_RGBA, GL_ALPHA or GL_NONE.
Invalid matrix.
GL_CHROMIUM_path_rendering is not available.
Invalid range.
No such path object.
Invalid number of commands.
No commands array given.
Invalid number of coordinates.
No coordinate array given.
Invalid coordinate type.
Invalid command.
Invalid stroke width.
Invalid end caps.
Invalid join style.
Invalid miter limit.
Invalid path parameter.
No value array.
Invalid stencil.
Invalid fill mode.
Invalid stencil bit mask.
No such path or path has no data.
Invalid cover mode.
Location exceeds max varying.
No name given.
Program doesn't exist.
Invalid components.
No coefficients array given.
Invalid gen mode.
No such binding.
Fragment input type is not a floating point scalar or vector.
Unexpected number of components
GL_CHROMIUM_copy_texture extension not available.
Source texture is not a valid texture object.
Source texture level is not valid.
Source texture internal format is invalid.
Destination texture is not a valid texture object.
Destination texture a valid texture type.
Destination width and height must be equal for cube map textures.
Destination texture is immutable.
Source texture a valid texture type.
The source level of the source texture must be defined.
x and y cannot be negative.
The specified dimensions are outside of the bounds of the texture.
Destination texture level is not valid.
The destination level of the destination texture must be defined.
Destination internal format and type combination is not valid.
Destination texture not large enough to copy to.
GL_CHROMIUM_copy_compressed_texture extension not available.
Source texture must be of type GL_TEXTURE_2D.
Source texture must level 0 defined.
Source texture must have a compressed internal format.
Destination texture must be of type GL_TEXTURE_2D.
Destination cannot be immutable.
Invalid shader type.
Invalid buffer usage enum.
GL_ANGLE_request_extension is not available.
Extension 
 is not requestable.
Specified unit must be in [GL_TEXTURE0, GL_TEXTURE0 + GL_MAX_COMBINED_IMAGE_UNITS)
Shader attachment already has a shader.
Invalid blend equation.
Invalid blend function.
CONSTANT_COLOR (or ONE_MINUS_CONSTANT_COLOR) and CONSTANT_ALPHA (or ONE_MINUS_CONSTANT_ALPHA) cannot be used together as source and destination factors in the blend function.
Simultaneous use of GL_CONSTANT_ALPHA/GL_ONE_MINUS_CONSTANT_ALPHA and GL_CONSTANT_COLOR/GL_ONE_MINUS_CONSTANT_COLOR not supported by this implementation.
ValidateBlendFuncSeparate
Invalid name.
Invalid width.
Cannot have negative stride.
stride cannot be greater than MAX_VERTEX_ATTRIB_STRIDE.
index must be smaller than MAX_VERTEX_ATTRIB_BINDINGS.
Client data cannot be used with a non-default vertex array object.
GL_FIXED is not supported in WebGL.
Near value cannot be greater than far.
GL_ANGLE_framebuffer_multisample not available
Cull mode not recognized.
Shader to be detached must be currently attached to the program.
Index exceeds program active uniform count.
Negative maxcount.
compute shader precision not yet implemented.
Invalid or unsupported precision type.
hint requires OES_standard_derivatives.
Cannot use negative values in PixelStorei
Unpack alignment must be 1, 2, 4, or 8.
Invalid shader binary format.
Shader source contains invalid characters.
Viewport size cannot be negative.
Current renderer doesn't support alpha-to-coverage
ValidateEnable
Mipmap level must be 0 when attaching a texture.
Textarget must match the texture target type.
Texture format does not support mipmap generation.
Cannot link program while program is associated with an active transform feedback object.
Cannot change active program while transform feedback is unpaused.
GL_NV_fence is not supported
Invalid fence object.
Fence must be set.
The current context doesn't support setting a non-zero divisor on the attribute with index zero. Please reorder the attributes in your vertex shader so that attribute zero can have a zero divisor.
ValidateVertexAttribDivisorANGLE
name is not a valid buffer.
name is not a valid shader.
name is not a valid program.
name is not a valid vertex array.
name is not a valid query.
name is not a valid transform feedback.
name is not a valid sampler.
name is not a valid texture.
name is not a valid renderbuffer.
name is not a valid framebuffer.
Invalid identifier.
Label length is larger than GL_MAX_LABEL_LENGTH.
name is not a valid sync.
Context does not support GL_ANGLE_texture_rectangle
External texture extension not enabled
No path name array.
Invalid (negative) numPaths.
Invalid path name type.
Invalid transformation.
No transform array given.
Location name lengths must not be greater than 256 characters.
Location lengths must not be greater than 1024 characters.
webgl_
_webgl_
Attributes that begin with 'webgl_', or '_webgl_' are not allowed.
Invalid texture dimensions.
ETC lossy decode formats can't be copied to.
internalformat is not a supported compressed internal format.
Format must match the internal format of the texture.
Reads would overflow the pixel unpack buffer.
Pixel unpack buffer is mapped.
internalformat is an ETC2/EAC format and target is not GL_TEXTURE_2D_ARRAY.
Mip level invalid for framebuffer texture attachment.
Layer invalid for framebuffer texture attachment.
Texture is not a three-dimensional or two-dimensionsal array texture.
end < start
Indices are out of the start, end range.
No active read framebuffer.
Unknown enum for 'src' in ReadBuffer
'src' must be GL_NONE or GL_BACK when reading from the default framebuffer.
'src' is greater than MAX_DRAW_BUFFERS.
Not a valid compressed texture format
Must specify a valid 3D texture destination target
buffer is non-zero and size is less than or equal to zero.
Invalid value, expected GL_FALSE or GL_TRUE: 
PROGRAM_SEPARABLE is not supported before GLES 3.1
Invalid pname: 0x
Invalid source texture level.
Invalid source texture height or width.
Destination texture cannot be immutable.
x, y, or z cannot be negative.
Cannot have negative height, width, or depth.
Invalid destination texture type.
Destination texture too small.
Attempt to delete active transform feedback.
Invalid primitive mode.
Transform feedback is already active.
Transform feedback has a mapped buffer.
The active program has specified no output variables to record.
Atomic Counter buffers are not supported in this version of GL
index is outside the valid range for GL_ATOMIC_COUNTER_BUFFER_BINDING
Shader storage buffers are not supported in this version of GL
index is outside the valid range for GL_SHADER_STORAGE_BUFFER_BINDING
Vertex Attrib Bindings are not supported in this version of GL
bindingindex must be smaller than MAX_VERTEX_ATTRIB_BINDINGS.
MaskNumber cannot be greater than or equal to the value of MAX_SAMPLE_MASK_WORDS.
Image unit cannot be greater than or equal to the value of MAX_IMAGE_UNITS.
Invalid buffer target
No buffer bound to target
Cannot call CopyBufferSubData on a mapped buffer
Integer overflow when validating copy offsets.
readOffset, writeOffset and size must all be non-negative
Buffer offset overflow in CopyBufferSubData
Integer overflow when validating same buffer copy.
index must be less than the number of extension strings.
index must be less than the number of requestable extension strings.
Invalid sync object.
baseViewIndex cannot be less than 0.
Texture's target must be GL_TEXTURE_2D_ARRAY.
baseViewIndex+numViews cannot be greater than GL_MAX_ARRAY_TEXTURE_LAYERS.
viewportOffsets cannot contain negative values.
Texture's target must be GL_TEXTURE_2D.
Transform feedback object that does not exist.
Fragment output color index must be zero or one.
Color number for secondary color greater than or equal to MAX_DUAL_SOURCE_DRAW_BUFFERS
Color number for primary color greater than or equal to MAX_DRAW_BUFFERS
Format cannot be GL_DEPTH_COMPONENT or GL_DEPTH_STENCIL if target is GL_TEXTURE_3D
Invalid combination of format, type and internalFormat.
Unsupported internal format.
buffer is non-zero and offset is negative.
Buffer was not generated.
index is greater than or equal to the number of TRANSFORM_FEEDBACK_BUFFER indexed binding points.
offset and size must be multiple of 4.
target is TRANSFORM_FEEDBACK_BUFFER and transform feedback is currently active.
index is greater than or equal to the number of UNIFORM_BUFFER indexed binding points.
offset must be multiple of value of UNIFORM_BUFFER_OFFSET_ALIGNMENT.
ATOMIC_COUNTER_BUFFER is not supported before GLES 3.1
index is greater than or equal to the number of ATOMIC_COUNTER_BUFFER indexed binding points.
offset must be a multiple of 4.
SHADER_STORAGE_BUFFER is not supported in GLES3.
index is greater than or equal to the number of SHADER_STORAGE_BUFFER indexed binding points.
offset must be multiple of value of SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT.
the target is not supported.
GL_ANGLE_copy_texture_3d extension not available.
ANGLE_multiview is not available.
numViews cannot be less than 1.
numViews cannot be greater than GL_MAX_VIEWS_ANGLE.
Compressed textures cannot be attached to a framebuffer.
zero is bound to VERTEX_ARRAY_BINDING
zero is bound to DRAW_INDIRECT_BUFFER
indirect is not a multiple of the size, in basic machine units, of uint
The number of views in the active draw framebuffer is greater than 1.
the  command  would source data beyond the end of the buffer object.
zero is bound to ELEMENT_ARRAY_BUFFER
No texture bound.
Target must be TEXTURE_2D_MULTISAMPLE.
Pname must be SAMPLE_POSITION.
Index must be less than the value of SAMPLES.
Params less than 0 or greater than GL_MAX_FRAMEBUFFER_WIDTH.
Params less than 0 or greater than GL_MAX_FRAMEBUFFER_HEIGHT.
Params less than 0 or greater than GL_MAX_FRAMEBUFFER_SAMPLES.
Framebuffer layer cannot be less than 0 or greater than GL_MAX_FRAMEBUFFER_LAYERS_EXT.
Default framebuffer is bound to target.
Invalid program interface: 0x
Buffer is not generated.
stride must be between 0 and MAX_VERTEX_ATTRIB_STRIDE.
Default vertex array buffer is bound.
Default vertex array object is bound.
bindingindex must be smaller than MAX_VERTEX_ATTRIB_BINDINGS
Invalid index: 
No active program for the compute shader stage.
num_groups_x cannot be greater than MAX_COMPUTE_WORK_GROUP_COUNT[0]=
num_groups_y cannot be greater than MAX_COMPUTE_WORK_GROUP_COUNT[1]=
num_groups_z cannot be greater than MAX_COMPUTE_WORK_GROUP_COUNT[2]=
Offset must be a multiple of the size, in basic machine units, of uint
Dispatch indirect buffer must be bound.
unit cannot be greater than or equal than MAX_IMAGE_UNITS = 
level is negative.
layer is negative.
access is not one of the supported tokens.
format is not one of supported image unit formats.
texture is not the name of an existing texture object.
texture is not the name of an immutable texture object.
Program is not successfully linked.
Invalid program interface.
Invalid propCount.
Invalid bufSize.
Invalid prop.
Not an allowed prop for interface
Unknown property of program interface.
Active atomic counter resources are not assigned name strings.
MAX_NUM_ACTIVE_VARIABLES requires a buffer or block interface.
Invalid memory barrier bit.
Not a valid texture object name.
Target must be TEXTURE_2D_MULTISAMPLE_ARRAY_OES.
programInterface must be set to GL_PROGRAM_OUTPUT.
relativeOffset cannot be greater than MAX_VERTEX_ATTRIB_RELATIVE_OFFSET.
HRESULT: 
error: 
Unknown exception
generic
system
unknown error
address family not supported
address in use
address not available
already connected
argument list too long
argument out of domain
bad address
bad file descriptor
bad message
broken pipe
connection aborted
connection already in progress
connection refused
connection reset
cross device link
destination address required
device or resource busy
directory not empty
executable format error
file exists
file too large
filename too long
function not supported
host unreachable
identifier removed
illegal byte sequence
inappropriate io control operation
interrupted
invalid argument
invalid seek
io error
is a directory
message size
network down
network reset
network unreachable
no buffer space
no child process
no link
no lock available
no message available
no message
no protocol option
no space on device
no stream resources
no such device or address
no such device
no such file or directory
no such process
not a directory
not a socket
not a stream
not connected
not enough memory
not supported
operation canceled
operation in progress
operation not permitted
operation not supported
operation would block
owner dead
permission denied
protocol error
protocol not supported
read only file system
resource deadlock would occur
resource unavailable try again
result out of range
state not recoverable
stream timeout
text file busy
timed out
too many files open in system
too many files open
too many links
too many symbolic link levels
value too large
wrong protocol type
bad allocation
bad function call
EGL_EXT_create_context_robustness
EGL_ANGLE_d3d_share_handle_client_buffer
EGL_ANGLE_d3d_texture_client_buffer
EGL_ANGLE_surface_d3d_texture_2d_share_handle
EGL_ANGLE_query_surface_pointer
EGL_ANGLE_window_fixed_size
EGL_ANGLE_keyed_mutex
EGL_ANGLE_surface_orientation
EGL_ANGLE_direct_composition
EGL_NV_post_sub_buffer
EGL_KHR_create_context
EGL_EXT_device_query
EGL_KHR_image
EGL_KHR_image_base
EGL_KHR_image_pixmap
EGL_KHR_gl_texture_2D_image
EGL_KHR_gl_texture_cubemap_image
EGL_KHR_gl_texture_3D_image
EGL_KHR_gl_renderbuffer_image
EGL_KHR_get_all_proc_addresses
EGL_KHR_stream
EGL_KHR_stream_consumer_gltexture
EGL_NV_stream_consumer_gltexture_yuv
EGL_ANGLE_flexible_surface_compatibility
EGL_ANGLE_stream_producer_d3d_texture
EGL_ANGLE_create_context_webgl_compatibility
EGL_CHROMIUM_create_context_bind_generates_resource
EGL_CHROMIUM_sync_control
EGL_KHR_swap_buffers_with_damage
EGL_EXT_pixel_format_float
EGL_KHR_surfaceless_context
EGL_ANGLE_display_texture_share_group
EGL_ANGLE_create_context_client_arrays
EGL_ANGLE_program_cache_control
EGL_ANGLE_robust_resource_initialization
EGL_ANGLE_iosurface_client_buffer
EGL_ANGLE_create_context_extensions_enabled
EGL_ANDROID_presentation_time
EGL_ANDROID_blob_cache
EGL_ANGLE_device_d3d
EGL_EXT_client_extensions
EGL_EXT_platform_base
EGL_EXT_platform_device
EGL_ANGLE_platform_angle
EGL_ANGLE_platform_angle_d3d
EGL_ANGLE_platform_angle_opengl
EGL_ANGLE_platform_angle_null
EGL_ANGLE_platform_angle_vulkan
EGL_ANGLE_platform_angle_context_virtualization
EGL_ANGLE_device_creation
EGL_ANGLE_device_creation_d3d11
EGL_ANGLE_x11_visual
EGL_ANGLE_experimental_present_path
EGL_KHR_client_get_all_proc_addresses
EGL_KHR_debug
EGL_ANGLE_explicit_context
GL_OES_element_index_uint
GL_OES_packed_depth_stencil
GL_OES_get_program_binary
GL_OES_rgb8_rgba8
GL_EXT_texture_format_BGRA8888
GL_EXT_read_format_bgra
GL_NV_pixel_buffer_object
GL_OES_mapbuffer
GL_EXT_map_buffer_range
GL_EXT_color_buffer_half_float
GL_OES_texture_half_float
GL_OES_texture_half_float_linear
GL_OES_texture_float
GL_OES_texture_float_linear
GL_EXT_texture_rg
GL_EXT_texture_compression_dxt1
GL_ANGLE_texture_compression_dxt3
GL_ANGLE_texture_compression_dxt5
GL_EXT_texture_compression_s3tc_srgb
GL_KHR_texture_compression_astc_hdr
GL_KHR_texture_compression_astc_ldr
GL_OES_compressed_ETC1_RGB8_texture
OES_compressed_ETC2_RGB8_texture
OES_compressed_ETC2_sRGB8_texture
OES_compressed_ETC2_punchthroughA_RGBA8_texture
OES_compressed_ETC2_punchthroughA_sRGB8_alpha_texture
OES_compressed_ETC2_RGBA8_texture
OES_compressed_ETC2_sRGB8_alpha8_texture
OES_compressed_EAC_R11_unsigned_texture
OES_compressed_EAC_R11_signed_texture
OES_compressed_EAC_RG11_unsigned_texture
OES_compressed_EAC_RG11_signed_texture
GL_EXT_texture_compression_bptc
GL_EXT_sRGB
GL_ANGLE_depth_texture
GL_OES_depth32
GL_EXT_texture_storage
GL_OES_texture_npot
GL_EXT_draw_buffers
GL_EXT_texture_filter_anisotropic
GL_EXT_occlusion_query_boolean
GL_NV_fence
GL_EXT_disjoint_timer_query
GL_EXT_robustness
GL_KHR_robust_buffer_access_behavior
GL_EXT_blend_minmax
GL_ANGLE_framebuffer_blit
GL_ANGLE_framebuffer_multisample
GL_ANGLE_instanced_arrays
GL_ANGLE_pack_reverse_row_order
GL_OES_standard_derivatives
GL_EXT_shader_texture_lod
GL_EXT_frag_depth
GL_ANGLE_multiview
GL_ANGLE_texture_usage
GL_ANGLE_translated_shader_source
GL_OES_fbo_render_mipmap
GL_EXT_discard_framebuffer
GL_EXT_debug_marker
GL_OES_EGL_image
GL_OES_EGL_image_external
GL_OES_EGL_image_external_essl3
GL_NV_EGL_stream_consumer_external
GL_EXT_unpack_subimage
GL_NV_pack_subimage
GL_EXT_color_buffer_float
GL_OES_vertex_array_object
GL_KHR_debug
GL_ANGLE_lossy_etc_decode
GL_CHROMIUM_bind_uniform_location
GL_CHROMIUM_sync_query
GL_CHROMIUM_copy_texture
GL_CHROMIUM_copy_compressed_texture
GL_ANGLE_copy_texture_3d
GL_ANGLE_webgl_compatibility
GL_ANGLE_request_extension
GL_CHROMIUM_bind_generates_resource
GL_ANGLE_robust_client_memory
GL_EXT_texture_sRGB_decode
GL_EXT_sRGB_write_control
GL_CHROMIUM_color_buffer_float_rgb
GL_CHROMIUM_color_buffer_float_rgba
GL_EXT_multisample_compatibility
GL_CHROMIUM_framebuffer_mixed_samples
GL_EXT_texture_norm16
GL_CHROMIUM_path_rendering
GL_OES_surfaceless_context
GL_ANGLE_client_arrays
GL_ANGLE_robust_resource_initialization
GL_ANGLE_program_cache_control
GL_ANGLE_texture_rectangle
GL_EXT_geometry_shader
GL_ANGLE_explicit_context_gles1
GL_ANGLE_explicit_context
GL_KHR_parallel_shader_compile
GL_OES_texture_storage_multisample_2d_array
GL_ANGLE_multiview_multisample
GL_EXT_blend_func_extended
GL_OES_point_size_array
GL_OES_texture_cube_map
GL_OES_point_sprite
GL_OES_draw_texture
allocate
HandleAllocator::allocate reusing 
HandleAllocator::allocate allocating 
release
HandleAllocator::release releasing 
reserve
HandleAllocator::reserve reserving 
onDestroy
compileShader
../../third_party/angle/src/libANGLE/GLES1Renderer.cpp
Missing shader object
Internal GLES 1 shader compile failed. Info log: 
GLES1Renderer shader compile failed.
linkProgram
Missing program object
Internal GLES 1 shader link failed. Info log: 
GLES1Renderer program link failed.
#version 300 es\nprecision highp float;\n\n#define kMaxTexUnits 4\n\nin vec4 pos;\nin vec3 normal;\nin vec4 color;\nin float pointsize;\nin vec4 texcoord0;\nin vec4 texcoord1;\nin vec4 texcoord2;\nin vec4 texcoord3;\n\nuniform mat4 projection;\nuniform mat4 modelview;\nuniform mat4 modelview_invtr;\nuniform mat4 texture_matrix[kMaxTexUnits];\n\nuniform bool enable_rescale_normal;\nuniform bool enable_normalize;\n\n// Point rasterization//////////////////////////////////////////////////////////\n\nuniform bool point_rasterization;\nuniform float point_size_min;\nuniform float point_size_max;\nuniform vec3 point_distance_attenuation;\n\n// GL_OES_draw_texture uniforms/////////////////////////////////////////////////\n\nuniform bool enable_draw_texture;\nuniform vec4 draw_texture_coords;\nuniform vec2 draw_texture_dims;\nuniform vec4 draw_texture_normalized_crop_rect[kMaxTexUnits];\n\n// Varyings/////////////////////////////////////////////////////////////////////\n\nout vec4 pos_varying;\nout vec3 normal_varying;\nout vec4 color_varying;\nflat out vec4 color_varying_flat;\nout vec4 texcoord0_varying;\nout vec4 texcoord1_varying;\nout vec4 texcoord2_varying;\nout vec4 texcoord3_varying;\n\nconst vec4 drawTextureVertices[6] = vec4[](\n    vec4(0.0, 0.0, 0.0, 1.0),\n    vec4(1.0, 0.0, 0.0, 1.0),\n    vec4(1.0, 1.0, 0.0, 1.0),\n    vec4(0.0, 0.0, 0.0, 1.0),\n    vec4(1.0, 1.0, 0.0, 1.0),\n    vec4(0.0, 1.0, 0.0, 1.0));\n\nvec4 drawTexturePosition(int vertexId)\n{\n\n    float drawTexX = draw_texture_coords[0];\n    float drawTexY = draw_texture_coords[1];\n    float drawTexZ = draw_texture_coords[2];\n    float drawTexW = draw_texture_dims[0];\n    float drawTexH = draw_texture_dims[1];\n\n    return vec4(drawTexX, drawTexY, drawTexZ, 0.0) +\n           drawTextureVertices[vertexId] *\n           vec4(drawTexW, drawTexH, 1.0, 1.0);\n}\n\nvec4 drawTextureTexCoord(int vertexId, int textureUnit)\n{\n    float texCropU = draw_texture_normalized_crop_rect[textureUnit].x;\n    float texCropV = draw_texture_normalized_crop_rect[textureUnit].y;\n    float texCropW = draw_texture_normalized_crop_rect[textureUnit].z;\n    float texCropH = draw_texture_normalized_crop_rect[textureUnit].w;\n\n    return vec4(texCropU, texCropV, 0.0, 0.0) +\n           drawTextureVertices[vertexId] *\n           vec4(texCropW, texCropH, 0.0, 0.0);\n}\n\nvec4 calcWorldPosition(vec4 posInput)\n{\n    return modelview * posInput;\n}\n\nvec4 calcNdcFromWorldPosition(vec4 worldPos)\n{\n    return projection * worldPos;\n}\n\nfloat calcPointSize(vec4 ndcPos)\n{\n    float dist         = length(ndcPos.z);\n    float attConst     = point_distance_attenuation[0];\n    float attLinear    = point_distance_attenuation[1];\n    float attQuad      = point_distance_attenuation[2];\n    float attPart      = attConst + attLinear * dist + attQuad * dist * dist;\n    float attPointSize = pointsize / pow(attPart, 0.5);\n\n    return clamp(attPointSize, point_size_min, point_size_max);\n}\n\nvec3 calcNormal(vec3 normalInput)\n{\n    mat3 mvInvTr3 = mat3(modelview_invtr);\n    vec3 result   = mvInvTr3 * normalInput;\n\n    if (enable_rescale_normal)\n    {\n        float rescale   = 1.0;\n        vec3 rescaleVec = vec3(mvInvTr3[2]);\n        float len       = length(rescaleVec);\n        if (len > 0.0)\n        {\n            rescale = 1.0 / len;\n        }\n        result *= rescale;\n    }\n\n    if (enable_normalize)\n    {\n        result = normalize(result);\n    }\n\n    return result;\n}\n\nvoid main()\n{\n    color_varying      = color;\n    color_varying_flat = color;\n\n    if (enable_draw_texture)\n    {\n        int vertexId        = gl_VertexID;\n        vec4 posDrawTexture = drawTexturePosition(vertexId);\n\n        gl_Position = posDrawTexture;\n        pos_varying = posDrawTexture;\n\n        normal_varying = normal;\n\n        gl_PointSize = pointsize;\n\n        texcoord0_varying = drawTextureTexCoord(vertexId, 0);\n        texcoord1_varying = drawTextureTexCoord(vertexId, 1);\n        texcoord2_varying = drawTextureTexCoord(vertexId, 2);\n        texcoord3_varying = drawTextureTexCoord(vertexId, 3);\n    }\n    else\n    {\n        vec4 worldPos = calcWorldPosition(pos);\n        vec4 ndcPos   = calcNdcFromWorldPosition(worldPos);\n\n        gl_Position = ndcPos;\n        pos_varying = worldPos;\n\n        normal_varying = calcNormal(normal);\n\n        // Avoid calculating point size stuff\n        // if we are not rendering points.\n        if (point_rasterization)\n        {\n            gl_PointSize = calcPointSize(ndcPos);\n        }\n        else\n        {\n            gl_PointSize = pointsize;\n        }\n\n        texcoord0_varying = texture_matrix[0] * texcoord0;\n        texcoord1_varying = texture_matrix[1] * texcoord1;\n        texcoord2_varying = texture_matrix[2] * texcoord2;\n        texcoord3_varying = texture_matrix[3] * texcoord3;\n    }\n}\n
#version 300 es\nprecision highp float;\n\n// Defines for GL constants\n#define kMaxLights                           8\n#define kMaxTexUnits                         4\n#define kMaxClipPlanes                       6\n\n#define kModulate                       0x2100\n#define kDecal                          0x2101\n#define kCombine                        0x8570\n#define kReplace                        0x1E01\n#define kBlend                          0x0BE2\n#define kAdd                            0x0104\n\n#define kAddSigned                      0x8574\n#define kInterpolate                    0x8575\n#define kSubtract                       0x84E7\n#define kDot3Rgb                        0x86AE\n#define kDot3Rgba                       0x86AF\n\n#define kAlpha                          0x1906\n#define kRGB                            0x1907\n#define kRGBA                           0x1908\n#define kLuminance                      0x1909\n#define kLuminanceAlpha                 0x190A\n\n#define kTexture                        0x1702\n#define kConstant                       0x8576\n#define kPrimaryColor                   0x8577\n#define kPrevious                       0x8578\n\n#define kSrcColor                       0x0300\n#define kOneMinusSrcColor               0x0301\n#define kSrcAlpha                       0x0302\n#define kOneMinusSrcAlpha               0x0303\n\n#define kLinear                         0x2601\n#define kExp                            0x0800\n#define kExp2                           0x0801\n\n#define kNever                          0x0200\n#define kLess                           0x0201\n#define kEqual                          0x0202\n#define kLequal                         0x0203\n#define kGreater                        0x0204\n#define kNotequal                       0x0205\n#define kGequal                         0x0206\n#define kAlways                         0x0207\n#define kZero                              0x0\n#define kOne                               0x1\n\n#define kClear                          0x1500\n#define kAnd                            0x1501\n#define kAnd_reverse                    0x1502\n#define kCopy                           0x1503\n#define kAnd_inverted                   0x1504\n#define kNoop                           0x1505\n#define kXor                            0x1506\n#define kOr                             0x1507\n#define kNor                            0x1508\n#define kEquiv                          0x1509\n#define kInvert                         0x150A\n#define kOr_reverse                     0x150B\n#define kCopy_inverted                  0x150C\n#define kOr_inverted                    0x150D\n#define kNand                           0x150E\n#define kSet                            0x150F
\n\n// Texture units ///////////////////////////////////////////////////////////////\n\nuniform bool enable_texture_2d[kMaxTexUnits];\nuniform bool enable_texture_cube_map[kMaxTexUnits];\n\n// These are not arrays because hw support for arrays\n// of samplers is rather lacking.\n\nuniform sampler2D tex_sampler0;\nuniform samplerCube tex_cube_sampler0;\n\nuniform sampler2D tex_sampler1;\nuniform samplerCube tex_cube_sampler1;\n\nuniform sampler2D tex_sampler2;\nuniform samplerCube tex_cube_sampler2;\n\nuniform sampler2D tex_sampler3;\nuniform samplerCube tex_cube_sampler3;\n\nuniform int texture_format[kMaxTexUnits];\n\nuniform int texture_env_mode[kMaxTexUnits];\nuniform int combine_rgb[kMaxTexUnits];\nuniform int combine_alpha[kMaxTexUnits];\nuniform int src0_rgb[kMaxTexUnits];\nuniform int src0_alpha[kMaxTexUnits];\nuniform int src1_rgb[kMaxTexUnits];\nuniform int src1_alpha[kMaxTexUnits];\nuniform int src2_rgb[kMaxTexUnits];\nuniform int src2_alpha[kMaxTexUnits];\nuniform int op0_rgb[kMaxTexUnits];\nuniform int op0_alpha[kMaxTexUnits];\nuniform int op1_rgb[kMaxTexUnits];\nuniform int op1_alpha[kMaxTexUnits];\nuniform int op2_rgb[kMaxTexUnits];\nuniform int op2_alpha[kMaxTexUnits];\nuniform vec4 texture_env_color[kMaxTexUnits];\nuniform float texture_env_rgb_scale[kMaxTexUnits];\nuniform float texture_env_alpha_scale[kMaxTexUnits];\nuniform bool point_sprite_coord_replace[kMaxTexUnits];\n\n// Vertex attributes////////////////////////////////////////////////////////////\n\nin vec4 pos_varying;\nin vec3 normal_varying;\nin vec4 color_varying;\nflat in vec4 color_varying_flat;\nin vec4 texcoord0_varying;\nin vec4 texcoord1_varying;\nin vec4 texcoord2_varying;\nin vec4 texcoord3_varying;\n\n// Alpha test///////////////////////////////////////////////////////////////////\n\nuniform bool enable_alpha_test;\nuniform int alpha_func;\nuniform float alpha_test_ref;\n\n// Shading: flat shading, lighting, and materials///////////////////////////////\n\nuniform bool shade_model_flat;\nuniform bool enable_lighting;\nuniform bool enable_color_material;\n\nuniform vec4 material_ambient;\nuniform vec4 material_diffuse;\nuniform vec4 material_specular;\nuniform vec4 material_emissive;\nuniform float material_specular_exponent;\n\nuniform vec4 light_model_scene_ambient;\nuniform bool light_model_two_sided;\n\nuniform bool light_enables[kMaxLights];\nuniform vec4 light_ambients[kMaxLights];\nuniform vec4 light_diffuses[kMaxLights];\nuniform vec4 light_speculars[kMaxLights];\nuniform vec4 light_positions[kMaxLights];\nuniform vec3 light_directions[kMaxLights];\nuniform float light_spotlight_exponents[kMaxLights];\nuniform float light_spotlight_cutoff_angles[kMaxLights];\nuniform float light_attenuation_consts[kMaxLights];\nuniform float light_attenuation_linears[kMaxLights];\nuniform float light_attenuation_quadratics[kMaxLights];\n\n// Fog /////////////////////////////////////////////////////////////////////////\n\nuniform bool enable_fog;\nuniform int fog_mode;\nuniform float fog_density;\nuniform float fog_start;\nuniform float fog_end;\nuniform vec4 fog_color;\n\n// User clip plane /////////////////////////////////////////////////////////////\n\nuniform bool enable_clip_planes;\nuniform bool clip_plane_enables[kMaxClipPlanes];\nuniform vec4 clip_planes[kMaxClipPlanes];\n\n// Point rasterization//////////////////////////////////////////////////////////\n\nuniform bool point_rasterization;\nuniform bool point_sprite_enabled;\n\n// GL_OES_draw_texture//////////////////////////////////////////////////////////\n\nuniform bool enable_draw_texture;\n\n// Outgoing fragment////////////////////////////////////////////////////////////\n\nout vec4 frag_color;\n
\n\nfloat posDot(vec3 a, vec3 b)\n{\n    return max(dot(a, b), 0.0);\n}\n\nvec4 doLighting(vec4 currentFragment)\n{\n    vec4 materialAmbientActual = material_ambient;\n    vec4 materialDiffuseActual = material_diffuse;\n\n    if (enable_color_material || enable_texture_2d[0] || enable_texture_cube_map[0])\n    {\n        materialAmbientActual = currentFragment;\n        materialDiffuseActual = currentFragment;\n    }\n\n    vec4 lightingResult = material_emissive + materialAmbientActual * light_model_scene_ambient;\n\n    for (int i = 0; i < kMaxLights; i++)\n    {\n\n        if (!light_enables[i])\n            continue;\n\n        vec4 lightAmbient  = light_ambients[i];\n        vec4 lightDiffuse  = light_diffuses[i];\n        vec4 lightSpecular = light_speculars[i];\n        vec4 lightPos      = light_positions[i];\n        vec3 lightDir      = light_directions[i];\n        float attConst     = light_attenuation_consts[i];\n        float attLinear    = light_attenuation_linears[i];\n        float attQuadratic = light_attenuation_quadratics[i];\n        float spotAngle    = light_spotlight_cutoff_angles[i];\n        float spotExponent = light_spotlight_exponents[i];\n\n        vec3 toLight;\n        if (lightPos.w == 0.0)\n        {\n            toLight = lightPos.xyz;\n        }\n        else\n        {\n            toLight = (lightPos.xyz / lightPos.w - pos_varying.xyz);\n        }\n\n        float lightDist = length(toLight);\n        vec3 h          = normalize(toLight) + vec3(0.0, 0.0, 1.0);\n        float ndotL     = posDot(normal_varying, normalize(toLight));\n        float ndoth     = posDot(normal_varying, normalize(h));\n\n        float specAtt;\n\n        if (ndotL != 0.0)\n        {\n            specAtt = 1.0;\n        }\n        else\n        {\n            specAtt = 0.0;\n        }\n\n        float att;\n\n        if (lightPos.w != 0.0)\n        {\n            float attDenom =\n                (attConst + attLinear * lightDist + attQuadratic * lightDist * lightDist);\n            att = 1.0 / attDenom;\n        }\n        else\n        {\n            att = 1.0;\n        }\n\n        float spot;\n\n        float spotAngleCos = cos(radians(spotAngle));\n        vec3 toSurfaceDir  = -normalize(toLight);\n        float spotDot      = posDot(toSurfaceDir, normalize(lightDir));\n\n        if (spotAngle == 180.0 || lightPos.w == 0.0)\n        {\n            spot = 1.0;\n        }\n        else\n        {\n            if (spotDot < spotAngleCos)\n            {\n                spot = 0.0;\n            }\n            else\n            {\n                spot = pow(spotDot, spotExponent);\n            }\n        }\n\n        vec4 contrib = materialAmbientActual * lightAmbient;\n        contrib += ndotL * materialDiffuseActual * lightDiffuse;\n        if (ndoth > 0.0 && material_specular_exponent > 0.0)\n        {\n            contrib += specAtt * pow(ndoth, material_specular_exponent) * material_specular *\n                       lightSpecular;\n        }\n        else\n        {\n            if (ndoth > 0.0)\n            {\n                contrib += specAtt * material_specular * lightSpecular;\n            }\n        }\n        contrib *= att * spot;\n        lightingResult += contrib;\n    }\n\n    return lightingResult;\n}\n\nbool doAlphaTest(vec4 currentFragment)\n{\n    bool shouldPassAlpha = false;\n    float incAlpha       = currentFragment.a;\n\n    switch (alpha_func)\n    {\n        case kNever:\n            shouldPassAlpha = false;\n            break;\n        case kLess:\n            shouldPassAlpha = incAlpha < alpha_test_ref;\n            break;\n        case kLequal:\n            shouldPassAlpha = incAlpha <= alpha_test_ref;\n            break;\n        case kEqual:\n            shouldPassAlpha = incAlpha == alpha_test_ref;\n            break;\n        case kGequal:\n            shouldPassAlpha = incAlpha >= alpha_test_ref;\n            break;\n        case kGreater:\n            shouldPassAlpha = incAlpha > alpha_test_ref;\n            break;\n        case kNotequal:\n            shouldPassAlpha = incAlpha != alpha_test_ref;\n            break;\n        case kAlways:\n        default:\n            shouldPassAlpha = true;\n            break;\n    }\n\n    return shouldPassAlpha;\n}\n\nbool doClipPlaneTest()\n{\n    bool res = true;\n\n    for (int i = 0; i < kMaxClipPlanes; i++)\n    {\n        if (clip_plane_enables[i])\n        {\n            float dist = dot(clip_planes[i].xyz, pos_varying.xyz) + clip_planes[i].w * pos_varying.w;\n            res        = res && (dist >= 0.0);\n        }\n    }\n\n    return res;\n}\n\nvec4 doFog(vec4 currentFragment)\n{\n\n    float eyeDist = -pos_varying.z / pos_varying.w;\n    float f       = 1.0;\n    switch (fog_mode)\n    {\n        case kExp:\n            f = exp(-fog_density * eyeDist);\n            break;\n        case kExp2:\n            f = exp(-(pow(fog_density * eyeDist, 2.0)));\n            break;\n        case kLinear:\n            f = (fog_end - eyeDist) / (fog_end - fog_start);\n            break;\n        default:\n            break;\n    }\n\n    vec4 result = f * currentFragment + (1.0 - f) * fog_color;\n    return result;\n}\n\n
\n\nbool isTextureUnitEnabled(int unit)\n{\n    return enable_texture_2d[unit] || enable_texture_cube_map[unit];\n}\n\nvec4 getTextureColor(int unit)\n{\n    vec4 res;\n\n    switch (unit)\n    {\n        case 0:\n            if (enable_texture_2d[0])\n            {\n                res = texture(tex_sampler0, texcoord0_varying.xy);\n            }\n            else if (enable_texture_cube_map[0])\n            {\n                res = texture(tex_cube_sampler0, texcoord0_varying.xyz);\n            }\n            break;\n        case 1:\n            if (enable_texture_2d[1])\n            {\n                res = texture(tex_sampler1, texcoord1_varying.xy);\n            }\n            else if (enable_texture_cube_map[1])\n            {\n                res = texture(tex_cube_sampler1, texcoord1_varying.xyz);\n            }\n            break;\n        case 2:\n            if (enable_texture_2d[2])\n            {\n                res = texture(tex_sampler2, texcoord2_varying.xy);\n            }\n            else if (enable_texture_cube_map[2])\n            {\n                res = texture(tex_cube_sampler2, texcoord2_varying.xyz);\n            }\n            break;\n        case 3:\n            if (enable_texture_2d[3])\n            {\n                res = texture(tex_sampler3, texcoord3_varying.xy);\n            }\n            else if (enable_texture_cube_map[3])\n            {\n                // TODO: Weird stuff happens\n                // res = texture(tex_cube_sampler3, texcoord3_varying.xyz);\n            }\n            break;\n        default:\n            break;\n    }\n\n    return res;\n}\n\nvec4 getPointSpriteTextureColor(int unit)\n{\n    vec4 res;\n\n    switch (unit)\n    {\n        case 0:\n            if (enable_texture_2d[0])\n            {\n                res = texture(tex_sampler0, gl_PointCoord.xy);\n            }\n            break;\n        case 1:\n            if (enable_texture_2d[1])\n            {\n                res = texture(tex_sampler1, gl_PointCoord.xy);\n            }\n            break;\n        case 2:\n            if (enable_texture_2d[2])\n            {\n                res = texture(tex_sampler2, gl_PointCoord.xy);\n            }\n            break;\n        case 3:\n            if (enable_texture_2d[3])\n            {\n                res = texture(tex_sampler3, gl_PointCoord.xy);\n            }\n            break;\n        default:\n            break;\n    }\n\n    return res;\n}\n\nvec3 textureCombineSrcnOpnRgb(int srcnRgb,\n                              int opnRgb,\n                              vec4 textureEnvColor,\n                              vec4 vertexColor,\n                              vec4 texturePrevColor,\n                              vec4 textureColor)\n{\n    vec3 res;\n    vec4 op;\n\n    switch (srcnRgb)\n    {\n        case kTexture:\n            op = textureColor;\n            break;\n        case kConstant:\n            op = textureEnvColor;\n            break;\n        case kPrimaryColor:\n            op = vertexColor;\n            break;\n        case kPrevious:\n            op = texturePrevColor;\n            break;\n        default:\n            op = texturePrevColor;\n            break;\n    }\n\n    switch (opnRgb)\n    {\n        case kSrcColor:\n            res = op.rgb;\n            break;\n        case kOneMinusSrcColor:\n            res = 1.0 - op.rgb;\n            break;\n        case kSrcAlpha:\n            res = vec3(op.a, op.a, op.a);\n            break;\n        case kOneMinusSrcAlpha:\n            res = vec3(1.0 - op.a, 1.0 - op.a, 1.0 - op.a);\n            break;\n        default:\n            break;\n    }\n\n    return res;\n}\n\nfloat textureCombineSrcnOpnAlpha(int srcn,\n                                 int opn,\n                                 vec4 textureEnvColor,\n                                 vec4 vertexColor,\n                                 vec4 texturePrevColor,\n                                 vec4 textureColor)\n{\n    float res;\n    vec4 op;\n\n    switch (srcn)\n    {\n        case kTexture:\n            op = textureColor;\n            break;\n        case kConstant:\n            op = textureEnvColor;\n            break;\n        case kPrimaryColor:\n            op = vertexColor;\n            break;\n        case kPrevious:\n            op = texturePrevColor;\n            break;\n        default:\n            op = texturePrevColor;\n            break;\n    }\n\n    switch (opn)\n    {\n        case kSrcAlpha:\n            res = op.a;\n            break;\n        case kOneMinusSrcAlpha:\n            res = 1.0 - op.a;\n            break;\n        default:\n            break;\n    }\n\n    return res;\n}\n\nvec4 textureCombine(int combineRgb,\n                    int combineAlpha,\n                    int src0Rgb,\n                    int src0Alpha,\n                    int src1Rgb,\n                    int src1Alpha,\n                    int src2Rgb,\n                    int src2Alpha,\n                    int op0Rgb,\n                    int op0Alpha,\n                    int op1Rgb,\n                    int op1Alpha,\n                    int op2Rgb,\n                    int op2Alpha,\n                    vec4 textureEnvColor,\n                    float rgbScale,\n                    float alphaScale,\n                    vec4 vertexColor,\n                    vec4 texturePrevColor,\n                    vec4 textureColor)\n{\n\n    vec3 resRgb;\n    float resAlpha;\n\n    vec3 arg0Rgb;\n    float arg0Alpha;\n    vec3 arg1Rgb;\n    float arg1Alpha;\n    vec3 arg2Rgb;\n    float arg2Alpha;\n    float dotVal;\n\n    arg0Rgb   = textureCombineSrcnOpnRgb(src0Rgb, op0Rgb, textureEnvColor, vertexColor,\n                                       texturePrevColor, textureColor);\n    arg0Alpha = textureCombineSrcnOpnAlpha(src0Alpha, op0Alpha, textureEnvColor, vertexColor,\n                                           texturePrevColor, textureColor);\n\n    if (combineRgb != kReplace)\n    {\n        arg1Rgb = textureCombineSrcnOpnRgb(src1Rgb, op1Rgb, textureEnvColor, vertexColor,\n                                           texturePrevColor, textureColor);\n    }\n\n    if (combineAlpha != kReplace)\n    {\n        arg1Alpha = textureCombineSrcnOpnAlpha(src1Alpha, op1Alpha, textureEnvColor, vertexColor,\n                                               texturePrevColor, textureColor);\n    }\n\n    if (combineRgb == kInterpolate)\n    {\n        arg2Rgb = textureCombineSrcnOpnRgb(src2Rgb, op2Rgb, textureEnvColor, vertexColor,\n                                           texturePrevColor, textureColor);\n    }\n\n    if (combineAlpha == kInterpolate)\n    {\n        arg2Alpha = textureCombineSrcnOpnAlpha(src2Alpha, op2Alpha, textureEnvColor, vertexColor,\n                                               texturePrevColor, textureColor);\n    }\n\n    switch (combineRgb)\n    {\n        case kReplace:\n            resRgb = arg0Rgb;\n            break;\n        case kModulate:\n            resRgb = arg0Rgb * arg1Rgb;\n            break;\n        case kAdd:\n            resRgb = arg0Rgb + arg1Rgb;\n            break;\n        case kAddSigned:\n            resRgb = arg0Rgb + arg1Rgb - 0.5;\n            break;\n        case kInterpolate:\n            resRgb = arg0Rgb * arg2Rgb + arg1Rgb * (1.0 - arg2Rgb);\n            break;\n        case kSubtract:\n            resRgb = arg0Rgb - arg1Rgb;\n            break;\n        default:\n            break;\n    }\n\n    switch (combineAlpha)\n    {\n        case kReplace:\n            resAlpha = arg0Alpha;\n            break;\n        case kModulate:\n            resAlpha = arg0Alpha * arg1Alpha;\n            break;\n        case kAdd:\n            resAlpha = arg0Alpha + arg1Alpha;\n            break;\n        case kAddSigned:\n            resAlpha = arg0Alpha + arg1Alpha - 0.5;\n            break;\n        case kInterpolate:\n            resAlpha = arg0Alpha * arg2Alpha + arg1Alpha * (1.0 - arg2Alpha);\n            break;\n        case kSubtract:\n            resAlpha = arg0Alpha - arg1Alpha;\n            break;\n        default:\n            break;\n    }\n\n    if (combineRgb == kDot3Rgb || combineRgb == kDot3Rgba)\n    {\n        dotVal = 4.0 * dot(arg0Rgb - 0.5, arg1Rgb - 0.5);\n\n        if (combineRgb == kDot3Rgb)\n        {\n            return vec4(dotVal, dotVal, dotVal, resAlpha);\n        }\n        else\n        {\n            return vec4(dotVal, dotVal, dotVal, dotVal);\n        }\n    }\n    else\n    {\n        return vec4(resRgb, resAlpha);\n    }\n}\n\nvec4 textureFunction(int unit,\n                     int texFormat,\n                     int envMode,\n                     int combineRgb,\n                     int combineAlpha,\n                     int src0Rgb,\n                     int src0Alpha,\n                     int src1Rgb,\n                     int src1Alpha,\n                     int src2Rgb,\n                     int src2Alpha,\n                     int op0Rgb,\n                     int op0Alpha,\n                     int op1Rgb,\n                     int op1Alpha,\n                     int op2Rgb,\n                     int op2Alpha,\n                     vec4 textureEnvColor,\n                     float rgbScale,\n                     float alphaScale,\n                     vec4 vertexColor,\n                     vec4 texturePrevColor,\n                     vec4 textureColor)\n{\n\n    if (!isTextureUnitEnabled(unit))\n    {\n        return texturePrevColor;\n    }\n\n    vec4 res;\n\n    switch (envMode)\n    {\n        case kReplace:\n            switch (texFormat)\n            {\n                case kAlpha:\n                    res.rgb = texturePrevColor.rgb;\n                    res.a   = textureColor.a;\n                    break;\n                case kRGBA:\n                case kLuminanceAlpha:\n                    res.rgba = textureColor.rgba;\n                    break;\n                case kRGB:\n                case kLuminance:\n                default:\n                    res.rgb = textureColor.rgb;\n                    res.a   = texturePrevColor.a;\n                    break;\n            }\n            break;\n        case kModulate:\n            switch (texFormat)\n            {\n                case kAlpha:\n                    res.rgb = texturePrevColor.rgb;\n                    res.a   = texturePrevColor.a * textureColor.a;\n                    break;\n                case kRGBA:\n                case kLuminanceAlpha:\n                    res.rgba = texturePrevColor.rgba * textureColor.rgba;\n                    break;\n                case kRGB:\n                case kLuminance:\n                default:\n                    res.rgb = texturePrevColor.rgb * textureColor.rgb;\n                    res.a   = texturePrevColor.a;\n                    break;\n            }\n            break;\n        case kDecal:\n            switch (texFormat)\n            {\n                case kRGB:\n                    res.rgb = textureColor.rgb;\n                    res.a   = texturePrevColor.a;\n                    break;\n                case kRGBA:\n                    res.rgb = texturePrevColor.rgb * (1.0 - textureColor.a) +\n                              textureColor.rgb * textureColor.a;\n                    res.a = texturePrevColor.a;\n                    break;\n                case kAlpha:\n                case kLuminance:\n                case kLuminanceAlpha:\n                default:\n                    res.rgb = texturePrevColor.rgb * textureColor.rgb;\n                    res.a   = texturePrevColor.a;\n                    break;\n            }\n            break;\n        case kBlend:\n            switch (texFormat)\n            {\n                case kAlpha:\n                    res.rgb = texturePrevColor.rgb;\n                    res.a   = textureColor.a * texturePrevColor.a;\n                    break;\n                case kLuminance:\n                case kRGB:\n                    res.rgb = texturePrevColor.rgb * (1.0 - textureColor.rgb) +\n                              textureEnvColor.rgb * textureColor.rgb;\n                    res.a = texturePrevColor.a;\n                    break;\n                case kLuminanceAlpha:\n                case kRGBA:\n                default:\n                    res.rgb = texturePrevColor.rgb * (1.0 - textureColor.rgb) +\n                              textureEnvColor.rgb * textureColor.rgb;\n                    res.a = textureColor.a * texturePrevColor.a;\n                    break;\n            }\n            break;\n        case kAdd:\n            switch (texFormat)\n            {\n                case kAlpha:\n                    res.rgb = texturePrevColor.rgb;\n                    res.a   = textureColor.a * texturePrevColor.a;\n                    break;\n                case kLuminance:\n                case kRGB:\n                    res.rgb = texturePrevColor.rgb + textureColor.rgb;\n                    res.a   = texturePrevColor.a;\n                    break;\n                case kLuminanceAlpha:\n                case kRGBA:\n                default:\n                    res.rgb = texturePrevColor.rgb + textureColor.rgb;\n                    res.a   = textureColor.a * texturePrevColor.a;\n                    break;\n            }\n            break;\n        case kCombine:\n            res = textureCombine(combineRgb, combineAlpha, src0Rgb, src0Alpha, src1Rgb, src1Alpha,\n                                 src2Rgb, src2Alpha, op0Rgb, op0Alpha, op1Rgb, op1Alpha, op2Rgb,\n                                 op2Alpha, textureEnvColor, rgbScale, alphaScale, vertexColor,\n                                 texturePrevColor, textureColor);\n            res.rgb *= rgbScale;\n            res.a *= alphaScale;\n            break;\n        default:\n            break;\n    }\n\n    return clamp(res, 0.0, 1.0);\n}\n
\nvoid main()\n{\n    if (enable_clip_planes && !enable_draw_texture)\n    {\n        if (!doClipPlaneTest())\n        {\n            discard;\n        }\n    }\n\n    vec4 currentFragment;\n    vec4 vertex_color;\n\n    if (shade_model_flat)\n    {\n        vertex_color = color_varying_flat;\n    }\n    else\n    {\n        vertex_color = color_varying;\n    }\n\n    currentFragment = vertex_color;\n\n    vec4 texturePrevColor = currentFragment;\n\n    for (int i = 0; i < kMaxTexUnits; i++)\n    {\n        vec4 textureColor;\n\n        if (point_rasterization && point_sprite_enabled &&\n            point_sprite_coord_replace[i]) {\n            textureColor = getPointSpriteTextureColor(i);\n        } else {\n            textureColor = getTextureColor(i);\n        }\n\n        currentFragment = textureFunction(\n            i, texture_format[i], texture_env_mode[i], combine_rgb[i], combine_alpha[i],\n            src0_rgb[i], src0_alpha[i], src1_rgb[i], src1_alpha[i], src2_rgb[i], src2_alpha[i],\n            op0_rgb[i], op0_alpha[i], op1_rgb[i], op1_alpha[i], op2_rgb[i], op2_alpha[i],\n            texture_env_color[i], texture_env_rgb_scale[i], texture_env_alpha_scale[i],\n            vertex_color, texturePrevColor, textureColor);\n\n        texturePrevColor = currentFragment;\n    }\n\n    if (enable_lighting)\n    {\n        currentFragment = doLighting(currentFragment);\n    }\n\n    if (enable_fog)\n    {\n        currentFragment = doFog(currentFragment);\n    }\n\n    if (enable_alpha_test && !doAlphaTest(currentFragment))\n    {\n        discard;\n    }\n\n    frag_color = currentFragment;\n}\n
normal
color
pointsize
texcoord
projection
modelview
texture_matrix
modelview_invtr
tex_sampler
tex_cube_sampler
enable_texture_2d
enable_texture_cube_map
texture_format
texture_env_mode
combine_rgb
combine_alpha
src0_rgb
src0_alpha
src1_rgb
src1_alpha
src2_rgb
src2_alpha
op0_rgb
op0_alpha
op1_rgb
op1_alpha
op2_rgb
op2_alpha
texture_env_color
texture_env_rgb_scale
texture_env_alpha_scale
point_sprite_coord_replace
enable_alpha_test
alpha_func
alpha_test_ref
shade_model_flat
enable_lighting
enable_rescale_normal
enable_normalize
enable_color_material
material_ambient
material_diffuse
material_specular
material_emissive
material_specular_exponent
light_model_scene_ambient
light_model_two_sided
light_enables
light_ambients
light_diffuses
light_speculars
light_positions
light_directions
light_spotlight_exponents
light_spotlight_cutoff_angles
light_attenuation_consts
light_attenuation_linears
light_attenuation_quadratics
enable_fog
fog_mode
fog_density
fog_start
fog_end
fog_color
enable_clip_planes
clip_plane_enables
clip_planes
point_rasterization
point_size_min
point_size_max
point_distance_attenuation
point_sprite_enabled
enable_draw_texture
draw_texture_coords
draw_texture_dims
draw_texture_normalized_crop_rect
Failed to allocate path handle range.
Failed to allocate path objects.
OC:\fakepath
s of 
' member '
' differ between 
 and 
 shaders.
GPU.ANGLE.ProgramCache.ProgramCacheHitTimeUS
The sum of the number of active image uniforms, active shader storage blocks and active fragment shader outputs exceeds MAX_COMBINED_SHADER_OUTPUT_RESOURCES (
Invalid program binary format.
Program has not been successfully linked.
Samplers of conflicting types refer to the same texture image unit (
Both compute and graphics shaders are attached to the same program.
Attached compute shader is not compiled.
Work group size is not specified.
No compiled fragment shader when at least one graphics shader is attached.
No compiled vertex shader when at least one graphics shader is attached.
Fragment shader version does not match vertex shader version.
The attached geometry shader isn't compiled.
Geometry shader version does not match vertex shader version.
Input primitive type is not specified in the geometry shader.
Output primitive type is not specified in the geometry shader.
'max_vertices' is not specified in the geometry shader.
varying
 varying 
 does not match any 
 varying
Binding for fragment input 
 conflicts with 
Too many vertex attributes.
Attribute (
) at location 
 is too big to fit
Attribute '
' aliases attribute '
' at location 
Too many attributes (
The sum of the number of active uniform blocks exceeds MAX_COMBINED_UNIFORM_BLOCKS (
The sum of the number of active shader storage blocks exceeds MAX_COMBINED_SHADER_STORAGE_BLOCKS (
gl_Position
gl_PointSize
gl_FragCoord
gl_PointCoord
gl_FragCoord can only be declared invariant if and only if gl_Position is declared invariant.
gl_PointCoord can only be declared invariant if and only if gl_PointSize is declared invariant.
Capture of array elements is undefined and not supported.
Two transform feedback varyings include the same array element (
Two transform feedback varyings specify the same output variable (
Transform feedback varying 
 does not exist in the vertex shader.
Struct cannot be captured directly (
Capture of arrays is undefined and not supported.
Cannot capture outbound array element '
Varying '
' is not an array to be captured by element.
 components (
) exceed the maximum separate components (
Transform feedback varying total components (
) exceed the maximum interleaved components (
Name conflicts between a uniform and an attribute: 
gl_FragColor
gl_FragData
Location of variable 
 conflicts with another variable.
Could not fit output variable into available locations: 
Type
Array size
Precision
Structure name
Field number
Field name
Interpolation type
Invariance
Binding layout qualifier
Location layout qualifier
Offset layout qualilfier
Layout qualifier
Matrix Packing
 shader 
 count exceeds 
uniform block
shader storage block
GL_MAX_
UNIFORM_BUFFERS
SHADER_STORAGE_BLOCKS
_EXT
invalid vector<T> subscript
~Compiler
InitializeConditionVariable
SleepConditionVariableCS
WakeAllConditionVariable
future
broken promise
future already retrieved
promise already satisfied
no state
Fail to schedule the chore!
bufferData
../../third_party/angle/src/libANGLE/Buffer.cpp
Failed to allocate host memory
vector<bool> too long
VERTEX
FRAGMENT
COMPUTE
GEOMETRY
resolveCompile
Integer overflow when computing the product of local_size_x, 
local_size_y and local_size_z.
The total number of invocations within a work group exceeds 
MAX_COMPUTE_WORK_GROUP_INVOCATIONS.
@Invalid D3D device passed into EGLDeviceEXT
GPU.ANGLE.D3D11InitializeResult
GPU.ANGLE.D3D9InitializeResult
No available renderers.
Internal D3D11 error: 
VK_KHR_win32_surface
opengl32.dll
Failed to load OpenGL library.
ANGLE DisplayWGL 
 Intermediate Window Class
Failed to register intermediate OpenGL window class "
ANGLE Dummy Window
Failed to create dummy OpenGL window.
Failed to get the device context of the dummy OpenGL window.
Could not find a compatible pixel format for the dummy OpenGL window.
Failed to set the pixel format on the intermediate OpenGL window.
Failed to make the dummy WGL context current.
WGL_ARB_create_context_robustness
WGL_EXT_create_context_es2_profile
WGL_EXT_create_context_es_profile
Cannot create an OpenGL ES platform on Windows without the WGL_EXT_create_context_es(2)_profile extension.
ANGLE Intermediate Window
Failed to create intermediate OpenGL window.
Failed to get the device context of the intermediate OpenGL window.
Could not find a compatible pixel format for the intermediate OpenGL window.
initializeImpl
WGL_ARB_create_context_robustness exists but unable to OpenGL context with robustness.
Intel OpenGL ES drivers are not supported.
WGL_NV_DX_interop2
WGL_NV_DX_interop2 is required but not present.
OpenGL ES 2.0 is not supportable.
destroy
Failed to unregister OpenGL window class: 
Failed to load DXGI library.
Failed to load d3d11 library.
D3D11CreateDevice
Could not retrieve D3D11CreateDevice address.
Could not create D3D11 device, 
Failed to make the WGL context current.
Failed to open D3D device.
Failed to create a WGL context for the intermediate OpenGL window.
Failed to make the intermediate WGL context current.
NULL
populate
Failed to store binary blob in memory cache, blob is too large.
Failed to allocate memory for binary blob
Binary blob no longer available in cache (removed by a thread?)
GPU.ANGLE.ProgramCache.CacheResult
f2ed299569c0
Invalid program binary version.
Cannot load program binaries across different ES context versions.
Current driver does not support transform feedback in binary programs.
Serialize
Saving program binary with transform feedback, which is not supported on this driver.
GPU.ANGLE.ProgramCache.LoadBinarySuccess
getProgram
Failed to load binary from cache: 
Reaching warning limit for cache load failures, silencing subsequent warnings.
GPU.ANGLE.ProgramCache.ProgramBinarySizeBytes
DisplayImpl::validateClientBuffer unimplemented.
Invalid enum.
Invalid value.
Invalid operation.
Stack overflow.
Stack underflow.
Out of memory.
Invalid framebuffer operation.
Unknown error.
Not initialized.
Bad access.
Bad allocation.
Bad attribute.
Bad config.
Bad context.
Bad current surface.
Bad display.
Bad match.
Bad native window.
Bad parameter.
Bad surface.
Context lost.
Bad stream.
Bad state.
Bad device.
 A \f\n\r\t\v
0123456789ABCDEFabcdef-+Xx
0123456789-+Ee
0123456789ABCDEFabcdef-+XxPp
bad array new length
FlsAlloc
FlsFree
FlsGetValue
FlsSetValue
InitializeCriticalSectionEx
InitOnceExecuteOnce
CreateEventExW
CreateSemaphoreW
CreateSemaphoreExW
CreateThreadpoolTimer
SetThreadpoolTimer
WaitForThreadpoolTimerCallbacks
CloseThreadpoolTimer
CreateThreadpoolWait
SetThreadpoolWait
CloseThreadpoolWait
FlushProcessWriteBuffers
FreeLibraryWhenCallbackReturns
GetCurrentProcessorNumber
CreateSymbolicLinkW
GetCurrentPackageId
GetTickCount64
GetFileInformationByHandleEx
SetFileInformationByHandle
GetSystemTimePreciseAsFileTime
WakeConditionVariable
InitializeSRWLock
AcquireSRWLockExclusive
TryAcquireSRWLockExclusive
ReleaseSRWLockExclusive
SleepConditionVariableSRW
CreateThreadpoolWork
SubmitThreadpoolWork
CloseThreadpoolWork
CompareStringEx
GetLocaleInfoEx
LCMapStringEx
Could not pack varying 
Note: Additional non-conformant packing restrictions are enforced on D3D9.
Multiple uniforms bound to location 
atomic counter count exceeds MAX_COMBINED_ATOMIC_COUNTERS
uniform
s count exceeds 
texture image unit
image uniform
atomic counter
MAX_TEXTURE_IMAGE_UNITS
MAX_
UNIFORM_VECTORS
UNIFORM_COMPONENTS
TEXTURE_IMAGE_UNITS
IMAGE_UNIFORMS
ATOMIC_COUNTERS
bad exception
Renderer11::initialize (DXGICheck)
DXGI 1.2 required to present to HWNDs owned by another process.
Renderer11::initialize (ComQueries)
LCould not query DXGI device.
Could not retrieve DXGI adapter
Could not read DXGI adaptor description.
iCould not create DXGI factory.
Renderer11::initialize (HideWarnings)
Renderer11::initialize (Load DLLs)
Could not load D3D11 or DXGI library.
D3D11CreateDevice (Debug)
initializeD3DDevice
Failed creating Debug D3D11 device - falling back to release runtime.
GPU.ANGLE.D3D11CreateDeviceError
Could not create D3D11 device.
Inputted D3D11 device has been lost.
Inputted D3D11 device must be Feature Level 9_3 or greater.
DeviceContext
Renderer11::initializeDevice
GPU.ANGLE.SupportsDXGI1_2
GPU.ANGLE.D3D11FeatureLevel
populateRenderer11DeviceCaps
Error querying driver version from DXGI Adapter.
finish
../../third_party/angle/src/libANGLE/renderer/d3d/d3d11/Renderer11.cpp
Failed to get event query data
Device was lost while waiting for sync.
client buffer is not a ID3D11Texture2D
Texture's device does not match.
Texture's sample count does not match.
Unknown client buffer texture format: 
NULL share handle.
-Failed to open share handle, 
Failed to query ID3D11Texture2D object from share handle.
Invalid texture parameters in share handle texture.
drawLineLoop
Failed to create a 32-bit looping index buffer for GL_LINE_LOOP, too many indices required.
drawTriangleFan
Failed to create a scratch index buffer for GL_TRIANGLE_FAN, too many indices required.
testDeviceLost
The D3D11 device was removed, 
resetDevice
Could not reinitialize D3D11 device: 
 Direct3D11
 vs_
 ps_
_level_9_3
createRenderTarget.Texture
createRenderTarget.SRV
createRenderTarget.BlitSRV
createRenderTarget.DSV
createRenderTarget.RTV
?loadExecutable
Unreachble code reached.
compileToExecutable
default
skip validation
skip optimization
avoid flow control
ANGLE_ENABLE_LOOP_FLATTEN
readFromAttachment::stagingHelper
readFromAttachment::resolvedTextureHelper
GPU.ANGLE.Buffer11CPUMemoryMB
getVertexSpaceRequired
New vertex buffer size would result in an overflow.
getScratchMemoryBuffer
mapResource
Failed to map D3D11 resource.
GPU.ANGLE.Renderer11InitializeDLLsMS
GPU.ANGLE.D3D11CreateDeviceMS
GPU.ANGLE.Renderer11InitializeDeviceMS
GetModuleHandle_d3d9
No D3D9 module found.
Direct3DCreate9Ex
D3d9Ex_QueryInterface
'\Direct3DCreate9
Could not create D3D9 device.
GetDeviceCaps
Failed to get device caps, 
Renderer does not support PS 
.0, aborting!
Renderer does not support StretctRect from textures.
GetAdapterIdentifier
CreateWindowEx
D3d9_CreateDevice
CreateDevice failed: device lost of out of memory
D3d9_CreateDevice2
CreateDevice2 failed: device lost, not available, or of out of memory
mDevice_QueryInterface
I&Z@
1:ShaderCache initialize
flush
../../third_party/angle/src/libANGLE/renderer/d3d/d3d9/Renderer9.cpp
Failed to issue event query
Client buffer is not a IDirect3DTexture9
allocateEventQuery
Failed to allocate event query
fastCopyBufferToTexture
Failed to create a 16-bit looping index buffer for GL_LINE_LOOP, too many indices required.
getCountingIB
Could not create a counting index buffer for glDrawArraysInstanced.
Reset/ResetEx failed multiple times, 
Device lost reset failed multiple times
 Direct3D9Ex
 Direct3D9
copyImage3D
copyImage2DArray
copyCompressedTexture
createRenderTarget
Failed to create render target
createRenderTargetCopy
Failed to copy render target
prefer flow control
copyToRenderTarget
Failed to blit internal texture
generateMipmapUsingD3D
create
../../third_party/angle/src\libANGLE/renderer/d3d/d3d9/ShaderCache.h
Failed to create shader
EGL_GL_COLORSPACE may only be specified for TYPELESS textures
Could not retrieve the window dimensions
skipDraw
Point rendering without writing to gl_PointSize.
(adapter LUID: %08x%08x)
Internal Vulkan error: 
, line 
../../third_party/angle/src/libANGLE/renderer/vulkan/win32/WindowSurfaceVkWin32.cpp
wglGetProcAddress
wglCopyContext
wglCreateContext
wglCreateLayerContext
wglDeleteContext
wglGetCurrentContext
wglGetCurrentDC
wglMakeCurrent
wglShareLists
wglUseFontBitmapsA
wglUseFontBitmapsW
wglUseFontOutlinesA
wglUseFontOutlinesW
wglDescribeLayerPlane
wglSetLayerPaletteEntries
wglGetLayerPaletteEntries
wglRealizeLayerPalette
wglSwapLayerBuffers
wglSwapMultipleBuffers
wglGetExtensionsStringEXT
wglGetExtensionsStringARB
wglCreateContextAttribsARB
WGL_ARB_create_context
wglGetPixelFormatAttribivARB
WGL_ARB_pixel_format
wglGetPixelFormatAttribfvARB
wglChoosePixelFormatARB
wglSwapIntervalEXT
WGL_EXT_swap_control
wglCreatePbufferARB
WGL_ARB_pbuffer
wglGetPbufferDCARB
wglReleasePbufferDCARB
wglDestroyPbufferARB
wglQueryPbufferARB
wglBindTexImageARB
WGL_ARB_render_texture
wglReleaseTexImageARB
wglSetPbufferAttribARB
wglDXSetResourceShareHandleNV
WGL_NV_DX_interop
wglDXOpenDeviceNV
wglDXCloseDeviceNV
wglDXRegisterObjectNV
wglDXUnregisterObjectNV
wglDXObjectAccessNV
wglDXLockObjectsNV
wglDXUnlockObjectsNV
Intel
NVIDIA
Qualcomm
GL_ARB_ES3_compatibility
GL_OES_texture_3D
GL_EXT_texture_array
GL_EXT_texture_lod_bias
GL_EXT_framebuffer_object
ARB_draw_buffers
GL_ARB_get_program_binary
GL_ARB_ES2_compatibility
GL_ARB_sync
GL_ARB_uniform_buffer_object
GL_ARB_transform_feedback2
GL_EXT_framebuffer_multisample
GL_EXT_multisampled_render_to_texture
GL_ARB_sampler_objects
GL_ARB_texture_swizzle
GL_EXT_texture_swizzle
GL_ARB_shader_bit_encoding
GL_ARB_shading_language_packing
GL_ARB_explicit_attrib_location
GL_ARB_framebuffer_no_attachments
GL_ARB_texture_multisample
GL_ARB_vertex_attrib_binding
GL_ARB_shader_storage_buffer_object
GL_ARB_compute_shader
GL_ARB_explicit_uniform_location
GL_ARB_texture_gather
GL_ARB_shader_image_load_store
GL_ARB_shader_atomic_counters
GL_EXT_bgra
GL_ARB_map_buffer_range
GL_ARB_fragment_shader
GL_ARB_shader_texture_lod
GL_NV_viewport_array2
GL_ARB_instanced_arrays
GL_ARB_draw_instanced
GL_EXT_draw_instanced
GL_EXT_instanced_arrays
GL_ARB_vertex_array_object
GL_ARB_timer_query
GL_NV_framebuffer_mixed_samples
GL_KHR_robustness
GL_ARB_robustness
GL_ARB_robust_buffer_access_behavior
GL_NV_path_rendering
GL_ARB_program_interface_query
GL_EXT_framebuffer_sRGB
GL_ARB_framebuffer_sRGB
GL_ARB_invalidate_subdata
GL_ARB_texture_rectangle
GL_OES_geometry_shader
GL_ARB_blend_func_extended
GL_ARB_occlusion_query2
GL_ARB_internalformat_query2
ShouldApplyLastRowPaddingWorkaround
../../third_party/angle/src/libANGLE/renderer/gl/renderergl_utils.cpp
 OpenGL
 compatibility
 core
OpenGL
Windows
Shader Compiler
Third Party
Application
Other
UNKNOWN
Error
Deprecated behavior
Undefined behavior
Portability
Performance
Marker
High
Medium
Notification
LogGLDebugMessage
\tSource: 
\tType: 
\tID: 
\tSeverity: 
\tMessage: 
GL_ARB_internalformat_query
glGetInternalformati64v
GL_NV_internalformat_sample_query
glGetInternalformatSampleivNV
OpenGL ES
DXGISwapChainWindowSurfaceWGL requires an orientation of EGL_SURFACE_ORIENTATION_INVERT_Y_ANGLE.
Failed to query the window size.
Failed to present swap chain, 
Failed to query texture from swap chain, 
Failed to register D3D object, 
Failed to lock D3D object, 
Failed to unlock D3D object, 
Failed to unregister D3D object, 
Failed to lock object, 
Failed to query the DXGIFactory.
Failed to create swap chain for window, 
Failed to get the device context from the native window, 
Failed to DescribePixelFormat, 
Failed to set the pixel format on the device context, 
Pixel format of the NativeWindow and NativeDisplayType must match.
Failed to swap buffers on the child window.
Failed to create a native WGL pbuffer, 
Failed to query the WGL pbuffer's dimensions, 
Failed to get the WGL pbuffer handle, 
Failed to bind native wgl pbuffer, 
Failed to unbind native wgl pbuffer, 
Failed to unlock object, 
Provided buffer is not a IDirect3DTexture9 or ID3D11Texture2D.
Unknown buftype for D3DTextureSurfaceWGL.
Could not query the D3D11 device from the client buffer.
Could not query description of the D3D9 surface.
Could not query the D3D9 device from the client buffer.
Internal OpenGL error: 
0123456789abcdefghijklmnopqrstuvwxyz
\r\r\r\r\r\r
0123456789abcdefghijklmnopqrstuvwxyz
\r\f\v\v\n\n\t\t\t\t\t
Ga==\n
.M;vT
unsupported shader version
Compute shader is not supported in this shader version.
Geometry shader is not supported in this shader version.
Precision emulation not supported for this output type.
too many uniforms
:MaxVertexAttribs:
:MaxVertexUniformVectors:
:MaxVaryingVectors:
:MaxVertexTextureImageUnits:
:MaxCombinedTextureImageUnits:
:MaxTextureImageUnits:
:MaxFragmentUniformVectors:
:MaxDrawBuffers:
:OES_standard_derivatives:
:OES_EGL_image_external:
:OES_EGL_image_external_essl3:
:NV_EGL_stream_consumer_external:
:ARB_texture_rectangle:
:EXT_draw_buffers:
:FragmentPrecisionHigh:
:MaxExpressionComplexity:
:MaxCallStackDepth:
:MaxFunctionParameters:
:EXT_blend_func_extended:
:EXT_frag_depth:
:EXT_shader_texture_lod:
:EXT_shader_framebuffer_fetch:
:NV_shader_framebuffer_fetch:
:ARM_shader_framebuffer_fetch:
:OVR_multiview:
:EXT_YUV_target:
:EXT_geometry_shader:
:MaxVertexOutputVectors:
:MaxFragmentInputVectors:
:MinProgramTexelOffset:
:MaxProgramTexelOffset:
:MaxDualSourceDrawBuffers:
:MaxViewsOVR:
:NV_draw_buffers:
:WEBGL_debug_shader_precision:
:MinProgramTextureGatherOffset:
:MaxProgramTextureGatherOffset:
:MaxImageUnits:
:MaxVertexImageUniforms:
:MaxFragmentImageUniforms:
:MaxComputeImageUniforms:
:MaxCombinedImageUniforms:
:MaxCombinedShaderOutputResources:
:MaxComputeWorkGroupCountX:
:MaxComputeWorkGroupCountY:
:MaxComputeWorkGroupCountZ:
:MaxComputeWorkGroupSizeX:
:MaxComputeWorkGroupSizeY:
:MaxComputeWorkGroupSizeZ:
:MaxComputeUniformComponents:
:MaxComputeTextureImageUnits:
:MaxComputeAtomicCounters:
:MaxComputeAtomicCounterBuffers:
:MaxVertexAtomicCounters:
:MaxFragmentAtomicCounters:
:MaxCombinedAtomicCounters:
:MaxAtomicCounterBindings:
:MaxVertexAtomicCounterBuffers:
:MaxFragmentAtomicCounterBuffers:
:MaxCombinedAtomicCounterBuffers:
:MaxAtomicCounterBufferSize:
:MaxGeometryUniformComponents:
:MaxGeometryUniformBlocks:
:MaxGeometryInputComponents:
:MaxGeometryOutputComponents:
:MaxGeometryOutputVertices:
:MaxGeometryTotalOutputComponents:
:MaxGeometryTextureImageUnits:
:MaxGeometryAtomicCounterBuffers:
:MaxGeometryAtomicCounters:
:MaxGeometryShaderStorageBlocks:
:MaxGeometryShaderInvocations:
:MaxGeometryImageUniforms:
Call stack too deep (larger than 
) with the following call chain: 
 -> 
Missing main()
Expression too complex.
Function has too many parameters.
#pragma STDGL invariant(all)\n
cannot use both gl_FragData and gl_FragColor
cannot use both output variable sets (gl_FragData, gl_SecondaryFragDataEXT) and (gl_FragColor, gl_SecondaryFragColorEXT)
HLSLCompiler::initialize
d3dcompiler_47.dll
d3dcompiler_46.dll
d3dcompiler_43.dll
ensureInitialized
D3D compiler module not found.
../../third_party/angle/src/libANGLE/renderer/d3d/HLSLCompiler.cpp
D3DCompile
D3DDisassemble
Error finding D3DCompile entry point.
#line 2 "
main
compileToBinary
error X3531:
error X4014:
\n// COMPILER INPUT HLSL END\n
// COMPILER INPUT HLSL BEGIN\n\n
HLSL compiler had an unexpected failure
Warning: D3D shader compilation failed with 
 flags. (
 Retrying with 
GPU.ANGLE.D3DCompileMS
blend state
rasterizer state
depth stencil state
sampler state
TrimCache
Overflowed the 
 cache limit of 
 elements, removing the least recently used to make room.
syncPrimitiveTopology
L>../../third_party/angle/src/libANGLE/renderer/d3d/d3d11/ResourceManager11.cpp
Error allocating BlendState
Error allocating Buffer
Error allocating ComputeShader
Error allocating DepthStencilState
Error allocating DepthStencilView
Error allocating GeometryShader
Error allocating InputLayout
Error allocating PixelShader
Error allocating Query
Error allocating RasterizerState
Error allocating RenderTargetView
Error allocating SamplerState
Error allocating ShaderResourceView
Error allocating UnorderedAccessView
Error allocating Texture2D
Error allocating Texture3D
Error allocating VertexShader
?333?
GenerateInitialTextureData
../../third_party/angle/src/libANGLE/renderer/d3d/d3d11/renderer11_utils.cpp
invalid array<T, N> subscript
Blit11 2D input layout
DXBC
Aon9
SHDR
STATt
RDEFP
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNL
POSITION
TEXCOORD
OSGNP
SV_POSITION
TEXCOORD
Blit11 2D vertex shader
Blit11 2D depth pixel shader
Blit11 3D input layout
Blit11 3D vertex shader
Blit11 3D geometry shader
Blit11 Alpha Mask Blend
Blit11::mResolveDepthStencilVS
Blit11::mResolveDepthPS
Blit11::mResolveDepthStencilPS
Blit11::mResolveStencilPS
Blit11::initResources
Blit11 vertex buffer
Blit11 point sampler
Blit11 linear sampler
Blit11 scissoring rasterizer state
Blit11 no scissoring rasterizer state
Blit11 depth stencil state
Blit11 swizzle constant buffer
copyTexture
../../third_party/angle/src/libANGLE/renderer/d3d/d3d11/Blit11.cpp
Internal error, unknown blit filter mode.
Internal blit shader type mismatch
Blit11 2D RGBA pixel shader
DXBC
Aon9d
SHDRd
STATt
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
Blit11 2D BGRA pixel shader
Blit11 2D RGB pixel shader
DXBC3Z1
Aon9
SHDR
STATt
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
Blit11 2D RG pixel shader
DXBC
Aon9
SHDR
STATt
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
Blit11 2D R pixel shader
DXBC
Aon9
SHDR
STATt
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
Blit11 2D alpha pixel shader
DXBC
Aon9
SHDR
STATt
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
Blit11 2D lum pixel shader
DXBC
Aon9
SHDR
STATt
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
Blit11 2D luminance alpha pixel shader
DXBC
Aon9p
SHDR
STATt
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
Blit11 2D RGBA UI pixel shader
Blit11 2D RGBA I pixel shader
Blit11 2D RGB UI pixel shader
Blit11 2D RGB I pixel shader
Blit11 2D RG UI pixel shader
Blit11 2D RG I pixel shader
Blit11 2D R UI pixel shader
Blit11 2D R I pixel shader
Blit11 3D RGBA pixel shader
Blit11 3D UI RGBA pixel shader
Blit11 3D I RGBA pixel shader
Blit11 3D BGRA pixel shader
Blit11 3D RGB pixel shader
Blit11 3D RGB UI pixel shader
Blit11 3D RGB I pixel shader
Blit11 3D RG pixel shader
Blit11 3D RG UI pixel shader
Blit11 3D RG I pixel shader
Blit11 3D R pixel shader
Blit11 3D R UI pixel shader
Blit11 3D R I pixel shader
Blit11 3D alpha pixel shader
Blit11 3D luminance pixel shader
Blit11 3D luminance alpha pixel shader
Blit11 2DArray RGBA pixel shader
Blit11 2DArray UI RGBA pixel shader
Blit11 2DArray I RGBA pixel shader
Blit11 2DArray BGRA pixel shader
Blit11 2DArray RGB pixel shader
Blit11 2DArray RGB UI pixel shader
Blit11 2DArray RGB I pixel shader
Blit11 2DArray RG pixel shader
Blit11 2DArray RG UI pixel shader
Blit11 2DArray RG I pixel shader
Blit11 2DArray R pixel shader
Blit11 2DArray R UI pixel shader
Blit11 2DArray R I pixel shader
Blit11 2DArray alpha pixel shader
Blit11 2DArray luminance pixel shader
Blit11 2DArray luminance alpha pixel shader
Blit11 2D RGBA premultiply pixel shader
Blit11 2D RGBA unmultiply pixel shader
Blit11 2D RGB premultiply pixel shader
Blit11 2D RGB unmultiply pixel shader
Blit11 2D RGBA to uint pixel shader
Blit11 2D RGBA to uint premultiply pixel shader
Blit11 2D RGBA to uint unmultiply pixel shader
Blit11 2D RGB to uint pixel shader
Blit11 2D RGB to uint premultiply pixel shader
Blit11 2D RGB to uint unmultiply pixel shader
Blit11 2D LUMA premultiply pixel shader
Blit11 2D LUMA unmultiply pixel shader
Blit11 2D LUMAALPHA premultiply pixel shader
Blit11 2D LUMAALPHA unmultiply pixel shader
Blit11 2D RGBA 4444 pixel shader
DXBC
8iiP
Aon9
SHDR
STATt
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
Blit11 2D RGBA 4444 premultiply pixel shader
Blit11 2D RGBA 4444 unmultiply pixel shader
Blit11 2D RGB 565 pixel shader
DXBCi
Aon9
SHDR
STATt
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
Blit11 2D RGB 565 premultiply pixel shader
Blit11 2D RGB 565 unmultiply pixel shader
Blit11 2D RGBA 5551 pixel shader
DXBC
Aon9
SHDR
STATt
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
Blit11 2D RGBA 5551 premultiply pixel shader
Blit11 2D RGBA 5551 unmultiply pixel shader
Blit11 3D RGBA premultiply pixel shader
Blit11 3D RGBA unmultiply pixel shader
Blit11 3D RGB premultiply pixel shader
Blit11 3D RGB unmultiply pixel shader
Blit11 3D RGBA to uint pixel shader
Blit11 3D RGBA to uint premultiply pixel shader
Blit11 3D RGBA to uint unmultiply pixel shader
Blit11 3D RGB to uint pixel shader
Blit11 3D RGB to uint premultiply pixel shader
Blit11 3D RGB to uint unmultiply pixel shader
Blit11 3D RGBA to int pixel shader
Blit11 3D RGBA to int premultiply pixel shader
Blit11 3D RGBA to int unmultiply pixel shader
Blit11 3D RGB to int pixel shader
Blit11 3D RGB to int premultiply pixel shader
Blit11 3D RGB to int unmultiply pixel shader
Blit11 3D LUMA premultiply pixel shader
Blit11 3D LUMA unmultiply pixel shader
Blit11 3D LUMAALPHA premultiply pixel shader
Blit11 3D LUMAALPHA unmultiply pixel shader
Blit11 3D RGBA 4444 pixel shader
Blit11 3D RGBA 4444 premultiply pixel shader
Blit11 3D RGBA 4444 unmultiply pixel shader
Blit11 3D RGB 565 pixel shader
Blit11 3D RGB 565 premultiply pixel shader
Blit11 3D RGB 565 unmultiply pixel shader
Blit11 3D RGBA 5551 pixel shader
Blit11 3D RGBA 5551 premultiply pixel shader
Blit11 3D RGBA 5551 unmultiply pixel shader
Blit11 2DArray RGBA premultiply pixel shader
Blit11 2DArray RGBA unmultiply pixel shader
Blit11 2DArray RGB premultiply pixel shader
Blit11 2DArray RGB unmultiply pixel shader
Blit11 2DArray RGBA to uint pixel shader
Blit11 2DArray RGBA to uint premultiply pixel shader
Blit11 2DArray RGBA to uint unmultiply pixel shader
Blit11 2DArray RGB to uint pixel shader
Blit11 2DArray RGB to uint premultiply pixel shader
Blit11 2DArray RGB to uint unmultiply pixel shader
Blit11 2DArray RGBA to int pixel shader
Blit11 2DArray RGBA to int premultiply pixel shader
Blit11 2DArray RGBA to int unmultiply pixel shader
Blit11 2DArray RGB to int pixel shader
Blit11 2DArray RGB to int premultiply pixel shader
Blit11 2DArray RGB to int unmultiply pixel shader
Blit11 2DArray LUMA premultiply pixel shader
Blit11 2DArray LUMA unmultiply pixel shader
Blit11 2DArray LUMAALPHA premultiply pixel shader
Blit11 2DArray LUMAALPHA unmultiply pixel shader
Blit11 2DArray RGBA 4444 pixel shader
Blit11 2DArray RGBA 4444 premultiply pixel shader
Blit11 2DArray RGBA 4444 unmultiply pixel shader
Blit11 2DArray RGB 565 pixel shader
Blit11 2DArray RGB 565 premultiply pixel shader
Blit11 2DArray RGB 565 unmultiply pixel shader
Blit11 2DArray RGBA 5551 pixel shader
Blit11 2DArray RGBA 5551 premultiply pixel shader
Blit11 2DArray RGBA 5551 unmultiply pixel shader
Swizzle shader type not found
Blit11 2D F swizzle pixel shader
Blit11 2D UI swizzle pixel shader
Blit11 2D I swizzle pixel shader
Blit11 2D Cube F swizzle pixel shader
Blit11 2D Cube UI swizzle pixel shader
Blit11 2D Cube I swizzle pixel shader
Blit11 3D F swizzle pixel shader
Blit11 3D UI swizzle pixel shader
Blit11 3D I swizzle pixel shader
Blit11 2D Array F swizzle pixel shader
Blit11 2D Array UI swizzle pixel shader
Blit11 2D Array I swizzle pixel shader
Blit11::mResolvedDepth
Blit11::mResolvedDepthDSView
Blit11::mResolvedDepthStencil
Blit11::mResolvedDepthStencilRTView
Blit11::mStencilSRV
POSITION
TEXCOORD
DXBC
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_DEPTH
SHDRx
STATt
DXBC
RDEFP
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNh
POSITION
LAYER
TEXCOORD
OSGNl
SV_POSITION
LAYER
TEXCOORD
SHDR
STATt
LAYER
DXBC\
RDEFP
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNl
SV_POSITION
LAYER
TEXCOORD
OSGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
SHDR<
STATt
DXBC
RDEFP
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN,
SV_VertexID
OSGNP
SV_Position
TEXCOORD
SHDRd
STATt
DXBCj+
RDEFt
Depth
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_Position
TEXCOORD
OSGN,
SV_Depth
SHDR
STATt
DXBC
RDEF
Depth
Stencil
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_Position
TEXCOORD
OSGN,
SV_Target
SHDR@
STATt
DXBCz
[(7v
RDEFx
Stencil
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_Position
TEXCOORD
OSGN,
SV_Target
SHDR\f
STATt
DXBC
RDEFx
TextureUI
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBCQ
zn#o
RDEFx
TextureI
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
. "J
RDEFx
TextureUI
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEFx
TextureI
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEFx
TextureUI
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
SHDR\f
STATt
DXBCY{
RDEFx
TextureI
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
SHDR\f
STATt
DXBC
>m^-|
RDEFx
TextureUI
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
SHDR\f
STATt
DXBC{
RDEFx
TextureI
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
SHDR\f
STATt
DXBC
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDRd
STATt
DXBC
RDEFx
TextureUI
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
l#[C
RDEFx
TextureI
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEFx
TextureUI
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEFx
TextureI
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBCu
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC%8+
2VL=N
RDEFx
TextureUI
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC>w=
S*P}y
RDEFx
TextureI
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC\v
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBCE
RDEFx
TextureUI
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEFx
TextureI
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
^H_Gx@
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEFx
TextureUI
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEFx
TextureI
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
.'9 
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
Z&: 
RDEFx
TextureUI
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEFx
TextureI
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBCqe)
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC?:
RDEFx
TextureUI
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR$
STATt
DXBC
9r~f
RDEFx
TextureI
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR$
STATt
DXBC
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBCafK
RDEFx
TextureUI
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR$
STATt
DXBC
RDEFx
TextureI
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR$
STATt
DXBC0
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC(H
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC+
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBCR
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC=
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC@}n
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
e\re+
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBCl
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
SHDR,
STATt
DXBCa
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
SHDR@
STATt
DXBC
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
SHDR,
STATt
DXBC
RDEF
Sampler
TextureF_3D
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF_3D
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBCi
RDEF
Sampler
TextureF_3D
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF_3D
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF_3D
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF_3D
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF_3D
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
".Im
RDEF
Sampler
TextureF_3D
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF_3D
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBCZ
RDEF
Sampler
TextureF_3D
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC :]T
RDEF
Sampler
TextureF_3D
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBCL9
RDEF
Sampler
TextureF_3D
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF_3D
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC+
RDEF
Sampler
TextureF_3D
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF_3D
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
37,J
RDEF
Sampler
TextureF_3D
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR,
STATt
DXBC
RDEF
Sampler
TextureF_3D
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBCM
RDEF
Sampler
TextureF_3D
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF_3D
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF_3D
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC"z
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF_3D
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
~\nCe
RDEF
Sampler
TextureF_3D
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR,
STATt
DXBC@
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF_3D
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBCg
RDEF
Sampler
TextureF_3D
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR@
STATt
DXBC
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF_3D
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC\v
RDEF
Sampler
TextureF_3D
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR,
STATt
DXBCG
RDEF
Sampler
TextureF_2DArray
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC^p2iqm
RDEF
Sampler
TextureF_2DArray
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF_2DArray
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
\n5rV]
RDEF
Sampler
TextureF_2DArray
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF_2DArray
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC*
RDEF
Sampler
TextureF_2DArray
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF_2DArray
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR<
STATt
DXBC
1qcs
RDEF
Sampler
TextureF_2DArray
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC6
RDEF
Sampler
TextureF_2DArray
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC"
RDEF
Sampler
TextureF_2DArray
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDRP
STATt
DXBC
RDEF
Sampler
TextureF_2DArray
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBCW
RDEF
Sampler
TextureF_2DArray
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF_2DArray
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDRP
STATt
DXBC
RDEF
Sampler
TextureF_2DArray
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF_2DArray
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR$
STATt
DXBC
c4hX
RDEF
Sampler
TextureF_2DArray
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDRd
STATt
DXBC
FcGw)+
RDEF
Sampler
TextureF_2DArray
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF_2DArray
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC][
RDEF
Sampler
TextureF_2DArray
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC^u
G;)3\
RDEF
Sampler
TextureF_2DArray
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC=
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF_2DArray
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR$
STATt
DXBC
RDEF
Sampler
TextureF_2DArray
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDRd
STATt
DXBC
P;oz
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBCR
RDEF
Sampler
TextureF_2DArray
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR8
STATt
DXBC#
RDEF
Sampler
TextureF_2DArray
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDRx
STATt
DXBC
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
Sampler
TextureF_2DArray
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR$
STATt
DXBC
RDEF
Sampler
TextureF_2DArray
Microsoft (R) HLSL Shader Compiler 9.29.952.3111
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDRd
STATt
DXBC
RDEF(
Sampler
TextureF2D
SwizzleProperties
SwizzleIndices
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
TextureUI2D
SwizzleProperties
SwizzleIndices
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
SHDRX
STATt
DXBC
RDEF
TextureI2D
SwizzleProperties
SwizzleIndices
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
SHDRX
STATt
DXBC'
RDEF,
Sampler
TextureF2DArray
SwizzleProperties
SwizzleIndices
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR$
STATt
DXBC
1-E@
RDEF
TextureUI2DArray
SwizzleProperties
SwizzleIndices
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDRp
STATt
DXBCU=<$!
RDEF
TextureI2DArray
SwizzleProperties
SwizzleIndices
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDRp
STATt
DXBC
<PJ*Ax
RDEF(
Sampler
TextureF3D
SwizzleProperties
SwizzleIndices
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDR
STATt
DXBC
RDEF
TextureUI3D
SwizzleProperties
SwizzleIndices
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDRL
STATt
DXBC0Ta
RDEF
TextureI3D
SwizzleProperties
SwizzleIndices
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN
SV_POSITION
SV_RENDERTARGETARRAYINDEX
TEXCOORD
OSGN,
SV_TARGET
SHDRL
STATt
Clear11 VS FL9
DXBC
Aon9\
SHDR<
STATt
RDEFP
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN,
POSITION
OSGN,
SV_POSITION
Clear11 PS FloatFL9
DXBC2p
Aon9t
SHDR
STATt
RDEF\f
ColorAndDepthDataFloat
color_Float
zValueF_Float
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN,
SV_POSITION
OSGN
SV_TARGET
SV_DEPTH
Clear11 VS
Clear11 VS Multiview
Clear11 GS Multiview
Clear11 PS Depth
Clear11 PS Float1
Clear11 PS Float2
Clear11 PS Float3
Clear11 PS Float4
Clear11 PS Float5
Clear11 PS Float6
Clear11 PS Float7
Clear11 PS Float8
Clear11 PS Uint1
Clear11 PS Uint2
Clear11 PS Uint3
Clear11 PS Uint4
Clear11 PS Uint5
Clear11 PS Uint6
Clear11 PS Uint7
Clear11 PS Uint8
Clear11 PS Sint1
Clear11 PS Sint2
Clear11 PS Sint3
Clear11 PS Sint4
Clear11 PS Sint5
Clear11 PS Sint6
Clear11 PS Sint7
Clear11 PS Sint8
Clear11::ensureResourcesInitialized
Clear11 Rasterizer State with scissor disabled
Clear11 Rasterizer State with scissor enabled
Clear11 Constant Buffer
?Clear11 Vertex Buffer
clearFramebuffer
It is undefined behaviour to clear a render buffer which is not normalized fixed point or floating-point to floating point values (color attachment 
 has internal format 
DXBC
a/XpL
RDEFP
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN,
SV_VertexID
OSGN,
SV_POSITION
SHDR
STATt
DXBC-
F|:e
RDEFP
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNT
SV_VertexID
SV_InstanceID
OSGNP
SV_POSITION
TEXCOORD
SHDR
STATt
DXBC
RDEFP
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_Position
TEXCOORD
OSGN`
SV_Position
SV_RenderTargetArrayIndex
SHDR
STATt
DXBCvi
RDEF
DepthOnlyData
zValue_Depth
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN,
SV_POSITION
OSGN,
SV_DEPTH
SHDR8
STATt
DXBC
RDEF\f
ColorAndDepthDataFloat
color_Float
zValueF_Float
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN,
SV_POSITION
OSGNL
SV_TARGET
SV_DEPTH
SHDR\
STATt
DXBClh
RDEF\f
ColorAndDepthDataFloat
color_Float
zValueF_Float
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN,
SV_POSITION
OSGNd
SV_TARGET
SV_DEPTH
SHDR
STATt
DXBCT
RDEF\f
ColorAndDepthDataFloat
color_Float
zValueF_Float
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN,
SV_POSITION
OSGN|
SV_TARGET
SV_DEPTH
SHDR
STATt
DXBC
RDEF\f
ColorAndDepthDataFloat
color_Float
zValueF_Float
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN,
SV_POSITION
OSGN
SV_TARGET
SV_DEPTH
SHDR
STATt
DXBCn
RDEF\f
ColorAndDepthDataFloat
color_Float
zValueF_Float
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN,
SV_POSITION
OSGN
SV_TARGET
SV_DEPTH
SHDR
STATt
DXBCY
?w^>
RDEF\f
ColorAndDepthDataFloat
color_Float
zValueF_Float
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN,
SV_POSITION
OSGN
SV_TARGET
SV_DEPTH
SHDR
STATt
DXBC
~f5M
\{_Q
RDEF\f
ColorAndDepthDataFloat
color_Float
zValueF_Float
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN,
SV_POSITION
OSGN
SV_TARGET
SV_DEPTH
SHDR4
STATt
DXBC
RDEF\f
ColorAndDepthDataFloat
color_Float
zValueF_Float
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN,
SV_POSITION
OSGN
SV_TARGET
SV_DEPTH
SHDRX
STATt
DXBC
!NVg
RDEF\f
ColorAndDepthDataUint
color_Uint
zValueF_Uint
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN,
SV_POSITION
OSGNL
SV_TARGET
SV_DEPTH
SHDR\
STATt
DXBC@
RDEF\f
ColorAndDepthDataUint
color_Uint
zValueF_Uint
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN,
SV_POSITION
OSGNd
SV_TARGET
SV_DEPTH
SHDR
STATt
DXBC
RDEF\f
ColorAndDepthDataUint
color_Uint
zValueF_Uint
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN,
SV_POSITION
OSGN|
SV_TARGET
SV_DEPTH
SHDR
STATt
DXBC
RDEF\f
ColorAndDepthDataUint
color_Uint
zValueF_Uint
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN,
SV_POSITION
OSGN
SV_TARGET
SV_DEPTH
SHDR
STATt
DXBC
RDEF\f
ColorAndDepthDataUint
color_Uint
zValueF_Uint
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN,
SV_POSITION
OSGN
SV_TARGET
SV_DEPTH
SHDR
STATt
DXBC\#\v
RDEF\f
ColorAndDepthDataUint
color_Uint
zValueF_Uint
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN,
SV_POSITION
OSGN
SV_TARGET
SV_DEPTH
SHDR
STATt
DXBC
r;\7
RDEF\f
ColorAndDepthDataUint
color_Uint
zValueF_Uint
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN,
SV_POSITION
OSGN
SV_TARGET
SV_DEPTH
SHDR4
STATt
DXBC
RDEF\f
ColorAndDepthDataUint
color_Uint
zValueF_Uint
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN,
SV_POSITION
OSGN
SV_TARGET
SV_DEPTH
SHDRX
STATt
DXBC
RDEF\f
ColorAndDepthDataSint
color_Sint
zValueF_Sint
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN,
SV_POSITION
OSGNL
SV_TARGET
SV_DEPTH
SHDR\
STATt
DXBC
RDEF\f
ColorAndDepthDataSint
color_Sint
zValueF_Sint
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN,
SV_POSITION
OSGNd
SV_TARGET
SV_DEPTH
SHDR
STATt
DXBC
RDEF\f
ColorAndDepthDataSint
color_Sint
zValueF_Sint
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN,
SV_POSITION
OSGN|
SV_TARGET
SV_DEPTH
SHDR
STATt
DXBCVy
RDEF\f
ColorAndDepthDataSint
color_Sint
zValueF_Sint
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN,
SV_POSITION
OSGN
SV_TARGET
SV_DEPTH
SHDR
STATt
DXBCk
RDEF\f
ColorAndDepthDataSint
color_Sint
zValueF_Sint
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN,
SV_POSITION
OSGN
SV_TARGET
SV_DEPTH
SHDR
STATt
DXBC
RDEF\f
ColorAndDepthDataSint
color_Sint
zValueF_Sint
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN,
SV_POSITION
OSGN
SV_TARGET
SV_DEPTH
SHDR
STATt
DXBC
RDEF\f
ColorAndDepthDataSint
color_Sint
zValueF_Sint
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN,
SV_POSITION
OSGN
SV_TARGET
SV_DEPTH
SHDR4
STATt
DXBC(PW
O\nGv
RDEF\f
ColorAndDepthDataSint
color_Sint
zValueF_Sint
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN,
SV_POSITION
OSGN
SV_TARGET
SV_DEPTH
SHDRX
STATt
PixelTransfer11 constant buffer
BufferToTexture VS
BufferToTexture GS
BufferToTexture RGBA ps
BufferToTexture RGBA-I ps
BufferToTexture RGBA-UI ps
DXBC'
RDEF(
BufferCopyParams
FirstPixelOffset
PixelsPerRow
RowStride
RowsPerSlice
PositionOffset
PositionScale
TexLocationOffset
TexLocationScale
FirstSlice
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGN,
SV_VertexID
OSGNl
SV_Position
TEXCOORD
LAYER
SHDR
STATt
DXBCO
\wJV
RDEFP
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNl
SV_Position
TEXCOORD
LAYER
OSGN
SV_Position
TEXCOORD
SV_RenderTargetArrayIndex
SHDR
STATt
DXBC
L{d&
RDEFP
Buffer4F
BufferCopyParams
FirstPixelOffset
PixelsPerRow
RowStride
RowsPerSlice
PositionOffset
PositionScale
TexLocationOffset
TexLocationScale
FirstSlice
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_Position
TEXCOORD
OSGN,
SV_Target
SHDR`
STATt
DXBC
RDEFx
Buffer4I
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_Position
TEXCOORD
OSGN,
SV_Target
SHDRP
STATt
DXBC
RDEFx
Buffer4UI
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_Position
TEXCOORD
OSGN,
SV_Target
SHDRP
STATt
DCompositionCreateDevice
SwapChain11::resetOffscreenTexture
resetOffscreenColorBuffer
Could not open shared handle. 
Could not use provided offscreen texture, texture not renderable.
Could not create offscreen texture, 
Offscreen back buffer texture
.HPN
\vCould not query offscreen texture resource, 
Could not get offscreen texture shared handle, 
Offscreen back buffer render target
Offscreen back buffer shader resource
resetOffscreenDepthBuffer
Could not create depthstencil surface for new swap chain, 
Offscreen depth stencil texture
Offscreen depth stencil view
Offscreen depth stencil shader resource
SwapChain11::resize
resize
Error reading swap chain description, 
Error resizing swap chain buffers, 
Back buffer texture
Back buffer render target
Back buffer shader resource
SwapChain11::reset
reset
Could not create additional swap chains or offscreen surfaces, 
Back buffer shader resource view
SwapChain11::initPassThroughResources
Swap chain quad vertex buffer
Swap chain pass through sampler
DXBC
Aon9
SHDR
STATt
RDEFP
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNL
POSITION
TEXCOORD
OSGNP
SV_POSITION
TEXCOORD
Swap chain pass through layout
Swap chain pass through vertex shader
DXBC
Aon9d
SHDRd
STATt
RDEF
Sampler
TextureF
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNP
SV_POSITION
TEXCOORD
OSGN,
SV_TARGET
DXBC
RDEF|
TextureF_MS
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNt
SV_POSITION
TEXCORD
SV_SAMPLEINDEX
OSGN,
SV_TARGET
SHDR
STATt
Swap chain pass through pixel shader
Swap chain pass through rasterizer state
present
Present failed: the D3D11 device was removed, 
Present failed: the D3D11 device was reset from a bad command.
Present failed with 
Offscreen back buffer copy for SRV
Swap chain uninitialized
Failed to get frame statistics, 
DXBC*
H$S]
RDEF|
TextureF_MS
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
ISGNL
SV_POSITION
TEXCORD
OSGN,
SV_TARGET
SHDR
STATt
E\nyB\rvH
Invalid program binary, device configuration has changed.
Mismatched compilation flags.
Invalid program binary.
Could not create vertex shader.
Could not create pixel shader.
Could not create geometry shader.
Could not create compute shader.
getPixelExecutableForCachedOutputLayout
Error compiling dynamic pixel executable:
getVertexExecutableForCachedInputLayout
Error compiling dynamic vertex executable:
getGeometryExecutableForPrimitiveType
Error compiling dynamic geometry executable:
compileComputeExecutable
Error compiling dynamic compute executable:
Failed to create D3D compute shader.
The current renderer doesn't support gl_FrontFacing
PSIZE
COLOR
// GEOMETRY SHADER BEGIN\n\n
\nGEOMETRY SHADER END\n\n\n
Failed to create D3D Shaders
mapBuffer
../../third_party/angle/src/libANGLE/renderer/d3d/IndexBuffer.cpp
Mapping of internal index buffer would cause an integer overflow.
IndexBuffer11 (dynamic)
IndexBuffer11 (static)
../../third_party/angle/src/libANGLE/renderer/d3d/d3d11/IndexBuffer11.cpp
Internal index buffer is not initialized.
Index buffer map range is not inside the buffer.
unmapBuffer
discard
mapRange
../../third_party/angle/src/libANGLE/renderer/d3d/d3d11/Buffer11.cpp
Buffer11::NativeStorage
getBuffer
Buffer11::EmulatedIndexedStorage
setData
../../third_party/angle/src/libANGLE/renderer/d3d/d3d11/TextureStorage11.cpp
Drop stencil texture not implemented.
TexStorage2D.Level0Texture
TexStorage2D.Texture
TexStorage2D.Level0RTV
TexStorage2D.RTV
TexStorage2D.DSV
TexStorage2D.SRV
TexStorage2D.SRVForImage
TexStorage2D.UAVForImage
TexStorage2D.SwizzleTexture
TexStorage2D.DropStencil
getRenderTarget
createSRVForImage is unimplemented.
createUAVForImage is unimplemented.
useLevelZeroWorkaroundTexture
TexStorageEGLImage.SwizzleTexture
TexStorageEGLImage.SRV
TexStorageCube.Texture
TexStorageCube.RenderTargetSRV
TexStorageCube.RenderTargetRTV
TexStorageCube.RenderTargetDSV
TexStorageCube.SRV
TexStorageCube.SRVForImage
TexStorageCube.UAVForImage
TexStorageCube.SwizzleTexture
TexStorageCube.DropStencil
TexStorage3D.Texture
TexStorage3D.SRV
TexStorage3D.SRVForImage
TexStorage3D.UAVForImage
TexStorage3D.RTV
TexStorage3D.LayerRTV
TexStorage3D.SwizzleTexture
TexStorage3D.SwizzleRTV
TexStorage2DArray.Texture
TexStorage2DArray.SRV
TexStorage2DArray.SRVForImage
TexStorage2DArray.UAVForImage
TexStorage2DArray.RenderTargetSRV
TexStorage2DArray.RenderTargetRTV
TexStorage2DArray.RenderTargetDSV
TexStorage2DArray.SwizzleTexture
TexStorage2DArray.DropStencil
copyToStorage
TexStorage2DMS.Texture
TexStorage2DMS.SRV
getSwizzleTexture is unimplemented.
getSwizzleRenderTarget is unimplemented.
TexStorage2DMSArray.Texture
TexStorage2DMSArray.RenderTargetSRV
TexStorage2DMSArray.RenderTargetRTV
TexStorage2DMSArray.RenderTargetDSV
TexStorage2DMSArray.SRV
fastUnpackPixels
../../third_party/angle/src/libANGLE/renderer/d3d/TextureD3D.cpp
Unimplemented pixel store parameters in fastUnpackPixels
ensureRenderTarget
initializeContents
Copying 3D textures is unimplemented.
setImage
setSubImage
setCompressedImage
setCompressedSubImage
Copying 2D array textures is unimplemented.
initMipmapImages
VertexBuffer11 (dynamic)
VertexBuffer11 (static)
Texture not created on ANGLE D3D device
getGLFrameDescription
Width or height < 1
Unsupported format
YUV 4:2:0 textures must have even width and height.
Plane out of range
loadData
../../third_party/angle/src/libANGLE/renderer/d3d/d3d11/Image11.cpp
loadCompressedData
Image11::StagingTexture3D
Image11::StagingTexture2D
triggerDrawCallProgramRecompilation
Error compiling dynamic vertex executable: 
../../third_party/angle/src/libANGLE/renderer/d3d/d3d11/Context11.cpp
Error compiling dynamic vertex executable
Error compiling dynamic geometry executable: 
Error compiling dynamic geometry executable
Error compiling dynamic pixel executable: 
Error compiling dynamic pixel executable
0CapplyDeclaration
../../third_party/angle/src/libANGLE/renderer/d3d/d3d9/VertexDeclarationCache.cpp
Failed to create internal vertex declaration
computeOffset
../../third_party/angle/src/libANGLE/renderer/d3d/VertexDataManager.cpp
reserveSpaceForAttrib
Vertex buffer is not big enough for the draw call.
?../../third_party/angle/src/libANGLE/renderer/d3d/d3d9/Blit9.cpp
Failed to create internal blit vertex shader
Failed to lock internal blit vertex shader
Failed to create internal blit vertex shader declaration
vs_2_0
ps_2_0
copy
StretchRect failed to blit between textures
copySurfaceToTexture
Failed to allocate internal texture for blit
Failed to query surface of internal blit texture
Failed to copy between internal blit textures
setShader
Failed to set shader for blit operation
CTAB
halfPixelSize
texcoordOffset
vs_2_0
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
CTAB
ps_2_0
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
CTAB
mult
ps_2_0
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
CTAB
mult
ps_2_0
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
CTAB
mult
ps_2_0
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
CTAB
mult
ps_2_0
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
CTAB
mult
ps_2_0
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
CTAB
mult
ps_2_0
Microsoft (R) HLSL Shader Compiler 6.3.9600.16384
StreamInIndexBuffer
../../third_party/angle/src/libANGLE/renderer/d3d/IndexDataManager.cpp
Reserving indices exceeds the maximum buffer size.
D3D9 doesn't support ES 3.1 DrawArraysIndirect API
D3D9 doesn't support ES 3.1 DrawElementsIndirect API
D3D9 doesn't support ES 3.1 DispatchCompute API
D3D9 doesn't support ES 3.1 dispatchComputeIndirect API
D3D9 doesn't support ES 3.1 memoryBarrier API
D3D9 doesn't support ES 3.1 memoryBarrierByRegion API
Internal D3D9 error: 
../../third_party/angle/src/libANGLE/renderer/d3d/d3d9/VertexBuffer9.cpp
Failed to allocate internal vertex buffer
storeVertexAttributes
Failed to lock internal vertex buffer
Failed to lock internal vertex buffer for discarding
Failed to unlock internal vertex buffer for discarding
../../third_party/angle/src/libANGLE/renderer/d3d/d3d9/IndexBuffer9.cpp
Failed to allocate internal index buffer
Failed to lock internal index buffer
Failed to unlock internal index buffer
GenerateMip
../../third_party/angle/src/libANGLE/renderer/d3d/d3d9/Image9.cpp
Failed to query the source surface description for mipmap generation
Failed to query the destination surface description for mipmap generation
Failed to lock the source surface for mipmap generation
Failed to lock the destination surface for mipmap generation
CopyLockableSurfaces
Failed to lock source surface for copy
Failed to lock destination surface for copy
CopyImage
Failed to query the source surface description for CopyImage
Failed to query the destination surface description for CopyImage
Failed to lock the source surface for CopyImage
Failed to lock the destination surface for CopyImage
createSurface
Failed to create image surface
Failed to lock image surface
Failed to unlock image surface
lock
copyToSurface
Internal CreateOffscreenPlainSurface call failed
Internal UpdateSurface call failed
copyFromRTInternal
Could not create matching destination surface
GetRenderTargetData unexpectedly failed
Failed to lock the source surface (rectangle might be invalid)
../../third_party/angle/src/libANGLE/renderer/d3d/d3d9/TextureStorage9.cpp
getSurfaceLevel
Failed to get the surface from a texture
getBaseTexture
Failed to create 2D storage texture
generateMipmap
Failed to create cube storage texture
readPixelsImpl
../../third_party/angle/src/libANGLE/renderer/d3d/d3d9/Framebuffer9.cpp
ReadPixels is unimplemented for multisampled framebuffer attachments.
Failed to allocate internal texture for ReadPixels.
Failed to read internal render target data.
Failed to lock internal render target.
blitImpl
Internal blit failed.
getSamplePosition is unsupported to d3d9.
swapWithDamage implementation missing.
setPresentationTime implementation missing.
vkDestroyDebugReportCallbackEXT
../../third_party/angle/src/libANGLE/renderer/vulkan/RendererVk.cpp
VK_KHR_surface
VK_EXT_debug_report
ANGLE
vkCreateDebugReportCallbackEXT
VK_KHR_swapchain
VK_KHR_maintenance1
Vulkan 
ANGLE Pipeline Cache: 
angledata/VkICD_mock_icd.json
ScopedVkLoaderEnvironment
Error setting Path for Mock/Null Driver.
Error getting CWD for Vulkan layers init.
Error setting CWD for Vulkan layers init.
angledata
Error setting environment for Vulkan layers init.
DebugReportCallback
 [ UNASSIGNED-CoreValidation-Shader-PointSizeMissing ] Object: VK_NULL_HANDLE (Type = 19) | Pipeline topology is set to POINT_LIST, but PointSize is not written to in the shader corresponding to VK_SHADER_STAGE_VERTEX_BIT.
Vulkan Mock Device
ChoosePhysicalDevice
Vulkan Mock Driver was requested but Mock Device was not found. Using default physicalDevice instead.
VK_LAYER_LUNARG_standard_validation
VK_LAYER_GOOGLE_threading
VK_LAYER_LUNARG_parameter_validation
VK_LAYER_LUNARG_object_tracker
VK_LAYER_LUNARG_core_validation
VK_LAYER_GOOGLE_unique_objects
VK_LAYER_PATH
VK_ICD_FILENAMES
Command successfully completed.
A fence or query has not yet completed.
A wait operation has not completed in the specified time.
An event is signaled.
An event is unsignaled.
A return array was too small for the result.
A swapchain no longer matches the surface properties exactly, but can still be used to present to the surface successfully.
A host memory allocation has failed.
A device memory allocation has failed.
Initialization of an object could not be completed for implementation-specific reasons.
The logical or physical device has been lost.
Mapping of a memory object has failed.
A requested layer is not present or could not be loaded.
A requested extension is not supported.
A requested feature is not supported.
The requested version of Vulkan is not supported by the driver or is otherwise incompatible for implementation-specific reasons.
Too many objects of the type have already been created.
A requested format is not supported on this device.
A surface is no longer available.
The requested window is already connected to a VkSurfaceKHR, or to some other non-Vulkan API.
A surface has changed in such a way that it is no longer compatible with the swapchain.
The display used by a swapchain does not use the same presentable image layout, or is incompatible in a way that prevents sharing an image.
The validation layers detected invalid API usage.
Unknown vulkan error code.
GetAvailableValidationLayers
Vulkan validation layers are missing.
../../third_party/angle/src/libANGLE/renderer/vulkan/vk_utils.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/SurfaceVk.cpp
GetDesiredPresentMode
Present mode 
 not available. Falling back to 
Flush is unimplemented. http://anglebug.com/2504
DrawArraysIndirect hasn't been implemented for vulkan backend.
DrawElementsIndirect hasn't been implemented for vulkan backend.
VK_KHR_display
VK_KHR_get_display_properties2
VK_KHR_mir_surface
VK_KHR_wayland_surface
VK_KHR_xcb_surface
VK_KHR_xlib_surface
VK_KHR_surface extension not enabled.  vkGetPhysicalDeviceSurfaceSupportKHR not executed!\n
NULL pointer passed into vkGetPhysicalDeviceSurfaceSupportKHR for pSupported!\n
ICD for selected physical device is not exporting vkGetPhysicalDeviceSurfaceSupportKHR!\n
VK_KHR_surface extension not enabled.  vkGetPhysicalDeviceSurfaceCapabilitiesKHR not executed!\n
NULL pointer passed into vkGetPhysicalDeviceSurfaceCapabilitiesKHR for pSurfaceCapabilities!\n
ICD for selected physical device is not exporting vkGetPhysicalDeviceSurfaceCapabilitiesKHR!\n
VK_KHR_surface extension not enabled.  vkGetPhysicalDeviceSurfaceFormatsKHR not executed!\n
NULL pointer passed into vkGetPhysicalDeviceSurfaceFormatsKHR for pSurfaceFormatCount!\n
VK_KHR_surface extension not enabled.  vkGetPhysicalDeviceSurfacePresentModesKHR not executed!\n
NULL pointer passed into vkGetPhysicalDeviceSurfacePresentModesKHR for pPresentModeCount!\n
ICD for selected physical device is not exporting vkGetPhysicalDeviceSurfacePresentModesKHR!\n
VK_KHR_win32_surface extension not enabled.  vkCreateWin32SurfaceKHR not executed!\n
VK_KHR_win32_surface extension not enabled.  vkGetPhysicalDeviceWin32PresentationSupportKHR not executed!\n
ICD for selected physical device is not exporting vkGetPhysicalDeviceWin32PresentationSupportKHR!\n
VK_KHR_display extension not enabled.  vkGetPhysicalDeviceDisplayPropertiesKHR not executed!\n
ICD for selected physical device is not exporting vkGetPhysicalDeviceDisplayPropertiesKHR!\n
VK_KHR_display extension not enabled.  vkGetPhysicalDeviceDisplayPlanePropertiesKHR not executed!\n
ICD for selected physical device is not exporting vkGetPhysicalDeviceDisplayPlanePropertiesKHR!\n
VK_KHR_display extension not enabled.  vkGetDisplayPlaneSupportedDisplaysKHR not executed!\n
ICD for selected physical device is not exporting vkGetDisplayPlaneSupportedDisplaysKHR!\n
VK_KHR_display extension not enabled.  vkGetDisplayModePropertiesKHR not executed!\n
ICD for selected physical device is not exporting vkGetDisplayModePropertiesKHR!\n
VK_KHR_display extension not enabled.  vkCreateDisplayModeKHR not executed!\n
ICD for selected physical device is not exporting vkCreateDisplayModeKHR!\n
VK_KHR_display extension not enabled.  vkGetDisplayPlaneCapabilitiesKHR not executed!\n
ICD for selected physical device is not exporting vkGetDisplayPlaneCapabilitiesKHR!\n
VK_KHR_surface extension not enabled.  vkCreateDisplayPlaneSurfaceKHR not executed!\n
ICD associated with VkPhysicalDevice does not support GetPhysicalDevicePresentRectanglesKHX
vkGetPhysicalDeviceDisplayProperties2KHR: Emulating call in ICD "%s"
vkGetPhysicalDeviceDisplayPlaneProperties2KHR: Emulating call in ICD "%s"
vkGetDisplayModeProperties2KHR: Emulating call in ICD "%s"
vkGetDisplayPlaneCapabilities2KHR: Emulating call in ICD "%s"
vkDestroySurfaceKHR
vkGetPhysicalDeviceSurfaceSupportKHR
vkGetPhysicalDeviceSurfaceCapabilitiesKHR
vkGetPhysicalDeviceSurfaceFormatsKHR
vkGetPhysicalDeviceSurfacePresentModesKHR
vkGetDeviceGroupPresentCapabilitiesKHR
vkGetDeviceGroupSurfacePresentModesKHR
vkGetPhysicalDevicePresentRectanglesKHR
vkCreateSwapchainKHR
vkDestroySwapchainKHR
vkGetSwapchainImagesKHR
vkAcquireNextImageKHR
vkQueuePresentKHR
vkAcquireNextImage2KHR
vkCreateWin32SurfaceKHR
vkGetPhysicalDeviceWin32PresentationSupportKHR
vkGetPhysicalDeviceDisplayPropertiesKHR
vkGetPhysicalDeviceDisplayPlanePropertiesKHR
vkGetDisplayPlaneSupportedDisplaysKHR
vkGetDisplayModePropertiesKHR
vkCreateDisplayModeKHR
vkGetDisplayPlaneCapabilitiesKHR
vkCreateDisplayPlaneSurfaceKHR
vkCreateSharedSwapchainsKHR
vkGetPhysicalDeviceDisplayProperties2KHR
vkGetPhysicalDeviceDisplayPlaneProperties2KHR
vkGetDisplayModeProperties2KHR
vkGetDisplayPlaneCapabilities2KHR
GL_ARB_texture_rg
GL_ARB_texture_rgb10_a2ui
GL_EXT_texture_sRGB
GL_EXT_texture_integer
GL_EXT_packed_float GL_ARB_color_buffer_float
GL_EXT_packed_float
GL_EXT_texture_shared_exponent
GL_EXT_texture_rg GL_OES_texture_half_float GL_EXT_color_buffer_half_float
GL_EXT_texture_storage GL_OES_texture_half_float GL_EXT_texture_rg GL_EXT_color_buffer_half_float
GL_OES_texture_half_float GL_EXT_texture_rg
GL_ARB_texture_rg GL_ARB_texture_float GL_ARB_color_buffer_float
GL_ARB_texture_rg ARB_texture_float
GL_OES_texture_half_float GL_EXT_color_buffer_half_float
GL_EXT_texture_storage GL_OES_texture_half_float GL_EXT_color_buffer_half_float
GL_ARB_texture_float GL_ARB_color_buffer_float
GL_ARB_texture_float
GL_OES_texture_float GL_EXT_texture_rg
GL_ARB_texture_rg GL_ARB_texture_float
GL_OES_depth_texture
GL_ARB_depth_texture
GL_ARB_depth_buffer_float
GL_EXT_packed_depth_stencil
GL_OES_depth_texture GL_OES_packed_depth_stencil
GL_ARB_framebuffer_object
GL_ARB_texture_compression_bptc
GL_EXT_texture_compression_s3tc
GL_ETC1_RGB8_OES
No native support for sync queries.
copySubTextureCPUReadback
../../third_party/angle/src/libANGLE/renderer/gl/BlitGL.cpp
@100
attribute
texture2D
300 es
texture
#version 
 vec2 a_texcoord;\n
uniform vec2 u_scale;\n
uniform vec2 u_offset;\n
 vec2 v_texcoord;\n
void main()\n
    gl_Position = vec4((a_texcoord * 2.0) - 1.0, 0.0, 1.0);\n
    v_texcoord = a_texcoord * u_scale + u_offset;\n
sampler2D
vec4
usampler2D
uvec4
outputUint
255.0
precision highp float;\n
uniform 
 u_source_texture;\n
uniform bool u_multiply_alpha;\n
uniform bool u_unmultiply_alpha;\n
    if (clamp(v_texcoord, vec2(0.0), vec2(1.0)) != v_texcoord)\n
    {\n
        discard;\n
    }\n
    
 color = 
(u_source_texture, v_texcoord);\n
    if (u_multiply_alpha)\n
        color.xyz = color.xyz * color.a;\n
    if (u_unmultiply_alpha && color.a != 0.0)\n
         color.xyz = color.xyz / color.a;\n
    color = color * 
(color);\n
u_source_texture
u_scale
u_offset
u_multiply_alpha
u_unmultiply_alpha
CheckCompileStatus
Failed to compile internal blit shader.
CheckLinkStatus
Failed to link internal blit program.
glClearDepth
glDepthRange
glDrawBuffer
glGetDoublev
glGetTexImage
glPixelStoref
glPolygonMode
glTexImage1D
glCopyTexImage1D
glCopyTexSubImage1D
glTexSubImage1D
glCompressedTexImage1D
glCompressedTexSubImage1D
glGetCompressedTexImage
glMultiDrawArrays
glMultiDrawElements
glPointParameteri
glPointParameteriv
glGetBufferSubData
glGetQueryObjectiv
glMapBuffer
glGetVertexAttribdv
glVertexAttrib1d
glVertexAttrib1dv
glVertexAttrib1s
glVertexAttrib1sv
glVertexAttrib2d
glVertexAttrib2dv
glVertexAttrib2s
glVertexAttrib2sv
glVertexAttrib3d
glVertexAttrib3dv
glVertexAttrib3s
glVertexAttrib3sv
glVertexAttrib4Nbv
glVertexAttrib4Niv
glVertexAttrib4Nsv
glVertexAttrib4Nub
glVertexAttrib4Nubv
glVertexAttrib4Nuiv
glVertexAttrib4Nusv
glVertexAttrib4bv
glVertexAttrib4d
glVertexAttrib4dv
glVertexAttrib4iv
glVertexAttrib4s
glVertexAttrib4sv
glVertexAttrib4ubv
glVertexAttrib4uiv
glVertexAttrib4usv
glBeginConditionalRender
glBindFragDataLocation
glClampColor
glColorMaski
glDisablei
glEnablei
glEndConditionalRender
glFramebufferTexture1D
glFramebufferTexture3D
glGetTexParameterIiv
glGetTexParameterIuiv
glIsEnabledi
glTexParameterIiv
glTexParameterIuiv
glVertexAttribI1i
glVertexAttribI1iv
glVertexAttribI1ui
glVertexAttribI1uiv
glVertexAttribI2i
glVertexAttribI2iv
glVertexAttribI2ui
glVertexAttribI2uiv
glVertexAttribI3i
glVertexAttribI3iv
glVertexAttribI3ui
glVertexAttribI3uiv
glVertexAttribI4bv
glVertexAttribI4sv
glVertexAttribI4ubv
glVertexAttribI4usv
glGetActiveUniformName
glPrimitiveRestartIndex
glTexBuffer
glDrawElementsBaseVertex
glDrawElementsInstancedBaseVertex
glDrawRangeElementsBaseVertex
glFramebufferTexture
glMultiDrawElementsBaseVertex
glProvokingVertex
glTexImage2DMultisample
glTexImage3DMultisample
glBindFragDataLocationIndexed
glGetFragDataIndex
glGetQueryObjecti64v
glGetQueryObjectui64v
glGetSamplerParameterIiv
glGetSamplerParameterIuiv
glQueryCounter
glSamplerParameterIiv
glSamplerParameterIuiv
glVertexAttribP1ui
glVertexAttribP1uiv
glVertexAttribP2ui
glVertexAttribP2uiv
glVertexAttribP3ui
glVertexAttribP3uiv
glVertexAttribP4ui
glVertexAttribP4uiv
glBeginQueryIndexed
glBlendEquationSeparatei
glBlendEquationi
glBlendFuncSeparatei
glBlendFunci
glDrawTransformFeedback
glDrawTransformFeedbackStream
glEndQueryIndexed
glGetActiveSubroutineName
glGetActiveSubroutineUniformName
glGetActiveSubroutineUniformiv
glGetProgramStageiv
glGetQueryIndexediv
glGetSubroutineIndex
glGetSubroutineUniformLocation
glGetUniformSubroutineuiv
glGetUniformdv
glMinSampleShading
glPatchParameterfv
glPatchParameteri
glUniform1d
glUniform1dv
glUniform2d
glUniform2dv
glUniform3d
glUniform3dv
glUniform4d
glUniform4dv
glUniformMatrix2dv
glUniformMatrix2x3dv
glUniformMatrix2x4dv
glUniformMatrix3dv
glUniformMatrix3x2dv
glUniformMatrix3x4dv
glUniformMatrix4dv
glUniformMatrix4x2dv
glUniformMatrix4x3dv
glUniformSubroutinesuiv
glDepthRangeArrayv
glDepthRangeIndexed
glGetDoublei_v
glGetFloati_v
glGetVertexAttribLdv
glProgramUniform1d
glProgramUniform1dv
glProgramUniform2d
glProgramUniform2dv
glProgramUniform3d
glProgramUniform3dv
glProgramUniform4d
glProgramUniform4dv
glProgramUniformMatrix2dv
glProgramUniformMatrix2x3dv
glProgramUniformMatrix2x4dv
glProgramUniformMatrix3dv
glProgramUniformMatrix3x2dv
glProgramUniformMatrix3x4dv
glProgramUniformMatrix4dv
glProgramUniformMatrix4x2dv
glProgramUniformMatrix4x3dv
glScissorArrayv
glScissorIndexed
glScissorIndexedv
glVertexAttribL1d
glVertexAttribL1dv
glVertexAttribL2d
glVertexAttribL2dv
glVertexAttribL3d
glVertexAttribL3dv
glVertexAttribL4d
glVertexAttribL4dv
glVertexAttribLPointer
glViewportArrayv
glViewportIndexedf
glViewportIndexedfv
glDrawArraysInstancedBaseInstance
glDrawElementsInstancedBaseInstance
glDrawElementsInstancedBaseVertexBaseInstance
glDrawTransformFeedbackInstanced
glDrawTransformFeedbackStreamInstanced
glGetActiveAtomicCounterBufferiv
glTexStorage1D
glClearBufferData
glClearBufferSubData
glCopyImageSubData
glDebugMessageCallback
glDebugMessageControl
glDebugMessageInsert
glGetDebugMessageLog
glGetObjectLabel
glGetObjectPtrLabel
glGetProgramResourceLocationIndex
glInvalidateBufferData
glInvalidateBufferSubData
glInvalidateTexImage
glInvalidateTexSubImage
glMultiDrawArraysIndirect
glMultiDrawElementsIndirect
glObjectLabel
glObjectPtrLabel
glPopDebugGroup
glPushDebugGroup
glShaderStorageBlockBinding
glTexBufferRange
glTexStorage3DMultisample
glTextureView
glVertexAttribLFormat
glBindBuffersBase
glBindBuffersRange
glBindImageTextures
glBindSamplers
glBindTextures
glBindVertexBuffers
glBufferStorage
glClearTexImage
glClearTexSubImage
glBindTextureUnit
glBlitNamedFramebuffer
glCheckNamedFramebufferStatus
glClearNamedBufferData
glClearNamedBufferSubData
glClearNamedFramebufferfi
glClearNamedFramebufferfv
glClearNamedFramebufferiv
glClearNamedFramebufferuiv
glClipControl
glCompressedTextureSubImage1D
glCompressedTextureSubImage2D
glCompressedTextureSubImage3D
glCopyNamedBufferSubData
glCopyTextureSubImage1D
glCopyTextureSubImage2D
glCopyTextureSubImage3D
glCreateBuffers
glCreateFramebuffers
glCreateProgramPipelines
glCreateQueries
glCreateRenderbuffers
glCreateSamplers
glCreateTextures
glCreateTransformFeedbacks
glCreateVertexArrays
glDisableVertexArrayAttrib
glEnableVertexArrayAttrib
glFlushMappedNamedBufferRange
glGenerateTextureMipmap
glGetCompressedTextureImage
glGetCompressedTextureSubImage
glGetGraphicsResetStatus
glGetNamedBufferParameteri64v
glGetNamedBufferParameteriv
glGetNamedBufferPointerv
glGetNamedBufferSubData
glGetNamedFramebufferAttachmentParameteriv
glGetNamedFramebufferParameteriv
glGetNamedRenderbufferParameteriv
glGetQueryBufferObjecti64v
glGetQueryBufferObjectiv
glGetQueryBufferObjectui64v
glGetQueryBufferObjectuiv
glGetTextureImage
glGetTextureLevelParameterfv
glGetTextureLevelParameteriv
glGetTextureParameterIiv
glGetTextureParameterIuiv
glGetTextureParameterfv
glGetTextureParameteriv
glGetTextureSubImage
glGetTransformFeedbacki64_v
glGetTransformFeedbacki_v
glGetTransformFeedbackiv
glGetVertexArrayIndexed64iv
glGetVertexArrayIndexediv
glGetVertexArrayiv
glGetnCompressedTexImage
glGetnTexImage
glGetnUniformdv
glGetnUniformfv
glGetnUniformiv
glGetnUniformuiv
glInvalidateNamedFramebufferData
glInvalidateNamedFramebufferSubData
glMapNamedBuffer
glMapNamedBufferRange
glNamedBufferData
glNamedBufferStorage
glNamedBufferSubData
glNamedFramebufferDrawBuffer
glNamedFramebufferDrawBuffers
glNamedFramebufferParameteri
glNamedFramebufferReadBuffer
glNamedFramebufferRenderbuffer
glNamedFramebufferTexture
glNamedFramebufferTextureLayer
glNamedRenderbufferStorage
glNamedRenderbufferStorageMultisample
glReadnPixels
glTextureBarrier
glTextureBuffer
glTextureBufferRange
glTextureParameterIiv
glTextureParameterIuiv
glTextureParameterf
glTextureParameterfv
glTextureParameteri
glTextureParameteriv
glTextureStorage1D
glTextureStorage2D
glTextureStorage2DMultisample
glTextureStorage3D
glTextureStorage3DMultisample
glTextureSubImage1D
glTextureSubImage2D
glTextureSubImage3D
glTransformFeedbackBufferBase
glTransformFeedbackBufferRange
glUnmapNamedBuffer
glVertexArrayAttribBinding
glVertexArrayAttribFormat
glVertexArrayAttribIFormat
glVertexArrayAttribLFormat
glVertexArrayBindingDivisor
glVertexArrayElementBuffer
glVertexArrayVertexBuffer
glVertexArrayVertexBuffers
GL_ARB_ES3_1_compatibility
GL_ARB_ES3_2_compatibility
glPrimitiveBoundingBoxARB
GL_ARB_base_instance
GL_ARB_buffer_storage
GL_ARB_clear_buffer_object
GL_ARB_clear_texture
GL_ARB_clip_control
GL_ARB_color_buffer_float
glClampColorARB
GL_ARB_copy_buffer
GL_ARB_copy_image
GL_ARB_debug_output
glDebugMessageCallbackARB
glDebugMessageControlARB
glDebugMessageInsertARB
glGetDebugMessageLogARB
GL_ARB_direct_state_access
GL_ARB_draw_buffers
glDrawBuffersARB
GL_ARB_draw_buffers_blend
glBlendEquationSeparateiARB
glBlendEquationiARB
glBlendFuncSeparateiARB
glBlendFunciARB
GL_ARB_draw_elements_base_vertex
GL_ARB_draw_indirect
glDrawArraysInstancedARB
glDrawElementsInstancedARB
GL_ARB_fragment_program
glGetProgramivARB
glIsProgramARB
GL_ARB_geometry_shader4
glFramebufferTextureARB
glFramebufferTextureLayerARB
glProgramParameteriARB
GL_ARB_get_texture_sub_image
GL_ARB_gpu_shader_fp64
GL_ARB_imaging
glVertexAttribDivisorARB
GL_ARB_multi_bind
GL_ARB_multi_draw_indirect
GL_ARB_multisample
glSampleCoverageARB
GL_ARB_multitexture
glActiveTextureARB
GL_ARB_occlusion_query
glBeginQueryARB
glDeleteQueriesARB
glEndQueryARB
glGenQueriesARB
glGetQueryObjectivARB
glGetQueryObjectuivARB
glGetQueryivARB
glIsQueryARB
GL_ARB_point_parameters
glPointParameterfARB
glPointParameterfvARB
GL_ARB_provoking_vertex
glGetGraphicsResetStatusARB
glGetnCompressedTexImageARB
glGetnTexImageARB
glGetnUniformdvARB
glGetnUniformfvARB
glGetnUniformivARB
glGetnUniformuivARB
glReadnPixelsARB
GL_ARB_sample_shading
glMinSampleShadingARB
GL_ARB_separate_shader_objects
GL_ARB_shader_objects
glCompileShaderARB
glGetActiveUniformARB
glGetShaderSourceARB
glGetUniformLocationARB
glGetUniformfvARB
glGetUniformivARB
glLinkProgramARB
glShaderSourceARB
glUniform1fARB
glUniform1fvARB
glUniform1iARB
glUniform1ivARB
glUniform2fARB
glUniform2fvARB
glUniform2iARB
glUniform2ivARB
glUniform3fARB
glUniform3fvARB
glUniform3iARB
glUniform3ivARB
glUniform4fARB
glUniform4fvARB
glUniform4iARB
glUniform4ivARB
glUniformMatrix2fvARB
glUniformMatrix3fvARB
glUniformMatrix4fvARB
glValidateProgramARB
GL_ARB_shader_subroutine
GL_ARB_tessellation_shader
GL_ARB_texture_barrier
GL_ARB_texture_buffer_object
glTexBufferARB
GL_ARB_texture_buffer_range
GL_ARB_texture_compression
glCompressedTexImage1DARB
glCompressedTexImage2DARB
glCompressedTexImage3DARB
glCompressedTexSubImage1DARB
glCompressedTexSubImage2DARB
glCompressedTexSubImage3DARB
glGetCompressedTexImageARB
GL_ARB_texture_storage
GL_ARB_texture_storage_multisample
GL_ARB_texture_view
GL_ARB_transform_feedback3
GL_ARB_transform_feedback_instanced
GL_ARB_vertex_attrib_64bit
GL_ARB_vertex_buffer_object
glBindBufferARB
glBufferDataARB
glBufferSubDataARB
glDeleteBuffersARB
glGenBuffersARB
glGetBufferParameterivARB
glGetBufferPointervARB
glGetBufferSubDataARB
glIsBufferARB
glMapBufferARB
glUnmapBufferARB
GL_ARB_vertex_program
glDisableVertexAttribArrayARB
glEnableVertexAttribArrayARB
glGetVertexAttribPointervARB
glGetVertexAttribdvARB
glGetVertexAttribfvARB
glGetVertexAttribivARB
glVertexAttrib1dARB
glVertexAttrib1dvARB
glVertexAttrib1fARB
glVertexAttrib1fvARB
glVertexAttrib1sARB
glVertexAttrib1svARB
glVertexAttrib2dARB
glVertexAttrib2dvARB
glVertexAttrib2fARB
glVertexAttrib2fvARB
glVertexAttrib2sARB
glVertexAttrib2svARB
glVertexAttrib3dARB
glVertexAttrib3dvARB
glVertexAttrib3fARB
glVertexAttrib3fvARB
glVertexAttrib3sARB
glVertexAttrib3svARB
glVertexAttrib4NbvARB
glVertexAttrib4NivARB
glVertexAttrib4NsvARB
glVertexAttrib4NubARB
glVertexAttrib4NubvARB
glVertexAttrib4NuivARB
glVertexAttrib4NusvARB
glVertexAttrib4bvARB
glVertexAttrib4dARB
glVertexAttrib4dvARB
glVertexAttrib4fARB
glVertexAttrib4fvARB
glVertexAttrib4ivARB
glVertexAttrib4sARB
glVertexAttrib4svARB
glVertexAttrib4ubvARB
glVertexAttrib4uivARB
glVertexAttrib4usvARB
glVertexAttribPointerARB
GL_ARB_vertex_shader
glBindAttribLocationARB
glGetActiveAttribARB
glGetAttribLocationARB
GL_ARB_vertex_type_2_10_10_10_rev
GL_ARB_viewport_array
GL_EXT_blend_color
glBlendColorEXT
GL_EXT_blend_equation_separate
glBlendEquationSeparateEXT
GL_EXT_blend_func_separate
glBlendFuncSeparateEXT
GL_EXT_copy_texture
glCopyTexImage1DEXT
glCopyTexImage2DEXT
glCopyTexSubImage1DEXT
glCopyTexSubImage2DEXT
glCopyTexSubImage3DEXT
GL_EXT_direct_state_access
glCheckNamedFramebufferStatusEXT
glClearNamedBufferDataEXT
glClearNamedBufferSubDataEXT
glCompressedTextureSubImage1DEXT
glCompressedTextureSubImage2DEXT
glCompressedTextureSubImage3DEXT
glCopyTextureSubImage1DEXT
glCopyTextureSubImage2DEXT
glCopyTextureSubImage3DEXT
glDisableVertexArrayAttribEXT
glEnableVertexArrayAttribEXT
glFlushMappedNamedBufferRangeEXT
glGenerateTextureMipmapEXT
glGetCompressedTextureImageEXT
glGetDoublei_vEXT
glGetFloati_vEXT
glGetFramebufferParameterivEXT
glGetNamedBufferParameterivEXT
glGetNamedBufferPointervEXT
glGetNamedBufferSubDataEXT
glGetNamedFramebufferAttachmentParameterivEXT
glGetNamedFramebufferParameterivEXT
glGetNamedRenderbufferParameterivEXT
glGetTextureImageEXT
glGetTextureLevelParameterfvEXT
glGetTextureLevelParameterivEXT
glGetTextureParameterIivEXT
glGetTextureParameterIuivEXT
glGetTextureParameterfvEXT
glGetTextureParameterivEXT
glMapNamedBufferEXT
glMapNamedBufferRangeEXT
glNamedBufferDataEXT
glNamedBufferStorageEXT
glNamedBufferSubDataEXT
glNamedFramebufferParameteriEXT
glNamedFramebufferRenderbufferEXT
glNamedFramebufferTextureEXT
glNamedFramebufferTextureLayerEXT
glNamedRenderbufferStorageEXT
glNamedRenderbufferStorageMultisampleEXT
glProgramUniform1dEXT
glProgramUniform1dvEXT
glProgramUniform2dEXT
glProgramUniform2dvEXT
glProgramUniform3dEXT
glProgramUniform3dvEXT
glProgramUniform4dEXT
glProgramUniform4dvEXT
glProgramUniformMatrix2dvEXT
glProgramUniformMatrix2x3dvEXT
glProgramUniformMatrix2x4dvEXT
glProgramUniformMatrix3dvEXT
glProgramUniformMatrix3x2dvEXT
glProgramUniformMatrix3x4dvEXT
glProgramUniformMatrix4dvEXT
glProgramUniformMatrix4x2dvEXT
glProgramUniformMatrix4x3dvEXT
glTextureBufferEXT
glTextureBufferRangeEXT
glTextureParameterIivEXT
glTextureParameterIuivEXT
glTextureParameterfEXT
glTextureParameterfvEXT
glTextureParameteriEXT
glTextureParameterivEXT
glTextureStorage1DEXT
glTextureStorage2DEXT
glTextureStorage2DMultisampleEXT
glTextureStorage3DEXT
glTextureStorage3DMultisampleEXT
glTextureSubImage1DEXT
glTextureSubImage2DEXT
glTextureSubImage3DEXT
glUnmapNamedBufferEXT
GL_EXT_draw_range_elements
glDrawRangeElementsEXT
GL_EXT_framebuffer_blit
glBlitFramebufferEXT
glRenderbufferStorageMultisampleEXT
glBindFramebufferEXT
glBindRenderbufferEXT
glCheckFramebufferStatusEXT
glDeleteFramebuffersEXT
glDeleteRenderbuffersEXT
glFramebufferRenderbufferEXT
glFramebufferTexture1DEXT
glFramebufferTexture2DEXT
glFramebufferTexture3DEXT
glGenFramebuffersEXT
glGenRenderbuffersEXT
glGenerateMipmapEXT
glGetFramebufferAttachmentParameterivEXT
glGetRenderbufferParameterivEXT
glIsFramebufferEXT
glIsRenderbufferEXT
glRenderbufferStorageEXT
GL_EXT_gpu_shader4
glBindFragDataLocationEXT
glGetFragDataLocationEXT
glGetUniformuivEXT
glUniform1uiEXT
glUniform1uivEXT
glUniform2uiEXT
glUniform2uivEXT
glUniform3uiEXT
glUniform3uivEXT
glUniform4uiEXT
glUniform4uivEXT
GL_EXT_point_parameters
glPointParameterfEXT
glPointParameterfvEXT
GL_EXT_polygon_offset
glPolygonOffsetEXT
GL_EXT_provoking_vertex
glProvokingVertexEXT
GL_EXT_shader_image_load_store
glBindImageTextureEXT
glMemoryBarrierEXT
GL_EXT_subtexture
glTexSubImage1DEXT
glTexSubImage2DEXT
GL_EXT_texture3D
glTexImage3DEXT
glTexSubImage3DEXT
glFramebufferTextureLayerEXT
GL_EXT_texture_buffer_object
glTexBufferEXT
glGetTexParameterIivEXT
glGetTexParameterIuivEXT
glTexParameterIivEXT
glTexParameterIuivEXT
GL_EXT_texture_object
glBindTextureEXT
glDeleteTexturesEXT
glGenTexturesEXT
glIsTextureEXT
GL_EXT_timer_query
GL_EXT_transform_feedback
glBeginTransformFeedbackEXT
glBindBufferBaseEXT
glBindBufferRangeEXT
glEndTransformFeedbackEXT
glGetTransformFeedbackVaryingEXT
glTransformFeedbackVaryingsEXT
GL_EXT_vertex_array
glDrawArraysEXT
glGetPointervEXT
GL_EXT_vertex_attrib_64bit
glGetVertexAttribLdvEXT
glVertexAttribL1dEXT
glVertexAttribL1dvEXT
glVertexAttribL2dEXT
glVertexAttribL2dvEXT
glVertexAttribL3dEXT
glVertexAttribL3dvEXT
glVertexAttribL4dEXT
glVertexAttribL4dvEXT
glVertexAttribLPointerEXT
GL_NV_geometry_program4
GL_NV_vertex_program4
glGetVertexAttribIivEXT
glGetVertexAttribIuivEXT
glVertexAttribI1iEXT
glVertexAttribI1ivEXT
glVertexAttribI1uiEXT
glVertexAttribI1uivEXT
glVertexAttribI2iEXT
glVertexAttribI2ivEXT
glVertexAttribI2uiEXT
glVertexAttribI2uivEXT
glVertexAttribI3iEXT
glVertexAttribI3ivEXT
glVertexAttribI3uiEXT
glVertexAttribI3uivEXT
glVertexAttribI4bvEXT
glVertexAttribI4iEXT
glVertexAttribI4ivEXT
glVertexAttribI4svEXT
glVertexAttribI4ubvEXT
glVertexAttribI4uiEXT
glVertexAttribI4uivEXT
glVertexAttribI4usvEXT
glVertexAttribIPointerEXT
GL_OES_single_precision
glClearDepthfOES
glDepthRangefOES
glBlendBarrier
glPrimitiveBoundingBox
GL_EXT_base_instance
glDrawArraysInstancedBaseInstanceEXT
glDrawElementsInstancedBaseInstanceEXT
glDrawElementsInstancedBaseVertexBaseInstanceEXT
glBindFragDataLocationIndexedEXT
glGetFragDataIndexEXT
glGetProgramResourceLocationIndexEXT
GL_EXT_buffer_storage
glBufferStorageEXT
GL_EXT_clear_texture
glClearTexImageEXT
glClearTexSubImageEXT
GL_EXT_clip_control
glClipControlEXT
GL_EXT_copy_image
glCopyImageSubDataEXT
GL_EXT_draw_buffers_indexed
glBlendEquationSeparateiEXT
glBlendEquationiEXT
glBlendFuncSeparateiEXT
glBlendFunciEXT
glColorMaskiEXT
glDisableiEXT
glEnableiEXT
glIsEnablediEXT
GL_EXT_draw_elements_base_vertex
glDrawElementsBaseVertexEXT
glDrawElementsInstancedBaseVertexEXT
glDrawRangeElementsBaseVertexEXT
glMultiDrawElementsBaseVertexEXT
GL_EXT_draw_transform_feedback
glDrawTransformFeedbackEXT
glDrawTransformFeedbackInstancedEXT
glVertexAttribDivisorEXT
GL_EXT_multi_draw_indirect
glMultiDrawArraysIndirectEXT
glMultiDrawElementsIndirectEXT
GL_EXT_multiview_draw_buffers
glGetIntegeri_vEXT
GL_EXT_primitive_bounding_box
glPrimitiveBoundingBoxEXT
GL_EXT_tessellation_shader
glPatchParameteriEXT
GL_EXT_texture_border_clamp
glGetSamplerParameterIivEXT
glGetSamplerParameterIuivEXT
glSamplerParameterIivEXT
glSamplerParameterIuivEXT
GL_EXT_texture_buffer
glTexBufferRangeEXT
glTexStorage1DEXT
GL_EXT_texture_view
glTextureViewEXT
glGetGraphicsResetStatusKHR
glGetnUniformfvKHR
glGetnUniformivKHR
glGetnUniformuivKHR
glReadnPixelsKHR
GL_OES_copy_image
glCopyImageSubDataOES
GL_OES_draw_buffers_indexed
glBlendEquationSeparateiOES
glBlendEquationiOES
glBlendFuncSeparateiOES
glBlendFunciOES
glColorMaskiOES
glDisableiOES
glEnableiOES
glIsEnablediOES
GL_OES_draw_elements_base_vertex
glDrawElementsBaseVertexOES
glDrawElementsInstancedBaseVertexOES
glDrawRangeElementsBaseVertexOES
glFramebufferTextureOES
GL_OES_primitive_bounding_box
glPrimitiveBoundingBoxOES
GL_OES_sample_shading
glMinSampleShadingOES
GL_OES_tessellation_shader
glPatchParameteriOES
glCompressedTexImage3DOES
glCompressedTexSubImage3DOES
glCopyTexSubImage3DOES
glFramebufferTexture3DOES
glTexImage3DOES
glTexSubImage3DOES
GL_OES_texture_border_clamp
glGetSamplerParameterIivOES
glGetSamplerParameterIuivOES
glGetTexParameterIivOES
glGetTexParameterIuivOES
glSamplerParameterIivOES
glSamplerParameterIuivOES
glTexParameterIivOES
glTexParameterIuivOES
GL_OES_texture_buffer
glTexBufferOES
glTexBufferRangeOES
GL_OES_texture_view
glTextureViewOES
GL_OES_viewport_array
glGetFloati_vOES
glScissorArrayvOES
glScissorIndexedOES
glScissorIndexedvOES
glViewportArrayvOES
glViewportIndexedfOES
glViewportIndexedfvOES
glBlendEquationEXT
GL_EXT_debug_label
glGetObjectLabelEXT
glDrawArraysInstancedEXT
glDrawElementsInstancedEXT
GL_EXT_multi_draw_arrays
glMultiDrawArraysEXT
glMultiDrawElementsEXT
GL_EXT_separate_shader_objects
glActiveShaderProgramEXT
glBindProgramPipelineEXT
glCreateShaderProgramvEXT
glDeleteProgramPipelinesEXT
glGenProgramPipelinesEXT
glGetProgramPipelineInfoLogEXT
glGetProgramPipelineivEXT
glIsProgramPipelineEXT
glProgramParameteriEXT
glProgramUniform1fEXT
glProgramUniform1fvEXT
glProgramUniform1iEXT
glProgramUniform1ivEXT
glProgramUniform1uiEXT
glProgramUniform1uivEXT
glProgramUniform2fEXT
glProgramUniform2fvEXT
glProgramUniform2iEXT
glProgramUniform2ivEXT
glProgramUniform2uiEXT
glProgramUniform2uivEXT
glProgramUniform3fEXT
glProgramUniform3fvEXT
glProgramUniform3iEXT
glProgramUniform3ivEXT
glProgramUniform3uiEXT
glProgramUniform3uivEXT
glProgramUniform4fEXT
glProgramUniform4fvEXT
glProgramUniform4iEXT
glProgramUniform4ivEXT
glProgramUniform4uiEXT
glProgramUniform4uivEXT
glProgramUniformMatrix2fvEXT
glProgramUniformMatrix2x3fvEXT
glProgramUniformMatrix2x4fvEXT
glProgramUniformMatrix3fvEXT
glProgramUniformMatrix3x2fvEXT
glProgramUniformMatrix3x4fvEXT
glProgramUniformMatrix4fvEXT
glProgramUniformMatrix4x2fvEXT
glProgramUniformMatrix4x3fvEXT
glUseProgramStagesEXT
glValidateProgramPipelineEXT
glCoverageModulationNV
glCoverFillPathInstancedNV
glCoverFillPathNV
glCoverStrokePathInstancedNV
glCoverStrokePathNV
glDeletePathsNV
glGenPathsNV
glGetPathParameterfvNV
glGetPathParameterivNV
glIsPathNV
glMatrixLoadfEXT
glPathCommandsNV
glPathParameterfNV
glPathParameteriNV
glPathStencilFuncNV
glProgramPathFragmentInputGenNV
glStencilFillPathInstancedNV
glStencilFillPathNV
glStencilStrokePathInstancedNV
glStencilStrokePathNV
glStencilThenCoverFillPathInstancedNV
glStencilThenCoverFillPathNV
glStencilThenCoverStrokePathInstancedNV
glStencilThenCoverStrokePathNV
readPixels
../../third_party/angle/src/libANGLE/renderer/gl/FramebufferGL.cpp
checkStatus
GL framebuffer returned incomplete.
readPixelsRowByRow
readPixelsAllAtOnce
../../third_party/angle/src/libANGLE/renderer/null/FramebufferNULL.cpp
Unable to allocate internal buffer storage.
 es\n
// BEGIN: Generated code for built-in function emulation\n\n
#if defined(GL_FRAGMENT_PRECISION_HIGH)\n
#define emu_precision highp\n
#else\n
#define emu_precision mediump\n
#endif\n\n
// END: Generated code for built-in function emulation\n\n
layout (local_size_x=
, local_size_y=
, local_size_z=
) in;\n
#extension GL_NV_shader_framebuffer_fetch : 
#extension GL_NV_draw_buffers : 
#extension GL_NV_viewport_array2 : require\n
#ifdef GL_EXT_geometry_shader\n
#extension GL_EXT_geometry_shader : 
#elif defined GL_OES_geometry_shader\n
#extension GL_OES_geometry_shader : 
#error "No geometry shader extensions available." // Only generate this if the extension is "required"\n
#endif\n
#extension 
invariant gl_Position;\n
#define emu_precision\n\n
gl_SecondaryFragColorEXT
gl_SecondaryFragDataEXT
out vec4 webgl_FragColor;\n
out vec4 webgl_FragData[gl_MaxDrawBuffers];\n
out vec4 angle_SecondaryFragColor;\n
out vec4 angle_SecondaryFragData[
#extension GL_ARB_shader_texture_lod : 
#extension GL_ARB_draw_buffers : 
#extension GL_ARB_geometry_shader4 : 
#extension GL_ARB_explicit_attrib_location : require\n
#extension GL_ARB_gpu_shader5 : enable\n
 : enable\n
 : require\n
invariant 
#version 450 core\n
\nlayout(@@ DEFAULT-UNIFORMS-SET-BINDING @@) uniform defaultUniforms\n{\n
layout(location = 0) out vec4 webgl_FragColor;\n
layout(location = 0) out vec4 webgl_FragData[gl_MaxDrawBuffers];\n
negViewportYScale
near
diff
dummyPacker
ANGLEUniformBlock
ANGLEUniforms
ANGLEDepthRangeParams
viewport
halfRenderAreaHeight
viewportYScale
padding
depthRange
gl_DepthRange
ANGLEPosition
ANGLE_ENABLE_LINE_SEGMENT_RASTERIZATION
flippedPointCoord
flippedFragCoord
Undefined function '
)' used in the following call chain:
Recursive function call in the following call chain:
gl_in
// BEGIN: Generated code for array bounds clamping\n\n
// END: Generated code for array bounds clamping\n\n
int webgl_int_clamp(int value, int minValue, int maxValue) { return ((value < minValue) ? minValue : ((value > maxValue) ? maxValue : value)); }\n\n
_emu
' : 
illegal vector field selection
vector field selection out of range
illegal - vector component fields not from the same set
cannot convert from '
' to '
wrong operand type - no operation '
' exists that takes an operand of type 
 (or there is no acceptable conversion)
wrong operand types - no operation '
' exists that takes a left-hand operand of type '
' and a right operand of type '
' (or there is no acceptable conversion)
illegal type for precision qualifier
No precision specified for (float)
No precision specified (int)
No precision specified
 l-value of swizzle cannot have duplicate components
can't modify a readonly variable
 l-value required
can't modify a const
can't modify an attribute
can't modify an input
can't modify a uniform
can't modify a varying
can't modify gl_FragCoord
can't modify gl_FrontFacing
can't modify gl_PointCoord
can't modify gl_NumWorkGroups
can't modify gl_WorkGroupSize
can't modify gl_WorkGroupID
can't modify gl_LocalInvocationID
can't modify gl_GlobalInvocationID
can't modify gl_LocalInvocationIndex
can't modify gl_ViewID_OVR
can't modify work group size variable
can't modify any member in gl_in
can't modify gl_PrimitiveIDIn
can't modify gl_InvocationID
can't modify gl_PrimitiveID in a fragment shader
can't modify gl_Layer in a fragment shader
can't modify void
can't modify a variable with type 
l-value required
constant expression required
integer expression required
only allowed at global scope
reserved built-in name
identifiers containing two consecutive underscores (__) are reserved as possible future keywords
constructor
constructor does not have any arguments
cannot convert a variable with type 
cannot convert a variable with writeonly
cannot convert a void
array constructor needs one argument per array element
constructing from a non-dereferenced array
Array constructor argument has an incorrect type
Number of constructor parameters does not match the number of structure fields
Structure constructor arguments do not match structure fields
a struct cannot be used as a constructor argument for this type
constructing matrix from matrix can only take one argument
not enough data provided for construction
too many arguments
illegal use of type 'void'
boolean expression expected
 (structure contains a sampler)
location
location must only be specified for a single input or output variable
invalid layout qualifier: only valid on program inputs and outputs
invalid layout qualifier: only valid on shader inputs, outputs, and uniforms
std430
The std430 layout is supported only for shader storage blocks.
opaque types cannot be output parameters
array size must be a constant integer expression
array size must be non-negative
array size must be greater than zero
array size too large
cannot declare arrays of this qualifier
cannot declare arrays of arrays
cannot declare arrays of structs of this qualifier
structures containing arrays may not be declared constant since they cannot be initialized
variables with qualifier 'const' must be initialized
implicitly sized arrays need to be initialized
index
If index layout qualifier is specified for a fragment output, location must also be specified.
gl_LastFragData
gl_MaxDrawBuffers
redeclaration of gl_LastFragData as an array of arrays
redeclaration of gl_LastFragData with size != gl_MaxDrawBuffers
redefinition
layout
Shared memory declarations cannot have layout specified
layout qualifier only valid for interface blocks
invalid layout qualifier combination
storage qualifier supported in GLSL ES 3.00 and above only
Can only be highp
location must not be set for atomic_uint
no binding specified
empty array declaration needs to specify a size
cannot be used with a structure
cannot declare buffer variables at global scope(outside a block)
s must be uniform
cannot be used with a yuvCscStandardEXT
internal image format requires a floating image type
internal image format requires an integer image type
internal image format requires an unsigned image type
No image internal format specified
layout qualifier
unrecognized token
Except for images with the r32f, r32i and r32ui format qualifiers, image variables must be qualified readonly and/or writeonly
invalid layout qualifier: not supported
invalid layout qualifier: only valid when used with 'in' in a compute shader global layout declaration
invalid layout qualifier: only valid when used with images
invalid layout qualifier: only valid when used with a fragment shader output in ESSL version >= 3.00 and EXT_blend_func_extended is enabled
binding
invalid layout qualifier: only valid when used with opaque types or blocks
offset
invalid layout qualifier: only valid when used with atomic counters
image binding greater than gl_MaxImageUnits
sampler binding greater than maximum texture units
uniform block binding greater than MAX_UNIFORM_BUFFER_BINDINGS
shader storage block binding greater than MAX_SHADER_STORAGE_BUFFER_BINDINGS
atomic counter binding greater than gl_MaxAtomicCounterBindings
Uniform location out of range
invalid layout qualifier: only valid on program outputs
Writeonly value cannot be passed for 'in' or 'inout' parameters.
assign
Constant value cannot be passed for 'out' or 'inout' parameters.
invariant
Cannot be qualified as invariant.
undeclared identifier
variable expected
gl_WorkGroupSize
It is an error to use gl_WorkGroupSize before declaring the local group size
assigning non-constant to '
global variable initializers must be constant expressions
global variable initializers should be constant expressions (uniforms and globals are allowed in global initializers for legacy compatibility)
 cannot initialize this type of qualifier 
first-class array
cannot be bool or int
'in' can be only used to specify the local group size
cannot be bool
cannot be array
cannot be matrix
must use 'flat' interpolation here
cannot be an array of structures
cannot be a structure containing an array
cannot be a structure containing a structure
cannot be a structure containing a bool
Local variables can only use the const storage qualifier.
Only allowed with shader storage blocks, variables declared within shader storage blocks and variables declared as image types.
readonly
writeonly
coherent
restrict
volatile
Offset overlapping
Missing a valid input primitive declaration before declaring an unsized array input
Geometry shader input variable must be declared as an array
Expected invariant
invariant varying
undeclared identifier declared as invariant
invariant declaration specifies qualifier
invariant declaration specifies precision
'layout'
invariant declaration specifies layout
Requires both binding and offset
highp
precision is not supported in fragment shader
illegal type argument for default precision qualifier
Array size or input primitive declaration doesn't match the size of earlier sized array inputs.
max_vertices can only be declared in 'out' layout in a geometry shader
invalid primitive type for 'in' layout
primitive doesn't match earlier input primitive declaration
invocations contradicts to the earlier declaration
invocations can only be declared in 'in' layout in a geometry shader
invalid primitive type for 'out' layout
primitive doesn't match earlier output primitive declaration
max_vertices contradicts to the earlier declaration
Error during layout qualifier parsing.
Work group size does not match the previous declaration
in type qualifier supported in GLSL ES 3.10 only
No local work group size specified
gl_MaxComputeWorkGroupSize
invalid value: Value must be at least 1 and no greater than 
out type qualifier supported in GLSL ES 3.10 only
Number of views does not match the previous declaration
No num_views specified
num_views greater than the value of GL_MAX_VIEWS_OVR
invalid qualifier: global layout can only be set for blocks
layout qualifiers supported in GLSL ES 3.00 and above
function parameter array must be sized at compile time
function
duplicate function prototype declarations are not allowed
local function prototype declarations are not allowed
function does not return a value:
function already has a body
Function parameter type cannot be a structure definition
Name of a built-in function cannot be redeclared as function
built-in functions cannot be redefined
function must have the same return type in all of its declarations
function must have the same parameter qualifiers in all of its declarations
redefinition of a function
function cannot take any parameter(s)
main function cannot return a value
no qualifiers allowed for function return
s can't be function return values
structures containing arrays can't be function return values
array constructor supported in GLSL ES 3.00 and above only
constructor can't be a structure definition
cannot construct this type
function parameter array must specify a size
implicitly sized array constructor must have at least one argument
implicitly sized array of arrays constructor argument is not an array
implicitly sized array of arrays constructor argument dimensionality is too low
invalid qualifier: interface blocks must be uniform in version lower than GLSL ES 3.10
invalid qualifier: interface blocks must be uniform or buffer
invalid qualifier on interface block member
unsupported type - 
 types are not allowed in interface blocks
invalid qualifier on shader storage block member
invalid qualifier on uniform block member
invalid layout qualifier: cannot be used here
extraneous layout qualifier: only has an effect on matrix types
array members of interface blocks must specify a size
redefinition of an interface block name
redefinition of an interface block member name
redefinition of an interface block instance name
struct
Embedded struct definitions are not allowed
Struct nesting
Reference of struct type 
 exceeds maximum allowed nesting level of 
 left of '[' is not of type array, matrix, or vector 
expression
missing input primitive declaration before indexing gl_in.
array indexes for uniform block arrays and shader storage block arrays must be constant integral expressions
array indexes for fragment outputs must be constant integral expressions
array index for gl_FragData must be constant zero
index expression is negative
array index for gl_FragData must be zero when GL_EXT_draw_buffers is disabled
array index out of range
matrix field selection out of range
cannot apply dot operator to an array
Internal Error
structure has no fields
 no such field in structure
interface block has no fields
 no such field in interface block
 field selection requires structure or vector on left hand side
 field selection requires structure, vector, or interface block on left hand side
shared
Only std140 layout is allowed in WebGL
packed
std140
row_major
column_major
invalid layout qualifier: location requires an argument
rgba32f
rgba16f
r32f
rgba8
rgba8_snorm
rgba32i
rgba16i
rgba8i
r32i
rgba32ui
rgba16ui
rgba8ui
r32ui
points
lines
lines_adjacency
triangles
triangles_adjacency
line_strip
triangle_strip
invalid layout qualifier
out of range: 
 must be positive
out of range: num_views must be positive
out of range: invocations must be in the range of [1, MAX_GEOMETRY_SHADER_INVOCATIONS_OES]
out of range: max_vertices must be in the range of [0, gl_MaxGeometryOutputVertices]
out of range: index layout qualifier can only be 0 or 1
out of range: location must be non-negative
out of range: binding must be non-negative
out of range: offset must be non-negative
local_size_x
local_size_y
local_size_z
num_views
invocations
max_vertices
storage qualifier isn't supported in compute shaders
inout
invalid qualifier: can be only used with function parameters
duplicate field name in structure
redefinition of a struct
invalid qualifier on struct member
disallowed type in struct
array members of structs must specify a size
switch
init-expression in a switch statement must be a scalar integer
case
case labels need to be inside switch statements
case label must have a condition
case label must be a scalar integer
case label must be constant
default labels need to be inside switch statements
Invalid operation for variables with an opaque type
Invalid operation for variables with writeonly
Invalid operation for structs
Invalid operation for interface blocks
array / non-array mismatch
Invalid operation for arrays
array size mismatch
undefined operation for structs containing arrays
undefined operation for structs containing samplers
dimension mismatch
comparison operator only defined for scalars
sequence operator is not allowed for void, arrays, or structs containing arrays
continue statement only allowed in loops
break statement only allowed in loops and switch statements
return
non-void function must return a value
discard supported in fragment shaders only
void function cannot return a value
function return is not matching type:
Texture component must be a constant expression
Component must be in the range [0;3]
Texture offset must be a constant expression
Texture offset value out of valid range
The value passed to the mem argument of an atomic memory function does not correspond to a buffer or shared variable.
'imageStore' cannot be used with images qualified as 'readonly'
'imageLoad' cannot be used with images qualified as 'writeonly'
Function call discards the 'readonly' qualifier from image
Function call discards the 'writeonly' qualifier from image
Function call discards the 'coherent' qualifier from image
Function call discards the 'volatile' qualifier from image
length
invalid method
method takes no parameters
length can only be called on arrays
missing input primitive declaration before calling length on gl_in
function name expected
no matching overloaded function found
mismatching ternary operator operand types '
 and '
ternary operator is not allowed for opaque types
ternary operator is not allowed for variables with writeonly
ternary operator is not allowed for structures or arrays
ternary operator is not allowed for interface blocks
ternary operator is not allowed for void
extension is not supported
extension is disabled
extension is being used
unknown matrix packing
unknown block storage
Temporary
Global
const
buffer
InstanceID
VertexID
Position
PointSize
FragCoord
FrontFacing
PointCoord
FragColor
FragData
FragDepth
SecondaryFragColorEXT
SecondaryFragDataEXT
ViewIDOVR
ViewportIndex
Layer
LastFragColor
LastFragData
smooth out
smooth centroid out
flat out
smooth in
flat in
smooth centroid in
centroid
flat
smooth
NumWorkGroups
WorkGroupSize
WorkGroupID
LocalInvocationID
GlobalInvocationID
LocalInvocationIndex
unknown qualifier
dimension out of bounds
unknown internal image format
mediump
lowp
image
Loop index cannot be statically assigned to within the body of the loop
Index expression must be constant
while
This type of loop is not allowed
Missing init declaration
Invalid init declaration
Invalid type for loop index
Loop index cannot be initialized with non-constant expression
Missing condition
Invalid condition
Expected loop index
Invalid relational operator
Loop index cannot be compared with non-constant expression
Missing expression
Invalid expression
Invalid operator
Loop index cannot be modified by non-constant expression
gl_FragDepth
gl_FrontFacing
gl_GlobalInvocationID
gl_InstanceID
gl_InvocationID
gl_LastFragColor
gl_LastFragColorARM
gl_Layer
gl_LocalInvocationID
gl_LocalInvocationIndex
gl_NumWorkGroups
gl_PrimitiveID
gl_PrimitiveIDIn
gl_VertexID
gl_ViewID_OVR
gl_ViewportIndex
gl_WorkGroupID
gl_DepthRangeParameters
gl_MaxVertexAttribs
gl_MaxVertexUniformVectors
gl_MaxVertexTextureImageUnits
gl_MaxCombinedTextureImageUnits
gl_MaxTextureImageUnits
gl_MaxFragmentUniformVectors
gl_MaxVaryingVectors
gl_MaxDualSourceDrawBuffersEXT
gl_MaxVertexOutputVectors
gl_MaxFragmentInputVectors
gl_MinProgramTexelOffset
gl_MaxProgramTexelOffset
gl_MaxImageUnits
gl_MaxVertexImageUniforms
gl_MaxFragmentImageUniforms
gl_MaxComputeImageUniforms
gl_MaxCombinedImageUniforms
gl_MaxCombinedShaderOutputResources
gl_MaxComputeWorkGroupCount
gl_MaxComputeUniformComponents
gl_MaxComputeTextureImageUnits
gl_MaxComputeAtomicCounters
gl_MaxComputeAtomicCounterBuffers
gl_MaxVertexAtomicCounters
gl_MaxFragmentAtomicCounters
gl_MaxCombinedAtomicCounters
gl_MaxAtomicCounterBindings
gl_MaxVertexAtomicCounterBuffers
gl_MaxFragmentAtomicCounterBuffers
gl_MaxCombinedAtomicCounterBuffers
gl_MaxAtomicCounterBufferSize
gl_MaxGeometryInputComponents
gl_MaxGeometryOutputComponents
gl_MaxGeometryImageUniforms
gl_MaxGeometryTextureImageUnits
gl_MaxGeometryOutputVertices
gl_MaxGeometryTotalOutputComponents
gl_MaxGeometryUniformComponents
gl_MaxGeometryAtomicCounters
gl_MaxGeometryAtomicCounterBuffers
gl_FragDepthEXT
gl_PerVertex
ldexp
frexp
frexp(3B3C
findMSB
findLSB
bitCount
atomicOr
imageSize
imageLoad
atomicAdd
atomicXor
atomicMin
atomicMax
atomicAnd
uaddCarry
uaddCarry(2D2D2D
uaddCarry(3D3D3D
imageStore
texelFetch(0V2C0C
texelFetch
usubBorrow(3D3D3D
usubBorrow
texelFetch(0O1C0C
imageStore(0p2C3C
usubBorrow(1D1D1D
imageStore(0l2C3B
imageStore(0j2C3C
texelFetch(0P2C0C
imageStore(0n2C3D
usubBorrow(0D0D0D
imageStore(0h1C3D
textureSize
packSnorm4x8
packUnorm4x8
imulExtended(2C2C2C2C
imulExtended
umulExtended(0D0D0D0D
umulExtended
umulExtended(3D3D3D3D
umulExtended(2D2D2D2D
umulExtended(1D1D1D1D
imulExtended(3C3C3C3C
imulExtended(0C0C0C0C
imulExtended(1C1C1C1C
memoryBarrier
atomicCounter
textureGather
textureGather(0Z2B0C
textureGather(0T2B0C
textureGather(0S2B0C
textureGather(0J2B0C
unpackSnorm4x8
unpackUnorm4x8
atomicExchange
atomicCompSwap
atomicCompSwap(0D0D0D
bitfieldInsert(3D3D0C0C
bitfieldInsert
bitfieldInsert(3C3C0C0C
bitfieldInsert(1C1C0C0C
bitfieldInsert(1D1D0C0C
bitfieldInsert(0D0D0C0C
bitfieldInsert(2D2D0C0C
bitfieldInsert(0C0C0C0C
bitfieldInsert(2C2C0C0C
bitfieldReverse
bitfieldExtract
bitfieldExtract(0D0C0C
bitfieldExtract(3C0C0C
bitfieldExtract(1C0C0C
memoryBarrierImage
memoryBarrierBuffer
textureGatherOffset(0W1B1C
textureGatherOffset
textureGatherOffset(0T2B1C
textureGatherOffset(0T2B1C0C
textureGatherOffset(0K2B1C0C
textureGatherOffset(0H1B1C0C
textureGatherOffset(0Z2B1C0C
textureGatherOffset(0e2B0B1C
textureGatherOffset(0Q1B1C0C
textureGatherOffset(0c1B0B1C
textureGatherOffset(0W1B1C0C
atomicCounterIncrement
atomicCounterDecrement
memoryBarrierAtomicCounter
barrier
groupMemoryBarrier
memoryBarrierShared
EmitVertex
EndPrimitive
mix(0B0B0E
mix(1B1B1E
tanh
sinh
sign
cosh
modf
asinh
isnan
round
trunc
isinf
atanh
acosh
equal
clamp(2C2C2C
clamp
clamp(1C0C0C
clamp(3C0C0C
clamp(1C1C1C
clamp(1D1D1D
clamp(3D0D0D
clamp(0D0D0D
inverse
lessThan
notEqual
roundEven
transpose
yuv_2_rgb
rgb_2_yuv
textureLod
texelFetch(0Z2C0C
textureLod(0W1B0B
textureLod(0S2B0B
textureLod(0J2B0B
texelFetch(0I2C0C
texelFetch(0K2C0C
texelFetch(0X2C0C
textureLod(0Y2B0B
texelFetch(0Q1C0C
texelFetch(0L1C0C
textureLod(0Q1B0B
texelFetch(0T2C0C
texelFetch(0H1C0C
textureLod(0Z2B0B
determinant
greaterThan
textureProj
textureGrad(0I2B2B2B
textureGrad
textureGrad(0X2B2B2B
textureGrad(0e3B1B1B
textureGrad(0H1B1B1B
textureGrad(0J2B2B2B
textureGrad(0Q1B1B1B
textureGrad(0R2B2B2B
textureGrad(0c2B1B1B
textureGrad(0Y2B2B2B
textureGrad(0W1B1B1B
textureGrad(0d3B2B2B
textureGrad(0T2B1B1B
textureGrad(0S2B2B2B
textureGrad(0Z2B1B1B
textureGrad(0K2B1B1B
packHalf2x16
outerProduct
packSnorm2x16
packUnorm2x16
lessThanEqual
textureOffset
textureOffset(0X2B2C
intBitsToFloat
floatBitsToInt
unpackHalf2x16
matrixCompMult
textureProjLod
textureProjLod(0Q3B0B
textureProjLod(0H3B0B
textureProjLod(0Q2B0B
textureProjLod(0I3B0B
floatBitsToUint
uintBitsToFloat
unpackSnorm2x16
unpackUnorm2x16
textureProjGrad(0Q2B1B1B
textureProjGrad
textureProjGrad(0X3B2B2B
textureProjGrad(0W2B1B1B
textureProjGrad(0H3B1B1B
textureProjGrad(0I3B2B2B
textureProjGrad(0R3B2B2B
textureProjGrad(0H2B1B1B
textureProjGrad(0Q3B1B1B
textureProjGrad(0W3B1B1B
textureProjGrad(0c3B1B1B
greaterThanEqual
texelFetchOffset(0I2C0C2C
texelFetchOffset
textureLodOffset(0c2B0B1C
textureLodOffset
texelFetchOffset(0X2C0C2C
textureLodOffset(0Z2B0B1C
texelFetchOffset(0K2C0C1C
texelFetchOffset(0H1C0C1C
texelFetchOffset(0Z2C0C1C
texelFetchOffset(0W1C0C1C
texelFetchOffset(0R2C0C2C
texelFetchOffset(0Q1C0C1C
textureLodOffset(0H1B0B1C
textureLodOffset(0Q1B0B1C
textureLodOffset(0K2B0B1C
textureLodOffset(0T2B0B1C
textureLodOffset(0W1B0B1C
textureLodOffset(0X2B0B2C
textureLodOffset(0I2B0B2C
textureLodOffset(0R2B0B2C
texelFetchOffset(0T2C0C1C
textureProjOffset
textureProjOffset(0H2B1C
textureProjOffset(0Q3B1C
textureProjOffset(0Q2B1C
textureProjOffset(0H3B1C
textureProjOffset(0W3B1C
textureProjOffset(0X3B2C
textureGradOffset(0W1B1B1B1C
textureGradOffset
textureGradOffset(0K2B1B1B1C
textureGradOffset(0T2B1B1B1C
textureGradOffset(0e3B1B1B1C
textureGradOffset(0I2B2B2B2C
textureGradOffset(0R2B2B2B2C
textureGradOffset(0Q1B1B1B1C
textureGradOffset(0X2B2B2B2C
textureGradOffset(0Z2B1B1B1C
textureGradOffset(0H1B1B1B1C
textureGradOffset(0c2B1B1B1C
textureProjLodOffset(0W3B0B1C
textureProjLodOffset
textureProjLodOffset(0R3B0B2C
textureProjLodOffset(0W2B0B1C
textureProjLodOffset(0H2B0B1C
textureProjLodOffset(0I3B0B2C
textureProjLodOffset(0H3B0B1C
textureProjLodOffset(0Q3B0B1C
textureProjLodOffset(0X3B0B2C
textureProjLodOffset(0Q2B0B1C
textureProjLodOffset(0c3B0B1C
textureProjGradOffset(0c3B1B1B1C
textureProjGradOffset
textureProjGradOffset(0H3B1B1B1C
textureProjGradOffset(0X3B2B2B2C
textureProjGradOffset(0I3B2B2B2C
textureProjGradOffset(0Q2B1B1B1C
textureProjGradOffset(0W2B1B1B1C
textureProjGradOffset(0R3B2B2B2C
textureProjGradOffset(0Q3B1B1B1C
textureProjGradOffset(0H2B1B1B1C
textureProjGradOffset(0W3B1B1B1C
dFdy
dFdx
fwidth
texture(0c2B0B
texture(0Q1B0B
texture(0d3B0B
textureProj(0Q2B0B
textureProj(0R3B0B
textureProj(0X3B0B
textureOffset(0X2B2C0B
textureOffset(0Z2B1C0B
textureOffset(0Q1B1C0B
textureOffset(0T2B1C0B
textureOffset(0H1B1C0B
textureOffset(0I2B2C0B
textureOffset(0W1B1C0B
textureOffset(0K2B1C0B
textureOffset(0R2B2C0B
textureOffset(0c2B1C0B
textureProjOffset(0Q3B1C0B
textureProjOffset(0W2B1C0B
textureProjOffset(0W3B1C0B
textureProjOffset(0c3B1C0B
textureProjOffset(0R3B2C0B
textureProjOffset(0X3B2C0B
textureProjOffset(0Q2B1C0B
textureProjOffset(0H3B1C0B
textureProjOffset(0I3B2C0B
textureProjOffset(0H2B1C0B
textureCube
texture2DRect
texture2DProj
texture2DGradEXT(0H1B1B1B
texture2DGradEXT
texture2DRectProj
textureCubeGradEXT(0J2B2B2B
textureCubeGradEXT
texture2DProjGradEXT(0H3B1B1B
texture2DProjGradEXT
texture2DProjGradEXT(0H2B1B1B
texture2DProj(0H2B0B
texture2DLodEXT(0H1B0B
texture2DLodEXT
textureCubeLodEXT
texture2DProjLodEXT
texture2DProjLodEXT(0H2B0B
texture2DLod(0H1B0B
texture2DLod
textureCubeLod
texture2DProjLod
texture2DProjLod(0H2B0B
mix(3B3B0B
mix(3B3B3B
mix(1B1B1B
acos
ceil
exp2
sqrt
atan
asin
log2
step
fract
floor
cross
clamp(1B0B0B
clamp(1B1B1B
clamp(3B0B0B
degrees
radians
reflect
refract
refract(3B3B0B
distance
normalize
smoothstep
smoothstep(1B1B1B
smoothstep(3B3B3B
smoothstep(0B0B3B
inversesqrt
faceforward(3B3B3B
faceforward
faceforward(1B1B1B
faceforward(2B2B2B
' conflicting location with previously defined '
conflicting output locations with previously defined output '
output array locations would exceed MAX_DRAW_BUFFERS
output location must be < MAX_DRAW_BUFFERS
must explicitly specify all locations when using multiple fragment outputs
not allowed to specify yuv qualifier when using depth or multiple color fragment outputs
angle_compound_
_frm
_frl
float
vec2
float2
vec3
float3
float4
mat2
float2x2
mat3
float3x3
mat4
float4x4
mat2x3
float2x3
mat2x4
float2x4
mat3x2
float3x2
mat3x4
float3x4
mat4x2
float4x2
mat4x3
float4x3
 angle_frm(
 v) {\n    v = clamp(v, -65504.0, 65504.0);\n    
 exponent = floor(log2(abs(v) + 1e-30)) - 10.0;\n    bool
 isNonZero = exponent < -25.0;\n    v = v * exp2(-exponent);\n    v = sign(v) * floor(abs(v));\n    return v * exp2(exponent) * (float
)(isNonZero);\n}\n
 angle_frl(
 v) {\n    v = clamp(v, -2.0, 2.0);\n    v = v * 256.0;\n    v = sign(v) * floor(abs(v));\n    return v * 0.00390625;\n}\n
 m) {\n
 rounded;\n
    rounded[
] = 
]);\n
    return rounded;\n}\n
highp 
 angle_frm(in 
 x) {\n    x = clamp(x, -65504.0, 65504.0);\n    
 exponent = floor(log2(abs(x) + 1e-30)) - 10.0;\n    bool isNonZero = (exponent >= -25.0);\n    x = x * exp2(-exponent);\n    x = sign(x) * floor(abs(x));\n    return x * exp2(exponent) * float(isNonZero);\n}\n
 angle_frl(in 
 x) {\n    x = clamp(x, -2.0, 2.0);\n    x = x * 256.0;\n    x = sign(x) * floor(abs(x));\n    return x * 0.00390625;\n}\n
 exponent = floor(log2(abs(v) + 1e-30)) - 10.0;\n    bvec
 isNonZero = greaterThanEqual(exponent, vec
(-25.0));\n    v = v * exp2(-exponent);\n    v = sign(v) * floor(abs(v));\n    return v * exp2(exponent) * vec
(isNonZero);\n}\n
(in 
angle_frm
angle_frl
 angle_compound_
_frm(inout 
 x, in 
 y) {\n    x = angle_frm(angle_frm(x) 
 y);\n    return x;\n}\n
_frl(inout 
 y) {\n    x = angle_frl(angle_frl(x) 
ViewID_OVR
multiviewBaseViewLayerIndex
GL_ARM_shader_framebuffer_fetch
GL_EXT_shader_framebuffer_fetch
GL_EXT_YUV_target
GL_NV_shader_framebuffer_fetch
GL_OVR_multiview
ARB_texture_rectangle
ARM_shader_framebuffer_fetch
EXT_blend_func_extended
EXT_draw_buffers
EXT_frag_depth
EXT_geometry_shader
EXT_shader_framebuffer_fetch
EXT_shader_texture_lod
EXT_YUV_target
NV_EGL_stream_consumer_external
NV_shader_framebuffer_fetch
OES_EGL_image_external
OES_EGL_image_external_essl3
OES_standard_derivatives
OES_texture_storage_multisample_2d_array
OVR_multiview
require
enable
warn
disable
gl_DepthRange
near
diff
initGlobals
(symbol id 
const bool
 (const float)\n
 (const int)\n
 (const uint)\n
 (const yuvCscStandardEXT)\n
Unknown constant\n
itu_601
itu_601_full_range
itu_709
unknown color space conversion standard
vector swizzle (
comma
move second child to first child
initialize first child with second child
add second child into first child
subtract second child into first child
multiply second child into first child
matrix mult second child into first child
vector scale second child into first child
matrix scale second child into first child
divide second child into first child
modulo second child into first child
bit-wise shift first child left by second child
bit-wise shift first child right by second child
bit-wise and second child into first child
bit-wise xor second child into first child
bit-wise or second child into first child
direct index
indirect index
direct index for structure
direct index for interface block
subtract
component-wise multiply
divide
modulo
bit-wise shift left
bit-wise shift right
bit-wise and
bit-wise xor
bit-wise or
Compare Equal
Compare Not Equal
Compare Less Than
Compare Greater Than
Compare Less Than or Equal
Compare Greater Than or Equal
vector-scale
vector-times-matrix
matrix-times-vector
matrix-scale
matrix-multiply
logical-or
logical-xor
logical-and
<unknown op>
 (field '
Negate value
Positive sign
negation
bit-wise not
Post-Increment
Post-Decrement
Pre-Increment
Pre-Decrement
Array length
component-wise not
Ternary selection
Condition\n
true case\n
false case\n
If test\n
true case is null\n
Switch\n
Default\n
Case\n
Function Prototype
parameter: 
 (internal function)
 (symbol id 
Function Definition:\n
node is still EOpNull!\n
Call an user-defined function
Call an internal function with raw implementation
Call a built-in function
Construct
component-wise equal
component-wise not equal
component-wise less than
component-wise greater than
component-wise less than or equal
component-wise greater than or equal
dot product
cross product
Code block\n
Invariant Declaration:\n
Declaration\n
Loop with condition 
not 
tested first\n
Loop Condition\n
No loop condition\n
Loop Body\n
No loop body\n
Loop Terminal Expression\n
Branch: Kill
Branch: Break
Branch: Continue
Branch: Return
Branch: Unknown Branch
 with expression\n
_webgl_struct_
angle_return
Performance: dynamic indexing of vectors and matrices is emulated and can be slow.
dyn_index_
write_
ivec
bvec
uvec
base
value
asfloat(
static 
\n// Equality functions\n\n
\n// Assignment functions\n\n
\n// Array constructor functions\n\n
#define ANGLE_USES_DISCARD_REWRITING\n
#define ANGLE_USES_NESTED_BREAK\n
#define ANGLE_REQUIRES_IEEE_STRICT_COMPILING\n
#ifdef ANGLE_ENABLE_LOOP_FLATTEN\n#define LOOP [loop]\n#define FLATTEN [flatten]\n#else\n#define LOOP\n#define FLATTEN\n#endif\n
// Varyings\n
 out_
static float4 gl_Color[
] =\n{\n
    float4(0, 0, 0, 0)
static float gl_Depth = 0.0;\n
static float4 gl_FragCoord = float4(0, 0, 0, 0);\n
static float2 gl_PointCoord = float2(0.5, 0.5);\n
static bool gl_FrontFacing = false;\n
struct gl_DepthRangeParameters\n{\n    float near;\n    float far;\n    float diff;\n};\n\n
cbuffer DriverConstants : register(b1)\n{\n
    float3 dx_DepthRange : packoffset(c0);\n
    float4 dx_ViewCoords : packoffset(c1);\n
    float3 dx_DepthFront : packoffset(c2);\n
    float2 dx_ViewScale : packoffset(c3);\n
    float multiviewSelectViewportIndex : packoffset(c3.z);\n
uniform float3 dx_DepthRange : register(c0);
uniform float4 dx_ViewCoords : register(c1);\n
uniform float3 dx_DepthFront : register(c2);\n
static gl_DepthRangeParameters gl_DepthRange = {dx_DepthRange.x, dx_DepthRange.y, dx_DepthRange.z};\n\n
#define GL_USES_MRT\n
#define GL_USES_FRAG_COLOR\n
#define GL_USES_FRAG_DATA\n
// Attributes\n
\nstatic float4 gl_Position = float4(0, 0, 0, 0);\n
static float gl_PointSize = float(1);\n
static int gl_InstanceID;
static int gl_VertexID;
\n// Varyings\n
    float4 dx_ViewAdjust : packoffset(c1);\n
    float2 dx_ViewCoords : packoffset(c2);\n
    float2 dx_ViewScale  : packoffset(c3);\n
};\n\n
uniform float3 dx_DepthRange : register(c0);\n
uniform float4 dx_ViewAdjust : register(c1);\n
uniform float2 dx_ViewCoords : register(c2);\n\n
    uint3 gl_NumWorkGroups : packoffset(c0);\n
\nstruct CS_INPUT\n{\n
\nvoid initGLBuiltins(CS_INPUT input)\n
static uint3 gl_WorkGroupID = uint3(0, 0, 0);\n
    uint3 dx_WorkGroupID : 
SV_GroupID;\n
    gl_WorkGroupID = input.dx_WorkGroupID;\n
static uint3 gl_LocalInvocationID = uint3(0, 0, 0);\n
    uint3 dx_LocalInvocationID : 
SV_GroupThreadID;\n
    gl_LocalInvocationID = input.dx_LocalInvocationID;\n
static uint3 gl_GlobalInvocationID = uint3(0, 0, 0);\n
    uint3 dx_GlobalInvocationID : 
SV_DispatchThreadID;\n
    gl_GlobalInvocationID = input.dx_GlobalInvocationID;\n
static uint gl_LocalInvocationIndex = uint(0);\n
    uint dx_LocalInvocationIndex : 
SV_GroupIndex;\n
    gl_LocalInvocationIndex = input.dx_LocalInvocationIndex;\n
// Structures from std140 blocks with padding removed\n
#define GL_USES_FRAG_COORD\n
#define GL_USES_POINT_COORD\n
#define GL_USES_FRONT_FACING\n
#define GL_USES_POINT_SIZE\n
#define GL_ANGLE_MULTIVIEW_ENABLED\n
#define GL_USES_VIEW_ID\n
#define GL_USES_FRAG_DEPTH\n
#define GL_USES_DEPTH_RANGE\n
bool xor(bool p, bool q)\n{\n    return (p || q) && !(p && q);\n}\n\n
out_
gl_Color[0]
gl_Color
gl_Depth
 == 
 != 
all(
 += 
 -= 
 *= 
 = mul(
, transpose(
 = transpose(mul(transpose(
), transpose(
))))
 /= 
 %= 
 <<= 
 >>= 
 &= 
 ^= 
 |= 
angle
 << 
 >> 
 <= 
 >= 
mul(
mul(transpose(
transpose(mul(transpose(
 || 
xor(
 && 
radians(
degrees(
sin(
cos(
tan(
asin(
acos(
atan(
sinh(
cosh(
exp(
log(
exp2(
log2(
sqrt(
rsqrt(
abs(
sign(
floor(
trunc(
round(
ceil(
frac(
isnan(
isinf(
asint(
asuint(
length(
normalize(
, 0.0)
ddx(
ddy(
fwidth(
transpose(
determinant(transpose(
any(
reversebits(
countbits(
firstbitlow(
firstbithigh(
initGLBuiltins(input);\n
@@ MAIN PROLOGUE @@\n
return 
@@ VERTEX ATTRIBUTES @@\n\n
@@ VERTEX OUTPUT @@\n\n
VS_OUTPUT main(VS_INPUT input)
@@ PIXEL OUTPUT @@\n\n
PS_OUTPUT main(@@ PIXEL MAIN PARAMETERS @@)
[numthreads(
void main(CS_INPUT input)
Lod0(
groupshared 
texture_
, sampler_
angle_
, texture_
modf(
pow(
min(
max(
clamp(
lerp(
step(
smoothstep(
distance(
dot(
cross(
reflect(
refract(
GroupMemoryBarrierWithGroupSync(
GroupMemoryBarrier(
DeviceMemoryBarrier(
AllMemoryBarrier(
if (
{;}\n
else\n
FLATTEN 
switch (
case (
default:\n
LOOP
 do\n
 for(
while (
{Break
 = true; break;}\n
break
continue
{int 
;\nbool Break
 = false;\n
if (!Break
) {\n
#line 
const uint 
 texture_
 sampler_
, const uint 
 = t
 = {
angle_eq_
bool 
 a, 
 b)\n
{\n    return 
angle_eq
{\n    for (int i = 0; i < 
; ++i)\n    {\n        if (
a[i]
b[i]
) { return false; }\n    }\n    return true;\n}\n
angle_assign
void 
(out 
; ++i)\n    {\n        
;\n    }\n}\n
angle_construct_into
)\n{\n
generateOutput(input)
generateOutput()
InterlockedAdd(
InterlockedMin(
InterlockedMax(
InterlockedAnd(
InterlockedOr(
InterlockedXor(
InterlockedExchange(
InterlockedCompareExchange(
pEvents
Lock already taken
../../third_party/angle/src/libANGLE/renderer/d3d/FramebufferD3D.cpp
input layout
SPRITEPOSITION
SPRITETEXCOORD
testQuery
../../third_party/angle/src/libANGLE/renderer/d3d/d3d11/Query11.cpp
Failed to get the data of an internal query
Failed to test get query result, device is lost.
Advanced Micro Devices
Unknown
struct VS_INPUT\n
GL_USES_POINT_SIZE
    float3 spriteVertexPos : SPRITEPOSITION0;\n
    float2 spriteTexCoord : SPRITETEXCOORD0;\n
 uint
SV_InstanceID
SV_VertexID
input.
};\n\nvoid initAttributes(VS_INPUT input)\n{\n
@@ VERTEX ATTRIBUTES @@
SV_TARGET
SV_Depth
DEPTH
struct PS_OUTPUT\n{\n
float4(0, 0, 0, 1)
dummy
    output.
    float gl_Depth : 
    output.gl_Depth = gl_Depth; \n
};\n\nPS_OUTPUT generateOutput()\n{\n    PS_OUTPUT output;\n
    return output;\n}\n
@@ PIXEL OUTPUT @@
    float4 dx_Position : 
    float4 gl_Position : 
    float4 gl_FragCoord : 
    float2 gl_PointCoord : 
    float gl_PointSize : 
    nointerpolation uint gl_ViewID_OVR : 
    nointerpolation 
    centroid 
    nointerpolation uint gl_ViewportIndex : 
    nointerpolation uint gl_Layer : 
struct VS_OUTPUT\n
static float minPointSize = 
.0f;\n
static float maxPointSize = 
VS_OUTPUT generateOutput(VS_INPUT input)\n
    VS_OUTPUT output;\n
    output.gl_Position = gl_Position;\n
    output.gl_ViewID_OVR = ViewID_OVR;\n
    if (multiviewSelectViewportIndex)\n
         output.gl_ViewportIndex = ViewID_OVR;\n
    } else {\n
         output.gl_ViewportIndex = 0;\n
         output.gl_Layer = ViewID_OVR;\n
    output.dx_Position.x = gl_Position.x;\n
    output.dx_Position.y = dx_ViewScale.y * gl_Position.y;\n
    output.dx_Position.y = - gl_Position.y;\n
    output.dx_Position.z = (gl_Position.z + gl_Position.w) * 0.5;\n
    output.dx_Position.w = gl_Position.w;\n
    output.dx_Position.x = gl_Position.x * dx_ViewAdjust.z + dx_ViewAdjust.x * gl_Position.w;\n
    output.dx_Position.y = dx_ViewScale.y * (gl_Position.y * dx_ViewAdjust.w + dx_ViewAdjust.y * gl_Position.w);\n
    output.dx_Position.y = -(gl_Position.y * dx_ViewAdjust.w + dx_ViewAdjust.y * gl_Position.w);\n
    output.gl_PointSize = gl_PointSize;\n
    output.gl_FragCoord = gl_Position;\n
    output.v
    gl_PointSize = clamp(gl_PointSize, minPointSize, maxPointSize);\n
    output.dx_Position.x += (input.spriteVertexPos.x * gl_PointSize / (dx_ViewCoords.x*2)) * output.dx_Position.w;
    output.dx_Position.y += (-dx_ViewScale.y * input.spriteVertexPos.y * gl_PointSize / (dx_ViewCoords.y*2)) * output.dx_Position.w;
    output.dx_Position.y += (input.spriteVertexPos.y * gl_PointSize / (dx_ViewCoords.y*2)) * output.dx_Position.w;
    output.dx_Position.z += input.spriteVertexPos.z * output.dx_Position.w;\n
    output.gl_PointCoord = input.spriteTexCoord;\n
    output.gl_PointCoord = float2(0.5, 0.5);\n
    return output;\n
    initAttributes(input);\n
@@ MAIN PROLOGUE @@
@@ VERTEX OUTPUT @@
struct PS_INPUT\n
    ViewID_OVR = input.gl_ViewID_OVR;\n
    float rhw = 1.0 / input.gl_FragCoord.w;\n
    gl_FragCoord.x = input.dx_Position.x;\n
    gl_FragCoord.y = input.dx_Position.y;\n
    gl_FragCoord.x = input.dx_Position.x + 0.5;\n
    gl_FragCoord.y = input.dx_Position.y + 0.5;\n
    gl_FragCoord.x = (input.gl_FragCoord.x * rhw) * dx_ViewCoords.x + dx_ViewCoords.z;\n
    gl_FragCoord.y = (input.gl_FragCoord.y * rhw) * dx_ViewCoords.y + dx_ViewCoords.w;\n
    gl_FragCoord.y = (1.0f + dx_ViewScale.y) * gl_FragCoord.y /(1.0f - input.gl_FragCoord.y * rhw)  - dx_ViewScale.y * gl_FragCoord.y;\n
    gl_FragCoord.z = (input.gl_FragCoord.z * rhw) * dx_DepthFront.x + dx_DepthFront.y;\n
    gl_FragCoord.w = rhw;\n
    gl_PointCoord.x = input.gl_PointCoord.x;\n
    gl_PointCoord.y = 1.0 - input.gl_PointCoord.y;\n
    gl_FrontFacing = (vFace * dx_DepthFront.z >= 0.0);\n
    gl_FrontFacing = isFrontFace;\n
 = input.v
.xyz
PS_INPUT input, bool isFrontFace : SV_IsFrontFace
@@ PIXEL MAIN PARAMETERS @@
PS_INPUT input, float vFace : VFACE
PS_INPUT input
struct GS_INPUT\n
struct GS_OUTPUT\n
void copyVertex(inout GS_OUTPUT output, GS_INPUT input, GS_INPUT flatinput)\n
    output.gl_Position = input.gl_Position;\n
    output.gl_PointSize = input.gl_PointSize;\n
    output.gl_ViewID_OVR = input.gl_ViewID_OVR;\n
    output.gl_ViewportIndex = input.gl_ViewportIndex;\n
    output.gl_Layer = input.gl_Layer;\n
input.v
    output.gl_FragCoord = input.gl_FragCoord;\n
#ifndef ANGLE_POINT_SPRITE_SHADER\n
    output.dx_Position = input.dx_Position;\n
#endif  // ANGLE_POINT_SPRITE_SHADER\n
void selectView(inout GS_OUTPUT output, GS_INPUT input)\n
        output.gl_ViewportIndex = input.gl_ViewID_OVR;\n
        output.gl_ViewportIndex = 0;\n
        output.gl_Layer = input.gl_ViewID_OVR;\n
point
Triangle
Point
line
Line
triangle
cbuffer DriverConstants : register(b0)\n{\n
#define ANGLE_POINT_SPRITE_SHADER\n\nstatic float2 pointSpriteCorners[] = \n{\n    float2( 0.5f, -0.5f),\n    float2( 0.5f,  0.5f),\n    float2(-0.5f, -0.5f),\n    float2(-0.5f,  0.5f)\n};\n\nstatic float2 pointSpriteTexcoords[] = \n{\n    float2(1.0f, 1.0f),\n    float2(1.0f, 0.0f),\n    float2(0.0f, 1.0f),\n    float2(0.0f, 0.0f)\n};\n\nstatic float minPointSize = 
.0f;\nstatic float maxPointSize = 
[maxvertexcount(
void main(
 GS_INPUT input[
uint primitiveID : SV_PrimitiveID, 
 inout 
Stream<GS_OUTPUT> outStream)\n
    GS_OUTPUT output = (GS_OUTPUT)0;\n
    uint lastVertexIndex = (primitiveID % 2 == 0 ? 2 : 1);\n
    uint lastVertexIndex = 
    copyVertex(output, input[
], input[lastVertexIndex]);\n
   selectView(output, input[
    outStream.Append(output);\n
\n    float4 dx_Position = input[0].dx_Position;\n    float gl_PointSize = clamp(input[0].gl_PointSize, minPointSize, maxPointSize);\n    float2 viewportScale = float2(1.0f / dx_ViewCoords.x, 1.0f / dx_ViewCoords.y) * dx_Position.w;\n
    \n    output.dx_Position = dx_Position + float4(1.0f, -dx_ViewScale.y, 1.0f, 1.0f)        * float4(pointSpriteCorners[
] * viewportScale * gl_PointSize, 0.0f, 0.0f);\n
\n    output.dx_Position = dx_Position + float4(pointSpriteCorners[
    output.gl_PointCoord = pointSpriteTexcoords[
    \n    outStream.RestartStrip();\n}\n
transpose(input.
(input.
gl_Color[
SV_Position
VPOS
SV_ViewportArrayIndex
SV_RenderTargetArrayIndex
not-matrix-type
uint
not-component-type
 SHADER END\n
\n// 
GL_USES_MRT
GL_USES_FRAG_COLOR
GL_USES_FRAG_DATA
GL_USES_FRAG_COORD
GL_USES_FRONT_FACING
GL_USES_POINT_COORD
GL_USES_DEPTH_RANGE
GL_USES_FRAG_DEPTH
GL_ANGLE_MULTIVIEW_ENABLED
GL_USES_VIEW_ID
ANGLE_USES_DISCARD_REWRITING
ANGLE_USES_NESTED_BREAK
ANGLE_REQUIRES_IEEE_STRICT_COMPILING
 SHADER BEGIN\n
\n\n// GLSL END\n\n\n
\n// GLSL BEGIN\n\n
\n// INITIAL HLSL END\n\n\n
// INITIAL HLSL BEGIN\n\n
CHROMIUM_copy_texture exposed but not implemented.
CHROMIUM_copy_compressed_texture exposed but not implemented.
ANGLE_copy_texture_3d exposed but not implemented.
getSpaceRequired
../../third_party/angle/src/libANGLE/renderer/d3d/VertexBuffer.cpp
storeDynamicAttribute
reserveVertexSpace
Renderbuffer format does not support 
 samples, 
 is the maximum.
Device was lost while querying result of an event query.
FenceSetHelper
../../third_party/angle/src/libANGLE/renderer/d3d/d3d11/Fence11.cpp
Failed to create event query
FenceTestHelper
Failed to get query data
Failed to resize internal buffer.
markTransformFeedbackUsage
../../third_party/angle/src/libANGLE/renderer/d3d/d3d9/Buffer9.cpp
Internal query creation failed, 
Failed to begin internal query, 
Failed to end internal query, 
Unimplemented
Failed to end event query, 
testHelper
../../third_party/angle/src/libANGLE/renderer/d3d/d3d9/Fence9.cpp
digraph {
[label =<
<BR/> <FONT POINT-SIZE="10">Node ID 
</FONT>>];
Buffer
Framebuffer
Image
Query
location = 
, component = 
@@ DEFAULT-UNIFORMS-SET-BINDING @@
set = 0, binding = 0
set = 0, binding = 1
set = 1, binding = 
uniform
set = 0, binding = 
set = 2, binding = 0
ANGLEUniforms
ANGLEPosition
#version 450 core\n\n#define ANGLE_ENABLE_LINE_SEGMENT_RASTERIZATION\n
#version 450 core\n
../../third_party/angle/src/libANGLE/renderer/vulkan/GlslangWrapper.cpp
GetShaderCodeImpl
Internal error parsing Vulkan vertex shader:\n
Internal error parsing Vulkan fragment shader:\n
Internal error linking Vulkan shaders:\n
@@ LAYOUT-
layout(
@@ QUALIFIER-
CreateDevice
vkEnumerateInstanceExtensionProperties
%s: Unable to resolve symbol "%s" in implicit layer library "%s"
vkEnumerateInstanceLayerProperties
vkEnumerateInstanceVersion
vkCreateInstance:  Failed to allocate Loader's full Instance dispatch table.
vkEnumeratePhysicalDevices: Received NULL pointer for physical device count return value.
vkEnumeratePhysicalDevices: Trimming device count down by application request from %d to %d physical devices
vkCreateDevice:  Failed to create ICD extension list
vkCreateDevice:  Failed to add extensions to list
vkCreateDevice:  Failed to validate extensions in list
vkCreateDevice:  Failed to allocate application activated layer list of size %d.
vkCreateDevice:  Failed to allocate expanded activated layer list of size %d.
vkCreateDevice:  Failed to create device chain.
vkEnumerateDeviceExtensionProperties:  pLayerName is too long or is badly formed
setupLoaderTrampPhysDevGroups:  Failed during dispatch call of 'EnumeratePhysicalDeviceGroupsKHR' to lower layers or loader to get count.
setupLoaderTrampPhysDevGroups:  Failed to allocate new physical device group array of size %d
setupLoaderTrampPhysDevGroups:  Failed to find GPU %d in group %d returned by 'EnumeratePhysicalDeviceGroupsKHR' in list returned by 'EnumeratePhysicalDevices'
setupLoaderTrampPhysDevGroups:  Failed to allocate physical device group trampoline object %d
vkEnumeratePhysicalDeviceGroupsKHR: Received NULL pointer for physical device group count return value.
vkEnumeratePhysicalDeviceGroupsKHR: Trimming device group count down by application request from %d to %d physical device groups
CreateInstance
EnumerateInstanceExtensionProperties
EnumerateInstanceLayerProperties
EnumerateInstanceVersion
vkGetInstanceProcAddr
vkDestroyInstance
vkEnumeratePhysicalDevices
vkGetPhysicalDeviceFeatures
vkGetPhysicalDeviceFormatProperties
vkGetPhysicalDeviceImageFormatProperties
vkGetPhysicalDeviceSparseImageFormatProperties
vkGetPhysicalDeviceProperties
vkGetPhysicalDeviceQueueFamilyProperties
vkGetPhysicalDeviceMemoryProperties
vkEnumerateDeviceLayerProperties
vkEnumerateDeviceExtensionProperties
vkCreateDevice
vkGetDeviceProcAddr
vkDestroyDevice
vkGetDeviceQueue
vkQueueSubmit
vkQueueWaitIdle
vkDeviceWaitIdle
vkAllocateMemory
vkFreeMemory
vkMapMemory
vkUnmapMemory
vkFlushMappedMemoryRanges
vkInvalidateMappedMemoryRanges
vkGetDeviceMemoryCommitment
vkGetImageSparseMemoryRequirements
vkGetImageMemoryRequirements
vkGetBufferMemoryRequirements
vkBindImageMemory
vkBindBufferMemory
vkQueueBindSparse
vkCreateFence
vkDestroyFence
vkGetFenceStatus
vkResetFences
vkWaitForFences
vkCreateSemaphore
vkDestroySemaphore
vkCreateEvent
vkDestroyEvent
vkGetEventStatus
vkSetEvent
vkResetEvent
vkCreateQueryPool
vkDestroyQueryPool
vkGetQueryPoolResults
vkCreateBuffer
vkDestroyBuffer
vkCreateBufferView
vkDestroyBufferView
vkCreateImage
vkDestroyImage
vkGetImageSubresourceLayout
vkCreateImageView
vkDestroyImageView
vkCreateShaderModule
vkDestroyShaderModule
vkCreatePipelineCache
vkDestroyPipelineCache
vkGetPipelineCacheData
vkMergePipelineCaches
vkCreateGraphicsPipelines
vkCreateComputePipelines
vkDestroyPipeline
vkCreatePipelineLayout
vkDestroyPipelineLayout
vkCreateSampler
vkDestroySampler
vkCreateDescriptorSetLayout
vkDestroyDescriptorSetLayout
vkCreateDescriptorPool
vkDestroyDescriptorPool
vkResetDescriptorPool
vkAllocateDescriptorSets
vkFreeDescriptorSets
vkUpdateDescriptorSets
vkCreateFramebuffer
vkDestroyFramebuffer
vkCreateRenderPass
vkDestroyRenderPass
vkGetRenderAreaGranularity
vkCreateCommandPool
vkDestroyCommandPool
vkResetCommandPool
vkAllocateCommandBuffers
vkFreeCommandBuffers
vkBeginCommandBuffer
vkEndCommandBuffer
vkResetCommandBuffer
vkCmdBindPipeline
vkCmdBindDescriptorSets
vkCmdBindVertexBuffers
vkCmdBindIndexBuffer
vkCmdSetViewport
vkCmdSetScissor
vkCmdSetLineWidth
vkCmdSetDepthBias
vkCmdSetBlendConstants
vkCmdSetDepthBounds
vkCmdSetStencilCompareMask
vkCmdSetStencilWriteMask
vkCmdSetStencilReference
vkCmdDraw
vkCmdDrawIndexed
vkCmdDrawIndirect
vkCmdDrawIndexedIndirect
vkCmdDispatch
vkCmdDispatchIndirect
vkCmdCopyBuffer
vkCmdCopyImage
vkCmdBlitImage
vkCmdCopyBufferToImage
vkCmdCopyImageToBuffer
vkCmdUpdateBuffer
vkCmdFillBuffer
vkCmdClearColorImage
vkCmdClearDepthStencilImage
vkCmdClearAttachments
vkCmdResolveImage
vkCmdSetEvent
vkCmdResetEvent
vkCmdWaitEvents
vkCmdPipelineBarrier
vkCmdBeginQuery
vkCmdEndQuery
vkCmdResetQueryPool
vkCmdWriteTimestamp
vkCmdCopyQueryPoolResults
vkCmdPushConstants
vkCmdBeginRenderPass
vkCmdNextSubpass
vkCmdEndRenderPass
vkCmdExecuteCommands
vkEnumeratePhysicalDeviceGroups
vkGetPhysicalDeviceFeatures2
vkGetPhysicalDeviceProperties2
vkGetPhysicalDeviceFormatProperties2
vkGetPhysicalDeviceImageFormatProperties2
vkGetPhysicalDeviceQueueFamilyProperties2
vkGetPhysicalDeviceMemoryProperties2
vkGetPhysicalDeviceSparseImageFormatProperties2
vkGetPhysicalDeviceExternalBufferProperties
vkGetPhysicalDeviceExternalSemaphoreProperties
vkGetPhysicalDeviceExternalFenceProperties
vkBindBufferMemory2
vkBindImageMemory2
vkGetDeviceGroupPeerMemoryFeatures
vkCmdSetDeviceMask
vkCmdDispatchBase
vkGetImageMemoryRequirements2
vkTrimCommandPool
vkGetDeviceQueue2
vkCreateSamplerYcbcrConversion
vkDestroySamplerYcbcrConversion
vkGetDescriptorSetLayoutSupport
vkCreateDescriptorUpdateTemplate
vkDestroyDescriptorUpdateTemplate
vkUpdateDescriptorSetWithTemplate
vkGetImageSparseMemoryRequirements2
vkGetBufferMemoryRequirements2
GetDeviceProcAddr
DestroyDevice
GetDeviceQueue
AllocateCommandBuffers
../../third_party/angle/src/libANGLE/renderer/vulkan/vk_helpers.cpp
../../third_party/angle/src/libANGLE/renderer/vulkan/FramebufferVk.cpp
getSamplePosition is unimplemented.
../../third_party/angle/src/libANGLE/renderer/vulkan/TextureVk.cpp
flushUpdatesToImage
Internal Vulkan bufffer could not be released. This is likely due to having extra images defined in the Texture.
copySubTextureImpl
glCopyTextureCHROMIUM with sourceLevel != 0 not implemented.
setStorageMultisample is unimplemented.
../../third_party/angle/src/libANGLE/renderer/vulkan/ProgramVk.cpp
Bad destination in loader trampoline dispatch,Are layers and extensions that you are calling enabled?
vkGetPhysicalDeviceFeatures2KHR
vkGetPhysicalDeviceProperties2KHR
vkGetPhysicalDeviceFormatProperties2KHR
vkGetPhysicalDeviceImageFormatProperties2KHR
vkGetPhysicalDeviceQueueFamilyProperties2KHR
vkGetPhysicalDeviceMemoryProperties2KHR
vkGetPhysicalDeviceSparseImageFormatProperties2KHR
vkEnumeratePhysicalDeviceGroupsKHR
vkGetPhysicalDeviceExternalBufferPropertiesKHR
vkGetPhysicalDeviceExternalSemaphorePropertiesKHR
vkGetPhysicalDeviceExternalFencePropertiesKHR
vkGetPhysicalDeviceSurfaceCapabilities2KHR
vkGetPhysicalDeviceSurfaceFormats2KHR
vkDebugReportMessageEXT
vkDebugMarkerSetObjectTagEXT
vkDebugMarkerSetObjectNameEXT
vkGetPhysicalDeviceExternalImageFormatPropertiesNV
vkGetPhysicalDeviceGeneratedCommandsPropertiesNVX
vkReleaseDisplayEXT
vkGetPhysicalDeviceSurfaceCapabilities2EXT
vkSetDebugUtilsObjectNameEXT
vkSetDebugUtilsObjectTagEXT
vkCreateDebugUtilsMessengerEXT
vkDestroyDebugUtilsMessengerEXT
vkSubmitDebugUtilsMessageEXT
vkGetPhysicalDeviceMultisamplePropertiesEXT
vkGetDeviceGroupPeerMemoryFeaturesKHR
vkCmdSetDeviceMaskKHR
vkCmdDispatchBaseKHR
vkTrimCommandPoolKHR
vkGetMemoryWin32HandleKHR
vkGetMemoryWin32HandlePropertiesKHR
vkGetMemoryFdKHR
vkGetMemoryFdPropertiesKHR
vkImportSemaphoreWin32HandleKHR
vkGetSemaphoreWin32HandleKHR
vkImportSemaphoreFdKHR
vkGetSemaphoreFdKHR
vkCmdPushDescriptorSetKHR
vkCmdPushDescriptorSetWithTemplateKHR
vkCreateDescriptorUpdateTemplateKHR
vkDestroyDescriptorUpdateTemplateKHR
vkUpdateDescriptorSetWithTemplateKHR
vkCreateRenderPass2KHR
vkCmdBeginRenderPass2KHR
vkCmdNextSubpass2KHR
vkCmdEndRenderPass2KHR
vkGetSwapchainStatusKHR
vkImportFenceWin32HandleKHR
vkGetFenceWin32HandleKHR
vkImportFenceFdKHR
vkGetFenceFdKHR
vkGetImageMemoryRequirements2KHR
vkGetBufferMemoryRequirements2KHR
vkGetImageSparseMemoryRequirements2KHR
vkCreateSamplerYcbcrConversionKHR
vkDestroySamplerYcbcrConversionKHR
vkBindBufferMemory2KHR
vkBindImageMemory2KHR
vkGetDescriptorSetLayoutSupportKHR
vkCmdDrawIndirectCountKHR
vkCmdDrawIndexedIndirectCountKHR
vkCmdDebugMarkerBeginEXT
vkCmdDebugMarkerEndEXT
vkCmdDebugMarkerInsertEXT
vkCmdDrawIndirectCountAMD
vkCmdDrawIndexedIndirectCountAMD
vkGetShaderInfoAMD
vkGetMemoryWin32HandleNV
vkCmdBeginConditionalRenderingEXT
vkCmdEndConditionalRenderingEXT
vkCmdProcessCommandsNVX
vkCmdReserveSpaceForCommandsNVX
vkCreateIndirectCommandsLayoutNVX
vkDestroyIndirectCommandsLayoutNVX
vkCreateObjectTableNVX
vkDestroyObjectTableNVX
vkRegisterObjectsNVX
vkUnregisterObjectsNVX
vkCmdSetViewportWScalingNV
vkDisplayPowerControlEXT
vkRegisterDeviceEventEXT
vkRegisterDisplayEventEXT
vkGetSwapchainCounterEXT
vkGetRefreshCycleDurationGOOGLE
vkGetPastPresentationTimingGOOGLE
vkCmdSetDiscardRectangleEXT
vkSetHdrMetadataEXT
vkQueueBeginDebugUtilsLabelEXT
vkQueueEndDebugUtilsLabelEXT
vkQueueInsertDebugUtilsLabelEXT
vkCmdBeginDebugUtilsLabelEXT
vkCmdEndDebugUtilsLabelEXT
vkCmdInsertDebugUtilsLabelEXT
vkCmdSetSampleLocationsEXT
vkCreateValidationCacheEXT
vkDestroyValidationCacheEXT
vkMergeValidationCachesEXT
vkGetValidationCacheDataEXT
vkCmdBindShadingRateImageNV
vkCmdSetViewportShadingRatePaletteNV
vkCmdSetCoarseSampleOrderNV
vkCreateAccelerationStructureNVX
vkDestroyAccelerationStructureNVX
vkGetAccelerationStructureMemoryRequirementsNVX
vkGetAccelerationStructureScratchMemoryRequirementsNVX
vkBindAccelerationStructureMemoryNVX
vkCmdBuildAccelerationStructureNVX
vkCmdCopyAccelerationStructureNVX
vkCmdTraceRaysNVX
vkCreateRaytracingPipelinesNVX
vkGetRaytracingShaderHandlesNVX
vkGetAccelerationStructureHandleNVX
vkCmdWriteAccelerationStructurePropertiesNVX
vkCompileDeferredNVX
vkGetMemoryHostPointerPropertiesEXT
vkCmdWriteBufferMarkerAMD
vkCmdDrawMeshTasksNV
vkCmdDrawMeshTasksIndirectNV
vkCmdDrawMeshTasksIndirectCountNV
vkCmdSetExclusiveScissorNV
vkCmdSetCheckpointNV
vkGetQueueCheckpointDataNV
QueueSubmit
QueueWaitIdle
DeviceWaitIdle
AllocateMemory
FreeMemory
MapMemory
UnmapMemory
FlushMappedMemoryRanges
InvalidateMappedMemoryRanges
GetDeviceMemoryCommitment
BindBufferMemory
BindImageMemory
GetBufferMemoryRequirements
GetImageMemoryRequirements
GetImageSparseMemoryRequirements
QueueBindSparse
CreateFence
DestroyFence
ResetFences
GetFenceStatus
WaitForFences
CreateSemaphore
DestroySemaphore
CreateEvent
DestroyEvent
GetEventStatus
SetEvent
ResetEvent
CreateQueryPool
DestroyQueryPool
GetQueryPoolResults
CreateBuffer
DestroyBuffer
CreateBufferView
DestroyBufferView
CreateImage
DestroyImage
GetImageSubresourceLayout
CreateImageView
DestroyImageView
CreateShaderModule
DestroyShaderModule
CreatePipelineCache
DestroyPipelineCache
GetPipelineCacheData
MergePipelineCaches
CreateGraphicsPipelines
CreateComputePipelines
DestroyPipeline
CreatePipelineLayout
DestroyPipelineLayout
CreateSampler
DestroySampler
CreateDescriptorSetLayout
DestroyDescriptorSetLayout
CreateDescriptorPool
DestroyDescriptorPool
ResetDescriptorPool
AllocateDescriptorSets
FreeDescriptorSets
UpdateDescriptorSets
CreateFramebuffer
DestroyFramebuffer
CreateRenderPass
DestroyRenderPass
GetRenderAreaGranularity
CreateCommandPool
DestroyCommandPool
ResetCommandPool
FreeCommandBuffers
BeginCommandBuffer
EndCommandBuffer
ResetCommandBuffer
CmdBindPipeline
CmdSetViewport
CmdSetScissor
CmdSetLineWidth
CmdSetDepthBias
CmdSetBlendConstants
CmdSetDepthBounds
CmdSetStencilCompareMask
CmdSetStencilWriteMask
CmdSetStencilReference
CmdBindDescriptorSets
CmdBindIndexBuffer
CmdBindVertexBuffers
CmdDraw
CmdDrawIndexed
CmdDrawIndirect
CmdDrawIndexedIndirect
CmdDispatch
CmdDispatchIndirect
CmdCopyBuffer
CmdCopyImage
CmdBlitImage
CmdCopyBufferToImage
CmdCopyImageToBuffer
CmdUpdateBuffer
CmdFillBuffer
CmdClearColorImage
CmdClearDepthStencilImage
CmdClearAttachments
CmdResolveImage
CmdSetEvent
CmdResetEvent
CmdWaitEvents
CmdPipelineBarrier
CmdBeginQuery
CmdEndQuery
CmdResetQueryPool
CmdWriteTimestamp
CmdCopyQueryPoolResults
CmdPushConstants
CmdBeginRenderPass
CmdNextSubpass
CmdEndRenderPass
CmdExecuteCommands
BindBufferMemory2
BindImageMemory2
GetDeviceGroupPeerMemoryFeatures
CmdSetDeviceMask
CmdDispatchBase
GetImageMemoryRequirements2
GetBufferMemoryRequirements2
GetImageSparseMemoryRequirements2
TrimCommandPool
GetDeviceQueue2
CreateSamplerYcbcrConversion
DestroySamplerYcbcrConversion
CreateDescriptorUpdateTemplate
DestroyDescriptorUpdateTemplate
UpdateDescriptorSetWithTemplate
GetDescriptorSetLayoutSupport
CreateSwapchainKHR
DestroySwapchainKHR
GetSwapchainImagesKHR
AcquireNextImageKHR
QueuePresentKHR
GetDeviceGroupPresentCapabilitiesKHR
GetDeviceGroupSurfacePresentModesKHR
AcquireNextImage2KHR
CreateSharedSwapchainsKHR
GetDeviceGroupPeerMemoryFeaturesKHR
CmdSetDeviceMaskKHR
CmdDispatchBaseKHR
TrimCommandPoolKHR
GetMemoryWin32HandleKHR
GetMemoryWin32HandlePropertiesKHR
GetMemoryFdKHR
GetMemoryFdPropertiesKHR
ImportSemaphoreWin32HandleKHR
GetSemaphoreWin32HandleKHR
ImportSemaphoreFdKHR
GetSemaphoreFdKHR
CmdPushDescriptorSetKHR
CmdPushDescriptorSetWithTemplateKHR
CreateDescriptorUpdateTemplateKHR
DestroyDescriptorUpdateTemplateKHR
UpdateDescriptorSetWithTemplateKHR
CreateRenderPass2KHR
CmdBeginRenderPass2KHR
CmdNextSubpass2KHR
CmdEndRenderPass2KHR
GetSwapchainStatusKHR
ImportFenceWin32HandleKHR
GetFenceWin32HandleKHR
ImportFenceFdKHR
GetFenceFdKHR
GetImageMemoryRequirements2KHR
GetBufferMemoryRequirements2KHR
GetImageSparseMemoryRequirements2KHR
CreateSamplerYcbcrConversionKHR
DestroySamplerYcbcrConversionKHR
BindBufferMemory2KHR
BindImageMemory2KHR
GetDescriptorSetLayoutSupportKHR
CmdDrawIndirectCountKHR
CmdDrawIndexedIndirectCountKHR
DebugMarkerSetObjectTagEXT
DebugMarkerSetObjectNameEXT
CmdDebugMarkerBeginEXT
CmdDebugMarkerEndEXT
CmdDebugMarkerInsertEXT
CmdDrawIndirectCountAMD
CmdDrawIndexedIndirectCountAMD
GetShaderInfoAMD
GetMemoryWin32HandleNV
CmdBeginConditionalRenderingEXT
CmdEndConditionalRenderingEXT
CmdProcessCommandsNVX
CmdReserveSpaceForCommandsNVX
CreateIndirectCommandsLayoutNVX
DestroyIndirectCommandsLayoutNVX
CreateObjectTableNVX
DestroyObjectTableNVX
RegisterObjectsNVX
UnregisterObjectsNVX
CmdSetViewportWScalingNV
DisplayPowerControlEXT
RegisterDeviceEventEXT
RegisterDisplayEventEXT
GetSwapchainCounterEXT
GetRefreshCycleDurationGOOGLE
GetPastPresentationTimingGOOGLE
CmdSetDiscardRectangleEXT
SetHdrMetadataEXT
SetDebugUtilsObjectNameEXT
SetDebugUtilsObjectTagEXT
QueueBeginDebugUtilsLabelEXT
QueueEndDebugUtilsLabelEXT
QueueInsertDebugUtilsLabelEXT
CmdBeginDebugUtilsLabelEXT
CmdEndDebugUtilsLabelEXT
CmdInsertDebugUtilsLabelEXT
CmdSetSampleLocationsEXT
CreateValidationCacheEXT
DestroyValidationCacheEXT
MergeValidationCachesEXT
GetValidationCacheDataEXT
CmdBindShadingRateImageNV
CmdSetViewportShadingRatePaletteNV
CmdSetCoarseSampleOrderNV
CreateAccelerationStructureNVX
DestroyAccelerationStructureNVX
GetAccelerationStructureMemoryRequirementsNVX
GetAccelerationStructureScratchMemoryRequirementsNVX
BindAccelerationStructureMemoryNVX
CmdBuildAccelerationStructureNVX
CmdCopyAccelerationStructureNVX
CmdTraceRaysNVX
CreateRaytracingPipelinesNVX
GetRaytracingShaderHandlesNVX
GetAccelerationStructureHandleNVX
CmdWriteAccelerationStructurePropertiesNVX
CompileDeferredNVX
GetMemoryHostPointerPropertiesEXT
CmdWriteBufferMarkerAMD
CmdDrawMeshTasksNV
CmdDrawMeshTasksIndirectNV
CmdDrawMeshTasksIndirectCountNV
CmdSetExclusiveScissorNV
CmdSetCheckpointNV
GetQueueCheckpointDataNV
DestroyInstance
EnumeratePhysicalDevices
GetPhysicalDeviceFeatures
GetPhysicalDeviceFormatProperties
GetPhysicalDeviceImageFormatProperties
GetPhysicalDeviceProperties
GetPhysicalDeviceQueueFamilyProperties
GetPhysicalDeviceMemoryProperties
GetInstanceProcAddr
EnumerateDeviceExtensionProperties
EnumerateDeviceLayerProperties
GetPhysicalDeviceSparseImageFormatProperties
EnumeratePhysicalDeviceGroups
GetPhysicalDeviceFeatures2
GetPhysicalDeviceProperties2
GetPhysicalDeviceFormatProperties2
GetPhysicalDeviceImageFormatProperties2
GetPhysicalDeviceQueueFamilyProperties2
GetPhysicalDeviceMemoryProperties2
GetPhysicalDeviceSparseImageFormatProperties2
GetPhysicalDeviceExternalBufferProperties
GetPhysicalDeviceExternalFenceProperties
GetPhysicalDeviceExternalSemaphoreProperties
DestroySurfaceKHR
GetPhysicalDeviceSurfaceSupportKHR
GetPhysicalDeviceSurfaceCapabilitiesKHR
GetPhysicalDeviceSurfaceFormatsKHR
GetPhysicalDeviceSurfacePresentModesKHR
GetPhysicalDevicePresentRectanglesKHR
GetPhysicalDeviceDisplayPropertiesKHR
GetPhysicalDeviceDisplayPlanePropertiesKHR
GetDisplayPlaneSupportedDisplaysKHR
GetDisplayModePropertiesKHR
CreateDisplayModeKHR
GetDisplayPlaneCapabilitiesKHR
CreateDisplayPlaneSurfaceKHR
CreateWin32SurfaceKHR
GetPhysicalDeviceWin32PresentationSupportKHR
GetPhysicalDeviceFeatures2KHR
GetPhysicalDeviceProperties2KHR
GetPhysicalDeviceFormatProperties2KHR
GetPhysicalDeviceImageFormatProperties2KHR
GetPhysicalDeviceQueueFamilyProperties2KHR
GetPhysicalDeviceMemoryProperties2KHR
GetPhysicalDeviceSparseImageFormatProperties2KHR
EnumeratePhysicalDeviceGroupsKHR
GetPhysicalDeviceExternalBufferPropertiesKHR
GetPhysicalDeviceExternalSemaphorePropertiesKHR
GetPhysicalDeviceExternalFencePropertiesKHR
GetPhysicalDeviceSurfaceCapabilities2KHR
GetPhysicalDeviceSurfaceFormats2KHR
GetPhysicalDeviceDisplayProperties2KHR
GetPhysicalDeviceDisplayPlaneProperties2KHR
GetDisplayModeProperties2KHR
GetDisplayPlaneCapabilities2KHR
CreateDebugReportCallbackEXT
DestroyDebugReportCallbackEXT
DebugReportMessageEXT
GetPhysicalDeviceExternalImageFormatPropertiesNV
GetPhysicalDeviceGeneratedCommandsPropertiesNVX
ReleaseDisplayEXT
GetPhysicalDeviceSurfaceCapabilities2EXT
CreateDebugUtilsMessengerEXT
DestroyDebugUtilsMessengerEXT
SubmitDebugUtilsMessageEXT
GetPhysicalDeviceMultisamplePropertiesEXT
ICD associated with VkPhysicalDevice does not support GetPhysicalDeviceGeneratedCommandsPropertiesNVX
ICD associated with VkPhysicalDevice does not support GetPhysicalDeviceMultisamplePropertiesEXT
VK_KHR_get_physical_device_properties2
VK_KHR_device_group_creation
VK_KHR_external_memory_capabilities
VK_KHR_external_semaphore_capabilities
VK_KHR_external_fence_capabilities
VK_KHR_get_surface_capabilities2
VK_NV_external_memory_capabilities
VK_EXT_direct_mode_display
VK_EXT_display_surface_counter
VK_EXT_debug_utils
VK_EXT_validation_flags
VK_EXT_swapchain_colorspace
Loader Message
WARNING
PERF
ERROR
DEBUG
vkSetInstanceDispatch: Can not retrieve Instance dispatch table.
loaderGetDeviceRegistryEntry: Failed to open registry key for DeviceID(%d)
loaderGetDeviceRegistryEntry: Device ID(%d) Does not contain a value for "%s"
loaderGetDeviceRegistryEntry: DeviceID(%d) Failed to obtain %s size
loaderGetDeviceRegistryEntry: Failed to allocate space for DriverName.
loaderGetDeviceRegistryEntry: DeviceID(%d) Failed to obtain %s
loaderGetDeviceRegistryEntry: Invalid %s data type. Expected REG_SZ or REG_MULTI_SZ.
loaderGetDeviceRegistryFiles: Failed to allocate space for display device names.
loaderGetDeviceRegistryFiles: failed to open DevNode %s
loaderGetDeviceRegistryFiles: failed to probe device status %s
loaderGetDeviceRegistryFiles: device %s is pending reboot, skipping ...
loaderGetDeviceRegistryFiles: opening device %s
loaderGetDeviceRegistryFiles: unable to open child-device error:%d
loaderGetDeviceRegistryFiles: Opening child device %d - %s
loaderGetDeviceRegistryFiles: unable to obtain GUID for:%d error:%d
loaderGetDeviceRegistryFiles: GUID for %d is not SoftwareComponent skipping
loaderGetRegistryFiles: Failed to allocate space for registry data for key %s
loaderGetRegistryFiles: Failed to reallocate space for registry value of size %d for key %s
HKEY_LOCAL_MACHINE
HKEY_CURRENT_USER
Located json file "%s" from registry "%s\%s"
%c%s
Skipping adding of json file "%s" from registry "%s\%s" to the list due to duplication
%d.%d.%d
Device Extension: %s (%s) version %s
loader_add_device_extensions: Error getting physical device extension info count from library %s
loader_init_generic_list: Failed to allocate space for generic list
loader_add_to_ext_list: Failed to reallocate space for extension list
loader_add_to_dev_ext_list: Failed to reallocate space for device extension list
loader_add_to_dev_ext_list: Failed to allocate space for device extension entrypoint list in list %d
loader_add_to_dev_ext_list: Failed to allocate space for device extension entrypoint %d name
loader_add_to_layer_list: Realloc failed for when attempting to add new layer
loader_add_meta_layer: Failed to find layer name %s component layer %s to activate
loader_find_layer_name_add_list: Failed to find layer name %s to activate
Build ICD instance extension list
VK_LOADER_DISABLE_INST_EXT_FILTER
loader_create_logical_device: Failed to alloc struct loader_device
SOFTWARE\Khronos\Vulkan\Drivers
file_format_version
loader_icd_scan: ICD JSON %s does not have a 'file_format_version' field. Skipping ICD JSON.
loader_icd_scan: Failed retrieving ICD JSON %s 'file_format_version' field.  Skipping ICD JSON
Found ICD manifest file %s, version %s
."\n\r
loader_icd_scan: Unexpected manifest file version (expected 1.0.0 or 1.0.1), may cause errors
library_path
loader_icd_scan: Failed retrieving ICD JSON %s 'library_path' field.  Skipping ICD JSON.
loader_icd_scan: ICD JSON %s 'library_path' field is empty.  Skipping ICD JSON.
Searching for ICD drivers named %s, using default dir %s
api_version
loader_icd_scan: Failed retrieving ICD JSON %s 'api_version' field.  Skipping ICD JSON.
loader_icd_scan: ICD JSON %s does not have an 'api_version' field.
loader_icd_scan: Failed to add ICD JSON %s.  Skipping ICD JSON.
loader_icd_scan: Failed to find 'library_path' object in ICD JSON file %s.  Skipping ICD JSON.
loader_icd_scan: Can not find 'ICD' object in ICD JSON file %s.  Skipping ICD JSON
SOFTWARE\Khronos\Vulkan\ExplicitLayers
SOFTWARE\Khronos\Vulkan\ImplicitLayers
loader_enable_instance_layers: Failed to initialize application version of the layer list
loader_enable_instance_layers: Failed to initialize expanded version of the layer list
VK_INSTANCE_LAYERS
loader_add_to_layer_list: Explicit layer %s is using an old API version %hu.%hu versus application requested %hu.%hu
vkNegotiateLoaderLayerInterfaceVersion
loader_create_instance_chain: Failed to find 'vkGetInstanceProcAddr' in layer %s
Insert instance layer %s (%s)
vkCreateInstance
loader_create_instance_chain: Failed to find 'vkCreateInstance'
loader_create_device_chain: Failed to find 'vkGetInstanceProcAddr' in layer %s.  Skipping layer.
Failed to find vkGetDeviceProcAddr in layer %s
Inserted device layer %s (%s)
loader_create_device_chain: Failed to find 'vkCreateDevice' in layer %s
loader_validate_layers: Device ppEnabledLayerNames contains string that is too long or is badly formed
loader_validate_layers: Layer %d does not exist in the list of available layers
loader_validate_instance_extensions: Instance ppEnabledExtensionNames contains string that is too long or is badly formed
loader_validate_instance_extensions: Extension %s not found in list of known instance extensions.
loader_validate_instance_extensions: Instance extension %s not supported by available ICDs or enabled layers.
loader_validate_device_extensions: Device ppEnabledExtensionNames contains string that is too long or is badly formed
loader_validate_device_extensions: Device extension %s not supported by selected physical device or enabled layers.
terminator_CreateInstance: Failed to add ICD %d to ICD trampoline list.
terminator_CreateInstance: ICD "%s" vkEnumerateInstanceVersion returned error. The ICD will be treated as a 1.0 ICD
terminator_CreateInstance: Failed to CreateInstance in ICD %d.  Skipping ICD.
terminator_CreateInstance: Failed to CreateInstance and find entrypoints with ICD.  Skipping ICD.
terminator_CreateDevice: No vkCreateDevice command exposed by ICD %s
vkCreateDevice extension %s not available for devices associated with ICD %s
vkCreateDevice: Emulating handling of VkPhysicalDeviceFeatures2 in pNext chain for ICD "%s"
vkCreateDevice: Emulating handling of VkPhysicalDeviceGroupProperties in pNext chain for ICD "%s"
vkCreateDevice: Emulation failed to create device from device group info
VK_KHR_display_swapchain
VK_EXT_debug_marker
terminator_CreateDevice: Failed in ICD %s vkCreateDevicecall
setupLoaderTrampPhysDevs:  Failed during dispatch call of 'vkEnumeratePhysicalDevices' to lower layers or loader to get count.
setupLoaderTrampPhysDevs:  Failed to allocate new physical device array of size %d
setupLoaderTrampPhysDevs:  Failed during dispatch call of 'vkEnumeratePhysicalDevices' to lower layers or loader to get content.
setupLoaderTrampPhysDevs:  Failed to allocate physical device trampoline object %d
setupLoaderTermPhysDevs:  Call to ICD %d's 'vkEnumeratePhysicalDevices' failed with error 0x%08x
setupLoaderTermPhysDevs:  Failed to detect any valid GPUs in the current config
setupLoaderTermPhysDevs:  Failed to allocate new physical device array of size %d
setupLoaderTermPhysDevs:  Failed to allocate physical device terminator object %d
Encountered the vkEnumerateDeviceLayerProperties terminator.  This means a layer improperly continued.
setupLoaderTermPhysDevGroups:  Loader failed to setup physical device terminator info before calling 'EnumeratePhysicalDeviceGroups'.
setupLoaderTermPhysDevGroups:  Failed during dispatch call of 'EnumeratePhysicalDevices' to ICD %d to get plain phys dev count.
setupLoaderTermPhysDevGroups:  Failed during dispatch call of 'EnumeratePhysicalDeviceGroups' to ICD %d to get count.
setupLoaderTermPhysDevGroups:  Failed to allocate new physical device group array of size %d
setupLoaderTermPhysDevGroups:  Failed during dispatch call of 'EnumeratePhysicalDeviceGroups' to ICD %d to get content.
setupLoaderTermPhysDevGroups:  Failed to find GPU %d in group %d returned by 'EnumeratePhysicalDeviceGroups' in list returned by 'EnumeratePhysicalDevices'
setupLoaderTermPhysDevGroups:  Failed to allocate physical device group Terminator object %d
vkGetPhysicalDeviceFeatures2: Emulating call in ICD "%s" using vkGetPhysicalDeviceFeatures
vkGetPhysicalDeviceFeatures2: Emulation found unrecognized structure type in pFeatures->pNext - this struct will be ignored
vkGetPhysicalDeviceProperties2: Emulating call in ICD "%s" using vkGetPhysicalDeviceProperties
vkGetPhysicalDeviceProperties2: Emulation cannot generate unique IDs for struct VkPhysicalDeviceIDProperties - setting IDs to zero instead
vkGetPhysicalDeviceProperties2KHR: Emulation found unrecognized structure type in pProperties->pNext - this struct will be ignored
vkGetPhysicalDeviceFormatProperties2: Emulating call in ICD "%s" using vkGetPhysicalDeviceFormatProperties
vkGetPhysicalDeviceFormatProperties2: Emulation found unrecognized structure type in pFormatProperties->pNext - this struct will be ignored
vkGetPhysicalDeviceImageFormatProperties2: Emulating call in ICD "%s" using vkGetPhysicalDeviceImageFormatProperties
vkGetPhysicalDeviceQueueFamilyProperties2: Emulating call in ICD "%s" using vkGetPhysicalDeviceQueueFamilyProperties
vkGetPhysicalDeviceQueueFamilyProperties2: Emulation found unrecognized structure type in pQueueFamilyProperties[%d].pNext - this struct will be ignored
vkGetPhysicalDeviceMemoryProperties2: Emulating call in ICD "%s" using vkGetPhysicalDeviceMemoryProperties
vkGetPhysicalDeviceMemoryProperties2: Emulation found unrecognized structure type in pMemoryProperties->pNext - this struct will be ignored
vkGetPhysicalDeviceSparseImageFormatProperties2: Emulating call in ICD "%s" using vkGetPhysicalDeviceSparseImageFormatProperties
vkGetPhysicalDeviceSparseImageFormatProperties2: Emulation found unrecognized structure type in pFormatInfo->pNext - this struct will be ignored
vkGetPhysicalDeviceSparseImageFormatProperties2: Emulation found unrecognized structure type in pProperties[%d].pNext - this struct will be ignored
vkGetPhysicalDeviceExternalBufferProperties: Emulating call in ICD "%s"
vkGetPhysicalDeviceExternalBufferProperties: Emulation found unrecognized structure type in pExternalBufferInfo->pNext - this struct will be ignored
vkGetPhysicalDeviceExternalBufferProperties: Emulation found unrecognized structure type in pExternalBufferProperties->pNext - this struct will be ignored
vkGetPhysicalDeviceExternalSemaphoreProperties: Emulating call in ICD "%s"
vkGetPhysicalDeviceExternalSemaphoreProperties: Emulation found unrecognized structure type in pExternalSemaphoreInfo->pNext - this struct will be ignored
vkGetPhysicalDeviceExternalSemaphoreProperties: Emulation found unrecognized structure type in pExternalSemaphoreProperties->pNext - this struct will be ignored
vkGetPhysicalDeviceExternalFenceProperties: Emulating call in ICD "%s"
vkGetPhysicalDeviceExternalFenceProperties: Emulation found unrecognized structure type in pExternalFenceInfo->pNext - this struct will be ignored
vkGetPhysicalDeviceExternalFenceProperties: Emulation found unrecognized structure type in pExternalFenceProperties->pNext - this struct will be ignored
Failed to find function "%s" in dynamic library
loaderAddJsonEntry: Failed to allocate space for registry data for key %s
loaderAddJsonEntry: Failed to reallocate space for registry value of size %d for key %s
loaderAddJsonEntry
%s: Located json file "%s" from PnP registry: %s
loader_add_implicit_layer: Disabling implicit layer %s for using an old API version %d.%d versus application requested %d.%d
loader_add_instance_extensions: Error getting Instance extension count from %s
loader_add_instance_extensions: Error getting Instance extensions from %s
Instance Extension: %s (%s) version %s
loader_add_instance_extensions: Failed to add %s to Instance extension list
VK_LOADER_DEBUG
info
perf
error
debug
loader_scanned_icd_init: Realloc failed for layer list when attempting to add new layer
loader_get_manifest_files: Can not get manifest files with NULL location, env_override=%s
loader_get_manifest_files: Registry lookup failed to get ICD manifest files.  Possibly missing Vulkan driver?
loader_get_manifest_files: Registry lookup failed to get layer manifest files.
Searching the following paths for manifest files: %s\n
.json
loader_get_manifest_files: Failed to allocate space for manifest file name list
loader_get_manifest_files: Failed to reallocate space for manifest file name list
loader_get_manifest_files: Failed to allocate space for manifest file %d list
Skipping manifest file %s - The file has already been read once
Skipping manifest file %s, file name must end in .json
VulkanDriverNameWow
VulkanDriverName
VulkanExplicitLayersWow
VulkanExplicitLayers
VulkanImplicitLayersWow
VulkanImplicitLayers
loader_get_json: Received invalid JSON file
loader_get_json: Failed to open JSON file %s
loader_get_json: Failed to read JSON file %s.
loader_get_json: Failed to parse JSON file %s, this is usually because something ran out of memory.
vk_icdNegotiateLoaderICDInterfaceVersion
loader_scanned_icd_add: ICD %s doesn't support interface version compatible with loader, skip this ICD.
vk_icdGetInstanceProcAddr
loader_scanned_icd_add: Attempt to retrieve either 'vkGetInstanceProcAddr' or 'vk_icdGetInstanceProcAddr' from ICD %s failed.
loader_scanned_icd_add: Using deprecated ICD interface of 'vkGetInstanceProcAddr' instead of 'vk_icdGetInstanceProcAddr' for ICD %s
loader_scanned_icd_add:  Failed querying 'vkCreateInstance' via dlsym/loadlibrary for ICD %s
loader_scanned_icd_add: Could not get 'vkEnumerateInstanceExtensionProperties' via dlsym/loadlibrary for ICD %s
loader_scanned_icd_add: Could not get 'vkCreateInstance' via 'vk_icdGetInstanceProcAddr' for ICD %s
loader_scanned_icd_add: Could not get 'vkEnumerateInstanceExtensionProperties' via 'vk_icdGetInstanceProcAddr' for ICD %s
vk_icdGetPhysicalDeviceProcAddr
loader_scanned_icd_add: Realloc failed on icd library list for ICD %s
loader_scanned_icd_add: Out of memory can't add ICD %s
Failed to open dynamic library "%s" with error %lu
Found manifest file %s, version %s
loader_add_layer_properties: %s invalid layer manifest file version %d.%d.%d.  May cause errors.
layers
loader_add_layer_properties: 'layers' tag not supported until file version 1.0.1, but %s is reporting version %s
loader_add_layer_properties: Can not find 'layers' array element %d object in manifest JSON file %s.  Skipping this file
layer
loader_add_layer_properties: Can not find 'layer' object in manifest JSON file %s.  Skipping this file.
loader_add_layer_properties: Multiple 'layer' nodes are deprecated starting in file version "1.0.1".  Please use 'layers' : [] array instead in %s.
name
Didn't find required layer value %s in manifest JSON file, skipping this layer
Problem accessing layer value %s in manifest JSON file, skipping this layer
type
implementation_version
description
DEVICE
Device layers are deprecated skipping this layer
INSTANCE
GLOBAL
component_layers
Indicating meta-layer-specific component_layers, but also defining layer library path.  Both are not compatible, so skipping this layer
Problem accessing layer value library_path in manifest JSON file, skipping this layer
Indicating meta-layer-specific component_layers, but using older JSON file version.
Encountered meta-layer %s
Layer missing both library_path and component_layers fields.  One or the other MUST be defined.  Skipping this layer
disable_environment
Didn't find required layer object %s in manifest JSON file, skipping this layer
Didn't find required layer child value disable_environmentin manifest JSON file, skipping this layer
functions
Layer "%s" using deprecated 'vkGetInstanceProcAddr' tag which was deprecated starting with JSON file version 1.1.0.  Instead, use the new vkNegotiateLayerInterfaceVersion function to return the GetInstanceProcAddr function for this layer.
Layer "%s" using deprecated 'vkGetDeviceProcAddr' tag which was deprecated starting with JSON file version 1.1.0.  Instead, use the new vkNegotiateLayerInterfaceVersion function to return the GetDeviceProcAddr function for this layer.
instance_extensions
spec_version
device_extensions
entrypoints
enable_environment
pre_instance_functions
Found pre_instance_functions section in layer from "%s". This section is only valid in manifest version 1.1.2 or later. The section will be ignored
Found pre_instance_functions section in explicit layer from "%s". This section is only valid in implicit layers. The section will be ignored
loader_get_next_layer_property: Out of memory can not add any layer properties to list
loader_get_next_layer_property: realloc failed for layer list
VK_LAYER_GOOGLE_threading
VK_LAYER_LUNARG_parameter_validation
VK_LAYER_LUNARG_object_tracker
VK_LAYER_LUNARG_core_validation
VK_LAYER_GOOGLE_unique_objects
Adding VK_LAYER_LUNARG_standard_validation using the loader legacy path.  This is not an error.
LunarG Standard Validation Layer
Failed to allocate space for legacy VK_LAYER_LUNARG_standard_validation meta-layer component_layers information.
Removing meta-layer %s from instance layer list since it appears invalid.
Meta-layer %s can't find component layer %s at index %d.  Skipping this layer.
Meta-layer %s can't find property for component layer %s at index %d.  Skipping this layer.
Meta-layer uses API version %d.%d, but component layer %d uses API version %d.%d.  Skipping this layer.
Meta-layer %s lists itself in its component layer list at index %d.  Skipping this layer.
verify_meta_layer_comp_layers: Adding meta-layer %s which also contains meta-layer %s
Meta-layer %s component layer %s can not find all component layers.  Skipping this layer.
Meta-layer %s component layer %s adding instance extension %s
Meta-layer %s component layer %s adding device extension %s
Meta-layer %s all %d component layers appear to be valid.
loader_add_dev_ext_table: Failed to allocate memory for func_name %s
loader_add_dev_ext_table: Failed to allocate memory for list index
loader_add_dev_ext_table: Failed to reallocate memory for list index
loader_add_dev_ext_table:  Could not insert into hash table; is it full?
loader_add_phys_dev_ext_table() can't allocate memory for func_name
loader_add_phys_dev_ext_table() can't allocate list memory
loader_add_phys_dev_ext_table() can't reallocate list memory
loader_add_dev_ext_table() can't reallocate func_name memory
loader_add_phys_dev_ext_table() couldn't insert into hash table; is it full?
Unloading layer library %s
loader_add_layer_names_to_list: Unable to find layer %s
vk_layerGetPhysicalDeviceProcAddr
loader_gpa_instance_internal() unrecognized name %s
loader_gpdpa_instance_terminator() unrecognized name %s
loader_gpdpa_instance_internal() unrecognized name %s
Loading layer library %s
postTranslateCompile
Shader compilation failed with no info log.
webgl_FragColor
angle_SecondaryFragColor
webgl_FragData
angle_SecondaryFragData
checkLinkStatus
Program link or binary loading failed: 
Program link or binary loading failed with no info log.
setSubImageRowByRowWorkaround
../../third_party/angle/src/libANGLE/renderer/gl/TextureGL.cpp
setSubImagePaddingWorkaround
copyImage
setStorage
Failed to resize buffer data shadow copy.
streamAttributes
../../third_party/angle/src/libANGLE/renderer/gl/VertexArrayGL.cpp
Failed to unmap the client data streaming buffer.
glFenceSync failed to create a GLsync object.
void
bool
yuvCscStandardEXT
sampler3D
samplerCube
samplerExternalOES
__samplerExternal2DY2YEXT
sampler2DRect
sampler2DArray
sampler2DMS
sampler2DMSArray
isampler2D
isampler3D
isamplerCube
isampler2DArray
isampler2DMS
isampler2DMSArray
usampler3D
usamplerCube
usampler2DArray
usampler2DMS
usampler2DMSArray
sampler2DShadow
samplerCubeShadow
sampler2DArrayShadow
structure
interface block
image2D
iimage2D
uimage2D
image3D
iimage3D
uimage3D
image2DArray
iimage2DArray
uimage2DArray
imageCube
iimageCube
uimageCube
atomic_uint
unknown type
ivec2
ivec3
ivec4
bvec2
bvec3
bvec4
uvec2
uvec3
casting a negative float to uint is undefined
Zero divided by zero during constant folding generated NaN
Divide by zero during constant folding
Infinity divided by infinity during constant folding generated NaN
Constant folded division overflowed to infinity
Divide by zero error during constant folding
Negative modulus operator operand encountered during constant folding. Results are undefined.
operation result is undefined for the values passed in
int abs_emu(int x) { return x * sign(x); }
bool isnan_emu(float x) { return (x > 0.0 || x < 0.0) ? false : x != 0.0; }
bvec2 isnan_emu(vec2 x)\n{\n    bvec2 isnan;\n    for (int i = 0; i < 2; i++)\n    {\n        isnan[i] = (x[i] > 0.0 || x[i] < 0.0) ? false : x[i] != 0.0;\n    }\n    return isnan;\n}\n
bvec3 isnan_emu(vec3 x)\n{\n    bvec3 isnan;\n    for (int i = 0; i < 3; i++)\n    {\n        isnan[i] = (x[i] > 0.0 || x[i] < 0.0) ? false : x[i] != 0.0;\n    }\n    return isnan;\n}\n
bvec4 isnan_emu(vec4 x)\n{\n    bvec4 isnan;\n    for (int i = 0; i < 4; i++)\n    {\n        isnan[i] = (x[i] > 0.0 || x[i] < 0.0) ? false : x[i] != 0.0;\n    }\n    return isnan;\n}\n
emu_precision float atan_emu(emu_precision float y, emu_precision float x)\n{\n    if (x > 0.0) return atan(y / x);\n    else if (x < 0.0 && y >= 0.0) return atan(y / x) + 3.14159265;\n    else if (x < 0.0 && y < 0.0) return atan(y / x) - 3.14159265;\n    else return 1.57079632 * sign(y);\n}\n
emu_precision vec
 atan_emu(emu_precision vec
 y, emu_precision vec
 x)\n
{\n    return vec
atan_emu(y[
], x[
);\n}\n
uint packUnorm2x16_emu(vec2 v)\n{\n    int x = int(round(clamp(v.x, 0.0, 1.0) * 65535.0));\n    int y = int(round(clamp(v.y, 0.0, 1.0) * 65535.0));\n    return uint((y << 16) | (x & 0xFFFF));\n}\n
vec2 unpackUnorm2x16_emu(uint u)\n{\n    float x = float(u & 0xFFFFu) / 65535.0;\n    float y = float(u >> 16) / 65535.0;\n    return vec2(x, y);\n}\n
uint packSnorm2x16_emu(vec2 v)\n{\n    #if defined(GL_ARB_shading_language_packing)\n        return packSnorm2x16(v);\n    #else\n        int x = int(round(clamp(v.x, -1.0, 1.0) * 32767.0));\n        int y = int(round(clamp(v.y, -1.0, 1.0) * 32767.0));\n        return uint((y << 16) | (x & 0xFFFF));\n    #endif\n}\n
#if !defined(GL_ARB_shading_language_packing)\n    float fromSnorm(uint x)\n    {\n        int xi = (int(x) & 0x7FFF) - (int(x) & 0x8000);\n        return clamp(float(xi) / 32767.0, -1.0, 1.0);\n    }\n#endif\n\nvec2 unpackSnorm2x16_emu(uint u)\n{\n    #if defined(GL_ARB_shading_language_packing)\n        return unpackSnorm2x16(u);\n    #else\n        uint y = (u >> 16);\n        uint x = u;\n        return vec2(fromSnorm(x), fromSnorm(y));\n    #endif\n}\n
#if !defined(GL_ARB_shading_language_packing)\n    uint f32tof16(float val)\n    {\n        uint f32 = floatBitsToUint(val);\n        uint f16 = 0u;\n        uint sign = (f32 >> 16) & 0x8000u;\n        int exponent = int((f32 >> 23) & 0xFFu) - 127;\n        uint mantissa = f32 & 0x007FFFFFu;\n        if (exponent == 128)\n        {\n            // Infinity or NaN\n            // NaN bits that are masked out by 0x3FF get discarded.\n            // This can turn some NaNs to infinity, but this is allowed by the spec.\n            f16 = sign | (0x1Fu << 10);\n            f16 |= (mantissa & 0x3FFu);\n        }\n        else if (exponent > 15)\n        {\n            // Overflow - flush to Infinity\n            f16 = sign | (0x1Fu << 10);\n        }\n        else if (exponent > -15)\n        {\n            // Representable value\n            exponent += 15;\n            mantissa >>= 13;\n            f16 = sign | uint(exponent << 10) | mantissa;\n        }\n        else\n        {\n            f16 = sign;\n        }\n        return f16;\n    }\n#endif\n\nuint packHalf2x16_emu(vec2 v)\n{\n    #if defined(GL_ARB_shading_language_packing)\n        return packHalf2x16(v);\n    #else\n        uint x = f32tof16(v.x);\n        uint y = f32tof16(v.y);\n        return (y << 16) | x;\n    #endif\n}\n
#if !defined(GL_ARB_shading_language_packing)\n    float f16tof32(uint val)\n    {\n        uint sign = (val & 0x8000u) << 16;\n        int exponent = int((val & 0x7C00u) >> 10);\n        uint mantissa = val & 0x03FFu;\n        float f32 = 0.0;\n        if(exponent == 0)\n        {\n            if (mantissa != 0u)\n            {\n                const float scale = 1.0 / (1 << 24);\n                f32 = scale * mantissa;\n            }\n        }\n        else if (exponent == 31)\n        {\n            return uintBitsToFloat(sign | 0x7F800000u | mantissa);\n        }\n        else\n        {\n            exponent -= 15;\n            float scale;\n            if(exponent < 0)\n            {\n                // The negative unary operator is buggy on OSX.\n                // Work around this by using abs instead.\n                scale = 1.0 / (1 << abs(exponent));\n            }\n            else\n            {\n                scale = 1 << exponent;\n            }\n            float decimal = 1.0 + float(mantissa) / float(1 << 10);\n            f32 = scale * decimal;\n        }\n\n        if (sign != 0u)\n        {\n            f32 = -f32;\n        }\n\n        return f32;\n    }\n#endif\n\nvec2 unpackHalf2x16_emu(uint u)\n{\n    #if defined(GL_ARB_shading_language_packing)\n        return unpackHalf2x16(u);\n    #else\n        uint y = (u >> 16);\n        uint x = u & 0xFFFFu;\n        return vec2(f16tof32(x), f16tof32(y));\n    #endif\n}\n
uintBitsToFloat(
index = 
binding = 
offset = 
readonly 
writeonly 
coherent 
restrict 
volatile 
[int(clamp(float(
[webgl_int_clamp(
), 0.0, float(
, 0, 
.length() - 1
)))]
 ^^ 
).length())
) ? (
) : (
for (
{\n}\n
#define
#endif
#ifdef
struct 
layout (
invocations = 
max_vertices = 
) out;\n
unknown geometry shader primitive type
texture2DGradARB
texture2DProjGradARB
textureCubeGradARB
@@ LAYOUT-
@@ QUALIFIER-
 @@ 
Undefined shift (operand out of range)
Constant folded undefined addition generated NaN
Constant folded addition overflowed to infinity
Constant folded undefined subtraction generated NaN
Constant folded subtraction overflowed to infinity
Constant folded undefined multiplication generated NaN
Constant folded multiplication overflowed to infinity
WARNING: 
ERROR: 
UNKOWN ERROR: 
array[
] of 
 matrix of 
-component vector of 
internal error
out of memory
invalid character
invalid number
integer overflow
float overflow
token too long
invalid expression
division by zero
unexpected end of file found in comment
unexpected token
invalid directive name
macro name is reserved
macro redefined
predefined macro redefined
predefined macro undefined
unterminated macro invocation
macro undefined while being invoked
Not enough arguments for macro
Too many arguments for macro
duplicate macro parameter name
macro invocation chain too deep
unexpected #endif found without a matching #if
unexpected #else found without a matching #if
unexpected #else found after another #else
unexpected #elif found without a matching #if
unexpected #elif found after #else
unexpected end of file found in conditional block
invalid extension name
invalid extension behavior
invalid extension directive
invalid version number
invalid version directive
#version directive must occur before anything else, except for comments and white space
#version directive must occur on the first line of the shader
invalid line number
invalid file number
invalid line directive
extension directive must occur before any non-preprocessor tokens in ESSL3
shift exponent is negative or undefined
internal tokenizer error
unexpected end of file found in directive
unexpected token after conditional expression
unrecognized pragma
extension directive should occur before any non-preprocessor tokens
macro name with a double underscore is reserved - unintented behavior is possible
invariant
#pragma STDGL invariant(all) can not be used in fragment shader
optimize
debug
webgl_debug_shader_precision
invalid pragma value - 'on' or 'off' expected
behavior invalid
extension cannot have 'require' behavior
extension cannot have 'enable' behavior
version number not supported
require
enable
disable
warn
__LINE__
__FILE__
__VERSION__
GL_ES
Cannot have multiple different work group size specifiers
Cannot have multiple different primitive specifiers
Cannot have multiple different invocations specifiers
Cannot have multiple different max_vertices specifiers
Cannot have multiple index specifiers
qualifier sequence
The invariant qualifier specified multiple times.
The precision qualifier specified multiple times.
The layout qualifier specified multiple times.
The layout qualifier and invariant qualifier cannot coexist in the same declaration according to the grammar.
The interpolation qualifier specified multiple times.
 specified multiple times
Output layout location specified multiple times.
The invariant qualifier has to be first in the expression.
Storage qualifiers have to be after interpolation qualifiers.
Precision qualifiers have to be after interpolation qualifiers.
Storage qualifiers have to be after layout qualifiers.
Precision qualifiers have to be after layout qualifiers.
Precision qualifiers have to be after storage qualifiers.
Precision qualifiers have to be after memory qualifiers.
invalid parameter qualifier
Invalid parameter qualifier 
invalid qualifier combination
.length()
kill
label statement nested inside control flow
duplicate default label
case label type does not match switch init-expression type
duplicate case label
statement before the first label
no statement between the last label and the end of the switch statement
too complex expressions inside a switch statement
\t\n\v\f\r
 !"#$%%%%%%&%'%%()*+%%,-%.
23456789:%;<=>?@%ABCDEFGHIJKLM
Illegal character at fieldname start
fatal flex scanner internal error--no action found
out of dynamic memory in yy_create_buffer()
yyset_lineno called with no buffer
yyset_column called with no buffer
GL_FRAGMENT_PRECISION_HIGH
fatal flex scanner internal error--end of buffer missed
fatal error - scanner input buffer overflow
out of dynamic memory in yy_get_next_buffer()
Input buffer overflow
out of dynamic memory in yyensure_buffer_stack()
Illegal use of reserved word
Unsigned integers are unsupported prior to GLSL ES 3.00
Integer overflow
Floating-point suffix unsupported prior to GLSL ES 3.00
Float overflow
\t\n\v\f\r
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
unsupported value
methods supported in GLSL ES 3.00 and above only
bit-wise operator supported in GLSL ES 3.00 and above only
integer modulus operator supported in GLSL ES 3.00 and above only
interface blocks supported in GLSL ES 3.00 and above only
cannot be a parameter type except for '(void)'
first-class arrays (array initializer) supported in GLSL ES 3.00 and above only
 supported in vertex shaders only
 supported in GLSL ES 1.00 only
storage qualifier supported in GLSL ES 3.10 only
 supported in compute shaders only
qualifier supported in GLSL ES 3.00 and above only
implicitly sized array supported in GLSL ES 3.00 and above only
arrays of arrays supported in GLSL ES 3.10 only
unsupported type
syntax error
memory exhausted
    float pad_
#pragma pack_matrix(column_major)\n
#pragma pack_matrix(row_major)\n
_ctor
 structure = { 
)\n{\n    
};\n    return structure;\n}\n
)\n{\n    return 
.xyzw
static const uint 
static const uint textureIndexOffset
static const uint samplerIndexOffset
 textures
 : register(t
 samplers
 : register(s
static const uint readonlyImageIndexOffset
 readonlyImages
static const uint imageIndexOffset
 images
 : register(u
register(
// Uniforms\n\n
    struct SamplerMetadata\n    {\n        int baseLevel;\n        int internalFormatBits;\n        int wrapModes;\n        int padding;\n    };\n    SamplerMetadata samplerMetadata[
] : packoffset(
// Uniform Blocks\n\n
// Shader Storage Blocks\n\n
 : register(b
cbuffer 
: register(u
RWByteAddressBuffer 
_type
bool isnan_emu(float x)\n{\n    return (x > 0.0 || x < 0.0) ? false : x != 0.0;\n}\n\n
bool2 isnan_emu(float2 x)\n{\n    bool2 isnan;\n    for (int i = 0; i < 2; i++)\n    {\n        isnan[i] = (x[i] > 0.0 || x[i] < 0.0) ? false : x[i] != 0.0;\n    }\n    return isnan;\n}\n
bool3 isnan_emu(float3 x)\n{\n    bool3 isnan;\n    for (int i = 0; i < 3; i++)\n    {\n        isnan[i] = (x[i] > 0.0 || x[i] < 0.0) ? false : x[i] != 0.0;\n    }\n    return isnan;\n}\n
bool4 isnan_emu(float4 x)\n{\n    bool4 isnan;\n    for (int i = 0; i < 4; i++)\n    {\n        isnan[i] = (x[i] > 0.0 || x[i] < 0.0) ? false : x[i] != 0.0;\n    }\n    return isnan;\n}\n
void umulExtended_emu(uint x, uint y, out uint msb, out uint lsb)\n{\n    lsb = x * y;\n    uint a = (x & 0xffffu);\n    uint b = (x >> 16);\n    uint c = (y & 0xffffu);\n    uint d = (y >> 16);\n    uint ad = a * d + ((a * c) >> 16);\n    uint bc = b * c;\n    uint carry = uint(ad > (0xffffffffu - bc));\n    msb = ((ad + bc) >> 16) + (carry << 16) + b * d;\n}\n
void umulExtended_emu(uint2 x, uint2 y, out uint2 msb, out uint2 lsb)\n{\n    umulExtended_emu(x.x, y.x, msb.x, lsb.x);\n    umulExtended_emu(x.y, y.y, msb.y, lsb.y);\n}\n
void umulExtended_emu(uint3 x, uint3 y, out uint3 msb, out uint3 lsb)\n{\n    umulExtended_emu(x.x, y.x, msb.x, lsb.x);\n    umulExtended_emu(x.y, y.y, msb.y, lsb.y);\n    umulExtended_emu(x.z, y.z, msb.z, lsb.z);\n}\n
void umulExtended_emu(uint4 x, uint4 y, out uint4 msb, out uint4 lsb)\n{\n    umulExtended_emu(x.x, y.x, msb.x, lsb.x);\n    umulExtended_emu(x.y, y.y, msb.y, lsb.y);\n    umulExtended_emu(x.z, y.z, msb.z, lsb.z);\n    umulExtended_emu(x.w, y.w, msb.w, lsb.w);\n}\n
void imulExtended_emu(int x, int y, out int msb, out int lsb)\n{\n    uint unsignedMsb;\n    uint unsignedLsb;\n    bool negative = (x < 0) != (y < 0);\n    umulExtended_emu(uint(abs(x)), uint(abs(y)), unsignedMsb, unsignedLsb);\n    lsb = asint(unsignedLsb);\n    msb = asint(unsignedMsb);\n    if (negative)\n    {\n        lsb = ~lsb;\n        msb = ~msb;\n        if (lsb == 0xffffffff)\n        {\n            lsb = 0;\n            msb += 1;\n        }\n        else\n        {\n            lsb += 1;\n        }\n    }\n}\n
void imulExtended_emu(int2 x, int2 y, out int2 msb, out int2 lsb)\n{\n    imulExtended_emu(x.x, y.x, msb.x, lsb.x);\n    imulExtended_emu(x.y, y.y, msb.y, lsb.y);\n}\n
void imulExtended_emu(int3 x, int3 y, out int3 msb, out int3 lsb)\n{\n    imulExtended_emu(x.x, y.x, msb.x, lsb.x);\n    imulExtended_emu(x.y, y.y, msb.y, lsb.y);\n    imulExtended_emu(x.z, y.z, msb.z, lsb.z);\n}\n
void imulExtended_emu(int4 x, int4 y, out int4 msb, out int4 lsb)\n{\n    imulExtended_emu(x.x, y.x, msb.x, lsb.x);\n    imulExtended_emu(x.y, y.y, msb.y, lsb.y);\n    imulExtended_emu(x.z, y.z, msb.z, lsb.z);\n    imulExtended_emu(x.w, y.w, msb.w, lsb.w);\n}\n
SamplerComparisonState
SamplerState
Texture2D<float4>
TextureCube<float4>
Texture2DArray<float4>
Texture3D<float4>
Texture2D<unorm float4>
TextureCube<unorm float4>
Texture2DArray<unorm float4>
Texture3D<unorm float4>
Texture2D<snorm float4>
TextureCube<snorm float4>
Texture2DArray<snorm float4>
Texture3D<snorm float4>
Texture2DMS<float4>
Texture2DMSArray<float4>
Texture2D<int4>
Texture3D<int4>
Texture2DArray<int4>
Texture2DMS<int4>
Texture2DMSArray<int4>
Texture2D<uint4>
Texture3D<uint4>
Texture2DArray<uint4>
Texture2DMS<uint4>
Texture2DMSArray<uint4>
Texture2D
TextureCube
Texture2DArray
<unknown read texture type>
Cube
2DArray
2D_unorm_float4_
Cube_unorm_float4_
2DArray_unorm_float4_
3D_unorm_float4_
2D_snorm_float4_
Cube_snorm_float4_
2DArray_snorm_float4_
3D_snorm_float4_
2DMS
2DMSArray
2D_int4_
3D_int4_
2DArray_int4_
2DMS_int4_
2DMSArray_int4_
2D_uint4_
3D_uint4_
2DArray_uint4_
2DMS_uint4_
2DMSArray_uint4_
2D_comparison
Cube_comparison
2DArray_comparison
<unknown texture type>
Cube_int4_
Cube_uint4_
_External
Cube_float4_
_TTS_invalid_
RWTexture2D<float4>
RWTexture2DArray<float4>
RWTexture3D<float4>
RWTexture2D<unorm float4>
RWTexture2DArray<unorm float4>
RWTexture3D<unorm float4>
RWTexture2D<snorm float4>
RWTexture2DArray<snorm float4>
RWTexture3D<snorm float4>
RWTexture2D<uint4>
RWTexture2DArray<uint4>
RWTexture3D<uint4>
RWTexture2D<int4>
RWTexture2DArray<int4>
RWTexture3D<int4>
<unknown read and write texture type>
RW2D_float4_
RW2DArray_float4_
RW3D_float4_
RW2D_unorm_float4_
RW2DArray_unorm_float4_
RW3D_unorm_float4_
RW2D_snorm_float4_
RW2DArray_snorm_float4_
RW3D_snorm_float4_
RW2D_uint4_
RW2DArray_uint4_
RW3D_uint4_
RW2D_int4_
RW2DArray_int4_
RW3D_int4_
<unknown read and write resource>
RWCube_float4_
RWCube_unorm_float4_
RWCube_int4_
RWCube_uint4_
_RWTS_invalid_
int2
int3
int4
uint2
uint3
uint4
bool2
bool3
bool4
samplerCUBE
<unknown type>
std_
linear
nointerpolation
gl_texture
Proj
Offset
Lod0
Size
Fetch
Grad
Gather
sampler2D s
samplerCUBE s
 x, 
uint samplerIndex
, int2 t
, int3 t
, int lod
, float2 t
, float3 t
, float4 t
, float2 ddx, float2 ddy
, float3 ddx, float3 ddy
, float lod
, int index
, int mip
, float refZ
, int3 offset
, int2 offset
, float bias
, int comp = 0
textures
samplers
[samplerIndex]
[textureIndex]
[samplerArrayIndex]
    const uint textureIndex = samplerIndex - textureIndexOffset
    const uint samplerArrayIndex = samplerIndex - samplerIndexOffset
    uint width; uint height; uint samples;\n
.GetDimensions(width, height, samples);\n
    uint width; uint height; uint depth; uint samples;\n
.GetDimensions(width, height, depth, samples);\n
    int baseLevel = samplerMetadata[samplerIndex].baseLevel;\n
    int baseLevel = 0;\n
    uint width; uint height; uint depth; uint numberOfLevels;\n
.GetDimensions(baseLevel, width, height, depth, numberOfLevels);\n
    width = max(width >> lod, 1);\n
    height = max(height >> lod, 1);\n
    depth = max(depth >> lod, 1);\n
    uint width; uint height; uint numberOfLevels;\n
.GetDimensions(baseLevel, width, height, numberOfLevels);\n
    return int3(width, height, depth);\n
    return int2(width, height);\n
.GatherCmp(
, refZ
, offset
GatherRed
GatherGreen
GatherBlue
GatherAlpha
    switch(comp)\n    {\n
        case 
            return 
        default:\n            return float4(0.0, 0.0, 0.0, 1.0);\n    }\n
 / t.z
 / t.w
    float width; float height; float layers; float levels;\n
    uint mip = 0;\n
.GetDimensions(mip, width, height, layers, levels);\n
    bool xMajor = abs(t.x) > abs(t.y) && abs(t.x) > abs(t.z);\n
    bool yMajor = abs(t.y) > abs(t.z) && abs(t.y) > abs(t.x);\n
    bool zMajor = abs(t.z) > abs(t.x) && abs(t.z) > abs(t.y);\n
    bool negative = (xMajor && t.x < 0.0f) || (yMajor && t.y < 0.0f) || (zMajor && t.z < 0.0f);\n
    int face = (int)negative + (int)yMajor * 2 + (int)zMajor * 4;\n
    float u = xMajor ? -t.z : (yMajor && t.y < 0.0f ? -t.x : t.x);\n
    float v = yMajor ? t.z : (negative ? t.y : -t.y);\n
    float m = xMajor ? t.x : (yMajor ? t.y : t.z);\n
    t.x = (u * 0.5f / m) + 0.5f;\n
    t.y = (v * 0.5f / m) + 0.5f;\n
    float2 tSized = float2(t.x * width, t.y * height);\n    float2 dx = ddx(tSized);\n    float2 dy = ddy(tSized);\n    float lod = 0.5f * log2(max(dot(dx, dx), dot(dy, dy)));\n
    float dudx = xMajor ? ddx[2] : (yMajor && t.y < 0.0f ? -ddx[0] : ddx[0]);\n    float dudy = xMajor ? ddy[2] : (yMajor && t.y < 0.0f ? -ddy[0] : ddy[0]);\n    float dvdx = yMajor ? ddx[2] : (negative ? ddx[1] : -ddx[1]);\n    float dvdy = yMajor ? ddy[2] : (negative ? ddy[1] : -ddy[1]);\n    float dmdx = xMajor ? ddx[0] : (yMajor ? ddx[1] : ddx[2]);\n    float dmdy = xMajor ? ddy[0] : (yMajor ? ddy[1] : ddy[2]);\n
    float dfacexdx = 0.5f * (m * dudx - u * dmdx) / (m * m);\n    float dfaceydx = 0.5f * (m * dvdx - v * dmdx) / (m * m);\n    float dfacexdy = 0.5f * (m * dudy - u * dmdy) / (m * m);\n    float dfaceydy = 0.5f * (m * dvdy - v * dmdy) / (m * m);\n    float2 sizeVec = float2(width, height);\n    float2 faceddx = float2(dfacexdx, dfaceydx) * sizeVec;\n    float2 faceddy = float2(dfacexdy, dfaceydy) * sizeVec;\n
    float lengthfaceddx2 = dot(faceddx, faceddx);\n    float lengthfaceddy2 = dot(faceddy, faceddy);\n    float lod = log2(max(lengthfaceddx2, lengthfaceddy2)) * 0.5f;\n
    mip = uint(min(max(round(lod), 0), levels - 1));\n
int(floor(width * frac(
int(floor(height * frac(
face
    uint mip = bias;\n
.GetDimensions(0, width, height, layers, levels);\n
    float2 tSized = float2(t.x * width, t.y * height);\n    float dx = length(ddx(tSized));\n    float dy = length(ddy(tSized));\n    float lod = log2(max(dx, dy));\n
    lod += bias;\n
    float2 sizeVec = float2(width, height);\n    float2 sizeDdx = ddx * sizeVec;\n    float2 sizeDdy = ddy * sizeVec;\n    float lod = log2(max(dot(sizeDdx, sizeDdx), dot(sizeDdy, sizeDdy))) * 0.5f;\n
    uint mip = uint(min(max(round(lod), 0), levels - 1));\n
    float width; float height; float levels;\n
.GetDimensions(0, width, height, levels);\n
.GetDimensions(mip, width, height, levels);\n
    float width; float height; float depth; float levels;\n
.GetDimensions(0, width, height, depth, levels);\n
    float3 tSized = float3(t.x * width, t.y * height, t.z * depth);\n    float dx = length(ddx(tSized));\n    float dy = length(ddy(tSized));\n    float lod = log2(max(dx, dy));\n
    float3 sizeVec = float3(width, height, depth);\n    float3 sizeDdx = ddx * sizeVec;\n    float3 sizeDdy = ddy * sizeVec;\n    float lod = log2(max(dot(sizeDdx, sizeDdx), dot(sizeDdy, sizeDdy))) * 0.5f;\n
.GetDimensions(mip, width, height, depth, levels);\n
int wrapS = samplerMetadata[samplerIndex].wrapModes & 0x3;\n
offset.x
width
wrapS
int wrapT = (samplerMetadata[samplerIndex].wrapModes >> 2) & 0x3;\n
offset.y
height
wrapT
int(max(0, min(layers - 1, floor(0.5 + t.z))))
int wrapR = (samplerMetadata[samplerIndex].wrapModes >> 4) & 0x3;\n
offset.z
depth
wrapR
int 
float 
Offset = 
 + float(
) / 
 == 1)\n
 = clamp(int(floor(
Offset)), 0, int(
) - 1);\n
else if (
 == 3)\n
    float coordWrapped = 1.0 - abs(frac(abs(
Offset) * 0.5) * 2.0 - 1.0);\n
 = int(floor(
 * coordWrapped));\n
 * frac(
Offset)));\n
    return 
tex2D
texCUBE
bias(
lod(
grad(
, bias
, lod
, mip)
), t.z
), t.w
), ddx, ddy
), index
), bias
), lod
), 0
.Load(
.SampleCmp(
.SampleCmpLevelZero(
.Sample(
.SampleBias(
.SampleLevel(
.SampleGrad(
[index]
readonlyImages
    const uint index = imageIndex - readonlyImageIndexOffset
images
    const uint index = imageIndex - imageIndexOffset
uint imageIndex
, int2 p
, int3 p
, float4 data
, int4 data
, uint4 data
    uint width; uint height; uint depth;\n
.GetDimensions(width, height, depth);\n
    uint width; uint height;\n
.GetDimensions(width, height);\n
[uint3(p.x, p.y, p.z)];\n
[uint2(p.x, p.y)];\n
[p] = data;\n
gl_image
Load
Store
Performance: non-empty fall-through cases in switch statements generate extra code.
SetThreadGroupAffinity
GetThreadGroupAffinity
GetCurrentProcessorNumberEx
GetLogicalProcessorInformationEx
count
pScheduler
version
eventObject
ppVirtualProcessorRoots
AlignedAlloc
If you crashed here, your aligned allocation is incorrect: 
size=
, alignment=
GLSL.std.450
main
main
gl_PerVertex
gl_Position
gl_PointSize
gl_ClipDistance
gl_CullDistance
gl_VertexIndex
indexable
GLSL.std.450
main
main
colorOut
block
colorIn
Cannot mix ES profile with non-ES profile shaders
Cannot attach multiple ES shaders of the same type to a single program
\nLinked 
 stage:\n\n
@this
@count
Warning, (version, profile) forced to be (
), while in source code it is (
#version
Illegal to have non-comment, non-whitespace tokens before #version
\n int;
none
core
compatibility
unknown profile
#version: versions 300, 310, and 320 require specifying the 'es' profile
#version: versions before 150 do not allow a profile token
#version: versions 300, 310, and 320 support only the es profile
#version: only version 300, 310, and 320 support the es profile
version not supported
#version: geometry shaders require es profile with version 310 or non-es profile with version 150 or above
#version: tessellation shaders require es profile with version 310 or non-es profile with version 150 or above
#version: compute shaders require es profile with version 310 or above, or non-es profile with version 420 or above
#version: statement must appear first in es-profile shader; before comments or newlines
#version: ES shaders for Vulkan SPIR-V require version 310 or higher
#version: ES shaders for OpenGL SPIR-V are not supported
#version: compilation for SPIR-V does not support the compatibility profile
#version: Desktop shaders for Vulkan SPIR-V require version 140 or higher
#version: Desktop shaders for OpenGL SPIR-V require version 330 or higher
relaxed-errors
suppress-warnings
keep-uncalled
source-entrypoint
hlsl-offsets
Unable to determine source language
Unable to parse built-ins
Unable to parse built-ins\n%s\n
No errors.  No code generation or linking was requested.
 compilation errors.  No code generated.\n\n
INTERNAL ERROR: 
UNIMPLEMENTED: 
NOTE: 
UNKNOWN ERROR: 
entry-point
client vulkan100
client opengl100
target-env vulkan1.0
target-env opengl
// OpModuleProcessed 
#line 1\n
GLSL.std.450
SPV_KHR_vulkan_memory_model
SPV_KHR_post_depth_coverage
SPV_GOOGLE_hlsl_functionality1
SPV_KHR_16bit_storage
SPV_KHR_8bit_storage
Neither a front-end constant nor a spec constant.
SPV_KHR_storage_buffer_storage_class
SPV_EXT_descriptor_indexing
$Global
anon@
SPV_EXT_shader_viewport_index_layer
SPV_KHR_shader_draw_parameters
SPV_EXT_shader_stencil_export
SPV_KHR_shader_ballot
SPV_KHR_device_group
SPV_KHR_multiview
matrix swizzle
unknown glslang binary operation
unknown glslang unary
SPV_KHR_subgroup_vote
invocation operation
missing user function; linker needs to catch that
SPV_KHR_shader_atomic_counter_ops
unknown glslang aggregate
param
unknown operation with no arguments
VK_EXT_debug_report
VK_EXT_debug_utils
vkGetPhysicalDeviceSurfaceCapabilities2KHR: Emulating call in ICD "%s" using vkGetPhysicalDeviceSurfaceCapabilitiesKHR
vkGetPhysicalDeviceSurfaceCapabilities2KHR: Emulation found unrecognized structure type in pSurfaceInfo->pNext - this struct will be ignored
vkGetPhysicalDeviceSurfaceCapabilities2KHR: Emulation found unrecognized structure type in pSurfaceCapabilities->pNext - this struct will be ignored
vkGetPhysicalDeviceSurfaceFormats2KHR: Emulating call in ICD "%s" using vkGetPhysicalDeviceSurfaceFormatsKHR
vkGetPhysicalDeviceSurfaceFormats2KHR: Emulation found unrecognized structure type in pSurfaceInfo->pNext - this struct will be ignored
vkGetPhysicalDeviceSurfaceFormats2KHR: Emulation found unrecognized structure type in pSurfaceFormats[%d].pNext - this struct will be ignored
vkGetPhysicalDeviceSurfaceCapabilities2EXT: Emulating call in ICD "%s" using vkGetPhysicalDeviceSurfaceCapabilitiesKHR
vkGetPhysicalDeviceSurfaceCapabilities2EXT: Emulation found unrecognized structure type in pSurfaceCapabilities->pNext - this struct will be ignored
ICD "%s" associated with VkPhysicalDevice does not support vkReleaseDisplayEXT - Consequently, the call is invalid because it should not be possible to acquire a display on this device
Anull
%.0f
\f\n\r\t
u%04x
\t\t\n\v\t\f\r
Integer overflow on line number
EOF while in a comment
STDGL
define
undef
ifdef
ifndef
else
elif
endif
error
pragma
extension
version
line
defined
defined
__LINE__
__FILE__
 result = 
buffer.Load(loc));\n
    return result;\n
    return 1.0;\n
    buffer.Store(loc, asuint(value));\n
_Load
_Store
(RWByteAddressBuffer buffer, uint loc)\n
(RWByteAddressBuffer buffer, uint loc, 
 value)\n
float mod_emu(float x, float y)\n{\n    return x - y * floor(x / y);\n}\n
float2 mod_emu(float2 x, float2 y)\n{\n    return x - y * floor(x / y);\n}\n
float2 mod_emu(float2 x, float y)\n{\n    return x - y * floor(x / y);\n}\n
float3 mod_emu(float3 x, float3 y)\n{\n    return x - y * floor(x / y);\n}\n
float3 mod_emu(float3 x, float y)\n{\n    return x - y * floor(x / y);\n}\n
float4 mod_emu(float4 x, float4 y)\n{\n    return x - y * floor(x / y);\n}\n
float4 mod_emu(float4 x, float y)\n{\n    return x - y * floor(x / y);\n}\n
float frexp_emu(float x, out int exp)\n{\n    float fexp;\n    float mantissa = frexp(abs(x), fexp) * sign(x);\n    exp = int(fexp);\n    return mantissa;\n}\n
float2 frexp_emu(float2 x, out int2 exp)\n{\n    float2 fexp;\n    float2 mantissa = frexp(abs(x), fexp) * sign(x);\n    exp = int2(fexp);\n    return mantissa;\n}\n
float3 frexp_emu(float3 x, out int3 exp)\n{\n    float3 fexp;\n    float3 mantissa = frexp(abs(x), fexp) * sign(x);\n    exp = int3(fexp);\n    return mantissa;\n}\n
float4 frexp_emu(float4 x, out int4 exp)\n{\n    float4 fexp;\n    float4 mantissa = frexp(abs(x), fexp) * sign(x);\n    exp = int4(fexp);\n    return mantissa;\n}\n
float ldexp_emu(float x, int exp)\n{\n    return ldexp(x, float(exp));\n}\n
float2 ldexp_emu(float2 x, int2 exp)\n{\n    return ldexp(x, float2(exp));\n}\n
float3 ldexp_emu(float3 x, int3 exp)\n{\n    return ldexp(x, float3(exp));\n}\n
float4 ldexp_emu(float4 x, int4 exp)\n{\n    return ldexp(x, float4(exp));\n}\n
float faceforward_emu(float N, float I, float Nref)\n{\n    if(dot(Nref, I) >= 0)\n    {\n        return -N;\n    }\n    else\n    {\n        return N;\n    }\n}\n
float2 faceforward_emu(float2 N, float2 I, float2 Nref)\n{\n    if(dot(Nref, I) >= 0)\n    {\n        return -N;\n    }\n    else\n    {\n        return N;\n    }\n}\n
float3 faceforward_emu(float3 N, float3 I, float3 Nref)\n{\n    if(dot(Nref, I) >= 0)\n    {\n        return -N;\n    }\n    else\n    {\n        return N;\n    }\n}\n
float4 faceforward_emu(float4 N, float4 I, float4 Nref)\n{\n    if(dot(Nref, I) >= 0)\n    {\n        return -N;\n    }\n    else\n    {\n        return N;\n    }\n}\n
float atan_emu(float y, float x)\n{\n    if(x == 0 && y == 0) x = 1;\n    return atan2(y, x);\n}\n
float2 atan_emu(float2 y, float2 x)\n{\n    if(x[0] == 0 && y[0] == 0) x[0] = 1;\n    if(x[1] == 0 && y[1] == 0) x[1] = 1;\n    return float2(atan2(y[0], x[0]), atan2(y[1], x[1]));\n}\n
float3 atan_emu(float3 y, float3 x)\n{\n    if(x[0] == 0 && y[0] == 0) x[0] = 1;\n    if(x[1] == 0 && y[1] == 0) x[1] = 1;\n    if(x[2] == 0 && y[2] == 0) x[2] = 1;\n    return float3(atan2(y[0], x[0]), atan2(y[1], x[1]), atan2(y[2], x[2]));\n}\n
float4 atan_emu(float4 y, float4 x)\n{\n    if(x[0] == 0 && y[0] == 0) x[0] = 1;\n    if(x[1] == 0 && y[1] == 0) x[1] = 1;\n    if(x[2] == 0 && y[2] == 0) x[2] = 1;\n    if(x[3] == 0 && y[3] == 0) x[3] = 1;\n    return float4(atan2(y[0], x[0]), atan2(y[1], x[1]), atan2(y[2], \n    x[2]), atan2(y[3], x[3]));\n}\n
float asinh_emu(in float x)\n{\n    return log(x + sqrt(pow(x, 2.0) + 1.0));\n}\n
float2 asinh_emu(in float2 x)\n{\n    return log(x + sqrt(pow(x, 2.0) + 1.0));\n}\n
float3 asinh_emu(in float3 x)\n{\n    return log(x + sqrt(pow(x, 2.0) + 1.0));\n}\n
float4 asinh_emu(in float4 x)\n{\n    return log(x + sqrt(pow(x, 2.0) + 1.0));\n}\n
float acosh_emu(in float x)\n{\n    return log(x + sqrt(x + 1.0) * sqrt(x - 1.0));\n}\n
float2 acosh_emu(in float2 x)\n{\n    return log(x + sqrt(x + 1.0) * sqrt(x - 1.0));\n}\n
float3 acosh_emu(in float3 x)\n{\n    return log(x + sqrt(x + 1.0) * sqrt(x - 1.0));\n}\n
float4 acosh_emu(in float4 x)\n{\n    return log(x + sqrt(x + 1.0) * sqrt(x - 1.0));\n}\n
float atanh_emu(in float x)\n{\n    return 0.5 * log((1.0 + x) / (1.0 - x));\n}\n
float2 atanh_emu(in float2 x)\n{\n    return 0.5 * log((1.0 + x) / (1.0 - x));\n}\n
float3 atanh_emu(in float3 x)\n{\n    return 0.5 * log((1.0 + x) / (1.0 - x));\n}\n
float4 atanh_emu(in float4 x)\n{\n    return 0.5 * log((1.0 + x) / (1.0 - x));\n}\n
float roundEven_emu(in float x)\n{\n    return (frac(x) == 0.5 && trunc(x) % 2.0 == 0.0) ? trunc(x) : round(x);\n}\n
float2 roundEven_emu(in float2 x)\n{\n    float2 v;\n    v[0] = (frac(x[0]) == 0.5 && trunc(x[0]) % 2.0 == 0.0) ? trunc(x[0]) : round(x[0]);\n    v[1] = (frac(x[1]) == 0.5 && trunc(x[1]) % 2.0 == 0.0) ? trunc(x[1]) : round(x[1]);\n    return v;\n}\n
float3 roundEven_emu(in float3 x)\n{\n    float3 v;\n    v[0] = (frac(x[0]) == 0.5 && trunc(x[0]) % 2.0 == 0.0) ? trunc(x[0]) : round(x[0]);\n    v[1] = (frac(x[1]) == 0.5 && trunc(x[1]) % 2.0 == 0.0) ? trunc(x[1]) : round(x[1]);\n    v[2] = (frac(x[2]) == 0.5 && trunc(x[2]) % 2.0 == 0.0) ? trunc(x[2]) : round(x[2]);\n    return v;\n}\n
float4 roundEven_emu(in float4 x)\n{\n    float4 v;\n    v[0] = (frac(x[0]) == 0.5 && trunc(x[0]) % 2.0 == 0.0) ? trunc(x[0]) : round(x[0]);\n    v[1] = (frac(x[1]) == 0.5 && trunc(x[1]) % 2.0 == 0.0) ? trunc(x[1]) : round(x[1]);\n    v[2] = (frac(x[2]) == 0.5 && trunc(x[2]) % 2.0 == 0.0) ? trunc(x[2]) : round(x[2]);\n    v[3] = (frac(x[3]) == 0.5 && trunc(x[3]) % 2.0 == 0.0) ? trunc(x[3]) : round(x[3]);\n    return v;\n}\n
int webgl_toSnorm16(in float x) {\n    return int(round(clamp(x, -1.0, 1.0) * 32767.0));\n}\nuint packSnorm2x16_emu(in float2 v)\n{\n    int x = webgl_toSnorm16(v.x);\n    int y = webgl_toSnorm16(v.y);\n    return (asuint(y) << 16) | (asuint(x) & 0xffffu);\n}\n
uint webgl_toUnorm16(in float x) {\n    return uint(round(clamp(x, 0.0, 1.0) * 65535.0));\n}\nuint packUnorm2x16_emu(in float2 v)\n{\n    uint x = webgl_toUnorm16(v.x);\n    uint y = webgl_toUnorm16(v.y);\n    return (y << 16) | x;\n}\n
uint packHalf2x16_emu(in float2 v)\n{\n    uint x = f32tof16(v.x);\n    uint y = f32tof16(v.y);\n    return (y << 16) | x;\n}\n
float webgl_fromSnorm16(in uint x) {\n    int xi = asint(x & 0x7fffu) - asint(x & 0x8000u);\n    return clamp(float(xi) / 32767.0, -1.0, 1.0);\n}\nfloat2 unpackSnorm2x16_emu(in uint u)\n{\n    uint y = (u >> 16);\n    uint x = u;\n    return float2(webgl_fromSnorm16(x), webgl_fromSnorm16(y));\n}\n
float webgl_fromUnorm16(in uint x) {\n    return float(x) / 65535.0;\n}\nfloat2 unpackUnorm2x16_emu(in uint u)\n{\n    uint y = (u >> 16);\n    uint x = u & 0xffffu;\n    return float2(webgl_fromUnorm16(x), webgl_fromUnorm16(y));\n}\n
float2 unpackHalf2x16_emu(in uint u)\n{\n    uint y = (u >> 16);\n    uint x = u & 0xffffu;\n    return float2(f16tof32(x), f16tof32(y));\n}\n
int webgl_toSnorm8(in float x) {\n    return int(round(clamp(x, -1.0, 1.0) * 127.0));\n}\nuint packSnorm4x8_emu(in float4 v)\n{\n    int x = webgl_toSnorm8(v.x);\n    int y = webgl_toSnorm8(v.y);\n    int z = webgl_toSnorm8(v.z);\n    int w = webgl_toSnorm8(v.w);\n    return ((asuint(w) & 0xffu) << 24) | ((asuint(z) & 0xffu) << 16) \n    | ((asuint(y) & 0xffu) << 8) | (asuint(x) & 0xffu);\n}\n
uint webgl_toUnorm8(in float x) {\n    return uint(round(clamp(x, 0.0, 1.0) * 255.0));\n}\nuint packUnorm4x8_emu(in float4 v)\n{\n    uint x = webgl_toUnorm8(v.x);\n    uint y = webgl_toUnorm8(v.y);\n    uint z = webgl_toUnorm8(v.z);\n    uint w = webgl_toUnorm8(v.w);\n    return (w << 24) | (z << 16) | (y << 8) | x;\n}\n
float webgl_fromSnorm8(in uint x) {\n    int xi = asint(x & 0x7fu) - asint(x & 0x80u);\n    return clamp(float(xi) / 127.0, -1.0, 1.0);\n}\nfloat4 unpackSnorm4x8_emu(in uint u)\n{\n    uint w = (u >> 24);\n    uint z = (u >> 16);\n    uint y = (u >> 8);\n    uint x = u;\n    return float4(webgl_fromSnorm8(x), webgl_fromSnorm8(y), \n    webgl_fromSnorm8(z), webgl_fromSnorm8(w));\n}\n
float webgl_fromUnorm8(in uint x) {\n    return float(x) / 255.0;\n}\nfloat4 unpackUnorm4x8_emu(in uint u)\n{\n    uint w = (u >> 24) & 0xffu;\n    uint z = (u >> 16) & 0xffu;\n    uint y = (u >> 8) & 0xffu;\n    uint x = u & 0xffu;\n    return float4(webgl_fromUnorm8(x), webgl_fromUnorm8(y), \n    webgl_fromUnorm8(z), webgl_fromUnorm8(w));\n}\n
float2x2 outerProduct_emu(in float2 c, in float2 r)\n{\n    return mul(float2x1(r), float1x2(c));\n}\n
float3x3 outerProduct_emu(in float3 c, in float3 r)\n{\n    return mul(float3x1(r), float1x3(c));\n}\n
float4x4 outerProduct_emu(in float4 c, in float4 r)\n{\n    return mul(float4x1(r), float1x4(c));\n}\n
float2x3 outerProduct_emu(in float3 c, in float2 r)\n{\n    return mul(float2x1(r), float1x3(c));\n}\n
float3x2 outerProduct_emu(in float2 c, in float3 r)\n{\n    return mul(float3x1(r), float1x2(c));\n}\n
float2x4 outerProduct_emu(in float4 c, in float2 r)\n{\n    return mul(float2x1(r), float1x4(c));\n}\n
float4x2 outerProduct_emu(in float2 c, in float4 r)\n{\n    return mul(float4x1(r), float1x2(c));\n}\n
float3x4 outerProduct_emu(in float4 c, in float3 r)\n{\n    return mul(float3x1(r), float1x4(c));\n}\n
float4x3 outerProduct_emu(in float3 c, in float4 r)\n{\n    return mul(float4x1(r), float1x3(c));\n}\n
float2x2 inverse_emu(in float2x2 m)\n{\n    float2x2 cof = { m[1][1], -m[0][1], -m[1][0], m[0][0] };\n    return cof / determinant(transpose(m));\n}\n
float3x3 inverse_emu(in float3x3 m)\n{\n    float cof00 = m[1][1] * m[2][2] - m[2][1] * m[1][2];\n    float cof01 = -(m[1][0] * m[2][2] - m[2][0] * m[1][2]);\n    float cof02 = m[1][0] * m[2][1] - m[2][0] * m[1][1];\n    float cof10 = -(m[0][1] * m[2][2] - m[2][1] * m[0][2]);\n    float cof11 = m[0][0] * m[2][2] - m[2][0] * m[0][2];\n    float cof12 = -(m[0][0] * m[2][1] - m[2][0] * m[0][1]);\n    float cof20 = m[0][1] * m[1][2] - m[1][1] * m[0][2];\n    float cof21 = -(m[0][0] * m[1][2] - m[1][0] * m[0][2]);\n    float cof22 = m[0][0] * m[1][1] - m[1][0] * m[0][1];\n    float3x3 cof = { cof00, cof10, cof20, cof01, cof11, cof21, cof02, cof12, cof22 };\n    return cof / determinant(transpose(m));\n}\n
float4x4 inverse_emu(in float4x4 m)\n{\n    float cof00 = m[1][1] * m[2][2] * m[3][3] + m[2][1] * m[3][2] * m[1][3] + m[3][1] * \n    m[1][2] * m[2][3]\n     - m[1][1] * m[3][2] * m[2][3] - m[2][1] * m[1][2] * m[3][3] - m[3][1] * m[2][2] * \n    m[1][3];\n    float cof01 = -(m[1][0] * m[2][2] * m[3][3] + m[2][0] * m[3][2] * m[1][3] + m[3][0] * \n    m[1][2] * m[2][3]\n     - m[1][0] * m[3][2] * m[2][3] - m[2][0] * m[1][2] * m[3][3] - m[3][0] * m[2][2] * \n    m[1][3]);\n    float cof02 = m[1][0] * m[2][1] * m[3][3] + m[2][0] * m[3][1] * m[1][3] + m[3][0] * \n    m[1][1] * m[2][3]\n     - m[1][0] * m[3][1] * m[2][3] - m[2][0] * m[1][1] * m[3][3] - m[3][0] * m[2][1] * \n    m[1][3];\n    float cof03 = -(m[1][0] * m[2][1] * m[3][2] + m[2][0] * m[3][1] * m[1][2] + m[3][0] * \n    m[1][1] * m[2][2]\n     - m[1][0] * m[3][1] * m[2][2] - m[2][0] * m[1][1] * m[3][2] - m[3][0] * m[2][1] * \n    m[1][2]);\n    float cof10 = -(m[0][1] * m[2][2] * m[3][3] + m[2][1] * m[3][2] * m[0][3] + m[3][1] * \n    m[0][2] * m[2][3]\n     - m[0][1] * m[3][2] * m[2][3] - m[2][1] * m[0][2] * m[3][3] - m[3][1] * m[2][2] * \n    m[0][3]);\n    float cof11 = m[0][0] * m[2][2] * m[3][3] + m[2][0] * m[3][2] * m[0][3] + m[3][0] * \n    m[0][2] * m[2][3]\n     - m[0][0] * m[3][2] * m[2][3] - m[2][0] * m[0][2] * m[3][3] - m[3][0] * m[2][2] * \n    m[0][3];\n    float cof12 = -(m[0][0] * m[2][1] * m[3][3] + m[2][0] * m[3][1] * m[0][3] + m[3][0] * \n    m[0][1] * m[2][3]\n     - m[0][0] * m[3][1] * m[2][3] - m[2][0] * m[0][1] * m[3][3] - m[3][0] * m[2][1] * \n    m[0][3]);\n    float cof13 = m[0][0] * m[2][1] * m[3][2] + m[2][0] * m[3][1] * m[0][2] + m[3][0] * \n    m[0][1] * m[2][2]\n     - m[0][0] * m[3][1] * m[2][2] - m[2][0] * m[0][1] * m[3][2] - m[3][0] * m[2][1] * \n    m[0][2];\n    float cof20 = m[0][1] * m[1][2] * m[3][3] + m[1][1] * m[3][2] * m[0][3] + m[3][1] * \n    m[0][2] * m[1][3]\n     - m[0][1] * m[3][2] * m[1][3] - m[1][1] * m[0][2] * m[3][3] - m[3][1] * m[1][2] * \n    m[0][3];\n    float cof21 = -(m[0][0] * m[1][2] * m[3][3] + m[1][0] * m[3][2] * m[0][3] + m[3][0] * \n    m[0][2] * m[1][3]\n     - m[0][0] * m[3][2] * m[1][3] - m[1][0] * m[0][2] * m[3][3] - m[3][0] * m[1][2] * \n    m[0][3]);\n    float cof22 = m[0][0] * m[1][1] * m[3][3] + m[1][0] * m[3][1] * m[0][3] + m[3][0] * \n    m[0][1] * m[1][3]\n     - m[0][0] * m[3][1] * m[1][3] - m[1][0] * m[0][1] * m[3][3] - m[3][0] * m[1][1] * \n    m[0][3];\n    float cof23 = -(m[0][0] * m[1][1] * m[3][2] + m[1][0] * m[3][1] * m[0][2] + m[3][0] * \n    m[0][1] * m[1][2]\n     - m[0][0] * m[3][1] * m[1][2] - m[1][0] * m[0][1] * m[3][2] - m[3][0] * m[1][1] * \n    m[0][2]);\n    float cof30 = -(m[0][1] * m[1][2] * m[2][3] + m[1][1] * m[2][2] * m[0][3] + m[2][1] * \n    m[0][2] * m[1][3]\n     - m[0][1] * m[2][2] * m[1][3] - m[1][1] * m[0][2] * m[2][3] - m[2][1] * m[1][2] * \n    m[0][3]);\n    float cof31 = m[0][0] * m[1][2] * m[2][3] + m[1][0] * m[2][2] * m[0][3] + m[2][0] * \n    m[0][2] * m[1][3]\n     - m[0][0] * m[2][2] * m[1][3] - m[1][0] * m[0][2] * m[2][3] - m[2][0] * m[1][2] * \n    m[0][3];\n    float cof32 = -(m[0][0] * m[1][1] * m[2][3] + m[1][0] * m[2][1] * m[0][3] + m[2][0] * \n    m[0][1] * m[1][3]\n     - m[0][0] * m[2][1] * m[1][3] - m[1][0] * m[0][1] * m[2][3] - m[2][0] * m[1][1] * \n    m[0][3]);\n    float cof33 = m[0][0] * m[1][1] * m[2][2] + m[1][0] * m[2][1] * m[0][2] + m[2][0] * \n    m[0][1] * m[1][2]\n     - m[0][0] * m[2][1] * m[1][2] - m[1][0] * m[0][1] * m[2][2] - m[2][0] * m[1][1] * \n    m[0][2];\n    float4x4 cof = { cof00, cof10, cof20, cof30, cof01, cof11, cof21, cof31,\n     cof02, cof12, cof22, cof32, cof03, cof13, cof23, cof33 };\n    return cof / determinant(transpose(m));\n}\n
float mix_emu(float x, float y, bool a)\n{\n    return a ? y : x;\n}\n
float2 mix_emu(float2 x, float2 y, bool2 a)\n{\n    return a ? y : x;\n}\n
float3 mix_emu(float3 x, float3 y, bool3 a)\n{\n    return a ? y : x;\n}\n
float4 mix_emu(float4 x, float4 y, bool4 a)\n{\n    return a ? y : x;\n}\n
uint bitfieldExtract_emu(uint value, int offset, int bits)\n{\n    if (offset < 0 || bits <= 0 || offset >= 32 || bits > 32 || offset + bits > 32)\n    {\n        return 0u;\n    }\n    uint maskMsb = (1u << (bits - 1));\n    uint mask = ((maskMsb - 1u) | maskMsb) << offset;\n    return (value & mask) >> offset;\n}\n
uint2 bitfieldExtract_emu(uint2 value, int offset, int bits)\n{\n    if (offset < 0 || bits <= 0 || offset >= 32 || bits > 32 || offset + bits > 32)\n    {\n        return uint2(0u, 0u);\n    }\n    uint maskMsb = (1u << (bits - 1));\n    uint mask = ((maskMsb - 1u) | maskMsb) << offset;\n    return (value & mask) >> offset;\n}\n
uint3 bitfieldExtract_emu(uint3 value, int offset, int bits)\n{\n    if (offset < 0 || bits <= 0 || offset >= 32 || bits > 32 || offset + bits > 32)\n    {\n        return uint3(0u, 0u, 0u);\n    }\n    uint maskMsb = (1u << (bits - 1));\n    uint mask = ((maskMsb - 1u) | maskMsb) << offset;\n    return (value & mask) >> offset;\n}\n
uint4 bitfieldExtract_emu(uint4 value, int offset, int bits)\n{\n    if (offset < 0 || bits <= 0 || offset >= 32 || bits > 32 || offset + bits > 32)\n    {\n        return uint4(0u, 0u, 0u, 0u);\n    }\n    uint maskMsb = (1u << (bits - 1));\n    uint mask = ((maskMsb - 1u) | maskMsb) << offset;\n    return (value & mask) >> offset;\n}\n
int bitfieldExtract_emu(int value, int offset, int bits)\n{\n    if (offset < 0 || bits <= 0 || offset >= 32 || bits > 32 || offset + bits > 32)\n    {\n        return 0;\n    }\n    uint maskMsb = (1u << (bits - 1));\n    uint mask = ((maskMsb - 1u) | maskMsb) << offset;\n    uint resultUnsigned = (asuint(value) & mask) >> offset;\n    if (bits != 32 && (resultUnsigned & maskMsb) != 0)\n    {\n        uint higherBitsMask = ((1u << (32 - bits)) - 1u) << bits;\n        resultUnsigned |= higherBitsMask;\n    }\n    return asint(resultUnsigned);\n}\n
int2 bitfieldExtract_emu(int2 value, int offset, int bits)\n{\n    if (offset < 0 || bits <= 0 || offset >= 32 || bits > 32 || offset + bits > 32)\n    {\n        return int2(0, 0);\n    }\n    uint maskMsb = (1u << (bits - 1));\n    uint mask = ((maskMsb - 1u) | maskMsb) << offset;\n    uint2 resultUnsigned = (asuint(value) & mask) >> offset;\n    if (bits != 32)\n    {\n        uint higherBitsMask = ((1u << (32 - bits)) - 1u) << bits;\n        resultUnsigned |= ((resultUnsigned & maskMsb) >> (bits - 1)) * higherBitsMask;\n    }\n    return asint(resultUnsigned);\n}\n
int3 bitfieldExtract_emu(int3 value, int offset, int bits)\n{\n    if (offset < 0 || bits <= 0 || offset >= 32 || bits > 32 || offset + bits > 32)\n    {\n        return int3(0, 0, 0);\n    }\n    uint maskMsb = (1u << (bits - 1));\n    uint mask = ((maskMsb - 1u) | maskMsb) << offset;\n    uint3 resultUnsigned = (asuint(value) & mask) >> offset;\n    if (bits != 32)\n    {\n        uint higherBitsMask = ((1u << (32 - bits)) - 1u) << bits;\n        resultUnsigned |= ((resultUnsigned & maskMsb) >> (bits - 1)) * higherBitsMask;\n    }\n    return asint(resultUnsigned);\n}\n
int4 bitfieldExtract_emu(int4 value, int offset, int bits)\n{\n    if (offset < 0 || bits <= 0 || offset >= 32 || bits > 32 || offset + bits > 32)\n    {\n        return int4(0, 0, 0, 0);\n    }\n    uint maskMsb = (1u << (bits - 1));\n    uint mask = ((maskMsb - 1u) | maskMsb) << offset;\n    uint4 resultUnsigned = (asuint(value) & mask) >> offset;\n    if (bits != 32)\n    {\n        uint higherBitsMask = ((1u << (32 - bits)) - 1u) << bits;\n        resultUnsigned |= ((resultUnsigned & maskMsb) >> (bits - 1)) * higherBitsMask;\n    }\n    return asint(resultUnsigned);\n}\n
uint bitfieldInsert_emu(uint base, uint insert, int offset, int bits)\n{\n    if (offset < 0 || bits <= 0 || offset >= 32 || bits > 32 || offset + bits > 32)\n    {\n        return base;\n    }\n    uint maskMsb = (1u << (bits - 1));\n    uint insertMask = ((maskMsb - 1u) | maskMsb) << offset;\n    uint baseMask = ~insertMask;\n    return (base & baseMask) | ((insert << offset) & insertMask);\n}\n
uint2 bitfieldInsert_emu(uint2 base, uint2 insert, int offset, int bits)\n{\n    if (offset < 0 || bits <= 0 || offset >= 32 || bits > 32 || offset + bits > 32)\n    {\n        return base;\n    }\n    uint maskMsb = (1u << (bits - 1));\n    uint insertMask = ((maskMsb - 1u) | maskMsb) << offset;\n    uint baseMask = ~insertMask;\n    return (base & baseMask) | ((insert << offset) & insertMask);\n}\n
uint3 bitfieldInsert_emu(uint3 base, uint3 insert, int offset, int bits)\n{\n    if (offset < 0 || bits <= 0 || offset >= 32 || bits > 32 || offset + bits > 32)\n    {\n        return base;\n    }\n    uint maskMsb = (1u << (bits - 1));\n    uint insertMask = ((maskMsb - 1u) | maskMsb) << offset;\n    uint baseMask = ~insertMask;\n    return (base & baseMask) | ((insert << offset) & insertMask);\n}\n
uint4 bitfieldInsert_emu(uint4 base, uint4 insert, int offset, int bits)\n{\n    if (offset < 0 || bits <= 0 || offset >= 32 || bits > 32 || offset + bits > 32)\n    {\n        return base;\n    }\n    uint maskMsb = (1u << (bits - 1));\n    uint insertMask = ((maskMsb - 1u) | maskMsb) << offset;\n    uint baseMask = ~insertMask;\n    return (base & baseMask) | ((insert << offset) & insertMask);\n}\n
int bitfieldInsert_emu(int base, int insert, int offset, int bits)\n{\n    if (offset < 0 || bits <= 0 || offset >= 32 || bits > 32 || offset + bits > 32)\n    {\n        return base;\n    }\n    uint maskMsb = (1u << (bits - 1));\n    uint insertMask = ((maskMsb - 1u) | maskMsb) << offset;\n    uint baseMask = ~insertMask;\n    uint resultUnsigned = (asuint(base) & baseMask) | ((asuint(insert) << offset) & \n                           insertMask);\n    return asint(resultUnsigned);\n}\n
int2 bitfieldInsert_emu(int2 base, int2 insert, int offset, int bits)\n{\n    if (offset < 0 || bits <= 0 || offset >= 32 || bits > 32 || offset + bits > 32)\n    {\n        return base;\n    }\n    uint maskMsb = (1u << (bits - 1));\n    uint insertMask = ((maskMsb - 1u) | maskMsb) << offset;\n    uint baseMask = ~insertMask;\n    uint2 resultUnsigned = (asuint(base) & baseMask) | ((asuint(insert) << offset) & \n                            insertMask);\n    return asint(resultUnsigned);\n}\n
int3 bitfieldInsert_emu(int3 base, int3 insert, int offset, int bits)\n{\n    if (offset < 0 || bits <= 0 || offset >= 32 || bits > 32 || offset + bits > 32)\n    {\n        return base;\n    }\n    uint maskMsb = (1u << (bits - 1));\n    uint insertMask = ((maskMsb - 1u) | maskMsb) << offset;\n    uint baseMask = ~insertMask;\n    uint3 resultUnsigned = (asuint(base) & baseMask) | ((asuint(insert) << offset) & \n                            insertMask);\n    return asint(resultUnsigned);\n}\n
int4 bitfieldInsert_emu(int4 base, int4 insert, int offset, int bits)\n{\n    if (offset < 0 || bits <= 0 || offset >= 32 || bits > 32 || offset + bits > 32)\n    {\n        return base;\n    }\n    uint maskMsb = (1u << (bits - 1));\n    uint insertMask = ((maskMsb - 1u) | maskMsb) << offset;\n    uint baseMask = ~insertMask;\n    uint4 resultUnsigned = (asuint(base) & baseMask) | ((asuint(insert) << offset) & \n    insertMask);\n    return asint(resultUnsigned);\n}\n
uint uaddCarry_emu(uint x, uint y, out uint carry)\n{\n    carry = uint(x > (0xffffffffu - y));\n    return x + y;\n}\n
uint2 uaddCarry_emu(uint2 x, uint2 y, out uint2 carry)\n{\n    carry = uint2(x > (0xffffffffu - y));\n    return x + y;\n}\n
uint3 uaddCarry_emu(uint3 x, uint3 y, out uint3 carry)\n{\n    carry = uint3(x > (0xffffffffu - y));\n    return x + y;\n}\n
uint4 uaddCarry_emu(uint4 x, uint4 y, out uint4 carry)\n{\n    carry = uint4(x > (0xffffffffu - y));\n    return x + y;\n}\n
uint usubBorrow_emu(uint x, uint y, out uint borrow)\n{\n    borrow = uint(x < y);\n    return x - y;\n}\n
uint2 usubBorrow_emu(uint2 x, uint2 y, out uint2 borrow)\n{\n    borrow = uint2(x < y);\n    return x - y;\n}\n
uint3 usubBorrow_emu(uint3 x, uint3 y, out uint3 borrow)\n{\n    borrow = uint3(x < y);\n    return x - y;\n}\n
uint4 usubBorrow_emu(uint4 x, uint4 y, out uint4 borrow)\n{\n    borrow = uint4(x < y);\n    return x - y;\n}\n
float tanh_emu(float x)\n{\n    return (abs(x) > 15.0) ? sign(x) : tanh(x);\n}\n
float2 tanh_emu(float2 x)\n{\n    return (abs(x) > 15.0) ? sign(x) : tanh(x);\n}\n
float3 tanh_emu(float3 x)\n{\n    return (abs(x) > 15.0) ? sign(x) : tanh(x);\n}\n
float4 tanh_emu(float4 x)\n{\n    return (abs(x) > 15.0) ? sign(x) : tanh(x);\n}\n
SchedulerKind
MaxConcurrency
MinConcurrency
TargetOversubscriptionFactor
LocalContextCacheSize
ContextStackSize
ContextPriority
SchedulingProtocol
DynamicProgressFeedback
WinRTInitialization
MaxPolicyElementKey
Mbp?333333
pContext
pExecutionResource
CreateRemoteThreadEx
CreateUmsCompletionList
CreateUmsThreadContext
DeleteProcThreadAttributeList
DeleteUmsCompletionList
DeleteUmsThreadContext
DequeueUmsCompletionListItems
EnterUmsSchedulingMode
ExecuteUmsThread
GetCurrentUmsThread
GetNextUmsListItem
GetUmsCompletionListEvent
InitializeProcThreadAttributeList
QueryUmsThreadInformation
SetUmsThreadInformation
UmsThreadYield
UpdateProcThreadAttribute
RoInitialize
RoUninitialize
Y/}J
rLp>B
1eaB@
RegisterTraceGuidsW
UnregisterTraceGuids
TraceEvent
GetTraceLoggerHandle
GetTraceEnableLevel
GetTraceEnableFlags
pThreadProxy
proc
nonuniformEXT
else
devicecoherent
queuefamilycoherent
workgroupcoherent
subgroupcoherent
nonprivate
patch
sample
subroutine
precision
mat2x2
mat3x3
mat4x4
dmat2
dmat3
dmat4
dmat2x2
dmat2x3
dmat2x4
dmat3x2
dmat3x3
dmat3x4
dmat4x2
dmat4x3
dmat4x4
image1D
iimage1D
uimage1D
image2DRect
iimage2DRect
uimage2DRect
imageBuffer
iimageBuffer
uimageBuffer
image1DArray
iimage1DArray
uimage1DArray
imageCubeArray
iimageCubeArray
uimageCubeArray
image2DMS
iimage2DMS
uimage2DMS
image2DMSArray
iimage2DMSArray
uimage2DMSArray
double
dvec2
dvec3
dvec4
int64_t
uint64_t
i64vec2
i64vec3
i64vec4
u64vec2
u64vec3
u64vec4
int8_t
i8vec2
i8vec3
i8vec4
uint8_t
u8vec2
u8vec3
u8vec4
int16_t
i16vec2
i16vec3
i16vec4
uint16_t
u16vec2
u16vec3
u16vec4
int32_t
i32vec2
i32vec3
i32vec4
uint32_t
u32vec2
u32vec3
u32vec4
float16_t
f16vec2
f16vec3
f16vec4
f16mat2
f16mat3
f16mat4
f16mat2x2
f16mat2x3
f16mat2x4
f16mat3x2
f16mat3x3
f16mat3x4
f16mat4x2
f16mat4x3
f16mat4x4
float32_t
f32vec2
f32vec3
f32vec4
f32mat2
f32mat3
f32mat4
f32mat2x2
f32mat2x3
f32mat2x4
f32mat3x2
f32mat3x3
f32mat3x4
f32mat4x2
f32mat4x3
f32mat4x4
float64_t
f64vec2
f64vec3
f64vec4
f64mat2
f64mat3
f64mat4
f64mat2x2
f64mat2x3
f64mat2x4
f64mat3x2
f64mat3x3
f64mat3x4
f64mat4x2
f64mat4x3
f64mat4x4
samplerCubeArray
samplerCubeArrayShadow
isamplerCubeArray
usamplerCubeArray
sampler1DArrayShadow
isampler1DArray
usampler1D
isampler1D
usampler1DArray
samplerBuffer
isampler2DRect
usampler2DRect
isamplerBuffer
usamplerBuffer
sampler1D
sampler1DShadow
sampler2DRectShadow
sampler1DArray
sampler
samplerShadow
textureCubeArray
itextureCubeArray
utextureCubeArray
itexture1DArray
utexture1D
itexture1D
utexture1DArray
textureBuffer
texture2DArray
itexture2D
itexture3D
itextureCube
itexture2DArray
utexture2D
utexture3D
utextureCube
utexture2DArray
itexture2DRect
utexture2DRect
itextureBuffer
utextureBuffer
texture2DMS
itexture2DMS
utexture2DMS
texture2DMSArray
itexture2DMSArray
utexture2DMSArray
texture1D
texture3D
texture1DArray
subpassInput
subpassInputMS
isubpassInput
isubpassInputMS
usubpassInput
usubpassInputMS
noperspective
precise
resource
superp
common
partition
active
class
union
enum
typedef
template
this
goto
inline
noinline
public
static
extern
external
interface
long
short
half
fixed
unsigned
input
output
hvec2
hvec3
hvec4
fvec2
fvec3
fvec4
sampler3DRect
filter
sizeof
cast
namespace
using
illegal use of escape character
GL_EXT_nonuniform_qualifier
GL_ARB_shading_language_420pack
GL_ARB_gpu_shader_int64
GL_KHX_shader_explicit_arithmetic_types
GL_KHX_shader_explicit_arithmetic_types_int64
GL_EXT_shader_8bit_storage
GL_KHX_shader_explicit_arithmetic_types_int8
GL_EXT_shader_16bit_storage
GL_KHX_shader_explicit_arithmetic_types_int16
GL_KHX_shader_explicit_arithmetic_types_int32
GL_KHX_shader_explicit_arithmetic_types_float32
GL_KHX_shader_explicit_arithmetic_types_float64
GL_KHX_shader_explicit_arithmetic_types_float16
GL_ARB_texture_cube_map_array
GL_EXT_shadow_samplers
texture-rectangle sampler keyword
Unknown glslang keyword
Reserved word.
using future reserved keyword
future reserved word in ES 300 and keyword in GLSL
using future keyword
using ES precision qualifier keyword
using future non-square matrix type keyword
using future type keyword
GL_OES_shader_multisample_interpolation
GL_EXT_texture_cube_map_array
GL_OES_texture_cube_map_array
GL_EXT_gpu_shader5
GL_OES_gpu_shader5
0Eshift-sampler-binding
shift-texture-binding
shift-image-binding
shift-UBO-binding
shift-ssbo-binding
shift-uav-binding
(null)
GL_3DL_array_objects
GL_ARB_gpu_shader5
GL_ARB_enhanced_layouts
GL_ARB_shader_draw_parameters
GL_ARB_shader_group_vote
GL_ARB_derivative_control
GL_ARB_shader_texture_image_samples
GL_ARB_shader_ballot
GL_ARB_sparse_texture2
GL_ARB_sparse_texture_clamp
GL_ARB_shader_stencil_export
GL_ARB_post_depth_coverage
GL_ARB_shader_viewport_layer_array
GL_KHR_shader_subgroup_basic
GL_KHR_shader_subgroup_vote
GL_KHR_shader_subgroup_arithmetic
GL_KHR_shader_subgroup_ballot
GL_KHR_shader_subgroup_shuffle
GL_KHR_shader_subgroup_shuffle_relative
GL_KHR_shader_subgroup_clustered
GL_KHR_shader_subgroup_quad
GL_KHR_memory_scope_semantics
GL_EXT_shader_atomic_int64
GL_EXT_shader_non_constant_global_initializers
GL_EXT_shader_image_load_formatted
GL_EXT_post_depth_coverage
GL_EXT_control_flow_attributes
GL_EXT_samplerless_texture_functions
GL_GOOGLE_cpp_style_line_directive
GL_GOOGLE_include_directive
GL_ANDROID_extension_pack_es31a
GL_KHR_blend_equation_advanced
GL_OES_sample_variables
GL_OES_shader_image_atomic
GL_EXT_geometry_point_size
GL_EXT_shader_io_blocks
GL_EXT_tessellation_point_size
GL_OES_geometry_point_size
GL_OES_shader_io_blocks
GL_OES_tessellation_point_size
GL_EXT_device_group
GL_EXT_multiview
GL_OVR_multiview2
#define GL_ES 1\n#define GL_FRAGMENT_PRECISION_HIGH 1\n#define GL_OES_texture_3D 1\n#define GL_OES_standard_derivatives 1\n#define GL_EXT_frag_depth 1\n#define GL_OES_EGL_image_external 1\n#define GL_OES_EGL_image_external_essl3 1\n#define GL_EXT_shader_texture_lod 1\n#define GL_EXT_shadow_samplers 1\n#define GL_ANDROID_extension_pack_es31a 1\n#define GL_KHR_blend_equation_advanced 1\n#define GL_OES_sample_variables 1\n#define GL_OES_shader_image_atomic 1\n#define GL_OES_shader_multisample_interpolation 1\n#define GL_OES_texture_storage_multisample_2d_array 1\n#define GL_EXT_geometry_shader 1\n#define GL_EXT_geometry_point_size 1\n#define GL_EXT_gpu_shader5 1\n#define GL_EXT_primitive_bounding_box 1\n#define GL_EXT_shader_io_blocks 1\n#define GL_EXT_tessellation_shader 1\n#define GL_EXT_tessellation_point_size 1\n#define GL_EXT_texture_buffer 1\n#define GL_EXT_texture_cube_map_array 1\n#define GL_OES_geometry_shader 1\n#define GL_OES_geometry_point_size 1\n#define GL_OES_gpu_shader5 1\n#define GL_OES_primitive_bounding_box 1\n#define GL_OES_shader_io_blocks 1\n#define GL_OES_tessellation_shader 1\n#define GL_OES_tessellation_point_size 1\n#define GL_OES_texture_buffer 1\n#define GL_OES_texture_cube_map_array 1\n#define GL_EXT_shader_non_constant_global_initializers 1\n
#define GL_FRAGMENT_PRECISION_HIGH 1\n#define GL_ARB_texture_rectangle 1\n#define GL_ARB_shading_language_420pack 1\n#define GL_ARB_texture_gather 1\n#define GL_ARB_gpu_shader5 1\n#define GL_ARB_separate_shader_objects 1\n#define GL_ARB_compute_shader 1\n#define GL_ARB_tessellation_shader 1\n#define GL_ARB_enhanced_layouts 1\n#define GL_ARB_texture_cube_map_array 1\n#define GL_ARB_shader_texture_lod 1\n#define GL_ARB_explicit_attrib_location 1\n#define GL_ARB_shader_image_load_store 1\n#define GL_ARB_shader_atomic_counters 1\n#define GL_ARB_shader_draw_parameters 1\n#define GL_ARB_shader_group_vote 1\n#define GL_ARB_derivative_control 1\n#define GL_ARB_shader_texture_image_samples 1\n#define GL_ARB_viewport_array 1\n#define GL_ARB_gpu_shader_int64 1\n#define GL_ARB_shader_ballot 1\n#define GL_ARB_sparse_texture2 1\n#define GL_ARB_sparse_texture_clamp 1\n#define GL_ARB_shader_stencil_export 1\n#define GL_ARB_post_depth_coverage 1\n#define GL_EXT_shader_non_constant_global_initializers 1\n#define GL_EXT_shader_image_load_formatted 1\n#define GL_EXT_post_depth_coverage 1\n#define GL_EXT_control_flow_attributes 1\n#define GL_EXT_nonuniform_qualifier 1\n#define GL_EXT_shader_16bit_storage 1\n#define GL_EXT_shader_8bit_storage 1\n#define GL_EXT_samplerless_texture_functions 1\n#define GL_KHR_shader_subgroup_basic 1\n#define GL_KHR_shader_subgroup_vote 1\n#define GL_KHR_shader_subgroup_arithmetic 1\n#define GL_KHR_shader_subgroup_ballot 1\n#define GL_KHR_shader_subgroup_shuffle 1\n#define GL_KHR_shader_subgroup_shuffle_relative 1\n#define GL_KHR_shader_subgroup_clustered 1\n#define GL_KHR_shader_subgroup_quad 1\n#define E_GL_EXT_shader_atomic_int64 1\n#define GL_KHX_shader_explicit_arithmetic_types 1\n#define GL_KHX_shader_explicit_arithmetic_types_int8 1\n#define GL_KHX_shader_explicit_arithmetic_types_int16 1\n#define GL_KHX_shader_explicit_arithmetic_types_int32 1\n#define GL_KHX_shader_explicit_arithmetic_types_int64 1\n#define GL_KHX_shader_explicit_arithmetic_types_float16 1\n#define GL_KHX_shader_explicit_arithmetic_types_float32 1\n#define GL_KHX_shader_explicit_arithmetic_types_float64 1\n
#define GL_core_profile 1\n
#define GL_compatibility_profile 1\n
#define GL_EXT_device_group 1\n#define GL_EXT_multiview 1\n
#define GL_OVR_multiview 1\n#define GL_OVR_multiview2 1\n
#define GL_GOOGLE_cpp_style_line_directive 1\n#define GL_GOOGLE_include_directive 1\n
#define VULKAN 
#define GL_SPIRV 
not supported with this profile:
vertex
tessellation control
tessellation evaluation
geometry
fragment
compute
unknown stage
 is being used for 
extension 
not supported for this version or the enabled extensions
not supported in this stage:
deprecated, may be removed in future release
; may be removed in future release
 deprecated in version 
%s profile; removed in version %d
no longer supported in
feature not yet implemented
The following extension must be enabled to use this feature:
required extension not requested:
Possible extensions include:
#extension
behavior not supported:
extension 'all' cannot have 'require' or 'enable' behavior
extension not supported:
extension is only partially supported:
not allowed when generating SPIR-V
not allowed when using GLSL for Vulkan
only allowed when using GLSL for Vulkan
only allowed when generating SPIR-V
>mod second child into first child
and second child into first child
or second child into first child
exclusive or second child into first child
left shift second child into first child
right shift second child into first child
: direct index for structure
vector swizzle
right-shift
left-shift
bitwise and
inclusive-or
exclusive-or
Equal
NotEqual
Negate conditional
Bitwise not
Convert int8_t to bool
Convert uint8_t to bool
Convert int16_t to bool
Convert uint16_t to bool
Convert int to bool
Convert uint to bool
Convert int64 to bool
Convert uint64 to bool
Convert float16_t to bool
Convert float to bool
Convert double to bool
Convert bool to int8_t
Convert bool to uint8_t
Convert bool to in16t_t
Convert bool to uint16_t
Convert bool to int
Convert bool to uint
Convert bool to int64
Convert bool to uint64
Convert bool to float16_t
Convert bool to float
Convert bool to double
Convert int8_t to int16_t
Convert int8_t to int
Convert int8_t to int64
Convert int8_t to uint8_t
Convert int8_t to uint16_t
Convert int8_t to uint
Convert int8_t to uint64
Convert uint8_t to int8_t
Convert uint8_t to int16_t
Convert uint8_t to int
Convert uint8_t to int64
Convert uint8_t to uint16_t
Convert uint8_t to uint
Convert uint8_t to uint64
Convert int8_t to float16_t
Convert int8_t to float
Convert int8_t to double
Convert uint8_t to float16_t
Convert uint8_t to float
Convert uint8_t to double
Convert int16_t to int8_t
Convert int16_t to int
Convert int16_t to int64
Convert int16_t to uint8_t
Convert int16_t to uint16_t
Convert int16_t to uint
Convert int16_t to uint64
Convert int16_t to float16_t
Convert int16_t to float
Convert int16_t to double
Convert uint16_t to int8_t
Convert uint16_t to int16_t
Convert uint16_t to int
Convert uint16_t to int64
Convert uint16_t to uint8_t
Convert uint16_t to uint
Convert uint16_t to uint64
Convert uint16_t to float16_t
Convert uint16_t to float
Convert uint16_t to double
Convert int to int8_t
Convert int to int16_t
Convert int to int64
Convert int to uint8_t
Convert int to uint16_t
Convert int to uint
Convert int to uint64
Convert int to float16_t
Convert int to float
Convert int to double
Convert uint to int8_t
Convert uint to int16_t
Convert uint to int
Convert uint to int64
Convert uint to uint8_t
Convert uint to uint16_t
Convert uint to uint64
Convert uint to float16_t
Convert uint to float
Convert uint to double
Convert int64 to int8_t
Convert int64 to int16_t
Convert int64 to int
Convert int64 to uint8_t
Convert int64 to uint16_t
Convert int64 to uint
Convert int64 to uint64
Convert int64 to float16_t
Convert int64 to float
Convert int64 to double
Convert uint64 to int8_t
Convert uint64 to int16_t
Convert uint64 to int
Convert uint64 to int64
Convert uint64 to uint8_t
Convert uint64 to uint16
Convert uint64 to uint
Convert uint64 to float16_t
Convert uint64 to float
Convert uint64 to double
Convert float16_t to int8_t
Convert float16_t to int16_t
Convert float16_t to int
Convert float16_t to int64
Convert float16_t to uint8_t
Convert float16_t to uint16_t
Convert float16_t to uint
Convert float16_t to uint64
Convert float16_t to float
Convert float16_t to double
Convert float to float16_t
Convert float to double
Convert float to int8_t
Convert float to int16_t
Convert float to int
Convert float to int64
Convert float to uint8_t
Convert float to uint16_t
Convert float to uint
Convert float to uint64
Convert double to float16_t
Convert double to float
Convert double to int8_t
Convert double to int16_t
Convert double to int
Convert double to int64
Convert double to uint8_t
Convert double to uint16_t
Convert double to uint
Convert double to uint64
sine
cosine
tangent
arc sine
arc cosine
arc tangent
hyp. sine
hyp. cosine
hyp. tangent
arc hyp. sine
arc hyp. cosine
arc hyp. tangent
inverse sqrt
Absolute value
Sign
Floor
Ceiling
Fraction
doubleBitsToInt64
doubleBitsToUint64
int64BitsToDouble
uint64BitsToDouble
float16BitsToInt16
float16BitsToUint16
int16BitsToFloat16
uint16BitsToFloat16
pack16
pack32
pack64
unpack32
unpack16
unpack8
PackSnorm4x8
UnpackSnorm4x8
PackUnorm4x8
UnpackUnorm4x8
PackDouble2x32
UnpackDouble2x32
packInt2x32
unpackInt2x32
packUint2x32
unpackUint2x32
packInt2x16
unpackInt2x16
packUint2x16
unpackUint2x16
packInt4x16
unpackInt4x16
packUint4x16
unpackUint4x16
packFloat2x16
unpackFloat2x16
dPdx
dPdy
dPdxFine
dPdyFine
fwidthFine
dPdxCoarse
dPdyCoarse
fwidthCoarse
interpolateAtCentroid
array length
EmitStreamVertex
EndStreamPrimitive
AtomicCounterIncrement
AtomicCounterDecrement
AtomicCounter
textureQueryLod
textureQueryLevels
textureSamples
imageQuerySize
imageQuerySamples
bitFieldReverse
noise
ballot
readFirstInvocation
anyInvocation
allInvocations
allInvocationsEqual
subgroupElect
subgroupAll
subgroupAny
subgroupAllEqual
subgroupBroadcast
subgroupBroadcastFirst
subgroupBallot
subgroupInverseBallot
subgroupBallotBitExtract
subgroupBallotBitCount
subgroupBallotInclusiveBitCount
subgroupBallotExclusiveBitCount
subgroupBallotFindLSB
subgroupBallotFindMSB
subgroupShuffle
subgroupShuffleXor
subgroupShuffleUp
subgroupShuffleDown
subgroupAdd
subgroupMul
subgroupMin
subgroupMax
subgroupAnd
subgroupOr
subgroupXor
subgroupInclusiveAdd
subgroupInclusiveMul
subgroupInclusiveMin
subgroupInclusiveMax
subgroupInclusiveAnd
subgroupInclusiveOr
subgroupInclusiveXor
subgroupExclusiveAdd
subgroupExclusiveMul
subgroupExclusiveMin
subgroupExclusiveMax
subgroupExclusiveAnd
subgroupExclusiveOr
subgroupExclusiveXor
subgroupClusteredAdd
subgroupClusteredMul
subgroupClusteredMin
subgroupClusteredMax
subgroupClusteredAnd
subgroupClusteredOr
subgroupClusteredXor
subgroupQuadBroadcast
subgroupQuadSwapHorizontal
subgroupQuadSwapVertical
subgroupQuadSwapDiagonal
clip
isfinite
log10
saturate
sparseTexelsResident
subpassLoad
subpassLoadMS
Bad unary op
node is still EOpNull!
Sequence\n
Linker Objects\n
Comma
Function Definition: 
Function Call: 
Function Parameters: 
Construct float
Construct double
Construct vec2
Construct vec3
Construct vec4
Construct dvec2
Construct dvec3
Construct dvec4
Construct bool
Construct bvec2
Construct bvec3
Construct bvec4
Construct int8_t
Construct i8vec2
Construct i8vec3
Construct i8vec4
Construct int
Construct ivec2
Construct ivec3
Construct ivec4
Construct uint8_t
Construct u8vec2
Construct u8vec3
Construct u8vec4
Construct uint
Construct uvec2
Construct uvec3
Construct uvec4
Construct int64
Construct i64vec2
Construct i64vec3
Construct i64vec4
Construct uint64
Construct u64vec2
Construct u64vec3
Construct u64vec4
Construct int16_t
Construct i16vec2
Construct i16vec3
Construct i16vec4
Construct uint16_t
Construct u16vec2
Construct u16vec3
Construct u16vec4
Construct mat2
Construct mat2x3
Construct mat2x4
Construct mat3x2
Construct mat3
Construct mat3x4
Construct mat4x2
Construct mat4x3
Construct mat4
Construct dmat2
Construct dmat2x3
Construct dmat2x4
Construct dmat3x2
Construct dmat3
Construct dmat3x4
Construct dmat4x2
Construct dmat4x3
Construct dmat4
Construct imat2
Construct imat2x3
Construct imat2x4
Construct imat3x2
Construct imat3
Construct imat3x4
Construct imat4x2
Construct imat4x3
Construct imat4
Construct umat2
Construct umat2x3
Construct umat2x4
Construct umat3x2
Construct umat3
Construct umat3x4
Construct umat4x2
Construct umat4x3
Construct umat4
Construct bmat2
Construct bmat2x3
Construct bmat2x4
Construct bmat3x2
Construct bmat3
Construct bmat3x4
Construct bmat4x2
Construct bmat4x3
Construct bmat4
Construct float16_t
Construct f16vec2
Construct f16vec3
Construct f16vec4
Construct f16mat2
Construct f16mat2x3
Construct f16mat2x4
Construct f16mat3x2
Construct f16mat3
Construct f16mat3x4
Construct f16mat4x2
Construct f16mat4x3
Construct f16mat4
Construct structure
Construct combined texture-sampler
dot-product
cross-product
face-forward
outer product
Barrier
MemoryBarrier
MemoryBarrierAtomicCounter
MemoryBarrierBuffer
MemoryBarrierImage
MemoryBarrierShared
GroupMemoryBarrier
readInvocation
AtomicAdd
AtomicMin
AtomicMax
AtomicAnd
AtomicOr
AtomicXor
AtomicExchange
AtomicCompSwap
AtomicLoad
AtomicStore
AtomicCounterAdd
AtomicCounterSubtract
AtomicCounterMin
AtomicCounterMax
AtomicCounterAnd
AtomicCounterOr
AtomicCounterXor
AtomicCounterExchange
AtomicCounterCompSwap
imageAtomicAdd
imageAtomicMin
imageAtomicMax
imageAtomicAnd
imageAtomicOr
imageAtomicXor
imageAtomicExchange
imageAtomicCompSwap
imageAtomicLoad
imageAtomicStore
textureFetch
textureFetchOffset
textureGatherOffsets
textureClamp
textureOffsetClamp
textureGradClamp
textureGradOffsetClamp
sparseTexture
sparseTextureOffset
sparseTextureLod
sparseTextureLodOffset
sparseTexelFetch
sparseTexelFetchOffset
sparseTextureGrad
sparseTextureGradOffset
sparseTextureGather
sparseTextureGatherOffset
sparseTextureGatherOffsets
sparseImageLoad
sparseTextureClamp
sparseTextureOffsetClamp
sparseTextureGradClamp
sparseTextureGradOffsetClam
addCarry
subBorrow
uMulExtended
iMulExtended
interpolateAtSample
interpolateAtOffset
sincos
AllMemoryBarrierWithGroupSync
DeviceMemoryBarrier
DeviceMemoryBarrierWithGroupSync
WorkgroupMemoryBarrier
WorkgroupMemoryBarrierWithGroupSync
subgroupBarrier
subgroupMemoryBarrier
subgroupMemoryBarrierBuffer
subgroupMemoryBarrierImage
subgroupMemoryBarrierShared
Bad aggregation op
Test condition and select
: no shortcircuit
: Flatten
: DontFlatten
Constant:\n
tested first
: Unroll
: DontUnroll
: Dependency 
case: 
default: 
condition\n
body\n
Shader version: 
Requested 
in xfb mode\n
vertices = 
input primitive = 
vertex spacing = 
triangle order = 
using point mode\n
output primitive = 
gl_FragCoord pixel center is integer\n
gl_FragCoord origin is upper left\n
using early_fragment_tests\n
using post_depth_coverage\n
using 
local_size = (
local_size ids = (
, operation at 
 location=
 component=
 index=
 set=
 binding=
 stream=
 offset=
 align=
 xfb_buffer=
 xfb_offset=
 xfb_stride=
 input_attachment_index=
 constant_id=
 push_constant
 invariant
 noContraction
 centroid
 smooth
 flat
 noperspective
 patch
 sample
 coherent
 devicecoherent
 queuefamilycoherent
 workgroupcoherent
 subgroupcoherent
 nonprivate
 volatile
 restrict
 readonly
 writeonly
 specialization-constant
 nonuniform
 runtime-sized array of
 unsized
-element array of
 matrix of
-component vector of
rg32f
rg16f
r11f_g11f_b10f
r16f
rgba16
rgb10_a2
rg16
rgba16_snorm
rg16_snorm
rg8_snorm
r16_snorm
r8_snorm
rg32i
rg16i
rg8i
r16i
rg32ui
rg16ui
rgb10_a2ui
rg8ui
r16ui
r8ui
temp
global
const (read only)
gl_VertexId
gl_InstanceId
gl_ClipVertex
fragColor
subpass
ExternalOES
2DRect
Input
Array
Shadow
sampler/image
block
SubGroupSize
SubGroupInvocation
SubGroupEqMask
SubGroupGeMask
SubGroupGtMask
SubGroupLeMask
SubGroupLtMask
VertexId
InstanceId
VertexIndex
InstanceIndex
BaseVertex
BaseInstance
DrawId
ClipVertex
ClipDistance
CullDistance
Normal
Vertex
MultiTexCoord0
MultiTexCoord1
MultiTexCoord2
MultiTexCoord3
MultiTexCoord4
MultiTexCoord5
MultiTexCoord6
MultiTexCoord7
FrontColor
BackColor
FrontSecondaryColor
BackSecondaryColor
TexCoord
FogFragCoord
InvocationID
PrimitiveID
PatchVertices
TessLevelOuter
TessLevelInner
BoundingBox
TessCoord
Color
SecondaryColor
Face
FragStencilRef
SampleId
SamplePosition
SampleMaskIn
HelperInvocation
ViewIndex
DeviceIndex
unknown built-in variable
unknown precision qualifier
const int8_t
%d (%s)
const uint8_t
%u (%s)
const int16_t
const uint16_t
const int
const uint
const int64_t
%lld (%s)
const uint64_t
%llu (%s)
Unknown constant
-1.#INF
+1.#INF
1.#IND
%-.13e
quads
isolines
equal_spacing
fractional_even_spacing
fractional_odd_spacing
depth_any
depth_greater
depth_less
depth_unchanged
blend_support_multiply
blend_support_screen
blend_support_overlay
blend_support_darken
blend_support_lighten
blend_support_colordodge
blend_support_colorburn
blend_support_hardlight
blend_support_softlight
blend_support_difference
blend_support_exclusion
blend_support_hsl_hue
blend_support_hsl_saturation
blend_support_hsl_color
blend_support_hsl_luminosity
blend_support_all_equations
unknown
unexpected use of
expected 'INF'
bad character in float exponent
double floating-point suffix
float literal needs a decimal point or exponent
half floating-point suffix
floating-point suffix
float literal too long
unexpected
octal and hex sequences not supported
expected
name too long
bad digit in hexadecimal literal
hexadecimal literal too big
hexadecimal literal too long
64-bit hexadecimal literal
numeric literal too long
octal literal digit too large
octal literal too big
64-bit octal literal
numeric literal too big
64-bit literal
comment
End of input in comment
string
End of line in string
preprocessor directive cannot be preceded by another token
string literals not supported
character literals not supported
unexpected location
unexpected location; end of replacement list
unexpected location; end of argument
not supported for these tokens
combined tokens are too long
combined token is invalid
missing #endif
Linking 
 stage: 
can't handle multiple entry points per stage
stages must match when linking into a single stage
can't link compilation units from different source languages
Cannot cross link ES and desktop profiles
number of invocations must match between compilation units
Contradictory layout max_vertices values
Contradictory layout vertices values
Contradictory input layout primitives
Contradictory output layout primitives
gl_FragCoord redeclarations must match across shaders
Contradictory input vertex spacing
Contradictory triangle ordering
Contradictory local size
Contradictory local size specialization ids
Contradictory depth layouts
Contradictory xfb_stride
Multiple function bodies in multiple compilation units for the same signature in the same stage:
Types must match:
Storage qualifiers must match:
Precision qualifiers must match:
Presence of invariant qualifier must match:
Presence of precise qualifier must match:
Interpolation and auxiliary storage qualifiers must match:
Memory qualifiers must match:
Layout qualification must match:
Initializers must match:
" versus "
Missing entry point: Each stage requires one entry point
Entry point not found
Only one push_constant block is allowed per stage
gl_ClipDistance
Can only use one of gl_ClipDistance or gl_ClipVertex (gl_ClipDistance is preferred)
gl_CullDistance
Can only use one of gl_CullDistance or gl_ClipVertex (gl_ClipDistance is preferred)
Cannot use gl_FragColor or gl_FragData when using user-defined outputs
Cannot use both gl_FragColor and gl_FragData
xfb_stride is too small to hold all buffer entries:
    xfb_buffer 
, xfb_stride 
, minimum stride needed: 
xfb_stride must be multiple of 8 for buffer holding a double:
xfb_stride must be multiple of 4:
xfb_stride is too large:
, components (1/4 stride) needed are 
, gl_MaxTransformFeedbackInterleavedComponents is 
At least one shader must specify an output layout(vertices=...)
At least one shader must specify an input layout primitive
At least one shader must specify an output layout primitive
At least one shader must specify a layout(max_vertices = value)
post_depth_coverage requires early_fragment_tests
Unknown Stage.
Recursion detected:
 calling 
No function definition (body) found: 
when more than one fragment shader output, all must have location qualifiers
-tx-struct
struct-
block-
anonymous member 
 of 
%s%d
Source entry point must be "main"
compilation terminated
optimize
#pragma
optimize pragma syntax is incorrect
"(" expected after 'optimize' keyword
"on" or "off" expected after '(' for 'optimize' pragma
")" expected to end 'optimize' pragma
debug pragma syntax is incorrect
"(" expected after 'debug' keyword
"on" or "off" expected after '(' for 'debug' pragma
")" expected to end 'debug' pragma
use_storage_buffer
extra tokens
use_vulkan_memory_model
once
#pragma once
not implemented
glslang_binary_double_output
member of nameless block was not redeclared
cannot be used (maybe an instance name is needed)
variable name expected
does not operate on types containing float16
does not operate on types containing (u)int16
does not operate on types containing (u)int8
array must be sized by a redeclaration or layout qualifier before being indexed with a variable
variable indexing buffer block array
variable indexing uniform block array
variable indexing fragment shader output array
variable indexing sampler array
tessellation input array size must be gl_MaxPatchVertices or implicitly sized
type must be an array:
vertices
inconsistent input primitive for array size of
inconsistent output number of vertices for array size of
.length
.length() on vectors and matrices
does not operate on this type:
cannot apply to an array:
scalar swizzle
can't swizzle types containing float16
can't swizzle types containing (u)int16
can't swizzle types containing (u)int8
no such field in structure
does not apply to this type:
local function declaration
redefinition of built-in function
multiple prototypes for same function
overloaded functions must have the same return type
overloaded functions must have the same parameter storage qualifiers for argument
overloaded functions must have the same parameter precision qualifiers for argument
array in function return type
function name is redeclaration of existing name
can't find function
entry point cannot return a value
cannot construct with these arguments
float16 types can only be in uniform block or buffer storage
built-in function
(u)int16 types can only be in uniform block or buffer storage
(u)int8 types can only be in uniform block or buffer storage
Non-L-value cannot be passed for 'out' or 'inout' parameters.
argument cannot drop memory qualifier when passed to formal parameter
calling user function from global scope
main(
built in unary operator function.  Type: %s
 wrong operand type
cannot convert return value to function return type
type conversion on return values was not explicitly allowed until version 420
type does not match, or is not convertible to, the function's return type
tessellation control barrier() cannot be placed within flow control
tessellation control barrier() must be in main()
tessellation control barrier() cannot be placed after a return from main()
method does not accept any arguments
gl_out
array must first be sized by a redeclaration or layout qualifier
array must be declared with a size before using this method
unexpected use of .length()
tempReturn
tempArg
gl_SemanticsAcquire must not be used with (image) atomic store
gl_SemanticsRelease must not be used with (image) atomic load
gl_SemanticsAcquireRelease must not be used with (image) atomic load/store
Invalid semantics value
Invalid storage class semantics value
Semantics must include exactly one of gl_SemanticsRelease, gl_SemanticsAcquire, or gl_SemanticsAcquireRelease
Semantics must not include multiple of gl_SemanticsRelease, gl_SemanticsAcquire, or gl_SemanticsAcquireRelease
semUnequal must not include multiple of gl_SemanticsRelease, gl_SemanticsAcquire, or gl_SemanticsAcquireRelease
Storage class semantics must not be zero
semUnequal must not be gl_SemanticsRelease or gl_SemanticsAcquireRelease
gl_SemanticsMakeAvailable requires gl_SemanticsRelease or gl_SemanticsAcquireRelease
gl_SemanticsMakeVisible requires gl_SemanticsAcquire or gl_SemanticsAcquireRelease
(...)
non-constant offset argument
offsets argument
must be a compile-time constant:
component argument
must be 0, 1, 2, or 3:
texel offset
argument must be compile-time constant
[gl_MinProgramTexelOffset, gl_MaxProgramTexelOffset]
value is out of range:
textureSamples and imageSamples
only supported on image with format r32i or r32ui
only supported on integer images
only supported on image with format r32f
first argument must be an interpolant, or interpolant-array element
cluster size
argument must be at least 1
argument must be a power of 2
subgroup op
requires SPIR-V 1.3
imageSamples
imageAtomic
call argument
sampler constructor must appear at point of use
arrayed constructor
all default precisions are highp; use precision statements to quiet warning, e.g.:\n         "precision mediump int; precision highp float;"
cannot convert from '%s' to '%s'
no operation '%s' exists that takes an operand of type %s (or there is no acceptable conversion)
no operation '%s' exists that takes a left-hand operand of type '%s' and a right operand of type '%s' (or there is no acceptable conversion)
 wrong operand types:
(Did you mean gl_VertexIndex?)
(Did you mean gl_InstanceIndex?)
tessellation-control per-vertex output l-value must be indexed with gl_InvocationID
can't modify shader input
can't modify gl_InstanceID
can't modify gl_VertexID
can't modify gl_FrontFace
can't modify gl_FragDepth if using early_fragment_tests
"%s" (%s)
(%s)
scalar integer expression required
not allowed in nested scope
identifiers starting with "gl_" are reserved
identifiers containing consecutive underscores ("__") are reserved, and an error if version <= 300
identifiers containing consecutive underscores ("__") are reserved
names beginning with "GL_" can't be (un)defined:
"defined" can't be (un)defined:
predefined names can't be (un)defined:
names containing consecutive underscores are reserved, and an error if version <= 300:
names containing consecutive underscores are reserved:
line continuation
used at end of comment; the following line is still part of the comment
used at end of comment, but this version does not provide line continuation
not allowed in this version
array argument must be sized
can't construct structure containing 16-bit type
can't construct structure containing 8-bit type
16-bit arrays not supported
16-bit vectors only take vector types
8-bit arrays not supported
8-bit vectors only take vector types
array constructor must have at least one argument
array constructor argument not correct type to construct array element
constructing non-array constituent from array argument
constructing matrix from matrix
matrix constructed from matrix can only have one argument
constructor argument does not have a type
cannot convert a sampler
cannot convert an atomic_uint
sampler-constructor requires two arguments
sampler-constructor cannot make an array of samplers
sampler-constructor first argument must be a scalar textureXXX type
sampler-constructor first argument must match type and dimensionality of constructor type
sampler-constructor second argument must be a scalar type 'sampler'
non-uniform struct contains a sampler or image:
sampler/image types can only be used in uniform variables or function parameters:
non-uniform struct contains an atomic_uint:
atomic_uints can only be used in uniform variables or function parameters:
non-opaque uniforms outside a block
non-opaque uniform variables need a layout(location=L)
not allowed on block or structure members
in for stage inputs
out for stage outputs
cannot use 'inout' at global scope
for non-parameter, can only apply to 'in' or no storage qualifier
memory qualifiers cannot be used on this type
buffers can be declared only as blocks
blend equation
can only be applied to a standalone 'out'
shader input/output
must be qualified as flat
cannot use interpolation qualifiers with patch
cannot be a structure or array
vertex input arrays
vertex-shader `double` type input
vertex input cannot be further qualified
can only use on output in tessellation-control shader
fragment-shader struct input
fragment-shader struct input containing structure
fragment-shader struct input containing an array
global storage input qualifier cannot be used in a compute shader
vertex-shader struct output
vertex-shader struct output containing structure
vertex-shader struct output containing an array
can only use on input in tessellation-evaluation shader
fragment shader output
cannot be a structure
cannot be a matrix
centroid/sample/patch
can't use auxiliary qualifier on a fragment output
flat/smooth/noperspective
can't use interpolation qualifier on a fragment output
cannot contain a double, int64, or uint64
global storage output qualifier cannot be used in a compute shader
can only have one auxiliary qualifier (centroid, patch, and sample)
can only have one interpolation qualifier (flat, smooth, noperspective)
precise qualifier must appear first
invariant qualifier must appear before interpolation, storage, and precision qualifiers 
interpolation qualifiers must appear before storage and precision qualifiers
Auxiliary qualifiers (centroid, patch, and sample) must appear before storage and precision qualifiers
precision qualifier must appear as last qualifier
in/out must appear before const
too many storage qualifiers
only one precision qualifier allowed
only one coherent/devicecoherent/queuefamilycoherent/workgroupcoherent/subgroupcoherent qualifier allowed
replicated qualifiers
can only apply highp to atomic_uint
cannot apply precision statement to this type; use 'float', 'int' or a sampler type
atomic counters can only be highp
substituting 'mediump'
type requires declaration of default precision qualifier
type cannot have precision qualifier
samplers and atomic_uints cannot be output parameters
array size must be a positive integer
const array
vertex-shader array-of-array output
vertex-shader array-of-struct output
fragment-shader array-of-array input
fragment-shader array-of-struct input
fragment-shader array-of-array output
array size required
array initializer must be sized
only outermost dimension of an array of arrays can be implicitly sized
only outermost dimension of an array of arrays can be a specialization constant
arrays of arrays
cannot redeclare a user-block member array
array variable name expected
redeclaring non-array as array
redeclaration of array with a different element type
redeclaration of array with a different array dimensions or sizes
redeclaration of array with size
variable index
array must be redeclared with a size before being indexed with a variable
gl_TexCoord
gl_FogFragCoord
gl_FrontColor
gl_BackColor
gl_FrontSecondaryColor
gl_BackSecondaryColor
gl_SecondaryColor
cannot redeclare after use
redeclaration
cannot apply layout qualifier to
cannot change storage, memory, or auxiliary qualification of
cannot change interpolation qualification of
cannot change qualification of
can only change layout qualification of
cannot change input storage qualification of
cannot redeclare with different qualification:
cannot change output storage qualification of
all redeclarations must use the same depth layout on
built-in block redeclaration
gl_PerFragment
block declaration
cannot redeclare block: 
cannot redeclare a built-in block with a user name
no declaration found for redeclaration
can only redeclare a built-in block once, and before any use
cannot redeclare a non block as a block
cannot redeclare block member with a different type
cannot change arrayness of redeclared block member
cannot change array size of redeclared block member
cannot add memory qualifier to redeclared block member
cannot add non-XFB layout to redeclared block member
cannot add patch to redeclared block member
xfb_buffer
member cannot contradict block (or what block inherited from global)
block redeclaration has extra members
cannot change arrayness of redeclared block
cannot change array size of redeclared block
storage qualifier not allowed on function parameter
cannot use auxiliary or interpolation qualifiers on a function parameter
cannot use layout qualifiers on a function parameter
cannot use invariant qualifier on a function parameter
qualifier has no effect on non-output parameters
cannot nest a block definition inside a structure or block
cannot nest a structure definition inside a structure or block
can't use with samplers or structs containing samplers
can't use with structs containing float16
can't use with arrays containing float16
can't use with structs containing int16
can't use with arrays containing int16
can't use with structs containing uint16
can't use with arrays containing uint16
can't use with structs containing int8
can't use with arrays containing int8
can't use with structs containing uint8
can't use with arrays containing uint8
can't use with types containing arrays sized with a specialization constant
cannot use storage or interpolation qualifiers on structure members
cannot use memory qualifiers on structure members
cannot use layout qualifiers on structure members
cannot use invariant qualifier on structure members
limitations
inductive-loop init-declaration requires the form "type-specifier loop-index = constant-expression"
inductive loop requires a scalar 'int' or 'float' loop index
inductive-loop condition requires the form "loop-index <comparison-op> constant-expression"
inductive-loop termination requires the form "loop-index++, loop-index--, loop-index += constant-expression, or loop-index -= constant-expression"
gl_TexCoord array size
gl_MaxTextureCoords
gl_ClipDistance array size
gl_MaxClipDistances
gl_CullDistance array size
gl_MaxCullDistances
%s (%d)
must be less than or equal to
geometry shaders
tessellation shaders
compute shaders
image load-store format
image load store
push_constant
point_mode
origin_upper_left
pixel_center_integer
early_fragment_tests
post_depth_coverage
post depth coverage
depth layout qualifier
blend_support
unknown blend equation
unrecognized layout identifier, or qualifier requires assignment (e.g., binding = 4)
layout-id value
non-literal layout-id value
cannot be negative
align
uniform buffer-member align
must be a power of 2
location is too large
set is too large
descriptor set
binding is too large
component
component is too large
xfb_
transform feedback qualifier
gl_MaxTransformFeedbackBuffers is %d
buffer is too large:
internal max is %d
xfb_offset
offset is too large:
xfb_stride
gl_MaxTransformFeedbackInterleavedComponents is %d
1/4 stride is too large:
stride is too large:
input_attachment_index
attachment index is too large
constant_id
specialization-constant id is too large
specialization-constant id already used
must be greater than 0
must be at least 1
too large, must be less than gl_MaxGeometryOutputVertices
stream
selecting output stream
index layout qualifier on fragment output
value must be 0 or 1
local_size_
local_size_x_id
local_size_y_id
local_size_z_id
there is no such layout identifier for this stage taking an assigned value
can only be used on variable declaration
SPIR-V requires location for user input/output
cannot specify matrix layout on a variable declaration
cannot specify packing on a variable declaration
cannot specify on a variable declaration
can only specify on a uniform block
cannot use in a block array where new locations are needed for each block element
too large for fragment output
type overflows the available 4 components
cannot apply to a matrix, structure, or block
doubles cannot start on an odd-numbered component
location qualifier on in/out block
cannot apply to uniform or buffer block
can only apply to uniform, buffer, in, or out storage qualifiers
overlapping use of location
fragment outputs sharing the same location must be the same basic type
offset %d in buffer %d
overlapping offsets at
type contains double; xfb_offset must be a multiple of 8
type contains half float; xfb_offset must be a multiple of 2
must be a multiple of size of first component
all stride settings must match for xfb buffer
requires block, or sampler/image, or atomic-counter type
assuming binding count of one for compile-time checking of binding numbers for unsized array
(using array)
sampler binding not less than gl_MaxCombinedTextureImageUnits
atomic_uint binding is too large; see gl_MaxAtomicCounterBindings
layout(binding=X) is required
uniform/buffer blocks require layout(binding=X)
sampler/texture/image requires layout(binding=X)
[][]
Generating SPIR-V array-of-arrays, but Vulkan only supports single array level for this resource
only applies to block members, not blocks
only apply to images
does not apply to floating point images
does not apply to signed integer images
does not apply to unsigned integer images
format requires readonly or writeonly memory qualifier
image variables not declared 'writeonly' and without a format layout qualifier
can only be used with a block
requires an input_attachment_index layout qualifier
can only be used with a subpass
can only be applied to 'const'-qualified scalar
can only be applied to a scalar
cannot be applied to this type
cannot apply layout qualifiers to a shared variable
must specify 'location' to use 'component'
location qualifier on input
location qualifier on output
location qualifier on uniform or buffer
can only be used on an output
can only be used with an explicit location
requires uniform or buffer storage qualifier
xfb layout qualifier
matrix or packing qualifiers can only be used on a uniform or buffer
offset/align can only be used on a uniform or buffer
can only be used with a uniform
cannot be used with push_constant
can only apply to a standalone qualifier
local_size
local_size id
array must be explicitly sized
atomic counters sharing the same offset:
can't use function syntax on variable
ambiguous function signature match: multiple signatures match under implicit type conversion
ambiguous best function under implicit type conversion
atomic_uint binding is too large
useless application of layout qualifier
initializer
qualifier
can only apply origin_upper_left and pixel_center_origin to gl_FragCoord
can only apply depth layout to gl_FragDepth
cannot change the type of
initializer requires a variable, not a member
array initializer
'%s'
uniform initializers must be constant
global const initializers must be constant
non-constant initializer
non-constant global initializer (needs GL_EXT_shader_non_constant_global_initializers)
non-matching or non-convertible constant type for const initializer
initializer list
wrong number of structure members
wrong number of matrix columns:
wrong vector size (or rows in a matrix column):
unexpected initializer-list type:
unsupported construction
can't convert
cannot convert parameter %d from '%s' to '%s'
array-of-array of block
member storage qualifier cannot contradict block storage qualifier
member of uniform or buffer block cannot have an auxiliary or interpolation qualifier
offset on block member
member of block cannot be or contain a sampler, image, or atomic_uint type
can only be used with std140 or std430 layout packing
member cannot contradict block
member of block cannot have a packing layout qualifier
location on block member
can only use in an in/out block
offset/align
Cannot reuse block name within the same interface:
block name cannot redefine a non-block name
nameless block contains a member that already has a name at global scope
block instance name redefinition
requires the 'buffer' storage qualifier
buffer block
input block
fragment input block
output block
vertex output block
only uniform, buffer, in, or out blocks are supported
cannot use interpolation qualifiers on an interface block
cannot use centroid qualifier on an interface block
cannot use sample qualifier on an interface block
cannot use invariant qualifier on an interface block
either the block needs a location, or all members need a location, or no members have a location
cannot apply to a block
must be a multiple of the member's alignment
cannot lie in previous members
identifier not previously declared
cannot re-qualify a function name
cannot add storage, auxiliary, memory, interpolation, layout, or precision qualifier to an existing variable
cannot change qualification after use
unknown requalification
can only apply to an output
can only apply to an output, or to an input in a non-vertex stage\n
can only apply to 'out'
cannot change previously set layout value
can only apply to 'in'
cannot change previously set input primitive
cannot apply to input
cannot change previously set output primitive
cannot apply to 'out'
cannot apply to:
cannot change previously set vertex spacing
cannot change previously set vertex order
cannot change previously set size
too large; see gl_MaxComputeWorkGroupSize
post_coverage_coverage
cannot use auxiliary, memory, interpolation, or precision qualifier in a default qualifier declaration (declaration with no type)
cannot use offset or align qualifiers in a default qualifier declaration (declaration with no type)
default qualifier requires 'uniform', 'buffer', 'in', or 'out' storage qualification
cannot declare a default, include a type or full declaration
location/component/index
cannot declare a default, use a full declaration
cannot declare a default, can only be used on a block
cannot declare a default, can only be used on a scalar
cannot have statements before first case/default label
duplicate label
duplicated value
switch statements
condition must be a scalar integer expression
last case/default label not followed by statements
use-storage-buffer
use-vulkan-memory-model
float dFdx(float p);vec2  dFdx(vec2  p);vec3  dFdx(vec3  p);vec4  dFdx(vec4  p);float dFdy(float p);vec2  dFdy(vec2  p);vec3  dFdy(vec3  p);vec4  dFdy(vec4  p);float fwidth(float p);vec2  fwidth(vec2  p);vec3  fwidth(vec3  p);vec4  fwidth(vec4  p);
float dFdxFine(float p);vec2  dFdxFine(vec2  p);vec3  dFdxFine(vec3  p);vec4  dFdxFine(vec4  p);float dFdyFine(float p);vec2  dFdyFine(vec2  p);vec3  dFdyFine(vec3  p);vec4  dFdyFine(vec4  p);float fwidthFine(float p);vec2  fwidthFine(vec2  p);vec3  fwidthFine(vec3  p);vec4  fwidthFine(vec4  p);float dFdxCoarse(float p);vec2  dFdxCoarse(vec2  p);vec3  dFdxCoarse(vec3  p);vec4  dFdxCoarse(vec4  p);float dFdyCoarse(float p);vec2  dFdyCoarse(vec2  p);vec3  dFdyCoarse(vec3  p);vec4  dFdyCoarse(vec4  p);float fwidthCoarse(float p);vec2  fwidthCoarse(vec2  p);vec3  fwidthCoarse(vec3  p);vec4  fwidthCoarse(vec4  p);
float16_t dFdx(float16_t);f16vec2   dFdx(f16vec2);f16vec3   dFdx(f16vec3);f16vec4   dFdx(f16vec4);float16_t dFdy(float16_t);f16vec2   dFdy(f16vec2);f16vec3   dFdy(f16vec3);f16vec4   dFdy(f16vec4);float16_t dFdxFine(float16_t);f16vec2   dFdxFine(f16vec2);f16vec3   dFdxFine(f16vec3);f16vec4   dFdxFine(f16vec4);float16_t dFdyFine(float16_t);f16vec2   dFdyFine(f16vec2);f16vec3   dFdyFine(f16vec3);f16vec4   dFdyFine(f16vec4);float16_t dFdxCoarse(float16_t);f16vec2   dFdxCoarse(f16vec2);f16vec3   dFdxCoarse(f16vec3);f16vec4   dFdxCoarse(f16vec4);float16_t dFdyCoarse(float16_t);f16vec2   dFdyCoarse(f16vec2);f16vec3   dFdyCoarse(f16vec3);f16vec4   dFdyCoarse(f16vec4);float16_t fwidth(float16_t);f16vec2   fwidth(f16vec2);f16vec3   fwidth(f16vec3);f16vec4   fwidth(f16vec4);float16_t fwidthFine(float16_t);f16vec2   fwidthFine(f16vec2);f16vec3   fwidthFine(f16vec3);f16vec4   fwidthFine(f16vec4);float16_t fwidthCoarse(float16_t);f16vec2   fwidthCoarse(f16vec2);f16vec3   fwidthCoarse(f16vec3);f16vec4   fwidthCoarse(f16vec4);
float64_t dFdx(float64_t);f64vec2   dFdx(f64vec2);f64vec3   dFdx(f64vec3);f64vec4   dFdx(f64vec4);float64_t dFdy(float64_t);f64vec2   dFdy(f64vec2);f64vec3   dFdy(f64vec3);f64vec4   dFdy(f64vec4);float64_t dFdxFine(float64_t);f64vec2   dFdxFine(f64vec2);f64vec3   dFdxFine(f64vec3);f64vec4   dFdxFine(f64vec4);float64_t dFdyFine(float64_t);f64vec2   dFdyFine(f64vec2);f64vec3   dFdyFine(f64vec3);f64vec4   dFdyFine(f64vec4);float64_t dFdxCoarse(float64_t);f64vec2   dFdxCoarse(f64vec2);f64vec3   dFdxCoarse(f64vec3);f64vec4   dFdxCoarse(f64vec4);float64_t dFdyCoarse(float64_t);f64vec2   dFdyCoarse(f64vec2);f64vec3   dFdyCoarse(f64vec3);f64vec4   dFdyCoarse(f64vec4);float64_t fwidth(float64_t);f64vec2   fwidth(f64vec2);f64vec3   fwidth(f64vec3);f64vec4   fwidth(f64vec4);float64_t fwidthFine(float64_t);f64vec2   fwidthFine(f64vec2);f64vec3   fwidthFine(f64vec3);f64vec4   fwidthFine(f64vec4);float64_t fwidthCoarse(float64_t);f64vec2   fwidthCoarse(f64vec2);f64vec3   fwidthCoarse(f64vec3);f64vec4   fwidthCoarse(f64vec4);
float radians(float degrees);vec2  radians(vec2  degrees);vec3  radians(vec3  degrees);vec4  radians(vec4  degrees);float degrees(float radians);vec2  degrees(vec2  radians);vec3  degrees(vec3  radians);vec4  degrees(vec4  radians);float sin(float angle);vec2  sin(vec2  angle);vec3  sin(vec3  angle);vec4  sin(vec4  angle);float cos(float angle);vec2  cos(vec2  angle);vec3  cos(vec3  angle);vec4  cos(vec4  angle);float tan(float angle);vec2  tan(vec2  angle);vec3  tan(vec3  angle);vec4  tan(vec4  angle);float asin(float x);vec2  asin(vec2  x);vec3  asin(vec3  x);vec4  asin(vec4  x);float acos(float x);vec2  acos(vec2  x);vec3  acos(vec3  x);vec4  acos(vec4  x);float atan(float y, float x);vec2  atan(vec2  y, vec2  x);vec3  atan(vec3  y, vec3  x);vec4  atan(vec4  y, vec4  x);float atan(float y_over_x);vec2  atan(vec2  y_over_x);vec3  atan(vec3  y_over_x);vec4  atan(vec4  y_over_x);\n
float sinh(float angle);vec2  sinh(vec2  angle);vec3  sinh(vec3  angle);vec4  sinh(vec4  angle);float cosh(float angle);vec2  cosh(vec2  angle);vec3  cosh(vec3  angle);vec4  cosh(vec4  angle);float tanh(float angle);vec2  tanh(vec2  angle);vec3  tanh(vec3  angle);vec4  tanh(vec4  angle);float asinh(float x);vec2  asinh(vec2  x);vec3  asinh(vec3  x);vec4  asinh(vec4  x);float acosh(float x);vec2  acosh(vec2  x);vec3  acosh(vec3  x);vec4  acosh(vec4  x);float atanh(float y_over_x);vec2  atanh(vec2  y_over_x);vec3  atanh(vec3  y_over_x);vec4  atanh(vec4  y_over_x);\n
float pow(float x, float y);vec2  pow(vec2  x, vec2  y);vec3  pow(vec3  x, vec3  y);vec4  pow(vec4  x, vec4  y);float exp(float x);vec2  exp(vec2  x);vec3  exp(vec3  x);vec4  exp(vec4  x);float log(float x);vec2  log(vec2  x);vec3  log(vec3  x);vec4  log(vec4  x);float exp2(float x);vec2  exp2(vec2  x);vec3  exp2(vec3  x);vec4  exp2(vec4  x);float log2(float x);vec2  log2(vec2  x);vec3  log2(vec3  x);vec4  log2(vec4  x);float sqrt(float x);vec2  sqrt(vec2  x);vec3  sqrt(vec3  x);vec4  sqrt(vec4  x);float inversesqrt(float x);vec2  inversesqrt(vec2  x);vec3  inversesqrt(vec3  x);vec4  inversesqrt(vec4  x);\n
float abs(float x);vec2  abs(vec2  x);vec3  abs(vec3  x);vec4  abs(vec4  x);float sign(float x);vec2  sign(vec2  x);vec3  sign(vec3  x);vec4  sign(vec4  x);float floor(float x);vec2  floor(vec2  x);vec3  floor(vec3  x);vec4  floor(vec4  x);float ceil(float x);vec2  ceil(vec2  x);vec3  ceil(vec3  x);vec4  ceil(vec4  x);float fract(float x);vec2  fract(vec2  x);vec3  fract(vec3  x);vec4  fract(vec4  x);float mod(float x, float y);vec2  mod(vec2  x, float y);vec3  mod(vec3  x, float y);vec4  mod(vec4  x, float y);vec2  mod(vec2  x, vec2  y);vec3  mod(vec3  x, vec3  y);vec4  mod(vec4  x, vec4  y);float min(float x, float y);vec2  min(vec2  x, float y);vec3  min(vec3  x, float y);vec4  min(vec4  x, float y);vec2  min(vec2  x, vec2  y);vec3  min(vec3  x, vec3  y);vec4  min(vec4  x, vec4  y);float max(float x, float y);vec2  max(vec2  x, float y);vec3  max(vec3  x, float y);vec4  max(vec4  x, float y);vec2  max(vec2  x, vec2  y);vec3  max(vec3  x, vec3  y);vec4  max(vec4  x, vec4  y);float clamp(float x, float minVal, float maxVal);vec2  clamp(vec2  x, float minVal, float maxVal);vec3  clamp(vec3  x, float minVal, float maxVal);vec4  clamp(vec4  x, float minVal, float maxVal);vec2  clamp(vec2  x, vec2  minVal, vec2  maxVal);vec3  clamp(vec3  x, vec3  minVal, vec3  maxVal);vec4  clamp(vec4  x, vec4  minVal, vec4  maxVal);float mix(float x, float y, float a);vec2  mix(vec2  x, vec2  y, float a);vec3  mix(vec3  x, vec3  y, float a);vec4  mix(vec4  x, vec4  y, float a);vec2  mix(vec2  x, vec2  y, vec2  a);vec3  mix(vec3  x, vec3  y, vec3  a);vec4  mix(vec4  x, vec4  y, vec4  a);float step(float edge, float x);vec2  step(vec2  edge, vec2  x);vec3  step(vec3  edge, vec3  x);vec4  step(vec4  edge, vec4  x);vec2  step(float edge, vec2  x);vec3  step(float edge, vec3  x);vec4  step(float edge, vec4  x);float smoothstep(float edge0, float edge1, float x);vec2  smoothstep(vec2  edge0, vec2  edge1, vec2  x);vec3  smoothstep(vec3  edge0, vec3  edge1, vec3  x);vec4  smoothstep(vec4  edge0, vec4  edge1, vec4  x);vec2  smoothstep(float edge0, float edge1, vec2  x);vec3  smoothstep(float edge0, float edge1, vec3  x);vec4  smoothstep(float edge0, float edge1, vec4  x);\n
  int abs(  int x);ivec2 abs(ivec2 x);ivec3 abs(ivec3 x);ivec4 abs(ivec4 x);  int sign(  int x);ivec2 sign(ivec2 x);ivec3 sign(ivec3 x);ivec4 sign(ivec4 x);float trunc(float x);vec2  trunc(vec2  x);vec3  trunc(vec3  x);vec4  trunc(vec4  x);float round(float x);vec2  round(vec2  x);vec3  round(vec3  x);vec4  round(vec4  x);float roundEven(float x);vec2  roundEven(vec2  x);vec3  roundEven(vec3  x);vec4  roundEven(vec4  x);float modf(float, out float);vec2  modf(vec2,  out vec2 );vec3  modf(vec3,  out vec3 );vec4  modf(vec4,  out vec4 );  int min(int    x, int y);ivec2 min(ivec2  x, int y);ivec3 min(ivec3  x, int y);ivec4 min(ivec4  x, int y);ivec2 min(ivec2  x, ivec2  y);ivec3 min(ivec3  x, ivec3  y);ivec4 min(ivec4  x, ivec4  y); uint min(uint   x, uint y);uvec2 min(uvec2  x, uint y);uvec3 min(uvec3  x, uint y);uvec4 min(uvec4  x, uint y);uvec2 min(uvec2  x, uvec2  y);uvec3 min(uvec3  x, uvec3  y);uvec4 min(uvec4  x, uvec4  y);  int max(int    x, int y);ivec2 max(ivec2  x, int y);ivec3 max(ivec3  x, int y);ivec4 max(ivec4  x, int y);ivec2 max(ivec2  x, ivec2  y);ivec3 max(ivec3  x, ivec3  y);ivec4 max(ivec4  x, ivec4  y); uint max(uint   x, uint y);uvec2 max(uvec2  x, uint y);uvec3 max(uvec3  x, uint y);uvec4 max(uvec4  x, uint y);uvec2 max(uvec2  x, uvec2  y);uvec3 max(uvec3  x, uvec3  y);uvec4 max(uvec4  x, uvec4  y);int    clamp(int x, int minVal, int maxVal);ivec2  clamp(ivec2  x, int minVal, int maxVal);ivec3  clamp(ivec3  x, int minVal, int maxVal);ivec4  clamp(ivec4  x, int minVal, int maxVal);ivec2  clamp(ivec2  x, ivec2  minVal, ivec2  maxVal);ivec3  clamp(ivec3  x, ivec3  minVal, ivec3  maxVal);ivec4  clamp(ivec4  x, ivec4  minVal, ivec4  maxVal);uint   clamp(uint x, uint minVal, uint maxVal);uvec2  clamp(uvec2  x, uint minVal, uint maxVal);uvec3  clamp(uvec3  x, uint minVal, uint maxVal);uvec4  clamp(uvec4  x, uint minVal, uint maxVal);uvec2  clamp(uvec2  x, uvec2  minVal, uvec2  maxVal);uvec3  clamp(uvec3  x, uvec3  minVal, uvec3  maxVal);uvec4  clamp(uvec4  x, uvec4  minVal, uvec4  maxVal);float mix(float x, float y, bool  a);vec2  mix(vec2  x, vec2  y, bvec2 a);vec3  mix(vec3  x, vec3  y, bvec3 a);vec4  mix(vec4  x, vec4  y, bvec4 a);bool  isnan(float x);bvec2 isnan(vec2  x);bvec3 isnan(vec3  x);bvec4 isnan(vec4  x);bool  isinf(float x);bvec2 isinf(vec2  x);bvec3 isinf(vec3  x);bvec4 isinf(vec4  x);\n
double sqrt(double);dvec2  sqrt(dvec2);dvec3  sqrt(dvec3);dvec4  sqrt(dvec4);double inversesqrt(double);dvec2  inversesqrt(dvec2);dvec3  inversesqrt(dvec3);dvec4  inversesqrt(dvec4);double abs(double);dvec2  abs(dvec2);dvec3  abs(dvec3);dvec4  abs(dvec4);double sign(double);dvec2  sign(dvec2);dvec3  sign(dvec3);dvec4  sign(dvec4);double floor(double);dvec2  floor(dvec2);dvec3  floor(dvec3);dvec4  floor(dvec4);double trunc(double);dvec2  trunc(dvec2);dvec3  trunc(dvec3);dvec4  trunc(dvec4);double round(double);dvec2  round(dvec2);dvec3  round(dvec3);dvec4  round(dvec4);double roundEven(double);dvec2  roundEven(dvec2);dvec3  roundEven(dvec3);dvec4  roundEven(dvec4);double ceil(double);dvec2  ceil(dvec2);dvec3  ceil(dvec3);dvec4  ceil(dvec4);double fract(double);dvec2  fract(dvec2);dvec3  fract(dvec3);dvec4  fract(dvec4);double mod(double, double);dvec2  mod(dvec2 , double);dvec3  mod(dvec3 , double);dvec4  mod(dvec4 , double);dvec2  mod(dvec2 , dvec2);dvec3  mod(dvec3 , dvec3);dvec4  mod(dvec4 , dvec4);double modf(double, out double);dvec2  modf(dvec2,  out dvec2);dvec3  modf(dvec3,  out dvec3);dvec4  modf(dvec4,  out dvec4);double min(double, double);dvec2  min(dvec2,  double);dvec3  min(dvec3,  double);dvec4  min(dvec4,  double);dvec2  min(dvec2,  dvec2);dvec3  min(dvec3,  dvec3);dvec4  min(dvec4,  dvec4);double max(double, double);dvec2  max(dvec2 , double);dvec3  max(dvec3 , double);dvec4  max(dvec4 , double);dvec2  max(dvec2 , dvec2);dvec3  max(dvec3 , dvec3);dvec4  max(dvec4 , dvec4);double clamp(double, double, double);dvec2  clamp(dvec2 , double, double);dvec3  clamp(dvec3 , double, double);dvec4  clamp(dvec4 , double, double);dvec2  clamp(dvec2 , dvec2 , dvec2);dvec3  clamp(dvec3 , dvec3 , dvec3);dvec4  clamp(dvec4 , dvec4 , dvec4);double mix(double, double, double);dvec2  mix(dvec2,  dvec2,  double);dvec3  mix(dvec3,  dvec3,  double);dvec4  mix(dvec4,  dvec4,  double);dvec2  mix(dvec2,  dvec2,  dvec2);dvec3  mix(dvec3,  dvec3,  dvec3);dvec4  mix(dvec4,  dvec4,  dvec4);double mix(double, double, bool);dvec2  mix(dvec2,  dvec2,  bvec2);dvec3  mix(dvec3,  dvec3,  bvec3);dvec4  mix(dvec4,  dvec4,  bvec4);double step(double, double);dvec2  step(dvec2 , dvec2);dvec3  step(dvec3 , dvec3);dvec4  step(dvec4 , dvec4);dvec2  step(double, dvec2);dvec3  step(double, dvec3);dvec4  step(double, dvec4);double smoothstep(double, double, double);dvec2  smoothstep(dvec2 , dvec2 , dvec2);dvec3  smoothstep(dvec3 , dvec3 , dvec3);dvec4  smoothstep(dvec4 , dvec4 , dvec4);dvec2  smoothstep(double, double, dvec2);dvec3  smoothstep(double, double, dvec3);dvec4  smoothstep(double, double, dvec4);bool  isnan(double);bvec2 isnan(dvec2);bvec3 isnan(dvec3);bvec4 isnan(dvec4);bool  isinf(double);bvec2 isinf(dvec2);bvec3 isinf(dvec3);bvec4 isinf(dvec4);double length(double);double length(dvec2);double length(dvec3);double length(dvec4);double distance(double, double);double distance(dvec2 , dvec2);double distance(dvec3 , dvec3);double distance(dvec4 , dvec4);double dot(double, double);double dot(dvec2 , dvec2);double dot(dvec3 , dvec3);double dot(dvec4 , dvec4);dvec3 cross(dvec3, dvec3);double normalize(double);dvec2  normalize(dvec2);dvec3  normalize(dvec3);dvec4  normalize(dvec4);double faceforward(double, double, double);dvec2  faceforward(dvec2,  dvec2,  dvec2);dvec3  faceforward(dvec3,  dvec3,  dvec3);dvec4  faceforward(dvec4,  dvec4,  dvec4);double reflect(double, double);dvec2  reflect(dvec2 , dvec2 );dvec3  reflect(dvec3 , dvec3 );dvec4  reflect(dvec4 , dvec4 );double refract(double, double, double);dvec2  refract(dvec2 , dvec2 , double);dvec3  refract(dvec3 , dvec3 , double);dvec4  refract(dvec4 , dvec4 , double);dmat2 matrixCompMult(dmat2, dmat2);dmat3 matrixCompMult(dmat3, dmat3);dmat4 matrixCompMult(dmat4, dmat4);dmat2x3 matrixCompMult(dmat2x3, dmat2x3);dmat2x4 matrixCompMult(dmat2x4, dmat2x4);dmat3x2 matrixCompMult(dmat3x2, dmat3x2);dmat3x4 matrixCompMult(dmat3x4, dmat3x4);dmat4x2 matrixCompMult(dmat4x2, dmat4x2);dmat4x3 matrixCompMult(dmat4x3, dmat4x3);dmat2   outerProduct(dvec2, dvec2);dmat3   outerProduct(dvec3, dvec3);dmat4   outerProduct(dvec4, dvec4);dmat2x3 outerProduct(dvec3, dvec2);dmat3x2 outerProduct(dvec2, dvec3);dmat2x4 outerProduct(dvec4, dvec2);dmat4x2 outerProduct(dvec2, dvec4);dmat3x4 outerProduct(dvec4, dvec3);dmat4x3 outerProduct(dvec3, dvec4);dmat2   transpose(dmat2);dmat3   transpose(dmat3);dmat4   transpose(dmat4);dmat2x3 transpose(dmat3x2);dmat3x2 transpose(dmat2x3);dmat2x4 transpose(dmat4x2);dmat4x2 transpose(dmat2x4);dmat3x4 transpose(dmat4x3);dmat4x3 transpose(dmat3x4);double determinant(dmat2);double determinant(dmat3);double determinant(dmat4);dmat2 inverse(dmat2);dmat3 inverse(dmat3);dmat4 inverse(dmat4);bvec2 lessThan(dvec2, dvec2);bvec3 lessThan(dvec3, dvec3);bvec4 lessThan(dvec4, dvec4);bvec2 lessThanEqual(dvec2, dvec2);bvec3 lessThanEqual(dvec3, dvec3);bvec4 lessThanEqual(dvec4, dvec4);bvec2 greaterThan(dvec2, dvec2);bvec3 greaterThan(dvec3, dvec3);bvec4 greaterThan(dvec4, dvec4);bvec2 greaterThanEqual(dvec2, dvec2);bvec3 greaterThanEqual(dvec3, dvec3);bvec4 greaterThanEqual(dvec4, dvec4);bvec2 equal(dvec2, dvec2);bvec3 equal(dvec3, dvec3);bvec4 equal(dvec4, dvec4);bvec2 notEqual(dvec2, dvec2);bvec3 notEqual(dvec3, dvec3);bvec4 notEqual(dvec4, dvec4);\n
int64_t abs(int64_t);i64vec2 abs(i64vec2);i64vec3 abs(i64vec3);i64vec4 abs(i64vec4);int64_t sign(int64_t);i64vec2 sign(i64vec2);i64vec3 sign(i64vec3);i64vec4 sign(i64vec4);int64_t  min(int64_t,  int64_t);i64vec2  min(i64vec2,  int64_t);i64vec3  min(i64vec3,  int64_t);i64vec4  min(i64vec4,  int64_t);i64vec2  min(i64vec2,  i64vec2);i64vec3  min(i64vec3,  i64vec3);i64vec4  min(i64vec4,  i64vec4);uint64_t min(uint64_t, uint64_t);u64vec2  min(u64vec2,  uint64_t);u64vec3  min(u64vec3,  uint64_t);u64vec4  min(u64vec4,  uint64_t);u64vec2  min(u64vec2,  u64vec2);u64vec3  min(u64vec3,  u64vec3);u64vec4  min(u64vec4,  u64vec4);int64_t  max(int64_t,  int64_t);i64vec2  max(i64vec2,  int64_t);i64vec3  max(i64vec3,  int64_t);i64vec4  max(i64vec4,  int64_t);i64vec2  max(i64vec2,  i64vec2);i64vec3  max(i64vec3,  i64vec3);i64vec4  max(i64vec4,  i64vec4);uint64_t max(uint64_t, uint64_t);u64vec2  max(u64vec2,  uint64_t);u64vec3  max(u64vec3,  uint64_t);u64vec4  max(u64vec4,  uint64_t);u64vec2  max(u64vec2,  u64vec2);u64vec3  max(u64vec3,  u64vec3);u64vec4  max(u64vec4,  u64vec4);int64_t  clamp(int64_t,  int64_t,  int64_t);i64vec2  clamp(i64vec2,  int64_t,  int64_t);i64vec3  clamp(i64vec3,  int64_t,  int64_t);i64vec4  clamp(i64vec4,  int64_t,  int64_t);i64vec2  clamp(i64vec2,  i64vec2,  i64vec2);i64vec3  clamp(i64vec3,  i64vec3,  i64vec3);i64vec4  clamp(i64vec4,  i64vec4,  i64vec4);uint64_t clamp(uint64_t, uint64_t, uint64_t);u64vec2  clamp(u64vec2,  uint64_t, uint64_t);u64vec3  clamp(u64vec3,  uint64_t, uint64_t);u64vec4  clamp(u64vec4,  uint64_t, uint64_t);u64vec2  clamp(u64vec2,  u64vec2,  u64vec2);u64vec3  clamp(u64vec3,  u64vec3,  u64vec3);u64vec4  clamp(u64vec4,  u64vec4,  u64vec4);int64_t  mix(int64_t,  int64_t,  bool);i64vec2  mix(i64vec2,  i64vec2,  bvec2);i64vec3  mix(i64vec3,  i64vec3,  bvec3);i64vec4  mix(i64vec4,  i64vec4,  bvec4);uint64_t mix(uint64_t, uint64_t, bool);u64vec2  mix(u64vec2,  u64vec2,  bvec2);u64vec3  mix(u64vec3,  u64vec3,  bvec3);u64vec4  mix(u64vec4,  u64vec4,  bvec4);int64_t doubleBitsToInt64(double);i64vec2 doubleBitsToInt64(dvec2);i64vec3 doubleBitsToInt64(dvec3);i64vec4 doubleBitsToInt64(dvec4);uint64_t doubleBitsToUint64(double);u64vec2  doubleBitsToUint64(dvec2);u64vec3  doubleBitsToUint64(dvec3);u64vec4  doubleBitsToUint64(dvec4);double int64BitsToDouble(int64_t);dvec2  int64BitsToDouble(i64vec2);dvec3  int64BitsToDouble(i64vec3);dvec4  int64BitsToDouble(i64vec4);double uint64BitsToDouble(uint64_t);dvec2  uint64BitsToDouble(u64vec2);dvec3  uint64BitsToDouble(u64vec3);dvec4  uint64BitsToDouble(u64vec4);int64_t  packInt2x32(ivec2);uint64_t packUint2x32(uvec2);ivec2    unpackInt2x32(int64_t);uvec2    unpackUint2x32(uint64_t);bvec2 lessThan(i64vec2, i64vec2);bvec3 lessThan(i64vec3, i64vec3);bvec4 lessThan(i64vec4, i64vec4);bvec2 lessThan(u64vec2, u64vec2);bvec3 lessThan(u64vec3, u64vec3);bvec4 lessThan(u64vec4, u64vec4);bvec2 lessThanEqual(i64vec2, i64vec2);bvec3 lessThanEqual(i64vec3, i64vec3);bvec4 lessThanEqual(i64vec4, i64vec4);bvec2 lessThanEqual(u64vec2, u64vec2);bvec3 lessThanEqual(u64vec3, u64vec3);bvec4 lessThanEqual(u64vec4, u64vec4);bvec2 greaterThan(i64vec2, i64vec2);bvec3 greaterThan(i64vec3, i64vec3);bvec4 greaterThan(i64vec4, i64vec4);bvec2 greaterThan(u64vec2, u64vec2);bvec3 greaterThan(u64vec3, u64vec3);bvec4 greaterThan(u64vec4, u64vec4);bvec2 greaterThanEqual(i64vec2, i64vec2);bvec3 greaterThanEqual(i64vec3, i64vec3);bvec4 greaterThanEqual(i64vec4, i64vec4);bvec2 greaterThanEqual(u64vec2, u64vec2);bvec3 greaterThanEqual(u64vec3, u64vec3);bvec4 greaterThanEqual(u64vec4, u64vec4);bvec2 equal(i64vec2, i64vec2);bvec3 equal(i64vec3, i64vec3);bvec4 equal(i64vec4, i64vec4);bvec2 equal(u64vec2, u64vec2);bvec3 equal(u64vec3, u64vec3);bvec4 equal(u64vec4, u64vec4);bvec2 notEqual(i64vec2, i64vec2);bvec3 notEqual(i64vec3, i64vec3);bvec4 notEqual(i64vec4, i64vec4);bvec2 notEqual(u64vec2, u64vec2);bvec3 notEqual(u64vec3, u64vec3);bvec4 notEqual(u64vec4, u64vec4);int   findLSB(int64_t);ivec2 findLSB(i64vec2);ivec3 findLSB(i64vec3);ivec4 findLSB(i64vec4);int   findLSB(uint64_t);ivec2 findLSB(u64vec2);ivec3 findLSB(u64vec3);ivec4 findLSB(u64vec4);int   findMSB(int64_t);ivec2 findMSB(i64vec2);ivec3 findMSB(i64vec3);ivec4 findMSB(i64vec4);int   findMSB(uint64_t);ivec2 findMSB(u64vec2);ivec3 findMSB(u64vec3);ivec4 findMSB(u64vec4);\n
uint atomicAdd(coherent volatile inout uint, uint); int atomicAdd(coherent volatile inout  int,  int);uint atomicAdd(coherent volatile inout uint, uint, int, int, int); int atomicAdd(coherent volatile inout  int,  int, int, int, int);uint atomicMin(coherent volatile inout uint, uint); int atomicMin(coherent volatile inout  int,  int);uint atomicMin(coherent volatile inout uint, uint, int, int, int); int atomicMin(coherent volatile inout  int,  int, int, int, int);uint atomicMax(coherent volatile inout uint, uint); int atomicMax(coherent volatile inout  int,  int);uint atomicMax(coherent volatile inout uint, uint, int, int, int); int atomicMax(coherent volatile inout  int,  int, int, int, int);uint atomicAnd(coherent volatile inout uint, uint); int atomicAnd(coherent volatile inout  int,  int);uint atomicAnd(coherent volatile inout uint, uint, int, int, int); int atomicAnd(coherent volatile inout  int,  int, int, int, int);uint atomicOr (coherent volatile inout uint, uint); int atomicOr (coherent volatile inout  int,  int);uint atomicOr (coherent volatile inout uint, uint, int, int, int); int atomicOr (coherent volatile inout  int,  int, int, int, int);uint atomicXor(coherent volatile inout uint, uint); int atomicXor(coherent volatile inout  int,  int);uint atomicXor(coherent volatile inout uint, uint, int, int, int); int atomicXor(coherent volatile inout  int,  int, int, int, int);uint atomicExchange(coherent volatile inout uint, uint); int atomicExchange(coherent volatile inout  int,  int);uint atomicExchange(coherent volatile inout uint, uint, int, int, int); int atomicExchange(coherent volatile inout  int,  int, int, int, int);uint atomicCompSwap(coherent volatile inout uint, uint, uint); int atomicCompSwap(coherent volatile inout  int,  int,  int);uint atomicCompSwap(coherent volatile inout uint, uint, uint, int, int, int, int, int); int atomicCompSwap(coherent volatile inout  int,  int,  int, int, int, int, int, int);uint atomicLoad(coherent volatile in uint, int, int, int); int atomicLoad(coherent volatile in  int, int, int, int);void atomicStore(coherent volatile out uint, uint, int, int, int);void atomicStore(coherent volatile out  int,  int, int, int, int);\n
uint64_t atomicMin(coherent volatile inout uint64_t, uint64_t); int64_t atomicMin(coherent volatile inout  int64_t,  int64_t);uint64_t atomicMin(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicMin(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicMax(coherent volatile inout uint64_t, uint64_t); int64_t atomicMax(coherent volatile inout  int64_t,  int64_t);uint64_t atomicMax(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicMax(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicAnd(coherent volatile inout uint64_t, uint64_t); int64_t atomicAnd(coherent volatile inout  int64_t,  int64_t);uint64_t atomicAnd(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicAnd(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicOr (coherent volatile inout uint64_t, uint64_t); int64_t atomicOr (coherent volatile inout  int64_t,  int64_t);uint64_t atomicOr (coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicOr (coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicXor(coherent volatile inout uint64_t, uint64_t); int64_t atomicXor(coherent volatile inout  int64_t,  int64_t);uint64_t atomicXor(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicXor(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicAdd(coherent volatile inout uint64_t, uint64_t); int64_t atomicAdd(coherent volatile inout  int64_t,  int64_t);uint64_t atomicAdd(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicAdd(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicExchange(coherent volatile inout uint64_t, uint64_t); int64_t atomicExchange(coherent volatile inout  int64_t,  int64_t);uint64_t atomicExchange(coherent volatile inout uint64_t, uint64_t, int, int, int); int64_t atomicExchange(coherent volatile inout  int64_t,  int64_t, int, int, int);uint64_t atomicCompSwap(coherent volatile inout uint64_t, uint64_t, uint64_t); int64_t atomicCompSwap(coherent volatile inout  int64_t,  int64_t,  int64_t);uint64_t atomicCompSwap(coherent volatile inout uint64_t, uint64_t, uint64_t, int, int, int, int, int); int64_t atomicCompSwap(coherent volatile inout  int64_t,  int64_t,  int64_t, int, int, int, int, int);uint64_t atomicLoad(coherent volatile in uint64_t, int, int, int); int64_t atomicLoad(coherent volatile in  int64_t, int, int, int);void atomicStore(coherent volatile out uint64_t, uint64_t, int, int, int);void atomicStore(coherent volatile out  int64_t,  int64_t, int, int, int);\n
int    mix(int    x, int    y, bool  a);ivec2  mix(ivec2  x, ivec2  y, bvec2 a);ivec3  mix(ivec3  x, ivec3  y, bvec3 a);ivec4  mix(ivec4  x, ivec4  y, bvec4 a);uint   mix(uint   x, uint   y, bool  a);uvec2  mix(uvec2  x, uvec2  y, bvec2 a);uvec3  mix(uvec3  x, uvec3  y, bvec3 a);uvec4  mix(uvec4  x, uvec4  y, bvec4 a);bool   mix(bool   x, bool   y, bool  a);bvec2  mix(bvec2  x, bvec2  y, bvec2 a);bvec3  mix(bvec3  x, bvec3  y, bvec3 a);bvec4  mix(bvec4  x, bvec4  y, bvec4 a);\n
int   floatBitsToInt(highp float value);ivec2 floatBitsToInt(highp vec2  value);ivec3 floatBitsToInt(highp vec3  value);ivec4 floatBitsToInt(highp vec4  value);uint  floatBitsToUint(highp float value);uvec2 floatBitsToUint(highp vec2  value);uvec3 floatBitsToUint(highp vec3  value);uvec4 floatBitsToUint(highp vec4  value);float intBitsToFloat(highp int   value);vec2  intBitsToFloat(highp ivec2 value);vec3  intBitsToFloat(highp ivec3 value);vec4  intBitsToFloat(highp ivec4 value);float uintBitsToFloat(highp uint  value);vec2  uintBitsToFloat(highp uvec2 value);vec3  uintBitsToFloat(highp uvec3 value);vec4  uintBitsToFloat(highp uvec4 value);\n
float  fma(float,  float,  float );vec2   fma(vec2,   vec2,   vec2  );vec3   fma(vec3,   vec3,   vec3  );vec4   fma(vec4,   vec4,   vec4  );\n
double fma(double, double, double);dvec2  fma(dvec2,  dvec2,  dvec2 );dvec3  fma(dvec3,  dvec3,  dvec3 );dvec4  fma(dvec4,  dvec4,  dvec4 );\n
float frexp(highp float, out highp int);vec2  frexp(highp vec2,  out highp ivec2);vec3  frexp(highp vec3,  out highp ivec3);vec4  frexp(highp vec4,  out highp ivec4);float ldexp(highp float, highp int);vec2  ldexp(highp vec2,  highp ivec2);vec3  ldexp(highp vec3,  highp ivec3);vec4  ldexp(highp vec4,  highp ivec4);\n
double frexp(double, out int);dvec2  frexp( dvec2, out ivec2);dvec3  frexp( dvec3, out ivec3);dvec4  frexp( dvec4, out ivec4);double ldexp(double, int);dvec2  ldexp( dvec2, ivec2);dvec3  ldexp( dvec3, ivec3);dvec4  ldexp( dvec4, ivec4);double packDouble2x32(uvec2);uvec2 unpackDouble2x32(double);\n
highp uint packUnorm2x16(vec2);vec2 unpackUnorm2x16(highp uint);\n
highp uint packSnorm2x16(vec2);      vec2 unpackSnorm2x16(highp uint);highp uint packHalf2x16(vec2);\n
mediump vec2 unpackHalf2x16(highp uint);\n
        vec2 unpackHalf2x16(highp uint);\n
highp uint packSnorm4x8(vec4);highp uint packUnorm4x8(vec4);\n
mediump vec4 unpackSnorm4x8(highp uint);mediump vec4 unpackUnorm4x8(highp uint);\n
vec4 unpackSnorm4x8(highp uint);vec4 unpackUnorm4x8(highp uint);\n
float length(float x);float length(vec2  x);float length(vec3  x);float length(vec4  x);float distance(float p0, float p1);float distance(vec2  p0, vec2  p1);float distance(vec3  p0, vec3  p1);float distance(vec4  p0, vec4  p1);float dot(float x, float y);float dot(vec2  x, vec2  y);float dot(vec3  x, vec3  y);float dot(vec4  x, vec4  y);vec3 cross(vec3 x, vec3 y);float normalize(float x);vec2  normalize(vec2  x);vec3  normalize(vec3  x);vec4  normalize(vec4  x);float faceforward(float N, float I, float Nref);vec2  faceforward(vec2  N, vec2  I, vec2  Nref);vec3  faceforward(vec3  N, vec3  I, vec3  Nref);vec4  faceforward(vec4  N, vec4  I, vec4  Nref);float reflect(float I, float N);vec2  reflect(vec2  I, vec2  N);vec3  reflect(vec3  I, vec3  N);vec4  reflect(vec4  I, vec4  N);float refract(float I, float N, float eta);vec2  refract(vec2  I, vec2  N, float eta);vec3  refract(vec3  I, vec3  N, float eta);vec4  refract(vec4  I, vec4  N, float eta);\n
mat2 matrixCompMult(mat2 x, mat2 y);mat3 matrixCompMult(mat3 x, mat3 y);mat4 matrixCompMult(mat4 x, mat4 y);\n
mat2   outerProduct(vec2 c, vec2 r);mat3   outerProduct(vec3 c, vec3 r);mat4   outerProduct(vec4 c, vec4 r);mat2x3 outerProduct(vec3 c, vec2 r);mat3x2 outerProduct(vec2 c, vec3 r);mat2x4 outerProduct(vec4 c, vec2 r);mat4x2 outerProduct(vec2 c, vec4 r);mat3x4 outerProduct(vec4 c, vec3 r);mat4x3 outerProduct(vec3 c, vec4 r);mat2   transpose(mat2   m);mat3   transpose(mat3   m);mat4   transpose(mat4   m);mat2x3 transpose(mat3x2 m);mat3x2 transpose(mat2x3 m);mat2x4 transpose(mat4x2 m);mat4x2 transpose(mat2x4 m);mat3x4 transpose(mat4x3 m);mat4x3 transpose(mat3x4 m);mat2x3 matrixCompMult(mat2x3, mat2x3);mat2x4 matrixCompMult(mat2x4, mat2x4);mat3x2 matrixCompMult(mat3x2, mat3x2);mat3x4 matrixCompMult(mat3x4, mat3x4);mat4x2 matrixCompMult(mat4x2, mat4x2);mat4x3 matrixCompMult(mat4x3, mat4x3);\n
float determinant(mat2 m);float determinant(mat3 m);float determinant(mat4 m);mat2 inverse(mat2 m);mat3 inverse(mat3 m);mat4 inverse(mat4 m);\n
bvec2 lessThan(vec2 x, vec2 y);bvec3 lessThan(vec3 x, vec3 y);bvec4 lessThan(vec4 x, vec4 y);bvec2 lessThan(ivec2 x, ivec2 y);bvec3 lessThan(ivec3 x, ivec3 y);bvec4 lessThan(ivec4 x, ivec4 y);bvec2 lessThanEqual(vec2 x, vec2 y);bvec3 lessThanEqual(vec3 x, vec3 y);bvec4 lessThanEqual(vec4 x, vec4 y);bvec2 lessThanEqual(ivec2 x, ivec2 y);bvec3 lessThanEqual(ivec3 x, ivec3 y);bvec4 lessThanEqual(ivec4 x, ivec4 y);bvec2 greaterThan(vec2 x, vec2 y);bvec3 greaterThan(vec3 x, vec3 y);bvec4 greaterThan(vec4 x, vec4 y);bvec2 greaterThan(ivec2 x, ivec2 y);bvec3 greaterThan(ivec3 x, ivec3 y);bvec4 greaterThan(ivec4 x, ivec4 y);bvec2 greaterThanEqual(vec2 x, vec2 y);bvec3 greaterThanEqual(vec3 x, vec3 y);bvec4 greaterThanEqual(vec4 x, vec4 y);bvec2 greaterThanEqual(ivec2 x, ivec2 y);bvec3 greaterThanEqual(ivec3 x, ivec3 y);bvec4 greaterThanEqual(ivec4 x, ivec4 y);bvec2 equal(vec2 x, vec2 y);bvec3 equal(vec3 x, vec3 y);bvec4 equal(vec4 x, vec4 y);bvec2 equal(ivec2 x, ivec2 y);bvec3 equal(ivec3 x, ivec3 y);bvec4 equal(ivec4 x, ivec4 y);bvec2 equal(bvec2 x, bvec2 y);bvec3 equal(bvec3 x, bvec3 y);bvec4 equal(bvec4 x, bvec4 y);bvec2 notEqual(vec2 x, vec2 y);bvec3 notEqual(vec3 x, vec3 y);bvec4 notEqual(vec4 x, vec4 y);bvec2 notEqual(ivec2 x, ivec2 y);bvec3 notEqual(ivec3 x, ivec3 y);bvec4 notEqual(ivec4 x, ivec4 y);bvec2 notEqual(bvec2 x, bvec2 y);bvec3 notEqual(bvec3 x, bvec3 y);bvec4 notEqual(bvec4 x, bvec4 y);bool any(bvec2 x);bool any(bvec3 x);bool any(bvec4 x);bool all(bvec2 x);bool all(bvec3 x);bool all(bvec4 x);bvec2 not(bvec2 x);bvec3 not(bvec3 x);bvec4 not(bvec4 x);\n
bvec2 lessThan(uvec2 x, uvec2 y);bvec3 lessThan(uvec3 x, uvec3 y);bvec4 lessThan(uvec4 x, uvec4 y);bvec2 lessThanEqual(uvec2 x, uvec2 y);bvec3 lessThanEqual(uvec3 x, uvec3 y);bvec4 lessThanEqual(uvec4 x, uvec4 y);bvec2 greaterThan(uvec2 x, uvec2 y);bvec3 greaterThan(uvec3 x, uvec3 y);bvec4 greaterThan(uvec4 x, uvec4 y);bvec2 greaterThanEqual(uvec2 x, uvec2 y);bvec3 greaterThanEqual(uvec3 x, uvec3 y);bvec4 greaterThanEqual(uvec4 x, uvec4 y);bvec2 equal(uvec2 x, uvec2 y);bvec3 equal(uvec3 x, uvec3 y);bvec4 equal(uvec4 x, uvec4 y);bvec2 notEqual(uvec2 x, uvec2 y);bvec3 notEqual(uvec3 x, uvec3 y);bvec4 notEqual(uvec4 x, uvec4 y);\n
vec4 texture2D(sampler2D, vec2);vec4 texture2DProj(sampler2D, vec3);vec4 texture2DProj(sampler2D, vec4);vec4 texture3D(sampler3D, vec3);vec4 texture3DProj(sampler3D, vec4);vec4 textureCube(samplerCube, vec3);\n
vec4 texture1D(sampler1D, float);vec4 texture1DProj(sampler1D, vec2);vec4 texture1DProj(sampler1D, vec4);vec4 shadow1D(sampler1DShadow, vec3);vec4 shadow2D(sampler2DShadow, vec3);vec4 shadow1DProj(sampler1DShadow, vec4);vec4 shadow2DProj(sampler2DShadow, vec4);vec4 texture2DRect(sampler2DRect, vec2);vec4 texture2DRectProj(sampler2DRect, vec3);vec4 texture2DRectProj(sampler2DRect, vec4);vec4 shadow2DRect(sampler2DRectShadow, vec3);vec4 shadow2DRectProj(sampler2DRectShadow, vec4);\n
vec4 texture2D(samplerExternalOES, vec2 coord);vec4 texture2DProj(samplerExternalOES, vec3);vec4 texture2DProj(samplerExternalOES, vec4);\n
highp ivec2 textureSize(samplerExternalOES, int lod);vec4 texture(samplerExternalOES, vec2);vec4 texture(samplerExternalOES, vec2, float bias);vec4 textureProj(samplerExternalOES, vec3);vec4 textureProj(samplerExternalOES, vec3, float bias);vec4 textureProj(samplerExternalOES, vec4);vec4 textureProj(samplerExternalOES, vec4, float bias);vec4 texelFetch(samplerExternalOES, ivec2, int lod);\n
vec4 texture2DGradEXT(sampler2D, vec2, vec2, vec2);vec4 texture2DProjGradEXT(sampler2D, vec3, vec2, vec2);vec4 texture2DProjGradEXT(sampler2D, vec4, vec2, vec2);vec4 textureCubeGradEXT(samplerCube, vec3, vec3, vec3);float shadow2DEXT(sampler2DShadow, vec3);float shadow2DProjEXT(sampler2DShadow, vec4);\n
float noise1(float x);float noise1(vec2  x);float noise1(vec3  x);float noise1(vec4  x);vec2 noise2(float x);vec2 noise2(vec2  x);vec2 noise2(vec3  x);vec2 noise2(vec4  x);vec3 noise3(float x);vec3 noise3(vec2  x);vec3 noise3(vec3  x);vec3 noise3(vec4  x);vec4 noise4(float x);vec4 noise4(vec2  x);vec4 noise4(vec3  x);vec4 noise4(vec4  x);\n
uint atomicCounterIncrement(atomic_uint);uint atomicCounterDecrement(atomic_uint);uint atomicCounter(atomic_uint);\n
uint atomicCounterAdd(atomic_uint, uint);uint atomicCounterSubtract(atomic_uint, uint);uint atomicCounterMin(atomic_uint, uint);uint atomicCounterMax(atomic_uint, uint);uint atomicCounterAnd(atomic_uint, uint);uint atomicCounterOr(atomic_uint, uint);uint atomicCounterXor(atomic_uint, uint);uint atomicCounterExchange(atomic_uint, uint);uint atomicCounterCompSwap(atomic_uint, uint, uint);\n
  int bitfieldExtract(  int, int, int);ivec2 bitfieldExtract(ivec2, int, int);ivec3 bitfieldExtract(ivec3, int, int);ivec4 bitfieldExtract(ivec4, int, int); uint bitfieldExtract( uint, int, int);uvec2 bitfieldExtract(uvec2, int, int);uvec3 bitfieldExtract(uvec3, int, int);uvec4 bitfieldExtract(uvec4, int, int);  int bitfieldInsert(  int base,   int, int, int);ivec2 bitfieldInsert(ivec2 base, ivec2, int, int);ivec3 bitfieldInsert(ivec3 base, ivec3, int, int);ivec4 bitfieldInsert(ivec4 base, ivec4, int, int); uint bitfieldInsert( uint base,  uint, int, int);uvec2 bitfieldInsert(uvec2 base, uvec2, int, int);uvec3 bitfieldInsert(uvec3 base, uvec3, int, int);uvec4 bitfieldInsert(uvec4 base, uvec4, int, int);\n
  int findLSB(  int);ivec2 findLSB(ivec2);ivec3 findLSB(ivec3);ivec4 findLSB(ivec4);  int findLSB( uint);ivec2 findLSB(uvec2);ivec3 findLSB(uvec3);ivec4 findLSB(uvec4);\n
lowp   int findLSB(  int);lowp ivec2 findLSB(ivec2);lowp ivec3 findLSB(ivec3);lowp ivec4 findLSB(ivec4);lowp   int findLSB( uint);lowp ivec2 findLSB(uvec2);lowp ivec3 findLSB(uvec3);lowp ivec4 findLSB(uvec4);\n
  int bitCount(  int);ivec2 bitCount(ivec2);ivec3 bitCount(ivec3);ivec4 bitCount(ivec4);  int bitCount( uint);ivec2 bitCount(uvec2);ivec3 bitCount(uvec3);ivec4 bitCount(uvec4);  int findMSB(highp   int);ivec2 findMSB(highp ivec2);ivec3 findMSB(highp ivec3);ivec4 findMSB(highp ivec4);  int findMSB(highp  uint);ivec2 findMSB(highp uvec2);ivec3 findMSB(highp uvec3);ivec4 findMSB(highp uvec4);\n
 uint uaddCarry(highp  uint, highp  uint, out lowp  uint carry);uvec2 uaddCarry(highp uvec2, highp uvec2, out lowp uvec2 carry);uvec3 uaddCarry(highp uvec3, highp uvec3, out lowp uvec3 carry);uvec4 uaddCarry(highp uvec4, highp uvec4, out lowp uvec4 carry); uint usubBorrow(highp  uint, highp  uint, out lowp  uint borrow);uvec2 usubBorrow(highp uvec2, highp uvec2, out lowp uvec2 borrow);uvec3 usubBorrow(highp uvec3, highp uvec3, out lowp uvec3 borrow);uvec4 usubBorrow(highp uvec4, highp uvec4, out lowp uvec4 borrow);void umulExtended(highp  uint, highp  uint, out highp  uint, out highp  uint lsb);void umulExtended(highp uvec2, highp uvec2, out highp uvec2, out highp uvec2 lsb);void umulExtended(highp uvec3, highp uvec3, out highp uvec3, out highp uvec3 lsb);void umulExtended(highp uvec4, highp uvec4, out highp uvec4, out highp uvec4 lsb);void imulExtended(highp   int, highp   int, out highp   int, out highp   int lsb);void imulExtended(highp ivec2, highp ivec2, out highp ivec2, out highp ivec2 lsb);void imulExtended(highp ivec3, highp ivec3, out highp ivec3, out highp ivec3 lsb);void imulExtended(highp ivec4, highp ivec4, out highp ivec4, out highp ivec4 lsb);  int bitfieldReverse(highp   int);ivec2 bitfieldReverse(highp ivec2);ivec3 bitfieldReverse(highp ivec3);ivec4 bitfieldReverse(highp ivec4); uint bitfieldReverse(highp  uint);uvec2 bitfieldReverse(highp uvec2);uvec3 bitfieldReverse(highp uvec3);uvec4 bitfieldReverse(highp uvec4);\n
lowp   int bitCount(  int);lowp ivec2 bitCount(ivec2);lowp ivec3 bitCount(ivec3);lowp ivec4 bitCount(ivec4);lowp   int bitCount( uint);lowp ivec2 bitCount(uvec2);lowp ivec3 bitCount(uvec3);lowp ivec4 bitCount(uvec4);lowp   int findMSB(highp   int);lowp ivec2 findMSB(highp ivec2);lowp ivec3 findMSB(highp ivec3);lowp ivec4 findMSB(highp ivec4);lowp   int findMSB(highp  uint);lowp ivec2 findMSB(highp uvec2);lowp ivec3 findMSB(highp uvec3);lowp ivec4 findMSB(highp uvec4);\n
uint64_t ballotARB(bool);float readInvocationARB(float, uint);vec2  readInvocationARB(vec2,  uint);vec3  readInvocationARB(vec3,  uint);vec4  readInvocationARB(vec4,  uint);int   readInvocationARB(int,   uint);ivec2 readInvocationARB(ivec2, uint);ivec3 readInvocationARB(ivec3, uint);ivec4 readInvocationARB(ivec4, uint);uint  readInvocationARB(uint,  uint);uvec2 readInvocationARB(uvec2, uint);uvec3 readInvocationARB(uvec3, uint);uvec4 readInvocationARB(uvec4, uint);float readFirstInvocationARB(float);vec2  readFirstInvocationARB(vec2);vec3  readFirstInvocationARB(vec3);vec4  readFirstInvocationARB(vec4);int   readFirstInvocationARB(int);ivec2 readFirstInvocationARB(ivec2);ivec3 readFirstInvocationARB(ivec3);ivec4 readFirstInvocationARB(ivec4);uint  readFirstInvocationARB(uint);uvec2 readFirstInvocationARB(uvec2);uvec3 readFirstInvocationARB(uvec3);uvec4 readFirstInvocationARB(uvec4);\n
bool anyInvocationARB(bool);bool allInvocationsARB(bool);bool allInvocationsEqualARB(bool);\n
void subgroupBarrier();void subgroupMemoryBarrier();void subgroupMemoryBarrierBuffer();void subgroupMemoryBarrierImage();bool subgroupElect();bool   subgroupAll(bool);\nbool   subgroupAny(bool);\nbool   subgroupAllEqual(float);\nbool   subgroupAllEqual(vec2);\nbool   subgroupAllEqual(vec3);\nbool   subgroupAllEqual(vec4);\nbool   subgroupAllEqual(int);\nbool   subgroupAllEqual(ivec2);\nbool   subgroupAllEqual(ivec3);\nbool   subgroupAllEqual(ivec4);\nbool   subgroupAllEqual(uint);\nbool   subgroupAllEqual(uvec2);\nbool   subgroupAllEqual(uvec3);\nbool   subgroupAllEqual(uvec4);\nbool   subgroupAllEqual(bool);\nbool   subgroupAllEqual(bvec2);\nbool   subgroupAllEqual(bvec3);\nbool   subgroupAllEqual(bvec4);\nfloat  subgroupBroadcast(float, uint);\nvec2   subgroupBroadcast(vec2, uint);\nvec3   subgroupBroadcast(vec3, uint);\nvec4   subgroupBroadcast(vec4, uint);\nint    subgroupBroadcast(int, uint);\nivec2  subgroupBroadcast(ivec2, uint);\nivec3  subgroupBroadcast(ivec3, uint);\nivec4  subgroupBroadcast(ivec4, uint);\nuint   subgroupBroadcast(uint, uint);\nuvec2  subgroupBroadcast(uvec2, uint);\nuvec3  subgroupBroadcast(uvec3, uint);\nuvec4  subgroupBroadcast(uvec4, uint);\nbool   subgroupBroadcast(bool, uint);\nbvec2  subgroupBroadcast(bvec2, uint);\nbvec3  subgroupBroadcast(bvec3, uint);\nbvec4  subgroupBroadcast(bvec4, uint);\nfloat  subgroupBroadcastFirst(float);\nvec2   subgroupBroadcastFirst(vec2);\nvec3   subgroupBroadcastFirst(vec3);\nvec4   subgroupBroadcastFirst(vec4);\nint    subgroupBroadcastFirst(int);\nivec2  subgroupBroadcastFirst(ivec2);\nivec3  subgroupBroadcastFirst(ivec3);\nivec4  subgroupBroadcastFirst(ivec4);\nuint   subgroupBroadcastFirst(uint);\nuvec2  subgroupBroadcastFirst(uvec2);\nuvec3  subgroupBroadcastFirst(uvec3);\nuvec4  subgroupBroadcastFirst(uvec4);\nbool   subgroupBroadcastFirst(bool);\nbvec2  subgroupBroadcastFirst(bvec2);\nbvec3  subgroupBroadcastFirst(bvec3);\nbvec4  subgroupBroadcastFirst(bvec4);\nuvec4  subgroupBallot(bool);\nbool   subgroupInverseBallot(uvec4);\nbool   subgroupBallotBitExtract(uvec4, uint);\nuint   subgroupBallotBitCount(uvec4);\nuint   subgroupBallotInclusiveBitCount(uvec4);\nuint   subgroupBallotExclusiveBitCount(uvec4);\nuint   subgroupBallotFindLSB(uvec4);\nuint   subgroupBallotFindMSB(uvec4);\nfloat  subgroupShuffle(float, uint);\nvec2   subgroupShuffle(vec2, uint);\nvec3   subgroupShuffle(vec3, uint);\nvec4   subgroupShuffle(vec4, uint);\nint    subgroupShuffle(int, uint);\nivec2  subgroupShuffle(ivec2, uint);\nivec3  subgroupShuffle(ivec3, uint);\nivec4  subgroupShuffle(ivec4, uint);\nuint   subgroupShuffle(uint, uint);\nuvec2  subgroupShuffle(uvec2, uint);\nuvec3  subgroupShuffle(uvec3, uint);\nuvec4  subgroupShuffle(uvec4, uint);\nbool   subgroupShuffle(bool, uint);\nbvec2  subgroupShuffle(bvec2, uint);\nbvec3  subgroupShuffle(bvec3, uint);\nbvec4  subgroupShuffle(bvec4, uint);\nfloat  subgroupShuffleXor(float, uint);\nvec2   subgroupShuffleXor(vec2, uint);\nvec3   subgroupShuffleXor(vec3, uint);\nvec4   subgroupShuffleXor(vec4, uint);\nint    subgroupShuffleXor(int, uint);\nivec2  subgroupShuffleXor(ivec2, uint);\nivec3  subgroupShuffleXor(ivec3, uint);\nivec4  subgroupShuffleXor(ivec4, uint);\nuint   subgroupShuffleXor(uint, uint);\nuvec2  subgroupShuffleXor(uvec2, uint);\nuvec3  subgroupShuffleXor(uvec3, uint);\nuvec4  subgroupShuffleXor(uvec4, uint);\nbool   subgroupShuffleXor(bool, uint);\nbvec2  subgroupShuffleXor(bvec2, uint);\nbvec3  subgroupShuffleXor(bvec3, uint);\nbvec4  subgroupShuffleXor(bvec4, uint);\nfloat  subgroupShuffleUp(float, uint delta);\nvec2   subgroupShuffleUp(vec2, uint delta);\nvec3   subgroupShuffleUp(vec3, uint delta);\nvec4   subgroupShuffleUp(vec4, uint delta);\nint    subgroupShuffleUp(int, uint delta);\nivec2  subgroupShuffleUp(ivec2, uint delta);\nivec3  subgroupShuffleUp(ivec3, uint delta);\nivec4  subgroupShuffleUp(ivec4, uint delta);\nuint   subgroupShuffleUp(uint, uint delta);\nuvec2  subgroupShuffleUp(uvec2, uint delta);\nuvec3  subgroupShuffleUp(uvec3, uint delta);\nuvec4  subgroupShuffleUp(uvec4, uint delta);\nbool   subgroupShuffleUp(bool, uint delta);\nbvec2  subgroupShuffleUp(bvec2, uint delta);\nbvec3  subgroupShuffleUp(bvec3, uint delta);\nbvec4  subgroupShuffleUp(bvec4, uint delta);\nfloat  subgroupShuffleDown(float, uint delta);\nvec2   subgroupShuffleDown(vec2, uint delta);\nvec3   subgroupShuffleDown(vec3, uint delta);\nvec4   subgroupShuffleDown(vec4, uint delta);\nint    subgroupShuffleDown(int, uint delta);\nivec2  subgroupShuffleDown(ivec2, uint delta);\nivec3  subgroupShuffleDown(ivec3, uint delta);\nivec4  subgroupShuffleDown(ivec4, uint delta);\nuint   subgroupShuffleDown(uint, uint delta);\nuvec2  subgroupShuffleDown(uvec2, uint delta);\nuvec3  subgroupShuffleDown(uvec3, uint delta);\nuvec4  subgroupShuffleDown(uvec4, uint delta);\nbool   subgroupShuffleDown(bool, uint delta);\nbvec2  subgroupShuffleDown(bvec2, uint delta);\nbvec3  subgroupShuffleDown(bvec3, uint delta);\nbvec4  subgroupShuffleDown(bvec4, uint delta);\nfloat  subgroupAdd(float);\nvec2   subgroupAdd(vec2);\nvec3   subgroupAdd(vec3);\nvec4   subgroupAdd(vec4);\nint    subgroupAdd(int);\nivec2  subgroupAdd(ivec2);\nivec3  subgroupAdd(ivec3);\nivec4  subgroupAdd(ivec4);\nuint   subgroupAdd(uint);\nuvec2  subgroupAdd(uvec2);\nuvec3  subgroupAdd(uvec3);\nuvec4  subgroupAdd(uvec4);\nfloat  subgroupMul(float);\nvec2   subgroupMul(vec2);\nvec3   subgroupMul(vec3);\nvec4   subgroupMul(vec4);\nint    subgroupMul(int);\nivec2  subgroupMul(ivec2);\nivec3  subgroupMul(ivec3);\nivec4  subgroupMul(ivec4);\nuint   subgroupMul(uint);\nuvec2  subgroupMul(uvec2);\nuvec3  subgroupMul(uvec3);\nuvec4  subgroupMul(uvec4);\nfloat  subgroupMin(float);\nvec2   subgroupMin(vec2);\nvec3   subgroupMin(vec3);\nvec4   subgroupMin(vec4);\nint    subgroupMin(int);\nivec2  subgroupMin(ivec2);\nivec3  subgroupMin(ivec3);\nivec4  subgroupMin(ivec4);\nuint   subgroupMin(uint);\nuvec2  subgroupMin(uvec2);\nuvec3  subgroupMin(uvec3);\nuvec4  subgroupMin(uvec4);\nfloat  subgroupMax(float);\nvec2   subgroupMax(vec2);\nvec3   subgroupMax(vec3);\nvec4   subgroupMax(vec4);\nint    subgroupMax(int);\nivec2  subgroupMax(ivec2);\nivec3  subgroupMax(ivec3);\nivec4  subgroupMax(ivec4);\nuint   subgroupMax(uint);\nuvec2  subgroupMax(uvec2);\nuvec3  subgroupMax(uvec3);\nuvec4  subgroupMax(uvec4);\nint    subgroupAnd(int);\nivec2  subgroupAnd(ivec2);\nivec3  subgroupAnd(ivec3);\nivec4  subgroupAnd(ivec4);\nuint   subgroupAnd(uint);\nuvec2  subgroupAnd(uvec2);\nuvec3  subgroupAnd(uvec3);\nuvec4  subgroupAnd(uvec4);\nbool   subgroupAnd(bool);\nbvec2  subgroupAnd(bvec2);\nbvec3  subgroupAnd(bvec3);\nbvec4  subgroupAnd(bvec4);\nint    subgroupOr(int);\nivec2  subgroupOr(ivec2);\nivec3  subgroupOr(ivec3);\nivec4  subgroupOr(ivec4);\nuint   subgroupOr(uint);\nuvec2  subgroupOr(uvec2);\nuvec3  subgroupOr(uvec3);\nuvec4  subgroupOr(uvec4);\nbool   subgroupOr(bool);\nbvec2  subgroupOr(bvec2);\nbvec3  subgroupOr(bvec3);\nbvec4  subgroupOr(bvec4);\nint    subgroupXor(int);\nivec2  subgroupXor(ivec2);\nivec3  subgroupXor(ivec3);\nivec4  subgroupXor(ivec4);\nuint   subgroupXor(uint);\nuvec2  subgroupXor(uvec2);\nuvec3  subgroupXor(uvec3);\nuvec4  subgroupXor(uvec4);\nbool   subgroupXor(bool);\nbvec2  subgroupXor(bvec2);\nbvec3  subgroupXor(bvec3);\nbvec4  subgroupXor(bvec4);\nfloat  subgroupInclusiveAdd(float);\nvec2   subgroupInclusiveAdd(vec2);\nvec3   subgroupInclusiveAdd(vec3);\nvec4   subgroupInclusiveAdd(vec4);\nint    subgroupInclusiveAdd(int);\nivec2  subgroupInclusiveAdd(ivec2);\nivec3  subgroupInclusiveAdd(ivec3);\nivec4  subgroupInclusiveAdd(ivec4);\nuint   subgroupInclusiveAdd(uint);\nuvec2  subgroupInclusiveAdd(uvec2);\nuvec3  subgroupInclusiveAdd(uvec3);\nuvec4  subgroupInclusiveAdd(uvec4);\nfloat  subgroupInclusiveMul(float);\nvec2   subgroupInclusiveMul(vec2);\nvec3   subgroupInclusiveMul(vec3);\nvec4   subgroupInclusiveMul(vec4);\nint    subgroupInclusiveMul(int);\nivec2  subgroupInclusiveMul(ivec2);\nivec3  subgroupInclusiveMul(ivec3);\nivec4  subgroupInclusiveMul(ivec4);\nuint   subgroupInclusiveMul(uint);\nuvec2  subgroupInclusiveMul(uvec2);\nuvec3  subgroupInclusiveMul(uvec3);\nuvec4  subgroupInclusiveMul(uvec4);\nfloat  subgroupInclusiveMin(float);\nvec2   subgroupInclusiveMin(vec2);\nvec3   subgroupInclusiveMin(vec3);\nvec4   subgroupInclusiveMin(vec4);\nint    subgroupInclusiveMin(int);\nivec2  subgroupInclusiveMin(ivec2);\nivec3  subgroupInclusiveMin(ivec3);\nivec4  subgroupInclusiveMin(ivec4);\nuint   subgroupInclusiveMin(uint);\nuvec2  subgroupInclusiveMin(uvec2);\nuvec3  subgroupInclusiveMin(uvec3);\nuvec4  subgroupInclusiveMin(uvec4);\nfloat  subgroupInclusiveMax(float);\nvec2   subgroupInclusiveMax(vec2);\nvec3   subgroupInclusiveMax(vec3);\nvec4   subgroupInclusiveMax(vec4);\nint    subgroupInclusiveMax(int);\nivec2  subgroupInclusiveMax(ivec2);\nivec3  subgroupInclusiveMax(ivec3);\nivec4  subgroupInclusiveMax(ivec4);\nuint   subgroupInclusiveMax(uint);\nuvec2  subgroupInclusiveMax(uvec2);\nuvec3  subgroupInclusiveMax(uvec3);\nuvec4  subgroupInclusiveMax(uvec4);\nint    subgroupInclusiveAnd(int);\nivec2  subgroupInclusiveAnd(ivec2);\nivec3  subgroupInclusiveAnd(ivec3);\nivec4  subgroupInclusiveAnd(ivec4);\nuint   subgroupInclusiveAnd(uint);\nuvec2  subgroupInclusiveAnd(uvec2);\nuvec3  subgroupInclusiveAnd(uvec3);\nuvec4  subgroupInclusiveAnd(uvec4);\nbool   subgroupInclusiveAnd(bool);\nbvec2  subgroupInclusiveAnd(bvec2);\nbvec3  subgroupInclusiveAnd(bvec3);\nbvec4  subgroupInclusiveAnd(bvec4);\nint    subgroupInclusiveOr(int);\nivec2  subgroupInclusiveOr(ivec2);\nivec3  subgroupInclusiveOr(ivec3);\nivec4  subgroupInclusiveOr(ivec4);\nuint   subgroupInclusiveOr(uint);\nuvec2  subgroupInclusiveOr(uvec2);\nuvec3  subgroupInclusiveOr(uvec3);\nuvec4  subgroupInclusiveOr(uvec4);\nbool   subgroupInclusiveOr(bool);\nbvec2  subgroupInclusiveOr(bvec2);\nbvec3  subgroupInclusiveOr(bvec3);\nbvec4  subgroupInclusiveOr(bvec4);\nint    subgroupInclusiveXor(int);\nivec2  subgroupInclusiveXor(ivec2);\nivec3  subgroupInclusiveXor(ivec3);\nivec4  subgroupInclusiveXor(ivec4);\nuint   subgroupInclusiveXor(uint);\nuvec2  subgroupInclusiveXor(uvec2);\nuvec3  subgroupInclusiveXor(uvec3);\nuvec4  subgroupInclusiveXor(uvec4);\nbool   subgroupInclusiveXor(bool);\nbvec2  subgroupInclusiveXor(bvec2);\nbvec3  subgroupInclusiveXor(bvec3);\nbvec4  subgroupInclusiveXor(bvec4);\nfloat  subgroupExclusiveAdd(float);\nvec2   subgroupExclusiveAdd(vec2);\nvec3   subgroupExclusiveAdd(vec3);\nvec4   subgroupExclusiveAdd(vec4);\nint    subgroupExclusiveAdd(int);\nivec2  subgroupExclusiveAdd(ivec2);\nivec3  subgroupExclusiveAdd(ivec3);\nivec4  subgroupExclusiveAdd(ivec4);\nuint   subgroupExclusiveAdd(uint);\nuvec2  subgroupExclusiveAdd(uvec2);\nuvec3  subgroupExclusiveAdd(uvec3);\nuvec4  subgroupExclusiveAdd(uvec4);\nfloat  subgroupExclusiveMul(float);\nvec2   subgroupExclusiveMul(vec2);\nvec3   subgroupExclusiveMul(vec3);\nvec4   subgroupExclusiveMul(vec4);\nint    subgroupExclusiveMul(int);\nivec2  subgroupExclusiveMul(ivec2);\nivec3  subgroupExclusiveMul(ivec3);\nivec4  subgroupExclusiveMul(ivec4);\nuint   subgroupExclusiveMul(uint);\nuvec2  subgroupExclusiveMul(uvec2);\nuvec3  subgroupExclusiveMul(uvec3);\nuvec4  subgroupExclusiveMul(uvec4);\nfloat  subgroupExclusiveMin(float);\nvec2   subgroupExclusiveMin(vec2);\nvec3   subgroupExclusiveMin(vec3);\nvec4   subgroupExclusiveMin(vec4);\nint    subgroupExclusiveMin(int);\nivec2  subgroupExclusiveMin(ivec2);\nivec3  subgroupExclusiveMin(ivec3);\nivec4  subgroupExclusiveMin(ivec4);\nuint   subgroupExclusiveMin(uint);\nuvec2  subgroupExclusiveMin(uvec2);\nuvec3  subgroupExclusiveMin(uvec3);\nuvec4  subgroupExclusiveMin(uvec4);\nfloat  subgroupExclusiveMax(float);\nvec2   subgroupExclusiveMax(vec2);\nvec3   subgroupExclusiveMax(vec3);\nvec4   subgroupExclusiveMax(vec4);\nint    subgroupExclusiveMax(int);\nivec2  subgroupExclusiveMax(ivec2);\nivec3  subgroupExclusiveMax(ivec3);\nivec4  subgroupExclusiveMax(ivec4);\nuint   subgroupExclusiveMax(uint);\nuvec2  subgroupExclusiveMax(uvec2);\nuvec3  subgroupExclusiveMax(uvec3);\nuvec4  subgroupExclusiveMax(uvec4);\nint    subgroupExclusiveAnd(int);\nivec2  subgroupExclusiveAnd(ivec2);\nivec3  subgroupExclusiveAnd(ivec3);\nivec4  subgroupExclusiveAnd(ivec4);\nuint   subgroupExclusiveAnd(uint);\nuvec2  subgroupExclusiveAnd(uvec2);\nuvec3  subgroupExclusiveAnd(uvec3);\nuvec4  subgroupExclusiveAnd(uvec4);\nbool   subgroupExclusiveAnd(bool);\nbvec2  subgroupExclusiveAnd(bvec2);\nbvec3  subgroupExclusiveAnd(bvec3);\nbvec4  subgroupExclusiveAnd(bvec4);\nint    subgroupExclusiveOr(int);\nivec2  subgroupExclusiveOr(ivec2);\nivec3  subgroupExclusiveOr(ivec3);\nivec4  subgroupExclusiveOr(ivec4);\nuint   subgroupExclusiveOr(uint);\nuvec2  subgroupExclusiveOr(uvec2);\nuvec3  subgroupExclusiveOr(uvec3);\nuvec4  subgroupExclusiveOr(uvec4);\nbool   subgroupExclusiveOr(bool);\nbvec2  subgroupExclusiveOr(bvec2);\nbvec3  subgroupExclusiveOr(bvec3);\nbvec4  subgroupExclusiveOr(bvec4);\nint    subgroupExclusiveXor(int);\nivec2  subgroupExclusiveXor(ivec2);\nivec3  subgroupExclusiveXor(ivec3);\nivec4  subgroupExclusiveXor(ivec4);\nuint   subgroupExclusiveXor(uint);\nuvec2  subgroupExclusiveXor(uvec2);\nuvec3  subgroupExclusiveXor(uvec3);\nuvec4  subgroupExclusiveXor(uvec4);\nbool   subgroupExclusiveXor(bool);\nbvec2  subgroupExclusiveXor(bvec2);\nbvec3  subgroupExclusiveXor(bvec3);\nbvec4  subgroupExclusiveXor(bvec4);\nfloat  subgroupClusteredAdd(float, uint);\nvec2   subgroupClusteredAdd(vec2, uint);\nvec3   subgroupClusteredAdd(vec3, uint);\nvec4   subgroupClusteredAdd(vec4, uint);\nint    subgroupClusteredAdd(int, uint);\nivec2  subgroupClusteredAdd(ivec2, uint);\nivec3  subgroupClusteredAdd(ivec3, uint);\nivec4  subgroupClusteredAdd(ivec4, uint);\nuint   subgroupClusteredAdd(uint, uint);\nuvec2  subgroupClusteredAdd(uvec2, uint);\nuvec3  subgroupClusteredAdd(uvec3, uint);\nuvec4  subgroupClusteredAdd(uvec4, uint);\nfloat  subgroupClusteredMul(float, uint);\nvec2   subgroupClusteredMul(vec2, uint);\nvec3   subgroupClusteredMul(vec3, uint);\nvec4   subgroupClusteredMul(vec4, uint);\nint    subgroupClusteredMul(int, uint);\nivec2  subgroupClusteredMul(ivec2, uint);\nivec3  subgroupClusteredMul(ivec3, uint);\nivec4  subgroupClusteredMul(ivec4, uint);\nuint   subgroupClusteredMul(uint, uint);\nuvec2  subgroupClusteredMul(uvec2, uint);\nuvec3  subgroupClusteredMul(uvec3, uint);\nuvec4  subgroupClusteredMul(uvec4, uint);\nfloat  subgroupClusteredMin(float, uint);\nvec2   subgroupClusteredMin(vec2, uint);\nvec3   subgroupClusteredMin(vec3, uint);\nvec4   subgroupClusteredMin(vec4, uint);\nint    subgroupClusteredMin(int, uint);\nivec2  subgroupClusteredMin(ivec2, uint);\nivec3  subgroupClusteredMin(ivec3, uint);\nivec4  subgroupClusteredMin(ivec4, uint);\nuint   subgroupClusteredMin(uint, uint);\nuvec2  subgroupClusteredMin(uvec2, uint);\nuvec3  subgroupClusteredMin(uvec3, uint);\nuvec4  subgroupClusteredMin(uvec4, uint);\nfloat  subgroupClusteredMax(float, uint);\nvec2   subgroupClusteredMax(vec2, uint);\nvec3   subgroupClusteredMax(vec3, uint);\nvec4   subgroupClusteredMax(vec4, uint);\nint    subgroupClusteredMax(int, uint);\nivec2  subgroupClusteredMax(ivec2, uint);\nivec3  subgroupClusteredMax(ivec3, uint);\nivec4  subgroupClusteredMax(ivec4, uint);\nuint   subgroupClusteredMax(uint, uint);\nuvec2  subgroupClusteredMax(uvec2, uint);\nuvec3  subgroupClusteredMax(uvec3, uint);\nuvec4  subgroupClusteredMax(uvec4, uint);\nint    subgroupClusteredAnd(int, uint);\nivec2  subgroupClusteredAnd(ivec2, uint);\nivec3  subgroupClusteredAnd(ivec3, uint);\nivec4  subgroupClusteredAnd(ivec4, uint);\nuint   subgroupClusteredAnd(uint, uint);\nuvec2  subgroupClusteredAnd(uvec2, uint);\nuvec3  subgroupClusteredAnd(uvec3, uint);\nuvec4  subgroupClusteredAnd(uvec4, uint);\nbool   subgroupClusteredAnd(bool, uint);\nbvec2  subgroupClusteredAnd(bvec2, uint);\nbvec3  subgroupClusteredAnd(bvec3, uint);\nbvec4  subgroupClusteredAnd(bvec4, uint);\nint    subgroupClusteredOr(int, uint);\nivec2  subgroupClusteredOr(ivec2, uint);\nivec3  subgroupClusteredOr(ivec3, uint);\nivec4  subgroupClusteredOr(ivec4, uint);\nuint   subgroupClusteredOr(uint, uint);\nuvec2  subgroupClusteredOr(uvec2, uint);\nuvec3  subgroupClusteredOr(uvec3, uint);\nuvec4  subgroupClusteredOr(uvec4, uint);\nbool   subgroupClusteredOr(bool, uint);\nbvec2  subgroupClusteredOr(bvec2, uint);\nbvec3  subgroupClusteredOr(bvec3, uint);\nbvec4  subgroupClusteredOr(bvec4, uint);\nint    subgroupClusteredXor(int, uint);\nivec2  subgroupClusteredXor(ivec2, uint);\nivec3  subgroupClusteredXor(ivec3, uint);\nivec4  subgroupClusteredXor(ivec4, uint);\nuint   subgroupClusteredXor(uint, uint);\nuvec2  subgroupClusteredXor(uvec2, uint);\nuvec3  subgroupClusteredXor(uvec3, uint);\nuvec4  subgroupClusteredXor(uvec4, uint);\nbool   subgroupClusteredXor(bool, uint);\nbvec2  subgroupClusteredXor(bvec2, uint);\nbvec3  subgroupClusteredXor(bvec3, uint);\nbvec4  subgroupClusteredXor(bvec4, uint);\nfloat  subgroupQuadBroadcast(float, uint);\nvec2   subgroupQuadBroadcast(vec2, uint);\nvec3   subgroupQuadBroadcast(vec3, uint);\nvec4   subgroupQuadBroadcast(vec4, uint);\nint    subgroupQuadBroadcast(int, uint);\nivec2  subgroupQuadBroadcast(ivec2, uint);\nivec3  subgroupQuadBroadcast(ivec3, uint);\nivec4  subgroupQuadBroadcast(ivec4, uint);\nuint   subgroupQuadBroadcast(uint, uint);\nuvec2  subgroupQuadBroadcast(uvec2, uint);\nuvec3  subgroupQuadBroadcast(uvec3, uint);\nuvec4  subgroupQuadBroadcast(uvec4, uint);\nbool   subgroupQuadBroadcast(bool, uint);\nbvec2  subgroupQuadBroadcast(bvec2, uint);\nbvec3  subgroupQuadBroadcast(bvec3, uint);\nbvec4  subgroupQuadBroadcast(bvec4, uint);\nfloat  subgroupQuadSwapHorizontal(float);\nvec2   subgroupQuadSwapHorizontal(vec2);\nvec3   subgroupQuadSwapHorizontal(vec3);\nvec4   subgroupQuadSwapHorizontal(vec4);\nint    subgroupQuadSwapHorizontal(int);\nivec2  subgroupQuadSwapHorizontal(ivec2);\nivec3  subgroupQuadSwapHorizontal(ivec3);\nivec4  subgroupQuadSwapHorizontal(ivec4);\nuint   subgroupQuadSwapHorizontal(uint);\nuvec2  subgroupQuadSwapHorizontal(uvec2);\nuvec3  subgroupQuadSwapHorizontal(uvec3);\nuvec4  subgroupQuadSwapHorizontal(uvec4);\nbool   subgroupQuadSwapHorizontal(bool);\nbvec2  subgroupQuadSwapHorizontal(bvec2);\nbvec3  subgroupQuadSwapHorizontal(bvec3);\nbvec4  subgroupQuadSwapHorizontal(bvec4);\nfloat  subgroupQuadSwapVertical(float);\nvec2   subgroupQuadSwapVertical(vec2);\nvec3   subgroupQuadSwapVertical(vec3);\nvec4   subgroupQuadSwapVertical(vec4);\nint    subgroupQuadSwapVertical(int);\nivec2  subgroupQuadSwapVertical(ivec2);\nivec3  subgroupQuadSwapVertical(ivec3);\nivec4  subgroupQuadSwapVertical(ivec4);\nuint   subgroupQuadSwapVertical(uint);\nuvec2  subgroupQuadSwapVertical(uvec2);\nuvec3  subgroupQuadSwapVertical(uvec3);\nuvec4  subgroupQuadSwapVertical(uvec4);\nbool   subgroupQuadSwapVertical(bool);\nbvec2  subgroupQuadSwapVertical(bvec2);\nbvec3  subgroupQuadSwapVertical(bvec3);\nbvec4  subgroupQuadSwapVertical(bvec4);\nfloat  subgroupQuadSwapDiagonal(float);\nvec2   subgroupQuadSwapDiagonal(vec2);\nvec3   subgroupQuadSwapDiagonal(vec3);\nvec4   subgroupQuadSwapDiagonal(vec4);\nint    subgroupQuadSwapDiagonal(int);\nivec2  subgroupQuadSwapDiagonal(ivec2);\nivec3  subgroupQuadSwapDiagonal(ivec3);\nivec4  subgroupQuadSwapDiagonal(ivec4);\nuint   subgroupQuadSwapDiagonal(uint);\nuvec2  subgroupQuadSwapDiagonal(uvec2);\nuvec3  subgroupQuadSwapDiagonal(uvec3);\nuvec4  subgroupQuadSwapDiagonal(uvec4);\nbool   subgroupQuadSwapDiagonal(bool);\nbvec2  subgroupQuadSwapDiagonal(bvec2);\nbvec3  subgroupQuadSwapDiagonal(bvec3);\nbvec4  subgroupQuadSwapDiagonal(bvec4);\n\n
bool   subgroupAllEqual(double);\nbool   subgroupAllEqual(dvec2);\nbool   subgroupAllEqual(dvec3);\nbool   subgroupAllEqual(dvec4);\ndouble subgroupBroadcast(double, uint);\ndvec2  subgroupBroadcast(dvec2, uint);\ndvec3  subgroupBroadcast(dvec3, uint);\ndvec4  subgroupBroadcast(dvec4, uint);\ndouble subgroupBroadcastFirst(double);\ndvec2  subgroupBroadcastFirst(dvec2);\ndvec3  subgroupBroadcastFirst(dvec3);\ndvec4  subgroupBroadcastFirst(dvec4);\ndouble subgroupShuffle(double, uint);\ndvec2  subgroupShuffle(dvec2, uint);\ndvec3  subgroupShuffle(dvec3, uint);\ndvec4  subgroupShuffle(dvec4, uint);\ndouble subgroupShuffleXor(double, uint);\ndvec2  subgroupShuffleXor(dvec2, uint);\ndvec3  subgroupShuffleXor(dvec3, uint);\ndvec4  subgroupShuffleXor(dvec4, uint);\ndouble subgroupShuffleUp(double, uint delta);\ndvec2  subgroupShuffleUp(dvec2, uint delta);\ndvec3  subgroupShuffleUp(dvec3, uint delta);\ndvec4  subgroupShuffleUp(dvec4, uint delta);\ndouble subgroupShuffleDown(double, uint delta);\ndvec2  subgroupShuffleDown(dvec2, uint delta);\ndvec3  subgroupShuffleDown(dvec3, uint delta);\ndvec4  subgroupShuffleDown(dvec4, uint delta);\ndouble subgroupAdd(double);\ndvec2  subgroupAdd(dvec2);\ndvec3  subgroupAdd(dvec3);\ndvec4  subgroupAdd(dvec4);\ndouble subgroupMul(double);\ndvec2  subgroupMul(dvec2);\ndvec3  subgroupMul(dvec3);\ndvec4  subgroupMul(dvec4);\ndouble subgroupMin(double);\ndvec2  subgroupMin(dvec2);\ndvec3  subgroupMin(dvec3);\ndvec4  subgroupMin(dvec4);\ndouble subgroupMax(double);\ndvec2  subgroupMax(dvec2);\ndvec3  subgroupMax(dvec3);\ndvec4  subgroupMax(dvec4);\ndouble subgroupInclusiveAdd(double);\ndvec2  subgroupInclusiveAdd(dvec2);\ndvec3  subgroupInclusiveAdd(dvec3);\ndvec4  subgroupInclusiveAdd(dvec4);\ndouble subgroupInclusiveMul(double);\ndvec2  subgroupInclusiveMul(dvec2);\ndvec3  subgroupInclusiveMul(dvec3);\ndvec4  subgroupInclusiveMul(dvec4);\ndouble subgroupInclusiveMin(double);\ndvec2  subgroupInclusiveMin(dvec2);\ndvec3  subgroupInclusiveMin(dvec3);\ndvec4  subgroupInclusiveMin(dvec4);\ndouble subgroupInclusiveMax(double);\ndvec2  subgroupInclusiveMax(dvec2);\ndvec3  subgroupInclusiveMax(dvec3);\ndvec4  subgroupInclusiveMax(dvec4);\ndouble subgroupExclusiveAdd(double);\ndvec2  subgroupExclusiveAdd(dvec2);\ndvec3  subgroupExclusiveAdd(dvec3);\ndvec4  subgroupExclusiveAdd(dvec4);\ndouble subgroupExclusiveMul(double);\ndvec2  subgroupExclusiveMul(dvec2);\ndvec3  subgroupExclusiveMul(dvec3);\ndvec4  subgroupExclusiveMul(dvec4);\ndouble subgroupExclusiveMin(double);\ndvec2  subgroupExclusiveMin(dvec2);\ndvec3  subgroupExclusiveMin(dvec3);\ndvec4  subgroupExclusiveMin(dvec4);\ndouble subgroupExclusiveMax(double);\ndvec2  subgroupExclusiveMax(dvec2);\ndvec3  subgroupExclusiveMax(dvec3);\ndvec4  subgroupExclusiveMax(dvec4);\ndouble subgroupClusteredAdd(double, uint);\ndvec2  subgroupClusteredAdd(dvec2, uint);\ndvec3  subgroupClusteredAdd(dvec3, uint);\ndvec4  subgroupClusteredAdd(dvec4, uint);\ndouble subgroupClusteredMul(double, uint);\ndvec2  subgroupClusteredMul(dvec2, uint);\ndvec3  subgroupClusteredMul(dvec3, uint);\ndvec4  subgroupClusteredMul(dvec4, uint);\ndouble subgroupClusteredMin(double, uint);\ndvec2  subgroupClusteredMin(dvec2, uint);\ndvec3  subgroupClusteredMin(dvec3, uint);\ndvec4  subgroupClusteredMin(dvec4, uint);\ndouble subgroupClusteredMax(double, uint);\ndvec2  subgroupClusteredMax(dvec2, uint);\ndvec3  subgroupClusteredMax(dvec3, uint);\ndvec4  subgroupClusteredMax(dvec4, uint);\ndouble subgroupQuadBroadcast(double, uint);\ndvec2  subgroupQuadBroadcast(dvec2, uint);\ndvec3  subgroupQuadBroadcast(dvec3, uint);\ndvec4  subgroupQuadBroadcast(dvec4, uint);\ndouble subgroupQuadSwapHorizontal(double);\ndvec2  subgroupQuadSwapHorizontal(dvec2);\ndvec3  subgroupQuadSwapHorizontal(dvec3);\ndvec4  subgroupQuadSwapHorizontal(dvec4);\ndouble subgroupQuadSwapVertical(double);\ndvec2  subgroupQuadSwapVertical(dvec2);\ndvec3  subgroupQuadSwapVertical(dvec3);\ndvec4  subgroupQuadSwapVertical(dvec4);\ndouble subgroupQuadSwapDiagonal(double);\ndvec2  subgroupQuadSwapDiagonal(dvec2);\ndvec3  subgroupQuadSwapDiagonal(dvec3);\ndvec4  subgroupQuadSwapDiagonal(dvec4);\n\n
void subgroupMemoryBarrierShared();\n
bool anyInvocation(bool);bool allInvocations(bool);bool allInvocationsEqual(bool);\n
float16_t radians(float16_t);f16vec2   radians(f16vec2);f16vec3   radians(f16vec3);f16vec4   radians(f16vec4);float16_t degrees(float16_t);f16vec2   degrees(f16vec2);f16vec3   degrees(f16vec3);f16vec4   degrees(f16vec4);float16_t sin(float16_t);f16vec2   sin(f16vec2);f16vec3   sin(f16vec3);f16vec4   sin(f16vec4);float16_t cos(float16_t);f16vec2   cos(f16vec2);f16vec3   cos(f16vec3);f16vec4   cos(f16vec4);float16_t tan(float16_t);f16vec2   tan(f16vec2);f16vec3   tan(f16vec3);f16vec4   tan(f16vec4);float16_t asin(float16_t);f16vec2   asin(f16vec2);f16vec3   asin(f16vec3);f16vec4   asin(f16vec4);float16_t acos(float16_t);f16vec2   acos(f16vec2);f16vec3   acos(f16vec3);f16vec4   acos(f16vec4);float16_t atan(float16_t, float16_t);f16vec2   atan(f16vec2,   f16vec2);f16vec3   atan(f16vec3,   f16vec3);f16vec4   atan(f16vec4,   f16vec4);float16_t atan(float16_t);f16vec2   atan(f16vec2);f16vec3   atan(f16vec3);f16vec4   atan(f16vec4);float16_t sinh(float16_t);f16vec2   sinh(f16vec2);f16vec3   sinh(f16vec3);f16vec4   sinh(f16vec4);float16_t cosh(float16_t);f16vec2   cosh(f16vec2);f16vec3   cosh(f16vec3);f16vec4   cosh(f16vec4);float16_t tanh(float16_t);f16vec2   tanh(f16vec2);f16vec3   tanh(f16vec3);f16vec4   tanh(f16vec4);float16_t asinh(float16_t);f16vec2   asinh(f16vec2);f16vec3   asinh(f16vec3);f16vec4   asinh(f16vec4);float16_t acosh(float16_t);f16vec2   acosh(f16vec2);f16vec3   acosh(f16vec3);f16vec4   acosh(f16vec4);float16_t atanh(float16_t);f16vec2   atanh(f16vec2);f16vec3   atanh(f16vec3);f16vec4   atanh(f16vec4);float16_t pow(float16_t, float16_t);f16vec2   pow(f16vec2,   f16vec2);f16vec3   pow(f16vec3,   f16vec3);f16vec4   pow(f16vec4,   f16vec4);float16_t exp(float16_t);f16vec2   exp(f16vec2);f16vec3   exp(f16vec3);f16vec4   exp(f16vec4);float16_t log(float16_t);f16vec2   log(f16vec2);f16vec3   log(f16vec3);f16vec4   log(f16vec4);float16_t exp2(float16_t);f16vec2   exp2(f16vec2);f16vec3   exp2(f16vec3);f16vec4   exp2(f16vec4);float16_t log2(float16_t);f16vec2   log2(f16vec2);f16vec3   log2(f16vec3);f16vec4   log2(f16vec4);float16_t sqrt(float16_t);f16vec2   sqrt(f16vec2);f16vec3   sqrt(f16vec3);f16vec4   sqrt(f16vec4);float16_t inversesqrt(float16_t);f16vec2   inversesqrt(f16vec2);f16vec3   inversesqrt(f16vec3);f16vec4   inversesqrt(f16vec4);float16_t abs(float16_t);f16vec2   abs(f16vec2);f16vec3   abs(f16vec3);f16vec4   abs(f16vec4);float16_t sign(float16_t);f16vec2   sign(f16vec2);f16vec3   sign(f16vec3);f16vec4   sign(f16vec4);float16_t floor(float16_t);f16vec2   floor(f16vec2);f16vec3   floor(f16vec3);f16vec4   floor(f16vec4);float16_t trunc(float16_t);f16vec2   trunc(f16vec2);f16vec3   trunc(f16vec3);f16vec4   trunc(f16vec4);float16_t round(float16_t);f16vec2   round(f16vec2);f16vec3   round(f16vec3);f16vec4   round(f16vec4);float16_t roundEven(float16_t);f16vec2   roundEven(f16vec2);f16vec3   roundEven(f16vec3);f16vec4   roundEven(f16vec4);float16_t ceil(float16_t);f16vec2   ceil(f16vec2);f16vec3   ceil(f16vec3);f16vec4   ceil(f16vec4);float16_t fract(float16_t);f16vec2   fract(f16vec2);f16vec3   fract(f16vec3);f16vec4   fract(f16vec4);float16_t mod(float16_t, float16_t);f16vec2   mod(f16vec2,   float16_t);f16vec3   mod(f16vec3,   float16_t);f16vec4   mod(f16vec4,   float16_t);f16vec2   mod(f16vec2,   f16vec2);f16vec3   mod(f16vec3,   f16vec3);f16vec4   mod(f16vec4,   f16vec4);float16_t modf(float16_t, out float16_t);f16vec2   modf(f16vec2,   out f16vec2);f16vec3   modf(f16vec3,   out f16vec3);f16vec4   modf(f16vec4,   out f16vec4);float16_t min(float16_t, float16_t);f16vec2   min(f16vec2,   float16_t);f16vec3   min(f16vec3,   float16_t);f16vec4   min(f16vec4,   float16_t);f16vec2   min(f16vec2,   f16vec2);f16vec3   min(f16vec3,   f16vec3);f16vec4   min(f16vec4,   f16vec4);float16_t max(float16_t, float16_t);f16vec2   max(f16vec2,   float16_t);f16vec3   max(f16vec3,   float16_t);f16vec4   max(f16vec4,   float16_t);f16vec2   max(f16vec2,   f16vec2);f16vec3   max(f16vec3,   f16vec3);f16vec4   max(f16vec4,   f16vec4);float16_t clamp(float16_t, float16_t, float16_t);f16vec2   clamp(f16vec2,   float16_t, float16_t);f16vec3   clamp(f16vec3,   float16_t, float16_t);f16vec4   clamp(f16vec4,   float16_t, float16_t);f16vec2   clamp(f16vec2,   f16vec2,   f16vec2);f16vec3   clamp(f16vec3,   f16vec3,   f16vec3);f16vec4   clamp(f16vec4,   f16vec4,   f16vec4);float16_t mix(float16_t, float16_t, float16_t);f16vec2   mix(f16vec2,   f16vec2,   float16_t);f16vec3   mix(f16vec3,   f16vec3,   float16_t);f16vec4   mix(f16vec4,   f16vec4,   float16_t);f16vec2   mix(f16vec2,   f16vec2,   f16vec2);f16vec3   mix(f16vec3,   f16vec3,   f16vec3);f16vec4   mix(f16vec4,   f16vec4,   f16vec4);float16_t mix(float16_t, float16_t, bool);f16vec2   mix(f16vec2,   f16vec2,   bvec2);f16vec3   mix(f16vec3,   f16vec3,   bvec3);f16vec4   mix(f16vec4,   f16vec4,   bvec4);float16_t step(float16_t, float16_t);f16vec2   step(f16vec2,   f16vec2);f16vec3   step(f16vec3,   f16vec3);f16vec4   step(f16vec4,   f16vec4);f16vec2   step(float16_t, f16vec2);f16vec3   step(float16_t, f16vec3);f16vec4   step(float16_t, f16vec4);float16_t smoothstep(float16_t, float16_t, float16_t);f16vec2   smoothstep(f16vec2,   f16vec2,   f16vec2);f16vec3   smoothstep(f16vec3,   f16vec3,   f16vec3);f16vec4   smoothstep(f16vec4,   f16vec4,   f16vec4);f16vec2   smoothstep(float16_t, float16_t, f16vec2);f16vec3   smoothstep(float16_t, float16_t, f16vec3);f16vec4   smoothstep(float16_t, float16_t, f16vec4);bool  isnan(float16_t);bvec2 isnan(f16vec2);bvec3 isnan(f16vec3);bvec4 isnan(f16vec4);bool  isinf(float16_t);bvec2 isinf(f16vec2);bvec3 isinf(f16vec3);bvec4 isinf(f16vec4);float16_t fma(float16_t, float16_t, float16_t);f16vec2   fma(f16vec2,   f16vec2,   f16vec2);f16vec3   fma(f16vec3,   f16vec3,   f16vec3);f16vec4   fma(f16vec4,   f16vec4,   f16vec4);float16_t frexp(float16_t, out int);f16vec2   frexp(f16vec2,   out ivec2);f16vec3   frexp(f16vec3,   out ivec3);f16vec4   frexp(f16vec4,   out ivec4);float16_t ldexp(float16_t, in int);f16vec2   ldexp(f16vec2,   in ivec2);f16vec3   ldexp(f16vec3,   in ivec3);f16vec4   ldexp(f16vec4,   in ivec4);uint    packFloat2x16(f16vec2);f16vec2 unpackFloat2x16(uint);float16_t length(float16_t);float16_t length(f16vec2);float16_t length(f16vec3);float16_t length(f16vec4);float16_t distance(float16_t, float16_t);float16_t distance(f16vec2,   f16vec2);float16_t distance(f16vec3,   f16vec3);float16_t distance(f16vec4,   f16vec4);float16_t dot(float16_t, float16_t);float16_t dot(f16vec2,   f16vec2);float16_t dot(f16vec3,   f16vec3);float16_t dot(f16vec4,   f16vec4);f16vec3 cross(f16vec3, f16vec3);float16_t normalize(float16_t);f16vec2   normalize(f16vec2);f16vec3   normalize(f16vec3);f16vec4   normalize(f16vec4);float16_t faceforward(float16_t, float16_t, float16_t);f16vec2   faceforward(f16vec2,   f16vec2,   f16vec2);f16vec3   faceforward(f16vec3,   f16vec3,   f16vec3);f16vec4   faceforward(f16vec4,   f16vec4,   f16vec4);float16_t reflect(float16_t, float16_t);f16vec2   reflect(f16vec2,   f16vec2);f16vec3   reflect(f16vec3,   f16vec3);f16vec4   reflect(f16vec4,   f16vec4);float16_t refract(float16_t, float16_t, float16_t);f16vec2   refract(f16vec2,   f16vec2,   float16_t);f16vec3   refract(f16vec3,   f16vec3,   float16_t);f16vec4   refract(f16vec4,   f16vec4,   float16_t);f16mat2   matrixCompMult(f16mat2,   f16mat2);f16mat3   matrixCompMult(f16mat3,   f16mat3);f16mat4   matrixCompMult(f16mat4,   f16mat4);f16mat2x3 matrixCompMult(f16mat2x3, f16mat2x3);f16mat2x4 matrixCompMult(f16mat2x4, f16mat2x4);f16mat3x2 matrixCompMult(f16mat3x2, f16mat3x2);f16mat3x4 matrixCompMult(f16mat3x4, f16mat3x4);f16mat4x2 matrixCompMult(f16mat4x2, f16mat4x2);f16mat4x3 matrixCompMult(f16mat4x3, f16mat4x3);f16mat2   outerProduct(f16vec2, f16vec2);f16mat3   outerProduct(f16vec3, f16vec3);f16mat4   outerProduct(f16vec4, f16vec4);f16mat2x3 outerProduct(f16vec3, f16vec2);f16mat3x2 outerProduct(f16vec2, f16vec3);f16mat2x4 outerProduct(f16vec4, f16vec2);f16mat4x2 outerProduct(f16vec2, f16vec4);f16mat3x4 outerProduct(f16vec4, f16vec3);f16mat4x3 outerProduct(f16vec3, f16vec4);f16mat2   transpose(f16mat2);f16mat3   transpose(f16mat3);f16mat4   transpose(f16mat4);f16mat2x3 transpose(f16mat3x2);f16mat3x2 transpose(f16mat2x3);f16mat2x4 transpose(f16mat4x2);f16mat4x2 transpose(f16mat2x4);f16mat3x4 transpose(f16mat4x3);f16mat4x3 transpose(f16mat3x4);float16_t determinant(f16mat2);float16_t determinant(f16mat3);float16_t determinant(f16mat4);f16mat2 inverse(f16mat2);f16mat3 inverse(f16mat3);f16mat4 inverse(f16mat4);bvec2 lessThan(f16vec2, f16vec2);bvec3 lessThan(f16vec3, f16vec3);bvec4 lessThan(f16vec4, f16vec4);bvec2 lessThanEqual(f16vec2, f16vec2);bvec3 lessThanEqual(f16vec3, f16vec3);bvec4 lessThanEqual(f16vec4, f16vec4);bvec2 greaterThan(f16vec2, f16vec2);bvec3 greaterThan(f16vec3, f16vec3);bvec4 greaterThan(f16vec4, f16vec4);bvec2 greaterThanEqual(f16vec2, f16vec2);bvec3 greaterThanEqual(f16vec3, f16vec3);bvec4 greaterThanEqual(f16vec4, f16vec4);bvec2 equal(f16vec2, f16vec2);bvec3 equal(f16vec3, f16vec3);bvec4 equal(f16vec4, f16vec4);bvec2 notEqual(f16vec2, f16vec2);bvec3 notEqual(f16vec3, f16vec3);bvec4 notEqual(f16vec4, f16vec4);\n
int8_t abs(int8_t);i8vec2 abs(i8vec2);i8vec3 abs(i8vec3);i8vec4 abs(i8vec4);int8_t sign(int8_t);i8vec2 sign(i8vec2);i8vec3 sign(i8vec3);i8vec4 sign(i8vec4);int8_t min(int8_t x, int8_t y);i8vec2 min(i8vec2 x, int8_t y);i8vec3 min(i8vec3 x, int8_t y);i8vec4 min(i8vec4 x, int8_t y);i8vec2 min(i8vec2 x, i8vec2 y);i8vec3 min(i8vec3 x, i8vec3 y);i8vec4 min(i8vec4 x, i8vec4 y);uint8_t min(uint8_t x, uint8_t y);u8vec2 min(u8vec2 x, uint8_t y);u8vec3 min(u8vec3 x, uint8_t y);u8vec4 min(u8vec4 x, uint8_t y);u8vec2 min(u8vec2 x, u8vec2 y);u8vec3 min(u8vec3 x, u8vec3 y);u8vec4 min(u8vec4 x, u8vec4 y);int8_t max(int8_t x, int8_t y);i8vec2 max(i8vec2 x, int8_t y);i8vec3 max(i8vec3 x, int8_t y);i8vec4 max(i8vec4 x, int8_t y);i8vec2 max(i8vec2 x, i8vec2 y);i8vec3 max(i8vec3 x, i8vec3 y);i8vec4 max(i8vec4 x, i8vec4 y);uint8_t max(uint8_t x, uint8_t y);u8vec2 max(u8vec2 x, uint8_t y);u8vec3 max(u8vec3 x, uint8_t y);u8vec4 max(u8vec4 x, uint8_t y);u8vec2 max(u8vec2 x, u8vec2 y);u8vec3 max(u8vec3 x, u8vec3 y);u8vec4 max(u8vec4 x, u8vec4 y);int8_t    clamp(int8_t x, int8_t minVal, int8_t maxVal);i8vec2  clamp(i8vec2  x, int8_t minVal, int8_t maxVal);i8vec3  clamp(i8vec3  x, int8_t minVal, int8_t maxVal);i8vec4  clamp(i8vec4  x, int8_t minVal, int8_t maxVal);i8vec2  clamp(i8vec2  x, i8vec2  minVal, i8vec2  maxVal);i8vec3  clamp(i8vec3  x, i8vec3  minVal, i8vec3  maxVal);i8vec4  clamp(i8vec4  x, i8vec4  minVal, i8vec4  maxVal);uint8_t   clamp(uint8_t x, uint8_t minVal, uint8_t maxVal);u8vec2  clamp(u8vec2  x, uint8_t minVal, uint8_t maxVal);u8vec3  clamp(u8vec3  x, uint8_t minVal, uint8_t maxVal);u8vec4  clamp(u8vec4  x, uint8_t minVal, uint8_t maxVal);u8vec2  clamp(u8vec2  x, u8vec2  minVal, u8vec2  maxVal);u8vec3  clamp(u8vec3  x, u8vec3  minVal, u8vec3  maxVal);u8vec4  clamp(u8vec4  x, u8vec4  minVal, u8vec4  maxVal);int8_t  mix(int8_t,  int8_t,  bool);i8vec2  mix(i8vec2,  i8vec2,  bvec2);i8vec3  mix(i8vec3,  i8vec3,  bvec3);i8vec4  mix(i8vec4,  i8vec4,  bvec4);uint8_t mix(uint8_t, uint8_t, bool);u8vec2  mix(u8vec2,  u8vec2,  bvec2);u8vec3  mix(u8vec3,  u8vec3,  bvec3);u8vec4  mix(u8vec4,  u8vec4,  bvec4);bvec2 lessThan(i8vec2, i8vec2);bvec3 lessThan(i8vec3, i8vec3);bvec4 lessThan(i8vec4, i8vec4);bvec2 lessThan(u8vec2, u8vec2);bvec3 lessThan(u8vec3, u8vec3);bvec4 lessThan(u8vec4, u8vec4);bvec2 lessThanEqual(i8vec2, i8vec2);bvec3 lessThanEqual(i8vec3, i8vec3);bvec4 lessThanEqual(i8vec4, i8vec4);bvec2 lessThanEqual(u8vec2, u8vec2);bvec3 lessThanEqual(u8vec3, u8vec3);bvec4 lessThanEqual(u8vec4, u8vec4);bvec2 greaterThan(i8vec2, i8vec2);bvec3 greaterThan(i8vec3, i8vec3);bvec4 greaterThan(i8vec4, i8vec4);bvec2 greaterThan(u8vec2, u8vec2);bvec3 greaterThan(u8vec3, u8vec3);bvec4 greaterThan(u8vec4, u8vec4);bvec2 greaterThanEqual(i8vec2, i8vec2);bvec3 greaterThanEqual(i8vec3, i8vec3);bvec4 greaterThanEqual(i8vec4, i8vec4);bvec2 greaterThanEqual(u8vec2, u8vec2);bvec3 greaterThanEqual(u8vec3, u8vec3);bvec4 greaterThanEqual(u8vec4, u8vec4);bvec2 equal(i8vec2, i8vec2);bvec3 equal(i8vec3, i8vec3);bvec4 equal(i8vec4, i8vec4);bvec2 equal(u8vec2, u8vec2);bvec3 equal(u8vec3, u8vec3);bvec4 equal(u8vec4, u8vec4);bvec2 notEqual(i8vec2, i8vec2);bvec3 notEqual(i8vec3, i8vec3);bvec4 notEqual(i8vec4, i8vec4);bvec2 notEqual(u8vec2, u8vec2);bvec3 notEqual(u8vec3, u8vec3);bvec4 notEqual(u8vec4, u8vec4);  int8_t bitfieldExtract(  int8_t, int8_t, int8_t);i8vec2 bitfieldExtract(i8vec2, int8_t, int8_t);i8vec3 bitfieldExtract(i8vec3, int8_t, int8_t);i8vec4 bitfieldExtract(i8vec4, int8_t, int8_t); uint8_t bitfieldExtract( uint8_t, int8_t, int8_t);u8vec2 bitfieldExtract(u8vec2, int8_t, int8_t);u8vec3 bitfieldExtract(u8vec3, int8_t, int8_t);u8vec4 bitfieldExtract(u8vec4, int8_t, int8_t);  int8_t bitfieldInsert(  int8_t base,   int8_t, int8_t, int8_t);i8vec2 bitfieldInsert(i8vec2 base, i8vec2, int8_t, int8_t);i8vec3 bitfieldInsert(i8vec3 base, i8vec3, int8_t, int8_t);i8vec4 bitfieldInsert(i8vec4 base, i8vec4, int8_t, int8_t); uint8_t bitfieldInsert( uint8_t base,  uint8_t, int8_t, int8_t);u8vec2 bitfieldInsert(u8vec2 base, u8vec2, int8_t, int8_t);u8vec3 bitfieldInsert(u8vec3 base, u8vec3, int8_t, int8_t);u8vec4 bitfieldInsert(u8vec4 base, u8vec4, int8_t, int8_t);  int8_t bitCount(  int8_t);i8vec2 bitCount(i8vec2);i8vec3 bitCount(i8vec3);i8vec4 bitCount(i8vec4);  int8_t bitCount( uint8_t);i8vec2 bitCount(u8vec2);i8vec3 bitCount(u8vec3);i8vec4 bitCount(u8vec4);  int8_t findLSB(  int8_t);i8vec2 findLSB(i8vec2);i8vec3 findLSB(i8vec3);i8vec4 findLSB(i8vec4);  int8_t findLSB( uint8_t);i8vec2 findLSB(u8vec2);i8vec3 findLSB(u8vec3);i8vec4 findLSB(u8vec4);  int8_t findMSB(  int8_t);i8vec2 findMSB(i8vec2);i8vec3 findMSB(i8vec3);i8vec4 findMSB(i8vec4);  int8_t findMSB( uint8_t);i8vec2 findMSB(u8vec2);i8vec3 findMSB(u8vec3);i8vec4 findMSB(u8vec4);int16_t abs(int16_t);i16vec2 abs(i16vec2);i16vec3 abs(i16vec3);i16vec4 abs(i16vec4);int16_t sign(int16_t);i16vec2 sign(i16vec2);i16vec3 sign(i16vec3);i16vec4 sign(i16vec4);int16_t min(int16_t x, int16_t y);i16vec2 min(i16vec2 x, int16_t y);i16vec3 min(i16vec3 x, int16_t y);i16vec4 min(i16vec4 x, int16_t y);i16vec2 min(i16vec2 x, i16vec2 y);i16vec3 min(i16vec3 x, i16vec3 y);i16vec4 min(i16vec4 x, i16vec4 y);uint16_t min(uint16_t x, uint16_t y);u16vec2 min(u16vec2 x, uint16_t y);u16vec3 min(u16vec3 x, uint16_t y);u16vec4 min(u16vec4 x, uint16_t y);u16vec2 min(u16vec2 x, u16vec2 y);u16vec3 min(u16vec3 x, u16vec3 y);u16vec4 min(u16vec4 x, u16vec4 y);int16_t max(int16_t x, int16_t y);i16vec2 max(i16vec2 x, int16_t y);i16vec3 max(i16vec3 x, int16_t y);i16vec4 max(i16vec4 x, int16_t y);i16vec2 max(i16vec2 x, i16vec2 y);i16vec3 max(i16vec3 x, i16vec3 y);i16vec4 max(i16vec4 x, i16vec4 y);uint16_t max(uint16_t x, uint16_t y);u16vec2 max(u16vec2 x, uint16_t y);u16vec3 max(u16vec3 x, uint16_t y);u16vec4 max(u16vec4 x, uint16_t y);u16vec2 max(u16vec2 x, u16vec2 y);u16vec3 max(u16vec3 x, u16vec3 y);u16vec4 max(u16vec4 x, u16vec4 y);int16_t    clamp(int16_t x, int16_t minVal, int16_t maxVal);i16vec2  clamp(i16vec2  x, int16_t minVal, int16_t maxVal);i16vec3  clamp(i16vec3  x, int16_t minVal, int16_t maxVal);i16vec4  clamp(i16vec4  x, int16_t minVal, int16_t maxVal);i16vec2  clamp(i16vec2  x, i16vec2  minVal, i16vec2  maxVal);i16vec3  clamp(i16vec3  x, i16vec3  minVal, i16vec3  maxVal);i16vec4  clamp(i16vec4  x, i16vec4  minVal, i16vec4  maxVal);uint16_t   clamp(uint16_t x, uint16_t minVal, uint16_t maxVal);u16vec2  clamp(u16vec2  x, uint16_t minVal, uint16_t maxVal);u16vec3  clamp(u16vec3  x, uint16_t minVal, uint16_t maxVal);u16vec4  clamp(u16vec4  x, uint16_t minVal, uint16_t maxVal);u16vec2  clamp(u16vec2  x, u16vec2  minVal, u16vec2  maxVal);u16vec3  clamp(u16vec3  x, u16vec3  minVal, u16vec3  maxVal);u16vec4  clamp(u16vec4  x, u16vec4  minVal, u16vec4  maxVal);int16_t  mix(int16_t,  int16_t,  bool);i16vec2  mix(i16vec2,  i16vec2,  bvec2);i16vec3  mix(i16vec3,  i16vec3,  bvec3);i16vec4  mix(i16vec4,  i16vec4,  bvec4);uint16_t mix(uint16_t, uint16_t, bool);u16vec2  mix(u16vec2,  u16vec2,  bvec2);u16vec3  mix(u16vec3,  u16vec3,  bvec3);u16vec4  mix(u16vec4,  u16vec4,  bvec4);float16_t frexp(float16_t, out int16_t);f16vec2   frexp(f16vec2,   out i16vec2);f16vec3   frexp(f16vec3,   out i16vec3);f16vec4   frexp(f16vec4,   out i16vec4);float16_t ldexp(float16_t, int16_t);f16vec2   ldexp(f16vec2,   i16vec2);f16vec3   ldexp(f16vec3,   i16vec3);f16vec4   ldexp(f16vec4,   i16vec4);int16_t halfBitsToInt16(float16_t);i16vec2 halfBitsToInt16(f16vec2);i16vec3 halhBitsToInt16(f16vec3);i16vec4 halfBitsToInt16(f16vec4);uint16_t halfBitsToUint16(float16_t);u16vec2  halfBitsToUint16(f16vec2);u16vec3  halfBitsToUint16(f16vec3);u16vec4  halfBitsToUint16(f16vec4);int16_t float16BitsToInt16(float16_t);i16vec2 float16BitsToInt16(f16vec2);i16vec3 float16BitsToInt16(f16vec3);i16vec4 float16BitsToInt16(f16vec4);uint16_t float16BitsToUint16(float16_t);u16vec2  float16BitsToUint16(f16vec2);u16vec3  float16BitsToUint16(f16vec3);u16vec4  float16BitsToUint16(f16vec4);float16_t int16BitsToFloat16(int16_t);f16vec2   int16BitsToFloat16(i16vec2);f16vec3   int16BitsToFloat16(i16vec3);f16vec4   int16BitsToFloat16(i16vec4);float16_t uint16BitsToFloat16(uint16_t);f16vec2   uint16BitsToFloat16(u16vec2);f16vec3   uint16BitsToFloat16(u16vec3);f16vec4   uint16BitsToFloat16(u16vec4);float16_t int16BitsToHalf(int16_t);f16vec2   int16BitsToHalf(i16vec2);f16vec3   int16BitsToHalf(i16vec3);f16vec4   int16BitsToHalf(i16vec4);float16_t uint16BitsToHalf(uint16_t);f16vec2   uint16BitsToHalf(u16vec2);f16vec3   uint16BitsToHalf(u16vec3);f16vec4   uint16BitsToHalf(u16vec4);int      packInt2x16(i16vec2);uint     packUint2x16(u16vec2);int64_t  packInt4x16(i16vec4);uint64_t packUint4x16(u16vec4);i16vec2  unpackInt2x16(int);u16vec2  unpackUint2x16(uint);i16vec4  unpackInt4x16(int64_t);u16vec4  unpackUint4x16(uint64_t);bvec2 lessThan(i16vec2, i16vec2);bvec3 lessThan(i16vec3, i16vec3);bvec4 lessThan(i16vec4, i16vec4);bvec2 lessThan(u16vec2, u16vec2);bvec3 lessThan(u16vec3, u16vec3);bvec4 lessThan(u16vec4, u16vec4);bvec2 lessThanEqual(i16vec2, i16vec2);bvec3 lessThanEqual(i16vec3, i16vec3);bvec4 lessThanEqual(i16vec4, i16vec4);bvec2 lessThanEqual(u16vec2, u16vec2);bvec3 lessThanEqual(u16vec3, u16vec3);bvec4 lessThanEqual(u16vec4, u16vec4);bvec2 greaterThan(i16vec2, i16vec2);bvec3 greaterThan(i16vec3, i16vec3);bvec4 greaterThan(i16vec4, i16vec4);bvec2 greaterThan(u16vec2, u16vec2);bvec3 greaterThan(u16vec3, u16vec3);bvec4 greaterThan(u16vec4, u16vec4);bvec2 greaterThanEqual(i16vec2, i16vec2);bvec3 greaterThanEqual(i16vec3, i16vec3);bvec4 greaterThanEqual(i16vec4, i16vec4);bvec2 greaterThanEqual(u16vec2, u16vec2);bvec3 greaterThanEqual(u16vec3, u16vec3);bvec4 greaterThanEqual(u16vec4, u16vec4);bvec2 equal(i16vec2, i16vec2);bvec3 equal(i16vec3, i16vec3);bvec4 equal(i16vec4, i16vec4);bvec2 equal(u16vec2, u16vec2);bvec3 equal(u16vec3, u16vec3);bvec4 equal(u16vec4, u16vec4);bvec2 notEqual(i16vec2, i16vec2);bvec3 notEqual(i16vec3, i16vec3);bvec4 notEqual(i16vec4, i16vec4);bvec2 notEqual(u16vec2, u16vec2);bvec3 notEqual(u16vec3, u16vec3);bvec4 notEqual(u16vec4, u16vec4);  int16_t bitfieldExtract(  int16_t, int16_t, int16_t);i16vec2 bitfieldExtract(i16vec2, int16_t, int16_t);i16vec3 bitfieldExtract(i16vec3, int16_t, int16_t);i16vec4 bitfieldExtract(i16vec4, int16_t, int16_t); uint16_t bitfieldExtract( uint16_t, int16_t, int16_t);u16vec2 bitfieldExtract(u16vec2, int16_t, int16_t);u16vec3 bitfieldExtract(u16vec3, int16_t, int16_t);u16vec4 bitfieldExtract(u16vec4, int16_t, int16_t);  int16_t bitfieldInsert(  int16_t base,   int16_t, int16_t, int16_t);i16vec2 bitfieldInsert(i16vec2 base, i16vec2, int16_t, int16_t);i16vec3 bitfieldInsert(i16vec3 base, i16vec3, int16_t, int16_t);i16vec4 bitfieldInsert(i16vec4 base, i16vec4, int16_t, int16_t); uint16_t bitfieldInsert( uint16_t base,  uint16_t, int16_t, int16_t);u16vec2 bitfieldInsert(u16vec2 base, u16vec2, int16_t, int16_t);u16vec3 bitfieldInsert(u16vec3 base, u16vec3, int16_t, int16_t);u16vec4 bitfieldInsert(u16vec4 base, u16vec4, int16_t, int16_t);  int16_t bitCount(  int16_t);i16vec2 bitCount(i16vec2);i16vec3 bitCount(i16vec3);i16vec4 bitCount(i16vec4);  int16_t bitCount( uint16_t);i16vec2 bitCount(u16vec2);i16vec3 bitCount(u16vec3);i16vec4 bitCount(u16vec4);  int16_t findLSB(  int16_t);i16vec2 findLSB(i16vec2);i16vec3 findLSB(i16vec3);i16vec4 findLSB(i16vec4);  int16_t findLSB( uint16_t);i16vec2 findLSB(u16vec2);i16vec3 findLSB(u16vec3);i16vec4 findLSB(u16vec4);  int16_t findMSB(  int16_t);i16vec2 findMSB(i16vec2);i16vec3 findMSB(i16vec3);i16vec4 findMSB(i16vec4);  int16_t findMSB( uint16_t);i16vec2 findMSB(u16vec2);i16vec3 findMSB(u16vec3);i16vec4 findMSB(u16vec4);int16_t  pack16(i8vec2);uint16_t pack16(u8vec2);int32_t  pack32(i8vec4);uint32_t pack32(u8vec4);int32_t  pack32(i16vec2);uint32_t pack32(u16vec2);int64_t  pack64(i16vec4);uint64_t pack64(u16vec4);int64_t  pack64(i32vec2);uint64_t pack64(u32vec2);i8vec2   unpack8(int16_t);u8vec2   unpack8(uint16_t);i8vec4   unpack8(int32_t);u8vec4   unpack8(uint32_t);i16vec2  unpack16(int32_t);u16vec2  unpack16(uint32_t);i16vec4  unpack16(int64_t);u16vec4  unpack16(uint64_t);i32vec2  unpack32(int64_t);u32vec2  unpack32(uint64_t);float64_t radians(float64_t);f64vec2   radians(f64vec2);f64vec3   radians(f64vec3);f64vec4   radians(f64vec4);float64_t degrees(float64_t);f64vec2   degrees(f64vec2);f64vec3   degrees(f64vec3);f64vec4   degrees(f64vec4);float64_t sin(float64_t);f64vec2   sin(f64vec2);f64vec3   sin(f64vec3);f64vec4   sin(f64vec4);float64_t cos(float64_t);f64vec2   cos(f64vec2);f64vec3   cos(f64vec3);f64vec4   cos(f64vec4);float64_t tan(float64_t);f64vec2   tan(f64vec2);f64vec3   tan(f64vec3);f64vec4   tan(f64vec4);float64_t asin(float64_t);f64vec2   asin(f64vec2);f64vec3   asin(f64vec3);f64vec4   asin(f64vec4);float64_t acos(float64_t);f64vec2   acos(f64vec2);f64vec3   acos(f64vec3);f64vec4   acos(f64vec4);float64_t atan(float64_t, float64_t);f64vec2   atan(f64vec2,   f64vec2);f64vec3   atan(f64vec3,   f64vec3);f64vec4   atan(f64vec4,   f64vec4);float64_t atan(float64_t);f64vec2   atan(f64vec2);f64vec3   atan(f64vec3);f64vec4   atan(f64vec4);float64_t sinh(float64_t);f64vec2   sinh(f64vec2);f64vec3   sinh(f64vec3);f64vec4   sinh(f64vec4);float64_t cosh(float64_t);f64vec2   cosh(f64vec2);f64vec3   cosh(f64vec3);f64vec4   cosh(f64vec4);float64_t tanh(float64_t);f64vec2   tanh(f64vec2);f64vec3   tanh(f64vec3);f64vec4   tanh(f64vec4);float64_t asinh(float64_t);f64vec2   asinh(f64vec2);f64vec3   asinh(f64vec3);f64vec4   asinh(f64vec4);float64_t acosh(float64_t);f64vec2   acosh(f64vec2);f64vec3   acosh(f64vec3);f64vec4   acosh(f64vec4);float64_t atanh(float64_t);f64vec2   atanh(f64vec2);f64vec3   atanh(f64vec3);f64vec4   atanh(f64vec4);float64_t pow(float64_t, float64_t);f64vec2   pow(f64vec2,   f64vec2);f64vec3   pow(f64vec3,   f64vec3);f64vec4   pow(f64vec4,   f64vec4);float64_t exp(float64_t);f64vec2   exp(f64vec2);f64vec3   exp(f64vec3);f64vec4   exp(f64vec4);float64_t log(float64_t);f64vec2   log(f64vec2);f64vec3   log(f64vec3);f64vec4   log(f64vec4);float64_t exp2(float64_t);f64vec2   exp2(f64vec2);f64vec3   exp2(f64vec3);f64vec4   exp2(f64vec4);float64_t log2(float64_t);f64vec2   log2(f64vec2);f64vec3   log2(f64vec3);f64vec4   log2(f64vec4);\n
float64_t interpolateAtCentroid(float64_t);f64vec2   interpolateAtCentroid(f64vec2);f64vec3   interpolateAtCentroid(f64vec3);f64vec4   interpolateAtCentroid(f64vec4);float64_t interpolateAtSample(float64_t, int);f64vec2   interpolateAtSample(f64vec2,   int);f64vec3   interpolateAtSample(f64vec3,   int);f64vec4   interpolateAtSample(f64vec4,   int);float64_t interpolateAtOffset(float64_t, f64vec2);f64vec2   interpolateAtOffset(f64vec2,   f64vec2);f64vec3   interpolateAtOffset(f64vec3,   f64vec2);f64vec4   interpolateAtOffset(f64vec4,   f64vec2);\n
vec4 ftransform();
vec4 texture2DLod(sampler2D, vec2, float);vec4 texture2DProjLod(sampler2D, vec3, float);vec4 texture2DProjLod(sampler2D, vec4, float);vec4 texture3DLod(sampler3D, vec3, float);vec4 texture3DProjLod(sampler3D, vec4, float);vec4 textureCubeLod(samplerCube, vec3, float);\n
vec4 texture1DLod(sampler1D, float, float);vec4 texture1DProjLod(sampler1D, vec2, float);vec4 texture1DProjLod(sampler1D, vec4, float);vec4 shadow1DLod(sampler1DShadow, vec3, float);vec4 shadow2DLod(sampler2DShadow, vec3, float);vec4 shadow1DProjLod(sampler1DShadow, vec4, float);vec4 shadow2DProjLod(sampler2DShadow, vec4, float);vec4 texture1DGradARB(sampler1D, float, float, float);vec4 texture1DProjGradARB(sampler1D, vec2, float, float);vec4 texture1DProjGradARB(sampler1D, vec4, float, float);vec4 texture2DGradARB(sampler2D, vec2, vec2, vec2);vec4 texture2DProjGradARB(sampler2D, vec3, vec2, vec2);vec4 texture2DProjGradARB(sampler2D, vec4, vec2, vec2);vec4 texture3DGradARB(sampler3D, vec3, vec3, vec3);vec4 texture3DProjGradARB(sampler3D, vec4, vec3, vec3);vec4 textureCubeGradARB(samplerCube, vec3, vec3, vec3);vec4 shadow1DGradARB(sampler1DShadow, vec3, float, float);vec4 shadow1DProjGradARB( sampler1DShadow, vec4, float, float);vec4 shadow2DGradARB(sampler2DShadow, vec3, vec2, vec2);vec4 shadow2DProjGradARB( sampler2DShadow, vec4, vec2, vec2);vec4 texture2DRectGradARB(sampler2DRect, vec2, vec2, vec2);vec4 texture2DRectProjGradARB( sampler2DRect, vec3, vec2, vec2);vec4 texture2DRectProjGradARB( sampler2DRect, vec4, vec2, vec2);vec4 shadow2DRectGradARB( sampler2DRectShadow, vec3, vec2, vec2);vec4 shadow2DRectProjGradARB(sampler2DRectShadow, vec4, vec2, vec2);\n
void EmitStreamVertex(int);void EndStreamPrimitive(int);
void EmitVertex();void EndPrimitive();\n
void barrier();
void memoryBarrier();
void memoryBarrierAtomicCounter();void memoryBarrierBuffer();void memoryBarrierImage();
void memoryBarrierShared();void groupMemoryBarrier();
void controlBarrier(int, int, int, int);\nvoid memoryBarrier(int, int, int);\n
vec4 texture2D(sampler2D, vec2, float);vec4 texture2DProj(sampler2D, vec3, float);vec4 texture2DProj(sampler2D, vec4, float);vec4 texture3D(sampler3D, vec3, float);vec4 texture3DProj(sampler3D, vec4, float);vec4 textureCube(samplerCube, vec3, float);\n
vec4 texture1D(sampler1D, float, float);vec4 texture1DProj(sampler1D, vec2, float);vec4 texture1DProj(sampler1D, vec4, float);vec4 shadow1D(sampler1DShadow, vec3, float);vec4 shadow2D(sampler2DShadow, vec3, float);vec4 shadow1DProj(sampler1DShadow, vec4, float);vec4 shadow2DProj(sampler2DShadow, vec4, float);\n
vec4 texture2DLodEXT(sampler2D, vec2, float);vec4 texture2DProjLodEXT(sampler2D, vec3, float);vec4 texture2DProjLodEXT(sampler2D, vec4, float);vec4 textureCubeLodEXT(samplerCube, vec3, float);\n
float interpolateAtCentroid(float);vec2  interpolateAtCentroid(vec2);vec3  interpolateAtCentroid(vec3);vec4  interpolateAtCentroid(vec4);float interpolateAtSample(float, int);vec2  interpolateAtSample(vec2,  int);vec3  interpolateAtSample(vec3,  int);vec4  interpolateAtSample(vec4,  int);float interpolateAtOffset(float, vec2);vec2  interpolateAtOffset(vec2,  vec2);vec3  interpolateAtOffset(vec3,  vec2);vec4  interpolateAtOffset(vec4,  vec2);\n
struct gl_DepthRangeParameters {
highp float near;highp float far;highp float diff;
float near;float far;float diff;
};uniform gl_DepthRangeParameters gl_DepthRange;\n
uniform mat4  gl_ModelViewMatrix;uniform mat4  gl_ProjectionMatrix;uniform mat4  gl_ModelViewProjectionMatrix;uniform mat3  gl_NormalMatrix;uniform mat4  gl_ModelViewMatrixInverse;uniform mat4  gl_ProjectionMatrixInverse;uniform mat4  gl_ModelViewProjectionMatrixInverse;uniform mat4  gl_ModelViewMatrixTranspose;uniform mat4  gl_ProjectionMatrixTranspose;uniform mat4  gl_ModelViewProjectionMatrixTranspose;uniform mat4  gl_ModelViewMatrixInverseTranspose;uniform mat4  gl_ProjectionMatrixInverseTranspose;uniform mat4  gl_ModelViewProjectionMatrixInverseTranspose;uniform float gl_NormalScale;struct gl_PointParameters {float size;float sizeMin;float sizeMax;float fadeThresholdSize;float distanceConstantAttenuation;float distanceLinearAttenuation;float distanceQuadraticAttenuation;};uniform gl_PointParameters gl_Point;struct gl_MaterialParameters {vec4  emission;vec4  ambient;vec4  diffuse;vec4  specular;float shininess;};uniform gl_MaterialParameters  gl_FrontMaterial;uniform gl_MaterialParameters  gl_BackMaterial;struct gl_LightSourceParameters {vec4  ambient;vec4  diffuse;vec4  specular;vec4  position;vec4  halfVector;vec3  spotDirection;float spotExponent;float spotCutoff;float spotCosCutoff;float constantAttenuation;float linearAttenuation;float quadraticAttenuation;};struct gl_LightModelParameters {vec4  ambient;};uniform gl_LightModelParameters  gl_LightModel;struct gl_LightModelProducts {vec4  sceneColor;};uniform gl_LightModelProducts gl_FrontLightModelProduct;uniform gl_LightModelProducts gl_BackLightModelProduct;struct gl_LightProducts {vec4  ambient;vec4  diffuse;vec4  specular;};struct gl_FogParameters {vec4  color;float density;float start;float end;float scale;};uniform gl_FogParameters gl_Fog;\n
in    highp uvec3 gl_NumWorkGroups;const highp uvec3 gl_WorkGroupSize = uvec3(1,1,1);in highp uvec3 gl_WorkGroupID;in highp uvec3 gl_LocalInvocationID;in highp uvec3 gl_GlobalInvocationID;in highp uint gl_LocalInvocationIndex;\n
in highp int gl_DeviceIndex;\n
attribute vec4  gl_Color;attribute vec4  gl_SecondaryColor;attribute vec3  gl_Normal;attribute vec4  gl_Vertex;attribute vec4  gl_MultiTexCoord0;attribute vec4  gl_MultiTexCoord1;attribute vec4  gl_MultiTexCoord2;attribute vec4  gl_MultiTexCoord3;attribute vec4  gl_MultiTexCoord4;attribute vec4  gl_MultiTexCoord5;attribute vec4  gl_MultiTexCoord6;attribute vec4  gl_MultiTexCoord7;attribute float gl_FogCoord;\n
in vec4  gl_Color;in vec4  gl_SecondaryColor;in vec3  gl_Normal;in vec4  gl_Vertex;in vec4  gl_MultiTexCoord0;in vec4  gl_MultiTexCoord1;in vec4  gl_MultiTexCoord2;in vec4  gl_MultiTexCoord3;in vec4  gl_MultiTexCoord4;in vec4  gl_MultiTexCoord5;in vec4  gl_MultiTexCoord6;in vec4  gl_MultiTexCoord7;in float gl_FogCoord;\n
        vec4  gl_ClipVertex;varying vec4  gl_FrontColor;varying vec4  gl_BackColor;varying vec4  gl_FrontSecondaryColor;varying vec4  gl_BackSecondaryColor;varying vec4  gl_TexCoord[];varying float gl_FogFragCoord;\n
    vec4  gl_ClipVertex;out vec4  gl_FrontColor;out vec4  gl_BackColor;out vec4  gl_FrontSecondaryColor;out vec4  gl_BackSecondaryColor;out vec4  gl_TexCoord[];out float gl_FogFragCoord;\n
vec4 gl_Position;float gl_PointSize;
out float gl_ClipDistance[];
out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];
vec4 gl_ClipVertex;vec4 gl_FrontColor;vec4 gl_BackColor;vec4 gl_FrontSecondaryColor;vec4 gl_BackSecondaryColor;vec4 gl_TexCoord[];float gl_FogFragCoord;
float gl_CullDistance[];
int gl_VertexID;
int gl_InstanceID;
in int gl_VertexIndex;in int gl_InstanceIndex;
in int gl_BaseVertexARB;in int gl_BaseInstanceARB;in int gl_DrawIDARB;
out int gl_ViewportIndex;out int gl_Layer;
in int gl_BaseVertex;in int gl_BaseInstance;in int gl_DrawID;
highp   vec4  gl_Position;mediump float gl_PointSize;
in highp int gl_VertexID;in highp int gl_InstanceID;
in highp int gl_VertexIndex;in highp int gl_InstanceIndex;
highp vec4  gl_Position;highp float gl_PointSize;
out gl_PerVertex {highp vec4  gl_Position;highp float gl_PointSize;};
in highp int gl_DeviceIndex;in highp int gl_ViewIndex;\n
in highp uint gl_ViewID_OVR;\n
in gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];
} gl_in[];in int gl_PrimitiveIDIn;out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];\n
};out int gl_PrimitiveID;out int gl_Layer;
out int gl_ViewportIndex;
out vec4 gl_ClipVertex;
in int gl_InvocationID;
in gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize;} gl_in[];\nin highp int gl_PrimitiveIDIn;in highp int gl_InvocationID;\nout gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize;};\nout highp int gl_PrimitiveID;out highp int gl_Layer;\n
in int gl_PatchVerticesIn;in int gl_PrimitiveID;in int gl_InvocationID;out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];
} gl_out[];patch out float gl_TessLevelOuter[4];patch out float gl_TessLevelInner[2];\n
out int gl_ViewportIndex;out int gl_Layer;\n
in highp int gl_PatchVerticesIn;in highp int gl_PrimitiveID;in highp int gl_InvocationID;out gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize;
} gl_out[];patch out highp float gl_TessLevelOuter[4];patch out highp float gl_TessLevelInner[2];patch out highp vec4 gl_BoundingBoxOES[2];\n
in int gl_PatchVerticesIn;in int gl_PrimitiveID;in vec3 gl_TessCoord;patch in float gl_TessLevelOuter[4];patch in float gl_TessLevelInner[2];out gl_PerVertex {vec4 gl_Position;float gl_PointSize;float gl_ClipDistance[];
in highp int gl_PatchVerticesIn;in highp int gl_PrimitiveID;in highp vec3 gl_TessCoord;patch in highp float gl_TessLevelOuter[4];patch in highp float gl_TessLevelInner[2];out gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize;
vec4  gl_FragCoord;bool  gl_FrontFacing;float gl_FragDepth;
vec2 gl_PointCoord;
out int gl_FragStencilRefARB;
vec4 gl_FragColor;
varying vec4  gl_Color;varying vec4  gl_SecondaryColor;varying vec4  gl_TexCoord[];varying float gl_FogFragCoord;
in float gl_ClipDistance[];
in float gl_FogFragCoord;in vec4  gl_TexCoord[];in vec4  gl_Color;in vec4  gl_SecondaryColor;
in gl_PerFragment {in float gl_FogFragCoord;in vec4  gl_TexCoord[];in vec4  gl_Color;in vec4  gl_SecondaryColor;};
flat in int gl_PrimitiveID;
flat in  int  gl_SampleID;     in  vec2 gl_SamplePosition;flat in  int  gl_SampleMaskIn[];     out int  gl_SampleMask[];
uniform int gl_NumSamples;
flat in int gl_Layer;flat in int gl_ViewportIndex;
in float gl_CullDistance[];bool gl_HelperInvocation;
mediump vec4 gl_FragCoord;        bool gl_FrontFacing;mediump vec4 gl_FragColor;mediump vec2 gl_PointCoord;
highp   vec4  gl_FragCoord;        bool  gl_FrontFacing;mediump vec2  gl_PointCoord;highp   float gl_FragDepth;
bool gl_HelperInvocation;flat in highp int gl_PrimitiveID;flat in highp int gl_Layer;
flat  in lowp     int gl_SampleID;      in mediump vec2 gl_SamplePosition;flat  in highp    int gl_SampleMaskIn[];     out highp    int gl_SampleMask[];
uniform lowp int gl_NumSamples;
highp float gl_FragDepthEXT;
uniform uint gl_SubGroupSizeARB;in uint     gl_SubGroupInvocationARB;in uint64_t gl_SubGroupEqMaskARB;in uint64_t gl_SubGroupGeMaskARB;in uint64_t gl_SubGroupGtMaskARB;in uint64_t gl_SubGroupLeMaskARB;in uint64_t gl_SubGroupLtMaskARB;\n
uniform uint gl_SubGroupSizeARB;flat in uint     gl_SubGroupInvocationARB;flat in uint64_t gl_SubGroupEqMaskARB;flat in uint64_t gl_SubGroupGeMaskARB;flat in uint64_t gl_SubGroupGtMaskARB;flat in uint64_t gl_SubGroupLeMaskARB;flat in uint64_t gl_SubGroupLtMaskARB;\n
flat in highp int gl_DeviceIndex;flat in highp int gl_ViewIndex;\n
in mediump uint  gl_SubgroupSize;in mediump uint  gl_SubgroupInvocationID;in highp   uvec4 gl_SubgroupEqMask;in highp   uvec4 gl_SubgroupGeMask;in highp   uvec4 gl_SubgroupGtMask;in highp   uvec4 gl_SubgroupLeMask;in highp   uvec4 gl_SubgroupLtMask;\n
flat in mediump uint  gl_SubgroupSize;flat in mediump uint  gl_SubgroupInvocationID;flat in highp   uvec4 gl_SubgroupEqMask;flat in highp   uvec4 gl_SubgroupGeMask;flat in highp   uvec4 gl_SubgroupGtMask;flat in highp   uvec4 gl_SubgroupLeMask;flat in highp   uvec4 gl_SubgroupLtMask;\n
highp   in uint  gl_NumSubgroups;highp   in uint  gl_SubgroupID;\n
flat in highp uint gl_ViewID_OVR;\n
const int gl_ScopeDevice      = 1;\n
const int gl_ScopeWorkgroup   = 2;\n
const int gl_ScopeSubgroup    = 3;\n
const int gl_ScopeInvocation  = 4;\n
const int gl_ScopeQueueFamily = 5;\n
const int gl_SemanticsRelaxed         = 0x0;\n
const int gl_SemanticsAcquire         = 0x2;\n
const int gl_SemanticsRelease         = 0x4;\n
const int gl_SemanticsAcquireRelease  = 0x8;\n
const int gl_SemanticsMakeAvailable   = 0x2000;\n
const int gl_SemanticsMakeVisible     = 0x4000;\n
const int gl_StorageSemanticsNone     = 0x0;\n
const int gl_StorageSemanticsBuffer   = 0x40;\n
const int gl_StorageSemanticsShared   = 0x100;\n
const int gl_StorageSemanticsImage    = 0x800;\n
const int gl_StorageSemanticsOutput   = 0x1000;\n
bool sparseTexelsResidentARB(int code);\n
 imageSize(readonly writeonly volatile coherent 
 textureSize(
,int);\n
imageSamples(readonly writeonly volatile coherent 
textureSamples(
vec2 textureQueryLod(
, float
, vec
int textureQueryLevels(
, int
, ivec
vec4 imageLoad(readonly volatile coherent 
void imageStore(writeonly volatile coherent 
vec4);\n
int sparseImageLoadARB(readonly volatile coherent 
, out 
highp int
highp uint
 imageAtomicAdd(volatile coherent 
 imageAtomicMin(volatile coherent 
 imageAtomicMax(volatile coherent 
 imageAtomicAnd(volatile coherent 
 imageAtomicOr(volatile coherent 
 imageAtomicXor(volatile coherent 
 imageAtomicExchange(volatile coherent 
, int, int, int
 imageAtomicCompSwap(volatile coherent 
, int, int, int, int, int
 imageAtomicLoad(volatile coherent 
, int, int, int);\n
void imageAtomicStore(volatile coherent 
float imageAtomicExchange(volatile coherent 
, float);\n
vec4 subpassLoad
vec4 
sparseTexel
texel
Clamp
,vec4
,float
,int
,float,float
,vec
,ivec
,out 
Offsets
,ivec2
const mediump int  gl_MaxVertexAttribs = %d;
const mediump int  gl_MaxVertexUniformVectors = %d;
const mediump int  gl_MaxVertexTextureImageUnits = %d;
const mediump int  gl_MaxCombinedTextureImageUnits = %d;
const mediump int  gl_MaxTextureImageUnits = %d;
const mediump int  gl_MaxFragmentUniformVectors = %d;
const mediump int  gl_MaxDrawBuffers = %d;
const mediump int  gl_MaxVaryingVectors = %d;
const mediump int  gl_MaxVertexOutputVectors = %d;
const mediump int  gl_MaxFragmentInputVectors = %d;
const mediump int  gl_MinProgramTexelOffset = %d;
const mediump int  gl_MaxProgramTexelOffset = %d;
const int gl_MaxGeometryInputComponents = %d;
const int gl_MaxGeometryOutputComponents = %d;
const int gl_MaxGeometryImageUniforms = %d;
const int gl_MaxGeometryTextureImageUnits = %d;
const int gl_MaxGeometryOutputVertices = %d;
const int gl_MaxGeometryTotalOutputComponents = %d;
const int gl_MaxGeometryUniformComponents = %d;
const int gl_MaxGeometryAtomicCounters = %d;
const int gl_MaxGeometryAtomicCounterBuffers = %d;
const int gl_MaxTessControlInputComponents = %d;
const int gl_MaxTessControlOutputComponents = %d;
const int gl_MaxTessControlTextureImageUnits = %d;
const int gl_MaxTessControlUniformComponents = %d;
const int gl_MaxTessControlTotalOutputComponents = %d;
const int gl_MaxTessEvaluationInputComponents = %d;
const int gl_MaxTessEvaluationOutputComponents = %d;
const int gl_MaxTessEvaluationTextureImageUnits = %d;
const int gl_MaxTessEvaluationUniformComponents = %d;
const int gl_MaxTessPatchComponents = %d;
const int gl_MaxPatchVertices = %d;
const int gl_MaxTessGenLevel = %d;
in gl_PerVertex {highp vec4 gl_Position;highp float gl_PointSize;} gl_in[gl_MaxPatchVertices];\n
const int  gl_MaxVertexAttribs = %d;
const int  gl_MaxVertexTextureImageUnits = %d;
const int  gl_MaxCombinedTextureImageUnits = %d;
const int  gl_MaxTextureImageUnits = %d;
const int  gl_MaxDrawBuffers = %d;
const int  gl_MaxLights = %d;
const int  gl_MaxClipPlanes = %d;
const int  gl_MaxTextureUnits = %d;
const int  gl_MaxTextureCoords = %d;
const int  gl_MaxVertexUniformComponents = %d;
const int  gl_MaxVaryingFloats = %d;
const int  gl_MaxFragmentUniformComponents = %d;
uniform mat4  gl_TextureMatrix[gl_MaxTextureCoords];uniform mat4  gl_TextureMatrixInverse[gl_MaxTextureCoords];uniform mat4  gl_TextureMatrixTranspose[gl_MaxTextureCoords];uniform mat4  gl_TextureMatrixInverseTranspose[gl_MaxTextureCoords];uniform vec4  gl_ClipPlane[gl_MaxClipPlanes];uniform gl_LightSourceParameters  gl_LightSource[gl_MaxLights];uniform gl_LightProducts gl_FrontLightProduct[gl_MaxLights];uniform gl_LightProducts gl_BackLightProduct[gl_MaxLights];uniform vec4  gl_TextureEnvColor[gl_MaxTextureImageUnits];uniform vec4  gl_EyePlaneS[gl_MaxTextureCoords];uniform vec4  gl_EyePlaneT[gl_MaxTextureCoords];uniform vec4  gl_EyePlaneR[gl_MaxTextureCoords];uniform vec4  gl_EyePlaneQ[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneS[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneT[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneR[gl_MaxTextureCoords];uniform vec4  gl_ObjectPlaneQ[gl_MaxTextureCoords];
const int gl_MaxClipDistances = %d;
const int gl_MaxVaryingComponents = %d;
const int gl_MaxGeometryVaryingComponents = %d;
const int gl_MaxVertexOutputComponents = %d;
const int gl_MaxFragmentInputComponents = %d;
} gl_in[gl_MaxPatchVertices];\n
const int gl_MaxViewports = %d;
const int gl_MaxCombinedImageUnitsAndFragmentOutputs = %d;
const int gl_MaxImageSamples = %d;
const int gl_MaxTessControlImageUniforms = %d;
const int gl_MaxTessEvaluationImageUniforms = %d;
const int gl_MaxTransformFeedbackBuffers = %d;
const int gl_MaxTransformFeedbackInterleavedComponents = %d;
const int gl_MaxImageUnits = %d;
const int gl_MaxCombinedShaderOutputResources = %d;
const int gl_MaxVertexImageUniforms = %d;
const int gl_MaxFragmentImageUniforms = %d;
const int gl_MaxCombinedImageUniforms = %d;
const int gl_MaxVertexAtomicCounters = %d;
const int gl_MaxFragmentAtomicCounters = %d;
const int gl_MaxCombinedAtomicCounters = %d;
const int gl_MaxAtomicCounterBindings = %d;
const int gl_MaxVertexAtomicCounterBuffers = %d;
const int gl_MaxFragmentAtomicCounterBuffers = %d;
const int gl_MaxCombinedAtomicCounterBuffers = %d;
const int gl_MaxAtomicCounterBufferSize = %d;
const int gl_MaxTessControlAtomicCounters = %d;
const int gl_MaxTessEvaluationAtomicCounters = %d;
const int gl_MaxTessControlAtomicCounterBuffers = %d;
const int gl_MaxTessEvaluationAtomicCounterBuffers = %d;
const ivec3 gl_MaxComputeWorkGroupCount = ivec3(%d,%d,%d);
const ivec3 gl_MaxComputeWorkGroupSize = ivec3(%d,%d,%d);
const int gl_MaxComputeUniformComponents = %d;
const int gl_MaxComputeTextureImageUnits = %d;
const int gl_MaxComputeImageUniforms = %d;
const int gl_MaxComputeAtomicCounters = %d;
const int gl_MaxComputeAtomicCounterBuffers = %d;
const int gl_MaxCullDistances = %d;
const int gl_MaxCombinedClipAndCullDistances = %d;
const int gl_MaxSamples = %d;
gl_BaseVertexARB
gl_BaseInstanceARB
gl_DrawIDARB
gl_BaseVertex
gl_BaseInstance
gl_DrawID
gl_SubGroupSizeARB
gl_SubGroupInvocationARB
gl_SubGroupEqMaskARB
gl_SubGroupGeMaskARB
gl_SubGroupGtMaskARB
gl_SubGroupLeMaskARB
gl_SubGroupLtMaskARB
ballotARB
readInvocationARB
readFirstInvocationARB
anyInvocationARB
allInvocationsARB
allInvocationsEqualARB
gl_Normal
gl_Vertex
gl_MultiTexCoord0
gl_MultiTexCoord1
gl_MultiTexCoord2
gl_MultiTexCoord3
gl_MultiTexCoord4
gl_MultiTexCoord5
gl_MultiTexCoord6
gl_MultiTexCoord7
gl_FogCoord
gl_VertexIndex
gl_InstanceIndex
shadow2DEXT
shadow2DProjEXT
gl_BoundingBoxOES
gl_PatchVerticesIn
gl_TessLevelOuter
gl_TessLevelInner
gl_TessCoord
gl_DeviceIndex
gl_ViewIndex
gl_SubgroupSize
gl_SubgroupInvocationID
gl_SubgroupEqMask
gl_SubgroupGeMask
gl_SubgroupGtMask
gl_SubgroupLeMask
gl_SubgroupLtMask
gl_HelperInvocation
gl_FragStencilRefARB
gl_SampleID
gl_SamplePosition
gl_SampleMaskIn
gl_SampleMask
gl_NumSamples
texture1DLod
texture3DLod
texture1DProjLod
texture3DProjLod
shadow1DLod
shadow2DLod
shadow1DProjLod
shadow2DProjLod
texture1DGradARB
texture1DProjGradARB
texture3DGradARB
texture3DProjGradARB
shadow1DGradARB
shadow1DProjGradARB
shadow2DGradARB
shadow2DProjGradARB
texture2DRectGradARB
texture2DRectProjGradARB
shadow2DRectGradARB
shadow2DRectProjGradARB
dFdxFine
dFdyFine
dFdxCoarse
dFdyCoarse
sparseTextureARB
sparseTextureLodARB
sparseTextureOffsetARB
sparseTexelFetchARB
sparseTexelFetchOffsetARB
sparseTextureLodOffsetARB
sparseTextureGradARB
sparseTextureGradOffsetARB
sparseTextureGatherARB
sparseTextureGatherOffsetARB
sparseTextureGatherOffsetsARB
sparseImageLoadARB
sparseTextureClampARB
sparseTextureOffsetClampARB
sparseTextureGradClampARB
sparseTextureGradOffsetClampARB
textureClampARB
textureOffsetClampARB
textureGradClampARB
textureGradOffsetClampARB
gl_ScopeDevice
gl_ScopeWorkgroup
gl_ScopeSubgroup
gl_ScopeInvocation
gl_SemanticsRelaxed
gl_SemanticsAcquire
gl_SemanticsRelease
gl_SemanticsAcquireRelease
gl_SemanticsMakeAvailable
gl_SemanticsMakeVisible
gl_StorageSemanticsNone
gl_StorageSemanticsBuffer
gl_StorageSemanticsShared
gl_StorageSemanticsImage
gl_StorageSemanticsOutput
controlBarrier
gl_NumSubgroups
gl_SubgroupID
halfBitsToInt16
halfBitsToUint16
int16BitsToHalf
uint16BitsToHalf
packDouble2x32
unpackDouble2x32
atomicLoad
atomicStore
atomicCounterAdd
atomicCounterSubtract
atomicCounterMin
atomicCounterMax
atomicCounterAnd
atomicCounterOr
atomicCounterXor
atomicCounterExchange
atomicCounterCompSwap
noise1
noise2
noise3
noise4
ftransform
texture1DProj
shadow2DRect
shadow2DRectProj
texture3DProj
shadow1D
shadow2D
shadow1DProj
shadow2DProj
sparseTexelsResidentARB
gl_MaxTransformFeedbackBuffers
gl_MaxTransformFeedbackInterleavedComponents
gl_MaxViewports
ResType
indexable
Extension %s not supported for this physical device
\n\v\f\r
\t\n\v\f\r
\t\n\v\f\r
\t\n\v\f\r
\t\n\v\f\r
\t\n\v\f\r
\t\n\v\f\r
\n\v\f\r
 !%&'()*+,-./01234
\t\n\v\r\f
\t#$"
switchState
invalid unordered_map<K, T> key
<bad token>
~!%^&*()-+=|,.<>/?;:[]{}#\
define
undef
elif
endif
ifdef
ifndef
pragma
extension
include
must be followed by macro name
bad argument
duplicate macro parameter
missing parenthesis
Macro redefined; different number of arguments:
Macro redefined; different argument names:
Macro redefined; different substitutions:
#undef
can only be followed by a single macro name
#if/#ifdef/#ifndef
maximum nesting depth exceeded
#elif
#elif after #else
#else
#else after #else
unexpected tokens following directive
#line
nonportable when expanded from macros for preprocessor expression
cannot use in preprocessor expression when expanded from macros
preprocessor evaluation
incorrect directive, expected identifier
expected ')'
bad expression
division by 0
can't evaluate expression
undefined macro in expression not allowed in es profile
#ifndef
unexpected tokens following #ifdef directive - expected a newline
#include
must be followed by a header name
expected newline after header name:
extra content after header name:
Could not process include directive
for header name: %s
must by followed by an integral literal
filename-based #line
#error
directive must end with a newline
invalid preprocessor command
must occur first in shader
must be followed by version number
bad profile name; use es, core, or compatibility
bad tokens following profile -- expected newline
extension name not specified
extension name expected
':' missing after extension name
behavior for extension not specified
extra tokens -- expected newline
mismatched statements
invalid directive:
invalid directive
header name too long
filename-based __FILE__
macro expansion
End of input in macro
End of line in macro substitution:
unexpected '#'
Too few args in Macro
Too many args in macro
Starting parse\n
Stack size increased to %lu\n
Entering state %d\n
Reading a token: 
Now at end of input.\n
Next token is
Shifting
32-bit signed literal
unsigned literal
64-bit integer literal
64-bit unsigned integer literal
16-bit integer literal
16-bit unsigned integer literal
double literal
half float literal
function call, method, or subroutine call expected
incomplete method syntax
bitwise not
bit shift left
bit shift right
array comparison
bitwise exclusive or
bitwise inclusive or
array assignment
bit-shift left assign
bit-shift right assign
bitwise-and assign
bitwise-xor assign
bitwise-or assign
precision statement
cannot be an argument type except for '(void)'
arrayed type
unsigned integer
8-bit signed integer
8-bit unsigned integer
16-bit signed integer
16-bit unsigned integer
32-bit signed integer
32-bit unsigned integer
64-bit integer
64-bit unsigned integer
double vector
half float vector
float32_t vector
float64_t vector
8-bit signed integer vector
16-bit signed integer vector
32-bit signed integer vector
64-bit integer vector
unsigned integer vector
8-bit unsigned integer vector
16-bit unsigned integer vector
32-bit unsigned integer vector
64-bit unsigned integer vector
double matrix
half float matrix
float32_t matrix
float64_t matrix
atomic counter types
subpass input
expected type name
highp precision qualifier
mediump precision qualifier
lowp precision qualifier
duplicate member name:
{ } style initializers
cannot appear outside switch statement
cannot be nested inside control flow
limitation
while loops not available
do-while loops not available
break statement only allowed in switch and loops
extraneous semicolon
-> $$ =
Error: discarding
Error: popping
Cleanup: discarding lookahead
Cleanup: popping
token
nterm
%s %s (
$end
$undefined
ATTRIBUTE
VARYING
FLOAT16_T
FLOAT
FLOAT32_T
DOUBLE
FLOAT64_T
CONST
BOOL
UINT
INT64_T
UINT64_T
INT32_T
UINT32_T
INT16_T
UINT16_T
INT8_T
UINT8_T
BREAK
CONTINUE
ELSE
DISCARD
RETURN
SWITCH
CASE
DEFAULT
SUBROUTINE
BVEC2
BVEC3
BVEC4
IVEC2
IVEC3
IVEC4
UVEC2
UVEC3
UVEC4
I64VEC2
I64VEC3
I64VEC4
U64VEC2
U64VEC3
U64VEC4
I32VEC2
I32VEC3
I32VEC4
U32VEC2
U32VEC3
U32VEC4
I16VEC2
I16VEC3
I16VEC4
U16VEC2
U16VEC3
U16VEC4
I8VEC2
I8VEC3
I8VEC4
U8VEC2
U8VEC3
U8VEC4
VEC2
VEC3
VEC4
MAT2
MAT3
MAT4
CENTROID
INOUT
UNIFORM
PATCH
SAMPLE
BUFFER
SHARED
NONUNIFORM
PAYLOADNV
PAYLOADINNV
HITATTRNV
COHERENT
VOLATILE
RESTRICT
READONLY
WRITEONLY
DEVICECOHERENT
QUEUEFAMILYCOHERENT
WORKGROUPCOHERENT
SUBGROUPCOHERENT
NONPRIVATE
DVEC2
DVEC3
DVEC4
DMAT2
DMAT3
DMAT4
F16VEC2
F16VEC3
F16VEC4
F16MAT2
F16MAT3
F16MAT4
F32VEC2
F32VEC3
F32VEC4
F32MAT2
F32MAT3
F32MAT4
F64VEC2
F64VEC3
F64VEC4
F64MAT2
F64MAT3
F64MAT4
NOPERSPECTIVE
FLAT
SMOOTH
LAYOUT
EXPLICITINTERPAMD
PERVERTEXNV
PERPRIMITIVENV
PERVIEWNV
PERTASKNV
MAT2X2
MAT2X3
MAT2X4
MAT3X2
MAT3X3
MAT3X4
MAT4X2
MAT4X3
MAT4X4
DMAT2X2
DMAT2X3
DMAT2X4
DMAT3X2
DMAT3X3
DMAT3X4
DMAT4X2
DMAT4X3
DMAT4X4
F16MAT2X2
F16MAT2X3
F16MAT2X4
F16MAT3X2
F16MAT3X3
F16MAT3X4
F16MAT4X2
F16MAT4X3
F16MAT4X4
F32MAT2X2
F32MAT2X3
F32MAT2X4
F32MAT3X2
F32MAT3X3
F32MAT3X4
F32MAT4X2
F32MAT4X3
F32MAT4X4
F64MAT2X2
F64MAT2X3
F64MAT2X4
F64MAT3X2
F64MAT3X3
F64MAT3X4
F64MAT4X2
F64MAT4X3
F64MAT4X4
ATOMIC_UINT
ACCSTRUCTNV
SAMPLER1D
SAMPLER2D
SAMPLER3D
SAMPLERCUBE
SAMPLER1DSHADOW
SAMPLER2DSHADOW
SAMPLERCUBESHADOW
SAMPLER1DARRAY
SAMPLER2DARRAY
SAMPLER1DARRAYSHADOW
SAMPLER2DARRAYSHADOW
ISAMPLER1D
ISAMPLER2D
ISAMPLER3D
ISAMPLERCUBE
ISAMPLER1DARRAY
ISAMPLER2DARRAY
USAMPLER1D
USAMPLER2D
USAMPLER3D
USAMPLERCUBE
USAMPLER1DARRAY
USAMPLER2DARRAY
SAMPLER2DRECT
SAMPLER2DRECTSHADOW
ISAMPLER2DRECT
USAMPLER2DRECT
SAMPLERBUFFER
ISAMPLERBUFFER
USAMPLERBUFFER
SAMPLERCUBEARRAY
SAMPLERCUBEARRAYSHADOW
ISAMPLERCUBEARRAY
USAMPLERCUBEARRAY
SAMPLER2DMS
ISAMPLER2DMS
USAMPLER2DMS
SAMPLER2DMSARRAY
ISAMPLER2DMSARRAY
USAMPLER2DMSARRAY
SAMPLEREXTERNALOES
F16SAMPLER1D
F16SAMPLER2D
F16SAMPLER3D
F16SAMPLER2DRECT
F16SAMPLERCUBE
F16SAMPLER1DARRAY
F16SAMPLER2DARRAY
F16SAMPLERCUBEARRAY
F16SAMPLERBUFFER
F16SAMPLER2DMS
F16SAMPLER2DMSARRAY
F16SAMPLER1DSHADOW
F16SAMPLER2DSHADOW
F16SAMPLER1DARRAYSHADOW
F16SAMPLER2DARRAYSHADOW
F16SAMPLER2DRECTSHADOW
F16SAMPLERCUBESHADOW
F16SAMPLERCUBEARRAYSHADOW
SAMPLER
SAMPLERSHADOW
TEXTURE1D
TEXTURE2D
TEXTURE3D
TEXTURECUBE
TEXTURE1DARRAY
TEXTURE2DARRAY
ITEXTURE1D
ITEXTURE2D
ITEXTURE3D
ITEXTURECUBE
ITEXTURE1DARRAY
ITEXTURE2DARRAY
UTEXTURE1D
UTEXTURE2D
UTEXTURE3D
UTEXTURECUBE
UTEXTURE1DARRAY
UTEXTURE2DARRAY
TEXTURE2DRECT
ITEXTURE2DRECT
UTEXTURE2DRECT
TEXTUREBUFFER
ITEXTUREBUFFER
UTEXTUREBUFFER
TEXTURECUBEARRAY
ITEXTURECUBEARRAY
UTEXTURECUBEARRAY
TEXTURE2DMS
ITEXTURE2DMS
UTEXTURE2DMS
TEXTURE2DMSARRAY
ITEXTURE2DMSARRAY
UTEXTURE2DMSARRAY
F16TEXTURE1D
F16TEXTURE2D
F16TEXTURE3D
F16TEXTURE2DRECT
F16TEXTURECUBE
F16TEXTURE1DARRAY
F16TEXTURE2DARRAY
F16TEXTURECUBEARRAY
F16TEXTUREBUFFER
F16TEXTURE2DMS
F16TEXTURE2DMSARRAY
SUBPASSINPUT
SUBPASSINPUTMS
ISUBPASSINPUT
ISUBPASSINPUTMS
USUBPASSINPUT
USUBPASSINPUTMS
F16SUBPASSINPUT
F16SUBPASSINPUTMS
IMAGE1D
IIMAGE1D
UIMAGE1D
IMAGE2D
IIMAGE2D
UIMAGE2D
IMAGE3D
IIMAGE3D
UIMAGE3D
IMAGE2DRECT
IIMAGE2DRECT
UIMAGE2DRECT
IMAGECUBE
IIMAGECUBE
UIMAGECUBE
IMAGEBUFFER
IIMAGEBUFFER
UIMAGEBUFFER
IMAGE1DARRAY
IIMAGE1DARRAY
UIMAGE1DARRAY
IMAGE2DARRAY
IIMAGE2DARRAY
UIMAGE2DARRAY
IMAGECUBEARRAY
IIMAGECUBEARRAY
UIMAGECUBEARRAY
IMAGE2DMS
IIMAGE2DMS
UIMAGE2DMS
IMAGE2DMSARRAY
IIMAGE2DMSARRAY
UIMAGE2DMSARRAY
F16IMAGE1D
F16IMAGE2D
F16IMAGE3D
F16IMAGE2DRECT
F16IMAGECUBE
F16IMAGE1DARRAY
F16IMAGE2DARRAY
F16IMAGECUBEARRAY
F16IMAGEBUFFER
F16IMAGE2DMS
F16IMAGE2DMSARRAY
STRUCT
VOID
WHILE
IDENTIFIER
TYPE_NAME
FLOATCONSTANT
DOUBLECONSTANT
INT16CONSTANT
UINT16CONSTANT
INT32CONSTANT
UINT32CONSTANT
INTCONSTANT
UINTCONSTANT
INT64CONSTANT
UINT64CONSTANT
BOOLCONSTANT
FLOAT16CONSTANT
LEFT_OP
RIGHT_OP
INC_OP
DEC_OP
LE_OP
GE_OP
EQ_OP
NE_OP
AND_OP
OR_OP
XOR_OP
MUL_ASSIGN
DIV_ASSIGN
ADD_ASSIGN
MOD_ASSIGN
LEFT_ASSIGN
RIGHT_ASSIGN
AND_ASSIGN
XOR_ASSIGN
OR_ASSIGN
SUB_ASSIGN
LEFT_PAREN
RIGHT_PAREN
LEFT_BRACKET
RIGHT_BRACKET
LEFT_BRACE
RIGHT_BRACE
COMMA
COLON
EQUAL
SEMICOLON
BANG
DASH
TILDE
PLUS
STAR
SLASH
PERCENT
LEFT_ANGLE
RIGHT_ANGLE
VERTICAL_BAR
CARET
AMPERSAND
QUESTION
INVARIANT
PRECISE
HIGH_PRECISION
MEDIUM_PRECISION
LOW_PRECISION
PRECISION
PACKED
RESOURCE
SUPERP
$accept
variable_identifier
primary_expression
postfix_expression
integer_expression
function_call
function_call_or_method
function_call_generic
function_call_header_no_parameters
function_call_header_with_parameters
function_call_header
function_identifier
unary_expression
unary_operator
multiplicative_expression
additive_expression
shift_expression
relational_expression
equality_expression
and_expression
exclusive_or_expression
inclusive_or_expression
logical_and_expression
logical_xor_expression
logical_or_expression
conditional_expression
assignment_expression
assignment_operator
constant_expression
declaration
block_structure
identifier_list
function_prototype
function_declarator
function_header_with_parameters
function_header
parameter_declarator
parameter_declaration
parameter_type_specifier
init_declarator_list
single_declaration
fully_specified_type
invariant_qualifier
interpolation_qualifier
layout_qualifier
layout_qualifier_id_list
layout_qualifier_id
precise_qualifier
type_qualifier
single_type_qualifier
storage_qualifier
non_uniform_qualifier
type_name_list
type_specifier
array_specifier
type_specifier_nonarray
precision_qualifier
struct_specifier
struct_declaration_list
struct_declaration
struct_declarator_list
struct_declarator
initializer_list
declaration_statement
statement
simple_statement
compound_statement
statement_no_new_scope
statement_scoped
compound_statement_no_new_scope
statement_list
expression_statement
selection_statement
selection_statement_nonattributed
selection_rest_statement
condition
switch_statement
switch_statement_nonattributed
switch_statement_list
case_label
iteration_statement
iteration_statement_nonattributed
$@10
$@11
$@12
for_init_statement
conditionopt
for_rest_statement
jump_statement
translation_unit
external_declaration
function_definition
$@13
attribute_list
single_attribute
\t%\t-\t5\t=\tE\tM\tU\t]\tb\tg\tl\tq\tv\t{\t
\n#\n(\n0\n5\n=\nB\nJ\nO\nW\n\\nd\ni\nq\nv\n{\n
\v \v%\v*\v/\v7\v<\vA\vF\vN\vS\vX\v]\ve\vj\vo\vt\v|\v
\f"\f+\f4\f:\f@\fF\fL\fQ\fa\ff\fk\fs\fs\f~\f~\f
\r\t\r\n\r\v\r\f\r\r\r
\r$\r%\r)\r)\r0\r0\r>\rA\rI\rQ\r\\r]\ra\rd\rj\rq\ru\r}\r
Reducing stack by rule %d (line %lu):\n
   $%d = 
Stack now
syntax error, unexpected %s
syntax error, unexpected %s, expecting %s
syntax error, unexpected %s, expecting %s or %s
syntax error, unexpected %s, expecting %s or %s or %s
syntax error, unexpected %s, expecting %s or %s or %s or %s
Deleting
can't modify a readonly buffer
can't modify a sampler
can't modify an atomic_uint
can't read from writeonly object: 
index out of range '%d'
array index out of range '%d'
vector index out of range '%d'
matrix index out of range '%d'
vector swizzle too long
unknown swizzle selection
vector swizzle selection out of range
vector swizzle selectors not from the same set
failed to insert the global constant buffer
inductive loop index modified
Non-constant-index-expression
token pasting (##)
branch
dont_flatten
flatten
unroll
loop
dont_unroll
dependency_infinite
dependency_length
attribute with arguments not recognized, skipping
attribute does not apply to a selection
attribute does not apply to a switch
must be positive
expected a single integer argument
attribute does not apply to a loop
Access violation - no RTTI data!
Bad dynamic_cast!
\t\n\v\f\r
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
\t\n\v\f\r
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~
( 8PX
700WP
`h````
xpxxxx
('8PW
700PP
`h`hhh
xwpwpp
CorExitProcess
2]fQ\t?5!
&~){
FF\n@
<acosf
?asinf
H>p&
k>4\tF
Q>.3Z<
p>.G1
?t_v>
I;u>A
*Bw>
\n~Nu
{&1q>
P|> ,o
@Ao>
!oi 
Cy2@K>
c>F2
p>Y3
q>F,3
fGa>
rNm>)
`>n>w%
jeTb
Wak>E
|>fj;
^W>;
7yp>
11UT
E|@]
}=H>
ZSq>
A`1w>
y>h\n
)/o>\t
IW`>
9g>@3
z>@G'h
_W>6
mO-B
\tJR>8o
M'y>0y
>rm~
c><m
!B>\
B\fu>
>vR%
GrJoq>@
>8'3
z>h4
/so>
>0K>
{]a>
J `>,
!\t@cb
yE>cb
UUUU
?8UUUUU
?=+!
?y2@
?\vxMW
?m.t
?6W 
8+V=
W 7x
?2}l
?\vS^>#/
BC1%M
?\rz0w
?id7
?\n\t;ud
?U[y[
3+5<t
?`B$
#9fm
?W(~N
?3Fx
?^1]
?Ji@9
lWi]
ujGs?
UUUUUU
H>r1
[*ncd>TQ
\>$hkDh$h>
>uZ>`
6\fXO>
b>*>
i>VF
$E>\t
f>c.
&\t$@06p
8J;@ts
4\tgA
 B\kji2
\veBV
B,fK
@vN?
@-qS
4\tgA
 B\kji2
\veBV
B,fK
Ccoshf
%Ak=
= {[8V
?N]TUUU
UUUUU
TUUU
?UUUUUU
G@c.
?UUUUUU
?UUUUUU
?UUUUUU
?UUUUUU
`1?;
UUUUUU
UUUUUU
UUUUUU
TUUUU
#Ib?
X>0S
j%M>
#4o>w
)l>Y
>0Av
c>v\tk
k>RU
9a>d
e>B!
pm>6/
EiU>
^>&qN
!\>G[
_f>PH
Z>w_F
hj>>d
_>h_
l>^b
L-n>4
gd>Z
@pn>6
g>?x
*Vc>L
oI>b
e>US
Y>kX>
,HR><y5
TUUUU
#Ib?
<?WUUUUU
;BIb?
#Ib?AG
;BIb?
TUUUU
?WUUUUU
UUUUUU
UUUUUU
"e?<<<<<<l?
)a?8
xT?V
m?H7
`+!]?
l@6 \v?
b?^Cy\r
_:n?
j?V()
]|^?
Il?333333c?
,?%[
:i/?
IY?\f
i\fH?
o?GS
c?S&
.i?0@I
d?000000`?
\$gm?
Tg?/
+[?F
P?:E
hb:?
)|B?d!\vY
BF?\v
n]?iJ
\nh?oT
L?UUUUUUU?
e?:*
o?@Q\n
D\n`?
x)?\nP
WaNd?
j?{$*
&?PPPPPPP?
9D\v^?
FfW?
H+c?
0X8b?~
%GoU?*
`?& 
(T?j?Y
%9b?
%`a?
fa?'
$Ib?s
..om?
T$@E
E[\rn?gc
f?!+
7?GX
NQ?s
Zod(^?
\rl?Y
C5R?\t
`?8H
D W?{W
N3`d?
P?2+
QAf?
fWi?
qS>g?h3
?R0I?
8ke?;
c?FA@s}
lH`?
UUUUUU
UUUUUU
UUUUUU
C.V@
?UUUUUU
TUUUU
#Ib?
3 FB
Ok!\
?7{KV\nU
?+>^m
EiUL
?lZE
?kxG2)
?TY,>5
?&l|
?!5WOo
?E=$% B
?%<q
@p^_
?49HoKC
?\/k
3?tr
&P?z
[&-*
?UUUUUU
?UUUUUU
?UUUUUU
?1cb
=1cb
H>r1
[*ncd>TQ
\>$hkDh$h>
>uZ>`
6\fXO>
b>*>
i>VF
$E>\t
f>c.
&\t$@06p
8J;@ts
4\tgA
 B\kji2
\veBV
B,fK
@vN?
@-qS
4\tgA
 B\kji2
\veBV
B,fK
Csinhf
sqrtf
d8L2
[aOni*{
@2&@
"RP(
eLK(w
m\nXo
FEMh\f
h0'D
owM&
~ $s%r
@b;zO]
$qE}
;*xh
["93
iu+-,
\lo}
obwQ4
&Sgw
R\tE]
?nz(
0+L\v
=87M
v2!L.2
\tcQr
X/4B
k=yI
^<V7w
W&|.
INITY
inity
SNAN)
snan)
IND)ind)
?UUUUUU
?UUUUUU
?JV8f
?JV8f
]-?Z8
?1cb
AUUUUUU
?1cb
 8}+M8
X?fff?;
__based(
__cdecl
__pascal
__stdcall
__thiscall
__fastcall
__vectorcall
__clrcall
__eabi
__swift
__ptr64
__restrict
__unaligned
restrict(
 new
 delete
operator
`vftable'
`vbtable'
`vcall'
`typeof'
`local static guard'
`string'
`vbase destructor'
`vector deleting destructor'
`default constructor closure'
`scalar deleting destructor'
`vector constructor iterator'
`vector destructor iterator'
`vector vbase constructor iterator'
`virtual displacement map'
`eh vector constructor iterator'
`eh vector destructor iterator'
`eh vector vbase constructor iterator'
`copy constructor closure'
`udt returning'
`RTTI
`local vftable'
`local vftable constructor closure'
 new[]
 delete[]
`omni callsig'
`placement delete closure'
`placement delete[] closure'
`managed vector constructor iterator'
`managed vector destructor iterator'
`eh vector copy constructor iterator'
`eh vector vbase copy constructor iterator'
`dynamic initializer for '
`dynamic atexit destructor for '
`vector copy constructor iterator'
`vector vbase copy constructor iterator'
`managed vector copy constructor iterator'
`local static thread guard'
operator "" 
operator co_await
 Type Descriptor'
 Base Class Descriptor at (
 Base Class Array'
 Class Hierarchy Descriptor'
 Complete Object Locator'
\t\n\v\f\r
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
Sunday
Monday
Tuesday
Wednesday
Thursday
Friday
Saturday
January
February
March
April
June
July
August
September
October
November
December
MM/dd/yy
dddd, MMMM dd, yyyy
HH:mm:ss
AreFileApisANSI
EnumSystemLocalesEx
GetDateFormatEx
GetTimeFormatEx
GetUserDefaultLocaleName
IsValidLocaleName
LCIDToLocaleName
LocaleNameToLCID
AppPolicyGetProcessTerminationMethod
NAN(SNAN)
nan(snan)
NAN(IND)
nan(ind)
e+000
UTF-8
UTF-16LEUNICODE
UUUUUU
UUUUUU
;1cb
=1cb
@^8U)zj
\fX!t5~
)h-F
sHF'
;1cb
=1cb
8Csinf
cosf
tanf
UUUUUU
UUUUUU
?{Q}<
?8bunz8
?'*6
?)TH
?%"U
]{f\f
?]%>
?'Za
?@En[vP
l>*>
`>r1
[Rm>
h>1my
T>u$
[*ncd>0
 C>TQ
\>$o
S>$hkDh$h>[2
>uZ>
6\fXO>\ntA
9=[>
f>*>
UA>N0Wl
)>$=
\nk>oB
i>\r`
N>VF
f>~\n
9>expf
atan2
fabs
_cabs
_hypot
fmod
_logb
_nextafter
.>\rfJBGo
>>uw
~0\f.>
n">3
a'>/
U,>q
9>70
\vA03>A|
Q5rHg,>
<>#n2
c0&>`
hj.>
U<>.
7>m_
:>K5
j>>A?1
\C>S
LWG>
.>PJ;I:qE>
Y8a:
0E>X
7>I0
:>t6k'
=e2m
N>A|
])6M>&
!>&'
CWD>~3
:>)*\tv
_oD>Kg
AK>(v
fD>b
-BH>t
CL:>8
F>:\f
6NK>
hj>>
51>W
\vG>8
E>nEA
7~xh
a6>r
f4">
\r^O>
;>g_
N>O=I9
F>qUxv
MR[>
LZ>,
?rAj
]>^b
/2GG>!B
Z\>z8
OF>;^
LWW>
)yIx
1]>P
\rC#>
]>)2X
:$R>
eT>%
9[>Q
[>\tt
:>D8
zY;>u:m\t
P>q_Y~
0><[cZUg^>
=>~O
v}`[>
_>jj
oI>O7
F>\nU
^RfN>
G>US
Y>kX>M
dRL>
,HR>O
A>l$/
H[><y5
?qBJ
l@6 
?-hk
OZQ%
?d!\vY
-)4d
?:kP<
?UUUUUU
?f`Y4
?QY^&
?U)#
g\fG\v
?ysB
?\r'u_
?$G4
?30]
G\n&s
?7zQ6$
logf
7h>?8
d8-t
{w8&-
o9sp
]u9g
-9D\t/9a
\t9sv
& 96
?powf
\fX!t5~
)h-F
sHF'
\fX!t5~
)h-F
sHF'
1#INF
1#QNAN
1#SNAN
1#IND
UUUUUU
UUUUUU
TUUUU
#Ib?
\r.3i
=imb;D
=W>6
\vz\t>
:\t\tr
>[^j
>Kb|
+>De
1<.\t/>:
11Y@
/>58d%
MJ$>
H\v*>
>cQ6
\f!>6'Y
>jtm}S
>77:
)>6{1n
r\tVr.>T
+f)>0'
\f4\n>
.>\f5b
Lj[;>
3>fvw
;H9>&X
*StO9>T
.>Tu\n\f.(!>
p\r>%@
n03>Pu
/>\tV
S9>H
.\f0>
x.&>
K~Je#>!
-/!>\f
(>aI
=cQ6
+M<7>
*>f[
o ->
l(>>
\n"I\vc(>\,
ET5>
;>9l
mG4>
bp(=>?g
36,>
37>k
~X3>
6>J`
?>!T
4<>\v0A
BC?>6t9^\tc:>
8'>0
'._M
=4<,
BF>^G
K&>.yC
B\r)>
 'L>[
.xJ>Hf
y\PD>!
|b=})>
c [1>H'
dL?>
uzKs@>
3>N;kU
\tkE>fvw
eF>t
L>ev
A>pP&
V6E>`"(5
,=>B
">}t
0iN>/
+h->|
@>%>b
RSDS
?LLD PDB.
libGLESv2.dll.pdb
libGLESv2.dll
\t\t\t\n\t\v\t\f\t\r\t
\t \t!\t"\t#\t$\t%\t&\t'\t(\t)\t*\t+\t,\t-\t.\t/\t0\t1\t2\t3\t4\t5\t6\t7\t8\t9\t:\t;\t<\t=\t>\t?\t@\tA\tB\tC\tD\tE\tF\tG\tH\tI\tJ\tK\tL\tM\tN\tO\tP\tQ\tR\tS\tT\tU\tV\tW\tX\tY\tZ\t[\t\\t]\t^\t_\t`\ta\tb\tc\td\te\tf\tg\th\ti\tj\tk\tl\tm\tn\to\tp\tq\tr\ts\tt\tu\tv\tw\tx\ty\tz\t{\t|\t}\t~\t
??0PlatformMethods@angle@@QEAA@XZ
??4PlatformMethods@angle@@QEAAAEAU01@$$QEAU01@@Z
??4PlatformMethods@angle@@QEAAAEAU01@AEBU01@@Z
?ActiveShaderProgram@gl@@YAXII@Z
?ActiveShaderProgramContextANGLE@gl@@YAXPEAXII@Z
?ActiveTexture@gl@@YAXI@Z
?ActiveTextureContextANGLE@gl@@YAXPEAXI@Z
?AlphaFunc@gl@@YAXIM@Z
?AlphaFuncContextANGLE@gl@@YAXPEAXIM@Z
?AlphaFuncx@gl@@YAXIH@Z
?AlphaFuncxContextANGLE@gl@@YAXPEAXIH@Z
?AttachShader@gl@@YAXII@Z
?AttachShaderContextANGLE@gl@@YAXPEAXII@Z
?BeginQuery@gl@@YAXII@Z
?BeginQueryContextANGLE@gl@@YAXPEAXII@Z
?BeginQueryEXT@gl@@YAXII@Z
?BeginQueryEXTContextANGLE@gl@@YAXPEAXII@Z
?BeginTransformFeedback@gl@@YAXI@Z
?BeginTransformFeedbackContextANGLE@gl@@YAXPEAXI@Z
?BindAPI@egl@@YAII@Z
?BindAttribLocation@gl@@YAXIIPEBD@Z
?BindAttribLocationContextANGLE@gl@@YAXPEAXIIPEBD@Z
?BindBuffer@gl@@YAXII@Z
?BindBufferBase@gl@@YAXIII@Z
?BindBufferBaseContextANGLE@gl@@YAXPEAXIII@Z
?BindBufferContextANGLE@gl@@YAXPEAXII@Z
?BindBufferRange@gl@@YAXIII_J0@Z
?BindBufferRangeContextANGLE@gl@@YAXPEAXIII_J1@Z
?BindFragDataLocationEXT@gl@@YAXIIPEBD@Z
?BindFragDataLocationEXTContextANGLE@gl@@YAXPEAXIIPEBD@Z
?BindFragDataLocationIndexedEXT@gl@@YAXIIIPEBD@Z
?BindFragDataLocationIndexedEXTContextANGLE@gl@@YAXPEAXIIIPEBD@Z
?BindFragmentInputLocationCHROMIUM@gl@@YAXIHPEBD@Z
?BindFragmentInputLocationCHROMIUMContextANGLE@gl@@YAXPEAXIHPEBD@Z
?BindFramebuffer@gl@@YAXII@Z
?BindFramebufferContextANGLE@gl@@YAXPEAXII@Z
?BindFramebufferOES@gl@@YAXII@Z
?BindFramebufferOESContextANGLE@gl@@YAXPEAXII@Z
?BindImageTexture@gl@@YAXIIHEHII@Z
?BindImageTextureContextANGLE@gl@@YAXPEAXIIHEHII@Z
?BindProgramPipeline@gl@@YAXI@Z
?BindProgramPipelineContextANGLE@gl@@YAXPEAXI@Z
?BindRenderbuffer@gl@@YAXII@Z
?BindRenderbufferContextANGLE@gl@@YAXPEAXII@Z
?BindRenderbufferOES@gl@@YAXII@Z
?BindRenderbufferOESContextANGLE@gl@@YAXPEAXII@Z
?BindSampler@gl@@YAXII@Z
?BindSamplerContextANGLE@gl@@YAXPEAXII@Z
?BindTexImage@egl@@YAIPEAX0H@Z
?BindTexture@gl@@YAXII@Z
?BindTextureContextANGLE@gl@@YAXPEAXII@Z
?BindTransformFeedback@gl@@YAXII@Z
?BindTransformFeedbackContextANGLE@gl@@YAXPEAXII@Z
?BindUniformLocationCHROMIUM@gl@@YAXIHPEBD@Z
?BindUniformLocationCHROMIUMContextANGLE@gl@@YAXPEAXIHPEBD@Z
?BindVertexArray@gl@@YAXI@Z
?BindVertexArrayContextANGLE@gl@@YAXPEAXI@Z
?BindVertexArrayOES@gl@@YAXI@Z
?BindVertexArrayOESContextANGLE@gl@@YAXPEAXI@Z
?BindVertexBuffer@gl@@YAXII_JH@Z
?BindVertexBufferContextANGLE@gl@@YAXPEAXII_JH@Z
?BlendColor@gl@@YAXMMMM@Z
?BlendColorContextANGLE@gl@@YAXPEAXMMMM@Z
?BlendEquation@gl@@YAXI@Z
?BlendEquationContextANGLE@gl@@YAXPEAXI@Z
?BlendEquationSeparate@gl@@YAXII@Z
?BlendEquationSeparateContextANGLE@gl@@YAXPEAXII@Z
?BlendFunc@gl@@YAXII@Z
?BlendFuncContextANGLE@gl@@YAXPEAXII@Z
?BlendFuncSeparate@gl@@YAXIIII@Z
?BlendFuncSeparateContextANGLE@gl@@YAXPEAXIIII@Z
?BlitFramebuffer@gl@@YAXHHHHHHHHII@Z
?BlitFramebufferANGLE@gl@@YAXHHHHHHHHII@Z
?BlitFramebufferANGLEContextANGLE@gl@@YAXPEAXHHHHHHHHII@Z
?BlitFramebufferContextANGLE@gl@@YAXPEAXHHHHHHHHII@Z
?BufferData@gl@@YAXI_JPEBXI@Z
?BufferDataContextANGLE@gl@@YAXPEAXI_JPEBXI@Z
?BufferSubData@gl@@YAXI_J0PEBX@Z
?BufferSubDataContextANGLE@gl@@YAXPEAXI_J1PEBX@Z
?CheckFramebufferStatus@gl@@YAII@Z
?CheckFramebufferStatusContextANGLE@gl@@YAIPEAXI@Z
?CheckFramebufferStatusOES@gl@@YAII@Z
?CheckFramebufferStatusOESContextANGLE@gl@@YAIPEAXI@Z
?ChooseConfig@egl@@YAIPEAXPEBHPEAPEAXHPEAH@Z
?Clear@gl@@YAXI@Z
?ClearBufferfi@gl@@YAXIHMH@Z
?ClearBufferfiContextANGLE@gl@@YAXPEAXIHMH@Z
?ClearBufferfv@gl@@YAXIHPEBM@Z
?ClearBufferfvContextANGLE@gl@@YAXPEAXIHPEBM@Z
?ClearBufferiv@gl@@YAXIHPEBH@Z
?ClearBufferivContextANGLE@gl@@YAXPEAXIHPEBH@Z
?ClearBufferuiv@gl@@YAXIHPEBI@Z
?ClearBufferuivContextANGLE@gl@@YAXPEAXIHPEBI@Z
?ClearColor@gl@@YAXMMMM@Z
?ClearColorContextANGLE@gl@@YAXPEAXMMMM@Z
?ClearColorx@gl@@YAXHHHH@Z
?ClearColorxContextANGLE@gl@@YAXPEAXHHHH@Z
?ClearContextANGLE@gl@@YAXPEAXI@Z
?ClearDepthf@gl@@YAXM@Z
?ClearDepthfContextANGLE@gl@@YAXPEAXM@Z
?ClearDepthx@gl@@YAXH@Z
?ClearDepthxContextANGLE@gl@@YAXPEAXH@Z
?ClearStencil@gl@@YAXH@Z
?ClearStencilContextANGLE@gl@@YAXPEAXH@Z
?ClientActiveTexture@gl@@YAXI@Z
?ClientActiveTextureContextANGLE@gl@@YAXPEAXI@Z
?ClientWaitSync@egl@@YAHPEAX0H_K@Z
?ClientWaitSync@gl@@YAIPEAU__GLsync@@I_K@Z
?ClientWaitSyncContextANGLE@gl@@YAIPEAXPEAU__GLsync@@I_K@Z
?ClipPlanef@gl@@YAXIPEBM@Z
?ClipPlanefContextANGLE@gl@@YAXPEAXIPEBM@Z
?ClipPlanex@gl@@YAXIPEBH@Z
?ClipPlanexContextANGLE@gl@@YAXPEAXIPEBH@Z
?Color4f@gl@@YAXMMMM@Z
?Color4fContextANGLE@gl@@YAXPEAXMMMM@Z
?Color4ub@gl@@YAXEEEE@Z
?Color4ubContextANGLE@gl@@YAXPEAXEEEE@Z
?Color4x@gl@@YAXHHHH@Z
?Color4xContextANGLE@gl@@YAXPEAXHHHH@Z
?ColorMask@gl@@YAXEEEE@Z
?ColorMaskContextANGLE@gl@@YAXPEAXEEEE@Z
?ColorPointer@gl@@YAXHIHPEBX@Z
?ColorPointerContextANGLE@gl@@YAXPEAXHIHPEBX@Z
?CompileShader@gl@@YAXI@Z
?CompileShaderContextANGLE@gl@@YAXPEAXI@Z
?CompressedCopyTextureCHROMIUM@gl@@YAXII@Z
?CompressedCopyTextureCHROMIUMContextANGLE@gl@@YAXPEAXII@Z
?CompressedTexImage2D@gl@@YAXIHIHHHHPEBX@Z
?CompressedTexImage2DContextANGLE@gl@@YAXPEAXIHIHHHHPEBX@Z
?CompressedTexImage2DRobustANGLE@gl@@YAXIHIHHHHHPEBX@Z
?CompressedTexImage2DRobustANGLEContextANGLE@gl@@YAXPEAXIHIHHHHHPEBX@Z
?CompressedTexImage3D@gl@@YAXIHIHHHHHPEBX@Z
?CompressedTexImage3DContextANGLE@gl@@YAXPEAXIHIHHHHHPEBX@Z
?CompressedTexImage3DRobustANGLE@gl@@YAXIHIHHHHHHPEBX@Z
?CompressedTexImage3DRobustANGLEContextANGLE@gl@@YAXPEAXIHIHHHHHHPEBX@Z
?CompressedTexSubImage2D@gl@@YAXIHHHHHIHPEBX@Z
?CompressedTexSubImage2DContextANGLE@gl@@YAXPEAXIHHHHHIHPEBX@Z
?CompressedTexSubImage2DRobustANGLE@gl@@YAXIHHHHHIHHPEBX@Z
?CompressedTexSubImage2DRobustANGLEContextANGLE@gl@@YAXPEAXIHHHHHIHHPEBX@Z
?CompressedTexSubImage3D@gl@@YAXIHHHHHHHIHPEBX@Z
?CompressedTexSubImage3DContextANGLE@gl@@YAXPEAXIHHHHHHHIHPEBX@Z
?CompressedTexSubImage3DRobustANGLE@gl@@YAXIHHHHHHHIHHPEBX@Z
?CompressedTexSubImage3DRobustANGLEContextANGLE@gl@@YAXPEAXIHHHHHHHIHHPEBX@Z
?CopyBufferSubData@gl@@YAXII_J00@Z
?CopyBufferSubDataContextANGLE@gl@@YAXPEAXII_J11@Z
?CopyBuffers@egl@@YAIPEAX0PEAUHBITMAP__@@@Z
?CopySubTexture3DANGLE@gl@@YAXIHIIHHHHHHHHHHEEE@Z
?CopySubTexture3DANGLEContextANGLE@gl@@YAXPEAXIHIIHHHHHHHHHHEEE@Z
?CopySubTextureCHROMIUM@gl@@YAXIHIIHHHHHHHEEE@Z
?CopySubTextureCHROMIUMContextANGLE@gl@@YAXPEAXIHIIHHHHHHHEEE@Z
?CopyTexImage2D@gl@@YAXIHIHHHHH@Z
?CopyTexImage2DContextANGLE@gl@@YAXPEAXIHIHHHHH@Z
?CopyTexSubImage2D@gl@@YAXIHHHHHHH@Z
?CopyTexSubImage2DContextANGLE@gl@@YAXPEAXIHHHHHHH@Z
?CopyTexSubImage3D@gl@@YAXIHHHHHHHH@Z
?CopyTexSubImage3DContextANGLE@gl@@YAXPEAXIHHHHHHHH@Z
?CopyTexture3DANGLE@gl@@YAXIHIIHHIEEE@Z
?CopyTexture3DANGLEContextANGLE@gl@@YAXPEAXIHIIHHIEEE@Z
?CopyTextureCHROMIUM@gl@@YAXIHIIHHIEEE@Z
?CopyTextureCHROMIUMContextANGLE@gl@@YAXPEAXIHIIHHIEEE@Z
?CoverFillPathCHROMIUM@gl@@YAXII@Z
?CoverFillPathCHROMIUMContextANGLE@gl@@YAXPEAXII@Z
?CoverFillPathInstancedCHROMIUM@gl@@YAXHIPEBXIIIPEBM@Z
?CoverFillPathInstancedCHROMIUMContextANGLE@gl@@YAXPEAXHIPEBXIIIPEBM@Z
?CoverStrokePathCHROMIUM@gl@@YAXII@Z
?CoverStrokePathCHROMIUMContextANGLE@gl@@YAXPEAXII@Z
?CoverStrokePathInstancedCHROMIUM@gl@@YAXHIPEBXIIIPEBM@Z
?CoverStrokePathInstancedCHROMIUMContextANGLE@gl@@YAXPEAXHIPEBXIIIPEBM@Z
?CoverageModulationCHROMIUM@gl@@YAXI@Z
?CoverageModulationCHROMIUMContextANGLE@gl@@YAXPEAXI@Z
?CreateContext@egl@@YAPEAXPEAX00PEBH@Z
?CreateDeviceANGLE@egl@@YAPEAXHPEAXPEB_J@Z
?CreateImage@egl@@YAPEAXPEAX0I0PEB_J@Z
?CreateImageKHR@egl@@YAPEAXPEAX0I0PEBH@Z
?CreatePbufferFromClientBuffer@egl@@YAPEAXPEAXI00PEBH@Z
?CreatePbufferSurface@egl@@YAPEAXPEAX0PEBH@Z
?CreatePixmapSurface@egl@@YAPEAXPEAX0PEAUHBITMAP__@@PEBH@Z
?CreatePlatformPixmapSurface@egl@@YAPEAXPEAX00PEB_J@Z
?CreatePlatformPixmapSurfaceEXT@egl@@YAPEAXPEAX00PEBH@Z
?CreatePlatformWindowSurface@egl@@YAPEAXPEAX00PEB_J@Z
?CreatePlatformWindowSurfaceEXT@egl@@YAPEAXPEAX00PEBH@Z
?CreateProgram@gl@@YAIXZ
?CreateProgramContextANGLE@gl@@YAIPEAX@Z
?CreateShader@gl@@YAII@Z
?CreateShaderContextANGLE@gl@@YAIPEAXI@Z
?CreateShaderProgramv@gl@@YAIIHPEBQEBD@Z
?CreateShaderProgramvContextANGLE@gl@@YAIPEAXIHPEBQEBD@Z
?CreateStreamKHR@egl@@YAPEAXPEAXPEBH@Z
?CreateStreamProducerD3DTextureANGLE@egl@@YAIPEAX0PEB_J@Z
?CreateSync@egl@@YAPEAXPEAXIPEB_J@Z
?CreateWindowSurface@egl@@YAPEAXPEAX0PEAUHWND__@@PEBH@Z
?CullFace@gl@@YAXI@Z
?CullFaceContextANGLE@gl@@YAXPEAXI@Z
?CurrentPaletteMatrixOES@gl@@YAXI@Z
?CurrentPaletteMatrixOESContextANGLE@gl@@YAXPEAXI@Z
?DebugMessageCallbackKHR@gl@@YAXP6AXIIIIHPEBDPEBX@Z1@Z
?DebugMessageCallbackKHRContextANGLE@gl@@YAXPEAXP6AXIIIIHPEBDPEBX@Z2@Z
?DebugMessageControlKHR@egl@@YAHP6AXIPEBDHPEAX10@ZPEB_J@Z
?DebugMessageControlKHR@gl@@YAXIIIHPEBIE@Z
?DebugMessageControlKHRContextANGLE@gl@@YAXPEAXIIIHPEBIE@Z
?DebugMessageInsertKHR@gl@@YAXIIIIHPEBD@Z
?DebugMessageInsertKHRContextANGLE@gl@@YAXPEAXIIIIHPEBD@Z
?DeleteBuffers@gl@@YAXHPEBI@Z
?DeleteBuffersContextANGLE@gl@@YAXPEAXHPEBI@Z
?DeleteFencesNV@gl@@YAXHPEBI@Z
?DeleteFencesNVContextANGLE@gl@@YAXPEAXHPEBI@Z
?DeleteFramebuffers@gl@@YAXHPEBI@Z
?DeleteFramebuffersContextANGLE@gl@@YAXPEAXHPEBI@Z
?DeleteFramebuffersOES@gl@@YAXHPEBI@Z
?DeleteFramebuffersOESContextANGLE@gl@@YAXPEAXHPEBI@Z
?DeletePathsCHROMIUM@gl@@YAXIH@Z
?DeletePathsCHROMIUMContextANGLE@gl@@YAXPEAXIH@Z
?DeleteProgram@gl@@YAXI@Z
?DeleteProgramContextANGLE@gl@@YAXPEAXI@Z
?DeleteProgramPipelines@gl@@YAXHPEBI@Z
?DeleteProgramPipelinesContextANGLE@gl@@YAXPEAXHPEBI@Z
?DeleteQueries@gl@@YAXHPEBI@Z
?DeleteQueriesContextANGLE@gl@@YAXPEAXHPEBI@Z
?DeleteQueriesEXT@gl@@YAXHPEBI@Z
?DeleteQueriesEXTContextANGLE@gl@@YAXPEAXHPEBI@Z
?DeleteRenderbuffers@gl@@YAXHPEBI@Z
?DeleteRenderbuffersContextANGLE@gl@@YAXPEAXHPEBI@Z
?DeleteRenderbuffersOES@gl@@YAXHPEBI@Z
?DeleteRenderbuffersOESContextANGLE@gl@@YAXPEAXHPEBI@Z
?DeleteSamplers@gl@@YAXHPEBI@Z
?DeleteSamplersContextANGLE@gl@@YAXPEAXHPEBI@Z
?DeleteShader@gl@@YAXI@Z
?DeleteShaderContextANGLE@gl@@YAXPEAXI@Z
?DeleteSync@gl@@YAXPEAU__GLsync@@@Z
?DeleteSyncContextANGLE@gl@@YAXPEAXPEAU__GLsync@@@Z
?DeleteTextures@gl@@YAXHPEBI@Z
?DeleteTexturesContextANGLE@gl@@YAXPEAXHPEBI@Z
?DeleteTransformFeedbacks@gl@@YAXHPEBI@Z
?DeleteTransformFeedbacksContextANGLE@gl@@YAXPEAXHPEBI@Z
?DeleteVertexArrays@gl@@YAXHPEBI@Z
?DeleteVertexArraysContextANGLE@gl@@YAXPEAXHPEBI@Z
?DeleteVertexArraysOES@gl@@YAXHPEBI@Z
?DeleteVertexArraysOESContextANGLE@gl@@YAXPEAXHPEBI@Z
?DepthFunc@gl@@YAXI@Z
?DepthFuncContextANGLE@gl@@YAXPEAXI@Z
?DepthMask@gl@@YAXE@Z
?DepthMaskContextANGLE@gl@@YAXPEAXE@Z
?DepthRangef@gl@@YAXMM@Z
?DepthRangefContextANGLE@gl@@YAXPEAXMM@Z
?DepthRangex@gl@@YAXHH@Z
?DepthRangexContextANGLE@gl@@YAXPEAXHH@Z
?DestroyContext@egl@@YAIPEAX0@Z
?DestroyImage@egl@@YAIPEAX0@Z
?DestroyImageKHR@egl@@YAIPEAX0@Z
?DestroyStreamKHR@egl@@YAIPEAX0@Z
?DestroySurface@egl@@YAIPEAX0@Z
?DestroySync@egl@@YAIPEAX0@Z
?DetachShader@gl@@YAXII@Z
?DetachShaderContextANGLE@gl@@YAXPEAXII@Z
?Disable@gl@@YAXI@Z
?DisableClientState@gl@@YAXI@Z
?DisableClientStateContextANGLE@gl@@YAXPEAXI@Z
?DisableContextANGLE@gl@@YAXPEAXI@Z
?DisableVertexAttribArray@gl@@YAXI@Z
?DisableVertexAttribArrayContextANGLE@gl@@YAXPEAXI@Z
?DiscardFramebufferEXT@gl@@YAXIHPEBI@Z
?DiscardFramebufferEXTContextANGLE@gl@@YAXPEAXIHPEBI@Z
?DispatchCompute@gl@@YAXIII@Z
?DispatchComputeContextANGLE@gl@@YAXPEAXIII@Z
?DispatchComputeIndirect@gl@@YAX_J@Z
?DispatchComputeIndirectContextANGLE@gl@@YAXPEAX_J@Z
?DrawArrays@gl@@YAXIHH@Z
?DrawArraysContextANGLE@gl@@YAXPEAXIHH@Z
?DrawArraysIndirect@gl@@YAXIPEBX@Z
?DrawArraysIndirectContextANGLE@gl@@YAXPEAXIPEBX@Z
?DrawArraysInstanced@gl@@YAXIHHH@Z
?DrawArraysInstancedANGLE@gl@@YAXIHHH@Z
?DrawArraysInstancedANGLEContextANGLE@gl@@YAXPEAXIHHH@Z
?DrawArraysInstancedContextANGLE@gl@@YAXPEAXIHHH@Z
?DrawBuffers@gl@@YAXHPEBI@Z
?DrawBuffersContextANGLE@gl@@YAXPEAXHPEBI@Z
?DrawBuffersEXT@gl@@YAXHPEBI@Z
?DrawBuffersEXTContextANGLE@gl@@YAXPEAXHPEBI@Z
?DrawElements@gl@@YAXIHIPEBX@Z
?DrawElementsContextANGLE@gl@@YAXPEAXIHIPEBX@Z
?DrawElementsIndirect@gl@@YAXIIPEBX@Z
?DrawElementsIndirectContextANGLE@gl@@YAXPEAXIIPEBX@Z
?DrawElementsInstanced@gl@@YAXIHIPEBXH@Z
?DrawElementsInstancedANGLE@gl@@YAXIHIPEBXH@Z
?DrawElementsInstancedANGLEContextANGLE@gl@@YAXPEAXIHIPEBXH@Z
?DrawElementsInstancedContextANGLE@gl@@YAXPEAXIHIPEBXH@Z
?DrawRangeElements@gl@@YAXIIIHIPEBX@Z
?DrawRangeElementsContextANGLE@gl@@YAXPEAXIIIHIPEBX@Z
?DrawTexfOES@gl@@YAXMMMMM@Z
?DrawTexfOESContextANGLE@gl@@YAXPEAXMMMMM@Z
?DrawTexfvOES@gl@@YAXPEBM@Z
?DrawTexfvOESContextANGLE@gl@@YAXPEAXPEBM@Z
?DrawTexiOES@gl@@YAXHHHHH@Z
?DrawTexiOESContextANGLE@gl@@YAXPEAXHHHHH@Z
?DrawTexivOES@gl@@YAXPEBH@Z
?DrawTexivOESContextANGLE@gl@@YAXPEAXPEBH@Z
?DrawTexsOES@gl@@YAXFFFFF@Z
?DrawTexsOESContextANGLE@gl@@YAXPEAXFFFFF@Z
?DrawTexsvOES@gl@@YAXPEBF@Z
?DrawTexsvOESContextANGLE@gl@@YAXPEAXPEBF@Z
?DrawTexxOES@gl@@YAXHHHHH@Z
?DrawTexxOESContextANGLE@gl@@YAXPEAXHHHHH@Z
?DrawTexxvOES@gl@@YAXPEBH@Z
?DrawTexxvOESContextANGLE@gl@@YAXPEAXPEBH@Z
?EGLImageTargetRenderbufferStorageOES@gl@@YAXIPEAX@Z
?EGLImageTargetRenderbufferStorageOESContextANGLE@gl@@YAXPEAXI0@Z
?EGLImageTargetTexture2DOES@gl@@YAXIPEAX@Z
?EGLImageTargetTexture2DOESContextANGLE@gl@@YAXPEAXI0@Z
?Enable@gl@@YAXI@Z
?EnableClientState@gl@@YAXI@Z
?EnableClientStateContextANGLE@gl@@YAXPEAXI@Z
?EnableContextANGLE@gl@@YAXPEAXI@Z
?EnableVertexAttribArray@gl@@YAXI@Z
?EnableVertexAttribArrayContextANGLE@gl@@YAXPEAXI@Z
?EndQuery@gl@@YAXI@Z
?EndQueryContextANGLE@gl@@YAXPEAXI@Z
?EndQueryEXT@gl@@YAXI@Z
?EndQueryEXTContextANGLE@gl@@YAXPEAXI@Z
?EndTransformFeedback@gl@@YAXXZ
?EndTransformFeedbackContextANGLE@gl@@YAXPEAX@Z
?FenceSync@gl@@YAPEAU__GLsync@@II@Z
?FenceSyncContextANGLE@gl@@YAPEAU__GLsync@@PEAXII@Z
?Finish@gl@@YAXXZ
?FinishContextANGLE@gl@@YAXPEAX@Z
?FinishFenceNV@gl@@YAXI@Z
?FinishFenceNVContextANGLE@gl@@YAXPEAXI@Z
?Flush@gl@@YAXXZ
?FlushContextANGLE@gl@@YAXPEAX@Z
?FlushMappedBufferRange@gl@@YAXI_J0@Z
?FlushMappedBufferRangeContextANGLE@gl@@YAXPEAXI_J1@Z
?FlushMappedBufferRangeEXT@gl@@YAXI_J0@Z
?FlushMappedBufferRangeEXTContextANGLE@gl@@YAXPEAXI_J1@Z
?Fogf@gl@@YAXIM@Z
?FogfContextANGLE@gl@@YAXPEAXIM@Z
?Fogfv@gl@@YAXIPEBM@Z
?FogfvContextANGLE@gl@@YAXPEAXIPEBM@Z
?Fogx@gl@@YAXIH@Z
?FogxContextANGLE@gl@@YAXPEAXIH@Z
?Fogxv@gl@@YAXIPEBH@Z
?FogxvContextANGLE@gl@@YAXPEAXIPEBH@Z
?FramebufferParameteri@gl@@YAXIIH@Z
?FramebufferParameteriContextANGLE@gl@@YAXPEAXIIH@Z
?FramebufferRenderbuffer@gl@@YAXIIII@Z
?FramebufferRenderbufferContextANGLE@gl@@YAXPEAXIIII@Z
?FramebufferRenderbufferOES@gl@@YAXIIII@Z
?FramebufferRenderbufferOESContextANGLE@gl@@YAXPEAXIIII@Z
?FramebufferTexture2D@gl@@YAXIIIIH@Z
?FramebufferTexture2DContextANGLE@gl@@YAXPEAXIIIIH@Z
?FramebufferTexture2DOES@gl@@YAXIIIIH@Z
?FramebufferTexture2DOESContextANGLE@gl@@YAXPEAXIIIIH@Z
?FramebufferTextureEXT@gl@@YAXIIIH@Z
?FramebufferTextureEXTContextANGLE@gl@@YAXPEAXIIIH@Z
?FramebufferTextureLayer@gl@@YAXIIIHH@Z
?FramebufferTextureLayerContextANGLE@gl@@YAXPEAXIIIHH@Z
?FramebufferTextureMultiviewLayeredANGLE@gl@@YAXIIIHHH@Z
?FramebufferTextureMultiviewLayeredANGLEContextANGLE@gl@@YAXPEAXIIIHHH@Z
?FramebufferTextureMultiviewSideBySideANGLE@gl@@YAXIIIHHPEBH@Z
?FramebufferTextureMultiviewSideBySideANGLEContextANGLE@gl@@YAXPEAXIIIHHPEBH@Z
?FrontFace@gl@@YAXI@Z
?FrontFaceContextANGLE@gl@@YAXPEAXI@Z
?Frustumf@gl@@YAXMMMMMM@Z
?FrustumfContextANGLE@gl@@YAXPEAXMMMMMM@Z
?Frustumx@gl@@YAXHHHHHH@Z
?FrustumxContextANGLE@gl@@YAXPEAXHHHHHH@Z
?GenBuffers@gl@@YAXHPEAI@Z
?GenBuffersContextANGLE@gl@@YAXPEAXHPEAI@Z
?GenFencesNV@gl@@YAXHPEAI@Z
?GenFencesNVContextANGLE@gl@@YAXPEAXHPEAI@Z
?GenFramebuffers@gl@@YAXHPEAI@Z
?GenFramebuffersContextANGLE@gl@@YAXPEAXHPEAI@Z
?GenFramebuffersOES@gl@@YAXHPEAI@Z
?GenFramebuffersOESContextANGLE@gl@@YAXPEAXHPEAI@Z
?GenPathsCHROMIUM@gl@@YAIH@Z
?GenPathsCHROMIUMContextANGLE@gl@@YAIPEAXH@Z
?GenProgramPipelines@gl@@YAXHPEAI@Z
?GenProgramPipelinesContextANGLE@gl@@YAXPEAXHPEAI@Z
?GenQueries@gl@@YAXHPEAI@Z
?GenQueriesContextANGLE@gl@@YAXPEAXHPEAI@Z
?GenQueriesEXT@gl@@YAXHPEAI@Z
?GenQueriesEXTContextANGLE@gl@@YAXPEAXHPEAI@Z
?GenRenderbuffers@gl@@YAXHPEAI@Z
?GenRenderbuffersContextANGLE@gl@@YAXPEAXHPEAI@Z
?GenRenderbuffersOES@gl@@YAXHPEAI@Z
?GenRenderbuffersOESContextANGLE@gl@@YAXPEAXHPEAI@Z
?GenSamplers@gl@@YAXHPEAI@Z
?GenSamplersContextANGLE@gl@@YAXPEAXHPEAI@Z
?GenTextures@gl@@YAXHPEAI@Z
?GenTexturesContextANGLE@gl@@YAXPEAXHPEAI@Z
?GenTransformFeedbacks@gl@@YAXHPEAI@Z
?GenTransformFeedbacksContextANGLE@gl@@YAXPEAXHPEAI@Z
?GenVertexArrays@gl@@YAXHPEAI@Z
?GenVertexArraysContextANGLE@gl@@YAXPEAXHPEAI@Z
?GenVertexArraysOES@gl@@YAXHPEAI@Z
?GenVertexArraysOESContextANGLE@gl@@YAXPEAXHPEAI@Z
?GenerateMipmap@gl@@YAXI@Z
?GenerateMipmapContextANGLE@gl@@YAXPEAXI@Z
?GenerateMipmapOES@gl@@YAXI@Z
?GenerateMipmapOESContextANGLE@gl@@YAXPEAXI@Z
?GetActiveAttrib@gl@@YAXIIHPEAH0PEAIPEAD@Z
?GetActiveAttribContextANGLE@gl@@YAXPEAXIIHPEAH1PEAIPEAD@Z
?GetActiveUniform@gl@@YAXIIHPEAH0PEAIPEAD@Z
?GetActiveUniformBlockName@gl@@YAXIIHPEAHPEAD@Z
?GetActiveUniformBlockNameContextANGLE@gl@@YAXPEAXIIHPEAHPEAD@Z
?GetActiveUniformBlockiv@gl@@YAXIIIPEAH@Z
?GetActiveUniformBlockivContextANGLE@gl@@YAXPEAXIIIPEAH@Z
?GetActiveUniformBlockivRobustANGLE@gl@@YAXIIIHPEAH0@Z
?GetActiveUniformBlockivRobustANGLEContextANGLE@gl@@YAXPEAXIIIHPEAH1@Z
?GetActiveUniformContextANGLE@gl@@YAXPEAXIIHPEAH1PEAIPEAD@Z
?GetActiveUniformsiv@gl@@YAXIHPEBIIPEAH@Z
?GetActiveUniformsivContextANGLE@gl@@YAXPEAXIHPEBIIPEAH@Z
?GetAttachedShaders@gl@@YAXIHPEAHPEAI@Z
?GetAttachedShadersContextANGLE@gl@@YAXPEAXIHPEAHPEAI@Z
?GetAttribLocation@gl@@YAHIPEBD@Z
?GetAttribLocationContextANGLE@gl@@YAHPEAXIPEBD@Z
?GetBooleani_v@gl@@YAXIIPEAE@Z
?GetBooleani_vContextANGLE@gl@@YAXPEAXIIPEAE@Z
?GetBooleani_vRobustANGLE@gl@@YAXIIHPEAHPEAE@Z
?GetBooleani_vRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAHPEAE@Z
?GetBooleanv@gl@@YAXIPEAE@Z
?GetBooleanvContextANGLE@gl@@YAXPEAXIPEAE@Z
?GetBooleanvRobustANGLE@gl@@YAXIHPEAHPEAE@Z
?GetBooleanvRobustANGLEContextANGLE@gl@@YAXPEAXIHPEAHPEAE@Z
?GetBufferParameteri64v@gl@@YAXIIPEA_J@Z
?GetBufferParameteri64vContextANGLE@gl@@YAXPEAXIIPEA_J@Z
?GetBufferParameteri64vRobustANGLE@gl@@YAXIIHPEAHPEA_J@Z
?GetBufferParameteri64vRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAHPEA_J@Z
?GetBufferParameteriv@gl@@YAXIIPEAH@Z
?GetBufferParameterivContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetBufferParameterivRobustANGLE@gl@@YAXIIHPEAH0@Z
?GetBufferParameterivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAH1@Z
?GetBufferPointerv@gl@@YAXIIPEAPEAX@Z
?GetBufferPointervContextANGLE@gl@@YAXPEAXIIPEAPEAX@Z
?GetBufferPointervOES@gl@@YAXIIPEAPEAX@Z
?GetBufferPointervOESContextANGLE@gl@@YAXPEAXIIPEAPEAX@Z
?GetBufferPointervRobustANGLE@gl@@YAXIIHPEAHPEAPEAX@Z
?GetBufferPointervRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAHPEAPEAX@Z
?GetClipPlanef@gl@@YAXIPEAM@Z
?GetClipPlanefContextANGLE@gl@@YAXPEAXIPEAM@Z
?GetClipPlanex@gl@@YAXIPEAH@Z
?GetClipPlanexContextANGLE@gl@@YAXPEAXIPEAH@Z
?GetConfigAttrib@egl@@YAIPEAX0HPEAH@Z
?GetConfigs@egl@@YAIPEAXPEAPEAXHPEAH@Z
?GetCurrentContext@egl@@YAPEAXXZ
?GetCurrentDisplay@egl@@YAPEAXXZ
?GetCurrentSurface@egl@@YAPEAXH@Z
?GetDebugMessageLogKHR@gl@@YAIIHPEAI000PEAHPEAD@Z
?GetDebugMessageLogKHRContextANGLE@gl@@YAIPEAXIHPEAI111PEAHPEAD@Z
?GetDisplay@egl@@YAPEAXPEAUHDC__@@@Z
?GetError@egl@@YAHXZ
?GetError@gl@@YAIXZ
?GetErrorContextANGLE@gl@@YAIPEAX@Z
?GetFenceivNV@gl@@YAXIIPEAH@Z
?GetFenceivNVContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetFixedv@gl@@YAXIPEAH@Z
?GetFixedvContextANGLE@gl@@YAXPEAXIPEAH@Z
?GetFloatv@gl@@YAXIPEAM@Z
?GetFloatvContextANGLE@gl@@YAXPEAXIPEAM@Z
?GetFloatvRobustANGLE@gl@@YAXIHPEAHPEAM@Z
?GetFloatvRobustANGLEContextANGLE@gl@@YAXPEAXIHPEAHPEAM@Z
?GetFragDataIndexEXT@gl@@YAHIPEBD@Z
?GetFragDataIndexEXTContextANGLE@gl@@YAHPEAXIPEBD@Z
?GetFragDataLocation@gl@@YAHIPEBD@Z
?GetFragDataLocationContextANGLE@gl@@YAHPEAXIPEBD@Z
?GetFramebufferAttachmentParameteriv@gl@@YAXIIIPEAH@Z
?GetFramebufferAttachmentParameterivContextANGLE@gl@@YAXPEAXIIIPEAH@Z
?GetFramebufferAttachmentParameterivOES@gl@@YAXIIIPEAH@Z
?GetFramebufferAttachmentParameterivOESContextANGLE@gl@@YAXPEAXIIIPEAH@Z
?GetFramebufferAttachmentParameterivRobustANGLE@gl@@YAXIIIHPEAH0@Z
?GetFramebufferAttachmentParameterivRobustANGLEContextANGLE@gl@@YAXPEAXIIIHPEAH1@Z
?GetFramebufferParameteriv@gl@@YAXIIPEAH@Z
?GetFramebufferParameterivContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetFramebufferParameterivRobustANGLE@gl@@YAXIIHPEAH0@Z
?GetFramebufferParameterivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAH1@Z
?GetGraphicsResetStatusEXT@gl@@YAIXZ
?GetGraphicsResetStatusEXTContextANGLE@gl@@YAIPEAX@Z
?GetInteger64i_v@gl@@YAXIIPEA_J@Z
?GetInteger64i_vContextANGLE@gl@@YAXPEAXIIPEA_J@Z
?GetInteger64i_vRobustANGLE@gl@@YAXIIHPEAHPEA_J@Z
?GetInteger64i_vRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAHPEA_J@Z
?GetInteger64v@gl@@YAXIPEA_J@Z
?GetInteger64vContextANGLE@gl@@YAXPEAXIPEA_J@Z
?GetInteger64vRobustANGLE@gl@@YAXIHPEAHPEA_J@Z
?GetInteger64vRobustANGLEContextANGLE@gl@@YAXPEAXIHPEAHPEA_J@Z
?GetIntegeri_v@gl@@YAXIIPEAH@Z
?GetIntegeri_vContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetIntegeri_vRobustANGLE@gl@@YAXIIHPEAH0@Z
?GetIntegeri_vRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAH1@Z
?GetIntegerv@gl@@YAXIPEAH@Z
?GetIntegervContextANGLE@gl@@YAXPEAXIPEAH@Z
?GetIntegervRobustANGLE@gl@@YAXIHPEAH0@Z
?GetIntegervRobustANGLEContextANGLE@gl@@YAXPEAXIHPEAH1@Z
?GetInternalformativ@gl@@YAXIIIHPEAH@Z
?GetInternalformativContextANGLE@gl@@YAXPEAXIIIHPEAH@Z
?GetInternalformativRobustANGLE@gl@@YAXIIIHPEAH0@Z
?GetInternalformativRobustANGLEContextANGLE@gl@@YAXPEAXIIIHPEAH1@Z
?GetLightfv@gl@@YAXIIPEAM@Z
?GetLightfvContextANGLE@gl@@YAXPEAXIIPEAM@Z
?GetLightxv@gl@@YAXIIPEAH@Z
?GetLightxvContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetMaterialfv@gl@@YAXIIPEAM@Z
?GetMaterialfvContextANGLE@gl@@YAXPEAXIIPEAM@Z
?GetMaterialxv@gl@@YAXIIPEAH@Z
?GetMaterialxvContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetMultisamplefv@gl@@YAXIIPEAM@Z
?GetMultisamplefvContextANGLE@gl@@YAXPEAXIIPEAM@Z
?GetMultisamplefvRobustANGLE@gl@@YAXIIHPEAHPEAM@Z
?GetMultisamplefvRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAHPEAM@Z
?GetObjectLabelKHR@gl@@YAXIIHPEAHPEAD@Z
?GetObjectLabelKHRContextANGLE@gl@@YAXPEAXIIHPEAHPEAD@Z
?GetObjectPtrLabelKHR@gl@@YAXPEBXHPEAHPEAD@Z
?GetObjectPtrLabelKHRContextANGLE@gl@@YAXPEAXPEBXHPEAHPEAD@Z
?GetPathParameterfvCHROMIUM@gl@@YAXIIPEAM@Z
?GetPathParameterfvCHROMIUMContextANGLE@gl@@YAXPEAXIIPEAM@Z
?GetPathParameterivCHROMIUM@gl@@YAXIIPEAH@Z
?GetPathParameterivCHROMIUMContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetPlatformDisplay@egl@@YAPEAXIPEAXPEB_J@Z
?GetPlatformDisplayEXT@egl@@YAPEAXIPEAXPEBH@Z
?GetPointerv@gl@@YAXIPEAPEAX@Z
?GetPointervContextANGLE@gl@@YAXPEAXIPEAPEAX@Z
?GetPointervKHR@gl@@YAXIPEAPEAX@Z
?GetPointervKHRContextANGLE@gl@@YAXPEAXIPEAPEAX@Z
?GetPointervRobustANGLERobustANGLE@gl@@YAXIHPEAHPEAPEAX@Z
?GetPointervRobustANGLERobustANGLEContextANGLE@gl@@YAXPEAXIHPEAHPEAPEAX@Z
?GetProcAddress@egl@@YAP6AXXZPEBD@Z
?GetProgramBinary@gl@@YAXIHPEAHPEAIPEAX@Z
?GetProgramBinaryContextANGLE@gl@@YAXPEAXIHPEAHPEAI0@Z
?GetProgramBinaryOES@gl@@YAXIHPEAHPEAIPEAX@Z
?GetProgramBinaryOESContextANGLE@gl@@YAXPEAXIHPEAHPEAI0@Z
?GetProgramInfoLog@gl@@YAXIHPEAHPEAD@Z
?GetProgramInfoLogContextANGLE@gl@@YAXPEAXIHPEAHPEAD@Z
?GetProgramInterfaceiv@gl@@YAXIIIPEAH@Z
?GetProgramInterfaceivContextANGLE@gl@@YAXPEAXIIIPEAH@Z
?GetProgramInterfaceivRobustANGLE@gl@@YAXIIIHPEAH0@Z
?GetProgramInterfaceivRobustANGLEContextANGLE@gl@@YAXPEAXIIIHPEAH1@Z
?GetProgramPipelineInfoLog@gl@@YAXIHPEAHPEAD@Z
?GetProgramPipelineInfoLogContextANGLE@gl@@YAXPEAXIHPEAHPEAD@Z
?GetProgramPipelineiv@gl@@YAXIIPEAH@Z
?GetProgramPipelineivContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetProgramResourceIndex@gl@@YAIIIPEBD@Z
?GetProgramResourceIndexContextANGLE@gl@@YAIPEAXIIPEBD@Z
?GetProgramResourceLocation@gl@@YAHIIPEBD@Z
?GetProgramResourceLocationContextANGLE@gl@@YAHPEAXIIPEBD@Z
?GetProgramResourceLocationIndexEXT@gl@@YAHIIPEBD@Z
?GetProgramResourceLocationIndexEXTContextANGLE@gl@@YAHPEAXIIPEBD@Z
?GetProgramResourceName@gl@@YAXIIIHPEAHPEAD@Z
?GetProgramResourceNameContextANGLE@gl@@YAXPEAXIIIHPEAHPEAD@Z
?GetProgramResourceiv@gl@@YAXIIIHPEBIHPEAH1@Z
?GetProgramResourceivContextANGLE@gl@@YAXPEAXIIIHPEBIHPEAH2@Z
?GetProgramiv@gl@@YAXIIPEAH@Z
?GetProgramivContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetProgramivRobustANGLE@gl@@YAXIIHPEAH0@Z
?GetProgramivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAH1@Z
?GetQueryObjecti64vEXT@gl@@YAXIIPEA_J@Z
?GetQueryObjecti64vEXTContextANGLE@gl@@YAXPEAXIIPEA_J@Z
?GetQueryObjecti64vRobustANGLE@gl@@YAXIIHPEAHPEA_J@Z
?GetQueryObjecti64vRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAHPEA_J@Z
?GetQueryObjectivEXT@gl@@YAXIIPEAH@Z
?GetQueryObjectivEXTContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetQueryObjectivRobustANGLE@gl@@YAXIIHPEAH0@Z
?GetQueryObjectivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAH1@Z
?GetQueryObjectui64vEXT@gl@@YAXIIPEA_K@Z
?GetQueryObjectui64vEXTContextANGLE@gl@@YAXPEAXIIPEA_K@Z
?GetQueryObjectui64vRobustANGLE@gl@@YAXIIHPEAHPEA_K@Z
?GetQueryObjectui64vRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAHPEA_K@Z
?GetQueryObjectuiv@gl@@YAXIIPEAI@Z
?GetQueryObjectuivContextANGLE@gl@@YAXPEAXIIPEAI@Z
?GetQueryObjectuivEXT@gl@@YAXIIPEAI@Z
?GetQueryObjectuivEXTContextANGLE@gl@@YAXPEAXIIPEAI@Z
?GetQueryObjectuivRobustANGLE@gl@@YAXIIHPEAHPEAI@Z
?GetQueryObjectuivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAHPEAI@Z
?GetQueryiv@gl@@YAXIIPEAH@Z
?GetQueryivContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetQueryivEXT@gl@@YAXIIPEAH@Z
?GetQueryivEXTContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetQueryivRobustANGLE@gl@@YAXIIHPEAH0@Z
?GetQueryivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAH1@Z
?GetRenderbufferParameteriv@gl@@YAXIIPEAH@Z
?GetRenderbufferParameterivContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetRenderbufferParameterivOES@gl@@YAXIIPEAH@Z
?GetRenderbufferParameterivOESContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetRenderbufferParameterivRobustANGLE@gl@@YAXIIHPEAH0@Z
?GetRenderbufferParameterivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAH1@Z
?GetSamplerParameterIivRobustANGLE@gl@@YAXIIHPEAH0@Z
?GetSamplerParameterIivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAH1@Z
?GetSamplerParameterIuivRobustANGLE@gl@@YAXIIHPEAHPEAI@Z
?GetSamplerParameterIuivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAHPEAI@Z
?GetSamplerParameterfv@gl@@YAXIIPEAM@Z
?GetSamplerParameterfvContextANGLE@gl@@YAXPEAXIIPEAM@Z
?GetSamplerParameterfvRobustANGLE@gl@@YAXIIHPEAHPEAM@Z
?GetSamplerParameterfvRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAHPEAM@Z
?GetSamplerParameteriv@gl@@YAXIIPEAH@Z
?GetSamplerParameterivContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetSamplerParameterivRobustANGLE@gl@@YAXIIHPEAH0@Z
?GetSamplerParameterivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAH1@Z
?GetShaderInfoLog@gl@@YAXIHPEAHPEAD@Z
?GetShaderInfoLogContextANGLE@gl@@YAXPEAXIHPEAHPEAD@Z
?GetShaderPrecisionFormat@gl@@YAXIIPEAH0@Z
?GetShaderPrecisionFormatContextANGLE@gl@@YAXPEAXIIPEAH1@Z
?GetShaderSource@gl@@YAXIHPEAHPEAD@Z
?GetShaderSourceContextANGLE@gl@@YAXPEAXIHPEAHPEAD@Z
?GetShaderiv@gl@@YAXIIPEAH@Z
?GetShaderivContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetShaderivRobustANGLE@gl@@YAXIIHPEAH0@Z
?GetShaderivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAH1@Z
?GetString@gl@@YAPEBEI@Z
?GetStringContextANGLE@gl@@YAPEBEPEAXI@Z
?GetStringi@gl@@YAPEBEII@Z
?GetStringiContextANGLE@gl@@YAPEBEPEAXII@Z
?GetSyncAttrib@egl@@YAIPEAX0HPEA_J@Z
?GetSyncValuesCHROMIUM@egl@@YAIPEAX0PEA_K11@Z
?GetSynciv@gl@@YAXPEAU__GLsync@@IHPEAH1@Z
?GetSyncivContextANGLE@gl@@YAXPEAXPEAU__GLsync@@IHPEAH2@Z
?GetTexEnvfv@gl@@YAXIIPEAM@Z
?GetTexEnvfvContextANGLE@gl@@YAXPEAXIIPEAM@Z
?GetTexEnviv@gl@@YAXIIPEAH@Z
?GetTexEnvivContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetTexEnvxv@gl@@YAXIIPEAH@Z
?GetTexEnvxvContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetTexGenfvOES@gl@@YAXIIPEAM@Z
?GetTexGenfvOESContextANGLE@gl@@YAXPEAXIIPEAM@Z
?GetTexGenivOES@gl@@YAXIIPEAH@Z
?GetTexGenivOESContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetTexGenxvOES@gl@@YAXIIPEAH@Z
?GetTexGenxvOESContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetTexLevelParameterfv@gl@@YAXIHIPEAM@Z
?GetTexLevelParameterfvContextANGLE@gl@@YAXPEAXIHIPEAM@Z
?GetTexLevelParameterfvRobustANGLE@gl@@YAXIHIHPEAHPEAM@Z
?GetTexLevelParameterfvRobustANGLEContextANGLE@gl@@YAXPEAXIHIHPEAHPEAM@Z
?GetTexLevelParameteriv@gl@@YAXIHIPEAH@Z
?GetTexLevelParameterivContextANGLE@gl@@YAXPEAXIHIPEAH@Z
?GetTexLevelParameterivRobustANGLE@gl@@YAXIHIHPEAH0@Z
?GetTexLevelParameterivRobustANGLEContextANGLE@gl@@YAXPEAXIHIHPEAH1@Z
?GetTexParameterIivRobustANGLE@gl@@YAXIIHPEAH0@Z
?GetTexParameterIivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAH1@Z
?GetTexParameterIuivRobustANGLE@gl@@YAXIIHPEAHPEAI@Z
?GetTexParameterIuivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAHPEAI@Z
?GetTexParameterfv@gl@@YAXIIPEAM@Z
?GetTexParameterfvContextANGLE@gl@@YAXPEAXIIPEAM@Z
?GetTexParameterfvRobustANGLE@gl@@YAXIIHPEAHPEAM@Z
?GetTexParameterfvRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAHPEAM@Z
?GetTexParameteriv@gl@@YAXIIPEAH@Z
?GetTexParameterivContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetTexParameterivRobustANGLE@gl@@YAXIIHPEAH0@Z
?GetTexParameterivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAH1@Z
?GetTexParameterxv@gl@@YAXIIPEAH@Z
?GetTexParameterxvContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetTransformFeedbackVarying@gl@@YAXIIHPEAH0PEAIPEAD@Z
?GetTransformFeedbackVaryingContextANGLE@gl@@YAXPEAXIIHPEAH1PEAIPEAD@Z
?GetTranslatedShaderSourceANGLE@gl@@YAXIHPEAHPEAD@Z
?GetTranslatedShaderSourceANGLEContextANGLE@gl@@YAXPEAXIHPEAHPEAD@Z
?GetUniformBlockIndex@gl@@YAIIPEBD@Z
?GetUniformBlockIndexContextANGLE@gl@@YAIPEAXIPEBD@Z
?GetUniformIndices@gl@@YAXIHPEBQEBDPEAI@Z
?GetUniformIndicesContextANGLE@gl@@YAXPEAXIHPEBQEBDPEAI@Z
?GetUniformLocation@gl@@YAHIPEBD@Z
?GetUniformLocationContextANGLE@gl@@YAHPEAXIPEBD@Z
?GetUniformfv@gl@@YAXIHPEAM@Z
?GetUniformfvContextANGLE@gl@@YAXPEAXIHPEAM@Z
?GetUniformfvRobustANGLE@gl@@YAXIHHPEAHPEAM@Z
?GetUniformfvRobustANGLEContextANGLE@gl@@YAXPEAXIHHPEAHPEAM@Z
?GetUniformiv@gl@@YAXIHPEAH@Z
?GetUniformivContextANGLE@gl@@YAXPEAXIHPEAH@Z
?GetUniformivRobustANGLE@gl@@YAXIHHPEAH0@Z
?GetUniformivRobustANGLEContextANGLE@gl@@YAXPEAXIHHPEAH1@Z
?GetUniformuiv@gl@@YAXIHPEAI@Z
?GetUniformuivContextANGLE@gl@@YAXPEAXIHPEAI@Z
?GetUniformuivRobustANGLE@gl@@YAXIHHPEAHPEAI@Z
?GetUniformuivRobustANGLEContextANGLE@gl@@YAXPEAXIHHPEAHPEAI@Z
?GetVertexAttribIiv@gl@@YAXIIPEAH@Z
?GetVertexAttribIivContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetVertexAttribIivRobustANGLE@gl@@YAXIIHPEAH0@Z
?GetVertexAttribIivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAH1@Z
?GetVertexAttribIuiv@gl@@YAXIIPEAI@Z
?GetVertexAttribIuivContextANGLE@gl@@YAXPEAXIIPEAI@Z
?GetVertexAttribIuivRobustANGLE@gl@@YAXIIHPEAHPEAI@Z
?GetVertexAttribIuivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAHPEAI@Z
?GetVertexAttribPointerv@gl@@YAXIIPEAPEAX@Z
?GetVertexAttribPointervContextANGLE@gl@@YAXPEAXIIPEAPEAX@Z
?GetVertexAttribPointervRobustANGLE@gl@@YAXIIHPEAHPEAPEAX@Z
?GetVertexAttribPointervRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAHPEAPEAX@Z
?GetVertexAttribfv@gl@@YAXIIPEAM@Z
?GetVertexAttribfvContextANGLE@gl@@YAXPEAXIIPEAM@Z
?GetVertexAttribfvRobustANGLE@gl@@YAXIIHPEAHPEAM@Z
?GetVertexAttribfvRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAHPEAM@Z
?GetVertexAttribiv@gl@@YAXIIPEAH@Z
?GetVertexAttribivContextANGLE@gl@@YAXPEAXIIPEAH@Z
?GetVertexAttribivRobustANGLE@gl@@YAXIIHPEAH0@Z
?GetVertexAttribivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEAH1@Z
?GetnUniformfvEXT@gl@@YAXIHHPEAM@Z
?GetnUniformfvEXTContextANGLE@gl@@YAXPEAXIHHPEAM@Z
?GetnUniformfvRobustANGLE@gl@@YAXIHHPEAHPEAM@Z
?GetnUniformfvRobustANGLEContextANGLE@gl@@YAXPEAXIHHPEAHPEAM@Z
?GetnUniformivEXT@gl@@YAXIHHPEAH@Z
?GetnUniformivEXTContextANGLE@gl@@YAXPEAXIHHPEAH@Z
?GetnUniformivRobustANGLE@gl@@YAXIHHPEAH0@Z
?GetnUniformivRobustANGLEContextANGLE@gl@@YAXPEAXIHHPEAH1@Z
?GetnUniformuivRobustANGLE@gl@@YAXIHHPEAHPEAI@Z
?GetnUniformuivRobustANGLEContextANGLE@gl@@YAXPEAXIHHPEAHPEAI@Z
?Hint@gl@@YAXII@Z
?HintContextANGLE@gl@@YAXPEAXII@Z
?Initialize@egl@@YAIPEAXPEAH1@Z
?InsertEventMarkerEXT@gl@@YAXHPEBD@Z
?InsertEventMarkerEXTContextANGLE@gl@@YAXPEAXHPEBD@Z
?InvalidateFramebuffer@gl@@YAXIHPEBI@Z
?InvalidateFramebufferContextANGLE@gl@@YAXPEAXIHPEBI@Z
?InvalidateSubFramebuffer@gl@@YAXIHPEBIHHHH@Z
?InvalidateSubFramebufferContextANGLE@gl@@YAXPEAXIHPEBIHHHH@Z
?IsBuffer@gl@@YAEI@Z
?IsBufferContextANGLE@gl@@YAEPEAXI@Z
?IsEnabled@gl@@YAEI@Z
?IsEnabledContextANGLE@gl@@YAEPEAXI@Z
?IsFenceNV@gl@@YAEI@Z
?IsFenceNVContextANGLE@gl@@YAEPEAXI@Z
?IsFramebuffer@gl@@YAEI@Z
?IsFramebufferContextANGLE@gl@@YAEPEAXI@Z
?IsFramebufferOES@gl@@YAEI@Z
?IsFramebufferOESContextANGLE@gl@@YAEPEAXI@Z
?IsPathCHROMIUM@gl@@YAEI@Z
?IsPathCHROMIUMContextANGLE@gl@@YAEPEAXI@Z
?IsProgram@gl@@YAEI@Z
?IsProgramContextANGLE@gl@@YAEPEAXI@Z
?IsProgramPipeline@gl@@YAEI@Z
?IsProgramPipelineContextANGLE@gl@@YAEPEAXI@Z
?IsQuery@gl@@YAEI@Z
?IsQueryContextANGLE@gl@@YAEPEAXI@Z
?IsQueryEXT@gl@@YAEI@Z
?IsQueryEXTContextANGLE@gl@@YAEPEAXI@Z
?IsRenderbuffer@gl@@YAEI@Z
?IsRenderbufferContextANGLE@gl@@YAEPEAXI@Z
?IsRenderbufferOES@gl@@YAEI@Z
?IsRenderbufferOESContextANGLE@gl@@YAEPEAXI@Z
?IsSampler@gl@@YAEI@Z
?IsSamplerContextANGLE@gl@@YAEPEAXI@Z
?IsShader@gl@@YAEI@Z
?IsShaderContextANGLE@gl@@YAEPEAXI@Z
?IsSync@gl@@YAEPEAU__GLsync@@@Z
?IsSyncContextANGLE@gl@@YAEPEAXPEAU__GLsync@@@Z
?IsTexture@gl@@YAEI@Z
?IsTextureContextANGLE@gl@@YAEPEAXI@Z
?IsTransformFeedback@gl@@YAEI@Z
?IsTransformFeedbackContextANGLE@gl@@YAEPEAXI@Z
?IsVertexArray@gl@@YAEI@Z
?IsVertexArrayContextANGLE@gl@@YAEPEAXI@Z
?IsVertexArrayOES@gl@@YAEI@Z
?IsVertexArrayOESContextANGLE@gl@@YAEPEAXI@Z
?LabelObjectKHR@egl@@YAHPEAXI00@Z
?LightModelf@gl@@YAXIM@Z
?LightModelfContextANGLE@gl@@YAXPEAXIM@Z
?LightModelfv@gl@@YAXIPEBM@Z
?LightModelfvContextANGLE@gl@@YAXPEAXIPEBM@Z
?LightModelx@gl@@YAXIH@Z
?LightModelxContextANGLE@gl@@YAXPEAXIH@Z
?LightModelxv@gl@@YAXIPEBH@Z
?LightModelxvContextANGLE@gl@@YAXPEAXIPEBH@Z
?Lightf@gl@@YAXIIM@Z
?LightfContextANGLE@gl@@YAXPEAXIIM@Z
?Lightfv@gl@@YAXIIPEBM@Z
?LightfvContextANGLE@gl@@YAXPEAXIIPEBM@Z
?Lightx@gl@@YAXIIH@Z
?LightxContextANGLE@gl@@YAXPEAXIIH@Z
?Lightxv@gl@@YAXIIPEBH@Z
?LightxvContextANGLE@gl@@YAXPEAXIIPEBH@Z
?LineWidth@gl@@YAXM@Z
?LineWidthContextANGLE@gl@@YAXPEAXM@Z
?LineWidthx@gl@@YAXH@Z
?LineWidthxContextANGLE@gl@@YAXPEAXH@Z
?LinkProgram@gl@@YAXI@Z
?LinkProgramContextANGLE@gl@@YAXPEAXI@Z
?LoadIdentity@gl@@YAXXZ
?LoadIdentityContextANGLE@gl@@YAXPEAX@Z
?LoadMatrixf@gl@@YAXPEBM@Z
?LoadMatrixfContextANGLE@gl@@YAXPEAXPEBM@Z
?LoadMatrixx@gl@@YAXPEBH@Z
?LoadMatrixxContextANGLE@gl@@YAXPEAXPEBH@Z
?LoadPaletteFromModelViewMatrixOES@gl@@YAXXZ
?LoadPaletteFromModelViewMatrixOESContextANGLE@gl@@YAXPEAX@Z
?LogicOp@gl@@YAXI@Z
?LogicOpContextANGLE@gl@@YAXPEAXI@Z
?MakeCurrent@egl@@YAIPEAX000@Z
?MapBufferOES@gl@@YAPEAXII@Z
?MapBufferOESContextANGLE@gl@@YAPEAXPEAXII@Z
?MapBufferRange@gl@@YAPEAXI_J0I@Z
?MapBufferRangeContextANGLE@gl@@YAPEAXPEAXI_J1I@Z
?MapBufferRangeEXT@gl@@YAPEAXI_J0I@Z
?MapBufferRangeEXTContextANGLE@gl@@YAPEAXPEAXI_J1I@Z
?Materialf@gl@@YAXIIM@Z
?MaterialfContextANGLE@gl@@YAXPEAXIIM@Z
?Materialfv@gl@@YAXIIPEBM@Z
?MaterialfvContextANGLE@gl@@YAXPEAXIIPEBM@Z
?Materialx@gl@@YAXIIH@Z
?MaterialxContextANGLE@gl@@YAXPEAXIIH@Z
?Materialxv@gl@@YAXIIPEBH@Z
?MaterialxvContextANGLE@gl@@YAXPEAXIIPEBH@Z
?MatrixIndexPointerOES@gl@@YAXHIHPEBX@Z
?MatrixIndexPointerOESContextANGLE@gl@@YAXPEAXHIHPEBX@Z
?MatrixLoadIdentityCHROMIUM@gl@@YAXI@Z
?MatrixLoadIdentityCHROMIUMContextANGLE@gl@@YAXPEAXI@Z
?MatrixLoadfCHROMIUM@gl@@YAXIPEBM@Z
?MatrixLoadfCHROMIUMContextANGLE@gl@@YAXPEAXIPEBM@Z
?MatrixMode@gl@@YAXI@Z
?MatrixModeContextANGLE@gl@@YAXPEAXI@Z
?MaxShaderCompilerThreadsKHR@gl@@YAXI@Z
?MaxShaderCompilerThreadsKHRContextANGLE@gl@@YAXPEAXI@Z
?MemoryBarrier@gl@@YAXI@Z
?MemoryBarrierByRegion@gl@@YAXI@Z
?MemoryBarrierByRegionContextANGLE@gl@@YAXPEAXI@Z
?MemoryBarrierContextANGLE@gl@@YAXPEAXI@Z
?MultMatrixf@gl@@YAXPEBM@Z
?MultMatrixfContextANGLE@gl@@YAXPEAXPEBM@Z
?MultMatrixx@gl@@YAXPEBH@Z
?MultMatrixxContextANGLE@gl@@YAXPEAXPEBH@Z
?MultiTexCoord4f@gl@@YAXIMMMM@Z
?MultiTexCoord4fContextANGLE@gl@@YAXPEAXIMMMM@Z
?MultiTexCoord4x@gl@@YAXIHHHH@Z
?MultiTexCoord4xContextANGLE@gl@@YAXPEAXIHHHH@Z
?Normal3f@gl@@YAXMMM@Z
?Normal3fContextANGLE@gl@@YAXPEAXMMM@Z
?Normal3x@gl@@YAXHHH@Z
?Normal3xContextANGLE@gl@@YAXPEAXHHH@Z
?NormalPointer@gl@@YAXIHPEBX@Z
?NormalPointerContextANGLE@gl@@YAXPEAXIHPEBX@Z
?ObjectLabelKHR@gl@@YAXIIHPEBD@Z
?ObjectLabelKHRContextANGLE@gl@@YAXPEAXIIHPEBD@Z
?ObjectPtrLabelKHR@gl@@YAXPEBXHPEBD@Z
?ObjectPtrLabelKHRContextANGLE@gl@@YAXPEAXPEBXHPEBD@Z
?Orthof@gl@@YAXMMMMMM@Z
?OrthofContextANGLE@gl@@YAXPEAXMMMMMM@Z
?Orthox@gl@@YAXHHHHHH@Z
?OrthoxContextANGLE@gl@@YAXPEAXHHHHHH@Z
?PathCommandsCHROMIUM@gl@@YAXIHPEBEHIPEBX@Z
?PathCommandsCHROMIUMContextANGLE@gl@@YAXPEAXIHPEBEHIPEBX@Z
?PathParameterfCHROMIUM@gl@@YAXIIM@Z
?PathParameterfCHROMIUMContextANGLE@gl@@YAXPEAXIIM@Z
?PathParameteriCHROMIUM@gl@@YAXIIH@Z
?PathParameteriCHROMIUMContextANGLE@gl@@YAXPEAXIIH@Z
?PathStencilFuncCHROMIUM@gl@@YAXIHI@Z
?PathStencilFuncCHROMIUMContextANGLE@gl@@YAXPEAXIHI@Z
?PauseTransformFeedback@gl@@YAXXZ
?PauseTransformFeedbackContextANGLE@gl@@YAXPEAX@Z
?PixelStorei@gl@@YAXIH@Z
?PixelStoreiContextANGLE@gl@@YAXPEAXIH@Z
?PointParameterf@gl@@YAXIM@Z
?PointParameterfContextANGLE@gl@@YAXPEAXIM@Z
?PointParameterfv@gl@@YAXIPEBM@Z
?PointParameterfvContextANGLE@gl@@YAXPEAXIPEBM@Z
?PointParameterx@gl@@YAXIH@Z
?PointParameterxContextANGLE@gl@@YAXPEAXIH@Z
?PointParameterxv@gl@@YAXIPEBH@Z
?PointParameterxvContextANGLE@gl@@YAXPEAXIPEBH@Z
?PointSize@gl@@YAXM@Z
?PointSizeContextANGLE@gl@@YAXPEAXM@Z
?PointSizePointerOES@gl@@YAXIHPEBX@Z
?PointSizePointerOESContextANGLE@gl@@YAXPEAXIHPEBX@Z
?PointSizex@gl@@YAXH@Z
?PointSizexContextANGLE@gl@@YAXPEAXH@Z
?PolygonOffset@gl@@YAXMM@Z
?PolygonOffsetContextANGLE@gl@@YAXPEAXMM@Z
?PolygonOffsetx@gl@@YAXHH@Z
?PolygonOffsetxContextANGLE@gl@@YAXPEAXHH@Z
?PopDebugGroupKHR@gl@@YAXXZ
?PopDebugGroupKHRContextANGLE@gl@@YAXPEAX@Z
?PopGroupMarkerEXT@gl@@YAXXZ
?PopGroupMarkerEXTContextANGLE@gl@@YAXPEAX@Z
?PopMatrix@gl@@YAXXZ
?PopMatrixContextANGLE@gl@@YAXPEAX@Z
?PostSubBufferNV@egl@@YAIPEAX0HHHH@Z
?PresentationTimeANDROID@egl@@YAIPEAX0_J@Z
?ProgramBinary@gl@@YAXIIPEBXH@Z
?ProgramBinaryContextANGLE@gl@@YAXPEAXIIPEBXH@Z
?ProgramBinaryOES@gl@@YAXIIPEBXH@Z
?ProgramBinaryOESContextANGLE@gl@@YAXPEAXIIPEBXH@Z
?ProgramCacheGetAttribANGLE@egl@@YAHPEAXI@Z
?ProgramCachePopulateANGLE@egl@@YAXPEAXPEBXH1H@Z
?ProgramCacheQueryANGLE@egl@@YAXPEAXH0PEAH01@Z
?ProgramCacheResizeANGLE@egl@@YAHPEAXHI@Z
?ProgramParameteri@gl@@YAXIIH@Z
?ProgramParameteriContextANGLE@gl@@YAXPEAXIIH@Z
?ProgramPathFragmentInputGenCHROMIUM@gl@@YAXIHIHPEBM@Z
?ProgramPathFragmentInputGenCHROMIUMContextANGLE@gl@@YAXPEAXIHIHPEBM@Z
?ProgramUniform1f@gl@@YAXIHM@Z
?ProgramUniform1fContextANGLE@gl@@YAXPEAXIHM@Z
?ProgramUniform1fv@gl@@YAXIHHPEBM@Z
?ProgramUniform1fvContextANGLE@gl@@YAXPEAXIHHPEBM@Z
?ProgramUniform1i@gl@@YAXIHH@Z
?ProgramUniform1iContextANGLE@gl@@YAXPEAXIHH@Z
?ProgramUniform1iv@gl@@YAXIHHPEBH@Z
?ProgramUniform1ivContextANGLE@gl@@YAXPEAXIHHPEBH@Z
?ProgramUniform1ui@gl@@YAXIHI@Z
?ProgramUniform1uiContextANGLE@gl@@YAXPEAXIHI@Z
?ProgramUniform1uiv@gl@@YAXIHHPEBI@Z
?ProgramUniform1uivContextANGLE@gl@@YAXPEAXIHHPEBI@Z
?ProgramUniform2f@gl@@YAXIHMM@Z
?ProgramUniform2fContextANGLE@gl@@YAXPEAXIHMM@Z
?ProgramUniform2fv@gl@@YAXIHHPEBM@Z
?ProgramUniform2fvContextANGLE@gl@@YAXPEAXIHHPEBM@Z
?ProgramUniform2i@gl@@YAXIHHH@Z
?ProgramUniform2iContextANGLE@gl@@YAXPEAXIHHH@Z
?ProgramUniform2iv@gl@@YAXIHHPEBH@Z
?ProgramUniform2ivContextANGLE@gl@@YAXPEAXIHHPEBH@Z
?ProgramUniform2ui@gl@@YAXIHII@Z
?ProgramUniform2uiContextANGLE@gl@@YAXPEAXIHII@Z
?ProgramUniform2uiv@gl@@YAXIHHPEBI@Z
?ProgramUniform2uivContextANGLE@gl@@YAXPEAXIHHPEBI@Z
?ProgramUniform3f@gl@@YAXIHMMM@Z
?ProgramUniform3fContextANGLE@gl@@YAXPEAXIHMMM@Z
?ProgramUniform3fv@gl@@YAXIHHPEBM@Z
?ProgramUniform3fvContextANGLE@gl@@YAXPEAXIHHPEBM@Z
?ProgramUniform3i@gl@@YAXIHHHH@Z
?ProgramUniform3iContextANGLE@gl@@YAXPEAXIHHHH@Z
?ProgramUniform3iv@gl@@YAXIHHPEBH@Z
?ProgramUniform3ivContextANGLE@gl@@YAXPEAXIHHPEBH@Z
?ProgramUniform3ui@gl@@YAXIHIII@Z
?ProgramUniform3uiContextANGLE@gl@@YAXPEAXIHIII@Z
?ProgramUniform3uiv@gl@@YAXIHHPEBI@Z
?ProgramUniform3uivContextANGLE@gl@@YAXPEAXIHHPEBI@Z
?ProgramUniform4f@gl@@YAXIHMMMM@Z
?ProgramUniform4fContextANGLE@gl@@YAXPEAXIHMMMM@Z
?ProgramUniform4fv@gl@@YAXIHHPEBM@Z
?ProgramUniform4fvContextANGLE@gl@@YAXPEAXIHHPEBM@Z
?ProgramUniform4i@gl@@YAXIHHHHH@Z
?ProgramUniform4iContextANGLE@gl@@YAXPEAXIHHHHH@Z
?ProgramUniform4iv@gl@@YAXIHHPEBH@Z
?ProgramUniform4ivContextANGLE@gl@@YAXPEAXIHHPEBH@Z
?ProgramUniform4ui@gl@@YAXIHIIII@Z
?ProgramUniform4uiContextANGLE@gl@@YAXPEAXIHIIII@Z
?ProgramUniform4uiv@gl@@YAXIHHPEBI@Z
?ProgramUniform4uivContextANGLE@gl@@YAXPEAXIHHPEBI@Z
?ProgramUniformMatrix2fv@gl@@YAXIHHEPEBM@Z
?ProgramUniformMatrix2fvContextANGLE@gl@@YAXPEAXIHHEPEBM@Z
?ProgramUniformMatrix2x3fv@gl@@YAXIHHEPEBM@Z
?ProgramUniformMatrix2x3fvContextANGLE@gl@@YAXPEAXIHHEPEBM@Z
?ProgramUniformMatrix2x4fv@gl@@YAXIHHEPEBM@Z
?ProgramUniformMatrix2x4fvContextANGLE@gl@@YAXPEAXIHHEPEBM@Z
?ProgramUniformMatrix3fv@gl@@YAXIHHEPEBM@Z
?ProgramUniformMatrix3fvContextANGLE@gl@@YAXPEAXIHHEPEBM@Z
?ProgramUniformMatrix3x2fv@gl@@YAXIHHEPEBM@Z
?ProgramUniformMatrix3x2fvContextANGLE@gl@@YAXPEAXIHHEPEBM@Z
?ProgramUniformMatrix3x4fv@gl@@YAXIHHEPEBM@Z
?ProgramUniformMatrix3x4fvContextANGLE@gl@@YAXPEAXIHHEPEBM@Z
?ProgramUniformMatrix4fv@gl@@YAXIHHEPEBM@Z
?ProgramUniformMatrix4fvContextANGLE@gl@@YAXPEAXIHHEPEBM@Z
?ProgramUniformMatrix4x2fv@gl@@YAXIHHEPEBM@Z
?ProgramUniformMatrix4x2fvContextANGLE@gl@@YAXPEAXIHHEPEBM@Z
?ProgramUniformMatrix4x3fv@gl@@YAXIHHEPEBM@Z
?ProgramUniformMatrix4x3fvContextANGLE@gl@@YAXPEAXIHHEPEBM@Z
?PushDebugGroupKHR@gl@@YAXIIHPEBD@Z
?PushDebugGroupKHRContextANGLE@gl@@YAXPEAXIIHPEBD@Z
?PushGroupMarkerEXT@gl@@YAXHPEBD@Z
?PushGroupMarkerEXTContextANGLE@gl@@YAXPEAXHPEBD@Z
?PushMatrix@gl@@YAXXZ
?PushMatrixContextANGLE@gl@@YAXPEAX@Z
?QueryAPI@egl@@YAIXZ
?QueryContext@egl@@YAIPEAX0HPEAH@Z
?QueryCounterEXT@gl@@YAXII@Z
?QueryCounterEXTContextANGLE@gl@@YAXPEAXII@Z
?QueryDebugKHR@egl@@YAIHPEA_J@Z
?QueryDeviceAttribEXT@egl@@YAIPEAXHPEA_J@Z
?QueryDeviceStringEXT@egl@@YAPEBDPEAXH@Z
?QueryDisplayAttribEXT@egl@@YAIPEAXHPEA_J@Z
?QueryMatrixxOES@gl@@YAIPEAH0@Z
?QueryMatrixxOESContextANGLE@gl@@YAIPEAXPEAH1@Z
?QueryStreamKHR@egl@@YAIPEAX0IPEAH@Z
?QueryStreamu64KHR@egl@@YAIPEAX0IPEA_K@Z
?QueryString@egl@@YAPEBDPEAXH@Z
?QuerySurface@egl@@YAIPEAX0HPEAH@Z
?QuerySurfacePointerANGLE@egl@@YAIPEAX0HPEAPEAX@Z
?ReadBuffer@gl@@YAXI@Z
?ReadBufferContextANGLE@gl@@YAXPEAXI@Z
?ReadPixels@gl@@YAXHHHHIIPEAX@Z
?ReadPixelsContextANGLE@gl@@YAXPEAXHHHHII0@Z
?ReadPixelsRobustANGLE@gl@@YAXHHHHIIHPEAH00PEAX@Z
?ReadPixelsRobustANGLEContextANGLE@gl@@YAXPEAXHHHHIIHPEAH110@Z
?ReadnPixelsEXT@gl@@YAXHHHHIIHPEAX@Z
?ReadnPixelsEXTContextANGLE@gl@@YAXPEAXHHHHIIH0@Z
?ReadnPixelsRobustANGLE@gl@@YAXHHHHIIHPEAH00PEAX@Z
?ReadnPixelsRobustANGLEContextANGLE@gl@@YAXPEAXHHHHIIHPEAH110@Z
?ReleaseDeviceANGLE@egl@@YAIPEAX@Z
?ReleaseShaderCompiler@gl@@YAXXZ
?ReleaseShaderCompilerContextANGLE@gl@@YAXPEAX@Z
?ReleaseTexImage@egl@@YAIPEAX0H@Z
?ReleaseThread@egl@@YAIXZ
?RenderbufferStorage@gl@@YAXIIHH@Z
?RenderbufferStorageContextANGLE@gl@@YAXPEAXIIHH@Z
?RenderbufferStorageMultisample@gl@@YAXIHIHH@Z
?RenderbufferStorageMultisampleANGLE@gl@@YAXIHIHH@Z
?RenderbufferStorageMultisampleANGLEContextANGLE@gl@@YAXPEAXIHIHH@Z
?RenderbufferStorageMultisampleContextANGLE@gl@@YAXPEAXIHIHH@Z
?RenderbufferStorageOES@gl@@YAXIIHH@Z
?RenderbufferStorageOESContextANGLE@gl@@YAXPEAXIIHH@Z
?RequestExtensionANGLE@gl@@YAXPEBD@Z
?RequestExtensionANGLEContextANGLE@gl@@YAXPEAXPEBD@Z
?ResumeTransformFeedback@gl@@YAXXZ
?ResumeTransformFeedbackContextANGLE@gl@@YAXPEAX@Z
?Rotatef@gl@@YAXMMMM@Z
?RotatefContextANGLE@gl@@YAXPEAXMMMM@Z
?Rotatex@gl@@YAXHHHH@Z
?RotatexContextANGLE@gl@@YAXPEAXHHHH@Z
?SampleCoverage@gl@@YAXME@Z
?SampleCoverageContextANGLE@gl@@YAXPEAXME@Z
?SampleCoveragex@gl@@YAXHE@Z
?SampleCoveragexContextANGLE@gl@@YAXPEAXHE@Z
?SampleMaski@gl@@YAXII@Z
?SampleMaskiContextANGLE@gl@@YAXPEAXII@Z
?SamplerParameterIivRobustANGLE@gl@@YAXIIHPEBH@Z
?SamplerParameterIivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEBH@Z
?SamplerParameterIuivRobustANGLE@gl@@YAXIIHPEBI@Z
?SamplerParameterIuivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEBI@Z
?SamplerParameterf@gl@@YAXIIM@Z
?SamplerParameterfContextANGLE@gl@@YAXPEAXIIM@Z
?SamplerParameterfv@gl@@YAXIIPEBM@Z
?SamplerParameterfvContextANGLE@gl@@YAXPEAXIIPEBM@Z
?SamplerParameterfvRobustANGLE@gl@@YAXIIHPEBM@Z
?SamplerParameterfvRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEBM@Z
?SamplerParameteri@gl@@YAXIIH@Z
?SamplerParameteriContextANGLE@gl@@YAXPEAXIIH@Z
?SamplerParameteriv@gl@@YAXIIPEBH@Z
?SamplerParameterivContextANGLE@gl@@YAXPEAXIIPEBH@Z
?SamplerParameterivRobustANGLE@gl@@YAXIIHPEBH@Z
?SamplerParameterivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEBH@Z
?Scalef@gl@@YAXMMM@Z
?ScalefContextANGLE@gl@@YAXPEAXMMM@Z
?Scalex@gl@@YAXHHH@Z
?ScalexContextANGLE@gl@@YAXPEAXHHH@Z
?Scissor@gl@@YAXHHHH@Z
?ScissorContextANGLE@gl@@YAXPEAXHHHH@Z
?SetBlobCacheFuncsANDROID@egl@@YAXPEAXP6AXPEBX_J12@ZP6A_J1202@Z@Z
?SetFenceNV@gl@@YAXII@Z
?SetFenceNVContextANGLE@gl@@YAXPEAXII@Z
?ShadeModel@gl@@YAXI@Z
?ShadeModelContextANGLE@gl@@YAXPEAXI@Z
?ShaderBinary@gl@@YAXHPEBIIPEBXH@Z
?ShaderBinaryContextANGLE@gl@@YAXPEAXHPEBIIPEBXH@Z
?ShaderSource@gl@@YAXIHPEBQEBDPEBH@Z
?ShaderSourceContextANGLE@gl@@YAXPEAXIHPEBQEBDPEBH@Z
?StencilFillPathCHROMIUM@gl@@YAXIII@Z
?StencilFillPathCHROMIUMContextANGLE@gl@@YAXPEAXIII@Z
?StencilFillPathInstancedCHROMIUM@gl@@YAXHIPEBXIIIIPEBM@Z
?StencilFillPathInstancedCHROMIUMContextANGLE@gl@@YAXPEAXHIPEBXIIIIPEBM@Z
?StencilFunc@gl@@YAXIHI@Z
?StencilFuncContextANGLE@gl@@YAXPEAXIHI@Z
?StencilFuncSeparate@gl@@YAXIIHI@Z
?StencilFuncSeparateContextANGLE@gl@@YAXPEAXIIHI@Z
?StencilMask@gl@@YAXI@Z
?StencilMaskContextANGLE@gl@@YAXPEAXI@Z
?StencilMaskSeparate@gl@@YAXII@Z
?StencilMaskSeparateContextANGLE@gl@@YAXPEAXII@Z
?StencilOp@gl@@YAXIII@Z
?StencilOpContextANGLE@gl@@YAXPEAXIII@Z
?StencilOpSeparate@gl@@YAXIIII@Z
?StencilOpSeparateContextANGLE@gl@@YAXPEAXIIII@Z
?StencilStrokePathCHROMIUM@gl@@YAXIHI@Z
?StencilStrokePathCHROMIUMContextANGLE@gl@@YAXPEAXIHI@Z
?StencilStrokePathInstancedCHROMIUM@gl@@YAXHIPEBXIHIIPEBM@Z
?StencilStrokePathInstancedCHROMIUMContextANGLE@gl@@YAXPEAXHIPEBXIHIIPEBM@Z
?StencilThenCoverFillPathCHROMIUM@gl@@YAXIIII@Z
?StencilThenCoverFillPathCHROMIUMContextANGLE@gl@@YAXPEAXIIII@Z
?StencilThenCoverFillPathInstancedCHROMIUM@gl@@YAXHIPEBXIIIIIPEBM@Z
?StencilThenCoverFillPathInstancedCHROMIUMContextANGLE@gl@@YAXPEAXHIPEBXIIIIIPEBM@Z
?StencilThenCoverStrokePathCHROMIUM@gl@@YAXIHII@Z
?StencilThenCoverStrokePathCHROMIUMContextANGLE@gl@@YAXPEAXIHII@Z
?StencilThenCoverStrokePathInstancedCHROMIUM@gl@@YAXHIPEBXIHIIIPEBM@Z
?StencilThenCoverStrokePathInstancedCHROMIUMContextANGLE@gl@@YAXPEAXHIPEBXIHIIIPEBM@Z
?StreamAttribKHR@egl@@YAIPEAX0IH@Z
?StreamConsumerAcquireKHR@egl@@YAIPEAX0@Z
?StreamConsumerGLTextureExternalAttribsNV@egl@@YAIPEAX0PEB_J@Z
?StreamConsumerGLTextureExternalKHR@egl@@YAIPEAX0@Z
?StreamConsumerReleaseKHR@egl@@YAIPEAX0@Z
?StreamPostD3DTextureANGLE@egl@@YAIPEAX00PEB_J@Z
?SurfaceAttrib@egl@@YAIPEAX0HH@Z
?SwapBuffers@egl@@YAIPEAX0@Z
?SwapBuffersWithDamageKHR@egl@@YAIPEAX0PEAHH@Z
?SwapInterval@egl@@YAIPEAXH@Z
?Terminate@egl@@YAIPEAX@Z
?TestFenceNV@gl@@YAEI@Z
?TestFenceNVContextANGLE@gl@@YAEPEAXI@Z
?TexCoordPointer@gl@@YAXHIHPEBX@Z
?TexCoordPointerContextANGLE@gl@@YAXPEAXHIHPEBX@Z
?TexEnvf@gl@@YAXIIM@Z
?TexEnvfContextANGLE@gl@@YAXPEAXIIM@Z
?TexEnvfv@gl@@YAXIIPEBM@Z
?TexEnvfvContextANGLE@gl@@YAXPEAXIIPEBM@Z
?TexEnvi@gl@@YAXIIH@Z
?TexEnviContextANGLE@gl@@YAXPEAXIIH@Z
?TexEnviv@gl@@YAXIIPEBH@Z
?TexEnvivContextANGLE@gl@@YAXPEAXIIPEBH@Z
?TexEnvx@gl@@YAXIIH@Z
?TexEnvxContextANGLE@gl@@YAXPEAXIIH@Z
?TexEnvxv@gl@@YAXIIPEBH@Z
?TexEnvxvContextANGLE@gl@@YAXPEAXIIPEBH@Z
?TexGenfOES@gl@@YAXIIM@Z
?TexGenfOESContextANGLE@gl@@YAXPEAXIIM@Z
?TexGenfvOES@gl@@YAXIIPEBM@Z
?TexGenfvOESContextANGLE@gl@@YAXPEAXIIPEBM@Z
?TexGeniOES@gl@@YAXIIH@Z
?TexGeniOESContextANGLE@gl@@YAXPEAXIIH@Z
?TexGenivOES@gl@@YAXIIPEBH@Z
?TexGenivOESContextANGLE@gl@@YAXPEAXIIPEBH@Z
?TexGenxOES@gl@@YAXIIH@Z
?TexGenxOESContextANGLE@gl@@YAXPEAXIIH@Z
?TexGenxvOES@gl@@YAXIIPEBH@Z
?TexGenxvOESContextANGLE@gl@@YAXPEAXIIPEBH@Z
?TexImage2D@gl@@YAXIHHHHHIIPEBX@Z
?TexImage2DContextANGLE@gl@@YAXPEAXIHHHHHIIPEBX@Z
?TexImage2DRobustANGLE@gl@@YAXIHHHHHIIHPEBX@Z
?TexImage2DRobustANGLEContextANGLE@gl@@YAXPEAXIHHHHHIIHPEBX@Z
?TexImage3D@gl@@YAXIHHHHHHIIPEBX@Z
?TexImage3DContextANGLE@gl@@YAXPEAXIHHHHHHIIPEBX@Z
?TexImage3DRobustANGLE@gl@@YAXIHHHHHHIIHPEBX@Z
?TexImage3DRobustANGLEContextANGLE@gl@@YAXPEAXIHHHHHHIIHPEBX@Z
?TexParameterIivRobustANGLE@gl@@YAXIIHPEBH@Z
?TexParameterIivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEBH@Z
?TexParameterIuivRobustANGLE@gl@@YAXIIHPEBI@Z
?TexParameterIuivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEBI@Z
?TexParameterf@gl@@YAXIIM@Z
?TexParameterfContextANGLE@gl@@YAXPEAXIIM@Z
?TexParameterfv@gl@@YAXIIPEBM@Z
?TexParameterfvContextANGLE@gl@@YAXPEAXIIPEBM@Z
?TexParameterfvRobustANGLE@gl@@YAXIIHPEBM@Z
?TexParameterfvRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEBM@Z
?TexParameteri@gl@@YAXIIH@Z
?TexParameteriContextANGLE@gl@@YAXPEAXIIH@Z
?TexParameteriv@gl@@YAXIIPEBH@Z
?TexParameterivContextANGLE@gl@@YAXPEAXIIPEBH@Z
?TexParameterivRobustANGLE@gl@@YAXIIHPEBH@Z
?TexParameterivRobustANGLEContextANGLE@gl@@YAXPEAXIIHPEBH@Z
?TexParameterx@gl@@YAXIIH@Z
?TexParameterxContextANGLE@gl@@YAXPEAXIIH@Z
?TexParameterxv@gl@@YAXIIPEBH@Z
?TexParameterxvContextANGLE@gl@@YAXPEAXIIPEBH@Z
?TexStorage1DEXT@gl@@YAXIHIH@Z
?TexStorage1DEXTContextANGLE@gl@@YAXPEAXIHIH@Z
?TexStorage2D@gl@@YAXIHIHH@Z
?TexStorage2DContextANGLE@gl@@YAXPEAXIHIHH@Z
?TexStorage2DEXT@gl@@YAXIHIHH@Z
?TexStorage2DEXTContextANGLE@gl@@YAXPEAXIHIHH@Z
?TexStorage2DMultisample@gl@@YAXIHIHHE@Z
?TexStorage2DMultisampleContextANGLE@gl@@YAXPEAXIHIHHE@Z
?TexStorage3D@gl@@YAXIHIHHH@Z
?TexStorage3DContextANGLE@gl@@YAXPEAXIHIHHH@Z
?TexStorage3DEXT@gl@@YAXIHIHHH@Z
?TexStorage3DEXTContextANGLE@gl@@YAXPEAXIHIHHH@Z
?TexStorage3DMultisampleOES@gl@@YAXIHIHHHE@Z
?TexStorage3DMultisampleOESContextANGLE@gl@@YAXPEAXIHIHHHE@Z
?TexSubImage2D@gl@@YAXIHHHHHIIPEBX@Z
?TexSubImage2DContextANGLE@gl@@YAXPEAXIHHHHHIIPEBX@Z
?TexSubImage2DRobustANGLE@gl@@YAXIHHHHHIIHPEBX@Z
?TexSubImage2DRobustANGLEContextANGLE@gl@@YAXPEAXIHHHHHIIHPEBX@Z
?TexSubImage3D@gl@@YAXIHHHHHHHIIPEBX@Z
?TexSubImage3DContextANGLE@gl@@YAXPEAXIHHHHHHHIIPEBX@Z
?TexSubImage3DRobustANGLE@gl@@YAXIHHHHHHHIIHPEBX@Z
?TexSubImage3DRobustANGLEContextANGLE@gl@@YAXPEAXIHHHHHHHIIHPEBX@Z
?TransformFeedbackVaryings@gl@@YAXIHPEBQEBDI@Z
?TransformFeedbackVaryingsContextANGLE@gl@@YAXPEAXIHPEBQEBDI@Z
?Translatef@gl@@YAXMMM@Z
?TranslatefContextANGLE@gl@@YAXPEAXMMM@Z
?Translatex@gl@@YAXHHH@Z
?TranslatexContextANGLE@gl@@YAXPEAXHHH@Z
?Uniform1f@gl@@YAXHM@Z
?Uniform1fContextANGLE@gl@@YAXPEAXHM@Z
?Uniform1fv@gl@@YAXHHPEBM@Z
?Uniform1fvContextANGLE@gl@@YAXPEAXHHPEBM@Z
?Uniform1i@gl@@YAXHH@Z
?Uniform1iContextANGLE@gl@@YAXPEAXHH@Z
?Uniform1iv@gl@@YAXHHPEBH@Z
?Uniform1ivContextANGLE@gl@@YAXPEAXHHPEBH@Z
?Uniform1ui@gl@@YAXHI@Z
?Uniform1uiContextANGLE@gl@@YAXPEAXHI@Z
?Uniform1uiv@gl@@YAXHHPEBI@Z
?Uniform1uivContextANGLE@gl@@YAXPEAXHHPEBI@Z
?Uniform2f@gl@@YAXHMM@Z
?Uniform2fContextANGLE@gl@@YAXPEAXHMM@Z
?Uniform2fv@gl@@YAXHHPEBM@Z
?Uniform2fvContextANGLE@gl@@YAXPEAXHHPEBM@Z
?Uniform2i@gl@@YAXHHH@Z
?Uniform2iContextANGLE@gl@@YAXPEAXHHH@Z
?Uniform2iv@gl@@YAXHHPEBH@Z
?Uniform2ivContextANGLE@gl@@YAXPEAXHHPEBH@Z
?Uniform2ui@gl@@YAXHII@Z
?Uniform2uiContextANGLE@gl@@YAXPEAXHII@Z
?Uniform2uiv@gl@@YAXHHPEBI@Z
?Uniform2uivContextANGLE@gl@@YAXPEAXHHPEBI@Z
?Uniform3f@gl@@YAXHMMM@Z
?Uniform3fContextANGLE@gl@@YAXPEAXHMMM@Z
?Uniform3fv@gl@@YAXHHPEBM@Z
?Uniform3fvContextANGLE@gl@@YAXPEAXHHPEBM@Z
?Uniform3i@gl@@YAXHHHH@Z
?Uniform3iContextANGLE@gl@@YAXPEAXHHHH@Z
?Uniform3iv@gl@@YAXHHPEBH@Z
?Uniform3ivContextANGLE@gl@@YAXPEAXHHPEBH@Z
?Uniform3ui@gl@@YAXHIII@Z
?Uniform3uiContextANGLE@gl@@YAXPEAXHIII@Z
?Uniform3uiv@gl@@YAXHHPEBI@Z
?Uniform3uivContextANGLE@gl@@YAXPEAXHHPEBI@Z
?Uniform4f@gl@@YAXHMMMM@Z
?Uniform4fContextANGLE@gl@@YAXPEAXHMMMM@Z
?Uniform4fv@gl@@YAXHHPEBM@Z
?Uniform4fvContextANGLE@gl@@YAXPEAXHHPEBM@Z
?Uniform4i@gl@@YAXHHHHH@Z
?Uniform4iContextANGLE@gl@@YAXPEAXHHHHH@Z
?Uniform4iv@gl@@YAXHHPEBH@Z
?Uniform4ivContextANGLE@gl@@YAXPEAXHHPEBH@Z
?Uniform4ui@gl@@YAXHIIII@Z
?Uniform4uiContextANGLE@gl@@YAXPEAXHIIII@Z
?Uniform4uiv@gl@@YAXHHPEBI@Z
?Uniform4uivContextANGLE@gl@@YAXPEAXHHPEBI@Z
?UniformBlockBinding@gl@@YAXIII@Z
?UniformBlockBindingContextANGLE@gl@@YAXPEAXIII@Z
?UniformMatrix2fv@gl@@YAXHHEPEBM@Z
?UniformMatrix2fvContextANGLE@gl@@YAXPEAXHHEPEBM@Z
?UniformMatrix2x3fv@gl@@YAXHHEPEBM@Z
?UniformMatrix2x3fvContextANGLE@gl@@YAXPEAXHHEPEBM@Z
?UniformMatrix2x4fv@gl@@YAXHHEPEBM@Z
?UniformMatrix2x4fvContextANGLE@gl@@YAXPEAXHHEPEBM@Z
?UniformMatrix3fv@gl@@YAXHHEPEBM@Z
?UniformMatrix3fvContextANGLE@gl@@YAXPEAXHHEPEBM@Z
?UniformMatrix3x2fv@gl@@YAXHHEPEBM@Z
?UniformMatrix3x2fvContextANGLE@gl@@YAXPEAXHHEPEBM@Z
?UniformMatrix3x4fv@gl@@YAXHHEPEBM@Z
?UniformMatrix3x4fvContextANGLE@gl@@YAXPEAXHHEPEBM@Z
?UniformMatrix4fv@gl@@YAXHHEPEBM@Z
?UniformMatrix4fvContextANGLE@gl@@YAXPEAXHHEPEBM@Z
?UniformMatrix4x2fv@gl@@YAXHHEPEBM@Z
?UniformMatrix4x2fvContextANGLE@gl@@YAXPEAXHHEPEBM@Z
?UniformMatrix4x3fv@gl@@YAXHHEPEBM@Z
?UniformMatrix4x3fvContextANGLE@gl@@YAXPEAXHHEPEBM@Z
?UnmapBuffer@gl@@YAEI@Z
?UnmapBufferContextANGLE@gl@@YAEPEAXI@Z
?UnmapBufferOES@gl@@YAEI@Z
?UnmapBufferOESContextANGLE@gl@@YAEPEAXI@Z
?UseProgram@gl@@YAXI@Z
?UseProgramContextANGLE@gl@@YAXPEAXI@Z
?UseProgramStages@gl@@YAXIII@Z
?UseProgramStagesContextANGLE@gl@@YAXPEAXIII@Z
?ValidateProgram@gl@@YAXI@Z
?ValidateProgramContextANGLE@gl@@YAXPEAXI@Z
?ValidateProgramPipeline@gl@@YAXI@Z
?ValidateProgramPipelineContextANGLE@gl@@YAXPEAXI@Z
?VertexAttrib1f@gl@@YAXIM@Z
?VertexAttrib1fContextANGLE@gl@@YAXPEAXIM@Z
?VertexAttrib1fv@gl@@YAXIPEBM@Z
?VertexAttrib1fvContextANGLE@gl@@YAXPEAXIPEBM@Z
?VertexAttrib2f@gl@@YAXIMM@Z
?VertexAttrib2fContextANGLE@gl@@YAXPEAXIMM@Z
?VertexAttrib2fv@gl@@YAXIPEBM@Z
?VertexAttrib2fvContextANGLE@gl@@YAXPEAXIPEBM@Z
?VertexAttrib3f@gl@@YAXIMMM@Z
?VertexAttrib3fContextANGLE@gl@@YAXPEAXIMMM@Z
?VertexAttrib3fv@gl@@YAXIPEBM@Z
?VertexAttrib3fvContextANGLE@gl@@YAXPEAXIPEBM@Z
?VertexAttrib4f@gl@@YAXIMMMM@Z
?VertexAttrib4fContextANGLE@gl@@YAXPEAXIMMMM@Z
?VertexAttrib4fv@gl@@YAXIPEBM@Z
?VertexAttrib4fvContextANGLE@gl@@YAXPEAXIPEBM@Z
?VertexAttribBinding@gl@@YAXII@Z
?VertexAttribBindingContextANGLE@gl@@YAXPEAXII@Z
?VertexAttribDivisor@gl@@YAXII@Z
?VertexAttribDivisorANGLE@gl@@YAXII@Z
?VertexAttribDivisorANGLEContextANGLE@gl@@YAXPEAXII@Z
?VertexAttribDivisorContextANGLE@gl@@YAXPEAXII@Z
?VertexAttribFormat@gl@@YAXIHIEI@Z
?VertexAttribFormatContextANGLE@gl@@YAXPEAXIHIEI@Z
?VertexAttribI4i@gl@@YAXIHHHH@Z
?VertexAttribI4iContextANGLE@gl@@YAXPEAXIHHHH@Z
?VertexAttribI4iv@gl@@YAXIPEBH@Z
?VertexAttribI4ivContextANGLE@gl@@YAXPEAXIPEBH@Z
?VertexAttribI4ui@gl@@YAXIIIII@Z
?VertexAttribI4uiContextANGLE@gl@@YAXPEAXIIIII@Z
?VertexAttribI4uiv@gl@@YAXIPEBI@Z
?VertexAttribI4uivContextANGLE@gl@@YAXPEAXIPEBI@Z
?VertexAttribIFormat@gl@@YAXIHII@Z
?VertexAttribIFormatContextANGLE@gl@@YAXPEAXIHII@Z
?VertexAttribIPointer@gl@@YAXIHIHPEBX@Z
?VertexAttribIPointerContextANGLE@gl@@YAXPEAXIHIHPEBX@Z
?VertexAttribPointer@gl@@YAXIHIEHPEBX@Z
?VertexAttribPointerContextANGLE@gl@@YAXPEAXIHIEHPEBX@Z
?VertexBindingDivisor@gl@@YAXII@Z
?VertexBindingDivisorContextANGLE@gl@@YAXPEAXII@Z
?VertexPointer@gl@@YAXHIHPEBX@Z
?VertexPointerContextANGLE@gl@@YAXPEAXHIHPEBX@Z
?Viewport@gl@@YAXHHHH@Z
?ViewportContextANGLE@gl@@YAXPEAXHHHH@Z
?WaitClient@egl@@YAIXZ
?WaitGL@egl@@YAIXZ
?WaitNative@egl@@YAIH@Z
?WaitSync@egl@@YAIPEAX0H@Z
?WaitSync@gl@@YAXPEAU__GLsync@@I_K@Z
?WaitSyncContextANGLE@gl@@YAXPEAXPEAU__GLsync@@I_K@Z
?WeightPointerOES@gl@@YAXHIHPEBX@Z
?WeightPointerOESContextANGLE@gl@@YAXPEAXHIHPEBX@Z
ANGLEGetDisplayPlatform
ANGLEResetDisplayPlatform
glActiveShaderProgram
glActiveShaderProgramContextANGLE
glActiveTexture
glActiveTextureContextANGLE
glAlphaFunc
glAlphaFuncContextANGLE
glAlphaFuncx
glAlphaFuncxContextANGLE
glAttachShader
glAttachShaderContextANGLE
glBeginQuery
glBeginQueryContextANGLE
glBeginQueryEXT
glBeginQueryEXTContextANGLE
glBeginTransformFeedback
glBeginTransformFeedbackContextANGLE
glBindAttribLocation
glBindAttribLocationContextANGLE
glBindBuffer
glBindBufferBase
glBindBufferBaseContextANGLE
glBindBufferContextANGLE
glBindBufferRange
glBindBufferRangeContextANGLE
glBindFragDataLocationEXT
glBindFragDataLocationEXTContextANGLE
glBindFragDataLocationIndexedEXT
glBindFragDataLocationIndexedEXTContextANGLE
glBindFragmentInputLocationCHROMIUM
glBindFragmentInputLocationCHROMIUMContextANGLE
glBindFramebuffer
glBindFramebufferContextANGLE
glBindFramebufferOES
glBindFramebufferOESContextANGLE
glBindImageTexture
glBindImageTextureContextANGLE
glBindProgramPipeline
glBindProgramPipelineContextANGLE
glBindRenderbuffer
glBindRenderbufferContextANGLE
glBindRenderbufferOES
glBindRenderbufferOESContextANGLE
glBindSampler
glBindSamplerContextANGLE
glBindTexture
glBindTextureContextANGLE
glBindTransformFeedback
glBindTransformFeedbackContextANGLE
glBindUniformLocationCHROMIUM
glBindUniformLocationCHROMIUMContextANGLE
glBindVertexArray
glBindVertexArrayContextANGLE
glBindVertexArrayOES
glBindVertexArrayOESContextANGLE
glBindVertexBuffer
glBindVertexBufferContextANGLE
glBlendColor
glBlendColorContextANGLE
glBlendEquation
glBlendEquationContextANGLE
glBlendEquationSeparate
glBlendEquationSeparateContextANGLE
glBlendFunc
glBlendFuncContextANGLE
glBlendFuncSeparate
glBlendFuncSeparateContextANGLE
glBlitFramebuffer
glBlitFramebufferANGLE
glBlitFramebufferANGLEContextANGLE
glBlitFramebufferContextANGLE
glBufferData
glBufferDataContextANGLE
glBufferSubData
glBufferSubDataContextANGLE
glCheckFramebufferStatus
glCheckFramebufferStatusContextANGLE
glCheckFramebufferStatusOES
glCheckFramebufferStatusOESContextANGLE
glClear
glClearBufferfi
glClearBufferfiContextANGLE
glClearBufferfv
glClearBufferfvContextANGLE
glClearBufferiv
glClearBufferivContextANGLE
glClearBufferuiv
glClearBufferuivContextANGLE
glClearColor
glClearColorContextANGLE
glClearColorx
glClearColorxContextANGLE
glClearContextANGLE
glClearDepthf
glClearDepthfContextANGLE
glClearDepthx
glClearDepthxContextANGLE
glClearStencil
glClearStencilContextANGLE
glClientActiveTexture
glClientActiveTextureContextANGLE
glClientWaitSync
glClientWaitSyncContextANGLE
glClipPlanef
glClipPlanefContextANGLE
glClipPlanex
glClipPlanexContextANGLE
glColor4f
glColor4fContextANGLE
glColor4ub
glColor4ubContextANGLE
glColor4x
glColor4xContextANGLE
glColorMask
glColorMaskContextANGLE
glColorPointer
glColorPointerContextANGLE
glCompileShader
glCompileShaderContextANGLE
glCompressedCopyTextureCHROMIUM
glCompressedCopyTextureCHROMIUMContextANGLE
glCompressedTexImage2D
glCompressedTexImage2DContextANGLE
glCompressedTexImage2DRobustANGLE
glCompressedTexImage2DRobustANGLEContextANGLE
glCompressedTexImage3D
glCompressedTexImage3DContextANGLE
glCompressedTexImage3DRobustANGLE
glCompressedTexImage3DRobustANGLEContextANGLE
glCompressedTexSubImage2D
glCompressedTexSubImage2DContextANGLE
glCompressedTexSubImage2DRobustANGLE
glCompressedTexSubImage2DRobustANGLEContextANGLE
glCompressedTexSubImage3D
glCompressedTexSubImage3DContextANGLE
glCompressedTexSubImage3DRobustANGLE
glCompressedTexSubImage3DRobustANGLEContextANGLE
glCopyBufferSubData
glCopyBufferSubDataContextANGLE
glCopySubTexture3DANGLE
glCopySubTexture3DANGLEContextANGLE
glCopySubTextureCHROMIUM
glCopySubTextureCHROMIUMContextANGLE
glCopyTexImage2D
glCopyTexImage2DContextANGLE
glCopyTexSubImage2D
glCopyTexSubImage2DContextANGLE
glCopyTexSubImage3D
glCopyTexSubImage3DContextANGLE
glCopyTexture3DANGLE
glCopyTexture3DANGLEContextANGLE
glCopyTextureCHROMIUM
glCopyTextureCHROMIUMContextANGLE
glCoverFillPathCHROMIUM
glCoverFillPathCHROMIUMContextANGLE
glCoverFillPathInstancedCHROMIUM
glCoverFillPathInstancedCHROMIUMContextANGLE
glCoverStrokePathCHROMIUM
glCoverStrokePathCHROMIUMContextANGLE
glCoverStrokePathInstancedCHROMIUM
glCoverStrokePathInstancedCHROMIUMContextANGLE
glCoverageModulationCHROMIUM
glCoverageModulationCHROMIUMContextANGLE
glCreateProgram
glCreateProgramContextANGLE
glCreateShader
glCreateShaderContextANGLE
glCreateShaderProgramv
glCreateShaderProgramvContextANGLE
glCullFace
glCullFaceContextANGLE
glCurrentPaletteMatrixOES
glCurrentPaletteMatrixOESContextANGLE
glDebugMessageCallbackKHR
glDebugMessageCallbackKHRContextANGLE
glDebugMessageControlKHR
glDebugMessageControlKHRContextANGLE
glDebugMessageInsertKHR
glDebugMessageInsertKHRContextANGLE
glDeleteBuffers
glDeleteBuffersContextANGLE
glDeleteFencesNV
glDeleteFencesNVContextANGLE
glDeleteFramebuffers
glDeleteFramebuffersContextANGLE
glDeleteFramebuffersOES
glDeleteFramebuffersOESContextANGLE
glDeletePathsCHROMIUM
glDeletePathsCHROMIUMContextANGLE
glDeleteProgram
glDeleteProgramContextANGLE
glDeleteProgramPipelines
glDeleteProgramPipelinesContextANGLE
glDeleteQueries
glDeleteQueriesContextANGLE
glDeleteQueriesEXT
glDeleteQueriesEXTContextANGLE
glDeleteRenderbuffers
glDeleteRenderbuffersContextANGLE
glDeleteRenderbuffersOES
glDeleteRenderbuffersOESContextANGLE
glDeleteSamplers
glDeleteSamplersContextANGLE
glDeleteShader
glDeleteShaderContextANGLE
glDeleteSync
glDeleteSyncContextANGLE
glDeleteTextures
glDeleteTexturesContextANGLE
glDeleteTransformFeedbacks
glDeleteTransformFeedbacksContextANGLE
glDeleteVertexArrays
glDeleteVertexArraysContextANGLE
glDeleteVertexArraysOES
glDeleteVertexArraysOESContextANGLE
glDepthFunc
glDepthFuncContextANGLE
glDepthMask
glDepthMaskContextANGLE
glDepthRangef
glDepthRangefContextANGLE
glDepthRangex
glDepthRangexContextANGLE
glDetachShader
glDetachShaderContextANGLE
glDisable
glDisableClientState
glDisableClientStateContextANGLE
glDisableContextANGLE
glDisableVertexAttribArray
glDisableVertexAttribArrayContextANGLE
glDiscardFramebufferEXT
glDiscardFramebufferEXTContextANGLE
glDispatchCompute
glDispatchComputeContextANGLE
glDispatchComputeIndirect
glDispatchComputeIndirectContextANGLE
glDrawArrays
glDrawArraysContextANGLE
glDrawArraysIndirect
glDrawArraysIndirectContextANGLE
glDrawArraysInstanced
glDrawArraysInstancedANGLE
glDrawArraysInstancedANGLEContextANGLE
glDrawArraysInstancedContextANGLE
glDrawBuffers
glDrawBuffersContextANGLE
glDrawBuffersEXT
glDrawBuffersEXTContextANGLE
glDrawElements
glDrawElementsContextANGLE
glDrawElementsIndirect
glDrawElementsIndirectContextANGLE
glDrawElementsInstanced
glDrawElementsInstancedANGLE
glDrawElementsInstancedANGLEContextANGLE
glDrawElementsInstancedContextANGLE
glDrawRangeElements
glDrawRangeElementsContextANGLE
glDrawTexfOES
glDrawTexfOESContextANGLE
glDrawTexfvOES
glDrawTexfvOESContextANGLE
glDrawTexiOES
glDrawTexiOESContextANGLE
glDrawTexivOES
glDrawTexivOESContextANGLE
glDrawTexsOES
glDrawTexsOESContextANGLE
glDrawTexsvOES
glDrawTexsvOESContextANGLE
glDrawTexxOES
glDrawTexxOESContextANGLE
glDrawTexxvOES
glDrawTexxvOESContextANGLE
glEGLImageTargetRenderbufferStorageOES
glEGLImageTargetRenderbufferStorageOESContextANGLE
glEGLImageTargetTexture2DOES
glEGLImageTargetTexture2DOESContextANGLE
glEnable
glEnableClientState
glEnableClientStateContextANGLE
glEnableContextANGLE
glEnableVertexAttribArray
glEnableVertexAttribArrayContextANGLE
glEndQuery
glEndQueryContextANGLE
glEndQueryEXT
glEndQueryEXTContextANGLE
glEndTransformFeedback
glEndTransformFeedbackContextANGLE
glFenceSync
glFenceSyncContextANGLE
glFinish
glFinishContextANGLE
glFinishFenceNV
glFinishFenceNVContextANGLE
glFlush
glFlushContextANGLE
glFlushMappedBufferRange
glFlushMappedBufferRangeContextANGLE
glFlushMappedBufferRangeEXT
glFlushMappedBufferRangeEXTContextANGLE
glFogf
glFogfContextANGLE
glFogfv
glFogfvContextANGLE
glFogx
glFogxContextANGLE
glFogxv
glFogxvContextANGLE
glFramebufferParameteri
glFramebufferParameteriContextANGLE
glFramebufferRenderbuffer
glFramebufferRenderbufferContextANGLE
glFramebufferRenderbufferOES
glFramebufferRenderbufferOESContextANGLE
glFramebufferTexture2D
glFramebufferTexture2DContextANGLE
glFramebufferTexture2DOES
glFramebufferTexture2DOESContextANGLE
glFramebufferTextureEXT
glFramebufferTextureEXTContextANGLE
glFramebufferTextureLayer
glFramebufferTextureLayerContextANGLE
glFramebufferTextureMultiviewLayeredANGLE
glFramebufferTextureMultiviewLayeredANGLEContextANGLE
glFramebufferTextureMultiviewSideBySideANGLE
glFramebufferTextureMultiviewSideBySideANGLEContextANGLE
glFrontFace
glFrontFaceContextANGLE
glFrustumf
glFrustumfContextANGLE
glFrustumx
glFrustumxContextANGLE
glGenBuffers
glGenBuffersContextANGLE
glGenFencesNV
glGenFencesNVContextANGLE
glGenFramebuffers
glGenFramebuffersContextANGLE
glGenFramebuffersOES
glGenFramebuffersOESContextANGLE
glGenPathsCHROMIUM
glGenPathsCHROMIUMContextANGLE
glGenProgramPipelines
glGenProgramPipelinesContextANGLE
glGenQueries
glGenQueriesContextANGLE
glGenQueriesEXT
glGenQueriesEXTContextANGLE
glGenRenderbuffers
glGenRenderbuffersContextANGLE
glGenRenderbuffersOES
glGenRenderbuffersOESContextANGLE
glGenSamplers
glGenSamplersContextANGLE
glGenTextures
glGenTexturesContextANGLE
glGenTransformFeedbacks
glGenTransformFeedbacksContextANGLE
glGenVertexArrays
glGenVertexArraysContextANGLE
glGenVertexArraysOES
glGenVertexArraysOESContextANGLE
glGenerateMipmap
glGenerateMipmapContextANGLE
glGenerateMipmapOES
glGenerateMipmapOESContextANGLE
glGetActiveAttrib
glGetActiveAttribContextANGLE
glGetActiveUniform
glGetActiveUniformBlockName
glGetActiveUniformBlockNameContextANGLE
glGetActiveUniformBlockiv
glGetActiveUniformBlockivContextANGLE
glGetActiveUniformBlockivRobustANGLE
glGetActiveUniformBlockivRobustANGLEContextANGLE
glGetActiveUniformContextANGLE
glGetActiveUniformsiv
glGetActiveUniformsivContextANGLE
glGetAttachedShaders
glGetAttachedShadersContextANGLE
glGetAttribLocation
glGetAttribLocationContextANGLE
glGetBooleani_v
glGetBooleani_vContextANGLE
glGetBooleani_vRobustANGLE
glGetBooleani_vRobustANGLEContextANGLE
glGetBooleanv
glGetBooleanvContextANGLE
glGetBooleanvRobustANGLE
glGetBooleanvRobustANGLEContextANGLE
glGetBufferParameteri64v
glGetBufferParameteri64vContextANGLE
glGetBufferParameteri64vRobustANGLE
glGetBufferParameteri64vRobustANGLEContextANGLE
glGetBufferParameteriv
glGetBufferParameterivContextANGLE
glGetBufferParameterivRobustANGLE
glGetBufferParameterivRobustANGLEContextANGLE
glGetBufferPointerv
glGetBufferPointervContextANGLE
glGetBufferPointervOES
glGetBufferPointervOESContextANGLE
glGetBufferPointervRobustANGLE
glGetBufferPointervRobustANGLEContextANGLE
glGetClipPlanef
glGetClipPlanefContextANGLE
glGetClipPlanex
glGetClipPlanexContextANGLE
glGetDebugMessageLogKHR
glGetDebugMessageLogKHRContextANGLE
glGetError
glGetErrorContextANGLE
glGetFenceivNV
glGetFenceivNVContextANGLE
glGetFixedv
glGetFixedvContextANGLE
glGetFloatv
glGetFloatvContextANGLE
glGetFloatvRobustANGLE
glGetFloatvRobustANGLEContextANGLE
glGetFragDataIndexEXT
glGetFragDataIndexEXTContextANGLE
glGetFragDataLocation
glGetFragDataLocationContextANGLE
glGetFramebufferAttachmentParameteriv
glGetFramebufferAttachmentParameterivContextANGLE
glGetFramebufferAttachmentParameterivOES
glGetFramebufferAttachmentParameterivOESContextANGLE
glGetFramebufferAttachmentParameterivRobustANGLE
glGetFramebufferAttachmentParameterivRobustANGLEContextANGLE
glGetFramebufferParameteriv
glGetFramebufferParameterivContextANGLE
glGetFramebufferParameterivRobustANGLE
glGetFramebufferParameterivRobustANGLEContextANGLE
glGetGraphicsResetStatusEXT
glGetGraphicsResetStatusEXTContextANGLE
glGetInteger64i_v
glGetInteger64i_vContextANGLE
glGetInteger64i_vRobustANGLE
glGetInteger64i_vRobustANGLEContextANGLE
glGetInteger64v
glGetInteger64vContextANGLE
glGetInteger64vRobustANGLE
glGetInteger64vRobustANGLEContextANGLE
glGetIntegeri_v
glGetIntegeri_vContextANGLE
glGetIntegeri_vRobustANGLE
glGetIntegeri_vRobustANGLEContextANGLE
glGetIntegerv
glGetIntegervContextANGLE
glGetIntegervRobustANGLE
glGetIntegervRobustANGLEContextANGLE
glGetInternalformativ
glGetInternalformativContextANGLE
glGetInternalformativRobustANGLE
glGetInternalformativRobustANGLEContextANGLE
glGetLightfv
glGetLightfvContextANGLE
glGetLightxv
glGetLightxvContextANGLE
glGetMaterialfv
glGetMaterialfvContextANGLE
glGetMaterialxv
glGetMaterialxvContextANGLE
glGetMultisamplefv
glGetMultisamplefvContextANGLE
glGetMultisamplefvRobustANGLE
glGetMultisamplefvRobustANGLEContextANGLE
glGetObjectLabelKHR
glGetObjectLabelKHRContextANGLE
glGetObjectPtrLabelKHR
glGetObjectPtrLabelKHRContextANGLE
glGetPathParameterfvCHROMIUM
glGetPathParameterfvCHROMIUMContextANGLE
glGetPathParameterivCHROMIUM
glGetPathParameterivCHROMIUMContextANGLE
glGetPointerv
glGetPointervContextANGLE
glGetPointervKHR
glGetPointervKHRContextANGLE
glGetPointervRobustANGLERobustANGLE
glGetPointervRobustANGLERobustANGLEContextANGLE
glGetProgramBinary
glGetProgramBinaryContextANGLE
glGetProgramBinaryOES
glGetProgramBinaryOESContextANGLE
glGetProgramInfoLog
glGetProgramInfoLogContextANGLE
glGetProgramInterfaceiv
glGetProgramInterfaceivContextANGLE
glGetProgramInterfaceivRobustANGLE
glGetProgramInterfaceivRobustANGLEContextANGLE
glGetProgramPipelineInfoLog
glGetProgramPipelineInfoLogContextANGLE
glGetProgramPipelineiv
glGetProgramPipelineivContextANGLE
glGetProgramResourceIndex
glGetProgramResourceIndexContextANGLE
glGetProgramResourceLocation
glGetProgramResourceLocationContextANGLE
glGetProgramResourceLocationIndexEXT
glGetProgramResourceLocationIndexEXTContextANGLE
glGetProgramResourceName
glGetProgramResourceNameContextANGLE
glGetProgramResourceiv
glGetProgramResourceivContextANGLE
glGetProgramiv
glGetProgramivContextANGLE
glGetProgramivRobustANGLE
glGetProgramivRobustANGLEContextANGLE
glGetQueryObjecti64vEXT
glGetQueryObjecti64vEXTContextANGLE
glGetQueryObjecti64vRobustANGLE
glGetQueryObjecti64vRobustANGLEContextANGLE
glGetQueryObjectivEXT
glGetQueryObjectivEXTContextANGLE
glGetQueryObjectivRobustANGLE
glGetQueryObjectivRobustANGLEContextANGLE
glGetQueryObjectui64vEXT
glGetQueryObjectui64vEXTContextANGLE
glGetQueryObjectui64vRobustANGLE
glGetQueryObjectui64vRobustANGLEContextANGLE
glGetQueryObjectuiv
glGetQueryObjectuivContextANGLE
glGetQueryObjectuivEXT
glGetQueryObjectuivEXTContextANGLE
glGetQueryObjectuivRobustANGLE
glGetQueryObjectuivRobustANGLEContextANGLE
glGetQueryiv
glGetQueryivContextANGLE
glGetQueryivEXT
glGetQueryivEXTContextANGLE
glGetQueryivRobustANGLE
glGetQueryivRobustANGLEContextANGLE
glGetRenderbufferParameteriv
glGetRenderbufferParameterivContextANGLE
glGetRenderbufferParameterivOES
glGetRenderbufferParameterivOESContextANGLE
glGetRenderbufferParameterivRobustANGLE
glGetRenderbufferParameterivRobustANGLEContextANGLE
glGetSamplerParameterIivRobustANGLE
glGetSamplerParameterIivRobustANGLEContextANGLE
glGetSamplerParameterIuivRobustANGLE
glGetSamplerParameterIuivRobustANGLEContextANGLE
glGetSamplerParameterfv
glGetSamplerParameterfvContextANGLE
glGetSamplerParameterfvRobustANGLE
glGetSamplerParameterfvRobustANGLEContextANGLE
glGetSamplerParameteriv
glGetSamplerParameterivContextANGLE
glGetSamplerParameterivRobustANGLE
glGetSamplerParameterivRobustANGLEContextANGLE
glGetShaderInfoLog
glGetShaderInfoLogContextANGLE
glGetShaderPrecisionFormat
glGetShaderPrecisionFormatContextANGLE
glGetShaderSource
glGetShaderSourceContextANGLE
glGetShaderiv
glGetShaderivContextANGLE
glGetShaderivRobustANGLE
glGetShaderivRobustANGLEContextANGLE
glGetString
glGetStringContextANGLE
glGetStringi
glGetStringiContextANGLE
glGetSynciv
glGetSyncivContextANGLE
glGetTexEnvfv
glGetTexEnvfvContextANGLE
glGetTexEnviv
glGetTexEnvivContextANGLE
glGetTexEnvxv
glGetTexEnvxvContextANGLE
glGetTexGenfvOES
glGetTexGenfvOESContextANGLE
glGetTexGenivOES
glGetTexGenivOESContextANGLE
glGetTexGenxvOES
glGetTexGenxvOESContextANGLE
glGetTexLevelParameterfv
glGetTexLevelParameterfvContextANGLE
glGetTexLevelParameterfvRobustANGLE
glGetTexLevelParameterfvRobustANGLEContextANGLE
glGetTexLevelParameteriv
glGetTexLevelParameterivContextANGLE
glGetTexLevelParameterivRobustANGLE
glGetTexLevelParameterivRobustANGLEContextANGLE
glGetTexParameterIivRobustANGLE
glGetTexParameterIivRobustANGLEContextANGLE
glGetTexParameterIuivRobustANGLE
glGetTexParameterIuivRobustANGLEContextANGLE
glGetTexParameterfv
glGetTexParameterfvContextANGLE
glGetTexParameterfvRobustANGLE
glGetTexParameterfvRobustANGLEContextANGLE
glGetTexParameteriv
glGetTexParameterivContextANGLE
glGetTexParameterivRobustANGLE
glGetTexParameterivRobustANGLEContextANGLE
glGetTexParameterxv
glGetTexParameterxvContextANGLE
glGetTransformFeedbackVarying
glGetTransformFeedbackVaryingContextANGLE
glGetTranslatedShaderSourceANGLE
glGetTranslatedShaderSourceANGLEContextANGLE
glGetUniformBlockIndex
glGetUniformBlockIndexContextANGLE
glGetUniformIndices
glGetUniformIndicesContextANGLE
glGetUniformLocation
glGetUniformLocationContextANGLE
glGetUniformfv
glGetUniformfvContextANGLE
glGetUniformfvRobustANGLE
glGetUniformfvRobustANGLEContextANGLE
glGetUniformiv
glGetUniformivContextANGLE
glGetUniformivRobustANGLE
glGetUniformivRobustANGLEContextANGLE
glGetUniformuiv
glGetUniformuivContextANGLE
glGetUniformuivRobustANGLE
glGetUniformuivRobustANGLEContextANGLE
glGetVertexAttribIiv
glGetVertexAttribIivContextANGLE
glGetVertexAttribIivRobustANGLE
glGetVertexAttribIivRobustANGLEContextANGLE
glGetVertexAttribIuiv
glGetVertexAttribIuivContextANGLE
glGetVertexAttribIuivRobustANGLE
glGetVertexAttribIuivRobustANGLEContextANGLE
glGetVertexAttribPointerv
glGetVertexAttribPointervContextANGLE
glGetVertexAttribPointervRobustANGLE
glGetVertexAttribPointervRobustANGLEContextANGLE
glGetVertexAttribfv
glGetVertexAttribfvContextANGLE
glGetVertexAttribfvRobustANGLE
glGetVertexAttribfvRobustANGLEContextANGLE
glGetVertexAttribiv
glGetVertexAttribivContextANGLE
glGetVertexAttribivRobustANGLE
glGetVertexAttribivRobustANGLEContextANGLE
glGetnUniformfvEXT
glGetnUniformfvEXTContextANGLE
glGetnUniformfvRobustANGLE
glGetnUniformfvRobustANGLEContextANGLE
glGetnUniformivEXT
glGetnUniformivEXTContextANGLE
glGetnUniformivRobustANGLE
glGetnUniformivRobustANGLEContextANGLE
glGetnUniformuivRobustANGLE
glGetnUniformuivRobustANGLEContextANGLE
glHint
glHintContextANGLE
glInsertEventMarkerEXT
glInsertEventMarkerEXTContextANGLE
glInvalidateFramebuffer
glInvalidateFramebufferContextANGLE
glInvalidateSubFramebuffer
glInvalidateSubFramebufferContextANGLE
glIsBuffer
glIsBufferContextANGLE
glIsEnabled
glIsEnabledContextANGLE
glIsFenceNV
glIsFenceNVContextANGLE
glIsFramebuffer
glIsFramebufferContextANGLE
glIsFramebufferOES
glIsFramebufferOESContextANGLE
glIsPathCHROMIUM
glIsPathCHROMIUMContextANGLE
glIsProgram
glIsProgramContextANGLE
glIsProgramPipeline
glIsProgramPipelineContextANGLE
glIsQuery
glIsQueryContextANGLE
glIsQueryEXT
glIsQueryEXTContextANGLE
glIsRenderbuffer
glIsRenderbufferContextANGLE
glIsRenderbufferOES
glIsRenderbufferOESContextANGLE
glIsSampler
glIsSamplerContextANGLE
glIsShader
glIsShaderContextANGLE
glIsSync
glIsSyncContextANGLE
glIsTexture
glIsTextureContextANGLE
glIsTransformFeedback
glIsTransformFeedbackContextANGLE
glIsVertexArray
glIsVertexArrayContextANGLE
glIsVertexArrayOES
glIsVertexArrayOESContextANGLE
glLightModelf
glLightModelfContextANGLE
glLightModelfv
glLightModelfvContextANGLE
glLightModelx
glLightModelxContextANGLE
glLightModelxv
glLightModelxvContextANGLE
glLightf
glLightfContextANGLE
glLightfv
glLightfvContextANGLE
glLightx
glLightxContextANGLE
glLightxv
glLightxvContextANGLE
glLineWidth
glLineWidthContextANGLE
glLineWidthx
glLineWidthxContextANGLE
glLinkProgram
glLinkProgramContextANGLE
glLoadIdentity
glLoadIdentityContextANGLE
glLoadMatrixf
glLoadMatrixfContextANGLE
glLoadMatrixx
glLoadMatrixxContextANGLE
glLoadPaletteFromModelViewMatrixOES
glLoadPaletteFromModelViewMatrixOESContextANGLE
glLogicOp
glLogicOpContextANGLE
glMapBufferOES
glMapBufferOESContextANGLE
glMapBufferRange
glMapBufferRangeContextANGLE
glMapBufferRangeEXT
glMapBufferRangeEXTContextANGLE
glMaterialf
glMaterialfContextANGLE
glMaterialfv
glMaterialfvContextANGLE
glMaterialx
glMaterialxContextANGLE
glMaterialxv
glMaterialxvContextANGLE
glMatrixIndexPointerOES
glMatrixIndexPointerOESContextANGLE
glMatrixLoadIdentityCHROMIUM
glMatrixLoadIdentityCHROMIUMContextANGLE
glMatrixLoadfCHROMIUM
glMatrixLoadfCHROMIUMContextANGLE
glMatrixMode
glMatrixModeContextANGLE
glMaxShaderCompilerThreadsKHR
glMaxShaderCompilerThreadsKHRContextANGLE
glMemoryBarrier
glMemoryBarrierByRegion
glMemoryBarrierByRegionContextANGLE
glMemoryBarrierContextANGLE
glMultMatrixf
glMultMatrixfContextANGLE
glMultMatrixx
glMultMatrixxContextANGLE
glMultiTexCoord4f
glMultiTexCoord4fContextANGLE
glMultiTexCoord4x
glMultiTexCoord4xContextANGLE
glNormal3f
glNormal3fContextANGLE
glNormal3x
glNormal3xContextANGLE
glNormalPointer
glNormalPointerContextANGLE
glObjectLabelKHR
glObjectLabelKHRContextANGLE
glObjectPtrLabelKHR
glObjectPtrLabelKHRContextANGLE
glOrthof
glOrthofContextANGLE
glOrthox
glOrthoxContextANGLE
glPathCommandsCHROMIUM
glPathCommandsCHROMIUMContextANGLE
glPathParameterfCHROMIUM
glPathParameterfCHROMIUMContextANGLE
glPathParameteriCHROMIUM
glPathParameteriCHROMIUMContextANGLE
glPathStencilFuncCHROMIUM
glPathStencilFuncCHROMIUMContextANGLE
glPauseTransformFeedback
glPauseTransformFeedbackContextANGLE
glPixelStorei
glPixelStoreiContextANGLE
glPointParameterf
glPointParameterfContextANGLE
glPointParameterfv
glPointParameterfvContextANGLE
glPointParameterx
glPointParameterxContextANGLE
glPointParameterxv
glPointParameterxvContextANGLE
glPointSize
glPointSizeContextANGLE
glPointSizePointerOES
glPointSizePointerOESContextANGLE
glPointSizex
glPointSizexContextANGLE
glPolygonOffset
glPolygonOffsetContextANGLE
glPolygonOffsetx
glPolygonOffsetxContextANGLE
glPopDebugGroupKHR
glPopDebugGroupKHRContextANGLE
glPopGroupMarkerEXT
glPopGroupMarkerEXTContextANGLE
glPopMatrix
glPopMatrixContextANGLE
glProgramBinary
glProgramBinaryContextANGLE
glProgramBinaryOES
glProgramBinaryOESContextANGLE
glProgramParameteri
glProgramParameteriContextANGLE
glProgramPathFragmentInputGenCHROMIUM
glProgramPathFragmentInputGenCHROMIUMContextANGLE
glProgramUniform1f
glProgramUniform1fContextANGLE
glProgramUniform1fv
glProgramUniform1fvContextANGLE
glProgramUniform1i
glProgramUniform1iContextANGLE
glProgramUniform1iv
glProgramUniform1ivContextANGLE
glProgramUniform1ui
glProgramUniform1uiContextANGLE
glProgramUniform1uiv
glProgramUniform1uivContextANGLE
glProgramUniform2f
glProgramUniform2fContextANGLE
glProgramUniform2fv
glProgramUniform2fvContextANGLE
glProgramUniform2i
glProgramUniform2iContextANGLE
glProgramUniform2iv
glProgramUniform2ivContextANGLE
glProgramUniform2ui
glProgramUniform2uiContextANGLE
glProgramUniform2uiv
glProgramUniform2uivContextANGLE
glProgramUniform3f
glProgramUniform3fContextANGLE
glProgramUniform3fv
glProgramUniform3fvContextANGLE
glProgramUniform3i
glProgramUniform3iContextANGLE
glProgramUniform3iv
glProgramUniform3ivContextANGLE
glProgramUniform3ui
glProgramUniform3uiContextANGLE
glProgramUniform3uiv
glProgramUniform3uivContextANGLE
glProgramUniform4f
glProgramUniform4fContextANGLE
glProgramUniform4fv
glProgramUniform4fvContextANGLE
glProgramUniform4i
glProgramUniform4iContextANGLE
glProgramUniform4iv
glProgramUniform4ivContextANGLE
glProgramUniform4ui
glProgramUniform4uiContextANGLE
glProgramUniform4uiv
glProgramUniform4uivContextANGLE
glProgramUniformMatrix2fv
glProgramUniformMatrix2fvContextANGLE
glProgramUniformMatrix2x3fv
glProgramUniformMatrix2x3fvContextANGLE
glProgramUniformMatrix2x4fv
glProgramUniformMatrix2x4fvContextANGLE
glProgramUniformMatrix3fv
glProgramUniformMatrix3fvContextANGLE
glProgramUniformMatrix3x2fv
glProgramUniformMatrix3x2fvContextANGLE
glProgramUniformMatrix3x4fv
glProgramUniformMatrix3x4fvContextANGLE
glProgramUniformMatrix4fv
glProgramUniformMatrix4fvContextANGLE
glProgramUniformMatrix4x2fv
glProgramUniformMatrix4x2fvContextANGLE
glProgramUniformMatrix4x3fv
glProgramUniformMatrix4x3fvContextANGLE
glPushDebugGroupKHR
glPushDebugGroupKHRContextANGLE
glPushGroupMarkerEXT
glPushGroupMarkerEXTContextANGLE
glPushMatrix
glPushMatrixContextANGLE
glQueryCounterEXT
glQueryCounterEXTContextANGLE
glQueryMatrixxOES
glQueryMatrixxOESContextANGLE
glReadBuffer
glReadBufferContextANGLE
glReadPixels
glReadPixelsContextANGLE
glReadPixelsRobustANGLE
glReadPixelsRobustANGLEContextANGLE
glReadnPixelsEXT
glReadnPixelsEXTContextANGLE
glReadnPixelsRobustANGLE
glReadnPixelsRobustANGLEContextANGLE
glReleaseShaderCompiler
glReleaseShaderCompilerContextANGLE
glRenderbufferStorage
glRenderbufferStorageContextANGLE
glRenderbufferStorageMultisample
glRenderbufferStorageMultisampleANGLE
glRenderbufferStorageMultisampleANGLEContextANGLE
glRenderbufferStorageMultisampleContextANGLE
glRenderbufferStorageOES
glRenderbufferStorageOESContextANGLE
glRequestExtensionANGLE
glRequestExtensionANGLEContextANGLE
glResumeTransformFeedback
glResumeTransformFeedbackContextANGLE
glRotatef
glRotatefContextANGLE
glRotatex
glRotatexContextANGLE
glSampleCoverage
glSampleCoverageContextANGLE
glSampleCoveragex
glSampleCoveragexContextANGLE
glSampleMaski
glSampleMaskiContextANGLE
glSamplerParameterIivRobustANGLE
glSamplerParameterIivRobustANGLEContextANGLE
glSamplerParameterIuivRobustANGLE
glSamplerParameterIuivRobustANGLEContextANGLE
glSamplerParameterf
glSamplerParameterfContextANGLE
glSamplerParameterfv
glSamplerParameterfvContextANGLE
glSamplerParameterfvRobustANGLE
glSamplerParameterfvRobustANGLEContextANGLE
glSamplerParameteri
glSamplerParameteriContextANGLE
glSamplerParameteriv
glSamplerParameterivContextANGLE
glSamplerParameterivRobustANGLE
glSamplerParameterivRobustANGLEContextANGLE
glScalef
glScalefContextANGLE
glScalex
glScalexContextANGLE
glScissor
glScissorContextANGLE
glSetFenceNV
glSetFenceNVContextANGLE
glShadeModel
glShadeModelContextANGLE
glShaderBinary
glShaderBinaryContextANGLE
glShaderSource
glShaderSourceContextANGLE
glStencilFillPathCHROMIUM
glStencilFillPathCHROMIUMContextANGLE
glStencilFillPathInstancedCHROMIUM
glStencilFillPathInstancedCHROMIUMContextANGLE
glStencilFunc
glStencilFuncContextANGLE
glStencilFuncSeparate
glStencilFuncSeparateContextANGLE
glStencilMask
glStencilMaskContextANGLE
glStencilMaskSeparate
glStencilMaskSeparateContextANGLE
glStencilOp
glStencilOpContextANGLE
glStencilOpSeparate
glStencilOpSeparateContextANGLE
glStencilStrokePathCHROMIUM
glStencilStrokePathCHROMIUMContextANGLE
glStencilStrokePathInstancedCHROMIUM
glStencilStrokePathInstancedCHROMIUMContextANGLE
glStencilThenCoverFillPathCHROMIUM
glStencilThenCoverFillPathCHROMIUMContextANGLE
glStencilThenCoverFillPathInstancedCHROMIUM
glStencilThenCoverFillPathInstancedCHROMIUMContextANGLE
glStencilThenCoverStrokePathCHROMIUM
glStencilThenCoverStrokePathCHROMIUMContextANGLE
glStencilThenCoverStrokePathInstancedCHROMIUM
glStencilThenCoverStrokePathInstancedCHROMIUMContextANGLE
glTestFenceNV
glTestFenceNVContextANGLE
glTexCoordPointer
glTexCoordPointerContextANGLE
glTexEnvf
glTexEnvfContextANGLE
glTexEnvfv
glTexEnvfvContextANGLE
glTexEnvi
glTexEnviContextANGLE
glTexEnviv
glTexEnvivContextANGLE
glTexEnvx
glTexEnvxContextANGLE
glTexEnvxv
glTexEnvxvContextANGLE
glTexGenfOES
glTexGenfOESContextANGLE
glTexGenfvOES
glTexGenfvOESContextANGLE
glTexGeniOES
glTexGeniOESContextANGLE
glTexGenivOES
glTexGenivOESContextANGLE
glTexGenxOES
glTexGenxOESContextANGLE
glTexGenxvOES
glTexGenxvOESContextANGLE
glTexImage2D
glTexImage2DContextANGLE
glTexImage2DRobustANGLE
glTexImage2DRobustANGLEContextANGLE
glTexImage3D
glTexImage3DContextANGLE
glTexImage3DRobustANGLE
glTexImage3DRobustANGLEContextANGLE
glTexParameterIivRobustANGLE
glTexParameterIivRobustANGLEContextANGLE
glTexParameterIuivRobustANGLE
glTexParameterIuivRobustANGLEContextANGLE
glTexParameterf
glTexParameterfContextANGLE
glTexParameterfv
glTexParameterfvContextANGLE
glTexParameterfvRobustANGLE
glTexParameterfvRobustANGLEContextANGLE
glTexParameteri
glTexParameteriContextANGLE
glTexParameteriv
glTexParameterivContextANGLE
glTexParameterivRobustANGLE
glTexParameterivRobustANGLEContextANGLE
glTexParameterx
glTexParameterxContextANGLE
glTexParameterxv
glTexParameterxvContextANGLE
glTexStorage1DEXT
glTexStorage1DEXTContextANGLE
glTexStorage2D
glTexStorage2DContextANGLE
glTexStorage2DEXT
glTexStorage2DEXTContextANGLE
glTexStorage2DMultisample
glTexStorage2DMultisampleContextANGLE
glTexStorage3D
glTexStorage3DContextANGLE
glTexStorage3DEXT
glTexStorage3DEXTContextANGLE
glTexStorage3DMultisampleOES
glTexStorage3DMultisampleOESContextANGLE
glTexSubImage2D
glTexSubImage2DContextANGLE
glTexSubImage2DRobustANGLE
glTexSubImage2DRobustANGLEContextANGLE
glTexSubImage3D
glTexSubImage3DContextANGLE
glTexSubImage3DRobustANGLE
glTexSubImage3DRobustANGLEContextANGLE
glTransformFeedbackVaryings
glTransformFeedbackVaryingsContextANGLE
glTranslatef
glTranslatefContextANGLE
glTranslatex
glTranslatexContextANGLE
glUniform1f
glUniform1fContextANGLE
glUniform1fv
glUniform1fvContextANGLE
glUniform1i
glUniform1iContextANGLE
glUniform1iv
glUniform1ivContextANGLE
glUniform1ui
glUniform1uiContextANGLE
glUniform1uiv
glUniform1uivContextANGLE
glUniform2f
glUniform2fContextANGLE
glUniform2fv
glUniform2fvContextANGLE
glUniform2i
glUniform2iContextANGLE
glUniform2iv
glUniform2ivContextANGLE
glUniform2ui
glUniform2uiContextANGLE
glUniform2uiv
glUniform2uivContextANGLE
glUniform3f
glUniform3fContextANGLE
glUniform3fv
glUniform3fvContextANGLE
glUniform3i
glUniform3iContextANGLE
glUniform3iv
glUniform3ivContextANGLE
glUniform3ui
glUniform3uiContextANGLE
glUniform3uiv
glUniform3uivContextANGLE
glUniform4f
glUniform4fContextANGLE
glUniform4fv
glUniform4fvContextANGLE
glUniform4i
glUniform4iContextANGLE
glUniform4iv
glUniform4ivContextANGLE
glUniform4ui
glUniform4uiContextANGLE
glUniform4uiv
glUniform4uivContextANGLE
glUniformBlockBinding
glUniformBlockBindingContextANGLE
glUniformMatrix2fv
glUniformMatrix2fvContextANGLE
glUniformMatrix2x3fv
glUniformMatrix2x3fvContextANGLE
glUniformMatrix2x4fv
glUniformMatrix2x4fvContextANGLE
glUniformMatrix3fv
glUniformMatrix3fvContextANGLE
glUniformMatrix3x2fv
glUniformMatrix3x2fvContextANGLE
glUniformMatrix3x4fv
glUniformMatrix3x4fvContextANGLE
glUniformMatrix4fv
glUniformMatrix4fvContextANGLE
glUniformMatrix4x2fv
glUniformMatrix4x2fvContextANGLE
glUniformMatrix4x3fv
glUniformMatrix4x3fvContextANGLE
glUnmapBuffer
glUnmapBufferContextANGLE
glUnmapBufferOES
glUnmapBufferOESContextANGLE
glUseProgram
glUseProgramContextANGLE
glUseProgramStages
glUseProgramStagesContextANGLE
glValidateProgram
glValidateProgramContextANGLE
glValidateProgramPipeline
glValidateProgramPipelineContextANGLE
glVertexAttrib1f
glVertexAttrib1fContextANGLE
glVertexAttrib1fv
glVertexAttrib1fvContextANGLE
glVertexAttrib2f
glVertexAttrib2fContextANGLE
glVertexAttrib2fv
glVertexAttrib2fvContextANGLE
glVertexAttrib3f
glVertexAttrib3fContextANGLE
glVertexAttrib3fv
glVertexAttrib3fvContextANGLE
glVertexAttrib4f
glVertexAttrib4fContextANGLE
glVertexAttrib4fv
glVertexAttrib4fvContextANGLE
glVertexAttribBinding
glVertexAttribBindingContextANGLE
glVertexAttribDivisor
glVertexAttribDivisorANGLE
glVertexAttribDivisorANGLEContextANGLE
glVertexAttribDivisorContextANGLE
glVertexAttribFormat
glVertexAttribFormatContextANGLE
glVertexAttribI4i
glVertexAttribI4iContextANGLE
glVertexAttribI4iv
glVertexAttribI4ivContextANGLE
glVertexAttribI4ui
glVertexAttribI4uiContextANGLE
glVertexAttribI4uiv
glVertexAttribI4uivContextANGLE
glVertexAttribIFormat
glVertexAttribIFormatContextANGLE
glVertexAttribIPointer
glVertexAttribIPointerContextANGLE
glVertexAttribPointer
glVertexAttribPointerContextANGLE
glVertexBindingDivisor
glVertexBindingDivisorContextANGLE
glVertexPointer
glVertexPointerContextANGLE
glViewport
glViewportContextANGLE
glWaitSync
glWaitSyncContextANGLE
glWeightPointerOES
glWeightPointerOESContextANGLE
CreateWindowExA
CreateWindowExW
DefWindowProcA
DestroyWindow
GetClientRect
GetDC
GetWindowThreadProcessId
InvalidateRect
IsIconic
IsWindow
LoadCursorA
RegisterClassA
ReleaseDC
UnregisterClassA
WindowFromDC
ChangeTimerQueueTimer
CloseHandle
CompareStringW
CreateEventW
CreateFileW
CreateMutexW
CreateThread
CreateTimerQueue
CreateTimerQueueTimer
DecodePointer
DeleteCriticalSection
DeleteTimerQueueTimer
DuplicateHandle
EncodePointer
EnterCriticalSection
EnumSystemLocalesW
ExitProcess
FileTimeToSystemTime
FindClose
FindFirstFileExW
FindNextFileW
FlushFileBuffers
FormatMessageW
FreeEnvironmentStringsW
FreeLibrary
FreeLibraryAndExitThread
GetACP
GetCPInfo
GetCommandLineA
GetCommandLineW
GetConsoleCP
GetConsoleMode
GetCurrentDirectoryA
GetCurrentProcess
GetCurrentProcessId
GetCurrentThread
GetCurrentThreadId
GetEnvironmentStringsW
GetEnvironmentVariableA
GetFileAttributesExW
GetFileType
GetLastError
GetLocaleInfoW
GetLogicalProcessorInformation
GetModuleFileNameA
GetModuleFileNameW
GetModuleHandleA
GetModuleHandleExA
GetModuleHandleExW
GetModuleHandleW
GetNativeSystemInfo
GetNumaHighestNodeNumber
GetOEMCP
GetProcAddress
GetProcessAffinityMask
GetProcessHeap
GetStartupInfoW
GetStdHandle
GetStringTypeW
GetSystemTimeAsFileTime
GetTempFileNameA
GetTempPathA
GetThreadPriority
GetThreadTimes
GetTickCount
GetTimeZoneInformation
GetUserDefaultLCID
GetVersionExW
HeapAlloc
HeapFree
HeapReAlloc
HeapSize
InitOnceExecuteOnce
InitializeCriticalSection
InitializeCriticalSectionAndSpinCount
InitializeSListHead
InterlockedFlushSList
InterlockedPopEntrySList
InterlockedPushEntrySList
IsDebuggerPresent
IsProcessorFeaturePresent
IsValidCodePage
IsValidLocale
IsWow64Process
LCMapStringW
LeaveCriticalSection
LoadLibraryA
LoadLibraryExA
LoadLibraryExW
LoadLibraryW
MultiByteToWideChar
OutputDebugStringA
QueryDepthSList
QueryPerformanceCounter
QueryPerformanceFrequency
QueueUserWorkItem
RaiseException
ReadConsoleW
ReadFile
RegisterWaitForSingleObject
ReleaseMutex
ReleaseSemaphore
ResetEvent
RtlCaptureContext
RtlLookupFunctionEntry
RtlPcToFileHeader
RtlUnwindEx
RtlVirtualUnwind
SetCurrentDirectoryA
SetEndOfFile
SetEnvironmentVariableA
SetEnvironmentVariableW
SetEvent
SetFilePointerEx
SetLastError
SetStdHandle
SetThreadAffinityMask
SetThreadPriority
SetUnhandledExceptionFilter
SignalObjectAndWait
Sleep
SwitchToThread
SystemTimeToTzSpecificLocalTime
TerminateProcess
TlsAlloc
TlsFree
TlsGetValue
TlsSetValue
TryEnterCriticalSection
UnhandledExceptionFilter
UnregisterWait
UnregisterWaitEx
VerSetConditionMask
VerifyVersionInfoW
VirtualAlloc
VirtualFree
VirtualProtect
WaitForSingleObject
WaitForSingleObjectEx
WideCharToMultiByte
WriteConsoleW
WriteFile
ChoosePixelFormat
DescribePixelFormat
GetPixelFormat
SetPixelFormat
SwapBuffers
D3DPERF_BeginEvent
D3DPERF_EndEvent
D3DPERF_GetStatus
D3DPERF_SetMarker
Direct3DCreate9
CM_Get_Child
CM_Get_DevNode_Registry_PropertyW
CM_Get_DevNode_Status
CM_Get_Device_IDW
CM_Get_Device_ID_ListW
CM_Get_Device_ID_List_SizeW
CM_Get_Sibling
CM_Locate_DevNodeW
CM_Open_DevNode_Key
RegCloseKey
RegEnumValueA
RegOpenKeyExA
RegQueryValueExA
USER32.dll
KERNEL32.dll
GDI32.dll
d3d9.dll
SETUPAPI.dll
ADVAPI32.dll
\n0\tP
r\v0\np\t`
\n0\tP
2\v0\np\t`
\rB\t0
B\f0\vP\np\t`
r\n0\tP
\f0\vP\np\t`
\f0\vP\np\t`
\v0\np\t`
\f0\vP\np\t`
\n0\tP
\f0\vP\np\t`
R\n0\tP
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\rb\t0
2\n0\tP
\v0\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
b\f0\vP\np\t`
\f0\vP\np\t`
\n0\tP
\f0\vP\np\t`
\n0\tP
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\n0\tP
R\v0\np\t`
\f0\vP\np\t`
\v0\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\v0\np\t`
\f0\vP\np\t`
\n0\tP
\f0\vP\np\t`
\n0\tP
\n0\tP
\f0\vP\np\t`
00c7
p0c7
p0c7
00c7
p0c7
p0c7
p0c7
\fp\v`
R\n0\tP
\v0\np\t`
\v0\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
p0c7
\n0\tP
\f0\vP\np\t`
\n0\tP
\f0\vP\np\t`
\v0\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\n0\tP
\v0\np\t`
\f0\vP\np\t`
\v0\np\t`
\n0\tP
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
00c7
00c7
P0c7
00c7
4\n5#t%
P0c7
P0c7
P0c7
00c7
p0c7
00c7
\fp\v`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\n0\tP
\n0\tP
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\v0\np\t`
R\v0\np\t`
\v0\np\t`
\rp\f`\vP
p\r`\fP\v0
\f0\vP\np\t`
\f0\vP\np\t`
\v0\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\n0\tP
\f0\vP\np\t`
\v0\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\n0\tP
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\rb\t0
\f0\vP\np\t`
\v0\np\t`
\v0\np\t`
\v0\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\n0\tP
\n0\tP
\f0\vP\np\t`
\n0\tP
\n0\tP
\f0\vP\np\t`
\v0\np\t`
\f0\vP\np\t`
B\f0\vp\n`\t
\n0\tp
\f0\vP\np\t`
b\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\n0\tP
\f0\vP\np\t`
\f0\vP\np\t`
\n0\tP
\f0\vP\np\t`
\f0\vP\np\t`
\v0\np\t`
\n0\tP
\f0\vP\np\t`
\f0\vP\np\t`
\v0\np\t`
\n0\tP
\f0\vP\np\t`
\f0\vP\np\t`
\v0\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
p0c7
\np\t`
p0c7
`0c7
p0c7
p0c7
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
2\f0\vP\np\t`
\f0\vP\np\t`
\v0\np\t`
"\f0\vP\np\t`
\f0\vP\np\t`
\v0\np\t`
\v0\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\n0\tP
\f0\vp\n`\t
\n0\tP
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vp\n`\t
\f0\vP\np\t`
\f0\vp\n`\t
\f0\vp\n`\t
\f0\vp\n`\t
\f0\vp\n`\t
\f0\vp\n`\t
\f0\vp\n`\t
\f0\vp\n`\t
"\f0\vp\n`\t
\f0\vp\n`\t
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\n0\tP
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\n0\tP
p0c7
00c7
\rp\f`\vP
p0c7
`0c7
p0c7
p0c7
\rp\f`\vP
\fp\v`
p0c7
p0c7
\fp\v`\nP
p0c7
\rp\f`\vP
`0c7
\fp\v`
\fp\v`
p0c7
p0c7
P0c7
\fp\v`
p0c7
00c7
R\np\t`
P0c7
\fp\v`
p0c7
p0c7
\fp\v`
00c7
P0c7
p0c7
p0c7
p0c7
p0c7
p0c7
p0c7
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
R\np\t`
P0c7
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
P0c7
\n0\tP
p0c7
p0c7
p0c7
\fp\v`
p0c7
p0c7
p0c7
p0c7
`0c7
p0c7
1\v%#t
`0c7
p0c7
P0c7
P0c7
`0c7
p0c7
p0c7
`0c7
`0c7
p0c7
p0c7
p0c7
00c7
p0c7
00c7
00c7
p0c7
p0c7
00c7
\fp\v`
p0c7
00c7
\fp\vP
00c7
P0c7
p0c7
\fp\v`
p0c7
`0c7
p0c7
00c7
p0c7
p0c7
\fp\v`
p0c7
p0c7
00c7
p0c7
p0c7
p0c7
p0c7
p0c7
00c7
p0c7
p0c7
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\n0\tP
\n0\tP
\f0\vP\np\t`
\f0\vP\np\t`
p0c7
p0c7
p0c7
p0c7
\np\t`
P0c7
00c7
P0c7
00c7
p0c7
p0c7
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\n0\tP
\f0\vP\np\t`
\f0\vP\np\t`
\f0\vP\np\t`
\vP\t\r
\fp\v`
\fp\v`\t
\fp\vP
\fp\vP
\rr\t0
\np\t`
\fp\vP
\fp\v`
\fp\v`
\fp\vP
\fp\v`\nP
\rp\f`\vP
\rp\f`
\rp\f`\vP\t
\fp\vP
\rp\f`\vP
\fp\v`
\fp\v`
\rp\f`\vP
\np\t`
\np\t`
\fp\v`
\fp\v`
