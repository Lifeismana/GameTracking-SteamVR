                          
                                                                                
  This option category has no options.\n
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
 !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
 "$&(*,.02468:<>@BDFHJLNPRTVXZ\^`bdfhjlnprtvxz|~
 $(,048<AEIMQUY]aeimquy}
 (default: 
 (member index 
 (must be 0 or 1)
 (must be 0, 1 or 2)
 (not another case construct, corresponding merge, outer loop merge or outer loop continue)
 (or requires extension or capability)
 (or requires extension)
 4 columns of 3-component vectors of 32-bit floats. 
 <subcommand> -help" to get more help on a specific subcommand
 Base Class Array'
 Base Class Descriptor at (
 C>TQ
 Class Hierarchy Descriptor'
 Complete Object Locator'
 Constituent <id> 
 Constituent <id> count does not match Result Type <id> 
 Constituent count does not match Result Type <id> 
 Either both Hint and Bits should be provided or neither.
 Found result <id> 
 In Vulkan, BufferBlock is disallowed on variables in the StorageBuffer storage class
 NumIDs=
 OpTypeVector. Found Op
 Pointer <id> 
 Profile specification
 Result Type <id> 
 TaskEXT execution model. 
 Type Descriptor'
 [options]
 [subcommand]
 and 
 and ending with 
 and rows 
 appears in the binary before its dominator 
 are referenced but not defined in function 
 arguments.
 arguments. OpTypeFunction <id> 
 as an operand of <id> 
 at minimum or one of the following extensions: 
 at minimum.
 back-edge blocks but the standard requires exactly one
 based on the function's type
 because it is targeted by an OpEntryPoint instruction.
 branches to the 
 branches to the loop continue target 
 called with execution model 
 can only be applied to structure members
 can only be used with physical addressing models
 cannot appear before the memory model instruction
 cannot appear in a function declaration
 cannot be OpTypeVoid.
 cannot be a constant zero.
 cannot be a type
 cannot be a void pointer.
 cannot be applied to structure members
 cannot be used as a member decoration 
 cannot be used by an entry point with the FPFastMathDefault execution mode
 cannot find index 
 cannot have a null value.
 cannot have the sign bit set to 1.
 capability.
 columns, but access index is 
 component type does not match Result Type <id> 
 components
 components are not float scalar.
 components are not int scalar.
 components for 
 components, 
 components, but given 
 components, but given only 
 components.
 construct headed by 
 construct with the 
 construct, but not to the 
 contains members with BuiltIn decoration. Therefore this 
 contains structure <id> 
 count does not match Result Type <id> 
 count must be one.
 decorated as 
 decorated variable must not be used in fragment execution model as an Output storage class for Entry Point id 
 decorated variable must not be used in vertex execution model as an Input storage class for Entry Point id 
 decoration applied to a non-object
 decoration applied to a value with void type
 decoration applied to an object with invalid type
 decoration may not be applied to 
 decoration must not be applied to this storage class
 decoration on a non-struct type.
 decoration on target <id> 
 decoration targeting 
 default value must be at least 1: found 
 defined in block 
 definition does not dominate its parent 
 definition.
 delete
 delete[]
 depends on 
 did not find an member index to get underlying data type for struct type.
 do not match.
 does not dominate its use in block 
 does not fit in a 
 does not have a 
 does not match Pointer <id> 
 does not match incoming value <id> 
 does not match the Function Type's return type <id> 
 does not match the OpTypeFunction parameter type of the same index.
 does not meet this requirement.
 does not reference a function
 does not reference an OpExtInstImport result Id
 does not reference an entry-point
 does not represent a value.
 does not structurally dominate its case construct 
 environments.
 equal: 
 execution mode must not be specified multiple times for the same entry point and operands
 execution mode must not be specified multiple times per entry point
 exits the 
 expected
 extension requires SPIR-V version 1.4 or later.
 for Entry Point id 
 for target environment 
 for variable in 
 from a depth image read to result in a scalar float value
 gets larger than 3
 has 
 has a consumer in a different basic block. The consumer instruction <id> is 
 has bit width 
 has branches to multiple other case construct targets 
 has branches to the case construct that targets 
 has columns 
 has components with bit width 
 has conflicting component assignments
 has conflicting location assignments
 has illegal type.\n
 has invalid branch to block 
 has invalid mask component 
 has no type
 has not been defined
 headed by <ID> 
 in Vertex or Tessellation execution model requires the 
 in function <
 in semantic instruction cannot be a non-semantic instruction
 in the structure <id> '
 index is larger than Type <id> 
 indexes.
 instruction can only have 2 additional operands
 instruction must be a pointer.
 instructions require Geometry execution model
 integer
 into the structure <id> 
 is 0
 is a pointer, which is invalid in the Logical addressing model.
 is a type, not a value
 is a void type.
 is already a merge block for another header
 is banned when using the Vulkan memory model.
 is contained in the 
 is decorated with BuiltIn. BuiltIn decoration should only be applied to struct types, variables and constants.
 is defined more than once
 is disallowed
 is in an invalid layout section
 is invalid
 is missing a location assignment
 is missing or void.
 is not
 is not Workgroup or StorageBuffer.
 is not Workgroup, StorageBuffer, or PhysicalStorageBuffer.
 is not a bool scalar.
 is not a boolean type.
 is not a composite type.
 is not a constant instruction with scalar integer type.
 is not a constant integer type.
 is not a constant or module-scope variable.
 is not a constant or undef.
 is not a constant.
 is not a cooperative matrix type.
 is not a decoration group.
 is not a float scalar.
 is not a float vector.
 is not a function type.
 is not a function.
 is not a logical pointer.
 is not a pointer type.
 is not a pointer.
 is not a predecessor of <id> 
 is not a sampler type.
 is not a scalar constant type.
 is not a scalar integer
 is not a scalar numeric type
 is not a scalar numerical type.
 is not a scalar type.
 is not a struct type.
 is not a type
 is not a type id
 is not a type.
 is not a valid debug type
 is not aligned to 
 is not aligned to scalar element size 
 is not allowed by OpenCL 1.2 
 is not allowed by OpenCL 2.0/2.1 
 is not allowed by OpenCL 2.2 
 is not allowed by Vulkan 1.0 specification
 is not allowed by Vulkan 1.1 specification
 is not allowed by Vulkan 1.2 specification
 is not allowed.
 is not an OpLabel.
 is not an OpString.
 is not an array.
 is not an int scalar.
 is not an int vector.
 is not an object.
 is not defined.
 is not pointer type
 is not the Entry Point operand of an OpEntryPoint.
 is not valid in 
 is out of bounds for 
 is out of bounds. The structure has 
 is referencing 
 is reserved for future use.
 is targeted by 
 is targeted by block 
 is used outside of it's defining function 
 layout rules: member 
 location assignment at location 
 may not exceed 
 members. Largest valid index is 
 multiple times is not allowed.
 multiple times.
 must appear in a block
 must be 0 for a floating-point type, 
 must be 32. Found 
 must be OpConstant. Found Op
 must be OpTypeCooperativeMatrixKHR.
 must be OpTypeCooperativeMatrixNV.
 must be OpTypeInt with width 32 and signedness 0.
 must be OpTypeInt. Found Op
 must be OpTypePointer. Found Op
 must be a 32-bit integer constant instruction.
 must be a boolean constant instruction.
 must be a constant instruction
 must be a memory object declaration
 must be a pointer to an OpTypeStruct.
 must be a result id of 
 must be a result id of 32-bit unsigned OpConstant
 must be a result id of a lexical scope
 must be a scalar integer type.
 must be an OpLabel
 must be an OpTypeRuntimeArray.
 must be an the last member of the struct.
 must be an unsigned integer scalar
 must be explicitly laid out with ArrayStride decorations.
 must be explicitly laid out with MatrixStride decorations.
 must be explicitly laid out with Offset decorations.
 must be explicitly laid out with RowMajor or ColMajor decorations.
 must be of type integer.
 must be present.
 must not point to OpTypeArray, OpTypeMatrix, or OpTypeStruct.
 must point to a storage class of StorageBuffer, PhysicalStorageBuffer, or Uniform.
 must refer only to GLCompute entry-points
 new
 not equal to expected 
 not satisfying alignment to 
 numerical scalar type
 of function 
 of struct ID <
 of the 
 operand at word offset 
 operand index 
 operand of 
 operand: 
 option: 
 or Op
 or earlier
 or later
 overlaps previous member ending at offset 
 provided in OpGroupMemberDecorate for struct <id> 
 provided in OpMemberDecorate for struct <id> 
 reached non-composite type while indexes still remain to be traversed.
 requires Fragment execution model
 requires Kernel capability
 requires RayGenerationKHR execution model
 requires RayGenerationKHR, ClosestHitKHR and MissKHR execution models
 requires SPIR-V version 
 requires Shader capability
 requires a previous definition
 requires a type
 requires a variable pointers capability
 requires capability InterpolationFunction
 requires one of the following extensions: 
 requires one of these capabilities: 
 requires the Vector16 capability
 requires version 
 result type (Op
 says it has 
 spec BuiltIn 
 spec BuiltIn FragCoord variable needs to be a 4-component 32-bit float vector. 
 spec BuiltIn FragDepth variable needs to be a 32-bit float scalar. 
 spec BuiltIn FrontFacing variable needs to be a bool scalar. 
 spec BuiltIn InstanceIndex variable needs to be a 32-bit int scalar. 
 spec BuiltIn VertexIndex variable needs to be a 32-bit int scalar. 
 spec BuiltIn WorkgroupSize variable needs to be a 3-component 32-bit int vector. 
 spec allows BuiltIn 
 spec allows BuiltIn FragCoord to be only used for variables with Input storage class. 
 spec allows BuiltIn FragCoord to be used only with Fragment execution model. 
 spec allows BuiltIn FragDepth to be only used for variables with Output storage class. 
 spec allows BuiltIn FragDepth to be used only with Fragment execution model. 
 spec allows BuiltIn FrontFacing to be only used for variables with Input storage class. 
 spec allows BuiltIn FrontFacing to be used only with Fragment execution model. 
 spec allows BuiltIn InstanceIndex to be only used for variables with Input storage class. 
 spec allows BuiltIn InstanceIndex to be used only with Vertex execution model. 
 spec allows BuiltIn VertexIndex to be only used for variables with Input storage class. 
 spec allows BuiltIn VertexIndex to be used only with Vertex execution model. 
 spec requires DepthReplacing execution mode to be declared when using BuiltIn FragDepth. 
 spec:\n
 starting at word 
 storage class
 storage class for pointer type <id> 
 storage class is read-only
 storage class must follow 
 storage class requires an additional capability
 that is not a scalar or vector
 the 
 the same type as Result Type components
 to be int or float scalar or vector type
 to be int or float scalar type
 to be int or float vector type
 to be not be used with GLCompute execution model. 
 to be only used for variables with Input or Output storage class. 
 to be only used for variables with Input storage class. 
 to be only used for variables with Output storage class. 
 to be used only with Fragment execution model. 
 to be used only with Fragment, Vertex, TessellationControl, TessellationEvaluation or Geometry execution models. 
 to be used only with GLCompute, MeshNV, TaskNV, MeshEXT or
 to be used only with GLCompute, MeshNV, TaskNV, MeshEXT or 
 to be used only with MeshEXT execution model. 
 to be used only with TessellationControl or TessellationEvaluation execution models. 
 to be used only with Vertex execution model. 
 to be used only with Vertex, Geometry, or MeshNV execution models. 
 to be used only with Vertex, MeshNV, TaskNV , MeshEXT or
 to be used only with Vertex, TessellationEvaluation, Geometry, or Fragment execution models. 
 to be used only with the Fragment execution model. 
 to be used with the execution model 
 to have 4 components
 to index into a structure must be an OpConstant.
 type <id> 
 type as Result Type: 
 type definition.
 type does not match Result Type <id> 
 type does not match the Result Type <id> 
 type for pointer <id> 
 used in function 
 uses storage class 
 variable needs to be a 2-component 32-bit int array.
 variable needs to be a 2-component 32-bit int vector. 
 variable needs to be a 3-component 32-bit float vector. 
 variable needs to be a 3-component 32-bit int array.
 variable needs to be a 3-component 32-bit int vector. 
 variable needs to be a 32-bit float array. 
 variable needs to be a 32-bit float scalar. 
 variable needs to be a 32-bit int array.
 variable needs to be a 32-bit int scalar. 
 variable needs to be a 32-bit int vector. 
 variable needs to be a 32-bit int. 
 variable needs to be a 4-component 32-bit int vector. 
 variable needs to be a bool scalar. 
 variable needs to be a int scalar. 
 variable needs to be a matrix with
 vector component count does not match Result Type <id> 
 which is decorated with BuiltIn 
 which is dependent on 
 with 
 with Input interfaces with integer or float type must have a Flat decoration for Entry Point id 
 with two memory access operands requires SPIR-V 1.4 or later
 words instead of 
 words instead.
 words long
 words, but found 
 words, but stated word count is 
 words.
 words: 
 yielding Result Id 
!)19BJRZcks{
"$&(*,.02468:<>@
"3DUfw
"e?<<<<<<l?
#4o>w
#Ib?AG
$Ib?s
$jumptable
$jumptable$__
%.0Lf
%H:%M:%S%m/%d/%y%Y-%m-%d%I:%M:%S %p%H:%M%H:%M:%S
%I:%M:%S %p
%a %b %d %H:%M:%S %Y
%s:%d TRACE: ()\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkBool32 depthBiasEnable = %d)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkBool32 depthBoundsTestEnable = %d)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkBool32 depthTestEnable = %d)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkBool32 depthWriteEnable = %d)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkBool32 primitiveRestartEnable = %d)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkBool32 rasterizerDiscardEnable = %d)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkBool32 stencilTestEnable = %d)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkBuffer buffer = %p, VkDeviceSize offset = %d)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkBuffer buffer = %p, VkDeviceSize offset = %d, VkBuffer countBuffer = %p, VkDeviceSize countBufferOffset = %d, uint32_t maxDrawCount = %d, uint32_t stride = %d\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkBuffer buffer = %p, VkDeviceSize offset = %d, VkIndexType indexType = %d)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkBuffer buffer = %p, VkDeviceSize offset = %d, uint32_t drawCount = %d, uint32_t stride = %d)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkBuffer dstBuffer = %p, VkDeviceSize dstOffset = %d, VkDeviceSize dataSize = %d, const void* pData = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkBuffer dstBuffer = %p, VkDeviceSize dstOffset = %d, VkDeviceSize size = %d, uint32_t data = %d)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkBuffer srcBuffer = %p, VkBuffer dstBuffer = %p, uint32_t regionCount = %d, const VkBufferCopy* pRegions = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkBuffer srcBuffer = %p, VkImage dstImage = %p, VkImageLayout dstImageLayout = %d, uint32_t regionCount = %d, const VkBufferImageCopy* pRegions = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkCommandBufferResetFlags flags = %d)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkCompareOp depthCompareOp = %d)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkCullModeFlags cullMode = %d)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkEvent event = %p, VkPipelineStageFlags stageMask = %d)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkEvent event = %p, VkPipelineStageFlags2 stageMask = %d)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkEvent event = %p, const VkDependencyInfo* pDependencyInfo = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkFrontFace frontFace = %d)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkImage image = %p, VkImageLayout imageLayout = %d, const VkClearColorValue* pColor = %p, uint32_t rangeCount = %d, const VkImageSubresourceRange* pRanges = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkImage image = %p, VkImageLayout imageLayout = %d, const VkClearDepthStencilValue* pDepthStencil = %p, uint32_t rangeCount = %d, const VkImageSubresourceRange* pRanges = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkImage srcImage = %p, VkImageLayout srcImageLayout = %d, VkBuffer dstBuffer = %p, uint32_t regionCount = %d, const VkBufferImageCopy* pRegions = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkImage srcImage = %p, VkImageLayout srcImageLayout = %d, VkImage dstImage = %p, VkImageLayout dstImageLayout = %d, uint32_t regionCount = %d, const VkImageBlit* pRegions = %p, VkFilter filter = %d)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkImage srcImage = %p, VkImageLayout srcImageLayout = %d, VkImage dstImage = %p, VkImageLayout dstImageLayout = %d, uint32_t regionCount = %d, const VkImageCopy* pRegions = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkImage srcImage = %p, VkImageLayout srcImageLayout = %d, VkImage dstImage = %p, VkImageLayout dstImageLayout = %d, uint32_t regionCount = %d, const VkImageResolve* pRegions = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkPipelineBindPoint pipelineBindPoint = %d, VkPipeline pipeline = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkPipelineBindPoint pipelineBindPoint = %d, VkPipelineLayout layout = %p, uint32_t firstSet = %d, uint32_t descriptorSetCount = %d, const VkDescriptorSet* pDescriptorSets = %p, uint32_t dynamicOffsetCount = %d, const uint32_t* pDynamicOffsets = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkPipelineLayout layout = %p, VkShaderStageFlags stageFlags = %d, uint32_t offset = %d, uint32_t size = %d, const void* pValues = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkPipelineStageFlagBits pipelineStage = %d, VkQueryPool queryPool = %p, uint32_t query = %d)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkPipelineStageFlags srcStageMask = 0x%08X, VkPipelineStageFlags dstStageMask = 0x%08X, VkDependencyFlags dependencyFlags = %d, uint32_t memoryBarrierCount = %d, onst VkMemoryBarrier* pMemoryBarriers = %p, uint32_t bufferMemoryBarrierCount = %d, const VkBufferMemoryBarrier* pBufferMemoryBarriers = %p, uint32_t imageMemoryBarrierCount = %d, const VkImageMemoryBarrier* pImageMemoryBarriers = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkPipelineStageFlags2 stage = %d, VkQueryPool queryPool = %p, uint32_t query = %d)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkPrimitiveTopology primitiveTopology = %d)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkQueryPool queryPool = %p, uint32_t firstQuery = %d, uint32_t queryCount = %d)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkQueryPool queryPool = %p, uint32_t firstQuery = %d, uint32_t queryCount = %d, VkBuffer dstBuffer = %p, VkDeviceSize dstOffset = %d, VkDeviceSize stride = %d, VkQueryResultFlags flags = %d)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkQueryPool queryPool = %p, uint32_t query = %d)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkQueryPool queryPool = %p, uint32_t query = %d, VkQueryControlFlags flags = %d)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkStencilFaceFlags faceMask = %d, VkStencilOp failOp = %d, VkStencilOp passOp = %d, VkStencilOp depthFailOp = %d, VkCompareOp compareOp = %d)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkStencilFaceFlags faceMask = %d, uint32_t compareMask = %d)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkStencilFaceFlags faceMask = %d, uint32_t reference = %d)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkStencilFaceFlags faceMask = %d, uint32_t writeMask = %d)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, VkSubpassContents contents = %d)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, baseGroupX = %u, baseGroupY = %u, baseGroupZ = %u, groupCountX = %u, groupCountY = %u, groupCountZ = %u)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, const VkBlitImageInfo2* pBlitImageInfo = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, const VkCommandBufferBeginInfo* pBeginInfo = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, const VkCopyBufferInfo2* pCopyBufferInfo = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, const VkCopyBufferToImageInfo2* pCopyBufferToImageInfo = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, const VkCopyImageInfo2* pCopyImageInfo = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, const VkCopyImageToBufferInfo2* pCopyImageToBufferInfo = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, const VkDebugUtilsLabelEXT* pLabelInfo = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, const VkDependencyInfo* pDependencyInfo = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, const VkRenderPassBeginInfo* pRenderPassBegin = %p, const VkSubpassBeginInfoKHR* pSubpassBeginInfo = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, const VkRenderingInfo* pRenderingInfo = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, const VkResolveImageInfo2* pResolveImageInfo = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, const VkSubpassBeginInfoKHR* pSubpassBeginInfo = %p, const VkSubpassEndInfoKHR* pSubpassEndInfo = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, const VkSubpassEndInfoKHR* pSubpassEndInfo = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, const float blendConstants[4] = {%f, %f, %f, %f})\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, float depthBiasConstantFactor = %f, float depthBiasClamp = %f, float depthBiasSlopeFactor = %f)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, float lineWidth = %f)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, float minDepthBounds = %f, float maxDepthBounds = %f)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, uint32_t attachmentCount = %d, const VkClearAttachment* pAttachments = %p, uint32_t rectCount = %d, const VkClearRect* pRects = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, uint32_t commandBufferCount = %d, const VkCommandBuffer* pCommandBuffers = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, uint32_t deviceMask = %d\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, uint32_t eventCount = %d, const VkEvent* pEvents = %p, VkPipelineStageFlags srcStageMask = 0x%08X, VkPipelineStageFlags dstStageMask = 0x%08X, uint32_t memoryBarrierCount = %d, const VkMemoryBarrier* pMemoryBarriers = %p, uint32_t bufferMemoryBarrierCount = %d, const VkBufferMemoryBarrier* pBufferMemoryBarriers = %p, uint32_t imageMemoryBarrierCount = %d, const VkImageMemoryBarrier* pImageMemoryBarriers = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, uint32_t eventCount = %d, const VkEvent* pEvents = %p, const VkDependencyInfo* pDependencyInfos = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, uint32_t firstBinding = %d, uint32_t bindingCount = %d, const VkBuffer* pBuffers = %p, const VkDeviceSize* pOffsets = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, uint32_t firstBinding = %d, uint32_t bindingCount = %d, const VkBuffer* pBuffers = %p, const VkDeviceSize* pOffsets = %p, const VkDeviceSize *pSizes = %p, const VkDeviceSize *pStrides = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, uint32_t firstScissor = %d, uint32_t scissorCount = %d, const VkRect2D* pScissors = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, uint32_t firstViewport = %d, uint32_t viewportCount = %d, const VkViewport* pViewports = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, uint32_t groupCountX = %d, uint32_t groupCountY = %d, uint32_t groupCountZ = %d)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, uint32_t indexCount = %d, uint32_t instanceCount = %d, uint32_t firstIndex = %d, int32_t vertexOffset = %d, uint32_t firstInstance = %d)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, uint32_t lineStippleFactor = %u, uint16_t lineStipplePattern = %u)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, uint32_t scissorCount = %d, const VkRect2D *pScissors = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, uint32_t vertexBindingDescriptionCount = %d, const VkVertexInputBindingDescription2EXT *pVertexBindingDescriptions = %p, uint32_t vertexAttributeDescriptionCount = %d, const VkVertexInputAttributeDescription2EXT *pVertexAttributeDescriptions = %p)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, uint32_t vertexCount = %d, uint32_t instanceCount = %d, uint32_t firstVertex = %d, uint32_t firstInstance = %d)\n
%s:%d TRACE: (VkCommandBuffer commandBuffer = %p, uint32_t viewportCount = %d, const VkViewport *pViewports = %p)\n
%s:%d TRACE: (VkDevice device = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkBuffer buffer = %p, VkDeviceMemory memory = %p, VkDeviceSize memoryOffset = %d)\n
%s:%d TRACE: (VkDevice device = %p, VkBuffer buffer = %p, VkMemoryRequirements* pMemoryRequirements = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkBuffer buffer = %p, const VkAllocationCallbacks* pAllocator = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkBufferView bufferView = %p, const VkAllocationCallbacks* pAllocator = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkCommandPool commandPool = %p, VkCommandPoolResetFlags flags = %d)\n
%s:%d TRACE: (VkDevice device = %p, VkCommandPool commandPool = %p, VkCommandPoolTrimFlags flags = %d)\n
%s:%d TRACE: (VkDevice device = %p, VkCommandPool commandPool = %p, const VkAllocationCallbacks* pAllocator = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkCommandPool commandPool = %p, uint32_t commandBufferCount = %d, const VkCommandBuffer* pCommandBuffers = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkDescriptorPool descriptorPool = %p, VkDescriptorPoolResetFlags flags = 0x%08X)\n
%s:%d TRACE: (VkDevice device = %p, VkDescriptorPool descriptorPool = %p, const VkAllocationCallbacks* pAllocator = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkDescriptorPool descriptorPool = %p, uint32_t descriptorSetCount = %d, const VkDescriptorSet* pDescriptorSets = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkDescriptorSet descriptorSet = %p, VkDescriptorUpdateTemplate descriptorUpdateTemplate = %p, const void* pData = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkDescriptorSetLayout descriptorSetLayout = %p, const VkAllocationCallbacks* pAllocator = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkDescriptorUpdateTemplate descriptorUpdateTemplate = %p, const VkAllocationCallbacks* pAllocator = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkDeviceGroupPresentCapabilitiesKHR* pDeviceGroupPresentCapabilities = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkDeviceMemory memory = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkDeviceMemory memory = %p, VkDeviceSize offset = %d, VkDeviceSize size = %d, VkMemoryMapFlags flags = %d, void** ppData = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkDeviceMemory memory = %p, VkDeviceSize* pCommittedMemoryInBytes = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkDeviceMemory memory = %p, const VkAllocationCallbacks* pAllocator = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkEvent event = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkEvent event = %p, const VkAllocationCallbacks* pAllocator = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkExternalMemoryHandleTypeFlagBits handleType = %x, const void *pHostPointer = %p, VkMemoryHostPointerPropertiesEXT *pMemoryHostPointerProperties = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkFence fence = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkFence fence = %p, const VkAllocationCallbacks* pAllocator = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkFramebuffer framebuffer = %p, const VkAllocationCallbacks* pAllocator = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkImage image = %p, VkDeviceMemory memory = %p, VkDeviceSize memoryOffset = %d)\n
%s:%d TRACE: (VkDevice device = %p, VkImage image = %p, VkMemoryRequirements* pMemoryRequirements = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkImage image = %p, const VkAllocationCallbacks* pAllocator = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkImage image = %p, const VkImageSubresource* pSubresource = %p, VkSubresourceLayout* pLayout = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkImage image = %p, const VkImageSubresource2KHR* pSubresource = %p, VkSubresourceLayout2KHR* pLayout = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkImage image = %p, uint32_t* pSparseMemoryRequirementCount = %p, VkSparseImageMemoryRequirements* pSparseMemoryRequirements = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkImageView imageView = %p, const VkAllocationCallbacks* pAllocator = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkObjectType objectType = %d, uint64_t objectHandle = %llu, VkPrivateDataSlot privateDataSlot = %p, uint64_t data = %llu)\n
%s:%d TRACE: (VkDevice device = %p, VkObjectType objectType = %d, uint64_t objectHandle = %llu, VkPrivateDataSlot privateDataSlot = %p, uint64_t data = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkPipeline pipeline = %p, const VkAllocationCallbacks* pAllocator = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkPipelineCache dstCache = %p, uint32_t srcCacheCount = %d, const VkPipelineCache* pSrcCaches = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkPipelineCache pipelineCache = %p, const VkAllocationCallbacks* pAllocator = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkPipelineCache pipelineCache = %p, size_t* pDataSize = %p, void* pData = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkPipelineCache pipelineCache = %p, uint32_t createInfoCount = %d, const VkComputePipelineCreateInfo* pCreateInfos = %p, const VkAllocationCallbacks* pAllocator = %p, VkPipeline* pPipelines = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkPipelineCache pipelineCache = %p, uint32_t createInfoCount = %d, const VkGraphicsPipelineCreateInfo* pCreateInfos = %p, const VkAllocationCallbacks* pAllocator = %p, VkPipeline* pPipelines = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkPipelineLayout pipelineLayout = %p, const VkAllocationCallbacks* pAllocator = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkPrivateDataSlot privateDataSlot = %p, const VkAllocationCallbacks* pAllocator = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkQueryPool queryPool = %p, const VkAllocationCallbacks* pAllocator = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkQueryPool queryPool = %p, uint32_t firstQuery = %d, uint32_t queryCount = %d)\n
%s:%d TRACE: (VkDevice device = %p, VkQueryPool queryPool = %p, uint32_t firstQuery = %d, uint32_t queryCount = %d, size_t dataSize = %d, void* pData = %p, VkDeviceSize stride = %d, VkQueryResultFlags flags = %d)\n
%s:%d TRACE: (VkDevice device = %p, VkRenderPass renderPass = %p, VkExtent2D* pGranularity = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkRenderPass renderPass = %p, const VkAllocationCallbacks* pAllocator = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkSampler sampler = %p, const VkAllocationCallbacks* pAllocator = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkSamplerYcbcrConversion ycbcrConversion = %p, const VkAllocationCallbacks* pAllocator = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkSemaphore semaphore = %p, const VkAllocationCallbacks* pAllocator = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkSemaphore semaphore = %p, uint64_t* pValue = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkShaderModule shaderModule = %p, const VkAllocationCallbacks* pAllocator = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkSurfaceKHR surface = %p, VkDeviceGroupPresentModeFlagsKHR *pModes = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkSwapchainKHR swapchain = %p, const VkAllocationCallbacks* pAllocator = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkSwapchainKHR swapchain = %p, uint32_t* pSwapchainImageCount = %p, VkImage* pSwapchainImages = %p)\n
%s:%d TRACE: (VkDevice device = %p, VkSwapchainKHR swapchain = %p, uint64_t timeout = %llu, VkSemaphore semaphore = %p, VkFence fence = %p, uint32_t* pImageIndex = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkAcquireNextImageInfoKHR *pAcquireInfo = %p, uint32_t *pImageIndex = %p\n
%s:%d TRACE: (VkDevice device = %p, const VkAllocationCallbacks* pAllocator = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkBufferCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkBuffer* pBuffer = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkBufferDeviceAddressInfo* pInfo = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkBufferMemoryRequirementsInfo2* pInfo = %p, VkMemoryRequirements2* pMemoryRequirements = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkBufferViewCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkBufferView* pView = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkCommandBufferAllocateInfo* pAllocateInfo = %p, VkCommandBuffer* pCommandBuffers = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkCommandPoolCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkCommandPool* pCommandPool = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkCopyImageToImageInfoEXT* pCopyImageToImageInfo = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkCopyImageToMemoryInfoEXT* pCopyImageToMemoryInfo = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkCopyMemoryToImageInfoEXT* pCopyMemoryToImageInfo = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkDebugUtilsObjectNameInfoEXT* pNameInfo = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkDebugUtilsObjectTagInfoEXT* pTagInfo = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkDescriptorPoolCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkDescriptorPool* pDescriptorPool = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkDescriptorSetAllocateInfo* pAllocateInfo = %p, VkDescriptorSet* pDescriptorSets = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkDescriptorSetLayoutCreateInfo* pCreateInfo = %p, VkDescriptorSetLayoutSupport* pSupport = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkDescriptorSetLayoutCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkDescriptorSetLayout* pSetLayout = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkDescriptorUpdateTemplateCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkDescriptorUpdateTemplate* pDescriptorUpdateTemplate = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkDeviceBufferMemoryRequirements* pInfo = %p, VkMemoryRequirements2* pMemoryRequirements = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkDeviceImageMemoryRequirements* pInfo = %p, VkMemoryRequirements2* pMemoryRequirements = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkDeviceImageMemoryRequirements* pInfo = %p, uint32_t* pSparseMemoryRequirementCount = %p, VkSparseImageMemoryRequirements2* pSparseMemoryRequirements = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkDeviceMemoryOpaqueCaptureAddressInfo* pInfo = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkDeviceQueueInfo2* pQueueInfo = %p, VkQueue* pQueue = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkEventCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkEvent* pEvent = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkFenceCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkFence* pFence = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkFramebufferCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkFramebuffer* pFramebuffer = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkImageCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkImage* pImage = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkImageMemoryRequirementsInfo2* pInfo = %p, VkMemoryRequirements2* pMemoryRequirements = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkImageSparseMemoryRequirementsInfo2* pInfo = %p, uint32_t* pSparseMemoryRequirementCount = %p, VkSparseImageMemoryRequirements2* pSparseMemoryRequirements = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkImageViewCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkImageView* pView = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkMemoryAllocateInfo* pAllocateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkDeviceMemory* pMemory = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkPipelineCacheCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkPipelineCache* pPipelineCache = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkPipelineLayoutCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkPipelineLayout* pPipelineLayout = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkPrivateDataSlotCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkPrivateDataSlot* pPrivateDataSlot = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkQueryPoolCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkQueryPool* pQueryPool = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkReleaseSwapchainImagesInfoEXT *pReleaseInfo = %p\n
%s:%d TRACE: (VkDevice device = %p, const VkRenderPassCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkRenderPass* pRenderPass = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkSamplerCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkSampler* pSampler = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkSamplerYcbcrConversionCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkSamplerYcbcrConversion* pYcbcrConversion = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkSemaphoreCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkSemaphore* pSemaphore = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkSemaphoreSignalInfo *pSignalInfo = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkSemaphoreWaitInfo *pWaitInfo = %p, uint64_t timeout = %llu)\n
%s:%d TRACE: (VkDevice device = %p, const VkShaderModuleCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkShaderModule* pShaderModule = %p)\n
%s:%d TRACE: (VkDevice device = %p, const VkSwapchainCreateInfoKHR* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkSwapchainKHR* pSwapchain = %p)\n
%s:%d TRACE: (VkDevice device = %p, const char* pName = %p)\n
%s:%d TRACE: (VkDevice device = %p, uint32_t bindInfoCount = %d, const VkBindBufferMemoryInfo* pBindInfos = %p)\n
%s:%d TRACE: (VkDevice device = %p, uint32_t bindInfoCount = %d, const VkBindImageMemoryInfo* pBindInfos = %p)\n
%s:%d TRACE: (VkDevice device = %p, uint32_t descriptorWriteCount = %d, const VkWriteDescriptorSet* pDescriptorWrites = %p, uint32_t descriptorCopyCount = %d, const VkCopyDescriptorSet* pDescriptorCopies = %p)\n
%s:%d TRACE: (VkDevice device = %p, uint32_t fenceCount = %d, const VkFence* pFences = %p)\n
%s:%d TRACE: (VkDevice device = %p, uint32_t fenceCount = %d, const VkFence* pFences = %p, VkBool32 waitAll = %d, uint64_t timeout = %llu)\n
%s:%d TRACE: (VkDevice device = %p, uint32_t heapIndex = %d, uint32_t localDeviceIndex = %d, uint32_t remoteDeviceIndex = %d, VkPeerMemoryFeatureFlags* pPeerMemoryFeatures = %p)\n
%s:%d TRACE: (VkDevice device = %p, uint32_t memoryRangeCount = %d, const VkMappedMemoryRange* pMemoryRanges = %p)\n
%s:%d TRACE: (VkDevice device = %p, uint32_t queueFamilyIndex = %d, uint32_t queueIndex = %d, VkQueue* pQueue = %p)\n
%s:%d TRACE: (VkDevice device = %p, uint32_t transitionCount = %u, const VkHostImageLayoutTransitionInfoEXT* pTransitions = %p)\n
%s:%d TRACE: (VkInstance instance = %p, VkDebugUtilsMessageSeverityFlagBitsEXT messageSeverity = %d, VkDebugUtilsMessageTypeFlagsEXT messageTypes = %d, const VkDebugUtilsMessengerCallbackDataEXT* pCallbackData = %p)\n
%s:%d TRACE: (VkInstance instance = %p, VkDebugUtilsMessengerEXT messenger = %p, const VkAllocationCallbacks* pAllocator = %p)\n
%s:%d TRACE: (VkInstance instance = %p, VkHeadlessSurfaceCreateInfoEXT* pCreateInfo = %p, VkAllocationCallbacks* pAllocator = %p, VkSurface* pSurface = %p)\n
%s:%d TRACE: (VkInstance instance = %p, VkSurfaceKHR surface = %p, const VkAllocationCallbacks* pAllocator = %p)\n
%s:%d TRACE: (VkInstance instance = %p, VkWin32SurfaceCreateInfoKHR* pCreateInfo = %p, VkAllocationCallbacks* pAllocator = %p, VkSurface* pSurface = %p)\n
%s:%d TRACE: (VkInstance instance = %p, const VkAllocationCallbacks* pAllocator = %p)\n
%s:%d TRACE: (VkInstance instance = %p, const VkDebugUtilsMessengerCreateInfoEXT* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkDebugUtilsMessengerEXT* pMessenger = %p)\n
%s:%d TRACE: (VkInstance instance = %p, const char* pName = %p)\n
%s:%d TRACE: (VkInstance instance = %p, uint32_t* pPhysicalDeviceCount = %p, VkPhysicalDevice* pPhysicalDevices = %p)\n
%s:%d TRACE: (VkInstance instance = %p, uint32_t* pPhysicalDeviceGroupCount = %p, VkPhysicalDeviceGroupProperties* pPhysicalDeviceGroupProperties = %p)\n
%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, VkFormat format = %d, VkFormatProperties2* pFormatProperties = %p)\n
%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, VkFormat format = %d, VkImageType type = %d, VkImageTiling tiling = %d, VkImageUsageFlags usage = %d, VkImageCreateFlags flags = %d, VkImageFormatProperties* pImageFormatProperties = %p)\n
%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, VkFormat format = %d, VkImageType type = %d, VkSampleCountFlagBits samples = %d, VkImageUsageFlags usage = %d, VkImageTiling tiling = %d, uint32_t* pPropertyCount = %p, VkSparseImageFormatProperties* pProperties = %p)\n
%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, VkPhysicalDeviceFeatures* pFeatures = %p)\n
%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, VkPhysicalDeviceFeatures2* pFeatures = %p)\n
%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, VkPhysicalDeviceMemoryProperties* pMemoryProperties = %p)\n
%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, VkPhysicalDeviceMemoryProperties2* pMemoryProperties = %p)\n
%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, VkPhysicalDeviceProperties* pProperties = %p)\n
%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, VkPhysicalDeviceProperties2* pProperties = %p)\n
%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, VkPhysicalDeviceSurfaceInfo2KHR *pSurfaceInfo = %p. uint32_t* pSurfaceFormatCount = %p, VkSurfaceFormat2KHR* pSurfaceFormats = %p)\n
%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, VkSurfaceKHR surface = %p uint32_t* pPresentModeCount = %p, VkPresentModeKHR* pPresentModes = %p)\n
%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, VkSurfaceKHR surface = %p, VkSurfaceCapabilitiesKHR* pSurfaceCapabilities = %p)\n
%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, VkSurfaceKHR surface = %p, uint32_t* pRectCount = %p, VkRect2D* pRects = %p)\n
%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, VkSurfaceKHR surface = %p. uint32_t* pSurfaceFormatCount = %p, VkSurfaceFormatKHR* pSurfaceFormats = %p)\n
%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, const VkDeviceCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkDevice* pDevice = %p)\n
%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, const VkPhysicalDeviceExternalBufferInfo* pExternalBufferInfo = %p, VkExternalBufferProperties* pExternalBufferProperties = %p)\n
%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, const VkPhysicalDeviceExternalFenceInfo* pExternalFenceInfo = %p, VkExternalFenceProperties* pExternalFenceProperties = %p)\n
%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, const VkPhysicalDeviceExternalSemaphoreInfo* pExternalSemaphoreInfo = %p, VkExternalSemaphoreProperties* pExternalSemaphoreProperties = %p)\n
%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, const VkPhysicalDeviceImageFormatInfo2* pImageFormatInfo = %p, VkImageFormatProperties2* pImageFormatProperties = %p)\n
%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, const VkPhysicalDeviceSparseImageFormatInfo2* pFormatInfo = %p, uint32_t* pPropertyCount = %p, VkSparseImageFormatProperties2* pProperties = %p)\n
%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, const VkPhysicalDeviceSurfaceInfo2KHR *pSurfaceInfo = %p, VkSurfaceCapabilities2KHR *pSurfaceCapabilities = %p)\n
%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, const char* pLayerName, uint32_t* pPropertyCount = %p, VkExtensionProperties* pProperties = %p)\n
%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, uint32_t queueFamilyIndex = %d)\n
%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, uint32_t queueFamilyIndex = %d, VkSurface surface = %p, VKBool32* pSupported = %p)\n
%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, uint32_t* pPropertyCount = %p, VkLayerProperties* pProperties = %p)\n
%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, uint32_t* pQueueFamilyPropertyCount = %p, VkQueueFamilyProperties* pQueueFamilyProperties = %p))\n
%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, uint32_t* pQueueFamilyPropertyCount = %p, VkQueueFamilyProperties2* pQueueFamilyProperties = %p)\n
%s:%d TRACE: (VkPhysicalDevice physicalDevice = %p, uint32_t* pToolCount = %p, VkPhysicalDeviceToolProperties* pToolProperties = %p)\n
%s:%d TRACE: (VkQueue queue = %p)\n
%s:%d TRACE: (VkQueue queue = %p, const VkDebugUtilsLabelEXT* pLabelInfo = %p)\n
%s:%d TRACE: (VkQueue queue = %p, const VkPresentInfoKHR* pPresentInfo = %p)\n
%s:%d TRACE: (VkQueue queue = %p, uint32_t submitCount = %d, const VkSubmitInfo* pSubmits = %p, VkFence fence = %p)\n
%s:%d TRACE: (VkQueue queue = %p, uint32_t submitCount = %d, const VkSubmitInfo2* pSubmits = %p, VkFence fence = %p)\n
%s:%d TRACE: (const VkInstanceCreateInfo* pCreateInfo = %p, const VkAllocationCallbacks* pAllocator = %p, VkInstance* pInstance = %p)\n
%s:%d TRACE: (const char* pLayerName = %p, uint32_t* pPropertyCount = %p, VkExtensionProperties* pProperties = %p)\n
%s:%d TRACE: (uint32_t* pApiVersion = %p)\n
%s:%d TRACE: (uint32_t* pPropertyCount = %p, VkLayerProperties* pProperties = %p)\n
%s:%d TRACE: GetPhysicalDeviceFormatProperties(VkPhysicalDevice physicalDevice = %p, VkFormat format = %d, VkFormatProperties* pFormatProperties = %p)\n
%s:%d WARNING: SPIR-V string literal was not null-terminated\n
%s:%d WARNING: UNIMPLEMENTED: b/141246700: Function block instruction %d : %s\n
%s:%d WARNING: UNIMPLEMENTED: b/141246700: Function block number of instructions: %d\n
%s:%d WARNING: UNIMPLEMENTED: b/148241854: Non-constant initializers not yet implemented\n
%s:%d WARNING: UNIMPLEMENTED: b/148242443: layerCount != 1\n
%s:%d WARNING: UNIMPLEMENTED: b/148242443: levelCount != 1\n
%s:%d WARNING: UNIMPLEMENTED: b/176819536\n
%s:%d WARNING: UNREACHABLE: %s should have already been lowered.\n
%s:%d WARNING: UNREACHABLE: %s\n
%s:%d WARNING: UNREACHABLE: EvalSpecConstantBinaryOp op: %s\n
%s:%d WARNING: UNREACHABLE: EvalSpecConstantUnaryOp op: %s\n
%s:%d WARNING: UNREACHABLE: Execution mode: %d\n
%s:%d WARNING: UNREACHABLE: ExtInst %d\n
%s:%d WARNING: UNREACHABLE: Failed to find executable section that matches input function names\n
%s:%d WARNING: UNREACHABLE: Format: %s\n
%s:%d WARNING: UNREACHABLE: GLSLstd450Determinant can only operate with square matrices. Got %d elements\n
%s:%d WARNING: UNREACHABLE: GLSLstd450IMix has been removed from the specification\n
%s:%d WARNING: UNREACHABLE: GLSLstd450MatrixInverse can only operate with square matrices. Got %d elements\n
%s:%d WARNING: UNREACHABLE: Image descriptorType: %d\n
%s:%d WARNING: UNREACHABLE: Invalid component\n
%s:%d WARNING: UNREACHABLE: Invalid pointer kind %d\n
%s:%d WARNING: UNREACHABLE: MemorySemanticsMask: %x\n
%s:%d WARNING: UNREACHABLE: Not possible until we have multiple bit widths\n
%s:%d WARNING: UNREACHABLE: RValue<Float4> RcpApprox()\n
%s:%d WARNING: UNREACHABLE: RValue<Float4> RcpSqrtApprox()\n
%s:%d WARNING: UNREACHABLE: RValue<Float> RcpApprox()\n
%s:%d WARNING: UNREACHABLE: Sampler function %d\n
%s:%d WARNING: UNREACHABLE: Scope for execution must be limited to Workgroup or Subgroup\n
%s:%d WARNING: UNREACHABLE: Storage class %d\n
%s:%d WARNING: UNREACHABLE: Unexpected Block Kind: %d\n
%s:%d WARNING: UNREACHABLE: Unexpected Extension name %d\n
%s:%d WARNING: UNREACHABLE: Unexpected StorageClass %d\n
%s:%d WARNING: UNREACHABLE: Unknown Extension::Name<%d>\n
%s:%d WARNING: UNREACHABLE: Unknown Optimization Level %d\n
%s:%d WARNING: UNREACHABLE: Unknown constant vector type: %d\n
%s:%d WARNING: UNREACHABLE: Unknown interpolation type: %d\n
%s:%d WARNING: UNREACHABLE: Unknown non-terminal instruction %s\n
%s:%d WARNING: UNREACHABLE: Unknown terminal instruction %s\n
%s:%d WARNING: UNREACHABLE: VkImageType: %d\n
%s:%d WARNING: UNREACHABLE: addressingMode %d\n
%s:%d WARNING: UNREACHABLE: task.type %d\n
%s:%d WARNING: UNREACHABLE: texelSize: %d\n
%s:%d WARNING: UNREACHABLE: unknown affinity policy\n
%s:%d WARNING: UNREACHABLE: usage %d\n
%s:%d WARNING: UNSUPPORTED: %s\n
%s:%d WARNING: UNSUPPORTED: Blitter destination format %d\n
%s:%d WARNING: UNSUPPORTED: Blitter source format %d\n
%s:%d WARNING: UNSUPPORTED: Compressed format %d\n
%s:%d WARNING: UNSUPPORTED: Cube doesn't have square faces : (%d, %d)\n
%s:%d WARNING: UNSUPPORTED: Depth format: %d\n
%s:%d WARNING: UNSUPPORTED: EmitGroupNonUniform op: %s\n
%s:%d WARNING: UNSUPPORTED: EvalSpecConstantOp op: %s\n
%s:%d WARNING: UNSUPPORTED: ExecutionModel: %d\n
%s:%d WARNING: UNSUPPORTED: Format %d\n
%s:%d WARNING: UNSUPPORTED: Format: %d\n
%s:%d WARNING: UNSUPPORTED: Group operation: %d\n
%s:%d WARNING: UNSUPPORTED: GroupOperation %d\n
%s:%d WARNING: UNSUPPORTED: Image operands 0x%08X\n
%s:%d WARNING: UNSUPPORTED: SPIR-V Extension: %s\n
%s:%d WARNING: UNSUPPORTED: SPIR-V Float16 or Float64 Capability (OpFConvert)\n
%s:%d WARNING: UNSUPPORTED: SPIR-V Float64 Capability (GLSLstd450PackDouble2x32)\n
%s:%d WARNING: UNSUPPORTED: SPIR-V Float64 Capability (GLSLstd450UnpackDouble2x32)\n
%s:%d WARNING: UNSUPPORTED: SPIR-V GenericPointer Capability (StorageClassGeneric)\n
%s:%d WARNING: UNSUPPORTED: SPIR-V ImageFormat %u\n
%s:%d WARNING: UNSUPPORTED: SPIR-V Int16 or Int64 Capability (OpSConvert)\n
%s:%d WARNING: UNSUPPORTED: SPIR-V Int16 or Int64 Capability (OpUConvert)\n
%s:%d WARNING: UNSUPPORTED: SPIR-V OpenCL Execution Model (StorageClassCrossWorkgroup)\n
%s:%d WARNING: UNSUPPORTED: SPIR-V does not define a OpGroupNonUniformQuadSwap result for a direction of %d\n
%s:%d WARNING: UNSUPPORTED: Sample count %d\n
%s:%d WARNING: UNSUPPORTED: Samples: %d\n
%s:%d WARNING: UNSUPPORTED: StorageClass %d not yet supported\n
%s:%d WARNING: UNSUPPORTED: Unknown integer pragma option %d\n
%s:%d WARNING: UNSUPPORTED: Unknown semaphore type\n
%s:%d WARNING: UNSUPPORTED: Unsupported Descriptor Type: %d\n
%s:%d WARNING: UNSUPPORTED: Unsupported advanced VkBlendOp: %d\n
%s:%d WARNING: UNSUPPORTED: Unsupported capability %u\n
%s:%d WARNING: UNSUPPORTED: Unsupported robustness behavior\n
%s:%d WARNING: UNSUPPORTED: Unsupported sample count\n
%s:%d WARNING: UNSUPPORTED: Unsupported stage\n
%s:%d WARNING: UNSUPPORTED: VK_KHR_draw_indirect_count\n
%s:%d WARNING: UNSUPPORTED: VkBlendFactor: %d\n
%s:%d WARNING: UNSUPPORTED: VkBlendOp: %d\n
%s:%d WARNING: UNSUPPORTED: VkCompareOp: %d\n
%s:%d WARNING: UNSUPPORTED: VkComponentSwizzle %d\n
%s:%d WARNING: UNSUPPORTED: VkDynamicState %d\n
%s:%d WARNING: UNSUPPORTED: VkFormat %d\n
%s:%d WARNING: UNSUPPORTED: VkFormat: %d\n
%s:%d WARNING: UNSUPPORTED: VkImageTiling %d\n
%s:%d WARNING: UNSUPPORTED: VkImageViewType %d\n
%s:%d WARNING: UNSUPPORTED: VkIndexType %d\n
%s:%d WARNING: UNSUPPORTED: VkPhysicalDeviceFeatures::alphaToOne\n
%s:%d WARNING: UNSUPPORTED: VkPhysicalDeviceFeatures::inheritedQueries\n
%s:%d WARNING: UNSUPPORTED: VkPhysicalDeviceFeatures::logicOp\n
%s:%d WARNING: UNSUPPORTED: VkPhysicalDeviceFeatures::multiViewport\n
%s:%d WARNING: UNSUPPORTED: VkPhysicalDeviceFeatures::pipelineStatisticsQuery\n
%s:%d WARNING: UNSUPPORTED: VkPhysicalDeviceVulkan11Features::protectedMemory\n
%s:%d WARNING: UNSUPPORTED: VkPipelineBindPoint %d\n
%s:%d WARNING: UNSUPPORTED: VkPrimitiveTopology %d\n
%s:%d WARNING: UNSUPPORTED: VkRenderPassCreateInfo2KHR->subpass[%d]->pNext sType: %s\n
%s:%d WARNING: UNSUPPORTED: VkStencilOp: %d\n
%s:%d WARNING: UNSUPPORTED: addressMode %d\n
%s:%d WARNING: UNSUPPORTED: aspect %x\n
%s:%d WARNING: UNSUPPORTED: aspectMask %X\n
%s:%d WARNING: UNSUPPORTED: aspectMask %x\n
%s:%d WARNING: UNSUPPORTED: attachment.aspectMask %X\n
%s:%d WARNING: UNSUPPORTED: attachment.loadOp %d\n
%s:%d WARNING: UNSUPPORTED: attachment.stencilLoadOp %d\n
%s:%d WARNING: UNSUPPORTED: colorBlendState->flags 0x%08X\n
%s:%d WARNING: UNSUPPORTED: colorBlendState->pNext sType = %s\n
%s:%d WARNING: UNSUPPORTED: curExtension->sType: %s\n
%s:%d WARNING: UNSUPPORTED: depthStencilState->flags 0x%08X\n
%s:%d WARNING: UNSUPPORTED: descriptor type %u\n
%s:%d WARNING: UNSUPPORTED: dstSubresource.aspectMask %X\n
%s:%d WARNING: UNSUPPORTED: dynamicStateCreateInfo->flags 0x%08X\n
%s:%d WARNING: UNSUPPORTED: enabledLayerCount\n
%s:%d WARNING: UNSUPPORTED: exportInfo->handleTypes 0x%08X (supports 0x%08X)\n
%s:%d WARNING: UNSUPPORTED: extendedAllocationInfo->exportMemoryAllocateInfo->handleTypes %u\n
%s:%d WARNING: UNSUPPORTED: extendedAllocationInfo->importMemoryHostPointerInfo->handleType %u\n
%s:%d WARNING: UNSUPPORTED: extendedAllocationInfo.importMemoryHostPointerInfo->handleType, %d\n
%s:%d WARNING: UNSUPPORTED: flags 0x%08X\n
%s:%d WARNING: UNSUPPORTED: format %d\n
%s:%d WARNING: UNSUPPORTED: format: %d\n
%s:%d WARNING: UNSUPPORTED: handleType %u\n
%s:%d WARNING: UNSUPPORTED: imageViewType %d\n
%s:%d WARNING: UNSUPPORTED: layoutInfo->sType = %s\n
%s:%d WARNING: UNSUPPORTED: layoutSupport->sType = %s\n
%s:%d WARNING: UNSUPPORTED: magFilter %d\n
%s:%d WARNING: UNSUPPORTED: minFilter %d\n
%s:%d WARNING: UNSUPPORTED: mipmapMode %d\n
%s:%d WARNING: UNSUPPORTED: pAllocateInfo->pNext sType = %s\n
%s:%d WARNING: UNSUPPORTED: pBeginInfo->pNext sType = %s\n
%s:%d WARNING: UNSUPPORTED: pBindInfos[%d].pNext sType = %s\n
%s:%d WARNING: UNSUPPORTED: pCreateInfo->enabledLayerCount != 0\n
%s:%d WARNING: UNSUPPORTED: pCreateInfo->flags 0x%08X\n
%s:%d WARNING: UNSUPPORTED: pCreateInfo->pInputAssemblyState->flags 0x%08X\n
%s:%d WARNING: UNSUPPORTED: pCreateInfo->pMultisampleState->flags 0x%08X\n
%s:%d WARNING: UNSUPPORTED: pCreateInfo->pNext sType = %s\n
%s:%d WARNING: UNSUPPORTED: pCreateInfo->pNext->sType = %s\n
%s:%d WARNING: UNSUPPORTED: pCreateInfo->pQueueCreateInfos[%d]->flags 0x%08X\n
%s:%d WARNING: UNSUPPORTED: pCreateInfo->pQueueCreateInfos[%d].pNext sType = %s\n
%s:%d WARNING: UNSUPPORTED: pCreateInfo->pRasterizationState->flags 0x%08X\n
%s:%d WARNING: UNSUPPORTED: pCreateInfo->pRasterizationState->pNext sType = %s\n
%s:%d WARNING: UNSUPPORTED: pCreateInfo->pViewportState->flags 0x%08X\n
%s:%d WARNING: UNSUPPORTED: pCreateInfo->pViewportState->pNext sType = %s\n
%s:%d WARNING: UNSUPPORTED: pCreateInfo->templateType %d\n
%s:%d WARNING: UNSUPPORTED: pFormatProperties->pNext sType = %s\n
%s:%d WARNING: UNSUPPORTED: pFramebufferCreateInfo->pNext->sType = %s\n
%s:%d WARNING: UNSUPPORTED: pImageFormatInfo->pNext sType = %s\n
%s:%d WARNING: UNSUPPORTED: pImageFormatProperties->pNext sType = %s\n
%s:%d WARNING: UNSUPPORTED: pInfo->pNext sType = %s\n
%s:%d WARNING: UNSUPPORTED: pLayout->pNext sType = %s\n
%s:%d WARNING: UNSUPPORTED: pMemoryProperties->pNext sType = %s\n
%s:%d WARNING: UNSUPPORTED: pMemoryRequirements->pNext sType = %s\n
%s:%d WARNING: UNSUPPORTED: pProperties->pNext sType = %s\n
%s:%d WARNING: UNSUPPORTED: pQueueFamilyProperties->pNext sType = %s\n
%s:%d WARNING: UNSUPPORTED: pQueueInfo->pNext sType = %s\n
%s:%d WARNING: UNSUPPORTED: pRenderPassBegin->pNext sType = %s\n
%s:%d WARNING: UNSUPPORTED: pSparseMemoryRequirements->pNext sType = %s\n
%s:%d WARNING: UNSUPPORTED: pStage->flags 0x%08X\n
%s:%d WARNING: UNSUPPORTED: pSupport->pNext sType = %s\n
%s:%d WARNING: UNSUPPORTED: pSurfaceCapabilities->pNext sType = %s\n
%s:%d WARNING: UNSUPPORTED: polygon mode: %d\n
%s:%d WARNING: UNSUPPORTED: remoteDeviceIndex: %d\n
%s:%d WARNING: UNSUPPORTED: sint/uint/sfloat border: %u\n
%s:%d WARNING: UNSUPPORTED: srcSubresource.aspectMask %X\n
%s:%d WARNING: UNSUPPORTED: state.textureFormat %d\n
%s:%d WARNING: UNSUPPORTED: stream.format %d\n
%s:%d WARNING: UNSUPPORTED: submitInfo[%d]->pNext sType: %s\n
%s:%d WARNING: UNSUPPORTED: topology %d\n
%s:%d WARNING: UNSUPPORTED: vertexInputState->flags\n
%s:%d WARNING: UNSUPPORTED: vkBindBufferMemory with invalid external memory\n
%s:%d WARNING: UNSUPPORTED: vkBindBufferMemory2 with invalid external memory\n
%s:%d WARNING: UNSUPPORTED: vkBindImageMemory with invalid external memory\n
%s:%d WARNING: UNSUPPORTED: vkBindImageMemory2 with invalid external memory\n
%s:%d WARNING: UNSUPPORTED: vkCmdBeginQuery::flags 0x%08X\n
%s:%d WARNING: UNSUPPORTED: vkQueueBindSparse\n
%s:%d WARNING: UNSUPPORTED: ycbcrModel %d\n
%s:%d WARNING: nextInfo->sType = %s\n
%s:%d WARNING: vkCmdSetLineStippleEXT: line stipple pattern ignored : 0x%04X\n
&?PPPPPPP?
&Sgw
' could not be inlined because the return instruction is not at the end of the function. This could be fixed by running merge-return before inlining.
' decorated with 
' decorated with both 
' is invalid value for boolean argument! Try 0 or 1
' is missing Binding decoration.\n
' is missing Block decoration.\n
' is missing Block or BufferBlock decoration.\n
' is missing DescriptorSet decoration.\n
' is not valid for the Vulkan execution environment.
' must be less than the ID bound '
' registered more than once!\n
' uses more than one PushConstant interface.\n
' value invalid for integer argument!
' value invalid for uint argument!
', member '
'. This structure has 
'Target Label' operands for OpBranch must be the ID of an OpLabel instruction
'Target Label' operands for OpSwitch must be IDs of an OpLabel instruction
(except for OpLine, which can be mixed with OpPhi).
(null)
) can only be formed between a block and a loop header.
) cannot be applied to function id 
) cannot have any Location or Component decorations
) does not match block's predecessor count (
) does not match the type that results from indexing into the Composite (Op
) does not match the type that results from indexing into the base <id> (Op
) does not match the type that results from indexing into the composite (Op
) exceeds the limit (
) has exceeded the limit (
) has no register assigned - function 
) may not be decorated with Import Linkage type.
) may not be targeted by both an OpEntryPoint instruction and an OpFunctionCall instruction.
) must have a LinkageAttributes decoration with the Import Linkage type.
) requires SPIR-V version 
) requires one of these extensions: 
) used for OpTypeFloat.
) used for OpTypeInt.
), words(
)yIx
*StO9>T
*Vc>L
*no default*
, OpTypeRuntimeArray must only be used for the last member of an OpTypeStruct
, OpTypeStruct containing an OpTypeRuntimeArray 
, OpTypeStruct must not contain an opaque type.
, but access index is 
, but does not immediately precede it in the OpSwitch's target list
, but is not contained in the associated loop construct 
, but its merge block 
, but not via a structured exit
, but parsed version is 
, but with an element size of 
, component 
, has a disallowed initializer & storage class 
, if you are creating a new source language please use value 0 (Unknown) and when ready, add your source language to SPRIV-Headers
, initializer are not allowed for HitObjectAttributeNV
, initializer are not allowed for Input
, initializer are not allowed for TaskPayloadWorkgroupEXT
, initializers are limited to OpConstantNull in Workgroup storage class
, is attempting to create memory for an illegal type, 
, since it is not specified as taking an 
, which cannot be used with the current execution model:\n
, which cannot be used with the current execution modes:\n
, zero found
,HR><y5
,HR>O
-9D\t/9a
-BH>t
-bit 
-bit float literals
-bit integer for the addressing model used in the module)
-bit integer literals
. Found 
. This may be a bug in the validator.
. This structure has 
..\..\third_party\libc++\src\include\__algorithm\sort.h:333: assertion __k != __leftmost failed: Would read out of bounds, does your comparator satisfy the strict-weak ordering requirement?\n
..\..\third_party\libc++\src\include\__algorithm\sort.h:643: assertion __first != __end failed: Would read out of bounds, does your comparator satisfy the strict-weak ordering requirement?\n
..\..\third_party\libc++\src\include\__algorithm\sort.h:655: assertion __last != __begin failed: Would read out of bounds, does your comparator satisfy the strict-weak ordering requirement?\n
..\..\third_party\libc++\src\include\__algorithm\sort.h:673: assertion __first != __end failed: Would read out of bounds, does your comparator satisfy the strict-weak ordering requirement?\n
..\..\third_party\libc++\src\include\__algorithm\sort.h:678: assertion __last != __begin failed: Would read out of bounds, does your comparator satisfy the strict-weak ordering requirement?\n
..\..\third_party\libc++\src\include\__algorithm\sort.h:710: assertion __first != __end failed: Would read out of bounds, does your comparator satisfy the strict-weak ordering requirement?\n
..\..\third_party\libc++\src\include\__algorithm\sort.h:723: assertion __last != __begin failed: Would read out of bounds, does your comparator satisfy the strict-weak ordering requirement?\n
..\..\third_party\libc++\src\include\__algorithm\sort.h:733: assertion __first != __end failed: Would read out of bounds, does your comparator satisfy the strict-weak ordering requirement?\n
..\..\third_party\libc++\src\include\__algorithm\sort.h:738: assertion __last != __begin failed: Would read out of bounds, does your comparator satisfy the strict-weak ordering requirement?\n
..\..\third_party\libc++\src\include\__hash_table:1830: assertion __p != end() failed: unordered container::erase(iterator) called with a non-dereferenceable iterator\n
..\..\third_party\libc++\src\include\__hash_table:292: assertion __node_ != nullptr failed: Attempted to dereference a non-dereferenceable unordered container iterator\n
..\..\third_party\libc++\src\include\__hash_table:355: assertion __node_ != nullptr failed: Attempted to dereference a non-dereferenceable unordered container const_iterator\n
..\..\third_party\libc++\src\include\__hash_table:360: assertion __node_ != nullptr failed: Attempted to dereference a non-dereferenceable unordered container const_iterator\n
..\..\third_party\libc++\src\include\__hash_table:366: assertion __node_ != nullptr failed: Attempted to increment a non-incrementable unordered container const_iterator\n
..\..\third_party\libc++\src\include\__memory\construct_at.h:40: assertion __location != nullptr failed: null pointer given to construct_at\n
..\..\third_party\libc++\src\include\__memory\construct_at.h:66: assertion __loc != nullptr failed: null pointer given to destroy_at\n
..\..\third_party\libc++\src\include\__string\char_traits.h:145: assertion !std::__is_pointer_in_range(__s1, __s1 + __n, __s2) failed: char_traits::copy: source and destination ranges overlap\n
..\..\third_party\libc++\src\include\__string\char_traits.h:222: assertion !std::__is_pointer_in_range(__s1, __s1 + __n, __s2) failed: char_traits::copy: source and destination ranges overlap\n
..\..\third_party\libc++\src\include\array:239: assertion __n < _Size failed: out-of-bounds access in std::array<T, N>\n
..\..\third_party\libc++\src\include\array:243: assertion __n < _Size failed: out-of-bounds access in std::array<T, N>\n
..\..\third_party\libc++\src\include\deque:1519: assertion !empty() failed: deque::front called on an empty deque\n
..\..\third_party\libc++\src\include\deque:2262: assertion !empty() failed: deque::pop_front called on an empty deque\n
..\..\third_party\libc++\src\include\deque:2276: assertion !empty() failed: deque::pop_back called on an empty deque\n
..\..\third_party\libc++\src\include\fstream:764: assertion __extbufnext_ != nullptr failed: underflow moving from nullptr\n
..\..\third_party\libc++\src\include\fstream:765: assertion __extbuf_ != nullptr failed: underflow moving into nullptr\n
..\..\third_party\libc++\src\include\list:1440: assertion this != std::addressof(__c) failed: list::splice(iterator, list) called with this == &list\n
..\..\third_party\libc++\src\include\list:791: assertion !empty() failed: list::back called on empty list\n
..\..\third_party\libc++\src\include\optional:790: assertion this->has_value() failed: optional operator-> called on a disengaged value\n
..\..\third_party\libc++\src\include\string:1241: assertion __pos <= size() failed: string index out of bounds\n
..\..\third_party\libc++\src\include\string:1249: assertion __pos <= size() failed: string index out of bounds\n
..\..\third_party\libc++\src\include\string:1359: assertion !empty() failed: string::back(): string is empty\n
..\..\third_party\libc++\src\include\string:2730: assertion __n == 0 || __s != nullptr failed: string::append received nullptr\n
..\..\third_party\libc++\src\include\string:2862: assertion __s != nullptr failed: string::append received nullptr\n
..\..\third_party\libc++\src\include\string:2871: assertion __n == 0 || __s != nullptr failed: string::insert received nullptr\n
..\..\third_party\libc++\src\include\string:2984: assertion __s != nullptr failed: string::insert received nullptr\n
..\..\third_party\libc++\src\include\string:3170: assertion __first <= __last failed: string::erase(first, last) called with invalid range\n
..\..\third_party\libc++\src\include\string:3179: assertion !empty() failed: string::pop_back(): string is already empty\n
..\..\third_party\libc++\src\include\string:3667: assertion __s != nullptr failed: string::compare(): received nullptr\n
..\..\third_party\libc++\src\include\string:973: assertion __s != nullptr failed: basic_string(const char*) detected nullptr\n
..\..\third_party\libc++\src\include\string_view:268: assertion __s != nullptr failed: null pointer passed to non-null argument of char_traits<...>::length\n
..\..\third_party\libc++\src\include\string_view:318: assertion __len <= static_cast<size_type>(numeric_limits<difference_type>::max()) failed: string_view::string_view(_CharT *, size_t): length does not fit in difference_type\n
..\..\third_party\libc++\src\include\string_view:320: assertion __len == 0 || __s != nullptr failed: string_view::string_view(_CharT *, size_t): received nullptr\n
..\..\third_party\libc++\src\include\string_view:330: assertion (__end - __begin) >= 0 failed: std::string_view::string_view(iterator, sentinel) received invalid range\n
..\..\third_party\libc++\src\include\vector:1411: assertion __n < size() failed: vector[] index out of bounds\n
..\..\third_party\libc++\src\include\vector:1418: assertion __n < size() failed: vector[] index out of bounds\n
..\..\third_party\libc++\src\include\vector:1539: assertion !empty() failed: vector::pop_back called on an empty vector\n
..\..\third_party\libc++\src\include\vector:1547: assertion __position != end() failed: vector::erase(iterator) called with a non-dereferenceable iterator\n
..\..\third_party\libc++\src\include\vector:1557: assertion __first <= __last failed: vector::erase(first, last) called with invalid range\n
..\..\third_party\libc++\src\include\vector:614: assertion !empty() failed: front() called on an empty vector\n
..\..\third_party\libc++\src\include\vector:618: assertion !empty() failed: front() called on an empty vector\n
..\..\third_party\libc++\src\include\vector:622: assertion !empty() failed: back() called on an empty vector\n
..\..\third_party\libc++\src\include\vector:626: assertion !empty() failed: back() called on an empty vector\n
..\..\third_party\libc++\src\src\mutex.cpp:40: assertion ec == 0 failed: call to mutex::unlock failed. A possible reason is that the mutex wasn't locked\n
..\..\third_party\libc++\src\src\mutex.cpp:54: assertion e == 0 failed: call to ~recursive_mutex() failed\n
..\..\third_party\libc++\src\src\mutex.cpp:67: assertion e == 0 failed: call to recursive_mutex::unlock() failed. A possible reason is that the mutex wasn't locked\n
..\..\third_party\swiftshader\src\Device\Blitter.cpp
..\..\third_party\swiftshader\src\Device\Context.cpp
..\..\third_party\swiftshader\src\Device\Sampler.hpp
..\..\third_party\swiftshader\src\Pipeline\SpirvShader.cpp
..\..\third_party\swiftshader\src\Pipeline\SpirvShader.hpp
..\..\third_party\swiftshader\src\Pipeline\SpirvShaderControlFlow.cpp
..\..\third_party\swiftshader\src\Pipeline\SpirvShaderGroup.cpp
..\..\third_party\swiftshader\src\Pipeline\SpirvShaderMemory.cpp
..\..\third_party\swiftshader\src\Pipeline\SpirvShaderSampling.cpp
..\..\third_party\swiftshader\src\Pipeline\SpirvShaderSpec.cpp
..\..\third_party\swiftshader\src\Reactor\Pragma.cpp
..\..\third_party\swiftshader\src\Reactor\SubzeroReactor.cpp
..\..\third_party\swiftshader\src\System\SwiftConfig.cpp
..\..\third_party\swiftshader\src\Vulkan\VkCommandBuffer.cpp
..\..\third_party\swiftshader\src\Vulkan\VkDescriptorSetLayout.cpp
..\..\third_party\swiftshader\src\Vulkan\VkDeviceMemory.cpp
..\..\third_party\swiftshader\src\Vulkan\VkDeviceMemoryExternalHost.cpp
..\..\third_party\swiftshader\src\Vulkan\VkFormat.cpp
..\..\third_party\swiftshader\src\Vulkan\VkFramebuffer.cpp
..\..\third_party\swiftshader\src\Vulkan\VkImage.cpp
..\..\third_party\swiftshader\src\Vulkan\VkImageView.cpp
..\..\third_party\swiftshader\src\Vulkan\VkImageView.hpp
..\..\third_party\swiftshader\src\Vulkan\VkPhysicalDevice.cpp
..\..\third_party\swiftshader\src\Vulkan\VkPipeline.cpp
..\..\third_party\swiftshader\src\Vulkan\VkQueryPool.cpp
..\..\third_party\swiftshader\src\Vulkan\VkQueue.cpp
..\..\third_party\swiftshader\src\Vulkan\VkRenderPass.cpp
..\..\third_party\swiftshader\src\Vulkan\VkStructConversion.hpp
..\..\third_party\swiftshader\src\Vulkan\libVulkan.cpp
..\..\third_party\swiftshader\src\WSI\VkSurfaceKHR.cpp
.>\rfJBGo
.?AU?$__num_get@D@__Cr@std@@
.?AU?$__num_get@_W@__Cr@std@@
.?AU?$__num_put@D@__Cr@std@@
.?AU?$__num_put@_W@__Cr@std@@
.?AU?$__shared_ptr_default_delete@VRoutine@rr@@V12@@?$shared_ptr@VRoutine@rr@@@__Cr@std@@
.?AUDeleter@Allocator@marl@@
.?AUJoined@?1???$onCall@V<lambda_2>@?0??processPixels@DrawCall@sw@@SAXPEAVDevice@vk@@AEBVLoan@?$Pool@UDrawCall@sw@@@marl@@AEBV7?$Pool@UBatchData@DrawCall@sw@@@9@AEBV?$shared_ptr@VFinally@marl@@@__Cr@std@@@Z@@Ticket@marl@@QEBAX$$QEAV<lambda_2>@?0??processPixels@DrawCall@sw@@SAXPEAVDevice@vk@@AEBVLoan@?$Pool@UDrawCall@sw@@@2@AEBV9?$Pool@UBatchData@DrawCall@sw@@@2@AEBV?$shared_ptr@VFinally@marl@@@__Cr@std@@@Z@@Z@
.?AU__num_get_base@__Cr@std@@
.?AU__num_put_base@__Cr@std@@
.?AV<lambda_0>@?0???0ValidationState_t@val@spvtools@@QEAA@QEBUspv_context_t@@QEBUspv_validator_options_t@@PEBI_KI@Z@
.?AV<lambda_0>@?0??AddNewOperands@SimplificationPass@opt@spvtools@@AEAAXPEAVInstruction@34@PEAV?$unordered_set@PEAVInstruction@opt@spvtools@@U?$hash@PEAVInstruction@opt@spvtools@@@__Cr@std@@U?$equal_to@PEAVInstruction@opt@spvtools@@@56@V?$allocator@PEAVInstruction@opt@spvtools@@@56@@__Cr@std@@PEAV?$vector@PEAVInstruction@opt@spvtools@@V?$allocator@PEAVInstruction@opt@spvtools@@@__Cr@std@@@78@@Z@
.?AV<lambda_0>@?0??AddSSAEdges@SSAPropagator@opt@spvtools@@AEAAXPEAVInstruction@34@@Z@
.?AV<lambda_0>@?0??AddStores@AggressiveDCEPass@opt@spvtools@@AEAAXPEAVFunction@34@I@Z@
.?AV<lambda_0>@?0??AnalyzeDebugInsts@DebugInfoManager@analysis@opt@spvtools@@AEAAXAEAVModule@45@@Z@
.?AV<lambda_0>@?0??AppendConstantOperands@LocalAccessChainConvertPass@opt@spvtools@@AEAAXPEBVInstruction@34@PEAV?$vector@UOperand@opt@spvtools@@V?$allocator@UOperand@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@
.?AV<lambda_0>@?0??AugmentedCFGSuccessorsFunction@Function@val@spvtools@@QEBA?AV?$function@$$A6APEBV?$vector@PEAVBasicBlock@val@spvtools@@V?$allocator@PEAVBasicBlock@val@spvtools@@@__Cr@std@@@__Cr@std@@PEBVBasicBlock@val@spvtools@@@Z@__Cr@std@@XZ@
.?AV<lambda_0>@?0??BarriersPass@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@PEBVInstruction@23@@Z@
.?AV<lambda_0>@?0??DerivativesPass@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@PEBVInstruction@23@@Z@
.?AV<lambda_0>@?0??EliminateDeadInsertsOnePass@DeadInsertElimPass@opt@spvtools@@AEAA_NPEAVFunction@34@@Z@
.?AV<lambda_0>@?0??EliminateFunction@eliminatedeadfunctionsutil@opt@spvtools@@YA?AV?$UptrVectorIterator@VFunction@opt@spvtools@@$0A@@34@PEAVIRContext@34@PEAV534@@Z@
.?AV<lambda_0>@?0??EliminateRedundanciesInBB@LocalRedundancyEliminationPass@opt@spvtools@@IEAA_NPEAVBasicBlock@34@AEBVValueNumberTable@34@PEAV?$map@IIU?$less@I@__Cr@std@@V?$allocator@U?$pair@$$CBII@__Cr@std@@@23@@__Cr@std@@@Z@
.?AV<lambda_0>@?0??EmitBlocks@SpirvEmitter@sw@@AEAAXV?$SpirvID@VBlock@Spirv@sw@@@3@0@Z@
.?AV<lambda_0>@?0??EmitLoad@SpirvEmitter@sw@@AEAAXVInsnIterator@Spirv@3@@Z@
.?AV<lambda_0>@?0??FindLiveComponents@VectorDCE@opt@spvtools@@AEAAXPEAVFunction@34@PEAV?$unordered_map@IVBitVector@utils@spvtools@@U?$hash@I@__Cr@std@@U?$equal_to@I@56@V?$allocator@U?$pair@$$CBIVBitVector@utils@spvtools@@@__Cr@std@@@56@@__Cr@std@@@Z@
.?AV<lambda_0>@?0??FindLocalFunction@PrivateToLocalPass@opt@spvtools@@AEBAPEAVFunction@34@AEBVInstruction@34@@Z@
.?AV<lambda_0>@?0??FoldInstructionInternal@InstructionFolder@opt@spvtools@@AEBA_NPEAVInstruction@34@@Z@
.?AV<lambda_0>@?0??ForEachUser@DefUseManager@analysis@opt@spvtools@@QEBAXPEBVInstruction@45@AEBV?$function@$$A6AXPEAVInstruction@opt@spvtools@@@Z@__Cr@std@@@Z@
.?AV<lambda_0>@?0??GetDominatorEdges@DominatorTree@opt@spvtools@@AEAAXPEBVFunction@34@PEBVBasicBlock@34@PEAV?$vector@U?$pair@PEAVBasicBlock@opt@spvtools@@PEAV123@@__Cr@std@@V?$allocator@U?$pair@PEAVBasicBlock@opt@spvtools@@PEAV123@@__Cr@std@@@23@@__Cr@std@@@Z@
.?AV<lambda_0>@?0??HasOnlySupportedRefs@LocalSingleBlockLoadStoreElimPass@opt@spvtools@@AEAA_NI@Z@
.?AV<lambda_0>@?0??ImagePass@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@PEBVInstruction@23@@Z@
.?AV<lambda_0>@?0??IsMerge@?A0x358D3924@blockmergeutil@opt@spvtools@@YA_NPEAVIRContext@34@I@Z@
.?AV<lambda_0>@?0??IsTargetType@MemPass@opt@spvtools@@IEBA_NPEBVInstruction@34@@Z@
.?AV<lambda_0>@?0??IsVulkanStorageBuffer@Instruction@opt@spvtools@@QEBA_NXZ@
.?AV<lambda_0>@?0??KillAllInsts@BasicBlock@opt@spvtools@@QEAAX_N@Z@
.?AV<lambda_0>@?0??MapParams@InlinePass@opt@spvtools@@IEAAXPEAVFunction@34@Viterator@InstructionList@34@PEAV?$unordered_map@IIU?$hash@I@__Cr@std@@U?$equal_to@I@23@V?$allocator@U?$pair@$$CBII@__Cr@std@@@23@@__Cr@std@@@Z@
.?AV<lambda_0>@?0??MarkLiveBlocks@DeadBranchElimPass@opt@spvtools@@AEAA_NPEAVFunction@34@PEAV?$unordered_set@PEAVBasicBlock@opt@spvtools@@U?$hash@PEAVBasicBlock@opt@spvtools@@@__Cr@std@@U?$equal_to@PEAVBasicBlock@opt@spvtools@@@56@V?$allocator@PEAVBasicBlock@opt@spvtools@@@56@@__Cr@std@@@Z@
.?AV<lambda_0>@?0??MeshShadingPass@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@PEBVInstruction@23@@Z@
.?AV<lambda_0>@?0??MiscPass@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@PEBVInstruction@23@@Z@
.?AV<lambda_0>@?0??PartiallyUnrollResidualFactor@LoopUnrollerUtilsImpl@?A0xD2DD07CD@opt@spvtools@@QEAAXPEAVLoop@34@_K@Z@
.?AV<lambda_0>@?0??Process@BlockMergePass@opt@spvtools@@UEAA?AW4Status@Pass@34@XZ@
.?AV<lambda_0>@?0??Process@EliminateDeadFunctionsPass@opt@spvtools@@UEAA?AW4Status@Pass@34@XZ@
.?AV<lambda_0>@?0??Process@IfConversion@opt@spvtools@@UEAA?AW4Status@Pass@34@XZ@
.?AV<lambda_0>@?0??Process@MergeReturnPass@opt@spvtools@@UEAA?AW4Status@Pass@34@XZ@
.?AV<lambda_0>@?0??Process@ReduceLoadSize@opt@spvtools@@UEAA?AW4Status@Pass@34@XZ@
.?AV<lambda_0>@?0??Process@WrapOpKill@opt@spvtools@@UEAA?AW4Status@Pass@34@XZ@
.?AV<lambda_0>@?0??ProcessFunction@CombineAccessChains@opt@spvtools@@AEAA_NAEAVFunction@34@@Z@
.?AV<lambda_0>@?0??ProcessImpl@InlineExhaustivePass@opt@spvtools@@AEAA?AW4Status@Pass@34@XZ@
.?AV<lambda_0>@?0??ProcessImpl@LocalSingleStoreElimPass@opt@spvtools@@AEAA?AW4Status@Pass@34@XZ@
.?AV<lambda_0>@?0??ProcessInterfaceVariable@Spirv@sw@@QEAAXAEAVObject@23@@Z@
.?AV<lambda_0>@?0??RayTracingPass@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@PEBVInstruction@23@@Z@
.?AV<lambda_0>@?0??ReciprocalFDiv@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_0>@?0??RecordIfTypeDefinition@TypeManager@analysis@opt@spvtools@@AEAAPEAVType@345@AEBVInstruction@45@@Z@
.?AV<lambda_0>@?0??ReplaceVariable@ScalarReplacementPass@opt@spvtools@@AEAA?AW4Status@Pass@34@PEAVInstruction@34@PEAV?$queue@PEAVInstruction@opt@spvtools@@V?$deque@PEAVInstruction@opt@spvtools@@V?$allocator@PEAVInstruction@opt@spvtools@@@__Cr@std@@@__Cr@std@@@__Cr@std@@@Z@
.?AV<lambda_0>@?0??RewriteFunctionIntoSSA@SSARewriter@opt@spvtools@@QEAA?AW4Status@Pass@34@PEAVFunction@34@@Z@
.?AV<lambda_0>@?0??ToBinary@Module@opt@spvtools@@QEBAXPEAV?$vector@IV?$allocator@I@__Cr@std@@@__Cr@std@@_N@Z@
.?AV<lambda_0>@?0??UseDiagnosticAsMessageConsumer@spvtools@@YAXPEAUspv_context_t@@PEAPEAUspv_diagnostic_t@@@Z@
.?AV<lambda_0>@?0??ValidateBinaryUsingContextAndValidationState@?A0x5A943C09@val@spvtools@@YA?AW4spv_result_t@@AEBUspv_context_t@@PEBI_KPEAPEAUspv_diagnostic_t@@PEAVValidationState_t@23@@Z@
.?AV<lambda_0>@?0??ValidateClipOrCullDistanceAtReference@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@11@Z@
.?AV<lambda_0>@?0??ValidateExecutionScope@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@PEBVInstruction@23@I@Z@
.?AV<lambda_0>@?0??ValidateExtInst@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@PEBVInstruction@23@@Z@
.?AV<lambda_0>@?0??ValidateTypeStruct@?A0x967F0A89@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@PEBVInstruction@23@@Z@
.?AV<lambda_0>@?0??VisitAssignment@CCPPass@opt@spvtools@@AEAA?AW4PropStatus@SSAPropagator@34@PEAVInstruction@34@@Z@
.?AV<lambda_0>@?0??addProlog@TargetX8664@X8664@Ice@@UEAAXPEAVCfgNode@4@@Z@
.?AV<lambda_0>@?0??dom_begin@BasicBlock@val@spvtools@@QEBA?BVDominatorIterator@234@XZ@
.?AV<lambda_0>@?0??maskAny@PixelProgram@sw@@CA?AVInt@SIMD@rr@@QEAV46@AEBV?$vector@HV?$allocator@H@__Cr@std@@@__Cr@std@@@Z@
.?AV<lambda_0>@?0??quad@PixelRoutine@sw@@MEAAXQEAV?$Pointer@VByte@rr@@@rr@@AEAV45@1QEAVInt@5@AEAV65@3@Z@
.?AV<lambda_0>@?0??rasterize@QuadRasterizer@sw@@AEAAXAEAVInt@rr@@0@Z@
.?AV<lambda_0>@?0??wait@TimelineSemaphore@vk@@QEAAX_K@Z@
.?AV<lambda_10>@?0??FoldVectorShuffleWithConstants@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_10>@?0??HasCall@AggressiveDCEPass@opt@spvtools@@AEAA_NPEAVFunction@34@@Z@
.?AV<lambda_10>@?0??MergeAddNegateArithmetic@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_10>@?0??RegisterStorageClassConsumer@ValidationState_t@val@spvtools@@QEAAXW4StorageClass@spv@@PEAVInstruction@34@@Z@
.?AV<lambda_10>@?0??SplitLoopHeader@CFG@opt@spvtools@@QEAAPEAVBasicBlock@34@PEAV534@@Z@
.?AV<lambda_10>@?0??ValidatePointCoordAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_10>@?0??spvOperandCanBeForwardDeclaredFunction@@YA?AV?$function@$$A6A_NI@Z@__Cr@std@@W4Op@spv@@@Z@
.?AV<lambda_11>@?0??ContainsSizedIntOrFloatType@ValidationState_t@val@spvtools@@QEBA_NIW4Op@spv@@I@Z@
.?AV<lambda_11>@?0??FoldVectorTimesScalar@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_11>@?0??MergeSubNegateArithmetic@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_11>@?0??SplitLoopHeader@CFG@opt@spvtools@@QEAAPEAVBasicBlock@34@PEAV534@@Z@
.?AV<lambda_11>@?0??ValidatePointSizeAtReference@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@11@Z@
.?AV<lambda_11>@?0??spvOperandCanBeForwardDeclaredFunction@@YA?AV?$function@$$A6A_NI@Z@__Cr@std@@W4Op@spv@@@Z@
.?AV<lambda_12>@?0??ContainsRuntimeArray@ValidationState_t@val@spvtools@@QEBA_NI@Z@
.?AV<lambda_12>@?0??FoldVectorTimesMatrix@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_12>@?0??MergeAddAddArithmetic@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_12>@?0??SplitLoopHeader@CFG@opt@spvtools@@QEAAPEAVBasicBlock@34@PEAV534@@Z@
.?AV<lambda_12>@?0??ValidatePointSizeAtReference@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@11@Z@
.?AV<lambda_12>@?0??spvDbgInfoExtOperandCanBeForwardDeclaredFunction@@YA?AV?$function@$$A6A_NI@Z@__Cr@std@@W4spv_ext_inst_type_t@@I@Z@
.?AV<lambda_13>@?0??FoldMatrixTimesVector@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_13>@?0??MergeAddSubArithmetic@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_13>@?0??ValidatePointSizeAtReference@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@11@Z@
.?AV<lambda_13>@?0??spvDbgInfoExtOperandCanBeForwardDeclaredFunction@@YA?AV?$function@$$A6A_NI@Z@__Cr@std@@W4spv_ext_inst_type_t@@I@Z@
.?AV<lambda_14>@?0??FoldCompositeWithConstants@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_14>@?0??MergeSubAddArithmetic@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_14>@?0??ValidatePositionAtReference@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@11@Z@
.?AV<lambda_14>@?0??spvDbgInfoExtOperandCanBeForwardDeclaredFunction@@YA?AV?$function@$$A6A_NI@Z@__Cr@std@@W4spv_ext_inst_type_t@@I@Z@
.?AV<lambda_15>@?0??FoldUnaryOp@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@V?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEBVType@234@PEBV1234@PEAVConstantManager@234@@Z@56@@Z@
.?AV<lambda_15>@?0??MergeSubSubArithmetic@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_15>@?0??ValidatePositionAtReference@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@11@Z@
.?AV<lambda_15>@?0??spvDbgInfoExtOperandCanBeForwardDeclaredFunction@@YA?AV?$function@$$A6A_NI@Z@__Cr@std@@W4spv_ext_inst_type_t@@I@Z@
.?AV<lambda_16>@?0??FoldBinaryOp@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@V?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEBVType@234@PEBV1234@1PEAVConstantManager@234@@Z@56@@Z@
.?AV<lambda_16>@?0??MergeGenericAddSubArithmetic@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_16>@?0??ValidatePositionAtReference@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@11@Z@
.?AV<lambda_16>@?0??spvDbgInfoExtOperandCanBeForwardDeclaredFunction@@YA?AV?$function@$$A6A_NI@Z@__Cr@std@@W4spv_ext_inst_type_t@@I@Z@
.?AV<lambda_17>@?0??FactorAddMuls@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_17>@?0??FoldFPUnaryOp@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@V?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEBVType@234@PEBV1234@PEAVConstantManager@234@@Z@56@@Z@
.?AV<lambda_17>@?0??ValidatePrimitiveIdAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_17>@?0??spvDbgInfoExtOperandCanBeForwardDeclaredFunction@@YA?AV?$function@$$A6A_NI@Z@__Cr@std@@W4spv_ext_inst_type_t@@I@Z@
.?AV<lambda_18>@?0??FoldFPBinaryOp@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@V?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEBVType@234@PEBV1234@1PEAVConstantManager@234@@Z@56@@Z@
.?AV<lambda_18>@?0??IntMultipleBy1@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_18>@?0??ValidatePrimitiveIdAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_18>@?0??spvDbgInfoExtOperandCanBeForwardDeclaredFunction@@YA?AV?$function@$$A6A_NI@Z@__Cr@std@@W4spv_ext_inst_type_t@@I@Z@
.?AV<lambda_19>@?0??FoldFToIOp@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEBVType@234@PEBV1234@PEAVConstantManager@234@@Z@__Cr@std@@XZ@
.?AV<lambda_19>@?0??InsertFeedingExtract@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_19>@?0??ValidateSampleIdAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_1>@?0???$DepthFirstSearch@UDominatorTreeNode@opt@spvtools@@V<lambda_3>@?0??ResetDFNumbering@DominatorTree@23@QEAAXXZ@V<lambda_1>@?0??5623@QEAAXXZ@V<lambda_2>@?0??5623@QEAAXXZ@@?A0x144121E0@opt@spvtools@@YAXPEBUDominatorTreeNode@12@V<lambda_3>@?0??ResetDFNumbering@DominatorTree@12@QEAAXXZ@V0?0??5612@QEAAXXZ@V<lambda_2>@?0??5612@QEAAXXZ@@Z@
.?AV<lambda_1>@?0???$DepthFirstSearch@VBasicBlock@opt@spvtools@@V?$function@$$A6APEBV?$vector@PEAVBasicBlock@opt@spvtools@@V?$allocator@PEAVBasicBlock@opt@spvtools@@@__Cr@std@@@__Cr@std@@PEBVBasicBlock@opt@spvtools@@@Z@__Cr@std@@V<lambda_1>@?0???$DepthFirstSearchPostOrder@VBasicBlock@opt@spvtools@@V?$function@$$A6APEBV?$vector@PEAVBasicBlock@opt@spvtools@@V?$allocator@PEAVBasicBlock@opt@spvtools@@@__Cr@std@@@__Cr@std@@PEBVBasicBlock@opt@spvtools@@@Z@__Cr@std@@V<lambda_0>@?0??GetDominatorEdges@DominatorTree@23@AEAAXPEBVFunction@23@PEBV123@PEAV?$vector@U?$pair@PEAVBasicBlock@opt@spvtools@@PEAV123@@__Cr@std@@V?$allocator@U?$pair@PEAVBasicBlock@opt@spvtools@@PEAV123@@__Cr@std@@@23@@56@@Z@@?A0x144121E0@23@YAXPEBV123@V456@V<lambda_0>@?0??GetDominatorEdges@DominatorTree@23@AEAAXPEBVFunction@23@0PEAV?$vector@U?$pair@PEAVBasicBlock@opt@spvtools@@PEAV123@@__Cr@std@@V?$allocator@U?$pair@PEAVBasicBlock@opt@spvtools@@PEAV123@@__Cr@std@@@23@@56@@Z@@Z@V8?0??9DominatorTree@23@AEAAX203@Z@@?A0x144121E0@opt@spvtools@@YAXPEBVBasicBlock@12@V?$function@$$A6APEBV?$vector@PEAVBasicBlock@opt@spvtools@@V?$allocator@PEAVBasicBlock@opt@spvtools@@@__Cr@std@@@__Cr@std@@PEBVBasicBlock@opt@spvtools@@@Z@__Cr@std@@V0?0???$DepthFirstSearchPostOrder@VBasicBlock@opt@spvtools@@V?$function@$$A6APEBV?$vector@PEAVBasicBlock@opt@spvtools@@V?$allocator@PEAVBasicBlock@opt@spvtools@@@__Cr@std@@@__Cr@std@@PEBVBasicBlock@opt@spvtools@@@Z@__Cr@std@@V<lambda_0>@?0??GetDominatorEdges@DominatorTree@23@AEAAXPEBVFunction@23@PEBV123@PEAV?$vector@U?$pair@PEAVBasicBlock@opt@spvtools@@PEAV123@@__Cr@std@@V?$allocator@U?$pair@PEAVBasicBlock@opt@spvtools@@PEAV123@@__Cr@std@@@23@@56@@Z@@?A0x144121E0@12@YAX01V<lambda_0>@?0??GetDominatorEdges@DominatorTree@12@AEAAXPEBVFunction@12@0PEAV?$vector@U?$pair@PEAVBasicBlock@opt@spvtools@@PEAV123@@__Cr@std@@V?$allocator@U?$pair@PEAVBasicBlock@opt@spvtools@@PEAV123@@__Cr@std@@@23@@56@@Z@@Z@4@Z@
.?AV<lambda_1>@?0???$DepthFirstSearchPostOrder@VBasicBlock@opt@spvtools@@V?$function@$$A6APEBV?$vector@PEAVBasicBlock@opt@spvtools@@V?$allocator@PEAVBasicBlock@opt@spvtools@@@__Cr@std@@@__Cr@std@@PEBVBasicBlock@opt@spvtools@@@Z@__Cr@std@@V<lambda_0>@?0??GetDominatorEdges@DominatorTree@23@AEAAXPEBVFunction@23@PEBV123@PEAV?$vector@U?$pair@PEAVBasicBlock@opt@spvtools@@PEAV123@@__Cr@std@@V?$allocator@U?$pair@PEAVBasicBlock@opt@spvtools@@PEAV123@@__Cr@std@@@23@@56@@Z@@?A0x144121E0@opt@spvtools@@YAXPEBVBasicBlock@12@V?$function@$$A6APEBV?$vector@PEAVBasicBlock@opt@spvtools@@V?$allocator@PEAVBasicBlock@opt@spvtools@@@__Cr@std@@@__Cr@std@@PEBVBasicBlock@opt@spvtools@@@Z@__Cr@std@@V<lambda_0>@?0??GetDominatorEdges@DominatorTree@12@AEAAXPEBVFunction@12@0PEAV?$vector@U?$pair@PEAVBasicBlock@opt@spvtools@@PEAV123@@__Cr@std@@V?$allocator@U?$pair@PEAVBasicBlock@opt@spvtools@@PEAV123@@__Cr@std@@@23@@56@@Z@@Z@
.?AV<lambda_1>@?0???$FoldBinaryIntegerOperation@$00@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEBVType@234@PEBV1234@1PEAVConstantManager@234@@Z@__Cr@std@@P6A_K_K0@Z@Z@
.?AV<lambda_1>@?0???$FoldBinaryIntegerOperation@$0A@@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEBVType@234@PEBV1234@1PEAVConstantManager@234@@Z@__Cr@std@@P6A_K_K0@Z@Z@
.?AV<lambda_1>@?0???$allocate@V?$ConstantPrimitive@H$00@Ice@@@GlobalContext@Ice@@QEAAPEAV?$ConstantPrimitive@H$00@2@XZ@
.?AV<lambda_1>@?0???$allocate@V?$ConstantPrimitive@M$02@Ice@@@GlobalContext@Ice@@QEAAPEAV?$ConstantPrimitive@M$02@2@XZ@
.?AV<lambda_1>@?0???$allocate@V?$ConstantPrimitive@N$03@Ice@@@GlobalContext@Ice@@QEAAPEAV?$ConstantPrimitive@N$03@2@XZ@
.?AV<lambda_1>@?0???$allocate@V?$ConstantPrimitive@_J$01@Ice@@@GlobalContext@Ice@@QEAAPEAV?$ConstantPrimitive@_J$01@2@XZ@
.?AV<lambda_1>@?0???$allocate@VConstantRelocatable@Ice@@@GlobalContext@Ice@@QEAAPEAVConstantRelocatable@2@XZ@
.?AV<lambda_1>@?0???$allocate@VConstantUndef@Ice@@@GlobalContext@Ice@@QEAAPEAVConstantUndef@2@XZ@
.?AV<lambda_1>@?0???$allocate@VELFDataSection@Ice@@@GlobalContext@Ice@@QEAAPEAVELFDataSection@2@XZ@
.?AV<lambda_1>@?0???$allocate@VELFRelocationSection@Ice@@@GlobalContext@Ice@@QEAAPEAVELFRelocationSection@2@XZ@
.?AV<lambda_1>@?0???$allocate@VELFSection@Ice@@@GlobalContext@Ice@@QEAAPEAVELFSection@2@XZ@
.?AV<lambda_1>@?0???$allocate@VELFStringTableSection@Ice@@@GlobalContext@Ice@@QEAAPEAVELFStringTableSection@2@XZ@
.?AV<lambda_1>@?0???$allocate@VELFSymbolTableSection@Ice@@@GlobalContext@Ice@@QEAAPEAVELFSymbolTableSection@2@XZ@
.?AV<lambda_1>@?0???$allocate@VELFTextSection@Ice@@@GlobalContext@Ice@@QEAAPEAVELFTextSection@2@XZ@
.?AV<lambda_1>@?0???$allocate_variable_declaration@VVariableDeclaration@Ice@@@VariableDeclarationList@Ice@@QEAAPEAVVariableDeclaration@2@XZ@
.?AV<lambda_1>@?0???$borrow@V<lambda_1>@?0??0?$BoundedPool@UBatchData@DrawCall@sw@@$0BA@$00@marl@@QEBA?AVLoan@?$Pool@UBatchData@DrawCall@sw@@@3@XZ@@?$BoundedPool@UBatchData@DrawCall@sw@@$0BA@$00@marl@@QEBAX_KAEBV0?0??borrow@12@QEBA?AVLoan@?$Pool@UBatchData@DrawCall@sw@@@2@XZ@@Z@
.?AV<lambda_1>@?0???$borrow@V<lambda_1>@?0??0?$BoundedPool@UDrawCall@sw@@$0BA@$00@marl@@QEBA?AVLoan@?$Pool@UDrawCall@sw@@@3@XZ@@?$BoundedPool@UDrawCall@sw@@$0BA@$00@marl@@QEBAX_KAEBV0?0??borrow@12@QEBA?AVLoan@?$Pool@UDrawCall@sw@@@2@XZ@@Z@
.?AV<lambda_1>@?0???$wait@Vsystem_clock@chrono@__Cr@std@@V?$duration@_JV?$ratio@$00$0DLJKMKAA@@__Cr@std@@@234@@TimelineSemaphore@vk@@QEAA?AW4VkResult@@_KV?$time_point@Vsystem_clock@chrono@__Cr@std@@V?$duration@_JV?$ratio@$00$0DLJKMKAA@@__Cr@std@@@234@@chrono@__Cr@std@@@Z@
.?AV<lambda_1>@?0???$wait@Vsystem_clock@chrono@__Cr@std@@V?$duration@_JV?$ratio@$00$0DLJKMKAA@@__Cr@std@@@234@@WaitForAny@TimelineSemaphore@vk@@QEAA?AW4VkResult@@V?$time_point@Vsystem_clock@chrono@__Cr@std@@V?$duration@_JV?$ratio@$00$0DLJKMKAA@@__Cr@std@@@234@@chrono@__Cr@std@@@Z@
.?AV<lambda_1>@?0???$wait_until@Vsystem_clock@chrono@__Cr@std@@V?$duration@_JV?$ratio@$00$0DLJKMKAA@@__Cr@std@@@234@@Shared@Event@marl@@QEAA_NAEBV?$time_point@Vsystem_clock@chrono@__Cr@std@@V?$duration@_JV?$ratio@$00$0DLJKMKAA@@__Cr@std@@@234@@chrono@__Cr@std@@@Z@
.?AV<lambda_1>@?0???R0?0???$scalarizeInstruction@VOperand@Ice@@V12@V<lambda_2>@?0??scalarizeArithmetic@TargetLowering@2@IEAAXW4OpKind@InstArithmetic@2@PEAVVariable@2@PEAV12@2@Z@@TargetLowering@Ice@@IEAAXPEAVVariable@2@V<lambda_2>@?0??scalarizeArithmetic@12@IEAAXW4OpKind@InstArithmetic@2@0PEAVOperand@2@2@Z@22@Z@QEBA?A?<auto>@@2@Z@
.?AV<lambda_1>@?0???R0?0???R<lambda_5>@?0??UpdateSucceedingPhis@InlinePass@opt@spvtools@@IEAAXAEAV?$vector@V?$unique_ptr@VBasicBlock@opt@spvtools@@U?$default_delete@VBasicBlock@opt@spvtools@@@__Cr@std@@@__Cr@std@@V?$allocator@V?$unique_ptr@VBasicBlock@opt@spvtools@@U?$default_delete@VBasicBlock@opt@spvtools@@@__Cr@std@@@__Cr@std@@@23@@__Cr@std@@@Z@QEBA?A?<auto>@@I@Z@QEBA?A?9@PEAVInstruction@45@@Z@
.?AV<lambda_1>@?0???R0?0??RayReorderNVPass@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@PEBVInstruction@23@@Z@QEBA?A?<auto>@@01@Z@
.?AV<lambda_1>@?0???R0?0??SimplifyFunction@SimplificationPass@opt@spvtools@@AEAA_NPEAVFunction@34@@Z@QEBA?A?<auto>@@PEAVBasicBlock@34@@Z@
.?AV<lambda_1>@?0???R<lambda_0>@?0??EliminateDeadInsertsOnePass@DeadInsertElimPass@opt@spvtools@@AEAA_NPEAVFunction@45@@Z@QEBA?A?<auto>@@PEAVInstruction@45@@Z@
.?AV<lambda_1>@?0???R<lambda_0>@?0??ProcessFunction@CombineAccessChains@opt@spvtools@@AEAA_NAEAVFunction@45@@Z@QEBA?A?<auto>@@PEAVBasicBlock@45@@Z@
.?AV<lambda_1>@?0???R<lambda_0>@?0??ToBinary@Module@opt@spvtools@@QEBAXPEAV?$vector@IV?$allocator@I@__Cr@std@@@__Cr@std@@_N@Z@QEBA?A?<auto>@@PEBVInstruction@45@@Z@
.?AV<lambda_1>@?0???R<lambda_39>@?0??FoldFMix@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@QEBA@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@67@@Z@
.?AV<lambda_1>@?0???R<lambda_4>@?0??GetUsedComponents@ScalarReplacementPass@opt@spvtools@@AEAA?AV?$unique_ptr@V?$unordered_set@_JU?$hash@_J@__Cr@std@@U?$equal_to@_J@23@V?$allocator@_J@23@@__Cr@std@@U?$default_delete@V?$unordered_set@_JU?$hash@_J@__Cr@std@@U?$equal_to@_J@23@V?$allocator@_J@23@@__Cr@std@@@23@@__Cr@std@@PEAVInstruction@45@@Z@QEBA?A?<auto>@@0@Z@
.?AV<lambda_1>@?0???R<lambda_5>@?0??UpdateSucceedingPhis@InlinePass@opt@spvtools@@IEAAXAEAV?$vector@V?$unique_ptr@VBasicBlock@opt@spvtools@@U?$default_delete@VBasicBlock@opt@spvtools@@@__Cr@std@@@__Cr@std@@V?$allocator@V?$unique_ptr@VBasicBlock@opt@spvtools@@U?$default_delete@VBasicBlock@opt@spvtools@@@__Cr@std@@@__Cr@std@@@23@@__Cr@std@@@Z@QEBA?A?<auto>@@I@Z@
.?AV<lambda_1>@?0???R<lambda_7>@?0??SplitBasicBlock@BasicBlock@opt@spvtools@@QEAAPEAV345@PEAVIRContext@45@IViterator@InstructionList@45@@Z@QEBA?A?<auto>@@I@Z@
.?AV<lambda_1>@?0???R?$Coroutine@$$A6A?AW4YieldResult@SpirvEmitter@sw@@PEBVDevice@vk@@PEAXHHH1HH@Z@rr@@QEAA?AV?$unique_ptr@V?$Stream@W4YieldResult@SpirvEmitter@sw@@@rr@@U?$default_delete@V?$Stream@W4YieldResult@SpirvEmitter@sw@@@rr@@@__Cr@std@@@__Cr@std@@PEBVDevice@vk@@PEAXHHH1HH@Z@
.?AV<lambda_1>@?0??AddEdges@CFG@opt@spvtools@@QEAAXPEAVBasicBlock@34@@Z@
.?AV<lambda_1>@?0??AugmentedCFGPredecessorsFunction@Function@val@spvtools@@QEBA?AV?$function@$$A6APEBV?$vector@PEAVBasicBlock@val@spvtools@@V?$allocator@PEAVBasicBlock@val@spvtools@@@__Cr@std@@@__Cr@std@@PEBVBasicBlock@val@spvtools@@@Z@__Cr@std@@XZ@
.?AV<lambda_1>@?0??BuildInstrToBlockMapping@IRContext@opt@spvtools@@AEAAXXZ@
.?AV<lambda_1>@?0??CheckPhiUsers@IfConversion@opt@spvtools@@AEAA_NPEAVInstruction@34@PEAVBasicBlock@34@@Z@
.?AV<lambda_1>@?0??CloneSameBlockOps@InlinePass@opt@spvtools@@IEAA_NPEAV?$unique_ptr@VInstruction@opt@spvtools@@U?$default_delete@VInstruction@opt@spvtools@@@__Cr@std@@@__Cr@std@@PEAV?$unordered_map@IIU?$hash@I@__Cr@std@@U?$equal_to@I@23@V?$allocator@U?$pair@$$CBII@__Cr@std@@@23@@67@PEAV?$unordered_map@IPEAVInstruction@opt@spvtools@@U?$hash@I@__Cr@std@@U?$equal_to@I@56@V?$allocator@U?$pair@$$CBIPEAVInstruction@opt@spvtools@@@__Cr@std@@@56@@67@PEAV?$unique_ptr@VBasicBlock@opt@spvtools@@U?$default_delete@VBasicBlock@opt@spvtools@@@__Cr@std@@@67@@Z@
.?AV<lambda_1>@?0??CollectNonSemanticTree@IRContext@opt@spvtools@@QEAAXPEAVInstruction@34@PEAV?$unordered_set@PEAVInstruction@opt@spvtools@@U?$hash@PEAVInstruction@opt@spvtools@@@__Cr@std@@U?$equal_to@PEAVInstruction@opt@spvtools@@@56@V?$allocator@PEAVInstruction@opt@spvtools@@@56@@__Cr@std@@@Z@
.?AV<lambda_1>@?0??ComputeIdBound@Module@opt@spvtools@@QEBAIXZ@
.?AV<lambda_1>@?0??CreateReplacementVariables@ScalarReplacementPass@opt@spvtools@@AEAA_NPEAVInstruction@34@PEAV?$vector@PEAVInstruction@opt@spvtools@@V?$allocator@PEAVInstruction@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@
.?AV<lambda_1>@?0??CreateSuccessorMap@?$BasicBlockSuccessorHelper@VBasicBlock@opt@spvtools@@@?A0x144121E0@opt@spvtools@@AEAAXAEAVFunction@34@PEBVBasicBlock@34@@Z@
.?AV<lambda_1>@?0??DerivativesPass@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@PEBVInstruction@23@@Z@
.?AV<lambda_1>@?0??EliminateDeadInsertsOnePass@DeadInsertElimPass@opt@spvtools@@AEAA_NPEAVFunction@34@@Z@
.?AV<lambda_1>@?0??EmitLoad@SpirvEmitter@sw@@AEAAXVInsnIterator@Spirv@3@@Z@
.?AV<lambda_1>@?0??FindLoopPreheader@Loop@opt@spvtools@@AEAAPEAVBasicBlock@34@PEAVDominatorAnalysis@34@@Z@
.?AV<lambda_1>@?0??FindUses@LocalSingleStoreElimPass@opt@spvtools@@AEBAXPEBVInstruction@34@PEAV?$vector@PEAVInstruction@opt@spvtools@@V?$allocator@PEAVInstruction@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@
.?AV<lambda_1>@?0??FoldInstructionToConstant@InstructionFolder@opt@spvtools@@QEBAPEAVInstruction@34@PEAV534@V?$function@$$A6AII@Z@__Cr@std@@@Z@
.?AV<lambda_1>@?0??ForEachInId@Instruction@opt@spvtools@@QEAAXAEBV?$function@$$A6AXPEAI@Z@__Cr@std@@@Z@
.?AV<lambda_1>@?0??ForEachInId@Instruction@opt@spvtools@@QEBAXAEBV?$function@$$A6AXPEBI@Z@__Cr@std@@@Z@
.?AV<lambda_1>@?0??ForEachInOperand@Instruction@opt@spvtools@@QEAAXAEBV?$function@$$A6AXPEAI@Z@__Cr@std@@@Z@
.?AV<lambda_1>@?0??ForEachInst@BasicBlock@opt@spvtools@@QEAAXAEBV?$function@$$A6AXPEAVInstruction@opt@spvtools@@@Z@__Cr@std@@_N@Z@
.?AV<lambda_1>@?0??ForEachInst@Function@opt@spvtools@@QEAAXAEBV?$function@$$A6AXPEAVInstruction@opt@spvtools@@@Z@__Cr@std@@_N1@Z@
.?AV<lambda_1>@?0??ForEachInst@Instruction@opt@spvtools@@QEAAXAEBV?$function@$$A6AXPEAVInstruction@opt@spvtools@@@Z@__Cr@std@@_N@Z@
.?AV<lambda_1>@?0??ForEachInst@Instruction@opt@spvtools@@QEBAXAEBV?$function@$$A6AXPEBVInstruction@opt@spvtools@@@Z@__Cr@std@@_N@Z@
.?AV<lambda_1>@?0??ForEachPhiInst@BasicBlock@opt@spvtools@@QEAAXAEBV?$function@$$A6AXPEAVInstruction@opt@spvtools@@@Z@__Cr@std@@_N@Z@
.?AV<lambda_1>@?0??ForEachSuccessorLabel@BasicBlock@opt@spvtools@@QEBAXAEBV?$function@$$A6AXI@Z@__Cr@std@@@Z@
.?AV<lambda_1>@?0??ForEachUse@DefUseManager@analysis@opt@spvtools@@QEBAXPEBVInstruction@45@AEBV?$function@$$A6AXPEAVInstruction@opt@spvtools@@I@Z@__Cr@std@@@Z@
.?AV<lambda_1>@?0??GetArrayStride@CombineAccessChains@opt@spvtools@@AEAAIPEBVInstruction@34@@Z@
.?AV<lambda_1>@?0??GetKillingFuncId@WrapOpKill@opt@spvtools@@AEAAIW4Op@spv@@@Z@
.?AV<lambda_1>@?0??GetNameMapper@FriendlyNameMapper@spvtools@@QEAA?AV?$function@$$A6A?AV?$basic_string@DU?$char_traits@D@__Cr@std@@V?$allocator@D@23@@__Cr@std@@I@Z@__Cr@std@@XZ@
.?AV<lambda_1>@?0??GetPredFunctor@?$BasicBlockSuccessorHelper@VBasicBlock@opt@spvtools@@@?A0x144121E0@opt@spvtools@@QEAA?AV?$function@$$A6APEBV?$vector@PEAVBasicBlock@opt@spvtools@@V?$allocator@PEAVBasicBlock@opt@spvtools@@@__Cr@std@@@__Cr@std@@PEBVBasicBlock@opt@spvtools@@@Z@__Cr@std@@XZ@
.?AV<lambda_1>@?0??GetSuccessorFunctor@?$BasicBlockSuccessorHelper@VBasicBlock@opt@spvtools@@@?A0x144121E0@opt@spvtools@@QEAA?AV?$function@$$A6APEBV?$vector@PEAVBasicBlock@opt@spvtools@@V?$allocator@PEAVBasicBlock@opt@spvtools@@@__Cr@std@@@__Cr@std@@PEBVBasicBlock@opt@spvtools@@@Z@__Cr@std@@XZ@
.?AV<lambda_1>@?0??HasOnlyNamesAndDecorates@MemPass@opt@spvtools@@IEBA_NI@Z@
.?AV<lambda_1>@?0??ImagePass@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@PEBVInstruction@23@@Z@
.?AV<lambda_1>@?0??Is32BitConstantIndexAccessChain@LocalAccessChainConvertPass@opt@spvtools@@AEBA_NPEBVInstruction@34@@Z@
.?AV<lambda_1>@?0??IsContinue@?A0x358D3924@blockmergeutil@opt@spvtools@@YA_NPEAVIRContext@34@I@Z@
.?AV<lambda_1>@?0??IsTargetDead@AggressiveDCEPass@opt@spvtools@@AEAA_NPEAVInstruction@34@@Z@
.?AV<lambda_1>@?0??IsValidUse@PrivateToLocalPass@opt@spvtools@@AEBA_NPEBVInstruction@34@@Z@
.?AV<lambda_1>@?0??IsVulkanStorageBuffer@Instruction@opt@spvtools@@QEBA_NXZ@
.?AV<lambda_1>@?0??KillDebugDeclares@LoopUnrollerUtilsImpl@?A0xD2DD07CD@opt@spvtools@@AEAAXPEAVBasicBlock@34@@Z@
.?AV<lambda_1>@?0??MarkLiveBlocks@DeadBranchElimPass@opt@spvtools@@AEAA_NPEAVFunction@34@PEAV?$unordered_set@PEAVBasicBlock@opt@spvtools@@U?$hash@PEAVBasicBlock@opt@spvtools@@@__Cr@std@@U?$equal_to@PEAVBasicBlock@opt@spvtools@@@56@V?$allocator@PEAVBasicBlock@opt@spvtools@@@56@@__Cr@std@@@Z@
.?AV<lambda_1>@?0??MarkUsesAsLive@VectorDCE@opt@spvtools@@AEAAXPEAVInstruction@34@AEBVBitVector@utils@4@PEAV?$unordered_map@IVBitVector@utils@spvtools@@U?$hash@I@__Cr@std@@U?$equal_to@I@56@V?$allocator@U?$pair@$$CBIVBitVector@utils@spvtools@@@__Cr@std@@@56@@__Cr@std@@PEAV?$vector@UWorkListItem@VectorDCE@opt@spvtools@@V?$allocator@UWorkListItem@VectorDCE@opt@spvtools@@@__Cr@std@@@9std@@@Z@
.?AV<lambda_1>@?0??MergeNegateArithmetic@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_1>@?0??MeshShadingPass@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@PEBVInstruction@23@@Z@
.?AV<lambda_1>@?0??ParseDefaultValueStr@?A0x46F3BED2@opt@spvtools@@YA?AV?$vector@IV?$allocator@I@__Cr@std@@@__Cr@std@@PEBDPEBVType@analysis@23@@Z@
.?AV<lambda_1>@?0??ProcessImpl@LocalSingleBlockLoadStoreElimPass@opt@spvtools@@AEAA?AW4Status@Pass@34@XZ@
.?AV<lambda_1>@?0??RayTracingPass@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@PEBVInstruction@23@@Z@
.?AV<lambda_1>@?0??RegisterStorageClassConsumer@ValidationState_t@val@spvtools@@QEAAXW4StorageClass@spv@@PEAVInstruction@34@@Z@
.?AV<lambda_1>@?0??RemoveSuccessorEdges@CFG@opt@spvtools@@QEAAXPEBVBasicBlock@34@@Z@
.?AV<lambda_1>@?0??ResetDFNumbering@DominatorTree@opt@spvtools@@QEAAXXZ@
.?AV<lambda_1>@?0??ShouldReplaceExtract@ReduceLoadSize@opt@spvtools@@AEAA_NPEAVInstruction@34@@Z@
.?AV<lambda_1>@?0??SimplifyFunction@SimplificationPass@opt@spvtools@@AEAA_NPEAVFunction@34@@Z@
.?AV<lambda_1>@?0??Simulate@SSAPropagator@opt@spvtools@@AEAA_NPEAVInstruction@34@@Z@
.?AV<lambda_1>@?0??TraversalRoots@?$CFA@VBasicBlock@val@spvtools@@@spvtools@@SA?AV?$vector@PEAVBasicBlock@val@spvtools@@V?$allocator@PEAVBasicBlock@val@spvtools@@@__Cr@std@@@__Cr@std@@AEBV456@V?$function@$$A6APEBV?$vector@PEAVBasicBlock@val@spvtools@@V?$allocator@PEAVBasicBlock@val@spvtools@@@__Cr@std@@@__Cr@std@@PEBVBasicBlock@val@spvtools@@@Z@56@1@Z@
.?AV<lambda_1>@?0??UpdatePhiNodes@MergeReturnPass@opt@spvtools@@AEAAXPEAVBasicBlock@34@0@Z@
.?AV<lambda_1>@?0??ValidateClipOrCullDistanceAtReference@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@11@Z@
.?AV<lambda_1>@?0??ValidateExecutionScope@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@PEBVInstruction@23@I@Z@
.?AV<lambda_1>@?0??ValidateExtInst@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@PEBVInstruction@23@@Z@
.?AV<lambda_1>@?0??ValidateStore@?A0xAAF45F09@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@PEBVInstruction@23@@Z@
.?AV<lambda_1>@?0??VisitAssignment@CCPPass@opt@spvtools@@AEAA?AW4PropStatus@SSAPropagator@34@PEAVInstruction@34@@Z@
.?AV<lambda_1>@?0??emitEpilog@SpirvShader@sw@@QEBAXPEAVSpirvRoutine@3@@Z@
.?AV<lambda_1>@?0??getSchedulerConfiguration@sw@@YA?AUConfig@Scheduler@marl@@AEBUConfiguration@2@@Z@
.?AV<lambda_1>@?0??maskAny@PixelProgram@sw@@CA?AVInt@SIMD@rr@@QEAV46@00AEBV?$vector@HV?$allocator@H@__Cr@std@@@__Cr@std@@@Z@
.?AV<lambda_1>@?0??run@DrawCall@sw@@SAXPEAVDevice@vk@@AEBVLoan@?$Pool@UDrawCall@sw@@@marl@@PEAVQueue@Ticket@8@QEAV9Ticket@8@@Z@
.?AV<lambda_1>@?0??spvOperandCanBeForwardDeclaredFunction@@YA?AV?$function@$$A6A_NI@Z@__Cr@std@@W4Op@spv@@@Z@
.?AV<lambda_1>@?0??start@Worker@Scheduler@marl@@QEAAXXZ@
.?AV<lambda_1>@?0??wait@Shared@Event@marl@@QEAAXXZ@
.?AV<lambda_1>@?0??wait@Ticket@marl@@QEBAXXZ@
.?AV<lambda_1>@?0??wait@WaitForAny@TimelineSemaphore@vk@@QEAAXXZ@
.?AV<lambda_1>@?0??wait@WaitGroup@marl@@QEBAXXZ@
.?AV<lambda_1>@isSupported@ExtensionProperties@@
.?AV<lambda_1_1>@?0??RemoveDecorationsFrom@DecorationManager@analysis@opt@spvtools@@QEAA_NIV?$function@$$A6A_NAEBVInstruction@opt@spvtools@@@Z@__Cr@std@@@Z@
.?AV<lambda_20>@?0??FoldIToFOp@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEBVType@234@PEBV1234@PEAVConstantManager@234@@Z@__Cr@std@@XZ@
.?AV<lambda_20>@?0??ValidateSampleMaskAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_20>@?0??VectorShuffleFeedingExtract@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_21>@?0??FMixFeedingExtract@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_21>@?0??FoldQuantizeToF16Scalar@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEBVType@234@PEBV1234@PEAVConstantManager@234@@Z@__Cr@std@@XZ@
.?AV<lambda_21>@?0??ValidateSamplePositionAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_22>@?0??FoldFSub@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_22>@?0??RedundantPhi@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_22>@?0??ValidateTessCoordAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_23>@?0??BitCastScalarOrVector@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_23>@?0??FoldFAdd@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_23>@?0??ValidateTessLevelOuterAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_24>@?0??FoldFMul@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_24>@?0??RedundantSelect@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_24>@?0??ValidateTessLevelInnerAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_25>@?0??FoldFOrdEqual@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_25>@?0??RedundantFAdd@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_25>@?0??ValidateVertexIndexAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_26>@?0??FoldFUnordEqual@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_26>@?0??RedundantFSub@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_26>@?0??ValidateLayerOrViewportIndexAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_27>@?0??FoldFOrdNotEqual@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_27>@?0??RedundantFMul@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_27>@?0??ValidateLayerOrViewportIndexAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_28>@?0??FoldFUnordNotEqual@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_28>@?0??RedundantFDiv@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_28>@?0??ValidateFragmentShaderF32Vec3InputAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_29>@?0??FoldFOrdLessThan@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_29>@?0??RedundantFMix@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_29>@?0??ValidateComputeShaderI32Vec3InputAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_2>@?0???R<lambda_1>@?0??SimplifyFunction@SimplificationPass@opt@spvtools@@AEAA_NPEAVFunction@45@@Z@QEBA?A?<auto>@@PEAVBasicBlock@45@@Z@
.?AV<lambda_2>@?0???R<lambda_39>@?0??FoldFMix@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@QEBA@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@67@@Z@
.?AV<lambda_2>@?0??AddBreaksAndContinuesToWorklist@AggressiveDCEPass@opt@spvtools@@AEAAXPEAVInstruction@34@@Z@
.?AV<lambda_2>@?0??AugmentedStructuralCFGSuccessorsFunction@Function@val@spvtools@@QEBA?AV?$function@$$A6APEBV?$vector@PEAVBasicBlock@val@spvtools@@V?$allocator@PEAVBasicBlock@val@spvtools@@@__Cr@std@@@__Cr@std@@PEBVBasicBlock@val@spvtools@@@Z@__Cr@std@@XZ@
.?AV<lambda_2>@?0??CheckUses@ScalarReplacementPass@opt@spvtools@@AEBA_NPEBVInstruction@34@PEAUVariableStats@234@@Z@
.?AV<lambda_2>@?0??CreatePhiNodesForInst@MergeReturnPass@opt@spvtools@@AEAAXPEAVBasicBlock@34@AEAVInstruction@34@@Z@
.?AV<lambda_2>@?0??CreateSuccessorMap@?$BasicBlockSuccessorHelper@VBasicBlock@opt@spvtools@@@?A0x144121E0@opt@spvtools@@AEAAXAEAVFunction@34@PEBVBasicBlock@34@@Z@
.?AV<lambda_2>@?0??EliminateOpPhiInstructions@?A0x358D3924@blockmergeutil@opt@spvtools@@YAXPEAVIRContext@34@PEAVBasicBlock@34@@Z@
.?AV<lambda_2>@?0??FeedsAStore@LocalSingleStoreElimPass@opt@spvtools@@AEBA_NPEAVInstruction@34@@Z@
.?AV<lambda_2>@?0??FindStoreInstruction@CopyPropagateArrays@opt@spvtools@@AEBAPEAVInstruction@34@PEBV534@@Z@
.?AV<lambda_2>@?0??FixBlockOrder@DeadBranchElimPass@opt@spvtools@@AEAAXXZ@
.?AV<lambda_2>@?0??ForEachInst@Function@opt@spvtools@@QEBAXAEBV?$function@$$A6AXPEBVInstruction@opt@spvtools@@@Z@__Cr@std@@_N1@Z@
.?AV<lambda_2>@?0??GetSpecIdTargetFromDecorationGroup@?A0x46F3BED2@opt@spvtools@@YAPEAVInstruction@23@AEBV423@PEAVDefUseManager@analysis@23@@Z@
.?AV<lambda_2>@?0??HasLoads@MemPass@opt@spvtools@@IEBA_NI@Z@
.?AV<lambda_2>@?0??HasOnlySupportedRefs@LocalAccessChainConvertPass@opt@spvtools@@AEAA_NI@Z@
.?AV<lambda_2>@?0??HoistInstruction@IfConversion@opt@spvtools@@AEAAXPEAVInstruction@34@PEAVBasicBlock@34@PEAVDominatorAnalysis@34@@Z@
.?AV<lambda_2>@?0??InlineSingleInstruction@InlinePass@opt@spvtools@@AEAA_NAEBV?$unordered_map@IIU?$hash@I@__Cr@std@@U?$equal_to@I@23@V?$allocator@U?$pair@$$CBII@__Cr@std@@@23@@__Cr@std@@PEAVBasicBlock@34@PEBVInstruction@34@I@Z@
.?AV<lambda_2>@?0??MergeNegateMulDivArithmetic@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_2>@?0??NumUsers@DefUseManager@analysis@opt@spvtools@@QEBAIPEBVInstruction@45@@Z@
.?AV<lambda_2>@?0??PerformCfgChecks@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@@Z@
.?AV<lambda_2>@?0??Process@DeadInsertElimPass@opt@spvtools@@UEAA?AW4Status@Pass@34@XZ@
.?AV<lambda_2>@?0??RayReorderNVPass@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@PEBVInstruction@23@@Z@
.?AV<lambda_2>@?0??RayTracingPass@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@PEBVInstruction@23@@Z@
.?AV<lambda_2>@?0??RegisterStorageClassConsumer@ValidationState_t@val@spvtools@@QEAAXW4StorageClass@spv@@PEAVInstruction@34@@Z@
.?AV<lambda_2>@?0??RemapOperands@LoopUnrollerUtilsImpl@?A0xD2DD07CD@opt@spvtools@@AEAAXPEAVInstruction@34@@Z@
.?AV<lambda_2>@?0??ResetDFNumbering@DominatorTree@opt@spvtools@@QEAAXXZ@
.?AV<lambda_2>@?0??RewriteInstructions@VectorDCE@opt@spvtools@@AEAA_NPEAVFunction@34@AEBV?$unordered_map@IVBitVector@utils@spvtools@@U?$hash@I@__Cr@std@@U?$equal_to@I@56@V?$allocator@U?$pair@$$CBIVBitVector@utils@spvtools@@@__Cr@std@@@56@@__Cr@std@@@Z@
.?AV<lambda_2>@?0??SimplifyFunction@SimplificationPass@opt@spvtools@@AEAA_NPEAVFunction@34@@Z@
.?AV<lambda_2>@?0??Simulate@SSAPropagator@opt@spvtools@@AEAA_NPEAVBasicBlock@34@@Z@
.?AV<lambda_2>@?0??Store@SpirvEmitter@sw@@AEBAXV?$SpirvID@VObject@Spirv@sw@@@3@AEBVOperand@23@_NW4memory_order@__Cr@std@@@Z@
.?AV<lambda_2>@?0??TraversalRoots@?$CFA@VBasicBlock@val@spvtools@@@spvtools@@SA?AV?$vector@PEAVBasicBlock@val@spvtools@@V?$allocator@PEAVBasicBlock@val@spvtools@@@__Cr@std@@@__Cr@std@@AEBV456@V?$function@$$A6APEBV?$vector@PEAVBasicBlock@val@spvtools@@V?$allocator@PEAVBasicBlock@val@spvtools@@@__Cr@std@@@__Cr@std@@PEBVBasicBlock@val@spvtools@@@Z@56@1@Z@
.?AV<lambda_2>@?0??UpdateUses@PrivateToLocalPass@opt@spvtools@@AEAA_NPEAVInstruction@34@@Z@
.?AV<lambda_2>@?0??ValidateClipOrCullDistanceAtReference@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@11@Z@
.?AV<lambda_2>@?0??ValidateExtInst@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@PEBVInstruction@23@@Z@
.?AV<lambda_2>@?0??ValidateImageQueryLod@?A0x28B9EDDC@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@PEBVInstruction@23@@Z@
.?AV<lambda_2>@?0??ValidateMemoryScope@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@PEBVInstruction@23@I@Z@
.?AV<lambda_2>@?0??VisitAssignment@CCPPass@opt@spvtools@@AEAA?AW4PropStatus@SSAPropagator@34@PEAVInstruction@34@@Z@
.?AV<lambda_2>@?0??WhileEachSuccessorLabel@BasicBlock@opt@spvtools@@QEBA_NAEBV?$function@$$A6A_NI@Z@__Cr@std@@@Z@
.?AV<lambda_2>@?0??processPixels@DrawCall@sw@@SAXPEAVDevice@vk@@AEBVLoan@?$Pool@UDrawCall@sw@@@marl@@AEBV6?$Pool@UBatchData@DrawCall@sw@@@8@AEBV?$shared_ptr@VFinally@marl@@@__Cr@std@@@Z@
.?AV<lambda_2>@?0??scalarizeArithmetic@TargetLowering@Ice@@IEAAXW4OpKind@InstArithmetic@3@PEAVVariable@3@PEAVOperand@3@2@Z@
.?AV<lambda_2>@?0??spvOperandCanBeForwardDeclaredFunction@@YA?AV?$function@$$A6A_NI@Z@__Cr@std@@W4Op@spv@@@Z@
.?AV<lambda_2>@?0??stop@Worker@Scheduler@marl@@QEAAXXZ@
.?AV<lambda_2>@?0??structural_dom_begin@BasicBlock@val@spvtools@@QEBA?BVDominatorIterator@234@XZ@
.?AV<lambda_30>@?0??FoldFUnordLessThan@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_30>@?0??RedundantIAdd@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_30>@?0??ValidateComputeI32InputAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_31>@?0??DotProductDoingExtract@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_31>@?0??FoldFOrdGreaterThan@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_31>@?0??ValidateI32InputAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_32>@?0??FoldFUnordGreaterThan@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_32>@?0??StoringUndef@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_32>@?0??ValidateI32Vec4InputAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_32>@?0??invokeCoroutineBegin@rr@@YAPEAXV?$function@$$A6APEAXXZ@__Cr@std@@@Z@
.?AV<lambda_33>@?0??FoldFOrdLessThanEqual@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_33>@?0??ValidateWorkgroupSizeAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_33>@?0??VectorShuffleFeedingShuffle@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_34>@?0??FoldFUnordLessThanEqual@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_34>@?0??RemoveRedundantOperands@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_34>@?0??ValidateBaseInstanceOrVertexAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_35>@?0??FoldFOrdGreaterThanEqual@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_35>@?0??UpdateImageOperands@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_35>@?0??ValidateDrawIndexAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_36>@?0??FoldFUnordGreaterThanEqual@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_36>@?0??ValidateViewIndexAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_37>@?0??FoldOpDotWithConstants@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_37>@?0??ValidateDeviceIndexAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_38>@?0??FoldFClampFeedingCompare@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@W4Op@spv@@@Z@
.?AV<lambda_38>@?0??ValidateFragInvocationCountAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_39>@?0??FoldFMix@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_39>@?0??ValidateFragSizeAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_3>@?0???R<lambda_39>@?0??FoldFMix@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@QEBA@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@67@@Z@
.?AV<lambda_3>@?0??AddBreaksAndContinuesToWorklist@AggressiveDCEPass@opt@spvtools@@AEAAXPEAVInstruction@34@@Z@
.?AV<lambda_3>@?0??AddStores@MemPass@opt@spvtools@@IEAAXIPEAV?$queue@PEAVInstruction@opt@spvtools@@V?$deque@PEAVInstruction@opt@spvtools@@V?$allocator@PEAVInstruction@opt@spvtools@@@__Cr@std@@@__Cr@std@@@__Cr@std@@@Z@
.?AV<lambda_3>@?0??AugmentedStructuralCFGPredecessorsFunction@Function@val@spvtools@@QEBA?AV?$function@$$A6APEBV?$vector@PEAVBasicBlock@val@spvtools@@V?$allocator@PEAVBasicBlock@val@spvtools@@@__Cr@std@@@__Cr@std@@PEBVBasicBlock@val@spvtools@@@Z@__Cr@std@@XZ@
.?AV<lambda_3>@?0??CanHoistInstruction@IfConversion@opt@spvtools@@AEAA_NPEAVInstruction@34@PEAVBasicBlock@34@PEAVDominatorAnalysis@34@@Z@
.?AV<lambda_3>@?0??CheckUsesRelaxed@ScalarReplacementPass@opt@spvtools@@AEBA_NPEBVInstruction@34@@Z@
.?AV<lambda_3>@?0??ComputeStructuredOrder@CFG@opt@spvtools@@QEAAXPEAVFunction@34@PEAVBasicBlock@34@1PEAV?$list@PEAVBasicBlock@opt@spvtools@@V?$allocator@PEAVBasicBlock@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@
.?AV<lambda_3>@?0??ConvertLocalAccessChains@LocalAccessChainConvertPass@opt@spvtools@@AEAA?AW4Status@Pass@34@PEAVFunction@34@@Z@
.?AV<lambda_3>@?0??CreatePhiNodesForInst@MergeReturnPass@opt@spvtools@@AEAAXPEAVBasicBlock@34@AEAVInstruction@34@@Z@
.?AV<lambda_3>@?0??FixBlockOrder@DeadBranchElimPass@opt@spvtools@@AEAAXXZ@
.?AV<lambda_3>@?0??ForEachDecoration@DecorationManager@analysis@opt@spvtools@@QEBAXIIV?$function@$$A6AXAEBVInstruction@opt@spvtools@@@Z@__Cr@std@@@Z@
.?AV<lambda_3>@?0??ForEachSuccessorLabel@BasicBlock@opt@spvtools@@QEAAXAEBV?$function@$$A6AXPEAI@Z@__Cr@std@@@Z@
.?AV<lambda_3>@?0??GenInlineCode@InlinePass@opt@spvtools@@IEAA_NPEAV?$vector@V?$unique_ptr@VBasicBlock@opt@spvtools@@U?$default_delete@VBasicBlock@opt@spvtools@@@__Cr@std@@@__Cr@std@@V?$allocator@V?$unique_ptr@VBasicBlock@opt@spvtools@@U?$default_delete@VBasicBlock@opt@spvtools@@@__Cr@std@@@__Cr@std@@@23@@__Cr@std@@PEAV?$vector@V?$unique_ptr@VInstruction@opt@spvtools@@U?$default_delete@VInstruction@opt@spvtools@@@__Cr@std@@@__Cr@std@@V?$allocator@V?$unique_ptr@VInstruction@opt@spvtools@@U?$default_delete@VInstruction@opt@spvtools@@@__Cr@std@@@__Cr@std@@@23@@67@Viterator@InstructionList@34@V?$UptrVectorIterator@VBasicBlock@opt@spvtools@@$0A@@34@@Z@
.?AV<lambda_3>@?0??HasNoStores@CopyPropagateArrays@opt@spvtools@@AEAA_NPEAVInstruction@34@@Z@
.?AV<lambda_3>@?0??IsReadOnlyPointerShaders@Instruction@opt@spvtools@@AEBA_NXZ@
.?AV<lambda_3>@?0??IsRecursive@Function@opt@spvtools@@QEBA_NXZ@
.?AV<lambda_3>@?0??MarkDebugValueUsesAsDead@VectorDCE@opt@spvtools@@AEAAXPEAVInstruction@34@PEAV?$vector@PEAVInstruction@opt@spvtools@@V?$allocator@PEAVInstruction@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@
.?AV<lambda_3>@?0??MergeNegateAddSubArithmetic@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_3>@?0??NumUses@DefUseManager@analysis@opt@spvtools@@QEBAIPEBVInstruction@45@@Z@
.?AV<lambda_3>@?0??PerformCfgChecks@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@@Z@
.?AV<lambda_3>@?0??PropagateConstants@CCPPass@opt@spvtools@@AEAA_NPEAVFunction@34@@Z@
.?AV<lambda_3>@?0??RayReorderNVPass@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@PEBVInstruction@23@@Z@
.?AV<lambda_3>@?0??RegisterStorageClassConsumer@ValidationState_t@val@spvtools@@QEAAXW4StorageClass@spv@@PEAVInstruction@34@@Z@
.?AV<lambda_3>@?0??ResetDFNumbering@DominatorTree@opt@spvtools@@QEAAXXZ@
.?AV<lambda_3>@?0??SimplifyFunction@SimplificationPass@opt@spvtools@@AEAA_NPEAVFunction@34@@Z@
.?AV<lambda_3>@?0??Simulate@SSAPropagator@opt@spvtools@@AEAA_NPEAVBasicBlock@34@@Z@
.?AV<lambda_3>@?0??Store@SpirvEmitter@sw@@AEBAXV?$SpirvID@VObject@Spirv@sw@@@3@AEBVOperand@23@_NW4memory_order@__Cr@std@@@Z@
.?AV<lambda_3>@?0??TraversalRoots@?$CFA@VBasicBlock@val@spvtools@@@spvtools@@SA?AV?$vector@PEAVBasicBlock@val@spvtools@@V?$allocator@PEAVBasicBlock@val@spvtools@@@__Cr@std@@@__Cr@std@@AEBV456@V?$function@$$A6APEBV?$vector@PEAVBasicBlock@val@spvtools@@V?$allocator@PEAVBasicBlock@val@spvtools@@@__Cr@std@@@__Cr@std@@PEBVBasicBlock@val@spvtools@@@Z@56@1@Z@
.?AV<lambda_3>@?0??ValidateExtInst@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@PEBVInstruction@23@@Z@
.?AV<lambda_3>@?0??ValidateFragCoordAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_3>@?0??ValidateImageQueryLod@?A0x28B9EDDC@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@PEBVInstruction@23@@Z@
.?AV<lambda_3>@?0??ValidateMemoryScope@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@PEBVInstruction@23@I@Z@
.?AV<lambda_3>@?0??spvOperandCanBeForwardDeclaredFunction@@YA?AV?$function@$$A6A_NI@Z@__Cr@std@@W4Op@spv@@@Z@
.?AV<lambda_40>@?0??FoldFTranscendentalUnary@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEBVType@234@PEBV1234@PEAVConstantManager@234@@Z@__Cr@std@@P6ANN@Z@Z@
.?AV<lambda_40>@?0??ValidateFragStencilRefAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_41>@?0??FoldFTranscendentalBinary@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEBVType@234@PEBV1234@1PEAVConstantManager@234@@Z@__Cr@std@@P6ANNN@Z@Z@
.?AV<lambda_41>@?0??ValidateFullyCoveredAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_42>@?0??ValidateNVSMOrARMCoreBuiltinsAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_43>@?0??ValidatePrimitiveShadingRateAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_44>@?0??ValidateShadingRateAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_45>@?0??ValidateRayTracingBuiltinsAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_46>@?0??ValidateRayTracingBuiltinsAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_47>@?0??ValidateRayTracingBuiltinsAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_48>@?0??ValidateRayTracingBuiltinsAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_49>@?0??ValidateRayTracingBuiltinsAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_4>@?0???R<lambda_39>@?0??FoldFMix@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@QEBA@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@67@@Z@
.?AV<lambda_4>@?0??ComputeAugmentedCFG@Function@val@spvtools@@AEAAXXZ@
.?AV<lambda_4>@?0??ComputeStructuredOrder@CFG@opt@spvtools@@QEAAXPEAVFunction@34@PEAVBasicBlock@34@1PEAV?$list@PEAVBasicBlock@opt@spvtools@@V?$allocator@PEAVBasicBlock@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@
.?AV<lambda_4>@?0??CreatePhiNodesForInst@MergeReturnPass@opt@spvtools@@AEAAXPEAVBasicBlock@34@AEAVInstruction@34@@Z@
.?AV<lambda_4>@?0??DCEInst@MemPass@opt@spvtools@@IEAAXPEAVInstruction@34@AEBV?$function@$$A6AXPEAVInstruction@opt@spvtools@@@Z@__Cr@std@@@Z@
.?AV<lambda_4>@?0??EmitVariable@SpirvEmitter@sw@@AEAAXVInsnIterator@Spirv@3@@Z@
.?AV<lambda_4>@?0??GenInlineCode@InlinePass@opt@spvtools@@IEAA_NPEAV?$vector@V?$unique_ptr@VBasicBlock@opt@spvtools@@U?$default_delete@VBasicBlock@opt@spvtools@@@__Cr@std@@@__Cr@std@@V?$allocator@V?$unique_ptr@VBasicBlock@opt@spvtools@@U?$default_delete@VBasicBlock@opt@spvtools@@@__Cr@std@@@__Cr@std@@@23@@__Cr@std@@PEAV?$vector@V?$unique_ptr@VInstruction@opt@spvtools@@U?$default_delete@VInstruction@opt@spvtools@@@__Cr@std@@@__Cr@std@@V?$allocator@V?$unique_ptr@VInstruction@opt@spvtools@@U?$default_delete@VInstruction@opt@spvtools@@@__Cr@std@@@__Cr@std@@@23@@67@Viterator@InstructionList@34@V?$UptrVectorIterator@VBasicBlock@opt@spvtools@@$0A@@34@@Z@
.?AV<lambda_4>@?0??GetUsedComponents@ScalarReplacementPass@opt@spvtools@@AEAA?AV?$unique_ptr@V?$unordered_set@_JU?$hash@_J@__Cr@std@@U?$equal_to@_J@23@V?$allocator@_J@23@@__Cr@std@@U?$default_delete@V?$unordered_set@_JU?$hash@_J@__Cr@std@@U?$equal_to@_J@23@V?$allocator@_J@23@@__Cr@std@@@23@@__Cr@std@@PEAVInstruction@34@@Z@
.?AV<lambda_4>@?0??HasValidReferencesOnly@CopyPropagateArrays@opt@spvtools@@AEAA_NPEAVInstruction@34@0@Z@
.?AV<lambda_4>@?0??Initialize@SSAPropagator@opt@spvtools@@AEAAXPEAVFunction@34@@Z@
.?AV<lambda_4>@?0??IsSuccessor@BasicBlock@opt@spvtools@@QEBA_NPEBV234@@Z@
.?AV<lambda_4>@?0??KillDeadInstructions@AggressiveDCEPass@opt@spvtools@@AEAA_NPEBVFunction@34@AEAV?$list@PEAVBasicBlock@opt@spvtools@@V?$allocator@PEAVBasicBlock@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@
.?AV<lambda_4>@?0??MergeMulMulArithmetic@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_4>@?0??PerformCfgChecks@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@@Z@
.?AV<lambda_4>@?0??Process@DeadBranchElimPass@opt@spvtools@@UEAA?AW4Status@Pass@34@XZ@
.?AV<lambda_4>@?0??PropagateConstants@CCPPass@opt@spvtools@@AEAA_NPEAVFunction@34@@Z@
.?AV<lambda_4>@?0??RegisterStorageClassConsumer@ValidationState_t@val@spvtools@@QEAAXW4StorageClass@spv@@PEAVInstruction@34@@Z@
.?AV<lambda_4>@?0??ReplaceAllUsesWith@IRContext@opt@spvtools@@QEAA_NII@Z@
.?AV<lambda_4>@?0??ValidateExtInst@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@PEBVInstruction@23@@Z@
.?AV<lambda_4>@?0??ValidateFragDepthAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_4>@?0??ValidateMemoryScope@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@PEBVInstruction@23@I@Z@
.?AV<lambda_4>@?0??spvOperandCanBeForwardDeclaredFunction@@YA?AV?$function@$$A6A_NI@Z@__Cr@std@@W4Op@spv@@@Z@
.?AV<lambda_4>@?0??structural_pdom_begin@BasicBlock@val@spvtools@@QEBA?BVDominatorIterator@234@XZ@
.?AV<lambda_50>@?0??ValidateMeshShadingEXTBuiltinsAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_51>@?0??ValidateMeshShadingEXTBuiltinsAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_52>@?0??ValidateMeshShadingEXTBuiltinsAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_5>@?0??AddBlocksWithBackEdge@DeadBranchElimPass@opt@spvtools@@AEAAXIIIPEAV?$unordered_set@PEAVBasicBlock@opt@spvtools@@U?$hash@PEAVBasicBlock@opt@spvtools@@@__Cr@std@@U?$equal_to@PEAVBasicBlock@opt@spvtools@@@56@V?$allocator@PEAVBasicBlock@opt@spvtools@@@56@@__Cr@std@@@Z@
.?AV<lambda_5>@?0??CanUpdateUses@CopyPropagateArrays@opt@spvtools@@AEAA_NPEAVInstruction@34@I@Z@
.?AV<lambda_5>@?0??ComputeAugmentedCFG@Function@val@spvtools@@AEAAXXZ@
.?AV<lambda_5>@?0??ComputeLoopStructuredOrder@Loop@opt@spvtools@@QEBAXPEAV?$vector@PEAVBasicBlock@opt@spvtools@@V?$allocator@PEAVBasicBlock@opt@spvtools@@@__Cr@std@@@__Cr@std@@_N1@Z@
.?AV<lambda_5>@?0??ComputeStructuredOrder@CFG@opt@spvtools@@QEAAXPEAVFunction@34@PEAVBasicBlock@34@1PEAV?$list@PEAVBasicBlock@opt@spvtools@@V?$allocator@PEAVBasicBlock@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@
.?AV<lambda_5>@?0??EmitVariable@SpirvEmitter@sw@@AEAAXVInsnIterator@Spirv@3@@Z@
.?AV<lambda_5>@?0??ForMergeAndContinueLabel@BasicBlock@opt@spvtools@@QEAAXAEBV?$function@$$A6AXI@Z@__Cr@std@@@Z@
.?AV<lambda_5>@?0??GetLoadedVariablesFromFunctionCall@AggressiveDCEPass@opt@spvtools@@AEAA?AV?$vector@IV?$allocator@I@__Cr@std@@@__Cr@std@@PEBVInstruction@34@@Z@
.?AV<lambda_5>@?0??HasOnlySupportedRefs@MemPass@opt@spvtools@@AEAA_NI@Z@
.?AV<lambda_5>@?0??IsFoldableByFoldScalar@Instruction@opt@spvtools@@QEBA_NXZ@
.?AV<lambda_5>@?0??MergeMulDivArithmetic@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_5>@?0??PerformCfgChecks@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@@Z@
.?AV<lambda_5>@?0??PredicateBlocks@MergeReturnPass@opt@spvtools@@AEAA_NPEAVBasicBlock@34@PEAV?$unordered_set@PEAVBasicBlock@opt@spvtools@@U?$hash@PEAVBasicBlock@opt@spvtools@@@__Cr@std@@U?$equal_to@PEAVBasicBlock@opt@spvtools@@@56@V?$allocator@PEAVBasicBlock@opt@spvtools@@@56@@__Cr@std@@PEAV?$list@PEAVBasicBlock@opt@spvtools@@V?$allocator@PEAVBasicBlock@opt@spvtools@@@__Cr@std@@@78@@Z@
.?AV<lambda_5>@?0??Process@CCPPass@opt@spvtools@@UEAA?AW4Status@Pass@34@XZ@
.?AV<lambda_5>@?0??RegisterStorageClassConsumer@ValidationState_t@val@spvtools@@QEAAXW4StorageClass@spv@@PEAVInstruction@34@@Z@
.?AV<lambda_5>@?0??ReplaceAllUsesWithPredicate@IRContext@opt@spvtools@@QEAA_NIIAEBV?$function@$$A6A_NPEAVInstruction@opt@spvtools@@@Z@__Cr@std@@@Z@
.?AV<lambda_5>@?0??UpdateSucceedingPhis@InlinePass@opt@spvtools@@IEAAXAEAV?$vector@V?$unique_ptr@VBasicBlock@opt@spvtools@@U?$default_delete@VBasicBlock@opt@spvtools@@@__Cr@std@@@__Cr@std@@V?$allocator@V?$unique_ptr@VBasicBlock@opt@spvtools@@U?$default_delete@VBasicBlock@opt@spvtools@@@__Cr@std@@@__Cr@std@@@23@@__Cr@std@@@Z@
.?AV<lambda_5>@?0??ValidateExtInst@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@PEBVInstruction@23@@Z@
.?AV<lambda_5>@?0??ValidateFrontFacingAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_5>@?0??createWorkerFiber@Worker@Scheduler@marl@@AEAAPEAVFiber@34@XZ@
.?AV<lambda_5>@?0??optimizeSpirv@?A0xEC3028C1@@YA?AVSpirvBinary@sw@@AEBUSpirvBinaryKey@PipelineCache@vk@@@Z@
.?AV<lambda_5>@?0??spvOperandCanBeForwardDeclaredFunction@@YA?AV?$function@$$A6A_NI@Z@__Cr@std@@W4Op@spv@@@Z@
.?AV<lambda_6>@?0??AddOperandsToWorkList@AggressiveDCEPass@opt@spvtools@@AEAAXPEBVInstruction@34@@Z@
.?AV<lambda_6>@?0??CheckDecorationsOfBuffers@?A0xE73A5511@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@@Z@
.?AV<lambda_6>@?0??ComputeStructuredOrder@CFG@opt@spvtools@@QEAAXPEAVFunction@34@PEAVBasicBlock@34@1PEAV?$list@PEAVBasicBlock@opt@spvtools@@V?$allocator@PEAVBasicBlock@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@
.?AV<lambda_6>@?0??ContainsAbortOtherThanUnreachable@InlinePass@opt@spvtools@@IEBA_NPEAVFunction@34@@Z@
.?AV<lambda_6>@?0??EmitCopyMemory@SpirvEmitter@sw@@AEAAXVInsnIterator@Spirv@3@@Z@
.?AV<lambda_6>@?0??HasNontrivialUnreachableBlocks@MergeReturnPass@opt@spvtools@@AEAA_NPEAVFunction@34@@Z@
.?AV<lambda_6>@?0??IsFoldableByFoldVector@Instruction@opt@spvtools@@QEBA_NXZ@
.?AV<lambda_6>@?0??MergeMulNegateArithmetic@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_6>@?0??PerformCfgChecks@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@@Z@
.?AV<lambda_6>@?0??RegisterExecutionModelLimitation@Function@val@spvtools@@QEAAXW4ExecutionModel@spv@@AEBV?$basic_string@DU?$char_traits@D@__Cr@std@@V?$allocator@D@23@@__Cr@std@@@Z@
.?AV<lambda_6>@?0??RegisterStorageClassConsumer@ValidationState_t@val@spvtools@@QEAAXW4StorageClass@spv@@PEAVInstruction@34@@Z@
.?AV<lambda_6>@?0??RemoveBlock@MemPass@opt@spvtools@@AEAAXPEAV?$UptrVectorIterator@VBasicBlock@opt@spvtools@@$0A@@34@@Z@
.?AV<lambda_6>@?0??SwitchHasNestedBreak@DeadBranchElimPass@opt@spvtools@@AEAA_NI@Z@
.?AV<lambda_6>@?0??UpdateUses@CopyPropagateArrays@opt@spvtools@@AEAAXPEAVInstruction@34@0@Z@
.?AV<lambda_6>@?0??ValidateExtInst@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@PEBVInstruction@23@@Z@
.?AV<lambda_6>@?0??ValidateHelperInvocationAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_6>@?0??spvOperandCanBeForwardDeclaredFunction@@YA?AV?$function@$$A6A_NI@Z@__Cr@std@@W4Op@spv@@@Z@
.?AV<lambda_7>@?0??CheckDecorationsOfBuffers@?A0xE73A5511@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@@Z@
.?AV<lambda_7>@?0??EmitCopyMemory@SpirvEmitter@sw@@AEAAXVInsnIterator@Spirv@3@@Z@
.?AV<lambda_7>@?0??ForEachBlockInReversePostOrder@CFG@opt@spvtools@@QEAAXPEAVBasicBlock@34@AEBV?$function@$$A6AXPEAVBasicBlock@opt@spvtools@@@Z@__Cr@std@@@Z@
.?AV<lambda_7>@?0??InitializeModuleScopeLiveInstructions@AggressiveDCEPass@opt@spvtools@@AEAAXXZ@
.?AV<lambda_7>@?0??IsFloatingPointFoldingAllowed@Instruction@opt@spvtools@@QEBA_NXZ@
.?AV<lambda_7>@?0??MergeDivDivArithmetic@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_7>@?0??PerformCfgChecks@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@@Z@
.?AV<lambda_7>@?0??RegisterStorageClassConsumer@ValidationState_t@val@spvtools@@QEAAXW4StorageClass@spv@@PEAVInstruction@34@@Z@
.?AV<lambda_7>@?0??RemoveUnreachableBlocks@MemPass@opt@spvtools@@AEAA_NPEAVFunction@34@@Z@
.?AV<lambda_7>@?0??SplitBasicBlock@BasicBlock@opt@spvtools@@QEAAPEAV234@PEAVIRContext@34@IViterator@InstructionList@34@@Z@
.?AV<lambda_7>@?0??ValidateExtInst@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@PEBVInstruction@23@@Z@
.?AV<lambda_7>@?0??ValidateInvocationIdAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_7>@?0??spvOperandCanBeForwardDeclaredFunction@@YA?AV?$function@$$A6A_NI@Z@__Cr@std@@W4Op@spv@@@Z@
.?AV<lambda_8>@?0??CheckDecorationsOfBuffers@?A0xE73A5511@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@@Z@
.?AV<lambda_8>@?0??ComputeStructuredSuccessors@CFG@opt@spvtools@@AEAAXPEAVFunction@34@@Z@
.?AV<lambda_8>@?0??EliminateDeadFunctions@AggressiveDCEPass@opt@spvtools@@AEAA_NXZ@
.?AV<lambda_8>@?0??FoldExtractWithConstants@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_8>@?0??MergeDivMulArithmetic@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_8>@?0??RegisterStorageClassConsumer@ValidationState_t@val@spvtools@@QEAAXW4StorageClass@spv@@PEAVInstruction@34@@Z@
.?AV<lambda_8>@?0??RemoveUnreachableBlocks@MemPass@opt@spvtools@@AEAA_NPEAVFunction@34@@Z@
.?AV<lambda_8>@?0??SplitBasicBlock@BasicBlock@opt@spvtools@@QEAAPEAV234@PEAVIRContext@34@IViterator@InstructionList@34@@Z@
.?AV<lambda_8>@?0??ValidateExtInst@val@spvtools@@YA?AW4spv_result_t@@AEAVValidationState_t@23@PEBVInstruction@23@@Z@
.?AV<lambda_8>@?0??ValidateInstanceIndexAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_8>@?0??spvOperandCanBeForwardDeclaredFunction@@YA?AV?$function@$$A6A_NI@Z@__Cr@std@@W4Op@spv@@@Z@
.?AV<lambda_9>@?0??ComputePostOrderTraversal@CFG@opt@spvtools@@AEAAXPEAVBasicBlock@34@PEAV?$vector@PEAVBasicBlock@opt@spvtools@@V?$allocator@PEAVBasicBlock@opt@spvtools@@@__Cr@std@@@__Cr@std@@PEAV?$unordered_set@PEAVBasicBlock@opt@spvtools@@U?$hash@PEAVBasicBlock@opt@spvtools@@@__Cr@std@@U?$equal_to@PEAVBasicBlock@opt@spvtools@@@56@V?$allocator@PEAVBasicBlock@opt@spvtools@@@56@@78@@Z@
.?AV<lambda_9>@?0??FoldInsertWithConstants@?A0x10562AE6@opt@spvtools@@YA?AV?$function@$$A6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@34@PEAVInstruction@34@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_9>@?0??MarkFunctionParameterAsLive@AggressiveDCEPass@opt@spvtools@@AEAAXPEBVFunction@34@@Z@
.?AV<lambda_9>@?0??MergeDivNegateArithmetic@?A0x52FCD5C7@opt@spvtools@@YA?AV?$function@$$A6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z@__Cr@std@@XZ@
.?AV<lambda_9>@?0??RegisterStorageClassConsumer@ValidationState_t@val@spvtools@@QEAAXW4StorageClass@spv@@PEAVInstruction@34@@Z@
.?AV<lambda_9>@?0??ValidatePatchVerticesAtDefinition@BuiltInsValidator@?A0x1A332DDF@val@spvtools@@AEAA?AW4spv_result_t@@AEBVDecoration@34@AEBVInstruction@34@@Z@
.?AV<lambda_9>@?0??run@ComputeProgram@sw@@QEAAXAEBU?$array@PEAVDescriptorSet@vk@@$03@__Cr@std@@AEBU?$array@PEAE$03@56@AEBU?$array@I$0M@@56@AEBUPushConstantStorage@Pipeline@vk@@IIIIII@Z@
.?AV<lambda_9>@?0??spvOperandCanBeForwardDeclaredFunction@@YA?AV?$function@$$A6A_NI@Z@__Cr@std@@W4Op@spv@@@Z@
.?AV?$__bind@P8BuiltInsValidator@?A0x1A332DDF@val@spvtools@@EAA?AW4spv_result_t@@AEBVDecoration@23@AEBVInstruction@23@11@ZPEAV1?A0x1A332DDF@23@AEBV523@AEBV623@AEBV623@AEBU?$__ph@$00@placeholders@__Cr@std@@@__Cr@std@@
.?AV?$__bind@P8BuiltInsValidator@?A0x1A332DDF@val@spvtools@@EAA?AW4spv_result_t@@HPEBDW4ExecutionModel@spv@@AEBVDecoration@23@AEBVInstruction@23@33@ZPEAV1?A0x1A332DDF@23@AEAHAEAPEBDAEAW456@AEBV723@AEBV823@AEBV823@AEBU?$__ph@$00@placeholders@__Cr@std@@@__Cr@std@@
.?AV?$__bind@P8BuiltInsValidator@?A0x1A332DDF@val@spvtools@@EAA?AW4spv_result_t@@HPEBDW4ExecutionModel@spv@@AEBVDecoration@23@AEBVInstruction@23@33@ZPEAV1?A0x1A332DDF@23@AEAIAEAY0IM@$$CBDW456@AEBV723@AEBV823@AEBV823@AEBU?$__ph@$00@placeholders@__Cr@std@@@__Cr@std@@
.?AV?$__bind@P8BuiltInsValidator@?A0x1A332DDF@val@spvtools@@EAA?AW4spv_result_t@@HPEBDW4ExecutionModel@spv@@AEBVDecoration@23@AEBVInstruction@23@33@ZPEAV1?A0x1A332DDF@23@AEAIAEAY0IN@$$CBDW456@AEBV723@AEBV823@AEBV823@AEBU?$__ph@$00@placeholders@__Cr@std@@@__Cr@std@@
.?AV?$__bind@P8BuiltInsValidator@?A0x1A332DDF@val@spvtools@@EAA?AW4spv_result_t@@HPEBDW4ExecutionModel@spv@@AEBVDecoration@23@AEBVInstruction@23@33@ZPEAV1?A0x1A332DDF@23@AEAIAEAY0IP@$$CBDW456@AEBV723@AEBV823@AEBV823@AEBU?$__ph@$00@placeholders@__Cr@std@@@__Cr@std@@
.?AV?$__bind@P8BuiltInsValidator@?A0x1A332DDF@val@spvtools@@EAA?AW4spv_result_t@@HPEBDW4ExecutionModel@spv@@AEBVDecoration@23@AEBVInstruction@23@33@ZPEAV1?A0x1A332DDF@23@AEAIAEAY0JF@$$CBDW456@AEBV723@AEBV823@AEBV823@AEBU?$__ph@$00@placeholders@__Cr@std@@@__Cr@std@@
.?AV?$__bind@P8BuiltInsValidator@?A0x1A332DDF@val@spvtools@@EAA?AW4spv_result_t@@HPEBDW4ExecutionModel@spv@@AEBVDecoration@23@AEBVInstruction@23@33@ZPEAV1?A0x1A332DDF@23@AEAIAEAY0JJ@$$CBDW456@AEBV723@AEBV823@AEBV823@AEBU?$__ph@$00@placeholders@__Cr@std@@@__Cr@std@@
.?AV?$__bind@P8BuiltInsValidator@?A0x1A332DDF@val@spvtools@@EAA?AW4spv_result_t@@HPEBDW4ExecutionModel@spv@@AEBVDecoration@23@AEBVInstruction@23@33@ZPEAV1?A0x1A332DDF@23@HAEAY0HL@$$CBDW456@AEBV723@AEBV823@AEBV823@AEBU?$__ph@$00@placeholders@__Cr@std@@@__Cr@std@@
.?AV?$__bind@P8BuiltInsValidator@?A0x1A332DDF@val@spvtools@@EAA?AW4spv_result_t@@HPEBDW4ExecutionModel@spv@@AEBVDecoration@23@AEBVInstruction@23@33@ZPEAV1?A0x1A332DDF@23@HAEAY0HM@$$CBDW456@AEBV723@AEBV823@AEBV823@AEBU?$__ph@$00@placeholders@__Cr@std@@@__Cr@std@@
.?AV?$__bind@P8BuiltInsValidator@?A0x1A332DDF@val@spvtools@@EAA?AW4spv_result_t@@HPEBDW4ExecutionModel@spv@@AEBVDecoration@23@AEBVInstruction@23@33@ZPEAV1?A0x1A332DDF@23@HAEAY0IB@$$CBDW456@AEBV723@AEBV823@AEBV823@AEBU?$__ph@$00@placeholders@__Cr@std@@@__Cr@std@@
.?AV?$__bind@P8BuiltInsValidator@?A0x1A332DDF@val@spvtools@@EAA?AW4spv_result_t@@HPEBDW4ExecutionModel@spv@@AEBVDecoration@23@AEBVInstruction@23@33@ZPEAV1?A0x1A332DDF@23@HAEAY0IC@$$CBDW456@AEBV723@AEBV823@AEBV823@AEBU?$__ph@$00@placeholders@__Cr@std@@@__Cr@std@@
.?AV?$__bind@P8BuiltInsValidator@?A0x1A332DDF@val@spvtools@@EAA?AW4spv_result_t@@HPEBDW4ExecutionModel@spv@@AEBVDecoration@23@AEBVInstruction@23@33@ZPEAV1?A0x1A332DDF@23@HAEAY0IG@$$CBDW456@AEBV723@AEBV823@AEBV823@AEBU?$__ph@$00@placeholders@__Cr@std@@@__Cr@std@@
.?AV?$__bind@P8BuiltInsValidator@?A0x1A332DDF@val@spvtools@@EAA?AW4spv_result_t@@HPEBDW4ExecutionModel@spv@@AEBVDecoration@23@AEBVInstruction@23@33@ZPEAV1?A0x1A332DDF@23@HAEAY0II@$$CBDW456@AEBV723@AEBV823@AEBV823@AEBU?$__ph@$00@placeholders@__Cr@std@@@__Cr@std@@
.?AV?$__bind@P8BuiltInsValidator@?A0x1A332DDF@val@spvtools@@EAA?AW4spv_result_t@@HPEBDW4ExecutionModel@spv@@AEBVDecoration@23@AEBVInstruction@23@33@ZPEAV1?A0x1A332DDF@23@HAEAY0IM@$$CBDW456@AEBV723@AEBV823@AEBV823@AEBU?$__ph@$00@placeholders@__Cr@std@@@__Cr@std@@
.?AV?$__bind@P8BuiltInsValidator@?A0x1A332DDF@val@spvtools@@EAA?AW4spv_result_t@@HPEBDW4ExecutionModel@spv@@AEBVDecoration@23@AEBVInstruction@23@33@ZPEAV1?A0x1A332DDF@23@HAEAY0IN@$$CBDW456@AEBV723@AEBV823@AEBV823@AEBU?$__ph@$00@placeholders@__Cr@std@@@__Cr@std@@
.?AV?$__bind@P8BuiltInsValidator@?A0x1A332DDF@val@spvtools@@EAA?AW4spv_result_t@@HPEBDW4ExecutionModel@spv@@AEBVDecoration@23@AEBVInstruction@23@33@ZPEAV1?A0x1A332DDF@23@HAEAY0IP@$$CBDW456@AEBV723@AEBV823@AEBV823@AEBU?$__ph@$00@placeholders@__Cr@std@@@__Cr@std@@
.?AV?$__bind@P8BuiltInsValidator@?A0x1A332DDF@val@spvtools@@EAA?AW4spv_result_t@@HPEBDW4ExecutionModel@spv@@AEBVDecoration@23@AEBVInstruction@23@33@ZPEAV1?A0x1A332DDF@23@HAEAY0LP@$$CBDAEBW456@AEBV723@AEBV823@AEBV823@AEBU?$__ph@$00@placeholders@__Cr@std@@@__Cr@std@@
.?AV?$__bind@P8DefUseManager@analysis@opt@spvtools@@EAAXPEAVInstruction@34@@ZPEAV1234@AEBU?$__ph@$00@placeholders@__Cr@std@@@__Cr@std@@
.?AV?$__money_get@D@__Cr@std@@
.?AV?$__money_get@_W@__Cr@std@@
.?AV?$__money_put@D@__Cr@std@@
.?AV?$__money_put@_W@__Cr@std@@
.?AV?$__stdinbuf@D@__Cr@std@@
.?AV?$__stdinbuf@_W@__Cr@std@@
.?AV?$__stdoutbuf@D@__Cr@std@@
.?AV?$__stdoutbuf@_W@__Cr@std@@
.?AV?$__time_get_c_storage@D@__Cr@std@@
.?AV?$__time_get_c_storage@_W@__Cr@std@@
.?AV?$basic_ios@DU?$char_traits@D@__Cr@std@@@__Cr@std@@
.?AV?$basic_ios@_WU?$char_traits@_W@__Cr@std@@@__Cr@std@@
.?AV?$basic_istream@DU?$char_traits@D@__Cr@std@@@__Cr@std@@
.?AV?$basic_istream@_WU?$char_traits@_W@__Cr@std@@@__Cr@std@@
.?AV?$basic_istringstream@DU?$char_traits@D@__Cr@std@@V?$allocator@D@23@@__Cr@std@@
.?AV?$basic_ostream@DU?$char_traits@D@__Cr@std@@@__Cr@std@@
.?AV?$basic_ostream@_WU?$char_traits@_W@__Cr@std@@@__Cr@std@@
.?AV?$basic_ostringstream@DU?$char_traits@D@__Cr@std@@V?$allocator@D@23@@__Cr@std@@
.?AV?$basic_streambuf@DU?$char_traits@D@__Cr@std@@@__Cr@std@@
.?AV?$basic_streambuf@_WU?$char_traits@_W@__Cr@std@@@__Cr@std@@
.?AV?$codecvt@DDU_Mbstatet@@@__Cr@std@@
.?AV?$codecvt@_SDU_Mbstatet@@@__Cr@std@@
.?AV?$codecvt@_S_QU_Mbstatet@@@__Cr@std@@
.?AV?$codecvt@_UDU_Mbstatet@@@__Cr@std@@
.?AV?$codecvt@_U_QU_Mbstatet@@@__Cr@std@@
.?AV?$codecvt@_WDU_Mbstatet@@@__Cr@std@@
.?AV?$collate@D@__Cr@std@@
.?AV?$collate@_W@__Cr@std@@
.?AV?$ctype@D@__Cr@std@@
.?AV?$ctype@_W@__Cr@std@@
.?AV?$messages@D@__Cr@std@@
.?AV?$messages@_W@__Cr@std@@
.?AV?$money_get@DV?$istreambuf_iterator@DU?$char_traits@D@__Cr@std@@@__Cr@std@@@__Cr@std@@
.?AV?$money_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@__Cr@std@@@__Cr@std@@@__Cr@std@@
.?AV?$money_put@DV?$ostreambuf_iterator@DU?$char_traits@D@__Cr@std@@@__Cr@std@@@__Cr@std@@
.?AV?$money_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@__Cr@std@@@__Cr@std@@@__Cr@std@@
.?AV?$moneypunct@D$00@__Cr@std@@
.?AV?$moneypunct@D$0A@@__Cr@std@@
.?AV?$moneypunct@_W$00@__Cr@std@@
.?AV?$moneypunct@_W$0A@@__Cr@std@@
.?AV?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@__Cr@std@@@__Cr@std@@@__Cr@std@@
.?AV?$num_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@__Cr@std@@@__Cr@std@@@__Cr@std@@
.?AV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@__Cr@std@@@__Cr@std@@@__Cr@std@@
.?AV?$num_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@__Cr@std@@@__Cr@std@@@__Cr@std@@
.?AV?$numpunct@D@__Cr@std@@
.?AV?$numpunct@_W@__Cr@std@@
.?AV?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@__Cr@std@@@__Cr@std@@@__Cr@std@@
.?AV?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@__Cr@std@@@__Cr@std@@@__Cr@std@@
.?AV?$time_put@DV?$ostreambuf_iterator@DU?$char_traits@D@__Cr@std@@@__Cr@std@@@__Cr@std@@
.?AV?$time_put@_WV?$ostreambuf_iterator@_WU?$char_traits@_W@__Cr@std@@@__Cr@std@@@__Cr@std@@
.?AV__do_message@__Cr@std@@
.?AV__generic_error_category@__Cr@std@@
.?AV__imp@locale@__Cr@std@@
.?AV__iostream_category@__Cr@std@@
.?AV__shared_count@__Cr@std@@
.?AV__system_error_category@__Cr@std@@
.?AV__time_put@__Cr@std@@
.?AVbad_alloc@std@@
.?AVbad_array_new_length@std@@
.?AVbad_exception@std@@
.?AVcodecvt_base@__Cr@std@@
.?AVctype_base@__Cr@std@@
.?AVerror_category@__Cr@std@@
.?AVexception@std@@
.?AVfacet@locale@__Cr@std@@
.?AVfailure@ios_base@__Cr@std@@
.?AVinvalid_argument@std@@
.?AVios_base@__Cr@std@@
.?AVlogic_error@std@@
.?AVmessages_base@__Cr@std@@
.?AVmoney_base@__Cr@std@@
.?AVoverflow_error@std@@
.?AVruntime_error@std@@
.?AVsystem_error@__Cr@std@@
.?AVtime_base@__Cr@std@@
.?AVtype_info@@
.P6A?AV?$basic_string@DU?$char_traits@D@__Cr@std@@V?$allocator@D@23@@__Cr@std@@I@Z
.P6APEBDVRegNumT@Ice@@@Z
.P6APEBDW4RegClass@Ice@@@Z
.P6APEBVConstant@analysis@opt@spvtools@@PEAVIRContext@23@PEAVInstruction@23@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z
.P6APEBVConstant@analysis@opt@spvtools@@PEBVType@123@PEBV0123@1PEAVConstantManager@123@@Z
.P6APEBVConstant@analysis@opt@spvtools@@PEBVType@123@PEBV0123@PEAVConstantManager@123@@Z
.P6A_NPEAVIRContext@opt@spvtools@@PEAVInstruction@12@AEBV?$vector@PEBVConstant@analysis@opt@spvtools@@V?$allocator@PEBVConstant@analysis@opt@spvtools@@@__Cr@std@@@__Cr@std@@@Z
.bss
.data
.data.rel.ro
.eB5
.p2align
.rel
.rela
.rodata
.rodata.cst
.shstrtab
.strtab
.symtab
.text
.xJ>Hf
/2GG>!B
0..\..\third_party\swiftshader\src\Pipeline\PixelRoutine.cpp
0..\..\third_party\swiftshader\src\Pipeline\SpirvShaderGLSLstd450.cpp
0000000000000000nan
00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899GetSystemTimePreciseAsFileTime
0123456789
0123456789abcdefABCDEFxX+-pPiInN
0E>X
0X8b?~
0iN>/
0x\r5
1#IND
1#INF
1#QNAN
1#SNAN
11UT
11Y@
16-bit or 32-bit 
2 Entry points cannot share the same name and ExecutionMode.
2\n0\tP
2\n0x\r5
2\vpx\r5
3 FB
32-bit 
37>k
3>N;kU
3>fvw
3?tr
4SetupRoutine
4Unexpected memory ordering for AtomicCmpxchg
51>W
64-bits unsigned integer scalar type
6NK>
6\fXO>\ntA
7..\..\third_party\swiftshader\src\Pipeline\SamplerCore.cpp
7>I0
7?GX
7h>?8
7yp>
7~xh
8- or 16-bit loads must be a scalar, vector or matrix type
8- or 16-bit stores must be a scalar, vector or matrix type
8- or 16-bit types can only be used with width-only conversions
8Csinf
8ke?;
9>70
9>expf
9a>d
9g>@3
: 64-bit atomics require the Int64Atomics capability
: CommandLine Error: Option '
: Component Count must be 
: Component Count must be 32-bit integer OpConstant
: Component Count must be positive 
: Execution scope is limited to Subgroup or Workgroup
: Function storage class forbidden when the Shader capability is declared.
: MakeAvailableKHR Memory Semantics also requires either Release or AcquireRelease Memory Semantics
: MakeVisibleKHR Memory Semantics also requires either Acquire or AcquireRelease Memory Semantics
: Memory Scope QueueFamilyKHR requires capability 
: Memory Semantics MakeAvailableKHR requires capability 
: Memory Semantics MakeVisibleKHR requires capability 
: Memory Semantics OutputMemoryKHR requires capability 
: Memory Semantics Release and AcquireRelease cannot be used for operand Unequal
: Memory Semantics UniformMemory requires capability Shader
: Memory Semantics Volatile requires capability VulkanMemoryModelKHR
: Memory Semantics can have at most one of the following bits set: Acquire, Release, AcquireRelease or SequentiallyConsistent
: Missing symbol mentioned in reloc
: Vector Count must be 32-bit integer OpConstant
: Vector Count must be positive 
: Vulkan spec only allows storage classes for atomic to be: Uniform, Workgroup, Image, StorageBuffer, PhysicalStorageBuffer or TaskPayloadWorkgroupEXT.
: Vulkan specification requires Memory Semantics to be None if used with Invocation Memory Scope
: Vulkan specification requires Memory Semantics to have one of the following bits set: Acquire, Release, AcquireRelease or SequentiallyConsistent
: can't specify both Aliased and Restrict for PhysicalStorageBuffer pointer.
: can't specify both AliasedPointer and 
: can't specify both AliasedPointer and RestrictPointer for PhysicalStorageBuffer pointer.
: expected 
: expected Aliased or Restrict for PhysicalStorageBuffer pointer.
: expected AliasedPointer or RestrictPointer for 
: expected AliasedPointer or RestrictPointer for PhysicalStorageBuffer pointer.
: expected Comparator to be of type Result Type
: expected Memory Semantics to be a 32-bit int
: expected Memory Semantics to include a Vulkan-supported storage class
: expected Memory Semantics to include a Vulkan-supported storage class if Memory Semantics is not None
: expected Memory Semantics to include a storage class
: expected Named Barrier to be of type OpTypeNamedBarrier
: expected Pointer to be a pointer to integer or float 
: expected Pointer to be of type OpTypePointer
: expected Pointer to point to a value of 32-bit integer type
: expected Pointer to point to a value of type Result Type
: expected Result Type to be OpTypeNamedBarrier
: expected Result Type to be bool scalar type
: expected Result Type to be float scalar type
: expected Result Type to be integer or float scalar type
: expected Result Type to be integer scalar type
: expected Result Type to be void
: expected Stream to be constant instruction
: expected Stream to be int scalar
: expected Subgroup Count to be a 32-bit int
: expected Value to be of type Result Type
: expected Value type and the type pointed to by Pointer to be the same
: expected more operands after 
: expected no more operands after 
: expected operand 
: expected operand Indexes is 
: expected operand Size is a 
: expected scope to be a 32-bit int
: float add atomics require the AtomicFloat32AddEXT capability
: float add atomics require the AtomicFloat64AddEXT capability
: float min/max atomics require the AtomicFloat16MinMaxEXT capability
: float min/max atomics require the AtomicFloat32MinMaxEXT capability
: float min/max atomics require the AtomicFloat64MinMaxEXT capability
: float vector atomics require the AtomicFloat16VectorNV capability
: for the -
: in Vulkan 1.0 environment Memory Scope is can not be Subgroup without SubgroupBallotKHR or SubgroupVoteKHR declared
: in Vulkan environment Execution Scope is limited to 
: in Vulkan environment Execution scope is limited to 
: in Vulkan environment Memory Scope is limited to Device, QueueFamily, Workgroup, ShaderCallKHR, Subgroup, or Invocation
: missing 
: no conversion
: operand 
: out of range
: storage class forbidden by universal validation rules.
: storage class must be Function, Workgroup, CrossWorkGroup or Generic in the OpenCL environment.
: truncated 
:..\..\third_party\swiftshader\src\Pipeline\SpirvShaderImage.cpp
; Annotations
; Bound: 
; Debug Information
; Function 
; Generator: 
; IR after last pass
; IR before pass 
; SPIR-V\n
; Schema: 
; Types, variables and constants
; Version: 
;..\..\third_party\swiftshader\src\Pipeline\VertexRoutine.cpp
;1cb
;BIb?
<16 x i1>
<16 x i8>
<4 x float>
<4 x i32>
<8 x i16>
<?WUUUUU
<acos
<instruction>
= *cannot print option value*\n
= *unknown option value*\n
=..\..\third_party\swiftshader\src\Device\Renderer.cpp
=1cb
=87M
=cQ6
=e2m
=imb;D
> is later referenced by 
> is used by entry point '
> which is called with execution model 
>, but is not listed as an interface
>0Av
>cQ6
>jtm}S
?!5WOo
?1cb
?49HoKC
?7zQ6$
?7{KV\nU
?8UUUUU
?8bunz8
?@En[vP
?JV8f
?R0I?
?UUUUUU
?WUUUUU
?asin
?asinf
?f`Y4
?fmodf
?kxG2)
?lZE
?powf
?qBJ
?rAj
?ysB
@33333333
@^8U)zj
@pn>6
A BuiltIn variable (id 
A FunctionCall must happen within a function body.
A block must end with a branch instruction.
A function (
A function must begin with a label
A module-scope OpVariable with initialization value cannot be marked with the Import Linkage Type.
A>pP&
ABCDEF
ABCDEFGHIJKLMNOPQRSTUVWXYZ
ABGR
AK>(v
AL_OFFSET_TABLE__GLOBAL_OFFSET_T
ANGLE Shader Compiler
ARGB
AUUUUUU
A`1w>
AbsISubINTEL
AbsUSubINTEL
Accept textual form of PNaCl bitcode records (i.e. not .ll assembly)
AccessChain
AccessQualifier must be a 32-bit unsigned integer OpConstant
According to the 
According to the Vulkan spec BuiltIn 
According to the Vulkan spec BuiltIn HelperInvocation variable needs to be a bool scalar. 
According to the Vulkan spec BuiltIn InvocationId variable needs to be a 32-bit int scalar. 
According to the Vulkan spec BuiltIn PatchVertices variable needs to be a 32-bit int scalar. 
According to the Vulkan spec BuiltIn PointCoord variable needs to be a 2-component 32-bit float vector. 
According to the Vulkan spec BuiltIn PointSize variable needs to be a 32-bit float scalar. 
According to the Vulkan spec BuiltIn Position variable needs to be a 4-component 32-bit float vector. 
According to the Vulkan spec BuiltIn PrimitiveId variable needs to be a 32-bit int scalar. 
According to the Vulkan spec BuiltIn SampleId variable needs to be a 32-bit int scalar. 
According to the Vulkan spec BuiltIn SampleMask variable needs to be a 32-bit int array. 
According to the Vulkan spec BuiltIn SamplePosition variable needs to be a 2-component 32-bit float vector. 
According to the Vulkan spec BuiltIn TessCoord variable needs to be a 3-component 32-bit float vector. 
According to the Vulkan spec BuiltIn TessLevelOuter variable needs to be a 2-component 32-bit float array. 
According to the Vulkan spec BuiltIn TessLevelOuter variable needs to be a 4-component 32-bit float array. 
Acos
Acosh
Acquire
AcquireRelease
AcquireSRWLockExclusive
Actual Type
Add bounds checking code in WASM frontend
Address
Address mode optimization
AddressQualifier must be a 32-bit unsigned integer OpConstant
Addresses
Addressing model must be Logical or PhysicalStorageBuffer64 
Addressing model must be Physical32 or Physical64 
Affinity mask is empty, using all-cores affinity\n
AffinityMask
AffinityPolicy
After Alloca processing
After LICM
After Local CSE
After Phi lowering
After RMW transform
After Short Circuiting
After advanced Phi lowering
After branch optimization
After initial x86 codegen
After linear scan regalloc
After load optimization
After loop analysis
After regalloc of infinite-weight variables
After splitting local variables
After stack frame mapping
After target helper call insertion
After x86 address mode opt
After x86 codegen
Alias for --allow-externally-defined-symbols
AliasDomainDeclINTEL
AliasScopeDeclINTEL
AliasScopeINTEL
AliasScopeINTELMask
AliasScopeListDeclINTEL
Aliased
AliasedPointer
AliasedPointerEXT
Aligned
Alignment
AlignmentId
All OpSampledImage instructions must be in the same block in which their Result <id> are consumed. OpSampledImage Result Type <id> 
All OpVariable instructions in a function must be the first instructions in the first block.
Allocating a variable containing a 16-bit element in 
Allocating a variable containing a 8-bit element in 
Allow IACA (Intel Architecture Code Analyzer) marks to be inserted. These binaries are not executable.
Allow error recovery when reading PNaCl bitcode.
Allow global symbols to be externally defined (other than _start and __pnacl_pso_root).
Allow global variables to be uninitialized
AllowContract
AllowContractFastINTEL
AllowReassoc
AllowReassoc and AllowContract must be specified when AllowTransform is specified
AllowReassocINTEL
AllowRecip
AllowTransform
AnyHitKHR
AnyHitNV
AppPolicyGetProcessTerminationMethod
AppPolicyGetThreadInitializationType
April
ArbitraryFloatACosINTEL
ArbitraryFloatACosPiINTEL
ArbitraryFloatASinINTEL
ArbitraryFloatASinPiINTEL
ArbitraryFloatATan2INTEL
ArbitraryFloatATanINTEL
ArbitraryFloatATanPiINTEL
ArbitraryFloatAddINTEL
ArbitraryFloatCastFromIntINTEL
ArbitraryFloatCastINTEL
ArbitraryFloatCastToIntINTEL
ArbitraryFloatCbrtINTEL
ArbitraryFloatCosINTEL
ArbitraryFloatCosPiINTEL
ArbitraryFloatDivINTEL
ArbitraryFloatEQINTEL
ArbitraryFloatExp10INTEL
ArbitraryFloatExp2INTEL
ArbitraryFloatExpINTEL
ArbitraryFloatExpm1INTEL
ArbitraryFloatGEINTEL
ArbitraryFloatGTINTEL
ArbitraryFloatHypotINTEL
ArbitraryFloatLEINTEL
ArbitraryFloatLTINTEL
ArbitraryFloatLog10INTEL
ArbitraryFloatLog1pINTEL
ArbitraryFloatLog2INTEL
ArbitraryFloatLogINTEL
ArbitraryFloatMulINTEL
ArbitraryFloatPowINTEL
ArbitraryFloatPowNINTEL
ArbitraryFloatPowRINTEL
ArbitraryFloatRSqrtINTEL
ArbitraryFloatRecipINTEL
ArbitraryFloatSinCosINTEL
ArbitraryFloatSinCosPiINTEL
ArbitraryFloatSinINTEL
ArbitraryFloatSinPiINTEL
ArbitraryFloatSqrtINTEL
ArbitraryFloatSubINTEL
ArbitraryPrecisionFixedPointINTEL
ArbitraryPrecisionFloatingPointINTEL
ArbitraryPrecisionIntegersINTEL
AreFileApisANSI
Arg list too long
ArgInfo must be an ArgumentInfo extended instruction
ArgInfo must be from the same extended instruction import
ArgNumber
ArgumentInfo
ArgumentPodPushConstant
ArgumentPodStorageBuffer
ArgumentPodUniform
ArgumentPointerPushConstant
ArgumentPointerUniform
ArgumentSampledImage
ArgumentSampler
ArgumentSizes must be a 32-bit unsigned integer OpConstant
ArgumentStorageBuffer
ArgumentStorageImage
ArgumentStorageTexelBuffer
ArgumentUniform
ArgumentUniformTexelBuffer
ArgumentWorkgroup
Array access is out of bounds, array size is 
ArrayLength
ArrayStride
Asin
Asinh
AsmCallINTEL
AsmINTEL
AsmTargetINTEL
Assembler can't jmp to memory operand
Assembly ('.s') file
AssumeTrueKHR
Atan
Atan2
Atanh
AtomicAnd
AtomicCompareExchange
AtomicCompareExchangeWeak
AtomicCounter
AtomicCounterMemory
AtomicExchange
AtomicFAddEXT
AtomicFMaxEXT
AtomicFMinEXT
AtomicFlagClear
AtomicFlagTestAndSet
AtomicFloat16AddEXT
AtomicFloat16MinMaxEXT
AtomicFloat16VectorNV
AtomicFloat32AddEXT
AtomicFloat32MinMaxEXT
AtomicFloat64AddEXT
AtomicFloat64MinMaxEXT
AtomicIAdd
AtomicIDecrement
AtomicIIncrement
AtomicISub
AtomicIsLockFree byte size should be compile-time const
AtomicLoad
AtomicOr
AtomicSMax
AtomicSMin
AtomicStorage
AtomicStorageOps
AtomicStore
AtomicType
AtomicUMax
AtomicUMin
AtomicXor
Attempt to call base Inst::isMemoryWrite() method
Attempted to get underlying data type via member index for non-struct type.
Attributes must be an OpString
August
AutoINTEL
BC?>6t9^\tc:>
BF>^G
BFloat16ConversionINTEL
BGRA
Back-edges (
Bad address
Bad file descriptor
Bad type for atomicRMW
Bad type for cmpxchg
Bad type for sdiv
Bad type for srem
Bad type for udiv
Bad type for urem
Ballot must be a 4-component integer vector
Ballot must be present when Operation is PartitionedReduceNV, PartitionedInclusiveScanNV, or PartitionedExclusiveScanNV
BankBitsINTEL
BankwidthINTEL
BaryCoordKHR
BaryCoordNV
BaryCoordNoPerspAMD
BaryCoordNoPerspCentroidAMD
BaryCoordNoPerspKHR
BaryCoordNoPerspNV
BaryCoordNoPerspSampleAMD
BaryCoordPullModelAMD
BaryCoordSmoothAMD
BaryCoordSmoothCentroidAMD
BaryCoordSmoothSampleAMD
Base Type
BaseInstance
BaseVertex
Beehive SPIRV Toolkit
Before RMW
Before SPIR-V 1.5, 
BeginInvocationInterlockEXT
Behavior is undefined unless ClusterSize is at least 1 and a power of 2.
Bias
Binding
Binding must be a 32-bit unsigned integer OpConstant
BindlessImageNV
BindlessSamplerNV
BindlessTextureNV
BitCount
BitFieldInsert
BitFieldSExtract
BitFieldUExtract
BitInstructions
BitPiece
BitReverse
Bitcast
BitwiseAnd
BitwiseOr
BitwiseXor
BlitRoutine
Block
Block 
Block(s) 
Block-local variable splitting (O2 only)
BlockMatchSamplerQCOM
BlockMatchTextureQCOM
BlockingPipesINTEL
Boolean
BoundImageNV
BoundSamplerNV
Branch
BranchConditional
Break down timing for specific functions (use ':' for all)
Broken pipe
Buffer
BufferBlock
BufferLocationINTEL
BufferSize must be a 32-bit unsigned integer OpConstant
Build ICE instructions when reading bitcode
BuildNDRange
BuiltIn
BuiltIn 
BuiltIn (No allowed mixing of built-in variables and 
BuiltIns can only target variables, structure members or constants
BurstCoalesceINTEL
ByVal
C5R?\t
C:\buildworker\cef_win64\build\root\chromium\src\out\Release_GN_x64\vk_swiftshader.dll.pdb
CL:>8
CPP_for_OpenCL
CPacked
CWD>~3
CacheControlLoadINTEL
CacheControlStoreINTEL
CacheControlsINTEL
CacheSizeINTEL
CachedINTEL
Callable Data must be the result of a OpVariable
Callable Data must have storage class CallableDataKHR or IncomingCallableDataKHR
CallableDataKHR
CallableDataKHR Storage Class is limited to RayGenerationKHR, ClosestHitKHR, CallableKHR, and MissKHR execution model
CallableDataNV
CallableKHR
CallableNV
Can not compute
Can't lower unsupported instruction type
Cannot allocate a variable containing a 16-bit type in 
Cannot allocate a variable containing a 8-bit type in 
Cannot copy composites of 8- or 16-bit types
Cannot copy memory of objects containing 8- or 16-bit types
Cannot create a composite containing 8- or 16-bit types
Cannot create undefined values with 8- or 16-bit types
Cannot create undefined values with void type
Cannot declare a function in a function body
Cannot extract from a composite of 8- or 16-bit types
Cannot extract from a vector of 8- or 16-bit types
Cannot find option named '
Cannot form constants of 8- or 16-bit types
Cannot insert into a composite of 8- or 16-bit types
Cannot insert into a vector of 8- or 16-bit types
Cannot load a runtime-sized array
Cannot parse key-value pair at line %d of configuration (key or value is empty), skipping key-value pair\n
Cannot parse line %d of configuration, skipping line\n
Cannot put a negative number in an unsigned literal
Cannot shuffle a vector of 8- or 16-bit types
Cannot specify more than one option with cl::ConsumeAfter!
Cannot transpose matrices of 16-bit floats
Cannot use a pointer in the PhysicalStorageBuffer storage class
Capability
Capability 
Capability Image1D is required to access storage image
Capability ImageBuffer is required to access storage image
Capability ImageCubeArray is required to access 
Capability ImageMSArray is required to access storage 
Capability ImageRect is required to access storage image
Capability Int64ImageEXT is required when using Sampled Type of 64-bit int
Capability StorageImageMultisample is required when using multisampled storage image
Capability StorageImageReadWithoutFormat is required to 
Capability StorageImageWriteWithoutFormat is required to write 
CaptureEventProfilingInfo
Case construct that targets 
Cast type not supported
Ceil
Centroid
Child
Clamp
ClampToEdge
Class
Clay Shader Compiler
ClipDistance
ClipDistancePerViewNV
ClobberINTEL
CloseHandle
ClosestHitKHR
ClosestHitNV
Clspv
ClusterSize must be a constant instruction
ClusterSize must be a scalar of integer type, whose Signedness operand is 0.
ClusterSize must be an unsigned integer scalar
ClusterSize must be present when Operation is ClusteredReduce
ClusterSize must come from a constant instruction.
ClusteredReduce
CmdExecTime
CoalescedInputCountAMDX
CoalescingAMDX
CodeSectionINTEL
Codeplay
Coherent
ColMajor
ColorAttachmentReadEXT
Column
Column Major operand <id> 
Column type is not defined.
ColumnMajorKHR
Columns in a matrix must be of type vector.
CommitReadPipe
CommitWritePipe
CompareStringEx
CompareStringW
Component
Component Count
Component decoration only allowed on 64-bit scalar and 2-component vector
Component decoration specified for type 
Component decoration value must not be 1 or 3 for 64-bit data types
Component decoration value must not be greater than 3
Component index 
Component type is not defined.
CompositeConstruct
CompositeConstructContinuedINTEL
CompositeExtract
CompositeInsert
ComputeDerivativeGroupLinearNV
ComputeDerivativeGroupQuadsNV
ComputeProgram
Condition operand for OpBranchConditional must be of boolean type
ConduitKernelArgumentINTEL
Configuration
Const
ConstCachedINTEL
ConstOffset
ConstOffset image operand not allowed 
ConstOffsets
ConstType
Constant
Constant pool counters
ConstantComposite
ConstantCompositeContinuedINTEL
ConstantDataPointerPushConstant
ConstantDataStorageBuffer
ConstantDataUniform
ConstantFalse
ConstantFunctionPointerINTEL
ConstantNull
ConstantPipeStorage
ConstantSampler
ConstantTrue
Construct 
Constu
Continue Target 
ContractionOff
ControlBarrier
ControlBarrierArriveINTEL
ControlBarrierWaitINTEL
Convert additions to lea when it reduces code size
ConvertBF16ToFINTEL
ConvertFToBF16INTEL
ConvertFToS
ConvertFToU
ConvertFiberToThread
ConvertImageToUNV
ConvertPtrToU
ConvertSToF
ConvertSampledImageToUNV
ConvertSamplerToUNV
ConvertThreadToFiberEx
ConvertUToAccelerationStructureKHR
ConvertUToF
ConvertUToImageNV
ConvertUToPtr
ConvertUToSampledImageNV
ConvertUToSamplerNV
Cooperative matrix 'K' mismatch: 
Cooperative matrix 'M' mismatch: 
Cooperative matrix 'N' mismatch: 
Cooperative matrix can only be cast to another cooperative 
Cooperative matrix scopes must match: 
Cooperative matrix type must be A Type: 
Cooperative matrix type must be Accumulator Type: 
Cooperative matrix type must be B Type: 
Cooperative matrix types (or types containing them) can only be allocated 
CooperativeMatrixKHR
CooperativeMatrixLengthKHR
CooperativeMatrixLengthNV
CooperativeMatrixLoadKHR
CooperativeMatrixLoadNV
CooperativeMatrixMulAddKHR
CooperativeMatrixMulAddNV
CooperativeMatrixNV
CooperativeMatrixNV capability is present
CooperativeMatrixStoreKHR
CooperativeMatrixStoreNV
CopyLogical
CopyMemory
CopyMemorySized
CopyObject
CorExitProcess
CoreBuiltinsARM
CoreCountARM
CoreIDARM
CoreMaxIDARM
Corrupt image type definition
Cosh
Couldn't lower RMW instruction
CounterBuffer
CreateFiberEx
CreateFileW
CreatePipeFromPipeStorage
CreateRemoteThreadEx
CreateThread
CreateUserEvent
Cross
CrossDevice
CrossWorkgroup
CrossWorkgroup or Function: 
CrossWorkgroupCastToPtrINTEL
CrossWorkgroupMemory
Cube
CubeFaceCoordAMD
CubeFaceIndexAMD
Cull Mask must be a 32-bit int scalar
Cull mask must be a 32-bit int scalar
CullBackFacingTrianglesKHR
CullDistance
CullDistancePerViewNV
CullFrontFacingTrianglesKHR
CullMaskKHR
CullNoOpaqueKHR
CullOpaqueKHR
CullPrimitiveEXT
Current Times must be a 32-bit float scalar type
CurrentRayTimeNV
Cy2@K>
DPdx
DPdxCoarse
DPdxFine
DPdy
DPdyCoarse
DPdyFine
DWARF Version
Data must be an OpString
Debug info extension instruction found inside function but outside block
Debug info extension instruction other than DebugScope, DebugNoScope, DebugDeclare, and DebugValue found inside function
Debug info extension instruction other than DebugScope, DebugNoScope, DebugFunctionDefinition, DebugDeclare, and DebugValue found inside function
Debug info extension instructions other than 
DebugBuildIdentifier
DebugCompilationUnit
DebugDeclare
DebugEntryPoint
DebugExpression
DebugFunction
DebugFunctionDeclaration
DebugFunctionDefinition
DebugGlobalVariable
DebugGlobalVariable or DebugLocalVariable with a 32- or 
DebugImportedEntity
DebugInfo
DebugInfoModuleINTEL
DebugInfoNone
DebugInlinedAt
DebugInlinedVariable
DebugLexicalBlock
DebugLexicalBlockDiscriminator
DebugLine
DebugLocalVariable
DebugMacroDef
DebugMacroUndef
DebugModuleINTEL
DebugNoLine
DebugNoScope
DebugOperation
DebugScope
DebugScope, DebugNoScope, DebugDeclare, DebugValue 
DebugSource
DebugSourceContinued
DebugStoragePath
DebugTypeArray
DebugTypeBasic
DebugTypeComposite
DebugTypeEnum
DebugTypeFunction
DebugTypeInheritance
DebugTypeMatrix
DebugTypeMember
DebugTypePointer
DebugTypePtrToMember
DebugTypeQualifier
DebugTypeTemplate
DebugTypeTemplateParameter
DebugTypeTemplateParameter or 
DebugTypeTemplateParameterPack
DebugTypeTemplateTemplateParameter
DebugTypeVector
DebugTypedef
DebugValue
December
Declaration
Decorate
Decorate textual asm output with register liveness info
DecorateId
DecorateString
DecorateStringGOOGLE
DecorationGroup
Decorations taking ID parameters may not be used with OpDecorateId
Decorations that don't take ID parameters may not be used with OpDecorateId
Default must be an OpLabel instruction
Define default function prefix for naming unnamed functions
Define default global prefix for naming unnamed globals
Define format of input file:
Degrees
DeleteCriticalSection
DeleteFiber
DeleteFileW
DeleteProcThreadAttributeList
Delta must be a scalar of integer type, whose Signedness operand is 0.
DemoteToHelperInvocation
DemoteToHelperInvocationEXT
DenormFlushToZero
DenormPreserve
DependencyArrayINTEL
DependencyInfinite
DependencyLength
Depth
DepthAttachmentReadEXT
DepthGreater
DepthLess
DepthReplacing
DepthStencil
DepthUnchanged
Deref
Derivative instructions require DerivativeGroupQuadsNV or DerivativeGroupLinearNV execution mode for GLCompute execution model: 
Derivative instructions require Fragment or GLCompute execution model: 
DerivativeControl
DerivativeGroupLinearNV
DerivativeGroupQuadsNV
DescriptorSet
DescriptorSet must be a 32-bit unsigned integer OpConstant
DescriptorSetBuffer
DescriptorSetImage
DescriptorSetSampler
Determinant
Device
DeviceEnqueue
DeviceEvent
DeviceGroup
DeviceIndex
DeviceOnlyINTEL
Dim SubpassData requires Arrayed to be 0 in the Vulkan environment
Dim SubpassData requires Fragment execution model: 
Dim SubpassData requires Sampled to be 2
Dim SubpassData requires format Unknown
Dim TileImageDataEXT requires Arrayed to be 0
Dim TileImageDataEXT requires Depth to be 0
Dim TileImageDataEXT requires Sampled Type to be not OpTypeVoid
Dim TileImageDataEXT requires Sampled to be 2
Dim TileImageDataEXT requires format Unknown
Dim must be a 32-bit unsigned integer OpConstant
Dim must not be Rect in the Vulkan environment
Directory not empty
Disable Subzero translation
Disable hybrid assembly when -filetype=iasm
Disassembly failed before pass 
DisplacementMicromapNV
Display all available options
Display available options (-help-hidden for more)
Display list of all available options
Display list of available options (-help-list-hidden for more)
Distance
Domain error
Don't use specified registers
DontFlatten
DontInline
DontStaticallyCoalesceINTEL
DontUnroll
DotProduct
DotProductInput4x8Bit
DotProductInput4x8BitKHR
DotProductInput4x8BitPacked
DotProductInput4x8BitPackedKHR
DotProductInputAll
DotProductInputAllKHR
DotProductKHR
DoublepumpINTEL
DragonJoker
DragonJoker ShaderWriter
DrawIndex
DrawParameters
Dref sampling operation is invalid for multisample image
Dump string pools during compilation
Duplicate non-aggregate type declarations are not allowed. Opcode: 
E>nEA
ERROR_not_op_extension
ESSL
ET5>
E[\rn?gc
EarlyAndLateFragmentTestsAMD
EarlyFragmentTests
EiU>
EiUL
ElemSize must be a 32-bit unsigned integer OpConstant
Element type is not defined.
Embark Studios
Embark Studios Rust GPU Compiler Backend
Embedded
Emit (global) data into separate sections
Emit Subzero revision string into the output
Emit functions into separate sections
EmitMeshTasksEXT
EmitStreamVertex
EmitVertex
Enable -time-passes memory tracking (this may be slow)
Enable ARM Neon instructions
Enable ARM integer divide instructions in ARM mode
Enable X86 SSE 4.1 instructions
Enable X86 SSE2 instructions
Enable breakdown timing of Subzero translation
Enable edge splitting for Phi lowering
EnableSpirvProfiling
EncodePointer
Encoding
Encountered extended instruction GLSLstd450Bad
End of input reached while decoding Op
EndInvocationInterlockEXT
EndPrimitive
EndStreamPrimitive
EnqueueKernel
EnqueueMarker
EnqueuedWorkgroupSize
EnterCriticalSection
Entry point id '
Entry points may not have a call graph with cycles.
Entry-point has conflicting 
Entry-point has more than one variable with the HitAttributeKHR storage class in the interface
Entry-point has more than one variable with the IncomingCallableDataKHR storage class in the interface
Entry-point has more than one variable with the IncomingRayPayloadKHR storage class in the interface
Entry-point has more than one variable with the PushConstant storage class in the interface
EntryPoint
EnumSystemLocalesEx
EnumSystemLocalesW
Error: Result Id is 0
Error: Type Id is 0
Event
ExclusiveScan
Exec format error
ExecuteCallableKHR
ExecuteCallableNV
Execution mode can only be used with a Geometry or tessellation execution model.
Execution mode can only be used with a Geometry, tessellation, MeshNV or MeshEXT execution model.
Execution mode can only be used with a Kernel or GLCompute execution model.
Execution mode can only be used with a Kernel, GLCompute, MeshNV, MeshEXT, TaskNV or TaskEXT execution model.
Execution mode can only be used with a tessellation execution model.
Execution mode can only be used with the Fragment execution model.
Execution mode can only be used with the Fragment or GLCompute execution model.
Execution mode can only be used with the Geometry MeshNV or MeshEXT execution model.
Execution mode can only be used with the Geometry execution model.
Execution mode can only be used with the Kernel execution model.
Execution mode can only be used with the MeshEXT or MeshNV execution model.
ExecutionMode
ExecutionModeId
Exit with success status, even if errors found
ExitProcess
ExitThread
Exp2
Expect to see OpLoad
ExpectAssumeKHR
ExpectKHR
Expected 
Expected 32-bit float scalar or vector type as Result Type: 
Expected 32-bit floating-point type 3-component vector as Result Type: 
Expected 32-bit floating-point type scalar as Result Type: 
Expected 32-bit int type for Base operand: 
Expected 32-bit integer type 2-component vector as Result Type: 
Expected 32-bit integer type scalar as Result Type: 
Expected 64-bit uint scalar or 2-component 32-bit uint vector as input: 
Expected Acceleration Structure to be of type OpTypeAccelerationStructureKHR
Expected Base Type to be equal to Result Type: 
Expected Base dimension to be equal to Result Type dimension: 
Expected Base to be int scalar or vector: 
Expected Base to have the same bit width 
Expected Base to have the same dimension 
Expected Component Operand to be a const object for Vulkan environment
Expected Component to be 32-bit int scalar
Expected Component type to be equal to Result Type 
Expected Composite to be an object of composite type
Expected Constituent type to be equal to the 
Expected Constituent type to be equal to the column 
Expected Constituent type to be equal to the component type
Expected Constituents to be scalars or vectors of
Expected Coordinate to be float scalar or vector
Expected Coordinate to be int or float scalar or vector
Expected Coordinate to be int scalar or vector
Expected Coordinate to be integer scalar or vector
Expected Coordinate to have 
Expected Coordinate to have at least 
Expected Count Type to be int scalar: 
Expected Dref to be of 32-bit float type
Expected Image 'Dim' must be one of 1D, 2D, or Cube when Arrayed is 1
Expected Image 'Dim' parameter to be 1D, 2D, 3D or Rect
Expected Image 'Dim' parameter to be not SubpassData.
Expected Image 'Dim' to be 2D, Cube, or Rect
Expected Image 'MS' parameter to be 0
Expected Image 'Sampled Type' to be the same as 
Expected Image 'Sampled Type' to be the same as Texel 
Expected Image 'Sampled Type' to be the same as the Type pointed to by Result Type
Expected Image 'Sampled' parameter to be 0 or 1
Expected Image 'Sampled' parameter to be 0 or 2
Expected Image 'Sampled' parameter to be 1
Expected Image 'Sampled' parameter to be 1 for Vulkan environment.
Expected Image 'arrayed' parameter to be 0
Expected Image Operand Bias to be float scalar
Expected Image Operand ConstOffset to be a const object
Expected Image Operand ConstOffset to be int scalar or 
Expected Image Operand ConstOffset to have 
Expected Image Operand ConstOffsets array components to be int vectors of size 2
Expected Image Operand ConstOffsets to be a const object
Expected Image Operand ConstOffsets to be an array of size 4
Expected Image Operand Grad dx to have 
Expected Image Operand Grad dy to have 
Expected Image Operand Lod to be float scalar when used 
Expected Image Operand Lod to be int scalar when used with 
Expected Image Operand MinLod to be float scalar
Expected Image Operand Offset to be int scalar or 
Expected Image Operand Offset to have 
Expected Image Operand Sample to be int scalar
Expected Image operand to be of type OpTypeSampledImage
Expected Image to be OpTypePointer
Expected Image to be OpTypePointer with Type OpTypeImage
Expected Image to be of type OpTypeImage
Expected Image to be of type OpTypeImage.
Expected Index to be int scalar
Expected Insert Type to be equal to Result Type: 
Expected Level of Detail to be int scalar
Expected Matrix to be of type OpTypeMatrix
Expected Offset Type to be int scalar: 
Expected P type and Result Type to be the same: 
Expected Resident Code to be int scalar
Expected Result Type and Operand type to be the same
Expected Result Type struct member types to be identical: 
Expected Result Type struct member types to be integer scalar 
Expected Result Type struct member types to be unsigned 
Expected Result Type struct to have two members: 
Expected Result Type to be OpTypeImage
Expected Result Type to be OpTypePointer
Expected Result Type to be OpTypePointer whose Storage Class operand is Image
Expected Result Type to be OpTypePointer whose Type operand must be a scalar numerical type or OpTypeVoid
Expected Result Type to be OpTypeSampledImage.
Expected Result Type to be OpTypeStruct
Expected Result Type to be OpTypeVector
Expected Result Type to be a Acceleration Structure: 
Expected Result Type to be a composite type
Expected Result Type to be a matrix type
Expected Result Type to be a pointer or int or float vector 
Expected Result Type to be a pointer: 
Expected Result Type to be a scalar or vector of floating-point, integer or boolean type.
Expected Result Type to be a scalar type
Expected Result Type to be a struct containing an int scalar and a texel
Expected Result Type to be an unsigned integer type scalar.
Expected Result Type to be bool scalar type
Expected Result Type to be float scalar or vector type: 
Expected Result Type to be float vector type
Expected Result Type to be int scalar or vector type
Expected Result Type to be int scalar type
Expected Result Type to be of target storage class: 
Expected Result Type to have 2 components
Expected Result Type to have storage class Generic: 
Expected Result Type to have storage class Workgroup, 
Expected Sample Image image type to be equal to Result Type
Expected Sample Image to be of type OpTypeSampleImage
Expected Sample for Image with MS 0 to be a valid <id> for the value 0
Expected Sample to be integer scalar
Expected Sampled Image to be of type OpTypeSampledImage
Expected Sampled Type to be a 32-bit int, 64-bit int or 32-bit float scalar type for Vulkan environment
Expected Sampled Type to be either void or
Expected Sampler to be of type OpTypeSampler
Expected Shift to be int scalar or vector: 
Expected Shift to have the same dimension 
Expected Texel to be int or float vector or scalar
Expected Use of Matrix type and Result Type to be 
Expected Value to be a vector of four components of integer type scalar
Expected Value to be a vector of two components of unsigned integer or 64bit unsigned integer
Expected Vector component type to be equal to Result Type
Expected Vector type to be OpTypeVector
Expected Vector type to be equal to Result Type
Expected a consumer instruction
Expected a struct as Result Type: 
Expected a vector compare
Expected a vector select
Expected arithmetic operands to be of Result Type: 
Expected arithmetic operands to have the same bit width 
Expected arithmetic operands to have the same dimension 
Expected at least one index to Op
Expected bool scalar or vector type as Result Type: 
Expected bool scalar or vector type as condition: 
Expected bool scalar type as Result Type: 
Expected both Image Operand Grad ids to be float scalars or 
Expected both objects to be of Result Type: 
Expected both operands to be of Result Type member type: 
Expected both operands to be of Result Type: 
Expected both operands to have the same component bit width: 
Expected column type of Result Type to be equal to the type 
Expected column type of the matrix to be equal to Result Type: 
Expected column types of Result Type and left matrix to be 
Expected columns of Matrix type and Result Type to be 
Expected component type to be equal to Result Type: 
Expected component types of Matrix and Result Type to be 
Expected component types of Result Type and matrix to be 
Expected component types of Result Type and right matrix to be 
Expected component types of Result Type and vector to be 
Expected component types of the operands to be equal: 
Expected cooperative matrix type as A Type: 
Expected cooperative matrix type as B Type: 
Expected cooperative matrix type as C Type: 
Expected cooperative matrix type as Result Type: 
Expected cooperative matrix types
Expected float matrix type as Result Type: 
Expected float matrix type as left operand: 
Expected float matrix type as right operand: 
Expected float scalar or vector type as Result Type: 
Expected float scalar type as Result Type: 
Expected float vector as operand: 
Expected float vector type as Result Type: 
Expected float vector type as left operand: 
Expected float vector type as right operand: 
Expected floating scalar or vector type as Result Type: 
Expected input and Result Type to point to the same type: 
Expected input to be a pointer or int or float vector 
Expected input to be a pointer or int scalar if Result Type is pointer: 
Expected input to be a pointer, int scalar or 32-bit int vector if Result Type is pointer: 
Expected input to be a pointer: 
Expected input to be float scalar or vector: 
Expected input to be int scalar or vector: 
Expected input to have a type: 
Expected input to have different bit width from Result Type: 
Expected input to have storage class Generic: 
Expected input to have storage class Workgroup, 
Expected input to have the same dimension as Result Type: 
Expected input to have the same total bit width as 
Expected input type to be equal to Result Type: 
Expected int scalar as input: 
Expected int scalar or vector as input: 
Expected int scalar or vector as operand: 
Expected int scalar or vector type as Result Type: 
Expected int scalar or vector type as operand: 
Expected int scalar or vector type for Base operand: 
Expected left and right operands to have the same type: 
Expected matrix operand type to be equal to Result Type: 
Expected number of columns and the column size of Matrix 
Expected number of columns of Result Type and right matrix to 
Expected number of columns of left matrix and number of rows 
Expected number of columns of the matrix to be equal to 
Expected number of columns of the matrix to be equal to the 
Expected number of constituents to be at least 2
Expected number of rows of the matrix to be equal to the 
Expected operand to be of Result Type: 
Expected operand to be of type OpTypeImage
Expected operand to be scalar or vector float: 
Expected operand to be vector bool: 
Expected operands to be scalar or vector float: 
Expected operands to be scalar or vector int: 
Expected operands to have the same bit width 
Expected operands to have the same dimension 
Expected operands to have the same number of components: 
Expected rows of Matrix type and Result Type to be 
Expected scalar operand type to be equal to the component 
Expected scalar or 
Expected scopes of Matrix and Result Type to be 
Expected single constituent
Expected target storage class to be Workgroup, 
Expected the Image Format in Image to be R64i, R64ui, R32f, R32i, or R32ui for Vulkan environment
Expected total number of Constituents to be equal 
Expected total number of given components to be equal 
Expected unsigned int scalar or vector type as Result Type: 
Expected unsigned int scalar type as Result Type: 
Expected vector compare
Expected vector operand type to be equal to Result Type: 
Expected vector sizes of Result Type and the condition to be equal: 
Expected vector sizes of Result Type and the operand to be equal: 
Expected vector sizes of Result Type and the operands to be
Expected vector sizes of Result Type and the operands to be equal: 
ExplicitInterpAMD
Export
Expression
ExtInst
ExtInstImport
Extended instruction GLSLstd450IMix is not supported
Extension
Externalize all symbols
Extra amount of stack to add to the frame in bytes (for testing).
F>qUxv
FAbs
FAdd
FClamp
FConvert
FDiv
FEMh\f
FMax
FMax3AMD
FMid3AMD
FMin
FMin3AMD
FMix
FMod
FMul
FNegate
FOrdEqual
FOrdGreaterThan
FOrdGreaterThanEqual
FOrdLessThan
FOrdLessThanEqual
FOrdNotEqual
FP denorm mode
FP operation mode
FPFastMathDefault
FPFastMathDefault and ContractionOff execution modes cannot be applied to the same entry point
FPFastMathDefault and SignedZeroInfNanPreserve execution modes cannot be applied to the same entry point
FPFastMathMode
FPFastMathMode Fast
FPFastMathMode and NoContraction cannot decorate the same target
FPFastMathModeINTEL
FPGAArgumentInterfacesINTEL
FPGABufferLocationINTEL
FPGAClusterAttributesINTEL
FPGAClusterAttributesV2INTEL
FPGADSPControlINTEL
FPGAInvocationPipeliningAttributesINTEL
FPGAKernelAttributesINTEL
FPGAKernelAttributesv2INTEL
FPGALatencyControlINTEL
FPGALoopControlsINTEL
FPGAMemoryAccessesINTEL
FPGAMemoryAttributesINTEL
FPGARegINTEL
FPMaxErrorDecorationINTEL
FPMaxErrorINTEL
FPRoundingMode
FPRoundingMode decoration can be applied only to a width-only conversion instruction for floating-point object.
FPRoundingMode decoration can be applied only to the Object operand of an OpStore in the StorageBuffer, PhysicalStorageBuffer, Uniform, PushConstant, Input, or Output Storage Classes.
FPRoundingMode decoration can be applied only to the Object operand of an OpStore storing through a pointer to a 16-bit floating-point scalar or vector object.
FPRoundingMode decoration can be applied only to the Object operand of an OpStore.
FRem
FSign
FSub
FUnordEqual
FUnordGreaterThan
FUnordGreaterThanEqual
FUnordLessThan
FUnordLessThanEqual
FUnordNotEqual
FaceForward
Failed to find splice operand
Fast
Fatal inconsistency in liveness analysis
February
FetchMicroTriangleVertexBarycentricNV
FetchMicroTriangleVertexPositionNV
FfW?
File
File exists
File to append -stats and -timer output to
File too large
Filename too long
FinalizeNodePayloadsAMDX
Finalizer
FindClose
FindFirstFileExW
FindILsb
FindNextFileW
FindSMsb
FindUMsb
FinishWritingNodePayloadAMDX
First block 
FixedCosINTEL
FixedCosPiINTEL
FixedExpINTEL
FixedLogINTEL
FixedRecipINTEL
FixedRsqrtINTEL
FixedSinCosINTEL
FixedSinCosPiINTEL
FixedSinINTEL
FixedSinPiINTEL
FixedSqrtINTEL
FlagArtificial
FlagExplicit
FlagFwdDecl
FlagIndirectVariable
FlagIsDefinition
FlagIsEnumClass
FlagIsLocal
FlagIsOptimized
FlagIsPrivate
FlagIsProtected
FlagIsPublic
FlagLValueReference
FlagObjectPointer
FlagPrototyped
FlagRValueReference
FlagStaticMember
FlagTypePassByReference
FlagTypePassByValue
Flags
Flags must be a 32-bit unsigned integer OpConstant
Flat
Flatten
Float
Float16
Float16Buffer
Float16ImageAMD
Float64
FloatControls2
FloatingPointModeALTINTEL
FloatingPointModeIEEEINTEL
FloatingPointModeINTEL
Floor
FlsAlloc
FlsFree
FlsGetValue
FlsSetValue
FlushFileBuffers
FlushInstructionCache
FlushToZero
For OpExecutionModeId all Extra Operand ids must be constant instructions.
For Vulkan with RuntimeDescriptorArrayEXT, a variable 
For Vulkan, OpTypeStruct variables containing 
For Vulkan, an OpTypeStruct variable containing an 
Force -O2 for certain functions (assumes -Om1)
Force optimization of memory intrinsics.
ForceOpacityMicromap2StateEXT
ForcePow2DepthINTEL
FormatString must be an OpString
Forward pointers must point to a structure
Found RMW in 
Found empty section name at line %d of configuration\n
Found unrecognized extension 
Fract
FragCoord
FragDepth
FragInvocationCountEXT
FragSizeEXT
FragStencilRefEXT
Fragment
Fragment OpEntryPoint operand 
Fragment execution model entry points can only specify one of OriginUpperLeft or OriginLowerLeft execution modes.
Fragment execution model entry points can specify at most one fragment shader interlock execution mode.
Fragment execution model entry points can specify at most one of DepthGreater, DepthLess or DepthUnchanged execution modes.
Fragment execution model entry points can specify at most one of StencilRefUnchangedBackAMD, StencilRefLessBackAMD or StencilRefGreaterBackAMD execution modes.
Fragment execution model entry points can specify at most one of StencilRefUnchangedFrontAMD, StencilRefLessFrontAMD or StencilRefGreaterFrontAMD execution modes.
Fragment execution model entry points require either an OriginUpperLeft or OriginLowerLeft execution mode.
FragmentBarycentricKHR
FragmentBarycentricNV
FragmentDensityEXT
FragmentFetchAMD
FragmentFullyCoveredEXT
FragmentMaskAMD
FragmentMaskFetchAMD
FragmentShaderPixelInterlockEXT
FragmentShaderSampleInterlockEXT
FragmentShaderShadingRateInterlockEXT
FragmentShadingRateKHR
FragmentSizeNV
FreeEnvironmentStringsW
FreeLibrary
FreeLibraryAndExitThread
Frexp
FrexpStruct
Friday
From 
From ARB_gl_spirv extension:\n
From SPIR-V spec, section 3.32.8 on OpVariable:\n
From Vulkan spec, Push Constant Interface section:\n
From Vulkan spec:\n
FrontFacing
Full
FullyCoveredEXT
FuncParamAttr
FuncParamIOKindINTEL
Function
Function declaration (id 
Function declarations must appear before function definitions.
Function definition (id 
Function end cannot be called in blocks
Function end instructions must be in a function body
Function not implemented
Function or Workgroup
Function parameter cannot be the first instruction.
Function parameter instructions must be in a function body
Function parameter must be preceded by a function.
Function parameters must only appear immediately after the function definition
FunctionCall
FunctionDenormModeINTEL
FunctionEnd
FunctionFloatControlINTEL
FunctionFloatingPointModeINTEL
FunctionParameter
FunctionPointerCallINTEL
FunctionPointersINTEL
FunctionRoundingModeINTEL
FuseLoopsInFunctionINTEL
Fwidth
FwidthCoarse
FwidthFine
G..\..\third_party\swiftshader\src\Pipeline\SpirvShaderArithmetic.cpp
G>US
GDI32.dll
GLCompute
GLSL
GLSL.std.450
GLSL450
GLSLPacked
GLSLShared
Gather operation is invalid for multisample image
General options
Generate list of build attributes associated with this executable.
Generating variable pointers requires capability 
Generic
Generic Options
GenericCastToPtr
GenericCastToPtrExplicit
GenericPointer
GenericPtrMemSemantics
Geometry
Geometry Index must be a 32-bit int scalar
Geometry execution model entry points must specify exactly one of InputPoints, InputLines, InputLinesAdjacency, Triangles or InputTrianglesAdjacency execution modes.
Geometry execution model entry points must specify exactly one of OutputPoints, OutputLineStrip or OutputTriangleStrip execution modes.
GeometryPointSize
GeometryShaderPassthroughNV
GeometryStreams
GetACP
GetCPInfo
GetClientRect
GetCommandLineA
GetCommandLineW
GetConsoleMode
GetConsoleOutputCP
GetConsoleScreenBufferInfo
GetCurrentDirectoryW
GetCurrentProcess
GetCurrentProcessId
GetCurrentThread
GetCurrentThreadId
GetDC
GetDateFormatEx
GetDateFormatW
GetDefaultQueue
GetEnvironmentStringsW
GetFileAttributesW
GetFileInformationByHandle
GetFileSizeEx
GetFileType
GetKernelLocalSizeForSubgroupCount
GetKernelMaxNumSubgroups
GetKernelNDrangeMaxSubGroupSize
GetKernelNDrangeSubGroupCount
GetKernelPreferredWorkGroupSizeMultiple
GetKernelWorkGroupSize
GetLastError
GetLocaleInfoEx
GetLocaleInfoW
GetLogicalProcessorInformationEx
GetMaxPipePackets
GetModuleFileNameW
GetModuleHandleA
GetModuleHandleExW
GetModuleHandleW
GetNumPipePackets
GetOEMCP
GetProcAddress
GetProcessHeap
GetStartupInfoW
GetStdHandle
GetStringTypeW
GetSystemInfo
GetSystemTimeAsFileTime
GetTimeFormatEx
GetTimeFormatW
GetTimeZoneInformation
GetUserDefaultLCID
GetUserDefaultLocaleName
Global
Global initializers
Global live range splitting
GlobalInvocationId
GlobalLinearId
GlobalOffset
GlobalSize
GlobalVariableFPGADecorationsINTEL
GlobalVariableHostAccessINTEL
GlobalVariableOffsetINTEL
Glslang Reference Front End
Google
Google ANGLE Shader Compiler
Google Clspv
Google MLIR SPIR-V Serializer
Google Shaderc over Glslang
Google Skia SkSL
Google Tint Compiler
Google rspirv
Google spiregg
GrJoq>@
Grad
Group Count X must be a 32-bit unsigned int scalar
Group Count Y must be a 32-bit unsigned int scalar
Group Count Z must be a 32-bit unsigned int scalar
GroupAll
GroupAny
GroupAsyncCopy
GroupBitwiseAndKHR
GroupBitwiseOrKHR
GroupBitwiseXorKHR
GroupBroadcast
GroupCommitReadPipe
GroupCommitWritePipe
GroupDecorate
GroupFAdd
GroupFAddNonUniformAMD
GroupFMax
GroupFMaxNonUniformAMD
GroupFMin
GroupFMinNonUniformAMD
GroupFMulKHR
GroupIAdd
GroupIAddNonUniformAMD
GroupIMulKHR
GroupLogicalAndKHR
GroupLogicalOrKHR
GroupLogicalXorKHR
GroupMemberDecorate
GroupNonUniform
GroupNonUniformAll
GroupNonUniformAllEqual
GroupNonUniformAny
GroupNonUniformArithmetic
GroupNonUniformBallot
GroupNonUniformBallotBitCount
GroupNonUniformBallotBitExtract
GroupNonUniformBallotFindLSB
GroupNonUniformBallotFindMSB
GroupNonUniformBitwiseAnd
GroupNonUniformBitwiseOr
GroupNonUniformBitwiseXor
GroupNonUniformBroadcast
GroupNonUniformBroadcastFirst
GroupNonUniformClustered
GroupNonUniformElect
GroupNonUniformFAdd
GroupNonUniformFMax
GroupNonUniformFMin
GroupNonUniformFMul
GroupNonUniformIAdd
GroupNonUniformIMul
GroupNonUniformInverseBallot
GroupNonUniformLogicalAnd
GroupNonUniformLogicalOr
GroupNonUniformLogicalXor
GroupNonUniformPartitionNV
GroupNonUniformPartitionedNV
GroupNonUniformQuad
GroupNonUniformQuadAllKHR
GroupNonUniformQuadAnyKHR
GroupNonUniformQuadBroadcast
GroupNonUniformQuadSwap
GroupNonUniformRotateKHR
GroupNonUniformSMax
GroupNonUniformSMin
GroupNonUniformShuffle
GroupNonUniformShuffleDown
GroupNonUniformShuffleRelative
GroupNonUniformShuffleUp
GroupNonUniformShuffleXor
GroupNonUniformUMax
GroupNonUniformUMin
GroupNonUniformVote
GroupReserveReadPipePackets
GroupReserveWritePipePackets
GroupSMax
GroupSMaxNonUniformAMD
GroupSMin
GroupSMinNonUniformAMD
GroupUMax
GroupUMaxNonUniformAMD
GroupUMin
GroupUMinNonUniformAMD
GroupUniformArithmeticKHR
GroupWaitEvents
Groups
HERO_C
HH:mm:ss
HLSL
HalfFloat
Having 
Header block 
HeapAlloc
HeapFree
HeapReAlloc
HeapSize
Helper call was expected
HelperInvocation
Hero C Compiler
Hint and Bits are optional together i.e 
Hint must be a 32-bit int scalar
Hit Kind must be a 32-bit unsigned int scalar
Hit Object Attributes id must be a OpVariable of storage class HitObjectAttributeNV
Hit Object Attributes id must be a OpVariable of storage class RayPayloadKHR
Hit Object must be a memory object declaration
Hit Object must be a pointer
Hit T must be a 32-bit float scalar
Hit must be a 32-bit int scalar
HitAttributeKHR
HitAttributeKHR Storage Class is limited to IntersectionKHR, AnyHitKHR, sand ClosestHitKHR execution model
HitAttributeKHR Storage Class variables are read only with AnyHitKHR and ClosestHitKHR
HitAttributeNV
HitKindBackFacingMicroTriangleNV
HitKindFrontFacingMicroTriangleNV
HitKindKHR
HitKindNV
HitMicroTriangleVertexBarycentricsNV
HitMicroTriangleVertexPositionsNV
HitObjectAttributeNV
HitObjectAttributeNV Storage Class is limited to RayGenerationKHR, ClosestHitKHR or MissKHR execution model
HitObjectExecuteShaderNV
HitObjectGetAttributesNV
HitObjectGetCurrentTimeNV
HitObjectGetGeometryIndexNV
HitObjectGetHitKindNV
HitObjectGetInstanceCustomIndexNV
HitObjectGetInstanceIdNV
HitObjectGetObjectRayDirectionNV
HitObjectGetObjectRayOriginNV
HitObjectGetObjectToWorldNV
HitObjectGetPrimitiveIndexNV
HitObjectGetRayTMaxNV
HitObjectGetRayTMinNV
HitObjectGetShaderBindingTableRecordIndexNV
HitObjectGetShaderRecordBufferHandleNV
HitObjectGetWorldRayDirectionNV
HitObjectGetWorldRayOriginNV
HitObjectGetWorldToObjectNV
HitObjectIsEmptyNV
HitObjectIsHitNV
HitObjectIsMissNV
HitObjectRecordEmptyNV
HitObjectRecordHitMotionNV
HitObjectRecordHitNV
HitObjectRecordHitWithIndexMotionNV
HitObjectRecordHitWithIndexNV
HitObjectRecordMissMotionNV
HitObjectRecordMissNV
HitObjectShaderRecordBufferNV
HitObjectTraceRayMotionNV
HitObjectTraceRayNV
HitTNV
HitTriangleVertexPositionsKHR
HlslCounterBufferGOOGLE
HlslSemanticGOOGLE
Hoist loop invariant arithmetic operations
Horizontal2Pixels
Horizontal4Pixels
HostAccessINTEL
HostOnlyINTEL
I;u>A
IAdd
IAddCarry
IAddSatINTEL
IAverageINTEL
IAverageRoundedINTEL
ID overflow. Try running compact-ids.
IEEE
IEqual
IMix
IMul
IMul32x16INTEL
IND)ind)"
IND)ind)d
INITY
INotEqual
IO failure on output stream.
IOPipeStorageINTEL
IOPipesINTEL
IR File
ISub
ISubBorrow
ISubSatINTEL
Id is 0
Id must be an unsigned integer scalar
If OpTypeBool is stored in conjunction with OpVariable using Input or Output Storage Classes it requires a BuiltIn decoration
If OpTypeBool is stored in conjunction with OpVariable, it can only be used with non-externally visible shader Storage Classes: Workgroup, CrossWorkgroup, Private, Function, Input, Output, RayPayloadKHR, IncomingRayPayloadKHR, HitAttributeKHR, CallableDataKHR, IncomingCallableDataKHR, or UniformConstant
IgnoreIntersectionKHR
IgnoreIntersectionNV
Il?333333c?
Illegal byte sequence
Illegal number of components (
Illegal use of QCOM image processing decorated texture
Image
Image 'Dim' cannot be Cube
Image 'Dim' cannot be SubpassData
Image 'Dim' cannot be TileImageDataEXT
Image 'Dim' must be 1D, 2D, 3D or Cube
Image 'Dim' must be 1D, Buffer, 2D, Cube, 3D or Rect
Image 'Dim' must be 2D
Image 'MS' must be 0
Image 'MS' must be 1
Image Dim SubpassData cannot be used with ImageSparseRead
Image Dim SubpassData cannot be used with OpImageTexelPointer
Image Dim TileImageDataEXT cannot be used with 
Image Dim TileImageDataEXT cannot be used with OpImageTexelPointer
Image Operand Bias can only be used with ImplicitLod opcodes
Image Operand Bias requires 'Dim' parameter to be 1D, 2D, 3D or Cube
Image Operand ConstOffset cannot be used with Cube Image 'Dim'
Image Operand ConstOffsets can only be used with OpImageGather and OpImageDrefGather
Image Operand ConstOffsets cannot be used with Cube Image 'Dim'
Image Operand Grad can only be used with ExplicitLod opcodes
Image Operand Lod can only be used with ExplicitLod opcodes 
Image Operand Lod requires 'Dim' parameter to be 1D, 2D, 3D or Cube
Image Operand MakeTexelAvailableKHR can only be used with Op
Image Operand MakeTexelAvailableKHR requires NonPrivateTexelKHR is also specified: Op
Image Operand MakeTexelVisibleKHR can only be used with Op
Image Operand MakeTexelVisibleKHR requires NonPrivateTexelKHR is also specified: Op
Image Operand MinLod can only be used with ImplicitLod 
Image Operand MinLod requires 'Dim' parameter to be 1D, 2D, 3D or Cube
Image Operand MinLod requires 'MS' parameter to be 0
Image Operand Offset can only be used with OpImage*Gather operations
Image Operand Offset cannot be used with Cube Image 'Dim'
Image Operand Sample can only be used with OpImageFetch, 
Image Operand Sample is required for operation on multi-sampled image
Image Operand Sample requires non-zero 'MS' parameter
Image Operand bits Lod and Grad cannot be set at the same time
Image Operands Offset, ConstOffset, ConstOffsets, Offsets cannot be used together
Image must have either 'MS'=1 or 'Sampled'=0 or 'Sampled'=2
Image1D
ImageArgumentInfoChannelDataTypePushConstant
ImageArgumentInfoChannelDataTypeUniform
ImageArgumentInfoChannelOrderPushConstant
ImageArgumentInfoChannelOrderUniform
ImageBasic
ImageBlockMatchGatherSADQCOM
ImageBlockMatchGatherSSDQCOM
ImageBlockMatchSADQCOM
ImageBlockMatchSSDQCOM
ImageBlockMatchWindowSADQCOM
ImageBlockMatchWindowSSDQCOM
ImageBoxFilterQCOM
ImageBuffer
ImageCubeArray
ImageDrefGather
ImageFetch
ImageFootprintNV
ImageGather
ImageGatherBiasLodAMD
ImageGatherExtended
ImageMSArray
ImageMemory
ImageMipmap
ImageQuery
ImageQueryFormat
ImageQueryLevels
ImageQueryLod
ImageQueryOrder
ImageQuerySamples
ImageQuerySize
ImageQuerySizeLod
ImageRead
ImageReadWrite
ImageReadWriteLodAMD
ImageRect
ImageSampleDrefExplicitLod
ImageSampleDrefImplicitLod
ImageSampleExplicitLod
ImageSampleFootprintNV
ImageSampleImplicitLod
ImageSampleProjDrefExplicitLod
ImageSampleProjDrefImplicitLod
ImageSampleProjExplicitLod
ImageSampleProjImplicitLod
ImageSampleWeightedQCOM
ImageSparseDrefGather
ImageSparseFetch
ImageSparseGather
ImageSparseRead
ImageSparseSampleDrefExplicitLod
ImageSparseSampleDrefImplicitLod
ImageSparseSampleExplicitLod
ImageSparseSampleImplicitLod
ImageSparseSampleProjDrefExplicitLod
ImageSparseSampleProjDrefImplicitLod
ImageSparseSampleProjExplicitLod
ImageSparseSampleProjImplicitLod
ImageSparseTexelsResident
ImageTexelPointer
ImageWrite
Imagination
ImplementInRegisterMapINTEL
ImplicitLod instructions require DerivativeGroupQuadsNV or DerivativeGroupLinearNV execution mode for GLCompute execution model: 
ImplicitLod instructions require Fragment or GLCompute execution model: 
Import
ImportedDeclaration
ImportedModule
Improper link
In Logical addressing with variable pointers, variables 
In Logical addressing, variables may not allocate a pointer 
In OpPhi instruction 
In SPIR-V 1.6 or later, True Label and False Label must be different labels
In SPIR-V 1.6 or later, sampled image dimension must not be Buffer
In Vulkan, OpImage*Dref* instructions must not use images with a 3D Dim
In Vulkan, OpTypeForwardPointer must have 
In Vulkan, the FPRoundingMode mode must only by RTE or RTZ.
In Vulkan: The OpGroupNonUniformBallotBitCount group operation must be only: Reduce, InclusiveScan, or ExclusiveScan.
In entry points using the MaximallyReconvergesKHR execution mode, True Label and False Label must be different labels
In entry points using the MaximallyReconvergesKHR execution mode, this basic block must not have multiple unique predecessors
In the OpenCL environment, Arrayed may only be set to 1 
In the OpenCL environment, the optional Access Qualifier
In the Vulkan environment, GLCompute execution model entry points require either the LocalSize or LocalSizeId execution mode or an object decorated with WorkgroupSize must be specified.
In the Vulkan environment, cannot store to Uniform Blocks
In the Vulkan environment, the OriginLowerLeft execution mode must not be used.
In the Vulkan environment, the PixelCenterInteger execution mode must not be used.
InBoundsAccessChain
InBoundsPtrAccessChain
Inappropriate I/O control operation
Include deleted instructions
InclusiveScan
IncomingCallableDataKHR
IncomingCallableDataKHR Storage Class is limited to CallableKHR execution model
IncomingCallableDataNV
IncomingRayFlagsKHR
IncomingRayFlagsNV
IncomingRayPayloadKHR
IncomingRayPayloadKHR Storage Class is limited to AnyHitKHR, ClosestHitKHR, and MissKHR execution model
IncomingRayPayloadNV
Index
Index 
Index can only be applied to Fragment output variables
Index is out of bounds, can not find index 
Index is out of bounds: 
Indexes passed to 
IndirectReferencesINTEL
Infinite-weight Variable (
InitModeINTEL
InitOnDeviceReprogramINTEL
InitOnDeviceResetINTEL
InitializeCriticalSection
InitializeCriticalSectionAndSpinCount
InitializeCriticalSectionEx
InitializeNodePayloadsAMDX
InitializeProcThreadAttributeList
InitializeSListHead
Initializer
Initializer type must match the type pointed to by the Result Type
InitiationIntervalINTEL
Inline
Inlined
Inlined At
Input
Input/output error
InputAttachment
InputAttachmentArrayDynamicIndexing
InputAttachmentArrayDynamicIndexingEXT
InputAttachmentArrayNonUniformIndexing
InputAttachmentArrayNonUniformIndexingEXT
InputAttachmentIndex
InputLines
InputLinesAdjacency
InputPoints
InputTrianglesAdjacency
Inst unexpectedly deleted
Instance Id must be a 32-bit int scalar
InstanceCustomIndexKHR
InstanceCustomIndexNV
InstanceId
InstanceIndex
Instruction cannot for logical addressing model be used without a variable pointers capability
Instruction folding details
Instruction reserved for future use, use of this instruction 
Instrument basic blocks, and output profiling information to stdout at the end of program execution.
Instrument compiled code with Address Sanitizer
Int16
Int64
Int64Atomics
Int64ImageEXT
Int8
Integer 
IntegerFunctions2INTEL
Intel
Intensity
Interface struct has no Block decoration but has BuiltIn members. Location decorations must be used on each member of OpVariable with a structure type that is a block not decorated with Location.
Interface variable id <
Interfaces passed to OpEntryPoint must be of type OpTypeVariable. Found Op
InterlockedFlushSList
Internal error: Unhandled operand type: 
Internal error: empty execution models for function id 
Internal error: missing function id 
Internal error: unhandled header parse failure
InterpolateAtCentroid
InterpolateAtOffset
InterpolateAtSample
InterpolateAtVertexAMD
InterpolationFunction
Interrupted function call
IntersectionKHR
IntersectionNV
Invalid 
Invalid 16-bit float literal: 
Invalid 32-bit float literal: 
Invalid 64-bit float literal: 
Invalid Arrayed 
Invalid Call dest type
Invalid Depth 
Invalid MS 
Invalid OpSwitch: selector id 
Invalid Opcode name 'Op
Invalid RAK_Unknown
Invalid SPIR-V binary version 
Invalid SPIR-V header.
Invalid SPIR-V magic number '
Invalid SPIR-V magic number.
Invalid SPIR-V.  The id bound is larger than the max id bound 
Invalid Sampled 
Invalid SearchSpan size
Invalid argument
Invalid extended instruction import '
Invalid extended instruction number: 
Invalid instruction Op
Invalid instruction word count: 
Invalid number of bits (
Invalid opcode: 
Invalid pointer storage class
Invalid range 
Invalid scope value:\n 
Invalid seek
Invalid signed integer literal: 
Invalid storage class for pointer operand 
Invalid storage class for target environment
Invalid type for SignMask intrinsic
Invalid type to assign a location
Invalid unsigned integer literal: 
Invalid use of 8- or 16-bit result
Invalid use of function result id 
Invalid use of function type result id 
Invalid vector multiply type
Invalid word count: Op
InvalidateAfterReadINTEL
Invariant
InverseSqrt
Invocation
InvocationId
Invocations
InvocationsPerPixelNV
Is a directory
IsDebuggerPresent
IsFinite
IsHelperInvocationEXT
IsInf
IsNan
IsNormal
IsProcessorFeaturePresent
IsValidCodePage
IsValidEvent
IsValidLocale
IsValidLocaleName
IsValidReserveId
IsWindow
Isolines
IterationMultiple
IterationMultiple loop control operand must be greater than zero
Its Storage Class operand must be the same as the Storage Class 
January
July
June
KERNEL32.dll
Kernel
Kernel must be a Kernel extended instruction
Kernel must be from the same extended instruction import
KernelAttributesINTEL
Khronos
Khronos Glslang Reference Front End
Khronos LLVM/SPIR-V Translator
Khronos SPIR-V Tools Assembler
Khronos SPIR-V Tools Linker
Kill
L-n>4
L>ev
L?UUUUUUU?
LCIDToLocaleName
LCMapStringEx
LCMapStringW
LLD PDB.
LLVM
LLVM ERROR: 
LLVM LLVM SPIR-V Backend
LLVM SPIR-V Backend
LLVM file (default)
LLVM/SPIR-V Translator
LWG>
LWW>
Label
Label instructions must be in a function body
Language
LatencyControlConstraintINTEL
LatencyControlLabelINTEL
LaunchIdKHR
LaunchIdNV
LaunchSizeKHR
LaunchSizeNV
Layer
LayerPerViewNV
Ldexp
LeaveCriticalSection
Length
Length is not defined.
LessOrGreater
Let register allocation use reserve registers
LifetimeStart
LifetimeStop
Line
Linear
Linear scan details
LinkOnceODR
Linkage
Linkage Name
LinkageAttributes
Literal string is longer than 
LiteralSampler
Liveness information
Load
LoadLibraryExW
Local Variable
Local common subexpression elimination
Local variable exceeds stack size limit
LocalInvocationId
LocalInvocationIndex
LocalSize
LocalSizeHint
LocalSizeHintId
LocalSizeId
LocalSizeId mode is not allowed by the current environment.
LocaleNameToLCID
Location
Location decoration can only be applied to a variable or member of a structure type
Log2
Logical
Logical addressing not supported: 
LogicalAnd
LogicalEqual
LogicalNot
LogicalNotEqual
LogicalOr
LongCompositesINTEL
Loop header 
Loop nest depth analysis
LoopCoalesceINTEL
LoopControlINTEL
LoopCountINTEL
LoopFuseINTEL
LoopMerge
Low-level integrated assembly ('.s') file
Luminance
LunarG
M'y>0y
MLIR SPIR-V Serializer
MM/dd/yy
MMHostInterfaceAddressWidthINTEL
MMHostInterfaceDataWidthINTEL
MMHostInterfaceLatencyINTEL
MMHostInterfaceMaxBurstINTEL
MMHostInterfaceReadWriteModeINTEL
MMHostInterfaceWaitRequestINTEL
MS must be 0 in the OpenCL environment.
MSP Shader Compiler
MakeAvailable
MakeAvailableKHR
MakePointerAvailable
MakePointerAvailableKHR
MakePointerAvailableKHR cannot be used with OpLoad.
MakePointerVisible
MakePointerVisibleKHR
MakePointerVisibleKHR cannot be used with OpStore.
MakePointerVisibleKHR is specified.
MakeTexelAvailable
MakeTexelAvailableKHR
MakeTexelVisible
MakeTexelVisibleKHR
MakeVisible
MakeVisibleKHR
March
Mask must be a 32-bit unsigned integer OpConstant
MaskedGatherINTEL
MaskedGatherScatterINTEL
MaskedScatterINTEL
MathOpDSPModeINTEL
Matrix
Matrix access is out of bounds, matrix has 
Matrix types can only be parameterized as having only 2, 3, or 4 columns.
Matrix types can only be parameterized with floating-point types.
MatrixAKHR
MatrixASignedComponentsKHR
MatrixAccumulatorKHR
MatrixBKHR
MatrixBSignedComponentsKHR
MatrixCSignedComponentsKHR
MatrixInverse
MatrixResultSignedComponentsKHR
MatrixStride
MatrixTimesMatrix
MatrixTimesScalar
MatrixTimesVector
Max number of nops to insert per instruction
MaxByteOffset
MaxByteOffsetId
MaxConcurrencyINTEL
MaxInterleavingINTEL
MaxIterations
MaxNodeRecursionAMDX
MaxNumWorkgroupsAMDX
MaxPrivateCopiesINTEL
MaxReinvocationDelayINTEL
MaxReplicatesINTEL
MaxWorkDimINTEL
MaxWorkgroupSizeINTEL
MaximallyReconvergesKHR
Maximum Control Flow nesting depth exceeded.
MaximumRegistersINTEL
MaximumRegistersIdINTEL
MbcntAMD
MediaBlockIOINTEL
Member #
Member index 
MemberDecorate
MemberDecorateString
MemberDecorateStringGOOGLE
MemberName
Members cannot be assigned a location
Memory Semantics Acquire and AcquireRelease cannot be used with 
Memory Semantics Volatile can only be used with atomic instructions
Memory Semantics ids must be OpConstant when Shader capability is present
Memory Semantics must be a constant instruction when CooperativeMatrixNV capability is present
Memory accesses with PhysicalStorageBuffer must use Aligned.
Memory model must be OpenCL in the OpenCL environment.
Memory usage details
MemoryAccessAliasingINTEL
MemoryBarrier
MemoryINTEL
MemoryLayout operand <id> 
MemoryModel
MemoryNamedBarrier
Merge Block 
Merge Block and Continue Target must be different ids
Merge Block may not be the block containing the OpLoopMerge\n
MergeINTEL
Mesa-IR/SPIR-V Translator
MeshEXT
MeshEXT execution model entry points must specify both OutputPrimitivesEXT and OutputVertices Execution Modes.
MeshEXT execution model entry points must specify exactly one of OutputPoints, OutputLinesEXT, or OutputTrianglesEXT Execution Modes.
MeshNV
MeshShadingEXT
MeshShadingNV
MeshViewCountNV
MeshViewIndicesNV
Messiah Shader Compiler
Meta
Meta SparkSL
Mikkosoft Productions
Mikkosoft Productions MSP Shader Compiler
MinIterations
MinLod
Minus
Miss Index must be a 32-bit int scalar
MissKHR
MissNV
Missing NonSemantic.ClspvReflection import version
Missing OpFunctionEnd at end of module.
Missing argument 
Missing decoration 
Missing function type definition.
Missing module.
Missing required OpMemoryModel instruction.
Missing required OpSamplerImageAddressingModeNV instruction.
Mock bounds checking on loads/stores
Modf
ModfStruct
Module can't mix MeshEXT/TaskEXT with MeshNV/TaskNV Execution Model.
Module contains unreachable blocks during merge return.  Run dead branch elimination before merge return.
Module has incomplete header: only 
ModuleProcessed
Monday
MultiByteToWideChar
MultiView
MultiViewport
Multiple case constructs have branches to the case construct that targets 
Multiply
Must be only one constituent
N3`d?
N>O=I9
N>VF
NAN(IND)
NAN(SNAN)
NClamp
NMax
NMin
NONE
NQ?s
NULL
NVIDIA
NVIDIA Slang Compiler
NZSL
Naga
Name
Name must be an OpString
Name must match an entry-point for Kernel
NamedBarrier
NamedBarrierCountINTEL
NamedBarrierInitialize
NamedMaximumRegistersINTEL
Native ELF object ('.o') file
Nazara ShaderLang Compiler
Nearest
Negative
Netease Games
Netease Games Messiah Shader Compiler
No OpEntryPoint instruction was found. This is only allowed if the Linkage capability is being used.
No child processes
No error
No locks available
No space left on device
No such device
No such device or address
No such file or directory
No such process
No verbosity
NoAlias
NoAliasINTEL
NoAliasINTELMask
NoCapture
NoContraction
NoFusionINTEL
NoGlobalOffsetINTEL
NoLine
NoOpaqueKHR
NoPerspective
NoReadWrite
NoSignedWrap
NoUnsignedWrap
NoWait
NoWrite
NodeMaxPayloadsAMDX
NodeOutputPayloadAMDX
NodePayloadAMDX
NodeSharesPayloadLimitsWithAMDX
Non-OpFunctionParameter (opcode: %d) found inside function but outside basic block
Non-semantic OpExtInst must not appear before types 
Non-semantic OpExtInst within function definition must appear in a block
Non-unique OpEntryPoint interface 
NonCoherentColorAttachmentReadEXT
NonCoherentDepthAttachmentReadEXT
NonCoherentStencilAttachmentReadEXT
NonPrivatePointer
NonPrivatePointerKHR
NonPrivatePointerKHR must be specified if 
NonPrivatePointerKHR must be specified if MakePointerAvailableKHR is specified.
NonPrivatePointerKHR requires a pointer in Uniform, 
NonPrivateTexel
NonPrivateTexelKHR
NonReadable
NonSemantic extended instruction sets cannot be declared without SPV_KHR_non_semantic_info.
NonSemantic.
NonSemantic.ClspvReflection import does not encode the version correctly
NonSemantic.ClspvReflection.
NonSemantic.VkspReflection.
NonUniform
NonUniformEXT
NonWritable
None
NoneINTEL
NoneKHR
Nontemporal
Nop insertion probability as percentage
Normalize
NormalizedSamplerMaskPushConstant
Not a directory
Not enough space
NotInf
NotNaN
November
NumArguments must be a 32-bit unsigned integer OpConstant
NumEnqueuedSubgroups
NumSIMDWorkitemsINTEL
NumSubgroups
NumWorkgroups
NumbanksINTEL
Number of (literal, label) pairs in OpSwitch (
Number of Global Variables (Storage Class other than 'Function') exceeded the valid limit (
Number of OpTypeStruct members (
Number of image operand ids doesn't correspond to the bit mask
Number of local variables ('Function' Storage Class) exceeded the valid limit (
Number of times local-cse is run on a block
Number of translation threads (0 for purely sequential)
OPTIONS:\n
OVERVIEW: 
OZQ%
ObjectOffset must be a 32-bit unsigned integer OpConstant
ObjectRayDirectionKHR
ObjectRayDirectionNV
ObjectRayOriginKHR
ObjectRayOriginNV
ObjectToWorldKHR
ObjectToWorldNV
October
Offset
Offset must be a 32-bit unsigned integer OpConstant
Offsets
Only use specified registers for corresponding register classes
OpBeginInvocationInterlockEXT/OpEndInvocationInterlockEXT require Fragment execution model
OpBeginInvocationInterlockEXT/OpEndInvocationInterlockEXT require a fragment shader interlock execution mode.
OpBranch or OpBranchConditional instruction. 
OpBranchConditional or OpSwitch instruction. 
OpBranchConditional requires either 3 or 5 parameters
OpConstant with a 32- or 64-bits integer scalar type or 
OpConstant, DebugGlobalVariable, or 
OpConstantNull Result Type <id> 
OpConstantSampler Result Type <id> 
OpControlBarrier requires one of the following Execution Models: TessellationControl, GLCompute, Kernel, MeshNV or TaskNV
OpCopyObject cannot have void result type
OpDecorate decoration '
OpDecorate, OpDecorateId, and OpGroupMemberDecorate
OpDemoteToHelperInvocationEXT requires Fragment execution model
OpEmitMeshTasksEXT requires TaskEXT execution model
OpEntryPoint Entry Point <id> 
OpEntryPoint interfaces must be OpVariables with Storage Class of Input(1) or Output(3). Found Storage Class 
OpEntryPoint interfaces should only list global variables
OpExecuteCallableKHR requires RayGenerationKHR, ClosestHitKHR, MissKHR and CallableKHR execution models
OpExecutionMode Entry Point <id> 
OpExecutionMode is only valid when the Mode operand is an execution mode that takes no Extra Operands, or takes Extra Operands that are not id operands.
OpExecutionModeId is only valid when the Mode operand is an execution mode that takes Extra Operands that are id operands.
OpExtInst set Id 
OpFunction Function Type <id> 
OpFunction Result Type <id> 
OpFunctionCall Argument <id> 
OpFunctionCall Function <id> 
OpFunctionCall Function <id>'s parameter count does not match the argument count.
OpFunctionCall Result Type <id> 
OpFunctionEnd inside basic block
OpFunctionEnd without corresponding OpFunction
OpFunctionParameter 
OpFunctionParameter Result Type <id> 
OpGroupDecorate Decoration group <id> 
OpGroupDecorate may not target OpDecorationGroup <id> 
OpGroupMemberDecorate Decoration group <id> 
OpGroupMemberDecorate Structure type <id> 
OpIgnoreIntersectionKHR requires AnyHitKHR execution model
OpImageFetch
OpImageQueryLevels must only consume an "Image" operand whose type has its "Sampled" operand set to 1
OpImageQueryLod requires DerivativeGroupQuadsNV or DerivativeGroupLinearNV execution mode for GLCompute execution model
OpImageQueryLod requires Fragment or GLCompute execution model
OpImageQuerySizeLod must only consume an "Image" operand whose type has its "Sampled" operand set to 1
OpImageRead, OpImageWrite, OpImageSparseFetch and 
OpImageSparseRead
OpIsHelperInvocationEXT requires Fragment execution model
OpKill requires Fragment execution model
OpLabel inside basic block
OpLabel outside function
OpLine Target <id> 
OpLoad Pointer <id> 
OpLoad Result Type <id> 
OpLoad type for pointer <id> 
OpLoopMerge must be the second-to-last instruction in 
OpLoopMerge must immediately precede either an 
OpMemberDecorate Structure type <id> 
OpMemberName Member <id> 
OpMemberName Type <id> 
OpMemoryModel should only be provided once.
OpPhi does not have an equal number of incoming values and basic blocks.
OpPhi must appear within a non-entry block before all 
OpPhi must not have void result type
OpPhi references incoming basic block <id> 
OpPhi's incoming basic block <id> 
OpPhi's number of incoming blocks (
OpPhi's result type <id> 
OpPtrAccessChain Base operand must point to Workgroup, StorageBuffer, or PhysicalStorageBuffer storage class
OpPtrAccessChain Base operand pointing to StorageBuffer storage class must use VariablePointers or VariablePointersStorageBuffer capability
OpPtrAccessChain Base operand pointing to Workgroup storage class must use VariablePointers capability
OpPtrAccessChain must have a Base whose type is decorated with ArrayStride
OpReportIntersectionKHR requires IntersectionKHR execution model
OpReturn can only be called from a function with void 
OpReturnValue Value <id> 
OpReturnValue value's type <id> 
OpSamplerImageAddressingModeNV bitwidth should be 64 or 32
OpSamplerImageAddressingModeNV should only be provided once
OpSamplerImageAddressingModeNV supported only with extension SPV_NV_bindless_texture
OpSelectionMerge must be the second-to-last 
OpSelectionMerge must immediately precede either an 
OpSetMeshOutputsEXT requires MeshEXT execution model
OpSpecConstant opcode table out of sync
OpSpecConstantOp opcode
OpStore Object <id> 
OpStore Pointer <id> 
OpStore type for pointer <id> 
OpSwitch must be preceded by an OpSelectionMerge instruction
OpTerminateInvocation requires Fragment execution model
OpTerminateRayKHR requires AnyHitKHR execution model
OpTraceRayKHR requires RayGenerationKHR, ClosestHitKHR and MissKHR execution models
OpTypeArray Element Type <id> 
OpTypeArray Length <id> 
OpTypeCooperativeMatrix Cols <id> 
OpTypeCooperativeMatrix Component Type <id> 
OpTypeCooperativeMatrix Rows <id> 
OpTypeCooperativeMatrix Scope <id> 
OpTypeCooperativeMatrixKHR Use <id> 
OpTypeFunction Parameter Type <id> 
OpTypeFunction Return Type <id> 
OpTypeFunction may not take more than 
OpTypeInt has invalid signedness:
OpTypePointer Type <id> 
OpTypeRuntimeArray Element Type <id> 
OpTypeRuntimeArray must be decorated with Block if it 
OpTypeRuntimeArray must be decorated with BufferBlock 
OpTypeRuntimeArray must have storage class of 
OpTypeRuntimeArray.\nFor Vulkan OpTypeRuntimeArray can only 
OpTypeSampledImage, OpTypeAccelerationStructureKHR, 
OpTypeSampledImage.
OpTypeStruct Member Type <id> 
OpTypeVector Component Type <id> 
OpTypeVoid
OpVariable 
OpVariable Initializer <id> 
OpVariable Result Type <id> 
OpVariable storage class cannot be Generic
OpVariable, <id> 
OpVectorShuffle component literals count does not match Result Type <id> 
OpaqueKHR
Opaque_
Opcode 
OpenCL
OpenCL.DebugInfo.100
OpenCL.DebugInfo.100 debug base type encoding
OpenCL.DebugInfo.100 debug composite type
OpenCL.DebugInfo.100 debug imported entity
OpenCL.DebugInfo.100 debug info flags
OpenCL.DebugInfo.100 debug operation
OpenCL.DebugInfo.100 debug type qualifier
OpenCL.std
OpenCL_C
OpenCL_CPP
OpenGL
Operand
Operand 
Operand type must be a pointer
Operation
Operation not permitted
OptNoneINTEL
Optimization level
Optional Image Operands are not allowed in the OpenCL 
Ordered
Ordinal must be a 32-bit unsigned integer OpConstant
OriginLowerLeft
OriginUpperLeft
Other warnings have been suppressed.\n
OuterProduct
Output
Output file type
OutputDebugStringA
OutputLineStrip
OutputLinesEXT
OutputLinesNV
OutputMemory
OutputMemoryKHR
OutputPoints
OutputPrimitivesEXT
OutputPrimitivesNV
OutputTriangleStrip
OutputTrianglesEXT
OutputTrianglesNV
OutputVertices
Override output filename
Override with -verbose=none except for specified functions
OverrideCoverageNV
PA..\..\third_party\swiftshader\src\Vulkan\VkSemaphore.cpp
PNaCl bitcode file
PPR=U
PackDouble2x32
PackHalf2x16
PackSnorm2x16
PackSnorm4x8
PackUnorm2x16
PackUnorm4x8
PackedVectorFormat4x8Bit
PackedVectorFormat4x8BitKHR
Parameter Types
Parent
Parse function blocks in parallel
PartialCount
PartialCount and DontUnroll loop controls must not both be specified
PartitionedExclusiveScanNV
PartitionedInclusiveScanNV
PartitionedReduceNV
PassthroughNV
Patch
PatchVertices
Payload OpVariable must have a storage class of TaskPayloadWorkgroupEXT
Payload must be the result of a OpVariable
Payload must have storage class RayPayloadKHR or IncomingRayPayloadKHR
PayloadNodeNameAMDX
PeelCount
PeelCount and DontUnroll loop controls must not both be specified
Per-component robustness and per-element robustness are mutually exclusive.
PerPrimitiveEXT
PerPrimitiveNV
PerTaskNV
PerVertexKHR
PerVertexKHR can only be applied to Fragment Execution Models
PerVertexKHR must be declared as arrays
PerVertexNV
PerViewAttributesNV
PerViewNV
Permission denied
Phi error: missing label for incoming edge
Phi found in regular instruction list
Phi instruction added to the middle of a block
Physical register origins
Physical32
Physical64
PhysicalStorageBuffer
PhysicalStorageBuffer must not be used with OpVariable.
PhysicalStorageBuffer pointer.
PhysicalStorageBuffer64
PhysicalStorageBuffer64 addressing mode requires the input integer to have a 64-bit width for Vulkan environment.
PhysicalStorageBuffer64 addressing mode requires the result integer type to have a 64-bit width for Vulkan environment.
PhysicalStorageBuffer64EXT
PhysicalStorageBufferAddresses
PhysicalStorageBufferAddressesEXT
PhysicalStorageBufferEXT
Pipe
PipeStorage
PipelineEnableINTEL
Pipes
PixelCenterInteger
PixelInterlockOrderedEXT
PixelInterlockUnorderedEXT
PixelRoutine_%0.8X
Plus
PlusUconst
PointCoord
PointMode
PointSize
Pointer can only be converted to another pointer or int scalar: 
Pointer can only be converted to another pointer, int scalar or 32-bit int vector: 
Pointer operand 
Pointer storage class must be PhysicalStorageBuffer: 
Pointer type in OpTypeForwardPointer is not a pointer type.
PointerOffset must be a 32-bit unsigned integer OpConstant
PointerSize must be a 32-bit unsigned integer OpConstant
Position
PositionPerViewNV
Possible misaligned vector memory operation
PostDepthCoverage
Predicate must be a boolean scalar
Predicate must be a boolean scalar type
PrefetchINTEL
Prepend a prefix to symbol names for testing
Preserve
Primitive Count must be a 32-bit unsigned int scalar
Primitive Id must be a 32-bit int scalar
PrimitiveCountNV
PrimitiveId
PrimitiveIndicesNV
PrimitiveLineIndicesEXT
PrimitivePointIndicesEXT
PrimitiveShadingRateKHR
PrimitiveTriangleIndicesEXT
Print all option values after command line parsing
Print basic instructions
Print instruction numbers
Print non-default options after command line parsing
Print out more descriptive PNaCl bitcode parse errors when building LLVM IR first
Print statistics after translating each function
Print the name of the function being translated
Print total translation time for each function
PrintfBufferPointerPushConstant
PrintfBufferStorageBuffer
PrintfID must be a 32-bit unsigned integer OpConstant
PrintfInfo
Prior to SPIR-V 1.4, specialization constant operation UConvert requires Kernel capability or extension SPV_AMD_gpu_shader_int16
Private
Processor
Profiler
ProgramScopeVariablePointerPushConstant
ProgramScopeVariablePointerRelocation
ProgramScopeVariablesStorageBuffer
PropertyRequiredWorkgroupSize
PtrAccessChain
PtrCastToCrossWorkgroupINTEL
PtrCastToGeneric
PtrDiff
PtrEqual
PtrNotEqual
Pure
PushConstant
PushConstant OpVariable <id> 
PushConstant id '
PushConstantEnqueuedLocalSize
PushConstantGlobalOffset
PushConstantGlobalSize
PushConstantNumWorkgroups
PushConstantRegionGroupOffset
PushConstantRegionOffset
PushConstants
Q5rHg,>
QAf?
QuadControlKHR
QuadDerivativesKHR
Quads
Qualcomm
QuantizeToF16
QueryPerformanceCounter
QueryPerformanceFrequency
Queue
Queue<%p>
QueueFamily
QueueFamilyKHR
R11fG11fB10f
R16Snorm
R16f
R16i
R16ui
R32f
R32i
R32ui
R64i
R64ui
R8Snorm
R8ui
RGBA
RGBx
RND_CONV
RND_CONV_ODD
RND_INF
RND_MIN_INF
RND_ZERO
RSDS
R\fpx\r5
R\n0\tP
R\n0\tp
R\vpx\r5
Radians
RaiseException
RawAccessChainNV
RawAccessChainsNV
Ray Direction must be a 32-bit float 3-component vector
Ray Flags must be a 32-bit int scalar
Ray Origin must be a 32-bit float 3-component vector
Ray Query must be a memory object declaration
Ray Query must be a pointer
Ray Query must be a pointer to OpTypeRayQueryKHR
Ray TMax must be a 32-bit float scalar
Ray TMin must be a 32-bit float scalar
RayCullMaskKHR
RayGenerationKHR
RayGenerationNV
RayGeometryIndexKHR
RayPayloadKHR
RayPayloadKHR Storage Class is limited to RayGenerationKHR, ClosestHitKHR, and MissKHR execution model
RayPayloadNV
RayQueryCandidateIntersectionAABBKHR
RayQueryCandidateIntersectionKHR
RayQueryCandidateIntersectionTriangleKHR
RayQueryCommittedIntersectionGeneratedKHR
RayQueryCommittedIntersectionKHR
RayQueryCommittedIntersectionNoneKHR
RayQueryCommittedIntersectionTriangleKHR
RayQueryConfirmIntersectionKHR
RayQueryGenerateIntersectionKHR
RayQueryGetIntersectionBarycentricsKHR
RayQueryGetIntersectionCandidateAABBOpaqueKHR
RayQueryGetIntersectionFrontFaceKHR
RayQueryGetIntersectionGeometryIndexKHR
RayQueryGetIntersectionInstanceCustomIndexKHR
RayQueryGetIntersectionInstanceIdKHR
RayQueryGetIntersectionInstanceShaderBindingTableRecordOffsetKHR
RayQueryGetIntersectionObjectRayDirectionKHR
RayQueryGetIntersectionObjectRayOriginKHR
RayQueryGetIntersectionObjectToWorldKHR
RayQueryGetIntersectionPrimitiveIndexKHR
RayQueryGetIntersectionTKHR
RayQueryGetIntersectionTriangleVertexPositionsKHR
RayQueryGetIntersectionTypeKHR
RayQueryGetIntersectionWorldToObjectKHR
RayQueryGetRayFlagsKHR
RayQueryGetRayTMinKHR
RayQueryGetWorldRayDirectionKHR
RayQueryGetWorldRayOriginKHR
RayQueryInitializeKHR
RayQueryKHR
RayQueryPositionFetchKHR
RayQueryProceedKHR
RayQueryProvisionalKHR
RayQueryTerminateKHR
RayTmaxKHR
RayTmaxNV
RayTminKHR
RayTminNV
RayTracingDisplacementMicromapNV
RayTracingKHR
RayTracingMotionBlurNV
RayTracingNV
RayTracingOpacityMicromapEXT
RayTracingPositionFetchKHR
RayTracingProvisionalKHR
RayTraversalPrimitiveCullingKHR
Rayan Hatout
Rayan Hatout SPIRVSmith
Reached non-composite type while indexes still remain to be traversed.
Read-only file system
ReadClockKHR
ReadConsoleW
ReadFile
ReadINTEL
ReadModifyWrite optimization
ReadOnly
ReadPipe
ReadPipeBlockingINTEL
ReadWrite
ReadWriteINTEL
Rect
RecurrentAddExpr
Reduce
ReferencedIndirectlyINTEL
Reflect
Refract
RegisterINTEL
RegisterLimitsINTEL
RegisterMapInterfaceINTEL
RegisterMapKernelArgumentINTEL
RelaxPrecision decoration cannot be applied to a type
Relaxed
RelaxedPrecision
Release
ReleaseDC
ReleaseEvent
ReleaseSRWLockExclusive
RemoveDirectoryW
Rendong Liang
Rendong Liang spq
ReorderThreadWithHintNV
ReorderThreadWithHitObjectNV
Repeat
Repeat register allocation until convergence
RepeatMirrored
ReportIntersectionKHR
ReportIntersectionNV
RequireFullQuadsKHR
ReserveId
ReserveReadPipePackets
ReserveWritePipePackets
ReservedReadPipe
ReservedWritePipe
Resource deadlock avoided
Resource device
Resource temporarily unavailable
RestoreMemoryINTEL
Restrict
Restrict local var splitting to specific insts
RestrictPointer
RestrictPointer for PhysicalStorageBuffer pointer.
RestrictPointerEXT
RestrictType
Result <id> '
Result <id> from OpSampledImage instruction must not appear as operand for Op
Result <id> from OpSampledImage instruction must not appear as operands of Op
Result Type
Result Type does not logically match the Operand type
Result Type has 
Result Type must be OpTypeBool
Result Type must be an integer scalar
Result Type must be the same as the type of Value.
Result Type must not equal the Operand type
Result Type struct
Result Type vector size: 
Result Type's second member
Result Type: 
Result id of OpDecorationGroup can only 
Result must be a 4-component unsigned integer vector
Result must be a boolean scalar
Result must be a boolean scalar or vector
Result must be a boolean scalar type
Result must be a floating-point scalar or vector
Result must be a scalar or vector of integer, floating-point, or boolean type
Result must be an integer scalar or vector
Result must be an unsigned integer scalar
Result must be an unsigned integer scalar or vector
Result of OpExpectKHR must be a scalar or vector of integer type or boolean type
Result too large
Result type (Op
Result type cannot be Op
Result type component width must be 32 bits
Result type is not defined.
Retain deleted instructions in the Cfg
RetainEvent
Return
Return Type
Return Type must be OpTypeVoid
ReturnValue
Rg16
Rg16Snorm
Rg16f
Rg16i
Rg16ui
Rg32f
Rg32i
Rg32ui
Rg8Snorm
Rg8i
Rg8ui
Rgb10A2
Rgb10a2ui
Rgba16
Rgba16Snorm
Rgba16f
Rgba16i
Rgba16ui
Rgba32f
Rgba32i
Rgba32ui
Rgba8
Rgba8Snorm
Rgba8i
Rgba8ui
RoInitialize
RoUninitialize
RobustnessPerComponentNV
RobustnessPerElementNV
Round
RoundEven
RoundToInfinityINTEL
RoundingModeRTE
RoundingModeRTNINTEL
RoundingModeRTPINTEL
RoundingModeRTZ
RowMajor
RowMajorKHR
RtlCaptureContext
RtlLookupFunctionEntry
RtlPcToFileHeader
RtlUnwind
RtlUnwindEx
RtlVirtualUnwind
RuntimeAlignedAttributeINTEL
RuntimeAlignedINTEL
RuntimeDescriptorArray
RuntimeDescriptorArrayEXT
Rust GPU Compiler Backend
S9>H
S>$hkDh$h>[2
SAT_SYM
SAT_ZERO
SAbs
SBT Index must be a 32-bit unsigned int scalar
SBT Offset must be a 32-bit int scalar
SBT Offset must be a 32-bit unsigned int scalar
SBT Stride must be a 32-bit int scalar
SBT Stride must be a 32-bit unsigned int scalar
SBT record offset must be a 32-bit unsigned int scalar
SBT record stride must be a 32-bit unsigned int scalar
SClamp
SConvert
SDiv
SDot
SDotAccSat
SDotAccSatKHR
SDotKHR
SGreaterThan
SGreaterThanEqual
SIMTCallINTEL
SLessThan
SLessThanEqual
SMCountNV
SMIDNV
SMax
SMax3AMD
SMid3AMD
SMin
SMin3AMD
SMod
SMulExtended
SNAN)
SNegate
SPIR-V 1.0
SPIR-V 1.0 (under OpenCL 1.2 Embedded Profile semantics)
SPIR-V 1.0 (under OpenCL 1.2 Full Profile semantics)
SPIR-V 1.0 (under OpenCL 2.0 Embedded Profile semantics)
SPIR-V 1.0 (under OpenCL 2.0 Full Profile semantics)
SPIR-V 1.0 (under OpenCL 2.1 Embedded Profile semantics)
SPIR-V 1.0 (under OpenCL 2.1 Full Profile semantics)
SPIR-V 1.0 (under OpenGL 4.0 semantics)
SPIR-V 1.0 (under OpenGL 4.1 semantics)
SPIR-V 1.0 (under OpenGL 4.2 semantics)
SPIR-V 1.0 (under OpenGL 4.3 semantics)
SPIR-V 1.0 (under OpenGL 4.5 semantics)
SPIR-V 1.0 (under Vulkan 1.0 semantics)
SPIR-V 1.1
SPIR-V 1.2
SPIR-V 1.2 (under OpenCL 2.2 Embedded Profile semantics)
SPIR-V 1.2 (under OpenCL 2.2 Full Profile semantics)
SPIR-V 1.3
SPIR-V 1.3 (under Vulkan 1.1 semantics)
SPIR-V 1.4
SPIR-V 1.4 (under Vulkan 1.1 semantics)
SPIR-V 1.5
SPIR-V 1.5 (under Vulkan 1.2 semantics)
SPIR-V 1.6
SPIR-V 1.6 (under Vulkan 1.3 semantics)
SPIR-V DEBUG: %d:%d %s\n
SPIR-V ERROR: %d:%d %s\n
SPIR-V FATAL: %d:%d %s\n
SPIR-V INFO: %d:%d %s\n
SPIR-V INTERNAL_ERROR: %d:%d %s\n
SPIR-V MESSAGE: %d:%d %s\n
SPIR-V Tools Assembler
SPIR-V Tools Linker
SPIR-V WARNING: %d:%d %s\n
SPIRVSmith
SPV_AMDX_shader_enqueue
SPV_AMD_gcn_shader
SPV_AMD_gpu_shader_half_float
SPV_AMD_gpu_shader_half_float_fetch
SPV_AMD_gpu_shader_int16
SPV_AMD_shader_ballot
SPV_AMD_shader_early_and_late_fragment_tests
SPV_AMD_shader_explicit_vertex_parameter
SPV_AMD_shader_fragment_mask
SPV_AMD_shader_image_load_store_lod
SPV_AMD_shader_trinary_minmax
SPV_AMD_texture_gather_bias_lod
SPV_ARM_core_builtins
SPV_EXT_demote_to_helper_invocation
SPV_EXT_descriptor_indexing
SPV_EXT_fragment_fully_covered
SPV_EXT_fragment_invocation_density
SPV_EXT_fragment_shader_interlock
SPV_EXT_mesh_shader
SPV_EXT_opacity_micromap
SPV_EXT_physical_storage_buffer
SPV_EXT_shader_atomic_float16_add
SPV_EXT_shader_atomic_float_add
SPV_EXT_shader_atomic_float_min_max
SPV_EXT_shader_image_int64
SPV_EXT_shader_stencil_export
SPV_EXT_shader_tile_image
SPV_EXT_shader_viewport_index_layer
SPV_GOOGLE_decorate_string
SPV_GOOGLE_hlsl_functionality1
SPV_GOOGLE_user_type
SPV_INTEL_arbitrary_precision_fixed_point
SPV_INTEL_arbitrary_precision_floating_point
SPV_INTEL_arbitrary_precision_integers
SPV_INTEL_bfloat16_conversion
SPV_INTEL_blocking_pipes
SPV_INTEL_cache_controls
SPV_INTEL_debug_module
SPV_INTEL_device_side_avc_motion_estimation
SPV_INTEL_float_controls2
SPV_INTEL_fp_fast_math_mode
SPV_INTEL_fp_max_error
SPV_INTEL_fpga_argument_interfaces
SPV_INTEL_fpga_buffer_location
SPV_INTEL_fpga_cluster_attributes
SPV_INTEL_fpga_dsp_control
SPV_INTEL_fpga_invocation_pipelining_attributes
SPV_INTEL_fpga_latency_control
SPV_INTEL_fpga_loop_controls
SPV_INTEL_fpga_memory_accesses
SPV_INTEL_fpga_memory_attributes
SPV_INTEL_fpga_reg
SPV_INTEL_function_pointers
SPV_INTEL_global_variable_fpga_decorations
SPV_INTEL_global_variable_host_access
SPV_INTEL_inline_assembly
SPV_INTEL_io_pipes
SPV_INTEL_kernel_attributes
SPV_INTEL_long_composites
SPV_INTEL_loop_fuse
SPV_INTEL_masked_gather_scatter
SPV_INTEL_maximum_registers
SPV_INTEL_media_block_io
SPV_INTEL_memory_access_aliasing
SPV_INTEL_optnone
SPV_INTEL_runtime_aligned
SPV_INTEL_shader_integer_functions2
SPV_INTEL_split_barrier
SPV_INTEL_subgroups
SPV_INTEL_unstructured_loop_controls
SPV_INTEL_usm_storage_classes
SPV_INTEL_variable_length_array
SPV_INTEL_vector_compute
SPV_KHR_16bit_storage
SPV_KHR_8bit_storage
SPV_KHR_bit_instructions
SPV_KHR_cooperative_matrix
SPV_KHR_device_group
SPV_KHR_expect_assume
SPV_KHR_float_controls
SPV_KHR_float_controls2
SPV_KHR_fragment_shader_barycentric
SPV_KHR_fragment_shading_rate
SPV_KHR_integer_dot_product
SPV_KHR_linkonce_odr
SPV_KHR_maximal_reconvergence
SPV_KHR_multiview
SPV_KHR_no_integer_wrap_decoration
SPV_KHR_non_semantic_info
SPV_KHR_physical_storage_buffer
SPV_KHR_post_depth_coverage
SPV_KHR_quad_control
SPV_KHR_ray_cull_mask
SPV_KHR_ray_query
SPV_KHR_ray_tracing
SPV_KHR_ray_tracing_position_fetch
SPV_KHR_shader_atomic_counter_ops
SPV_KHR_shader_ballot
SPV_KHR_shader_draw_parameters
SPV_KHR_storage_buffer_storage_class
SPV_KHR_subgroup_rotate
SPV_KHR_subgroup_uniform_control_flow
SPV_KHR_subgroup_vote
SPV_KHR_terminate_invocation
SPV_KHR_uniform_group_instructions
SPV_KHR_variable_pointers
SPV_KHR_vulkan_memory_model
SPV_KHR_workgroup_memory_explicit_layout
SPV_NVX_multiview_per_view_attributes
SPV_NV_bindless_texture
SPV_NV_compute_shader_derivatives
SPV_NV_cooperative_matrix
SPV_NV_displacement_micromap
SPV_NV_fragment_shader_barycentric
SPV_NV_geometry_shader_passthrough
SPV_NV_mesh_shader
SPV_NV_raw_access_chains
SPV_NV_ray_tracing
SPV_NV_ray_tracing_motion_blur
SPV_NV_sample_mask_override_coverage
SPV_NV_shader_atomic_fp16_vector
SPV_NV_shader_image_footprint
SPV_NV_shader_invocation_reorder
SPV_NV_shader_sm_builtins
SPV_NV_shader_subgroup_partitioned
SPV_NV_shading_rate
SPV_NV_stereo_view_rendering
SPV_NV_viewport_array2
SPV_QCOM_image_processing
SPV_QCOM_image_processing2
SPV_VALIDATOR_ignore_type_decl_unique
SRem
SSign
SUBCOMMAND '
SUBCOMMANDS:\n\n
SUDot
SUDotAccSat
SUDotAccSatKHR
SUDotKHR
SYCL
Saarland University
Saarland University Shady
Sample
SampleId
SampleInterlockOrderedEXT
SampleInterlockUnorderedEXT
SampleMask
SampleMaskOverrideCoverageNV
SampleMaskPostDepthCoverage
SamplePosition
SampleRateShading
Sampled Type must be OpTypeVoid in the OpenCL environment.
Sampled image type requires an image type with "Sampled" operand set to 0 or 1
Sampled must be 0 in the OpenCL environment.
Sampled must be 1 or 2 in the Vulkan environment.
Sampled1D
SampledBuffer
SampledCubeArray
SampledImage
SampledImageArrayDynamicIndexing
SampledImageArrayNonUniformIndexing
SampledImageArrayNonUniformIndexingEXT
SampledRect
SamplerImageAddressingModeNV
Sampling operation is invalid for multisample image
SatConvertSToU
SatConvertUToS
SaturatedConversion
SaturatingAccumulationKHR
Saturday
SaveMemoryINTEL
Scalarized operation was expected
SchedulerTargetFmaxMhzINTEL
Scope
Scope Line
Scope ids must be OpConstant when Shader capability is 
Scope ids must be constant or specialization constant when 
Scope must be Subgroup or Device
SecondaryPositionNV
SecondaryViewportMaskNV
SecondaryViewportRelativeNV
Select
Selection must be structured
SelectionMerge
Selector type must be OpTypeInt
September
Sequence of components starting with 
SequentiallyConsistent
SequentiallyConsistent memory semantics cannot be used with the VulkanKHR memory model.
Set log filename
SetConsoleTextAttribute
SetEndOfFile
SetEnvironmentVariableW
SetFilePointerEx
SetLastError
SetMeshOutputsEXT
SetStdHandle
SetThreadDescription
SetUnhandledExceptionFilter
SetUserEventStatus
Sext
Shader
ShaderCallKHR
ShaderCallKHR Memory Scope requires a ray tracing execution model
ShaderClockKHR
ShaderEnqueueAMDX
ShaderIndexAMDX
ShaderInvocationReorderNV
ShaderLayer
ShaderNonUniform
ShaderNonUniformEXT
ShaderRecordBufferKHR
ShaderRecordBufferKHR Storage Class is limited to RayGenerationKHR, IntersectionKHR, AnyHitKHR, ClosestHitKHR, CallableKHR, and MissKHR execution model
ShaderRecordBufferKHR Storage Class variables are read only
ShaderRecordBufferNV
ShaderSMBuiltinsNV
ShaderStereoViewNV
ShaderViewportIndex
ShaderViewportIndexLayerEXT
ShaderViewportIndexLayerEXT or ShaderLayer
ShaderViewportIndexLayerEXT or ShaderViewportIndex
ShaderViewportIndexLayerNV
ShaderViewportMaskNV
ShaderWriter
Shaderc over Glslang
ShadingRateInterlockOrderedEXT
ShadingRateInterlockUnorderedEXT
ShadingRateKHR
ShadingRateNV
Shady
SharedLocalMemorySizeINTEL
ShiftLeftLogical
ShiftRightArithmetic
ShiftRightLogical
Show available registers for register allocation
Show predecessors
Show successors
Shufflevector rematerialization
SideEffectsINTEL
SignBitSet
SignExtend
Signed
SignedChar
SignedInt16
SignedInt32
SignedInt8
SignedZeroInfNanPreserve
Simple
SimpleDualPortINTEL
SingleElementVectorINTEL
SinglepumpINTEL
Sinh
SirLynix
SirLynix Nazara ShaderLang Compiler
Size
Size must be a 32-bit unsigned integer OpConstant
Size operand <id> 
SizeOf
Skia SkSL
Skip through unimplemented lowering code instead of aborting.
SkipAABBsKHR
SkipClosestHitShaderKHR
SkipTrianglesKHR
Slang
Slang Compiler
SleepConditionVariableSRW
SmoothStep
SnormInt16
SnormInt8
Source
Source memory access must not include MakePointerAvailableKHR
Source operand <id> 
SourceContinued
SourceExtension
SpacingEqual
SpacingFractionalEven
SpacingFractionalOdd
SparkSL
SparseResidency
SpecConstant
SpecConstantComposite
SpecConstantCompositeContinuedINTEL
SpecConstantFalse
SpecConstantGlobalOffset
SpecConstantOp
SpecConstantSubgroupMaxSize
SpecConstantTrue
SpecConstantWorkDim
SpecConstantWorkgroupSize
SpecId
SpecId must be a 32-bit unsigned integer OpConstant
Specialization constant must be an integer or floating-point number.
Specialization constant operation 
SpecializationMapEntry
SpeculatedIterationsINTEL
SpirvProfilingReportDir
SpirvProfilingReportPeriodMs
Split Nodes for short circuit evaluation
SplitBarrierINTEL
SpvGenTwo SPIR-V IR Tools
SpvGenTwo community
SpvGenTwo community SpvGenTwo SPIR-V IR Tools
Sqrt
Sret
StableKernelArgumentINTEL
Stack Variable has a register assigned
Stack frame layout details
Stack size limit exceeded
StackCallINTEL
StackValue
StallEnableINTEL
StallFreeINTEL
StartCounter
Static Member Declaration
StaticNumWorkgroupsAMDX
StencilAttachmentReadEXT
StencilExportEXT
StencilRefGreaterBackAMD
StencilRefGreaterFrontAMD
StencilRefLessBackAMD
StencilRefLessFrontAMD
StencilRefReplacingEXT
StencilRefUnchangedBackAMD
StencilRefUnchangedFrontAMD
Step
StopCounter
Storage Buffer
Storage Class
Storage buffer id '
Storage class cannot be Generic in OpenCL 1.2 environment
Storage class cannot be PhysicalStorageBuffer when raw access chain robustness is used.
Storage class in OpTypeForwardPointer does not match the 
StorageBuffer
StorageBuffer OpVariable <id> 
StorageBuffer id '
StorageBuffer pointer operand 
StorageBuffer, PhysicalStorageBuffer, or Uniform.
StorageBuffer, Uniform, or UniformConstant.
StorageBuffer16BitAccess
StorageBuffer8BitAccess
StorageBufferArrayDynamicIndexing
StorageBufferArrayNonUniformIndexing
StorageBufferArrayNonUniformIndexingEXT
StorageClass
StorageImageArrayDynamicIndexing
StorageImageArrayNonUniformIndexing
StorageImageArrayNonUniformIndexingEXT
StorageImageExtendedFormats
StorageImageMultisample
StorageImageReadWithoutFormat
StorageImageWriteWithoutFormat
StorageInputOutput16
StoragePushConstant16
StoragePushConstant8
StorageTexelBufferArrayDynamicIndexing
StorageTexelBufferArrayDynamicIndexingEXT
StorageTexelBufferArrayNonUniformIndexing
StorageTexelBufferArrayNonUniformIndexingEXT
StorageUniform16
StorageUniformBufferBlock16
Store
Stream
StreamingINTEL
StreamingInterfaceINTEL
StretchDIBits
Stride must not be zero when per-element robustness is used.
Stride operand <id> 
StridesizeINTEL
String
String index not found: 
String pool (NumStrings=
Structure
Structure <id> 
Structure Nesting Depth may not be larger than 
Structure id 
Structure members may not be self references
Structures cannot contain a void type.
Subgroup
SubgroupAllEqualKHR
SubgroupAllKHR
SubgroupAnyKHR
SubgroupAvcBmeInitializeINTEL
SubgroupAvcFmeInitializeINTEL
SubgroupAvcImeAdjustRefOffsetINTEL
SubgroupAvcImeConvertToMcePayloadINTEL
SubgroupAvcImeConvertToMceResultINTEL
SubgroupAvcImeEvaluateWithDualReferenceINTEL
SubgroupAvcImeEvaluateWithDualReferenceStreaminINTEL
SubgroupAvcImeEvaluateWithDualReferenceStreaminoutINTEL
SubgroupAvcImeEvaluateWithDualReferenceStreamoutINTEL
SubgroupAvcImeEvaluateWithSingleReferenceINTEL
SubgroupAvcImeEvaluateWithSingleReferenceStreaminINTEL
SubgroupAvcImeEvaluateWithSingleReferenceStreaminoutINTEL
SubgroupAvcImeEvaluateWithSingleReferenceStreamoutINTEL
SubgroupAvcImeGetBorderReachedINTEL
SubgroupAvcImeGetDualReferenceStreaminINTEL
SubgroupAvcImeGetSingleReferenceStreaminINTEL
SubgroupAvcImeGetStreamoutDualReferenceMajorShapeDistortionsINTEL
SubgroupAvcImeGetStreamoutDualReferenceMajorShapeMotionVectorsINTEL
SubgroupAvcImeGetStreamoutDualReferenceMajorShapeReferenceIdsINTEL
SubgroupAvcImeGetStreamoutSingleReferenceMajorShapeDistortionsINTEL
SubgroupAvcImeGetStreamoutSingleReferenceMajorShapeMotionVectorsINTEL
SubgroupAvcImeGetStreamoutSingleReferenceMajorShapeReferenceIdsINTEL
SubgroupAvcImeGetTruncatedSearchIndicationINTEL
SubgroupAvcImeGetUnidirectionalEarlySearchTerminationINTEL
SubgroupAvcImeGetWeightingPatternMinimumDistortionINTEL
SubgroupAvcImeGetWeightingPatternMinimumMotionVectorINTEL
SubgroupAvcImeInitializeINTEL
SubgroupAvcImeRefWindowSizeINTEL
SubgroupAvcImeSetDualReferenceINTEL
SubgroupAvcImeSetEarlySearchTerminationThresholdINTEL
SubgroupAvcImeSetMaxMotionVectorCountINTEL
SubgroupAvcImeSetSingleReferenceINTEL
SubgroupAvcImeSetUnidirectionalMixDisableINTEL
SubgroupAvcImeSetWeightedSadINTEL
SubgroupAvcImeStripDualReferenceStreamoutINTEL
SubgroupAvcImeStripSingleReferenceStreamoutINTEL
SubgroupAvcMceConvertToImePayloadINTEL
SubgroupAvcMceConvertToImeResultINTEL
SubgroupAvcMceConvertToRefPayloadINTEL
SubgroupAvcMceConvertToRefResultINTEL
SubgroupAvcMceConvertToSicPayloadINTEL
SubgroupAvcMceConvertToSicResultINTEL
SubgroupAvcMceGetBestInterDistortionsINTEL
SubgroupAvcMceGetDefaultHighPenaltyCostTableINTEL
SubgroupAvcMceGetDefaultInterBaseMultiReferencePenaltyINTEL
SubgroupAvcMceGetDefaultInterDirectionPenaltyINTEL
SubgroupAvcMceGetDefaultInterMotionVectorCostTableINTEL
SubgroupAvcMceGetDefaultInterShapePenaltyINTEL
SubgroupAvcMceGetDefaultIntraChromaModeBasePenaltyINTEL
SubgroupAvcMceGetDefaultIntraLumaModePenaltyINTEL
SubgroupAvcMceGetDefaultIntraLumaShapePenaltyINTEL
SubgroupAvcMceGetDefaultLowPenaltyCostTableINTEL
SubgroupAvcMceGetDefaultMediumPenaltyCostTableINTEL
SubgroupAvcMceGetDefaultNonDcLumaIntraPenaltyINTEL
SubgroupAvcMceGetInterDirectionsINTEL
SubgroupAvcMceGetInterDistortionsINTEL
SubgroupAvcMceGetInterMajorShapeINTEL
SubgroupAvcMceGetInterMinorShapeINTEL
SubgroupAvcMceGetInterMotionVectorCountINTEL
SubgroupAvcMceGetInterReferenceIdsINTEL
SubgroupAvcMceGetInterReferenceInterlacedFieldPolaritiesINTEL
SubgroupAvcMceGetMotionVectorsINTEL
SubgroupAvcMceSetAcOnlyHaarINTEL
SubgroupAvcMceSetDualReferenceInterlacedFieldPolaritiesINTEL
SubgroupAvcMceSetInterBaseMultiReferencePenaltyINTEL
SubgroupAvcMceSetInterDirectionPenaltyINTEL
SubgroupAvcMceSetInterShapePenaltyINTEL
SubgroupAvcMceSetMotionVectorCostFunctionINTEL
SubgroupAvcMceSetSingleReferenceInterlacedFieldPolarityINTEL
SubgroupAvcMceSetSourceInterlacedFieldPolarityINTEL
SubgroupAvcMotionEstimationChromaINTEL
SubgroupAvcMotionEstimationINTEL
SubgroupAvcMotionEstimationIntraINTEL
SubgroupAvcRefConvertToMcePayloadINTEL
SubgroupAvcRefConvertToMceResultINTEL
SubgroupAvcRefEvaluateWithDualReferenceINTEL
SubgroupAvcRefEvaluateWithMultiReferenceINTEL
SubgroupAvcRefEvaluateWithMultiReferenceInterlacedINTEL
SubgroupAvcRefEvaluateWithSingleReferenceINTEL
SubgroupAvcRefSetBidirectionalMixDisableINTEL
SubgroupAvcRefSetBilinearFilterEnableINTEL
SubgroupAvcSicConfigureIpeLumaChromaINTEL
SubgroupAvcSicConfigureIpeLumaINTEL
SubgroupAvcSicConfigureSkcINTEL
SubgroupAvcSicConvertToMcePayloadINTEL
SubgroupAvcSicConvertToMceResultINTEL
SubgroupAvcSicEvaluateIpeINTEL
SubgroupAvcSicEvaluateWithDualReferenceINTEL
SubgroupAvcSicEvaluateWithMultiReferenceINTEL
SubgroupAvcSicEvaluateWithMultiReferenceInterlacedINTEL
SubgroupAvcSicEvaluateWithSingleReferenceINTEL
SubgroupAvcSicGetBestIpeChromaDistortionINTEL
SubgroupAvcSicGetBestIpeLumaDistortionINTEL
SubgroupAvcSicGetInterRawSadsINTEL
SubgroupAvcSicGetIpeChromaModeINTEL
SubgroupAvcSicGetIpeLumaShapeINTEL
SubgroupAvcSicGetMotionVectorMaskINTEL
SubgroupAvcSicGetPackedIpeLumaModesINTEL
SubgroupAvcSicGetPackedSkcLumaCountThresholdINTEL
SubgroupAvcSicGetPackedSkcLumaSumThresholdINTEL
SubgroupAvcSicInitializeINTEL
SubgroupAvcSicSetBilinearFilterEnableINTEL
SubgroupAvcSicSetBlockBasedRawSkipSadINTEL
SubgroupAvcSicSetIntraChromaModeCostFunctionINTEL
SubgroupAvcSicSetIntraLumaModeCostFunctionINTEL
SubgroupAvcSicSetIntraLumaShapePenaltyINTEL
SubgroupAvcSicSetSkcForwardTransformEnableINTEL
SubgroupBallotKHR
SubgroupBlockReadINTEL
SubgroupBlockWriteINTEL
SubgroupBufferBlockIOINTEL
SubgroupDispatch
SubgroupEqMask
SubgroupEqMaskKHR
SubgroupFirstInvocationKHR
SubgroupGeMask
SubgroupGeMaskKHR
SubgroupGtMask
SubgroupGtMaskKHR
SubgroupId
SubgroupImageBlockIOINTEL
SubgroupImageBlockReadINTEL
SubgroupImageBlockWriteINTEL
SubgroupImageMediaBlockIOINTEL
SubgroupImageMediaBlockReadINTEL
SubgroupImageMediaBlockWriteINTEL
SubgroupLeMask
SubgroupLeMaskKHR
SubgroupLocalInvocationId
SubgroupLtMask
SubgroupLtMaskKHR
SubgroupMaxSize
SubgroupMemory
SubgroupReadInvocationKHR
SubgroupShuffleDownINTEL
SubgroupShuffleINTEL
SubgroupShuffleUpINTEL
SubgroupShuffleXorINTEL
SubgroupSize
SubgroupUniformControlFlowKHR
SubgroupVoteKHR
SubgroupsPerWorkgroup
SubgroupsPerWorkgroupId
SubpassData
Subzero
Subzero_revision_unknown
Such variables must be identified with a Block decoration
Such variables must be identified with a Block or BufferBlock decoration
Such variables must be typed as OpTypeStruct
Sunday
Swap
SwiftShader Device
SwiftShader driver
SwiftShader.ini
SwiftShaderUUID
Switch
Switch header 
SwitchToFiber
SwitchToThread
SwizzleInvocationsAMD
SwizzleInvocationsMaskedAMD
Symbol external and defined: 
TRN_ZERO
TUUUU
Taichi
Taichi Graphics
Taichi Graphics Taichi
Tanh
Target <id> 
Target architecture attributes
Target architecture:
Target chooses baseline instruction set (default)
Target doesn't specify O0 lowering steps.
Target doesn't specify O1 lowering steps.
Target doesn't specify O2 lowering steps.
Target doesn't specify Om1 lowering steps.
Target memory access must not include MakePointerVisibleKHR
Target of Component decoration is invalid: must point to a Storage Class of Input(1) or Output(3). Found Storage Class 
Target of Component decoration must be a memory object declaration (a variable or a function parameter)
Target of NonWritable decoration is invalid: must point to a storage image, uniform block, 
Target of NonWritable decoration must be a memory object declaration (a variable or a function parameter)
Target operand <id> 
TaskCountNV
TaskEXT
TaskEXT execution model. 
TaskNV
TaskPayloadWorkgroupEXT
TaskPayloadWorkgroupEXT Storage Class is limited to TaskEXT and MeshKHR execution model
Tellusim
Tellusim Clay Shader Compiler
TerminateInvocation
TerminateOnFirstHitKHR
TerminateProcess
TerminateRayKHR
TerminateRayNV
TessCoord
TessLevelInner
TessLevelOuter
Tessellation
Tessellation execution model entry points can specify at most one of SpacingEqual, SpacingFractionalOdd or SpacingFractionalEven execution modes.
Tessellation execution model entry points can specify at most one of Triangles, Quads or Isolines execution modes.
Tessellation execution model entry points can specify at most one of VertexOrderCw or VertexOrderCcw execution modes.
TessellationControl
TessellationEvaluation
TessellationPointSize
Testing flag for -verbose=status
Text
TextureBlockMatch2QCOM
TextureBlockMatchQCOM
TextureBoxFilterQCOM
TextureSampleWeightedQCOM
The 
The 'False Label' operand for OpBranchConditional must be the ID of an OpLabel instruction
The 'True Label' operand for OpBranchConditional must be the ID of an OpLabel instruction
The <id> passed to 
The Base <id> 
The Component Type of Vector 1 must be the same as ResultType.
The Component Type of Vector 2 must be the same as ResultType.
The Fast Math Default operand is an invalid bitmask value
The Fast Math Default operand must be a non-specialization constant
The Fast Math Default operand must include AllowContract and AllowReassoc when AllowTransform is specified
The Fast Math Default operand must not include Fast
The LinkageAttributes Decoration (Linkage name: 
The Object type (Op
The Result Type must be the same as Composite type in Op
The Result Type of 
The Result Type of OpVectorShuffle must be
The Signedness in OpTypeInt must always be 0 when Kernel capability is used.
The Stride of 
The Structure's last member in 
The Structure's type in 
The Target Type operand must be a floating-point scalar type
The array member in 
The expected type is not a float type
The expected type is not a integer or float type
The expected type is not a integer type
The following forward referenced IDs have not been defined:\n
The function '
The given text is a nullptr
The high-order bits of a literal number in instruction <id> 
The integer width of 
The number of indexes in 
The number of indexes in Op
The result pointer storage class and base pointer storage class in 
The type in 
The type of 
The type of Stride of 
The type of Value must match the Result type
The type of Vector 1 must be OpTypeVector.
The type of Vector 2 must be OpTypeVector.
The types of Operand 1 and Operand 2 must match
There must be at most one object per Storage Class that can contain a structure type containing members decorated with BuiltIn, consumed per entry-point. Entry Point id 
There must be no more than one push constant block 
These variables must have DescriptorSet and Binding decorations specified
Thread<%.2d>
ThreadCount
Thursday
TileImageColorReadAccessEXT
TileImageDataEXT
TileImageDepthReadAccessEXT
TileImageEXT
TileImageStencilReadAccessEXT
TimeAMD
Tint Compiler
TlsAlloc
TlsFree
TlsGetValue
TlsSetValue
Too many OpFunctionParameters for 
Too many links
Too many open files
Too many open files in system
TornadoVM
TornadoVM Beehive SPIRV Toolkit
TraceMotionNV
TraceNV
TraceRayKHR
TraceRayMotionNV
TrackFinishWritingAMDX
TransformFeedback
Translate only the given functions
Transpose
Triangles
Tried to hash unsupported operand type : 
TrueDualPortINTEL
Trunc
TryAcquireSRWLockExclusive
Tuesday
Type
Type Id 
Type Qualifier
Type must be OpTypeHitObjectNV
Type of ExpectedValue operand of OpExpectKHR does not match the result type 
Type of Value operand of OpExpectKHR does not match the result type 
TypeAccelerationStructureKHR
TypeAccelerationStructureNV
TypeArray
TypeAvcImeDualReferenceStreaminINTEL
TypeAvcImePayloadINTEL
TypeAvcImeResultDualReferenceStreamoutINTEL
TypeAvcImeResultINTEL
TypeAvcImeResultSingleReferenceStreamoutINTEL
TypeAvcImeSingleReferenceStreaminINTEL
TypeAvcMcePayloadINTEL
TypeAvcMceResultINTEL
TypeAvcRefPayloadINTEL
TypeAvcRefResultINTEL
TypeAvcSicPayloadINTEL
TypeAvcSicResultINTEL
TypeBool
TypeBufferSurfaceINTEL
TypeCooperativeMatrixKHR
TypeCooperativeMatrixNV
TypeDeviceEvent
TypeEvent
TypeFloat
TypeForwardPointer
TypeFunction
TypeHitObjectNV
TypeImage
TypeInt
TypeMatrix
TypeName must be an OpString
TypeNamedBarrier
TypeOpaque
TypePipe
TypePipeStorage
TypePointer
TypeQualifier must be a 32-bit unsigned integer OpConstant
TypeQueue
TypeRayQueryKHR
TypeReserveId
TypeRuntimeArray
TypeSampledImage
TypeSampler
TypeStruct
TypeStructContinuedINTEL
TypeVector
TypeVmeImageINTEL
TypeVoid
UA>N0Wl
UAddSatINTEL
UAverageINTEL
UAverageRoundedINTEL
UClamp
UConvert
UCountLeadingZerosINTEL
UCountTrailingZerosINTEL
UDiv
UDot
UDotAccSat
UDotAccSatKHR
UDotKHR
UGreaterThan
UGreaterThanEqual
ULessThan
ULessThanEqual
UMax
UMax3AMD
UMid3AMD
UMin
UMin3AMD
UMod
UMul32x16INTEL
UMulExtended
USAGE: 
USER32.dll
USMStorageClassesINTEL
USubSatINTEL
UTF-16LEUNICODE
UTF-8
UUUU
UUUUUU
UUUUUUUU
Unable to find a physical register for an infinite-weight live range (consider using -reg-reserve): 
UncachedINTEL
Undef
Underlying Types
Unexpected consumer type
Unexpected intrinsic
Unexpected memory ordering for AtomicFence
Unexpected memory ordering for AtomicLoad
Unexpected memory ordering for AtomicRMW
Unexpected memory ordering for AtomicStore
Unexpected operand type
Unexpected overflow in AssemblerBuffer::ExtendCapacity
Unexpected rematerializable register type
Unexpected size for LoadSubVector
Unexpected size for StoreSubVector
Unexpected vector type.
Unhandled inst type (opcode: %d) found outside function definition.
Unhandled operand kind in legalize()
UnhandledExceptionFilter
Uniform
Uniform OpVariable <id> 
Uniform and shader storage block variables must 
Uniform id '
UniformAndStorageBuffer16BitAccess
UniformAndStorageBuffer8BitAccess
UniformBufferArrayDynamicIndexing
UniformBufferArrayNonUniformIndexing
UniformBufferArrayNonUniformIndexingEXT
UniformConstant
UniformConstant OpVariable <id> 
UniformConstant id '
UniformDecoration
UniformId
UniformMemory
UniformTexelBufferArrayDynamicIndexing
UniformTexelBufferArrayDynamicIndexingEXT
UniformTexelBufferArrayNonUniformIndexing
UniformTexelBufferArrayNonUniformIndexingEXT
Union
Universal
Unknown
Unknown AtomicRMW operation
Unknown ExtInst
Unknown NonSemantic.ClspvReflection import version
Unknown SectionType
Unknown error
Unknown exception
Unknown register.
Unordered
UnormInt101010
UnormInt101010_2
UnormInt16
UnormInt24
UnormInt8
UnormShort555
UnormShort565
UnpackDouble2x32
UnpackHalf2x16
UnpackSnorm2x16
UnpackSnorm4x8
UnpackUnorm2x16
UnpackUnorm4x8
Unreachable
Unrecognized use/exclude registers:
Unroll
Unroll and DontUnroll loop controls must not both be specified
Unsigned
UnsignedChar
UnsignedInt16
UnsignedInt32
UnsignedInt8
UnsignedIntRaw10EXT
UnsignedIntRaw12EXT
Unspecified
UnstructuredLoopControlsINTEL
Unsupported 
Unsupported constant type: 
Unsupported target: 
UpdateProcThreadAttribute
Use all verbose options
Use all verbose options except 'regalloc,global_init'
Use of device scope with VulkanKHR memory model requires the 
UserSemantic
UserTypeGOOGLE
Using BuiltIn 
Using a 16-bit floating point 
Using a 16-bit integer type requires the Int16 capability, or an extension that explicitly enables 16-bit integers.
Using a 64-bit floating point 
Using a 64-bit integer type requires the Int64 capability.
Using an 8-bit integer type requires the Int8 capability, or an extension that explicitly enables 8-bit integers.
Using image/sampler with OpSelect requires capability 
Using pointers with OpPhi requires capability 
Using pointers with OpSelect requires capability 
VKD3D Shader Compiler
VK_EXT_4444_formats
VK_EXT_blend_operation_advanced
VK_EXT_custom_border_color
VK_EXT_debug_utils
VK_EXT_depth_clip_control
VK_EXT_depth_clip_enable
VK_EXT_depth_range_unrestricted
VK_EXT_descriptor_indexing
VK_EXT_extended_dynamic_state
VK_EXT_external_memory_host
VK_EXT_graphics_pipeline_library
VK_EXT_headless_surface
VK_EXT_host_image_copy
VK_EXT_host_query_reset
VK_EXT_image_robustness
VK_EXT_inline_uniform_block
VK_EXT_line_rasterization
VK_EXT_load_store_op_none
VK_EXT_pipeline_creation_cache_control
VK_EXT_pipeline_creation_feedback
VK_EXT_pipeline_robustness
VK_EXT_primitive_topology_list_restart
VK_EXT_private_data
VK_EXT_provoking_vertex
VK_EXT_queue_family_foreign
VK_EXT_rasterization_order_attachment_access
VK_EXT_scalar_block_layout
VK_EXT_separate_stencil_usage
VK_EXT_shader_demote_to_helper_invocation
VK_EXT_shader_stencil_export
VK_EXT_subgroup_size_control
VK_EXT_surface_maintenance1
VK_EXT_swapchain_maintenance1
VK_EXT_tooling_info
VK_EXT_vertex_input_dynamic_state
VK_GOOGLE_decorate_string
VK_GOOGLE_hlsl_functionality1
VK_GOOGLE_user_type
VK_KHR_bind_memory2
VK_KHR_buffer_device_address
VK_KHR_copy_commands2
VK_KHR_create_renderpass2
VK_KHR_dedicated_allocation
VK_KHR_depth_stencil_resolve
VK_KHR_descriptor_update_template
VK_KHR_device_group
VK_KHR_device_group_creation
VK_KHR_draw_indirect_count
VK_KHR_driver_properties
VK_KHR_dynamic_rendering
VK_KHR_external_fence
VK_KHR_external_fence_capabilities
VK_KHR_external_memory
VK_KHR_external_memory_capabilities
VK_KHR_external_semaphore
VK_KHR_external_semaphore_capabilities
VK_KHR_format_feature_flags2
VK_KHR_get_memory_requirements2
VK_KHR_get_physical_device_properties2
VK_KHR_get_surface_capabilities2
VK_KHR_global_priority
VK_KHR_image_format_list
VK_KHR_imageless_framebuffer
VK_KHR_maintenance1
VK_KHR_maintenance2
VK_KHR_maintenance3
VK_KHR_maintenance4
VK_KHR_multiview
VK_KHR_pipeline_library
VK_KHR_relaxed_block_layout
VK_KHR_sampler_mirror_clamp_to_edge
VK_KHR_sampler_ycbcr_conversion
VK_KHR_separate_depth_stencil_layouts
VK_KHR_shader_float_controls
VK_KHR_shader_integer_dot_product
VK_KHR_shader_non_semantic_info
VK_KHR_shader_subgroup_extended_types
VK_KHR_shader_terminate_invocation
VK_KHR_spirv_1_4
VK_KHR_storage_buffer_storage_class
VK_KHR_surface
VK_KHR_swapchain
VK_KHR_swapchain_mutable_format
VK_KHR_synchronization2
VK_KHR_timeline_semaphore
VK_KHR_uniform_buffer_standard_layout
VK_KHR_vulkan_memory_model
VK_KHR_win32_surface
VK_KHR_zero_initialize_workgroup_memory
Validation failed after pass 
Value
Value Unknown
Value must be a 4-component unsigned integer vector
Value must be a scalar or vector of integer, floating-point, or boolean type
Value operand of OpAssumeTrueKHR must be a boolean scalar
Valve
Variable
Variable declarations that include initializers must have 
Variable decorated with Invariant must only be identified with the Input or Output storage class in Vulkan environment.
Variable must be decorated with a location
Variable struct member decorated with Invariant must only be identified with the Input or Output storage class in Vulkan environment.
VariableLengthArrayINTEL
VariablePointers
VariablePointers or VariablePointersStorageBuffer
VariablePointersStorageBuffer
Variables can not have a function[7] storage class outside of a function
Variables identified with the StorageBuffer storage class are used to access transparent buffer backed resources. Such variables must be typed as OpTypeStruct, or an array of this type
Variables identified with the Uniform storage class are 
Variables identified with the UniformConstant storage class 
Variables must have a function[7] storage class inside of a function
VecTypeHint
Vector Count
Vector Type
Vector access is out of bounds, vector size is 
Vector16
VectorAnyINTEL
VectorComputeCallableFunctionINTEL
VectorComputeFunctionINTEL
VectorComputeINTEL
VectorComputeVariableINTEL
VectorExtractDynamic
VectorInsertDynamic
VectorShuffle
VectorTimesMatrix
VectorTimesScalar
VerSetConditionMask
Verbose options (can be comma-separated):
VerifyVersionInfoW
Version
Version 
Vertex
Vertex Count must be a 32-bit unsigned int scalar
VertexId
VertexIndex
VertexOrderCcw
VertexOrderCw
VertexRoutine_%0.8X
Vertical2Pixels
Vertical4Pixels
ViewIndex
ViewportIndex
ViewportMaskNV
ViewportMaskPerViewNV
ViewportRelativeNV
VirtualAlloc
VirtualFree
VirtualProtect
VmeImageINTEL
Volatile
Volatile mask setting must match for Equal and Unequal memory semantics
VolatileTexel
VolatileTexelKHR
VolatileType
Vulkan
Vulkan spec allows BuiltIn 
Vulkan spec allows BuiltIn HelperInvocation to be only used for variables with Input storage class. 
Vulkan spec allows BuiltIn HelperInvocation to be used only with Fragment execution model. 
Vulkan spec allows BuiltIn InvocationId to be only used for variables with Input storage class. 
Vulkan spec allows BuiltIn InvocationId to be used only with TessellationControl or Geometry execution models. 
Vulkan spec allows BuiltIn PatchVertices to be only used for variables with Input storage class. 
Vulkan spec allows BuiltIn PatchVertices to be used only with TessellationControl or TessellationEvaluation execution models. 
Vulkan spec allows BuiltIn PointCoord to be only used for variables with Input storage class. 
Vulkan spec allows BuiltIn PointCoord to be used only with Fragment execution model. 
Vulkan spec allows BuiltIn PointSize to be only used for variables with Input or Output storage class. 
Vulkan spec allows BuiltIn PointSize to be used only with Vertex, TessellationControl, TessellationEvaluation or Geometry execution models. 
Vulkan spec allows BuiltIn Position to be only used for variables with Input or Output storage class. 
Vulkan spec allows BuiltIn Position to be used only with Vertex, TessellationControl, TessellationEvaluation or Geometry execution models. 
Vulkan spec allows BuiltIn PrimitiveId to be only used for variables with Input or Output storage class. 
Vulkan spec allows BuiltIn PrimitiveId to be used only with Fragment, TessellationControl, TessellationEvaluation, Geometry, MeshNV, MeshEXT, IntersectionKHR, AnyHitKHR, and ClosestHitKHR execution models. 
Vulkan spec allows BuiltIn SampleId to be only used for variables with Input storage class. 
Vulkan spec allows BuiltIn SampleId to be used only with Fragment execution model. 
Vulkan spec allows BuiltIn SampleMask to be only used for variables with Input or Output storage class. 
Vulkan spec allows BuiltIn SampleMask to be used only with Fragment execution model. 
Vulkan spec allows BuiltIn SamplePosition to be only used for variables with Input storage class. 
Vulkan spec allows BuiltIn SamplePosition to be used only with Fragment execution model. 
Vulkan spec allows BuiltIn TessCoord to be only used for variables with Input storage class. 
Vulkan spec allows BuiltIn TessCoord to be used only with TessellationEvaluation execution model. 
Vulkan spec disallows OpAtomicLoad with Memory Semantics Release, AcquireRelease and SequentiallyConsistent
Vulkan spec disallows OpAtomicStore with Memory Semantics Acquire, AcquireRelease and SequentiallyConsistent
Vulkan spec does not allow BuiltIn 
Vulkan spec doesn't allow BuiltIn ClipDistance/CullDistance to be used for variables with Input storage class if execution model is MeshEXT.
Vulkan spec doesn't allow BuiltIn ClipDistance/CullDistance to be used for variables with Input storage class if execution model is MeshNV.
Vulkan spec doesn't allow BuiltIn ClipDistance/CullDistance to be used for variables with Input storage class if execution model is Vertex.
Vulkan spec doesn't allow BuiltIn ClipDistance/CullDistance to be used for variables with Output storage class if execution model is Fragment.
Vulkan spec doesn't allow BuiltIn Layer and ViewportIndex to be used for variables with Input storage class if execution model is Vertex, TessellationEvaluation, Geometry, MeshNV or MeshEXT.
Vulkan spec doesn't allow BuiltIn Layer and ViewportIndex to be used for variables with Output storage class if execution model is Fragment.
Vulkan spec doesn't allow BuiltIn PointSize to be used for variables with Input storage class if execution model is Vertex.
Vulkan spec doesn't allow BuiltIn Position to be used for variables with Input storage class if execution model is MeshEXT.
Vulkan spec doesn't allow BuiltIn Position to be used for variables with Input storage class if execution model is MeshNV.
Vulkan spec doesn't allow BuiltIn Position to be used for variables with Input storage class if execution model is Vertex.
Vulkan spec doesn't allow BuiltIn PrimitiveId to be used for variables with Output storage class if execution model is AnyHitKHR.
Vulkan spec doesn't allow BuiltIn PrimitiveId to be used for variables with Output storage class if execution model is ClosestHitKHR.
Vulkan spec doesn't allow BuiltIn PrimitiveId to be used for variables with Output storage class if execution model is Fragment.
Vulkan spec doesn't allow BuiltIn PrimitiveId to be used for variables with Output storage class if execution model is IntersectionKHR.
Vulkan spec doesn't allow BuiltIn PrimitiveId to be used for variables with Output storage class if execution model is TessellationControl.
Vulkan spec doesn't allow BuiltIn PrimitiveId to be used for variables with Output storage class if execution model is TessellationEvaluation.
Vulkan spec doesn't allow BuiltIn VertexId to be used.
Vulkan spec doesn't allow TessLevelOuter/TessLevelInner to be used for variables with Input storage class if execution model is TessellationControl.
Vulkan spec doesn't allow TessLevelOuter/TessLevelInner to be used for variables with Output storage class if execution model is TessellationEvaluation.
Vulkan spec requires BuiltIn WorkgroupSize to be a constant. 
VulkanKHR
VulkanMemoryModel
VulkanMemoryModelDeviceScope
VulkanMemoryModelDeviceScopeKHR
VulkanMemoryModelDeviceScopeKHR capability
VulkanMemoryModelKHR
VulkanMemoryModelKHR capability must only be specified if the VulkanKHR memory model is used.
W3C WebGPU Group
W3C WebGPU Group WHLSL Shader Translator
WGSL
WHLSL Shader Translator
WRAP
WaNd?
WaitForSingleObject
WaitForSingleObjectEx
WaitKernel
WaitWorkGroup
Wak>E
WakeAllConditionVariable
WakeConditionVariable
WarpIDARM
WarpIDNV
WarpMaxIDARM
WarpsPerSMNV
WebAssembly builder
Wednesday
WeightTextureQCOM
When BuiltIn decoration is applied to a structure-type member, 
When declaring WorkgroupMemoryExplicitLayoutKHR, either all or none of the Workgroup Storage Class variables in the entry point interface must point to struct types decorated with Block.  Entry point id 
When declaring WorkgroupMemoryExplicitLayoutKHR, if more than one Workgroup Storage Class variable in the entry point interface point to a type decorated with Block, all of them must be decorated with Aliased. Entry point id 
WideCharToMultiByte
Wine
Wine VKD3D Shader Compiler
WordsizeINTEL
WorkDim
Workgroup
Workgroup Memory Scope can't be used with TessellationControl using GLSL450 Memory Model
Workgroup Memory Scope is limited to MeshNV, TaskNV, MeshEXT, TaskEXT, TessellationControl, and GLCompute execution model
Workgroup Storage Class variables can't be decorated with Block unless declaring the WorkgroupMemoryExplicitLayoutKHR capability.
Workgroup and Subgroup
Workgroup storage class pointer requires VariablePointers capability to be specified
Workgroup, CrossWorkgroup, Generic, Image or StorageBuffer 
WorkgroupId
WorkgroupMemory
WorkgroupMemoryExplicitLayout16BitAccessKHR
WorkgroupMemoryExplicitLayout8BitAccessKHR
WorkgroupMemoryExplicitLayoutKHR
WorkgroupSize
WorldRayDirectionKHR
WorldRayDirectionNV
WorldRayOriginKHR
WorldRayOriginNV
WorldToObjectKHR
WorldToObjectNV
WriteBackINTEL
WriteConsoleW
WriteFile
WriteINTEL
WriteInvocationAMD
WriteOnly
WritePackedPrimitiveIndices4x8NV
WritePipe
WritePipeBlockingINTEL
WriteThroughINTEL
X must be a 32-bit unsigned integer OpConstant
X-LEGEND
X-LEGEND Mesa-IR/SPIR-V Translator
X/4B
X>0S
Xderef
Xenia
Xenia Emulator Microcode Translator
Xenia Xenia Emulator Microcode Translator
XfbBuffer
XfbStride
Y must be a 32-bit unsigned integer OpConstant
Y8a:
Y>kX>
Y>kX>M
Z must be a 32-bit unsigned integer OpConstant
Z>w_F
ZSq>
Z\>z8
ZeroExtend
Zext
Zig Compiler
Zig Software Foundation
Zig Software Foundation Zig Compiler
[*ncd>0
[0;1;30m
[0;1;31m
[0;1;32m
[0;1;33m
[0;1;34m
[0;1;35m
[0;1;36m
[0;1;37m
[0;1;40m
[0;1;41m
[0;1;42m
[0;1;43m
[0;1;44m
[0;1;45m
[0;1;46m
[0;1;47m
[0;30m
[0;31m
[0;32m
[0;33m
[0;34m
[0;35m
[0;36m
[0;37m
[0;40m
[0;41m
[0;42m
[0;43m
[0;44m
[0;45m
[0;46m
[0;47m
[VUID-BaryCoordKHR-BaryCoordKHR-04154] 
[VUID-BaryCoordKHR-BaryCoordKHR-04155] 
[VUID-BaryCoordKHR-BaryCoordKHR-04156] 
[VUID-BaryCoordNoPerspKHR-BaryCoordNoPerspKHR-04160] 
[VUID-BaryCoordNoPerspKHR-BaryCoordNoPerspKHR-04161] 
[VUID-BaryCoordNoPerspKHR-BaryCoordNoPerspKHR-04162] 
[VUID-BaseInstance-BaseInstance-04181] 
[VUID-BaseInstance-BaseInstance-04182] 
[VUID-BaseInstance-BaseInstance-04183] 
[VUID-BaseVertex-BaseVertex-04184] 
[VUID-BaseVertex-BaseVertex-04185] 
[VUID-BaseVertex-BaseVertex-04186] 
[VUID-ClipDistance-ClipDistance-04187] 
[VUID-ClipDistance-ClipDistance-04188] 
[VUID-ClipDistance-ClipDistance-04189] 
[VUID-ClipDistance-ClipDistance-04190] 
[VUID-ClipDistance-ClipDistance-04191] 
[VUID-CullDistance-CullDistance-04196] 
[VUID-CullDistance-CullDistance-04197] 
[VUID-CullDistance-CullDistance-04198] 
[VUID-CullDistance-CullDistance-04199] 
[VUID-CullDistance-CullDistance-04200] 
[VUID-CullMaskKHR-CullMaskKHR-06735] 
[VUID-CullMaskKHR-CullMaskKHR-06736] 
[VUID-CullMaskKHR-CullMaskKHR-06737] 
[VUID-DeviceIndex-DeviceIndex-04205] 
[VUID-DeviceIndex-DeviceIndex-04206] 
[VUID-DrawIndex-DrawIndex-04207] 
[VUID-DrawIndex-DrawIndex-04208] 
[VUID-DrawIndex-DrawIndex-04209] 
[VUID-FragCoord-FragCoord-04210] 
[VUID-FragCoord-FragCoord-04211] 
[VUID-FragCoord-FragCoord-04212] 
[VUID-FragDepth-FragDepth-04213] 
[VUID-FragDepth-FragDepth-04214] 
[VUID-FragDepth-FragDepth-04215] 
[VUID-FragDepth-FragDepth-04216] 
[VUID-FragInvocationCountEXT-FragInvocationCountEXT-04217] 
[VUID-FragInvocationCountEXT-FragInvocationCountEXT-04218] 
[VUID-FragInvocationCountEXT-FragInvocationCountEXT-04219] 
[VUID-FragSizeEXT-FragSizeEXT-04220] 
[VUID-FragSizeEXT-FragSizeEXT-04221] 
[VUID-FragSizeEXT-FragSizeEXT-04222] 
[VUID-FragStencilRefEXT-FragStencilRefEXT-04223] 
[VUID-FragStencilRefEXT-FragStencilRefEXT-04224] 
[VUID-FragStencilRefEXT-FragStencilRefEXT-04225] 
[VUID-FrontFacing-FrontFacing-04229] 
[VUID-FrontFacing-FrontFacing-04230] 
[VUID-FrontFacing-FrontFacing-04231] 
[VUID-FullyCoveredEXT-FullyCoveredEXT-04232] 
[VUID-FullyCoveredEXT-FullyCoveredEXT-04233] 
[VUID-FullyCoveredEXT-FullyCoveredEXT-04234] 
[VUID-GlobalInvocationId-GlobalInvocationId-04236] 
[VUID-GlobalInvocationId-GlobalInvocationId-04237] 
[VUID-GlobalInvocationId-GlobalInvocationId-04238] 
[VUID-HelperInvocation-HelperInvocation-04239] 
[VUID-HelperInvocation-HelperInvocation-04240] 
[VUID-HelperInvocation-HelperInvocation-04241] 
[VUID-HitKindKHR-HitKindKHR-04242] 
[VUID-HitKindKHR-HitKindKHR-04243] 
[VUID-HitKindKHR-HitKindKHR-04244] 
[VUID-HitTNV-HitTNV-04245] 
[VUID-HitTNV-HitTNV-04246] 
[VUID-HitTNV-HitTNV-04247] 
[VUID-IncomingRayFlagsKHR-IncomingRayFlagsKHR-04248] 
[VUID-IncomingRayFlagsKHR-IncomingRayFlagsKHR-04249] 
[VUID-IncomingRayFlagsKHR-IncomingRayFlagsKHR-04250] 
[VUID-InstanceCustomIndexKHR-InstanceCustomIndexKHR-04251] 
[VUID-InstanceCustomIndexKHR-InstanceCustomIndexKHR-04252] 
[VUID-InstanceCustomIndexKHR-InstanceCustomIndexKHR-04253] 
[VUID-InstanceId-InstanceId-04254] 
[VUID-InstanceId-InstanceId-04255] 
[VUID-InstanceId-InstanceId-04256] 
[VUID-InstanceIndex-InstanceIndex-04263] 
[VUID-InstanceIndex-InstanceIndex-04264] 
[VUID-InstanceIndex-InstanceIndex-04265] 
[VUID-InvocationId-InvocationId-04257] 
[VUID-InvocationId-InvocationId-04258] 
[VUID-InvocationId-InvocationId-04259] 
[VUID-LaunchIdKHR-LaunchIdKHR-04266] 
[VUID-LaunchIdKHR-LaunchIdKHR-04267] 
[VUID-LaunchIdKHR-LaunchIdKHR-04268] 
[VUID-LaunchSizeKHR-LaunchSizeKHR-04269] 
[VUID-LaunchSizeKHR-LaunchSizeKHR-04270] 
[VUID-LaunchSizeKHR-LaunchSizeKHR-04271] 
[VUID-Layer-Layer-04272] 
[VUID-Layer-Layer-04273] 
[VUID-Layer-Layer-04274] 
[VUID-Layer-Layer-04275] 
[VUID-Layer-Layer-04276] 
[VUID-LocalInvocationId-LocalInvocationId-04281] 
[VUID-LocalInvocationId-LocalInvocationId-04282] 
[VUID-LocalInvocationId-LocalInvocationId-04283] 
[VUID-NumSubgroups-NumSubgroups-04293] 
[VUID-NumSubgroups-NumSubgroups-04294] 
[VUID-NumSubgroups-NumSubgroups-04295] 
[VUID-NumWorkgroups-NumWorkgroups-04296] 
[VUID-NumWorkgroups-NumWorkgroups-04297] 
[VUID-NumWorkgroups-NumWorkgroups-04298] 
[VUID-ObjectRayDirectionKHR-ObjectRayDirectionKHR-04299] 
[VUID-ObjectRayDirectionKHR-ObjectRayDirectionKHR-04300] 
[VUID-ObjectRayDirectionKHR-ObjectRayDirectionKHR-04301] 
[VUID-ObjectRayOriginKHR-ObjectRayOriginKHR-04302] 
[VUID-ObjectRayOriginKHR-ObjectRayOriginKHR-04303] 
[VUID-ObjectRayOriginKHR-ObjectRayOriginKHR-04304] 
[VUID-ObjectToWorldKHR-ObjectToWorldKHR-04305] 
[VUID-ObjectToWorldKHR-ObjectToWorldKHR-04306] 
[VUID-ObjectToWorldKHR-ObjectToWorldKHR-04307] 
[VUID-PatchVertices-PatchVertices-04308] 
[VUID-PatchVertices-PatchVertices-04309] 
[VUID-PatchVertices-PatchVertices-04310] 
[VUID-PointCoord-PointCoord-04311] 
[VUID-PointCoord-PointCoord-04312] 
[VUID-PointCoord-PointCoord-04313] 
[VUID-PointSize-PointSize-04314] 
[VUID-PointSize-PointSize-04315] 
[VUID-PointSize-PointSize-04316] 
[VUID-PointSize-PointSize-04317] 
[VUID-Position-Position-04318] 
[VUID-Position-Position-04319] 
[VUID-Position-Position-04320] 
[VUID-Position-Position-04321] 
[VUID-PrimitiveId-PrimitiveId-04330] 
[VUID-PrimitiveId-PrimitiveId-04334] 
[VUID-PrimitiveId-PrimitiveId-04337] 
[VUID-PrimitiveLineIndicesEXT-PrimitiveLineIndicesEXT-07047] 
[VUID-PrimitiveLineIndicesEXT-PrimitiveLineIndicesEXT-07049] 
[VUID-PrimitiveLineIndicesEXT-PrimitiveLineIndicesEXT-07050] 
[VUID-PrimitivePointIndicesEXT-PrimitivePointIndicesEXT-07041] 
[VUID-PrimitivePointIndicesEXT-PrimitivePointIndicesEXT-07043] 
[VUID-PrimitivePointIndicesEXT-PrimitivePointIndicesEXT-07044] 
[VUID-PrimitiveShadingRateKHR-PrimitiveShadingRateKHR-04484] 
[VUID-PrimitiveShadingRateKHR-PrimitiveShadingRateKHR-04485] 
[VUID-PrimitiveShadingRateKHR-PrimitiveShadingRateKHR-04486] 
[VUID-PrimitiveTriangleIndicesEXT-PrimitiveTriangleIndicesEXT-07053] 
[VUID-PrimitiveTriangleIndicesEXT-PrimitiveTriangleIndicesEXT-07055] 
[VUID-PrimitiveTriangleIndicesEXT-PrimitiveTriangleIndicesEXT-07056] 
[VUID-RayGeometryIndexKHR-RayGeometryIndexKHR-04345] 
[VUID-RayGeometryIndexKHR-RayGeometryIndexKHR-04346] 
[VUID-RayGeometryIndexKHR-RayGeometryIndexKHR-04347] 
[VUID-RayTmaxKHR-RayTmaxKHR-04348] 
[VUID-RayTmaxKHR-RayTmaxKHR-04349] 
[VUID-RayTmaxKHR-RayTmaxKHR-04350] 
[VUID-RayTminKHR-RayTminKHR-04351] 
[VUID-RayTminKHR-RayTminKHR-04352] 
[VUID-RayTminKHR-RayTminKHR-04353] 
[VUID-SampleId-SampleId-04354] 
[VUID-SampleId-SampleId-04355] 
[VUID-SampleId-SampleId-04356] 
[VUID-SampleMask-SampleMask-04357] 
[VUID-SampleMask-SampleMask-04358] 
[VUID-SampleMask-SampleMask-04359] 
[VUID-SamplePosition-SamplePosition-04360] 
[VUID-SamplePosition-SamplePosition-04361] 
[VUID-SamplePosition-SamplePosition-04362] 
[VUID-ShadingRateKHR-ShadingRateKHR-04490] 
[VUID-ShadingRateKHR-ShadingRateKHR-04491] 
[VUID-ShadingRateKHR-ShadingRateKHR-04492] 
[VUID-StandaloneSpirv-Base-04781] 
[VUID-StandaloneSpirv-Base-07650] 
[VUID-StandaloneSpirv-Base-07651] 
[VUID-StandaloneSpirv-Base-07652] 
[VUID-StandaloneSpirv-CallableDataKHR-04704] 
[VUID-StandaloneSpirv-Component-04920] 
[VUID-StandaloneSpirv-Component-04921] 
[VUID-StandaloneSpirv-Component-04922] 
[VUID-StandaloneSpirv-Component-04923] 
[VUID-StandaloneSpirv-Component-04924] 
[VUID-StandaloneSpirv-Component-07703] 
[VUID-StandaloneSpirv-DescriptorSet-06491] 
[VUID-StandaloneSpirv-ExecutionModel-07320] 
[VUID-StandaloneSpirv-FPRoundingMode-04675] 
[VUID-StandaloneSpirv-Flat-04670] 
[VUID-StandaloneSpirv-Flat-04744] 
[VUID-StandaloneSpirv-Flat-06201] 
[VUID-StandaloneSpirv-Flat-06202] 
[VUID-StandaloneSpirv-GLSLShared-04669] 
[VUID-StandaloneSpirv-HitAttributeKHR-04701] 
[VUID-StandaloneSpirv-HitAttributeKHR-04702] 
[VUID-StandaloneSpirv-HitAttributeKHR-04703] 
[VUID-StandaloneSpirv-IncomingCallableDataKHR-04705] 
[VUID-StandaloneSpirv-IncomingCallableDataKHR-04706] 
[VUID-StandaloneSpirv-IncomingRayPayloadKHR-04699] 
[VUID-StandaloneSpirv-IncomingRayPayloadKHR-04700] 
[VUID-StandaloneSpirv-Input-06778] 
[VUID-StandaloneSpirv-Input-07290] 
[VUID-StandaloneSpirv-InputAttachmentIndex-06678] 
[VUID-StandaloneSpirv-Invariant-04677] 
[VUID-StandaloneSpirv-LocalSize-06426] 
[VUID-StandaloneSpirv-Location-04915] 
[VUID-StandaloneSpirv-Location-04916] 
[VUID-StandaloneSpirv-Location-04917] 
[VUID-StandaloneSpirv-Location-04918] 
[VUID-StandaloneSpirv-Location-04919] 
[VUID-StandaloneSpirv-Location-06672] 
[VUID-StandaloneSpirv-MeshEXT-07102] 
[VUID-StandaloneSpirv-None-04633] 
[VUID-StandaloneSpirv-None-04634] 
[VUID-StandaloneSpirv-None-04635] 
[VUID-StandaloneSpirv-None-04636] 
[VUID-StandaloneSpirv-None-04637] 
[VUID-StandaloneSpirv-None-04638] 
[VUID-StandaloneSpirv-None-04640] 
[VUID-StandaloneSpirv-None-04641] 
[VUID-StandaloneSpirv-None-04642] 
[VUID-StandaloneSpirv-None-04643] 
[VUID-StandaloneSpirv-None-04644] 
[VUID-StandaloneSpirv-None-04645] 
[VUID-StandaloneSpirv-None-04667] 
[VUID-StandaloneSpirv-None-04686] 
[VUID-StandaloneSpirv-None-07321] 
[VUID-StandaloneSpirv-Offset-04663] 
[VUID-StandaloneSpirv-OpAtomicLoad-04731] 
[VUID-StandaloneSpirv-OpAtomicStore-04730] 
[VUID-StandaloneSpirv-OpControlBarrier-04650] 
[VUID-StandaloneSpirv-OpControlBarrier-04682] 
[VUID-StandaloneSpirv-OpEntryPoint-06674] 
[VUID-StandaloneSpirv-OpEntryPoint-08721] 
[VUID-StandaloneSpirv-OpEntryPoint-08722] 
[VUID-StandaloneSpirv-OpGroupNonUniformBallotBitCount-04685] 
[VUID-StandaloneSpirv-OpImage-04777] 
[VUID-StandaloneSpirv-OpImageGather-04664] 
[VUID-StandaloneSpirv-OpImageQuerySizeLod-04659] 
[VUID-StandaloneSpirv-OpImageTexelPointer-04658] 
[VUID-StandaloneSpirv-OpMemoryBarrier-04732] 
[VUID-StandaloneSpirv-OpMemoryBarrier-04733] 
[VUID-StandaloneSpirv-OpReadClockKHR-04652] 
[VUID-StandaloneSpirv-OpTypeForwardPointer-04711] 
[VUID-StandaloneSpirv-OpTypeImage-04656] 
[VUID-StandaloneSpirv-OpTypeImage-04657] 
[VUID-StandaloneSpirv-OpTypeImage-06214] 
[VUID-StandaloneSpirv-OpTypeImage-09638] 
[VUID-StandaloneSpirv-OpTypeRuntimeArray-04680] 
[VUID-StandaloneSpirv-OpTypeSampledImage-06671] 
[VUID-StandaloneSpirv-OpVariable-04651] 
[VUID-StandaloneSpirv-OpVariable-04734] 
[VUID-StandaloneSpirv-OpVariable-06673] 
[VUID-StandaloneSpirv-OriginLowerLeft-04653] 
[VUID-StandaloneSpirv-PerVertexKHR-06777] 
[VUID-StandaloneSpirv-PhysicalStorageBuffer64-04708] 
[VUID-StandaloneSpirv-PhysicalStorageBuffer64-04710] 
[VUID-StandaloneSpirv-PixelCenterInteger-04654] 
[VUID-StandaloneSpirv-Pointer-08973] 
[VUID-StandaloneSpirv-PushConstant-06675] 
[VUID-StandaloneSpirv-PushConstant-06808] 
[VUID-StandaloneSpirv-RayPayloadKHR-04698] 
[VUID-StandaloneSpirv-Result-04780] 
[VUID-StandaloneSpirv-ShaderRecordBufferKHR-07119] 
[VUID-StandaloneSpirv-SubgroupVoteKHR-07951] 
[VUID-StandaloneSpirv-Uniform-06676] 
[VUID-StandaloneSpirv-Uniform-06807] 
[VUID-StandaloneSpirv-Uniform-06925] 
[VUID-StandaloneSpirv-UniformConstant-04655] 
[VUID-StandaloneSpirv-UniformConstant-06677] 
[VUID-SubgroupEqMask-SubgroupEqMask-04370] 
[VUID-SubgroupEqMask-SubgroupEqMask-04371] 
[VUID-SubgroupGeMask-SubgroupGeMask-04372] 
[VUID-SubgroupGeMask-SubgroupGeMask-04373] 
[VUID-SubgroupGtMask-SubgroupGtMask-04374] 
[VUID-SubgroupGtMask-SubgroupGtMask-04375] 
[VUID-SubgroupId-SubgroupId-04367] 
[VUID-SubgroupId-SubgroupId-04368] 
[VUID-SubgroupId-SubgroupId-04369] 
[VUID-SubgroupLeMask-SubgroupLeMask-04376] 
[VUID-SubgroupLeMask-SubgroupLeMask-04377] 
[VUID-SubgroupLocalInvocationId-SubgroupLocalInvocationId-04380] 
[VUID-SubgroupLocalInvocationId-SubgroupLocalInvocationId-04381] 
[VUID-SubgroupLtMask-SubgroupLtMask-04378] 
[VUID-SubgroupLtMask-SubgroupLtMask-04379] 
[VUID-SubgroupSize-SubgroupSize-04382] 
[VUID-SubgroupSize-SubgroupSize-04383] 
[VUID-TessCoord-TessCoord-04387] 
[VUID-TessCoord-TessCoord-04388] 
[VUID-TessCoord-TessCoord-04389] 
[VUID-TessLevelInner-TessLevelInner-04394] 
[VUID-TessLevelInner-TessLevelInner-04395] 
[VUID-TessLevelInner-TessLevelInner-04396] 
[VUID-TessLevelInner-TessLevelInner-04397] 
[VUID-TessLevelOuter-TessLevelOuter-04390] 
[VUID-TessLevelOuter-TessLevelOuter-04391] 
[VUID-TessLevelOuter-TessLevelOuter-04392] 
[VUID-TessLevelOuter-TessLevelOuter-04393] 
[VUID-VertexIndex-VertexIndex-04398] 
[VUID-VertexIndex-VertexIndex-04399] 
[VUID-VertexIndex-VertexIndex-04400] 
[VUID-ViewIndex-ViewIndex-04401] 
[VUID-ViewIndex-ViewIndex-04402] 
[VUID-ViewIndex-ViewIndex-04403] 
[VUID-ViewportIndex-ViewportIndex-04404] 
[VUID-ViewportIndex-ViewportIndex-04405] 
[VUID-ViewportIndex-ViewportIndex-04406] 
[VUID-ViewportIndex-ViewportIndex-04407] 
[VUID-ViewportIndex-ViewportIndex-04408] 
[VUID-WorkgroupId-WorkgroupId-04422] 
[VUID-WorkgroupId-WorkgroupId-04423] 
[VUID-WorkgroupId-WorkgroupId-04424] 
[VUID-WorkgroupSize-WorkgroupSize-04425] 
[VUID-WorkgroupSize-WorkgroupSize-04426] 
[VUID-WorkgroupSize-WorkgroupSize-04427] 
[VUID-WorldRayDirectionKHR-WorldRayDirectionKHR-04428] 
[VUID-WorldRayDirectionKHR-WorldRayDirectionKHR-04429] 
[VUID-WorldRayDirectionKHR-WorldRayDirectionKHR-04430] 
[VUID-WorldRayOriginKHR-WorldRayOriginKHR-04431] 
[VUID-WorldRayOriginKHR-WorldRayOriginKHR-04432] 
[VUID-WorldRayOriginKHR-WorldRayOriginKHR-04433] 
[VUID-WorldToObjectKHR-WorldToObjectKHR-04434] 
[VUID-WorldToObjectKHR-WorldToObjectKHR-04435] 
[VUID-WorldToObjectKHR-WorldToObjectKHR-04436] 
[aOni*{
\nStarting computeAddressOpt for instruction:\n  
\nh?oT
\nk>oB
\t9sv
\tJR>8o
\tcQr
\tkE>fvw
\vA03>A|
\vpx\r5
]u9g
^<V7w
^RfN>
_..\..\third_party\swiftshader\src\Vulkan\VkDevice.cpp
__Sz_bitcast_16xi1_i16
__Sz_bitcast_8xi1_i8
__Sz_bitcast_i16_16xi1
__Sz_bitcast_i8_8xi1
__Sz_fptosi_f32_i64
__Sz_fptosi_f64_i64
__Sz_fptoui_4xi32_f32
__Sz_fptoui_f32_i32
__Sz_fptoui_f32_i64
__Sz_fptoui_f64_i32
__Sz_fptoui_f64_i64
__Sz_revision
__Sz_sitofp_i64_f32
__Sz_sitofp_i64_f64
__Sz_uitofp_4xi32_4xf32
__Sz_uitofp_i32_f32
__Sz_uitofp_i32_f64
__Sz_uitofp_i64_f32
__Sz_uitofp_i64_f64
__based(
__cdecl
__clrcall
__cont
__divdi3
__divsi3
__eabi
__fastcall
__moddi3
__modsi3
__nacl_read_tp
__next_prime overflow
__pascal
__popcountdi2
__popcountsi2
__ptr64
__restrict
__stdcall
__swift_1
__swift_2
__swift_3
__thiscall
__thread_specific_ptr construction failed
__udivdi3
__udivsi3
__umoddi3
__umodsi3
__unaligned
__vectorcall
_arr_
_cabs
_f>PH
_hypot
_logb
_nextafter
_oD>Kg
_ptr_
_runtimearr_
_struct_
`?..\..\third_party\swiftshader\src\Pipeline\PixelProgram.cpp
`RTTI
`anonymous namespace'
`copy constructor closure'
`default constructor closure'
`dynamic atexit destructor for '
`dynamic initializer for '
`eh vector constructor iterator'
`eh vector copy constructor iterator'
`eh vector destructor iterator'
`eh vector vbase constructor iterator'
`eh vector vbase copy constructor iterator'
`local static guard'
`local static thread guard'
`local vftable constructor closure'
`local vftable'
`managed vector constructor iterator'
`managed vector copy constructor iterator'
`managed vector destructor iterator'
`omni callsig'
`placement delete closure'
`placement delete[] closure'
`scalar deleting destructor'
`string'
`typeof'
`udt returning'
`vbase destructor'
`vbtable'
`vcall'
`vector constructor iterator'
`vector copy constructor iterator'
`vector deleting destructor'
`vector destructor iterator'
`vector vbase constructor iterator'
`vector vbase copy constructor iterator'
`vftable'
`virtual displacement map'
a storage class of PhysicalStorageBuffer.
a6>r
abcdef
abcdefghijklmnopqrstuvwxyz
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789
accelerationStructureNV
access qualifier
acos
acosh
acospi
address family not supported
address in use
address not available
addressing model
addropt
aggressive-lea
all members of that structure type must also be decorated with 
allow-extern
allow-externally-defined-symbols
allow-iaca-marks
allow-pnacl-reader-error-recovery
allow-uninitialized-globals
already connected
also be decorated with a *Binding*.
and OpImageFetch
appear as the final member of an OpTypeStruct, thus cannot 
are used only as handles to refer to opaque resources. Such 
arm32
arm32 (same as arm)
arm64
as Result Type: 
ashr
asin
asinh
asinpi
asm-verbose
assume-ssa
at offset 
atan
atan2
atan2pi
atanh
atanpi
await
bad allocation
bad array new length
bad exception
bad message
bad_array_new_length was thrown in -fno-exceptions mode
bad_cast was thrown in -fno-exceptions mode
bad_function_call was thrown in -fno-exceptions mode
base
basic_string
be equal: 
be instantiated via OpVariable
be targeted by OpName, OpGroupDecorate, 
bitcode-as-text
bitcode-format
bits must be a 32-bit int scalar
bitselect
bitset test argument out of range
block <ID> 
body
bool
build-atts
build-on-read
built-in
but 
c>F2
c>v\tk
c?FA@s}
cannot compose log message
capability
case entry block
cbrt
ceil
cl::alias must have an cl::aliasopt(option) specified!
cl::alias must have argument name specified!
cl::alias must only have one cl::aliasopt(...) specified!
cl::location(x) specified more than once!
com1
com2
com3
com4
com5
com6
com7
com8
com9
combination.\n
combine-access-chains
combined (Vector1 + Vector2) size of 
component type
components
components as the first member
composite
condition_variable timed_wait failed
condition_variable wait failed
condition_variable::timed wait: mutex not locked
condition_variable::wait: mutex not locked
connection aborted
connection already in progress
connection refused
connection reset
containing OpTypeRuntimeArray must have storage class of 
contains an array with stride 
contains an array with stride 0
context-insensitive value
convert-local-access-chains
cooperative matrix layout
cooperative matrix operands
cooperative matrix use
copy-propagate-arrays
copysign
coroutine
corresponding member type of Result Type struct
cosf
cosh
cospi
cpool
createLoweredMove() unimplemented
cross
d8-t
d8L2
d?000000`?
dRL>
dddd, MMMM dd, yyyy
debug base type encoding
debug composite type
debug info flags
debug operation
debug type qualifier
declarations)
decoration
default-function-prefix
default-global-prefix
degrees
destination address required
destroy
device_event
dimensionality
disabled
distance
doMockBoundsCheck: Opnd contains index reg
does not strictly structurally dominate
does not structurally dominate
double
dump-strings
e+000
e>US
eF>t
eLK(w
eliminate-dead-branches
eliminate-dead-code-aggressive
eliminate-dead-functions
eliminate-dead-inserts
eliminate-local-single-block
eliminate-local-single-store
emit-revision
emitFileHeader for non-ELF
enable-block-profile
enable-sc
enabled
environment.
equal: 
er.DebugInfo.100NonSemantic.ShadNonSemantic.Shader.DebugInfo.100
erfc
event
execution mode
execution model
exit-success
exp10
exp2
expected Data to be a 32 or 64-bit float scalar
expected Data to be a 32 or 64-bit float vector
expected Data to be an int or float vector
expected Data to have 2, 3, 4, 8 or 16 components
expected Format data type to be 8-bit int
expected Format storage class to be UniformConstant
expected Hi and Lo operands to have the same number of components as Result Type
expected Hi and Lo operands to have the same type
expected Interpolant data type to be equal to Result Type
expected Interpolant storage class to be Input
expected Interpolant to be a pointer
expected Intersection ID to be a constant 32-bit int scalar
expected Nancode to be an int scalar or vector type
expected Nancode to have the same bit width as Result Type
expected Nancode to have the same number of components as Result Type
expected Offset to be a vector of 2 32-bit floats
expected Ptr data type to be int or float scalar or vector
expected Result Type matrix to have a Column Count of 4
expected Result Type matrix to have a Column Type of 3-component 32-bit float vectors
expected Result Type matrix to have a Column Type of 3-component 32-bit float vectors: 
expected Result Type to be 32-bit float 2-component vector type
expected Result Type to be 32-bit float 3-component vector type
expected Result Type to be 32-bit float scalar type
expected Result Type to be 32-bit int scalar type
expected Result Type to be 64-bit float scalar type
expected Result Type to be a 16 or 32-bit scalar or vector float type
expected Result Type to be a 32-bit float scalar 
expected Result Type to be a 32-bit float vector of size 2
expected Result Type to be a 32-bit float vector of size 4
expected Result Type to be a 32-bit int scalar or vector type
expected Result Type to be a 32-bit int type
expected Result Type to be a 32-bit int vector of size 2
expected Result Type to be a float scalar or vector type
expected Result Type to be a float scalar type
expected Result Type to be a float vector type
expected Result Type to be a scalar or a vector with 2, 3, 4, 8 or 16 components
expected Result Type to be a scalar or vector float type
expected Result Type to be a square matrix
expected Result Type to be a struct with two identical 
expected Result Type to be a struct with two members, 
expected Result Type to be an int or float scalar or vector type
expected Result Type to be an int or float vector type
expected Result Type to be an int scalar or vector type
expected Result Type to be bool scalar type
expected Result Type to have 2, 3, 4, 8 or 16 components
expected Result Type to have 2, 4, 8 or 16 components
expected Result Type to have 3 components
expected Result Type to have 3 or 4 components
expected Result Type to have no more than 4 components
expected Sample to be 32-bit integer
expected all operands to be int scalars or vectors
expected all operands to have the same bit width as 
expected all operands to have the same dimension as 
expected bit width of Result Type components to be 16, 32 or 64
expected bit width of components of Hi and Lo operands to be half of the bit width of components of Result Type
expected data type of the pointer to be a 32-bit int scalar or vector type
expected data type of the pointer to be equal to Result Type
expected data type of the pointer to have the same number of components as Result Type
expected index must be scalar integer
expected literal N to be equal to the number of components of Result Type
expected matrix type as Result Type
expected matrix type as Result Type: 
expected operand 
expected operand A type to be equal to Result Type
expected operand B type to be equal to Result Type
expected operand C to be an int scalar or vector
expected operand C to have the same bit width as Result Type
expected operand C to have the same number of components as Result Type
expected operand Child must be class or struct debug type
expected operand Eta to be a float scalar
expected operand Exp data type to be a 
expected operand Exp data type to have the same component 
expected operand Exp to be a 32-bit int scalar 
expected operand Exp to be a pointer
expected operand Exp to have the same component 
expected operand Format to be a pointer
expected operand I data type to be equal to Result Type
expected operand I to be a pointer
expected operand I to be of type equal to Result Type
expected operand Members 
expected operand N to be of type equal to Result Type
expected operand Num Elements to be of type size_t (
expected operand Offset to be of type size_t (
expected operand P component type to be equal to Result Type
expected operand P data type to be 16-bit float scalar
expected operand P data type to be equal to component type of Result Type
expected operand P data type to be equal to the type of operand Data components
expected operand P storage class to be Generic, CrossWorkgroup, Workgroup or Function
expected operand P storage class to be UniformConstant, Generic, CrossWorkgroup, Workgroup or Function
expected operand P to be a 32-bit int scalar
expected operand P to be a float scalar or vector
expected operand P to be a pointer
expected operand P to have no more than 4 components
expected operand P type to be equal to Result Type
expected operand P0 component type to be equal to 
expected operand P0 to be of float scalar or vector type
expected operand P0 to have no more than 4 components
expected operand P1 component type to be equal to 
expected operand P1 to be of float scalar or vector type
expected operand Parameters must be 
expected operand Parent must be class or struct debug type
expected operand Ptr storage class to be CrossWorkgroup
expected operand Ptr to be a pointer
expected operand Shuffle Mask components to have the same bit width as Result Type components
expected operand Shuffle Mask to be an int vector
expected operand Shuffle Mask to have the same number of components as Result Type
expected operand Target must be DebugTypeComposite 
expected operand V to be a 32-bit float vector of size 2
expected operand V to be a 32-bit float vector of size 4
expected operand V to be a 32-bit int vector of size 2
expected operand V to be a 64-bit float scalar
expected operand Variable must be a result id of OpVariable or OpConstant or DebugInfoNone
expected operand Variable must be a result id of OpVariable or OpFunctionParameter
expected operand X and Result Type to have equal component types
expected operand X component type to be equal to 
expected operand X component type to be equal to Result Type
expected operand X to be a float scalar or vector
expected operand X to be a square matrix
expected operand X to be an int or float vector
expected operand X to be of float scalar or vector type
expected operand X to have 2, 4, 8 or 16 components
expected operand X to have the same number of components as Result Type
expected operand X type to be equal to Result Type
expected operand X type to be equal to members of 
expected operand X type to be equal to the first member 
expected operand Y type to be equal to Result Type
expected operands P0 and P1 to be of the same type
expected operands P0 and P1 to have the same number of 
expected operands X and Y to be of the same type
expected result type must be a result id of 
expected storage class of the pointer to be Generic, CrossWorkgroup, Workgroup or Function
expected the exponent to be a 32-bit int scalar or vector
expected the exponent to have the same number of components as Result Type
expected the last operand to be a pointer
expected type of operand X to be equal to Result Type
expected type of operand Y to be equal to Result Type
expected types of all operands to be equal to Result Type
expm1
extension instruction number
externalize
fD>b
fGa>
fWi?
fabs
fadd
false
fast_distance
fast_length
fast_normalize
fclamp
fdata-sections
fdim
fdiv
ffunction-sections
filename
filetype
first member a float scalar or vector, second member a 
float
floating-point fast math mode
floating-point rounding mode
floor
fmax
fmax_common
fmem-intrin-opt
fmin
fmin_common
fmod
fmodf
fmul
fold
force-O2
forward_pointer(
fract
frame
frem
frexp
fsanitize-address
fsub
function control
function inside function
function parameter attribute
gd>Z
generic
gfx-rs community
gfx-rs community Naga
gl_BaseInstance
gl_ClipDistance
gl_CullDistance
gl_FragCoord
gl_FragDepth
gl_FrontFacing
gl_GlobalInvocationID
gl_HelperInvocation
gl_InstanceID
gl_InstanceIndex
gl_InvocationID
gl_Layer
gl_LocalInvocationID
gl_LocalInvocationIndex
gl_NumWorkGroups
gl_PatchVertices
gl_PointCoord
gl_PointSize
gl_Position
gl_PrimitiveID
gl_SampleID
gl_SampleMask
gl_SamplePosition
gl_TessCoord
gl_TessLevelInner
gl_TessLevelOuter
gl_VertexID
gl_VertexIndex
gl_ViewportIndex
gl_WorkGroupID
gl_WorkGroupSize
global variables) and section 10 (function 
global_init
group operation
h0'D
h>1my
half
half_cos
half_divide
half_exp
half_exp10
half_exp2
half_log
half_log10
half_log2
half_powr
half_recip
half_rsqrt
half_sin
half_sqrt
half_tan
has storage class StorageBuffer or PhysicalStorageBuffer.
help
help-hidden
help-list
help-list-hidden
heroseh
heroseh Hero C Compiler
hitObjectNV
hj>>d
host access qualifier
host unreachable
hwdiv-arm
hypot
i16to8
i32to8
i64to8
i8from
i8fromah
iasm
identical
identifier removed
if it has storage class Uniform.
if-conversion
ilogb
image
image channel data type
image channel order
image format
image(
in Function or Private storage classes or as function parameters
in Vulkan environment, OpControlBarrier execution scope must be Subgroup for Fragment, Vertex, Geometry, TessellationEvaluation, RayGeneration, Intersection, AnyHit, ClosestHit, and Miss execution models
in Vulkan environment, Output Storage Class must not be used in GLCompute, RayGenerationKHR, IntersectionKHR, AnyHitKHR, ClosestHitKHR, MissKHR, or CallableKHR execution models
in Vulkan environment, Workgroup Storage Class is limited to MeshNV, TaskNV, and GLCompute execution model
in Vulkan environment, Workgroup execution scope is only for TaskNV, MeshNV, TaskEXT, MeshEXT, TessellationControl, and GLCompute execution models
in the OpenCL environment.
in the Vulkan environment.
inconsistency in registered CommandLine options
info-output-file
initForInfOnly: Liveness error
initialization mode qualifier
inity
inline-entry-points-exhaustive
input
inst
instnum
instruction in its block.
int scalar or vector type
int scalar or vector with the same number of 
integer less than or equal to 4
integer scalar or vector: 
ios_base::clear
iostream
is a matrix with stride 
is an improperly straddling vector at offset 
is invalid
is missing an Offset decoration
is not structurally post dominated by
its block.
jeTb
k=yI
k>4\tF
k>RU
keep-deleted-insts
kernel enqeue flags
kernel profiling info
kernelbase.dll
last
lcse
lcse-max-iters
ldexp
length
length_error was thrown in -fno-exceptions mode with message "%s"
level
lgamma
lgamma_r
licm
linkage type
literal number
literal string
live
llvm
load cache control
locale not supported
log10
log1p
log2
logb
logf
longjmp
loop
loop control
loop-unroll
lpt1
lpt2
lpt3
lpt4
lpt5
lpt6
lpt7
lpt8
lpt9
lshr
m?H7
mG4>
mO-B
m\nXo
map::at:  key not found
matrix: 
mattr
max-nops-per-instruction
maxmag
may only occur zero or one times!
memcpy
memmove
memory access
memory model
memory semantics ID
memset
merge-blocks
merge-return
message size
minmag
mips
mips32
mips32 (same as mips)
mock-bounds-check
modf
money_get error
most
must appear between section 9 (types, constants, 
must be DebugTypeMember, DebugFunction, or DebugTypeInheritance
must be a constant for WorkgroupSize
must be a memory object declaration
must be a pointer type
must be a scalar specialization constant
must be a structure type
must be a variable
must be an array or pointer type
must be decorated with Block or BufferBlock.
must be in the Output storage class
must be in the StorageBuffer, Uniform, or UniformConstant storage class
must be in the UniformConstant storage class
must occur exactly one time!
mutex lock failed
n03>Pu
n]?iJ
named maximum number of registers
named_barrier
nan(ind)
nan(snan)
native_cos
native_divide
native_exp
native_exp10
native_exp2
native_log
native_log10
native_log2
native_powr
native_recip
native_rsqrt
native_sin
native_sqrt
native_tan
neon
network down
network reset
network unreachable
nextafter
no buffer space
no link
no message
no message available
no protocol option
no stream resources
no-assume-ssa
no-hybrid-asm
no-ssa
non-OpPhi instructions 
non-built-in variables within a single structure). Structure id 
none
nop-insertion-percentage
normalize
not a socket
not a stream
not connected
not supported
notranslate
ntic.DebugPrintfNonSemantic.DebuSPV_KHR_shader_clock
num_threads
number as Result Type
o9sp
o?GS
oI>O7
oI>b
obwQ4
of Result Type struct
of debug info extension must appear in a function 
of right matrix to be equal: 
of the left operand: 
one of the following storage classes: Output, Private, 
opaque('
opcodes or together with Image Operand Grad
operand of the result type.
operation canceled
operation in progress
operation not supported
operation would block
operator
operator "" 
operator co_await
operator<=>
or 0 for an integer type with Signedness of 0, 
or DebugFunction
or an array of one of these types.
or scalar type: 
or scalar: 
or sign extended when Signedness is 1
or storage buffer
or vector type
or vector: 
orig
out_of_range was thrown in -fno-exceptions mode with message "%s"
output
overflow mode
owM&
owner dead
p>.G1
p>Y3
packed vector format
parse-parallel
payload must be a OpVariable of storage class RayPayloadKHR or IncomingRayPayloadKHR
phi-edge-split
pipe(
pipe_storage
pm>6/
pnacl
pointer definition.
popcount
positive integer
possibly multi-word literal integer
possibly multi-word literal number
pown
powr
pred
prefetch
prefix
present
print-all-options
print-options
printf
private-to-local
protocol error
protocol not supported
px\r5
q>F,3
qS>g?h3
quantization mode
queue
r10b
r10d
r10w
r11b
r11d
r11w
r12b
r12d
r12w
r13b
r13d
r13w
r14b
r14d
r14w
r15b
r15d
r15w
rNm>)
r\n0\tP
r\tVr.>T
r\vpx\r5
radians
raw access chain operands
ray flags
ray query candidate intersection type
ray query committed intersection type
ray query intersection
rayQueryKHR
read storage image
recursive_mutex constructor failed
recursive_mutex lock failed
reduce-load-size
redundancy-elimination
reg-exclude
reg-reserve
reg-use
regalloc
regalloc-repeat
registers
relaxed 
remainder
remove-dont-inline
remquo
reserve_id
restrict(
result ID
return type.
rint
rootn
rotate
round
rspirv
rsqrt
rules: A Block or BufferBlock cannot be nested within another Block or BufferBlock. 
s Type must be a scalar or vector type.
s array element type.
s array length.
s callgraph contains function <id> 
s component type.
s function parameter count is not zero.
s function return type is not void.
s layout does not match Object <id> 
s layout.
s matrix column component type.
s matrix column count.
s matrix column type.
s member count.
s member type.
s parameter type.
s return type.
s struct member count.
s type does not match Function <id> 
s type does not match Object <id> 
s type does not match OpFunction's return type.
s type does not match Result Type <id> 
s type does not match Source <id> 
s type is void.
s type.
s vector component count.
s vector element type.
sBGRA
sHF'
sRGB
sRGBA
sRGBx
s_abs
s_abs_diff
s_add_sat
s_clamp
s_hadd
s_mad24
s_mad_hi
s_mad_sat
s_max
s_min
s_mul24
s_mul_hi
s_rhadd
s_sub_sat
s_upsample
sampled_image(
sampler
sampler addressing mode
sampler filter mode
scalar 
scalar or vector float type members
scalar type
scalar-replacement=%u
scope ID
sdiv
section
select
selection control
selection header
set-spec-const-default-value
setjmp
shading rate
short
shuffle
shuffle2
shufvec
sign
signed
simplify-instructions
sincos
sinh
sinpi
skip-unimplemented
smoothstep
snan)
source language
spiregg
split-global-vars
split-inst
split-local-vars
spv::Op::OpCooperativeMatrixLoadKHR
spv::Op::OpCooperativeMatrixLoadKHR Result Type <id> 
spv::Op::OpCooperativeMatrixLoadNV
spv::Op::OpCooperativeMatrixLoadNV Result Type <id> 
spv::Op::OpCooperativeMatrixStoreKHR
spv::Op::OpCooperativeMatrixStoreKHR Object type <id> 
spv::Op::OpCooperativeMatrixStoreNV
spv::Op::OpCooperativeMatrixStoreNV Object type <id> 
sqrt
srem
ssa-rewrite
sse2
sse4.1
standard 
state not recoverable
statically used per shader entry point.
status
step
storage buffer
storage buffer, or variable in Private or Function storage class
storage class
storage class must be Input
storage class must be Input or Output
storage classes
storage classes.
storage image
store cache control
stoul
stream timeout
string
structure 
structure may not be contained as a member of another 
succ
system
szstats
tanf
tanh
tanpi
target
target is not defined
terminate_handler unexpectedly returned\n
terminate_handler unexpectedly threw an exception\n
terminator instruction outside basic block
terminator instruction outside function
test-stack-extra
test-status
text file busy
tgamma
that allocate pointers must be in Function or Private 
this instruction is currently limited to 32-bit width 
this type
thread constructor failed
thread::join failed
timed out
timing
timing-focus
timing-funcs
to be the reverse of those of Result Type
to storage image
to the number of columns of Result Type matrix
to the number of elements of Result Type array
to the number of members of Result Type struct
to the size of Result Type vector
toString() called when hasStdString() is false
too many symbolic link levels
track-memory
translate-only
true
trunc
type
type ID
type Result Type array
type Result Type matrix
type is OpConstant with an integer scalar type
type of the matrix operand: 
type of the vector operand: 
type requires the Float16 or Float16Buffer capability, or an extension that explicitly enables 16-bit floating point.
type requires the Float64 capability.
type. Structure <id> 
u_abs
u_abs_diff
u_add_sat
u_clamp
u_hadd
u_mad24
u_mad_hi
u_mad_sat
u_max
u_min
u_mul24
u_mul_hi
u_rhadd
u_sub_sat
u_upsample
udiv
uint
undef value encountered by emitter.
unexpected type
uniform buffer
unique_lock::lock: already locked
unique_lock::lock: references null mutex
unique_lock::unlock: not locked
unknown
unknown error %d
unordered_map::at: key not found
unsigned
unspecified generic_category error
unspecified iostream_category error
unspecified system_category error
unsupported locale for standard input
urem
used to access transparent buffer backed resources. Such 
uzKs@>
v16i1
v16i8
v2!L.2
v4f32
v4i1
v4i32
v8i1
v8i16
value too large
variable needs to be a 32-bit int scalar. 
variables must be typed as OpTypeImage, OpTypeSampler, 
variables must be typed as OpTypeStruct, or an array of 
vector
vector operand size: 
vector size of the right operand: 
vector size: 
vector-dce
vectors
verbose
verbose-focus
verbose-llvm-parse-errors
vkAcquireNextImage2KHR
vkAcquireNextImageKHR
vkAllocateCommandBuffers
vkAllocateDescriptorSets
vkAllocateMemory
vkBeginCommandBuffer
vkBindBufferMemory
vkBindBufferMemory2
vkBindBufferMemory2KHR
vkBindImageMemory
vkBindImageMemory2
vkBindImageMemory2KHR
vkCmdBeginDebugUtilsLabelEXT
vkCmdBeginQuery
vkCmdBeginQuery()
vkCmdBeginRenderPass
vkCmdBeginRenderPass()
vkCmdBeginRenderPass2
vkCmdBeginRenderPass2KHR
vkCmdBeginRendering
vkCmdBeginRendering()
vkCmdBeginRenderingKHR
vkCmdBindDescriptorSets
vkCmdBindDescriptorSets()
vkCmdBindIndexBuffer
vkCmdBindPipeline
vkCmdBindVertexBuffers
vkCmdBindVertexBuffers2
vkCmdBindVertexBuffers2EXT
vkCmdBlitImage
vkCmdBlitImage()
vkCmdBlitImage2
vkCmdBlitImage2KHR
vkCmdClearAttachment()
vkCmdClearAttachments
vkCmdClearColorImage
vkCmdClearColorImage()
vkCmdClearDepthStencilImage
vkCmdClearDepthStencilImage()
vkCmdCopyBuffer
vkCmdCopyBuffer()
vkCmdCopyBuffer2
vkCmdCopyBuffer2KHR
vkCmdCopyBufferToImage
vkCmdCopyBufferToImage()
vkCmdCopyBufferToImage2
vkCmdCopyBufferToImage2KHR
vkCmdCopyImage
vkCmdCopyImage()
vkCmdCopyImage2
vkCmdCopyImage2KHR
vkCmdCopyImageToBuffer
vkCmdCopyImageToBuffer()
vkCmdCopyImageToBuffer2
vkCmdCopyImageToBuffer2KHR
vkCmdCopyQueryPoolResults
vkCmdCopyQueryPoolResults()
vkCmdDispatch
vkCmdDispatch()
vkCmdDispatchBase
vkCmdDispatchBaseKHR
vkCmdDispatchIndirect
vkCmdDispatchIndirect()
vkCmdDraw
vkCmdDraw()
vkCmdDrawIndexed
vkCmdDrawIndexed()
vkCmdDrawIndexedIndirect
vkCmdDrawIndexedIndirect()
vkCmdDrawIndexedIndirectCount
vkCmdDrawIndexedIndirectCountKHR
vkCmdDrawIndirect
vkCmdDrawIndirect()
vkCmdDrawIndirectCount
vkCmdDrawIndirectCountKHR
vkCmdEndDebugUtilsLabelEXT
vkCmdEndQuery
vkCmdEndQuery()
vkCmdEndRenderPass
vkCmdEndRenderPass()
vkCmdEndRenderPass2
vkCmdEndRenderPass2KHR
vkCmdEndRendering
vkCmdEndRendering()
vkCmdEndRenderingKHR
vkCmdExecuteCommands
vkCmdExecuteCommands()
vkCmdFillBuffer
vkCmdFillBuffer()
vkCmdIndexBufferBind()
vkCmdInsertDebugUtilsLabelEXT
vkCmdNextSubpass
vkCmdNextSubpass()
vkCmdNextSubpass2
vkCmdNextSubpass2KHR
vkCmdPipelineBarrier
vkCmdPipelineBarrier()
vkCmdPipelineBarrier2
vkCmdPipelineBarrier2KHR
vkCmdPipelineBind()
vkCmdPushConstants
vkCmdResetEvent
vkCmdResetEvent()
vkCmdResetEvent2
vkCmdResetEvent2KHR
vkCmdResetQueryPool
vkCmdResetQueryPool()
vkCmdResolveImage
vkCmdResolveImage2
vkCmdResolveImage2KHR
vkCmdSetBlendConstants
vkCmdSetBlendConstants()
vkCmdSetCullMode
vkCmdSetCullModeEXT
vkCmdSetCullModeEXT()
vkCmdSetDepthBias
vkCmdSetDepthBias()
vkCmdSetDepthBiasEnable
vkCmdSetDepthBiasEnable()
vkCmdSetDepthBounds
vkCmdSetDepthBounds()
vkCmdSetDepthBoundsTestEnable
vkCmdSetDepthBoundsTestEnableEXT
vkCmdSetDepthBoundsTestEnableEXT()
vkCmdSetDepthCompareOp
vkCmdSetDepthCompareOpEXT
vkCmdSetDepthCompareOpEXT()
vkCmdSetDepthTestEnable
vkCmdSetDepthTestEnableEXT
vkCmdSetDepthTestEnableEXT()
vkCmdSetDepthWriteEnable
vkCmdSetDepthWriteEnableEXT
vkCmdSetDepthWriteEnableEXT()
vkCmdSetDeviceMask
vkCmdSetDeviceMaskKHR
vkCmdSetEvent
vkCmdSetEvent2
vkCmdSetEvent2KHR
vkCmdSetFrontFace
vkCmdSetFrontFaceEXT
vkCmdSetFrontFaceEXT()
vkCmdSetLineStippleEXT
vkCmdSetLineWidth
vkCmdSetLineWidth()
vkCmdSetPrimitiveRestartEnable
vkCmdSetPrimitiveRestartEnable()
vkCmdSetPrimitiveTopology
vkCmdSetPrimitiveTopologyEXT
vkCmdSetPrimitiveTopologyEXT()
vkCmdSetPushConstants()
vkCmdSetRasterizerDiscardEnable
vkCmdSetRasterizerDiscardEnable()
vkCmdSetScissor
vkCmdSetScissor()
vkCmdSetScissorWithCount
vkCmdSetScissorWithCountEXT
vkCmdSetScissorWithCountEXT()
vkCmdSetStencilCompareMask
vkCmdSetStencilCompareMask()
vkCmdSetStencilOp
vkCmdSetStencilOpEXT
vkCmdSetStencilOpEXT()
vkCmdSetStencilReference
vkCmdSetStencilReference()
vkCmdSetStencilTestEnable
vkCmdSetStencilTestEnableEXT
vkCmdSetStencilTestEnableEXT()
vkCmdSetStencilWriteMask
vkCmdSetStencilWriteMask()
vkCmdSetVertexInputEXT
vkCmdSetVertexInputEXT()
vkCmdSetViewport
vkCmdSetViewport()
vkCmdSetViewportWithCount
vkCmdSetViewportWithCountEXT
vkCmdSetViewportWithCountEXT()
vkCmdSignalEvent()
vkCmdUpdateBuffer
vkCmdUpdateBuffer()
vkCmdVertexBufferBind()
vkCmdWaitEvent()
vkCmdWaitEvents
vkCmdWaitEvents2
vkCmdWaitEvents2KHR
vkCmdWriteTimeStamp()
vkCmdWriteTimestamp
vkCmdWriteTimestamp2
vkCmdWriteTimestamp2KHR
vkCopyImageToImageEXT
vkCopyImageToMemoryEXT
vkCopyMemoryToImageEXT
vkCreateBuffer
vkCreateBufferView
vkCreateCommandPool
vkCreateComputePipelines
vkCreateDebugUtilsMessengerEXT
vkCreateDescriptorPool
vkCreateDescriptorSetLayout
vkCreateDescriptorUpdateTemplate
vkCreateDescriptorUpdateTemplateKHR
vkCreateDevice
vkCreateEvent
vkCreateFence
vkCreateFramebuffer
vkCreateGraphicsPipelines
vkCreateHeadlessSurfaceEXT
vkCreateImage
vkCreateImageView
vkCreateInstance
vkCreatePipelineCache
vkCreatePipelineLayout
vkCreatePrivateDataSlot
vkCreatePrivateDataSlotEXT
vkCreateQueryPool
vkCreateRenderPass
vkCreateRenderPass2
vkCreateRenderPass2KHR
vkCreateSampler
vkCreateSamplerYcbcrConversion
vkCreateSamplerYcbcrConversionKHR
vkCreateSemaphore
vkCreateShaderModule
vkCreateSwapchainKHR
vkCreateWin32SurfaceKHR
vkDestroyBuffer
vkDestroyBufferView
vkDestroyCommandPool
vkDestroyDebugUtilsMessengerEXT
vkDestroyDescriptorPool
vkDestroyDescriptorSetLayout
vkDestroyDescriptorUpdateTemplate
vkDestroyDescriptorUpdateTemplateKHR
vkDestroyDevice
vkDestroyEvent
vkDestroyFence
vkDestroyFramebuffer
vkDestroyImage
vkDestroyImageView
vkDestroyInstance
vkDestroyPipeline
vkDestroyPipelineCache
vkDestroyPipelineLayout
vkDestroyPrivateDataSlot
vkDestroyPrivateDataSlotEXT
vkDestroyQueryPool
vkDestroyRenderPass
vkDestroySampler
vkDestroySamplerYcbcrConversion
vkDestroySamplerYcbcrConversionKHR
vkDestroySemaphore
vkDestroyShaderModule
vkDestroySurfaceKHR
vkDestroySwapchainKHR
vkDeviceWaitIdle
vkEndCommandBuffer
vkEnumerateDeviceExtensionProperties
vkEnumerateDeviceLayerProperties
vkEnumerateInstanceExtensionProperties
vkEnumerateInstanceLayerProperties
vkEnumerateInstanceVersion
vkEnumeratePhysicalDeviceGroups
vkEnumeratePhysicalDeviceGroupsKHR
vkEnumeratePhysicalDevices
vkFlushMappedMemoryRanges
vkFreeCommandBuffers
vkFreeDescriptorSets
vkFreeMemory
vkGetBufferDeviceAddress
vkGetBufferDeviceAddressKHR
vkGetBufferMemoryRequirements
vkGetBufferMemoryRequirements2
vkGetBufferMemoryRequirements2KHR
vkGetBufferOpaqueCaptureAddress
vkGetBufferOpaqueCaptureAddressKHR
vkGetDescriptorSetLayoutSupport
vkGetDescriptorSetLayoutSupportKHR
vkGetDeviceBufferMemoryRequirements
vkGetDeviceBufferMemoryRequirementsKHR
vkGetDeviceGroupPeerMemoryFeatures
vkGetDeviceGroupPeerMemoryFeaturesKHR
vkGetDeviceGroupPresentCapabilitiesKHR
vkGetDeviceGroupSurfacePresentModesKHR
vkGetDeviceImageMemoryRequirements
vkGetDeviceImageMemoryRequirementsKHR
vkGetDeviceImageSparseMemoryRequirements
vkGetDeviceImageSparseMemoryRequirementsKHR
vkGetDeviceMemoryCommitment
vkGetDeviceMemoryOpaqueCaptureAddress
vkGetDeviceMemoryOpaqueCaptureAddressKHR
vkGetDeviceProcAddr
vkGetDeviceQueue
vkGetDeviceQueue2
vkGetEventStatus
vkGetFenceStatus
vkGetImageMemoryRequirements
vkGetImageMemoryRequirements2
vkGetImageMemoryRequirements2KHR
vkGetImageSparseMemoryRequirements
vkGetImageSparseMemoryRequirements2
vkGetImageSparseMemoryRequirements2KHR
vkGetImageSubresourceLayout
vkGetImageSubresourceLayout2EXT
vkGetInstanceProcAddr
vkGetMemoryHostPointerPropertiesEXT
vkGetPhysicalDeviceExternalBufferProperties
vkGetPhysicalDeviceExternalBufferPropertiesKHR
vkGetPhysicalDeviceExternalFenceProperties
vkGetPhysicalDeviceExternalFencePropertiesKHR
vkGetPhysicalDeviceExternalSemaphoreProperties
vkGetPhysicalDeviceExternalSemaphorePropertiesKHR
vkGetPhysicalDeviceFeatures
vkGetPhysicalDeviceFeatures2
vkGetPhysicalDeviceFeatures2KHR
vkGetPhysicalDeviceFormatProperties
vkGetPhysicalDeviceFormatProperties2
vkGetPhysicalDeviceFormatProperties2KHR
vkGetPhysicalDeviceImageFormatProperties
vkGetPhysicalDeviceImageFormatProperties2
vkGetPhysicalDeviceImageFormatProperties2KHR
vkGetPhysicalDeviceMemoryProperties
vkGetPhysicalDeviceMemoryProperties2
vkGetPhysicalDeviceMemoryProperties2KHR
vkGetPhysicalDevicePresentRectanglesKHR
vkGetPhysicalDeviceProperties
vkGetPhysicalDeviceProperties2
vkGetPhysicalDeviceProperties2KHR
vkGetPhysicalDeviceQueueFamilyProperties
vkGetPhysicalDeviceQueueFamilyProperties2
vkGetPhysicalDeviceQueueFamilyProperties2KHR
vkGetPhysicalDeviceSparseImageFormatProperties
vkGetPhysicalDeviceSparseImageFormatProperties2
vkGetPhysicalDeviceSparseImageFormatProperties2KHR
vkGetPhysicalDeviceSurfaceCapabilities2KHR
vkGetPhysicalDeviceSurfaceCapabilitiesKHR
vkGetPhysicalDeviceSurfaceFormats2KHR
vkGetPhysicalDeviceSurfaceFormatsKHR
vkGetPhysicalDeviceSurfacePresentModesKHR
vkGetPhysicalDeviceSurfaceSupportKHR
vkGetPhysicalDeviceToolProperties
vkGetPhysicalDeviceToolPropertiesEXT
vkGetPhysicalDeviceWin32PresentationSupportKHR
vkGetPipelineCacheData
vkGetPrivateData
vkGetPrivateDataEXT
vkGetQueryPoolResults
vkGetRenderAreaGranularity
vkGetSemaphoreCounterValue
vkGetSemaphoreCounterValueKHR
vkGetSwapchainImagesKHR
vkInvalidateMappedMemoryRanges
vkMapMemory
vkMergePipelineCaches
vkQueueBeginDebugUtilsLabelEXT
vkQueueBindSparse
vkQueueEndDebugUtilsLabelEXT
vkQueueInsertDebugUtilsLabelEXT
vkQueuePresentKHR
vkQueueSubmit
vkQueueSubmit2
vkQueueSubmit2KHR
vkQueueWaitIdle
vkReleaseSwapchainImagesEXT
vkResetCommandBuffer
vkResetCommandPool
vkResetDescriptorPool
vkResetEvent
vkResetFences
vkResetQueryPool
vkResetQueryPoolEXT
vkSetDebugUtilsObjectNameEXT
vkSetDebugUtilsObjectTagEXT
vkSetEvent
vkSetPrivateData
vkSetPrivateDataEXT
vkSignalSemaphore
vkSignalSemaphoreKHR
vkSubmitDebugUtilsMessageEXT
vkTransitionImageLayoutEXT
vkTrimCommandPool
vkTrimCommandPoolKHR
vkUnmapMemory
vkUpdateDescriptorSetWithTemplate
vkUpdateDescriptorSetWithTemplateKHR
vkUpdateDescriptorSets
vkWaitForFences
vkWaitSemaphores
vkWaitSemaphoresKHR
vk_icdEnumerateAdapterPhysicalDevices
vk_icdGetInstanceProcAddr
vk_icdGetPhysicalDeviceProcAddr
vk_icdNegotiateLoaderICDInterfaceVersion
vk_swiftshader.dll
vload_half
vload_halfn
vloada_halfn
vloadn
void
vstore_half
vstore_half_r
vstore_halfn
vstore_halfn_r
vstorea_halfn
vstorea_halfn_r
vstoren
wasm
wasm-bounds-check
when Dim is either 1D or 2D.
with ExplicitLod
wrap-opkill
wrong protocol type
x86-32
x86-32 (same as x8632)
x86-64
x86-64 (same as x8664)
x8632
x8664
x86_32
x86_64
xT?V
xmm0
xmm1
xmm10
xmm11
xmm12
xmm13
xmm14
xmm15
xmm2
xmm3
xmm4
xmm5
xmm6
xmm7
xmm8
xmm9
yE>cb
z>h4
