                                
         Card name: 
    checking  
  Color: 
  Image: 
  Text=
  close cubicTo
  closeSubpath
  cubicTo
  deadkey
  end point is on curve, start is not
  lineTo
  start and end point are not on curve
  start at
 (best 
 Active: 
 Attributes: 
 Color=
 DEVICE
 Depth: 
 Disabled: 
 Format: 
 GL_ARB_multisample 
 HTML=
 Image=
 Inactive: 
 Ng4
 PFD_DIRECT3D_ACCELERATED
 PFD_DOUBLEBUFFER
 PFD_DRAW_TO_BITMAP
 PFD_DRAW_TO_WINDOW
 PFD_GENERIC_ACCELERATED
 PFD_GENERIC_FORMAT
 PFD_NEED_PALETTE
 PFD_NEED_SYSTEM_PALETTE
 PFD_STEREO
 PFD_SUPPORT_COMPOSITION
 PFD_SUPPORT_DIRECTDRAW
 PFD_SUPPORT_GDI
 PFD_SUPPORT_OPENGL
 PFD_SWAP_LAYER_BUFFERS
 RASTER
 Size=
 Style=
 Stylename=
 TRUETYPE
 TTF=
 URLs=
 WS_CHILD
 WS_CLIPCHILDREN
 WS_CLIPSIBLINGS
 WS_DLGFRAME
 WS_EX_CONTEXTHELP
 WS_EX_DLGMODALFRAME
 WS_EX_LAYERED
 WS_EX_TOOLWINDOW
 WS_MAXIMIZEBOX
 WS_MINIMIZEBOX
 WS_OVERLAPPED
 WS_POPUP
 WS_SYSMENU
 WS_THICKFRAME
 Weight=
 accepted: 
 area:
 atom=
 avail: 
 boundary=
 brush=
 cAccumAlphaBits=
 cAccumBits=
 cAccumBlueBits=
 cAccumGreenBits=
 cAccumRedBits=
 cAlphaBits=
 cAlphaShift=
 cAuxBuffers=
 cBlueBits=
 cBlueShift=
 cColorBits=
 cDepthBits=
 cGreenBits=
 cGreenShift=
 cRedBits=
 cRedShift=
 cStencilBits=
 class=
 commit=
 composing=
 custom margins: 
 custom margins=
 default 
 desktop=
 device 
 dialog=
 doApply=
 dwVisibleMask=
 effect
 embedded=
 exStyle=
 for virtual key = 0x
 frame incl.=
 frame: 
 frame=
 from 
 from: 
 geometry 
 handle=
 hintingPreference=
 iLayerType=
 iPixelType=
 icon=
 key=
 lock screen
 margins=
 max=
 maxpos=
 maxtrack=
 min=
 mintrack=
 modal supported? 
 mods=
 mouse=
 new frame: 
 not acceptable=
 obtained geometry: 
 obtained px #
 on window 
 options: 
 out 
 overlay
 parent=
 physical: 
 pixelsize=
 pointer 
 pointsize=
 popup=
 pos incl. frame=
 pressure: 
 previous window under mouse = 
 primary
 profile: 
 reconv=
 requested: 
 resultEffect=0x
 returns 
 returns 0x
 right/bottom=
 samples=
 scalable=
 score=
 size=
 stretch=
 style=
 style=0x
 styleHint=
 supported actions=
 surroundingText=
 swap interval: 
 tan pressure: 
 title=
 tool=
 tracked window =
 virtual desktop
 weight=
!]KwG
!face_
!isEmpty()
!m_fontDatas.contains(key)
!m_image.isNull()
!m_nativeDialog.isNull()
!m_thread
!out || (arg.vt & VT_BYREF)
!qFuzzyIsNull(c)
!result || int(*length) > 0
!weakref.load()
!x->ref.isStatic()
#*2IOu
$27:Mcz
$7Rz
%!FontType
%!PS-Adobe-3.0 Resource-CIDFont
%!PS-AdobeFont
%!PS-TrueTypeFont
%&&201<CDPber
%1 specification: v%2.%3 implementation: v%4.%5 options: 0x%6
%ADOBeginFontDict
%IDATx^
%s invoked with no native dialog present.
%s%s%p%s%zd%s%d%s%s%s%s%s
%s: '%s' requested for null backingstore or backingstore without handle.
%s: '%s' requested for null context or context without handle.
%s: '%s' requested for null window or window without handle.
%s: AddFontMemResourceEx failed
%s: AdjustWindowRectEx failed
%s: Attempted to use GDI functions with a non-opengl32.dll library
%s: BitBlt failed
%s: Called out of sequence.
%s: Can't change family name of font
%s: Cannot find window %p
%s: ChoosePixelFormat failed.
%s: Cowardly refusing to send clipboard message to hung application...
%s: CreateAlphaTexture failed
%s: CreateCustomFontFileReference failed
%s: CreateDIBSection failed.
%s: CreateFontFace failed
%s: CreateFontFromLOGFONT failed
%s: CreateFontIndirect failed
%s: CreateFontIndirect failed for family '%s'
%s: CreateGlyphRunAnalysis failed
%s: CreateWindowEx failed
%s: DWriteCreateFactory failed
%s: DWriteCreateFactory failed.
%s: Failed to load and resolve WGL/OpenGL functions
%s: Failed to load font. Got fallback instead: %s
%s: Family name '%s' is too long.
%s: Forcing Qt::CopyAction
%s: GetDC failed
%s: GetDesignGlyphMetrics failed
%s: GetGdiInterop failed
%s: GetGlyphIndicesW failed
%s: GetGlyphRunOutline failed
%s: GetTextMetrics failed
%s: Invalid cursor shape %d
%s: Invalid key '%s' requested.
%s: Invalid parameter '%s' not found in '%s'.
%s: No Qt Window found for event 0x%x (%s), hwnd=0x%p.
%s: No handle
%s: Not setting mouse grab for invisible window %s/'%s'
%s: QFontEngineWin: failed to delete font...
%s: SHCreateItemFromIDList(%s)) failed
%s: SHCreateItemFromParsingName(%s)) failed
%s: SHGetKnownFolderIDList(%s)) failed
%s: SetOptions() failed
%s: SetPixelFormat failed.
%s: SetPixelFormat() failed
%s: TryGetFontTable failed
%s: Unable find a suitable pixel format.
%s: Unable to obtain drag cursor for %d.
%s: Unable to obtain handle for monitor '%s', defaulting to %g DPI.
%s: Unable to obtain system cursor for %d
%s: Unable to resolve '%s'
%s: Unable to set geometry %dx%d+%d+%d on %s/'%s'. Resulting geometry:  %dx%d+%d+%d (frame: %d, %d, %d, %d, custom margin: %d, %d, %d, %d, minimum size: %dx%d, maximum size: %dx%d).
%s: Wrong key size
%s: glyphIndex failed
%s: wglCreateContext failed.
%s: wglGetPixelFormatAttribIVARB() failed for basic parameters.
%s: wglShareLists() failed.
&2&6&:&>&B&F&J&N&R&V0
&nfq
' '$'(','0'4'8'<'@0
' is being used without being initialized.
' is not available. Available formats: 
' was corrupted.
'!$J$N$R$V$Z$^$b$f$j$n0
'1nD
'\'`'d'h'l'p't'x'|'
'\r%2%6%:%>%B%F%J%N%R%V0
'p\fvL
'zO{T
( ($(((,(0(4(8(<(@0
(Hex)
(Z(^(b(f(j(n(r(v(z1
(eE\fv
(packet
) for format: 
*.otf
*.pfa
*.pfb
*.ttc
*.ttf
*length == GDI_ERROR || int(*length) > 0
*node == e || (*node)->next
, Extension-API present
, deviceId=
, driver: 
, iface:
, parent: 
, resolution 
, revision=
, shared context: 
, subSysId=
, transient parent: 
, version=
,SampleBuffers
,Scaling=
-.9>?IJKT
-j'j2j>jU
.        c None
...............XXXX.....
.............XXaaaaXX...
............XaaaaaaaaX..
...........XaaX..XaaaaX.
...........XaaaXXXXaaaX.
...........XaaaaX..XaaX.
..........XaaX..XaaaXaaX
..........XaaX.XaaaXXaaX
..........XaaXXaaaX.XaaX
..........XaaXaaaX..XaaX
........aa.XaaaXXXXaaaX.
.......aXXa..XXaaaaXX...
.......aXXa.XaaaaaaaaX..
......aXXa.....XXXX.....
..\gui\text\qfontengine_ft.cpp
.?AUIAccessible2@@
.?AUIAccessible@@
.?AUIAccessibleAction@@
.?AUIAccessibleApplication@@
.?AUIAccessibleComponent@@
.?AUIAccessibleEditableText@@
.?AUIAccessibleRelation@@
.?AUIAccessibleTable2@@
.?AUIAccessibleTableCell@@
.?AUIAccessibleText@@
.?AUIAccessibleValue@@
.?AUID2D1SimplifiedGeometrySink@@
.?AUIDWriteFontFileLoader@@
.?AUIDWriteFontFileStream@@
.?AUIDataObject@@
.?AUIDispatch@@
.?AUIDropSource@@
.?AUIDropTarget@@
.?AUIEnumFORMATETC@@
.?AUIEnumVARIANT@@
.?AUIFileDialogEvents@@
.?AUIOleWindow@@
.?AUIServiceProvider@@
.?AUIUnknown@@
.?AV?$QWindowsDialogHelperBase@VQPlatformFileDialogHelper@@@@
.?AVAccessibleApplication@@
.?AVAccessibleRelation@@
.?AVDirectWriteFontFileLoader@?A0x23a86677@@
.?AVDirectWriteFontFileStream@?A0x23a86677@@
.?AVGeometrySink@?A0x548179c1@@
.?AVQAbstractEventDispatcher@@
.?AVQBasicFontDatabase@@
.?AVQBuiltInMimes@@
.?AVQEvent@@
.?AVQEventDispatcherWin32@@
.?AVQFontEngine@@
.?AVQFontEngineFT@@
.?AVQFontEngineFTRawData@?A0xc3fd2c69@@
.?AVQFontEngineMulti@@
.?AVQInputMethodEvent@@
.?AVQInternalMimeData@@
.?AVQLastResortMimes@@
.?AVQMimeData@@
.?AVQObject@@
.?AVQOpenGLStaticContext@@
.?AVQPaintDevice@@
.?AVQPaintDeviceWindow@@
.?AVQPlatformAccessibility@@
.?AVQPlatformBackingStore@@
.?AVQPlatformClipboard@@
.?AVQPlatformCursor@@
.?AVQPlatformDialogHelper@@
.?AVQPlatformDrag@@
.?AVQPlatformFileDialogHelper@@
.?AVQPlatformFontDatabase@@
.?AVQPlatformInputContext@@
.?AVQPlatformIntegration@@
.?AVQPlatformIntegrationPlugin@@
.?AVQPlatformNativeInterface@@
.?AVQPlatformOpenGLContext@@
.?AVQPlatformPixmap@@
.?AVQPlatformScreen@@
.?AVQPlatformServices@@
.?AVQPlatformSessionManager@@
.?AVQPlatformSurface@@
.?AVQPlatformTheme@@
.?AVQPlatformWindow@@
.?AVQRasterPlatformPixmap@@
.?AVQRasterWindow@@
.?AVQSurface@@
.?AVQThread@@
.?AVQWindow@@
.?AVQWindowsAccessibility@@
.?AVQWindowsBackingStore@@
.?AVQWindowsClipboard@@
.?AVQWindowsClipboardRetrievalMimeData@@
.?AVQWindowsCursor@@
.?AVQWindowsDialogThread@@
.?AVQWindowsDrag@@
.?AVQWindowsDragCursorWindow@@
.?AVQWindowsDropMimeData@@
.?AVQWindowsEnumerate@@
.?AVQWindowsFileDialogHelper@@
.?AVQWindowsFontDatabase@@
.?AVQWindowsFontDatabaseFT@@
.?AVQWindowsFontEngine@@
.?AVQWindowsFontEngineDirectWrite@@
.?AVQWindowsGLContext@@
.?AVQWindowsGdiIntegration@@
.?AVQWindowsGdiNativeInterface@@
.?AVQWindowsGuiEventDispatcher@@
.?AVQWindowsIA2Accessible@@
.?AVQWindowsInputContext@@
.?AVQWindowsIntegration@@
.?AVQWindowsIntegrationPlugin@@
.?AVQWindowsInternalMimeData@@
.?AVQWindowsMime@@
.?AVQWindowsMimeHtml@@
.?AVQWindowsMimeImage@@
.?AVQWindowsMimeText@@
.?AVQWindowsMimeURI@@
.?AVQWindowsMsaaAccessible@@
.?AVQWindowsMultiFontEngine@@
.?AVQWindowsNativeDialogBase@@
.?AVQWindowsNativeFileDialogBase@@
.?AVQWindowsNativeFileDialogEventHandler@@
.?AVQWindowsNativeInterface@@
.?AVQWindowsNativeOpenFileDialog@@
.?AVQWindowsNativeSaveFileDialog@@
.?AVQWindowsOleDataObject@@
.?AVQWindowsOleDropSource@@
.?AVQWindowsOleDropTarget@@
.?AVQWindowsOleEnumFmtEtc@@
.?AVQWindowsOpenGLContext@@
.?AVQWindowsScreen@@
.?AVQWindowsServices@@
.?AVQWindowsSessionManager@@
.?AVQWindowsStaticOpenGLContext@@
.?AVQWindowsTheme@@
.?AVQWindowsWindow@@
.?AVQWindowsXpFileDialogHelper@@
.?AVQWindowsXpNativeFileDialog@@
.?AV_com_error@@
.?AVbad_alloc@std@@
.?AVbad_array_new_length@std@@
.?AVexception@std@@
.?AVtype_info@@
.AppleDouble/
.B.F.J.N.R.V.Z.^2
.Current/.
.P%B.NJJNNJJ.P%*.@
.\v1o0
.notdef
.null
.resource/
/..namedfork/rsrc
/27:Mcz
/5\n,6,:,>,B,F,J,N,R,V,Z0
/Fonts
/rsrc
/sfnts
0!0%0)0-014
001.000
001.001
001.002
001.003
050s0
0\fDQ
1"1i3
1*1V1[0
1.1.4
10646
1:1>1B1F1J1N1R0
1a1e1
2)202<2U2e2
24 30 3 1
2C2L
2H+h
2IDATx^
2q2z2
3)323A3O3
3h3q
4%43
4G4Pe
4XeZP
4j4r4}4
575A
5G5S
5Y!2
5_5i5p
5gib
646B
6K6S
6o6v6
797k7
7F7W7c
7\n0K0O0S0W0[0_0c0g0k0o0
8859
8n8y
9@9Y9`9y9
9D`y
9F9O
9g9p
9mG-
: Invalid CLSID: 
: Unable to convert DIB image. The image converter plugin for '
: Unhandled scheme: 
: on curve =
: wglCreateContextAttribsARB() failed (GL error code: 0x
:4\t/B/F/J/N/R/V/Z/^/b0
:qmemoryfonts/
;index=
<!--EndFragment-->
<!--StartFragment-->
<unknown error>
<wt2
>7>Ba
@Qm6t
A cast to a smaller data type has caused a loss of data.  If this was intentional, you should mask the source of the cast with the appropriate bitmask.  For example:  \n\r\tchar c = (i & 0xFF);\n\rChanging the code in this way will not affect the quality of the resulting optimized code.\n\r
A local variable was used before it was initialized\n\r
A variable is being used without being initialized.
A'qQU\v
A*A3
A;AAA[
ADD_STYLE_NAME
AEsmall
AJAU
ARB::choosePixelFormat
ARB::createContext
ARB::qSurfaceFormatFromHDC
AVERAGE_WIDTH
AVG_CAPITAL_WIDTH
AVG_LOWERCASE_WIDTH
Aacute
Aacutesmall
AccessibleApplication::QI(): IID_IAccessibleApplication
AccessibleApplication::QI(): IID_IUnknown
Acircumflex
Acircumflexsmall
Action
Acutesmall
AddClipboardFormatListener
AddClipboardFormatListener() failed.
Adieresis
Adieresissmall
Agrave
Agravesmall
Aharoni
AiAtA
Andale Mono
Andalus
Angsana New
AngsanaUPC
Apple Legacy Fonts
Arabic Transparent
Arial
Arial Black
Arial Narrow
Arial Unicode MS
Aring
Aringsmall
Ascender
Asmall
Assumption in Q_ASSUME("features != 0") was not correct
Atilde
Atildesmall
Automatic mouse capture 
Automatic mouse capture for missing buttondown event
AxisLabel
AxisType
B5*S
B<B{B
BBBhhh
BFBQB[Bb
BITMAP
Basic wglCreateContext gives version %d.%d
Baskerville
Batang
BeUNO
BiBr
Bitstream Vera Sans
Black
BlendAxisTypes
BlendDesignMap
BlendDesignPositions
BlueFuzz
BlueScale
BlueShift
BlueValues
Bold
Bold Italic
Bold/BoldItalic Class
Bold/Italic/BoldItalic Class
Book
Brevesmall
Browallia New
BrowalliaUPC
Bsmall
BuildCharArray
CAP_HEIGHT
CHARS
CHARSET_COLLECTIONS
CHARSET_ENCODING
CHARSET_REGISTRY
CID Type 1
CIDCount
CIDFontName
CIDFontType
CIDFontVersion
CIDMapOffset
COM error 0x
COMMENT
COMPATTR 
COMPCLAUSE 
COMPSTR 
COPYRIGHT
CO_E_ALREADYINITIALIZED
CO_E_NOTINITIALIZED
CO_E_NOT_SUPPORTED
CQCtC
CURSORPOS 
CWCf
C\nM4
Cacute
Cannot launch '%s': There is no mail program installed.
CapHeight
Caronsmall
Cast to smaller type causing loss of data
Ccaron
Ccedilla
Ccedillasmall
Cedillasmall
Century
Century Gothic
Chalkboard
CharStrings
CharWidth
CharacterSet
Characters
Circumflexsmall
Clear type: 
Clipboard changed owned 
Clipboard owner on shutdown, releasing.
CloseTouchInputHandle
CoCreateInstance failed
Comic Sans MS
Consolas
ContextFormat: v
Cordia New
CordiaUPC
Core MS Legacy Fonts
Courier
Courier New
CreateWindowEx: 
CreateWindowEx: returns 
Created desktop window 
Creating context version
Csmall
CursorEntry:
CursorShape
D&D4a
D:\qt5\qtbase\plugins\platforms\qwindowsd.pdb
DEFAULT_CHAR
DEST
DESTINATION
DEVICE_FONT_NAME
DFKai-SB
DFKaiSho-SB
DFKaiShu
DL-t(
DWDbDgD
DWIDTH
Dark Courier
David
David Transparent
DejaVu Sans
Delta
Depth=
Descender
DesignVector
Dieresissmall
Digitizers:
DilleniaUPC
Direct3DCreate9
Disabling ANGLE: 
Disabling D3D11: 
Disabling D3D9: 
Disabling Desktop GL: 
DmDs
Dotaccentsmall
DpiAwareness=
Droid Sans
Droid Sans Mono
DropAction
Dsmall
DwmEnableBlurBehindWindow
DwmIsCompositionEnabled
E+E\HTH\HfHrH
E3EAEL
ENCODING
ENDCHAR
ENDFONT
ENDPROPERTIES
END_SPACE
EQC 
ET2g(
EVENT: hwd=
E_ABORT
E_FAIL
E_HANDLE
E_INVALIDARG
E_NOINTERFACE
E_NOTIMPL
E_POINTER
E_UNEXPECTED
Eacute
Eacutesmall
Ecircumflex
Ecircumflexsmall
Edieresis
Edieresissmall
Egrave
Egravesmall
EnEyE
Encoding
EncodingScheme
EndAxis
EndCharMetrics
EndComposites
EndDirection
EndFontMetrics
EndHTML:
EndKernData
EndKernPairs
EndTrackKern
Entering 
EscChar
Esmall
Estrangelo Edessa
Ethsmall
EucrosiaUPC
Event window: 
ExpansionFactor
ExpertEncoding
External WM_DESTROY received for 
F'F2F>F\Fsa
FACE_NAME
FAMILY_NAME
FC\r4
FDArray
FDBytes
FH-H
FIGURE_WIDTH
FKFV
FONT
FONTBOUNDINGBOX
FONTDATA
FONTDEF
FONTNAME_REGISTRY
FONT_ASCENT
FONT_DESCENT
FOUNDRY
FSType
FT_New_Face failed with index
FULL_NAME
Failed to load %s
Failed to load opengl32.dll
Failed to make context current.
Failed to resolve OpenGL function %s
Failed to terminate thread.
Family=
FamilyBlues
FamilyName
FamilyOtherBlues
FangSong_GB2312
FbFi
Fixed Miriam Transparent
FontBBox
FontDirectory
FontMatrix
FontName
FontType
ForceBold
ForceBoldThreshold
Foreign window: 
FrankRuehl
Franklin Gothic Medium
FreesiaUPC
Fsmall
FullName
G!G&C
G+GXGfGkGpGuG{G
G7G;G@GEGJM
G87M
G9\n-.-2-6-:->-B-F-J-N-R0
GDBytes
GDI::choosePixelFormat
GDI::createContext
GL_ARB_multisample 
GL_ARB_robustness
GPGTB
GPU features:
G^GbF
Garamond
Gautami
Gbreve
Generating leave event for 
Geneva
Georgia
GetCharWidthI
GetDpiForMonitor
GetOpenFileNameW
GetProcessDpiAwareness
GetSaveFileNameW
GetTouchInputInfo
Gill Sans
GpuDescription(vendorId=
Gravesmall
Gsmall
Gulim
H=HF
HCURSOR
HEZLOCUS
HFONT
HKEY_CURRENT_USER\AppEvents\Schemes\Apps\.Default\
HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\FontSubstitutes
HPLTE
Helvetica
Helvetica Neue
Ho\thwh
Hsmall
HuaTianKaiTi?
HuaTianSongTi?
Hungarumlautsmall
I&I,I:IJ
I7{^A
IDATx^
IEND
IFileDialog::Advise failed
IID_IAccessible
IID_IAccessible2
IID_IAccessibleAction
IID_IAccessibleApplication
IID_IAccessibleComponent
IID_IAccessibleEditableText
IID_IAccessibleHyperlink
IID_IAccessibleHypertext
IID_IAccessibleImage
IID_IAccessibleRelation
IID_IAccessibleTable
IID_IAccessibleTable2
IID_IAccessibleTableCell
IID_IAccessibleText
IID_IAccessibleValue
IID_IDispatch
IID_IOleWindow
IID_IServiceProvider
IID_IUnknown
INSERTCHAR 
ISOLatin1Encoding
ITALIC_ANGLE
IZgnM
IaIrI
Iacute
Iacutesmall
Icircumflex
Icircumflexsmall
Idieresis
Idieresissmall
Idotaccent
Igrave
Igravesmall
Image is null.
Impact
InitializeConditionVariable
Inr?
Internal KeyRecorder
Invalid value
Invalid value set for 
IrisUPC
IsBaseFont
IsCIDFont
IsFixedPitch
IsFixedV
IsHungAppWindow
IsTouchWindow
Ismall
Italic
ItalicAngle
J1J7JU
J?JH
JasmineUPC
Jsmall
JvKsK}l\tJ
K&K8KFKQ
KUMUX
K^Kd
KaiTi_GB2312
Keyboard recorder buffer overflow, consider increasing QT_MAX_KEY_RECORDINGS
KeyboardModifiers
Klqt
KodchiangUPC
Ksmall
L'LZa
L0L:LA
LHLQ
LOGFONT
LaLj
LanguageGroup
Latha
Launching
Lb`w
Lc8g
Legacy Sans Fonts
Levenim MT
Liberation Sans
Light
LilyUPC
Lobster
Local variable used before initialization
LrMDM
LresultFromObject
Lslash
Lslashsmall
Lsmall
Lucida Console
Lucida Grande
Lucida Sans Typewriter
Lucida Sans Unicode
MAX_SPACE
MINMAXINFO maxSize=
MIN_SPACE
MJM|a
MRM\Mc
MS Gothic
MS Legacy Fonts
MS Mincho
MS Shell Dlg
MS UI Gothic
MV Boli
M^5X
Macronsmall
Mangal
MappingScheme
Marlett
Max touch points:
Medium
MenuCommand
MenuPopup
MetricsSets
Microsoft Sans Serif
MinFeature
Ming(for ISO10646)
MingLi43
MingLiU
Mingliu
Miriam
Miriam Fixed
Miriam Transparent
Misc Legacy Fonts
MjMs
Monaco
MouseButtons
Msmall
MtY&
N$XA
N;NHNQNkN
NCCALCSIZE_PARAMS 
NOMOVECARET 
NORM_SPACE
NOTICE
NWNb
N_3haO
Narkisim
New Monitor: 
Normal
Notice
NqNy
Nsmall
Ntilde
Ntildesmall
O(hHj
O5OFO\OgO
OEsmall
OIDATx^c 
OLE_E_WRONGCOMPOBJ
OQOV
OS/2
OTTO
OY<0
Oacute
Oacutesmall
Oblique
Ocircumflex
Ocircumflexsmall
Odieresis
Odieresissmall
Ogoneksmall
Ograve
Ogravesmall
OleSetClipboard: Failed to clear the clipboard: 0x%lx
OleSetClipboard: Failed to set mime data (%s) on clipboard: %s
Omega
OpOti
OpenGL 1.x entry points not found
OpenGL 2.0 entry points available
OpenGL 2.0 entry points not found
OpenGL version too low
OpenGL: 
Opened tablet context 
OpticalSize
Optima
Ordering
Oslash
Oslashsmall
Osmall
OtherBlues
Otilde
Otildesmall
P.P5
PAPU
PDBOpenValidate5
PIXELFORMATDESCRIPTOR 
PIXEL_SIZE
PLTE
PMingLiU
PNG\r\n
POINT_SIZE
Packet #
PaintType
Palatino Linotype
PmXh]=b
Private
Psmall
Q)Q7QWQ
Q=QH
QApplication::regClass: Registering window class '%s' failed.
QFlags(
QFontDatabase: Cannot find font directory %s - is Qt installed correctly?
QFontEngine: Glyph neither outline nor bitmap format=%d
QFontEngineWin::addOutlineToPath, unhandled switch case
QHash::erase
QList
QList::erase
QList<T>::at
QList<T>::move
QList<T>::operator[]
QList<T>::take
QMap(
QMargins
QMessageBox
QMimeData: 
QOpenGLStaticContext::create
QQuickWindow
QSet
QT_ANGLE_PLATFORM
QT_DEVICE_PIXEL_RATIO
QT_NO_FT_CACHE
QT_OPENGL
QT_OPENGL_BUGLIST
QT_OPENGL_DLL
QT_QPA_VERBOSE
QUAD_WIDTH
QVarLengthArray::QVarLengthArray()
QVariant
QVector::QVector
QVector::insert
QVector<T>::at
QVector<T>::operator[]
QWGLNativeContext
QWidget: Incompatible window flags: the window can't be on top and on bottom at the same time
QWidgetWindow
QWinFontEngine: unable to query transformed glyph metrics (GetGlyphOutline() failed, error %d)...
QWindowCreationContext::QWindowCreationContext
QWindowsAccessible::GetWindow(): 
QWindowsBackingStore::QWindowsBackingStore
QWindowsBackingStore::beginPaint
QWindowsBackingStore::flushDp
QWindowsBackingStore::resize
QWindowsBackingStore::toImage
QWindowsBackingStore::~QWindowsBackingStore
QWindowsClipboard::clipboardViewerWndProc
QWindowsClipboard::mimeData
QWindowsClipboard::ownsMode
QWindowsClipboard::registerViewer
QWindowsClipboard::setMimeData
QWindowsContext: OleInitialize() failed: 
QWindowsContext::registerWindowClass
QWindowsContext::setProcessDpiAwareness
QWindowsContext::user32dll.getTouchInputInfo
QWindowsContext::windowsProc
QWindowsCursor::changeCursor
QWindowsCursor::createSystemCursor
QWindowsDialogHelperBase<class QPlatformFileDialogHelper>::cleanupThread
QWindowsDialogHelperBase<class QPlatformFileDialogHelper>::exec
QWindowsDialogHelperBase<class QPlatformFileDialogHelper>::nativeDialog
QWindowsDialogHelperBase<class QPlatformFileDialogHelper>::show
QWindowsDialogThread::run
QWindowsDialogs::eatMouseMove
QWindowsDrag::drag
QWindowsDrag::releaseDropDataObject
QWindowsDragCursorWindow::setPixmap
QWindowsFileDialogHelper::selectFile
QWindowsFileDialogHelper::setDirectory
QWindowsFileDialogHelper::setFilter
QWindowsFontDatabase::QWindowsFontDatabase
QWindowsFontDatabase::createEngine
QWindowsFontDatabase::fallbacksForFamily
QWindowsFontDatabase::fontDefToLOGFONT
QWindowsFontDatabase::fontDir
QWindowsFontDatabase::fontEngine
QWindowsFontDatabase::systemDefaultFont
QWindowsFontDatabaseFT::fallbacksForFamily
QWindowsFontDatabaseFT::fontDir
QWindowsFontDatabaseFT::fontEngine
QWindowsFontEngine::QWindowsFontEngine
QWindowsFontEngine::~QWindowsFontEngine
QWindowsFontEngineDirectWrite::QWindowsFontEngineDirectWrite
QWindowsFontEngineDirectWrite::addGlyphsToPath
QWindowsFontEngineDirectWrite::boundingBox
QWindowsFontEngineDirectWrite::getSfntTableData
QWindowsFontEngineDirectWrite::glyphIndex
QWindowsFontEngineDirectWrite::imageForGlyph
QWindowsFontEngineDirectWrite::recalcAdvances
QWindowsFontEngineDirectWrite::stringToCMap
QWindowsFontEngineDirectWrite::~QWindowsFontEngineDirectWrite
QWindowsGLContext: Failed to describe pixel format
QWindowsGLContext: Failed to get pixel format
QWindowsGLContext: No context and window given
QWindowsGLContext: Requires a QWGLNativeContext
QWindowsGLContext::QWindowsGLContext
QWindowsGLContext::getProcAddress
QWindowsGLContext::makeCurrent
QWindowsGLContext::swapBuffers
QWindowsGdiNativeInterface
QWindowsGdiNativeInterface::nativeResourceForBackingStore
QWindowsGeometryHint::applyToMinMaxInfo
QWindowsGeometryHint::frame
QWindowsGeometryHint::handleCalculateSize
QWindowsGuiEventDispatcher
QWindowsGuiEventDispatcher::processEvents
QWindowsIA2Accessible::QI() - IID:
QWindowsIA2Accessible::QS(): 
QWindowsInputContext
QWindowsInputContext::composition
QWindowsInputContext::cursorRectChanged
QWindowsInputContext::endComposition
QWindowsInputContext::endContextComposition
QWindowsInputContext::invokeAction
QWindowsInputContext::reconvertString
QWindowsInputContext::reset
QWindowsInputContext::startComposition
QWindowsInputContext::startContextComposition
QWindowsIntegration::createPlatformOpenGLContext
QWindowsIntegration::createWindowData
QWindowsIntegrationPlugin
QWindowsIntegrationPrivate::QWindowsIntegrationPrivate
QWindowsInternalMimeData::formats_sys
QWindowsInternalMimeData::hasFormat_sys
QWindowsInternalMimeData::retrieveData_sys
QWindowsKeyMapper::updatePossibleKeyCodes
QWindowsMime::allMimesForFormats()
QWindowsMime::registerMimeType: Failed to register clipboard format
QWindowsMimeConverter::convertToMime
QWindowsMimeText::convertToMime
QWindowsMultiFontEngine::loadEngine
QWindowsNativeDialogBase
QWindowsNativeFileDialogBase
QWindowsNativeFileDialogBase::close
QWindowsNativeFileDialogBase::doExec
QWindowsNativeFileDialogBase::init
QWindowsNativeFileDialogBase::selectNameFilter
QWindowsNativeFileDialogBase::setMode
QWindowsNativeFileDialogBase::shellItem
QWindowsNativeInterface
QWindowsNativeInterface::nativeResourceForContext
QWindowsNativeInterface::nativeResourceForWindow
QWindowsNativeSaveFileDialog
QWindowsOleDataObject::EnumFormatEtc
QWindowsOleDataObject::GetData
QWindowsOleDataObject::QWindowsOleDataObject
QWindowsOleDataObject::QueryGetData
QWindowsOleDataObject::SetData
QWindowsOleDropSource::QWindowsOleDropSource
QWindowsOleDropSource::QueryContinueDrag
QWindowsOleDropSource::createCursors
QWindowsOleDropSource::~QWindowsOleDropSource
QWindowsOleDropTarget::DragEnter
QWindowsOleDropTarget::DragLeave
QWindowsOleDropTarget::DragOver
QWindowsOleDropTarget::Drop
QWindowsOleDropTarget::QWindowsOleDropTarget
QWindowsOleDropTarget::handleDrag
QWindowsOleDropTarget::~QWindowsOleDropTarget
QWindowsOleEnumFmtEtc::QWindowsOleEnumFmtEtc
QWindowsOpenGLTester::supportedGlesRenderers
QWindowsOpenGLTester::supportedRenderers
QWindowsScreen::topLevelAt
QWindowsScreen::windowAt
QWindowsScreenManager::handleDisplayChange
QWindowsTabletSupport::create
QWindowsTabletSupport::notifyActivate
QWindowsTabletSupport::translateTabletPacketEvent
QWindowsTheme::fileIconPixmap() no icon found
QWindowsWindow::destroyWindow
QWindowsWindow::getSizeHints
QWindowsWindow::handleGeometryChange
QWindowsWindow::handleWindowStateChange
QWindowsWindow::lower
QWindowsWindow::propagateSizeHints
QWindowsWindow::raise
QWindowsWindow::requestActivateWindow
QWindowsWindow::setCursor
QWindowsWindow::setCustomMargins
QWindowsWindow::setDropSiteEnabled
QWindowsWindow::setExStyle
QWindowsWindow::setGeometryDp
QWindowsWindow::setGeometry_sys
QWindowsWindow::setKeyboardGrabEnabled
QWindowsWindow::setMouseGrabEnabled
QWindowsWindow::setOpacity
QWindowsWindow::setParent
QWindowsWindow::setStyle
QWindowsWindow::setVisible
QWindowsWindow::setWindowFlags
QWindowsWindow::setWindowState_sys
QWindowsWindow::setWindowTitle
QWindowsXpNativeFileDialog
Q_ASSUME()
Q_Qd
Q_UNREACHABLE was reached
Q_UNREACHABLE()
Qsmall
Qt: Internal keyboard buffer overflow
Qt: Using WGL and OpenGL from
QtMetaTypePrivate::QSequentialIterableImpl
R%R<RqS
R+R2
RAW_ASCENT
RAW_AVERAGE_WIDTH
RAW_AVG_CAPITAL_WIDTH
RAW_AVG_LOWERCASE_WIDTH
RAW_CAP_HEIGHT
RAW_DESCENT
RAW_END_SPACE
RAW_FIGURE_WIDTH
RAW_MAX_SPACE
RAW_MIN_SPACE
RAW_NORM_SPACE
RAW_PIXELSIZE
RAW_PIXEL_SIZE
RAW_POINTSIZE
RAW_POINT_SIZE
RAW_QUAD_WIDTH
RAW_SMALL_CAP_SIZE
RAW_STRIKEOUT_ASCENT
RAW_STRIKEOUT_DESCENT
RAW_SUBSCRIPT_SIZE
RAW_SUBSCRIPT_X
RAW_SUBSCRIPT_Y
RAW_SUPERSCRIPT_SIZE
RAW_SUPERSCRIPT_X
RAW_SUPERSCRIPT_Y
RAW_UNDERLINE_POSITION
RAW_UNDERLINE_THICKNESS
RAW_X_HEIGHT
RC%jA
RECT: left/top=
RELATIVE_SETWIDTH
RELATIVE_WEIGHT
RESOLUTION
RESOLUTION_X
RESOLUTION_Y
RESULTSTR 
RFRQR\Rf
RPC_E_CHANGED_MODE
RPC_E_THREAD_NOT_INIT
RPC_E_WRONG_THREAD
RSDS[v
RX0e
Raavi
Ready:
RegCloseKey
RegOpenKeyExW
RegQueryValueExW
RegisterTouchWindow
RegisterTouchWindow() failed for window '%s'.
Registry
Regular
Regular Class
Regular/Bold Class
Regular/Italic Class
Releasing automatic mouse capture 
RemoveClipboardFormatListener
Removing Monitor:
Ringsmall
Rod Transparent
Role: 
Roman
Rsmall
Run-Time Check Failure #%d - %s
S%S?a
S+S6
SDBytes
SETWIDTH_NAME
SHCreateItemFromIDList
SHCreateItemFromParsingName
SHGetImageList
SHGetKnownFolderIDList
SHGetStockIconInfo
SIZE
SLANT
SLSnSzS
SMALL_CAP_SIZE
SPACING
SRSd
STARTCHAR
STARTFONT
STARTPROPERTIES
STRIKEOUT_ASCENT
STRIKEOUT_DESCENT
SUBSCRIPT_SIZE
SUBSCRIPT_X
SUBSCRIPT_Y
SUPERSCRIPT_SIZE
SUPERSCRIPT_X
SUPERSCRIPT_Y
SWIDTH
S[bH
S_FALSE
S_OK
Scaron
Scaronsmall
Scedilla
Screen "
Segoe UI
Semibold
SetLayeredWindowAttributes
SetPixelFormat failed.
SetProcessDPIAware
SetProcessDPIAware() failed
SetProcessDpiAwareness
SetProcessDpiAwareness failed:
ShellExecute '%s' failed (error %s).
Shruti
SimHei
SimSun
Simplified Arabic
Simplified Arabic Fixed
Simsun
Size must be greater than or equal to 0.
Slant
SleepConditionVariableCS
Ssmall
Stack area around _alloca memory reserved by this function is corrupted
Stack area around _alloca memory reserved by this function is corrupted\n
Stack around _alloca corrupted
Stack around the variable '
Stack corrupted near unknown variable
Stack memory around _alloca was corrupted\n\r
Stack memory corruption
Stack memory was corrupted\n\r
Stack pointer corruption
StandardEncoding
StartAxis
StartCharMetrics
StartComposites
StartData
StartDirection
StartFontMetrics
StartHTML:
StartKernData
StartKernPairs
StartKernPairs0
StartKernPairs1
StartTrackKern
StdHW
StdVW
StemSnapH
StemSnapV
StrokeWidth
SubrCount
SubrMapOffset
Subrs
Supplement
Sylfaen
Symbol
Synthetic leave for 
T#T.Tk
T4T;
TETNTc
THEZOCQS
THxV
TPLTE
TTT[
Tablet PC:
Tablet support: 
TabletDevice id:
Tahoma
Tcommaaccent
The specified iterator argument 'before' is invalid
The specified iterator argument 'it' is invalid
The value of ESP was not properly saved across a function call.  This is usually a result of calling a function declared with one calling convention with a function pointer declared with a different calling convention.\n\r
The variable '
This version of Windows is not supported (User32.dll is missing the symbols 'SetLayeredWindowAttributes', 'UpdateLayeredWindow').
Thorn
Thornsmall
Thread terminated.
Tildesmall
Times
Times New Roman
Tn9{
TrackKern
TrackMouseEvent failed.
Traditional Arabic
Trebuchet MS
TrueType
Tsmall
Tunga
Type 1
Type 42
UEUeUt
UIDBase
UNDERLINE_POSITION
UNDERLINE_THICKNESS
U\r8r+
Uacute
Uacutesmall
Ubuntu
Ucircumflex
Ucircumflexsmall
Udieresis
Udieresissmall
Ugrave
Ugravesmall
Unable to create a GL Context.
Unable to create window for tablet.
Unable to enumerate family '
Unable to launch '%s'
Unable to obtain IFileDialogEvents
Unable to open tablet.
Unable to set queue size on tablet. The tablet will not work.
UnderlinePosition
UnderlineThickness
UniqueID
Unknown
Unknown Filename
Unknown Module Name
Unknown Runtime Check Error\n\r
Unknown exception
Unknown option
UnregisterClass failed for '%s'
UnregisterTouchWindow
UpdateLayeredWindow
UpdateLayeredWindowIndirect
Usmall
V$VYW
V,V7VB
VVector
Value
Verdana
Verdana Clones
Verdana and Clones
Version
Version:1.0\r\nStartHTML:0000000107\r\nEndHTML:0000000000\r\nStartFragment:0000000000\r\nEndFragment:0000000000\r\n\r\n
VgVrV
Vh`D
Vsmall
W$W>WBWSW
W'tVa
W,W6
WEIGHT
WEIGHT_NAME
WJ?,C
WM_ACTIVATE
WM_ACTIVATEAPP
WM_APPCOMMAND
WM_CANCELMODE
WM_CAPTURECHANGED
WM_CHANGECBCHAIN
WM_CHAR
WM_CHILDACTIVATE
WM_CLOSE
WM_CREATE
WM_DEADCHAR
WM_DESTROY
WM_DESTROYCLIPBOARD
WM_DISPLAYCHANGE
WM_DRAWCLIPBOARD
WM_DWMNCRENDERINGCHANGED
WM_ENABLE
WM_ENDSESSION
WM_ENTERIDLE
WM_ERASEBKGND
WM_GETFONT
WM_GETICON
WM_GETMINMAXINFO
WM_IMECHAR
WM_IME_COMPOSITION
WM_IME_ENDCOMPOSITION
WM_IME_NOTIFY
WM_IME_REQUEST
WM_IME_SETCONTEXT
WM_IME_STARTCOMPOSITION
WM_INPUTLANGCHANGE
WM_KEYDOWN
WM_KEYUP
WM_KILLFOCUS
WM_LBUTTONDBLCLK
WM_LBUTTONDOWN
WM_LBUTTONUP
WM_MBUTTONDBLCLK
WM_MBUTTONDOWN
WM_MBUTTONUP
WM_MOUSEACTIVATE
WM_MOUSEHWHEEL
WM_MOUSELEAVE
WM_MOUSELEAVE for 
WM_MOUSEMOVE
WM_MOUSEWHEEL
WM_MOVE
WM_NCACTIVATE
WM_NCCALCSIZE
WM_NCCREATE
WM_NCHITTEST
WM_NCLBUTTONDOWN
WM_NCLBUTTONUP
WM_NCMOUSELEAVE
WM_NCMOUSEMOVE
WM_NCPAINT
WM_PAINT
WM_PARENTNOTIFY
WM_QUERYENDSESSION
WM_RBUTTONDBLCLK
WM_RBUTTONDOWN
WM_RBUTTONUP
WM_RENDERALLFORMATS
WM_RENDERFORMAT
WM_SETCURSOR
WM_SETFOCUS
WM_SHOWWINDOW
WM_SIZE
WM_SYSCOMMAND
WM_SYSKEYDOWN
WM_SYSKEYUP
WM_THEMECHANGED
WM_TOUCH
WM_WINDOWPOSCHANGED
WM_WINDOWPOSCHANGING
WM_XBUTTONDBLCLK
WM_XBUTTONDOWN
WM_XBUTTONUP
WST_
WTClose
WTEnable
WTGetW
WTInfoW
WTOpenW
WTOverlap
WTPacketsGet
WTQueueSizeGet
WTQueueSizeSet
WakeAllConditionVariable
Webdings
Weight
WeightVector
WiWr
Width
WinDisc
WindowCreationData: 
WindowCreationData::applyWindowFlags
WindowCreationData::create
WindowState
WindowType
Windows FNT
WindowsCustomMargins
WindowsSetTouchWindowTouchType
Wingdings
Wrote 
Wsmall
X        c #FFFFFF
X7iii9P
XCXVXac
XClK
XHeight
XIDATx^c
XIXP
XJQ\vx
X_HEIGHT
Xsmall
YFDAt
YLYVh
Y]Ym[u[
Yacute
Yacutesmall
Ydieresis
Ydieresissmall
YeYii
Ysmall
Z!Z1
ZDZUZ]Zj
Zcaron
Zcaronsmall
ZkHm~
Zsmall
Z{\r\n    "name": "Qt built-in GPU driver blacklist",\r\n    "version": "5.5",\r\n    "entries": [\r\n        {\r\n            "id": 1,\r\n            "description": "Desktop OpenGL is unreliable on some Intel HD laptops (QTBUG-43263, QTBUG-42240)",\r\n            "vendor_id": "0x8086",\r\n            "device_id": [ "0x0A16" ],\r\n            "os": {\r\n                "type": "win"\r\n            },\r\n            "driver_version": {\r\n                "op": "<=",\r\n                "value": "10.18.10.3277"\r\n            },\r\n            "features": [\r\n                "disable_desktopgl"\r\n            ]\r\n        }\r\n    ]\r\n}\r\n
[#[/[:[[[c[n
[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{8}
\!\(\A\\\~\
\Fonts\
\f(\f6\fC\fP\f_\fn\f|\f
\fQ0D
\n         Device ID: 0x
\n         SubSys ID: 0x
\n         Vendor ID: 0x
\n       Driver Name: 
\n       Revision ID: 0x
\n    Driver Version: 
\n    ExStyle from 
\n    HGLRC=
\n    Obtained : 
\n    Requested: 
\n    Style from 
\n    default: 
\n    from: 
\n    obtained #
\n    obtained px #
\n    returns: 
\n  exStyle=
\n  style=
\n  topLevel=
\n from 
\n resulting 
\n"\n)\n7\nA\nH\nS\nc\np\n|\n
\nAddress: 0x
\nAllocation number within this function: 
\nExtensions: 
\nFormat: 
\nSize: 
\nZmG
\nrequested: 
\r%\r1\rB\rQ\rZ\rf\rr\r~\r
\rIDATx^
\rIHDR
\rVXE
\t \t$\t6\tI\tY\th\ts\tz\t
\t49Z
\t89Q&
\v"\v,\v9\vE\vR\v[\ve\vr\v
]/qNn
^a=Wl
_MULE_BASELINE_OFFSET
_MULE_RELATIVE_COMPOSE
_XFREE86_GLYPH_RANGES
__$AllocaPad$
__cdecl QWindowCreationContext::QWindowCreationContext(const class QWindow *,const class QRect &,const class QMargins &,unsigned long,unsigned long)
__cdecl QWindowsBackingStore::QWindowsBackingStore(class QWindow *)
__cdecl QWindowsBackingStore::~QWindowsBackingStore(void)
__cdecl QWindowsContext::QWindowsContext(void)
__cdecl QWindowsContextPrivate::QWindowsContextPrivate(void)
__cdecl QWindowsFontDatabase::QWindowsFontDatabase(void)
__cdecl QWindowsFontEngine::QWindowsFontEngine(const class QString &,struct tagLOGFONTW,const class QSharedPointer<class QWindowsFontEngineData> &)
__cdecl QWindowsFontEngine::~QWindowsFontEngine(void)
__cdecl QWindowsFontEngineDirectWrite::QWindowsFontEngineDirectWrite(struct IDWriteFontFace *,double,const class QSharedPointer<class QWindowsFontEngineData> &)
__cdecl QWindowsFontEngineDirectWrite::~QWindowsFontEngineDirectWrite(void)
__cdecl QWindowsGLContext::QWindowsGLContext(class QOpenGLStaticContext *,class QOpenGLContext *)
__cdecl QWindowsIntegrationPrivate::QWindowsIntegrationPrivate(const class QStringList &)
__cdecl QWindowsOleDataObject::QWindowsOleDataObject(class QMimeData *)
__cdecl QWindowsOleDropSource::QWindowsOleDropSource(class QWindowsDrag *)
__cdecl QWindowsOleDropSource::~QWindowsOleDropSource(void)
__cdecl QWindowsOleDropTarget::QWindowsOleDropTarget(class QWindow *)
__cdecl QWindowsOleDropTarget::~QWindowsOleDropTarget(void)
__cdecl QWindowsOleEnumFmtEtc::QWindowsOleEnumFmtEtc(const class QVector<struct tagFORMATETC *> &)
__cdecl QWindowsOleEnumFmtEtc::QWindowsOleEnumFmtEtc(const class QVector<struct tagFORMATETC> &)
__int64 __cdecl qWindowsWndProc(struct HWND__ *,unsigned int,unsigned __int64,__int64)
_q_embedded_native_parent_handle
_q_showWithoutActivating
_q_windowsCustomMargins
_q_windowsDropShadow
`PLTE
`anonymous-namespace'::CustomFontFileLoader::CustomFontFileLoader
`anonymous-namespace'::DirectWriteFontFileLoader::CreateStreamFromKey
a        c #000000
a'aCaYb"b8b
a-a8
a.....aXXa..............
aJaP
aXXXXXXXXXa.............
aXXXXXXXXa..............
aXXXXXXXa...............
aXXXXXXa................
aXXXXXXaaaa.............
aXXXXXa.................
aXXXXa..................
aXXXa...................
aXXXaXXa................
aXXa....................
aXXaaXXa................
aXa.....................
aXa..aXXa...............
a\ft/tOtet
aa......................
aa...aXXa...............
aacute
aalloc ? d != Data::sharedNull() : d == Data::sharedNull()
aboutToQuit()
acceptMode=
accepted
accessible\comutils.cpp
accessible\iaccessible2.cpp
accessible\qwindowsmsaaaccessible.cpp
acircumflex
acute
addFontToDatabase
adieresis
aeam
agrave
ahoj
allowedEffects=0x
ampersand
ampersandsmall
angle
antialias
apple
application/x-qt-image
application/x-qt-windows-mime;value="
approxequal
argList
aring
asciicircum
asciitilde
asize >= 0 && asize <= aalloc
asterisk
asuperior
asyncExpose
atilde
attributes
auto
autofitter
b(b0
bBbMb
bONI
bTbm
b\fp\v0
b\rVBP
b^be
ba.ref.isStatic()
backslash
bad allocation
bad array new length
beep
bitmap.pixel_mode == FT_PIXEL_MODE_GRAY
bmys
bool __cdecl QWindowsClipboard::clipboardViewerWndProc(struct HWND__ *,unsigned int,unsigned __int64,__int64,__int64 *)
bool __cdecl QWindowsClipboard::ownsMode(enum QClipboard::Mode) const
bool __cdecl QWindowsContext::windowsProc(struct HWND__ *,unsigned int,enum QtWindows::WindowsEventType,unsigned __int64,__int64,__int64 *)
bool __cdecl QWindowsDialogHelperBase<class QPlatformFileDialogHelper>::show(class QFlags<enum Qt::WindowType>,enum Qt::WindowModality,class QWindow *)
bool __cdecl QWindowsGLContext::makeCurrent(class QPlatformSurface *)
bool __cdecl QWindowsGLContext::updateObtainedParams(struct HDC__ *,int *)
bool __cdecl QWindowsGeometryHint::handleCalculateSize(const class QMargins &,const struct tagMSG &,__int64 *)
bool __cdecl QWindowsGuiEventDispatcher::processEvents(class QFlags<enum QEventLoop::ProcessEventsFlag>)
bool __cdecl QWindowsInputContext::composition(struct HWND__ *,__int64)
bool __cdecl QWindowsInputContext::endComposition(struct HWND__ *)
bool __cdecl QWindowsInputContext::startComposition(struct HWND__ *)
bool __cdecl QWindowsInternalMimeData::hasFormat_sys(const class QString &) const
bool __cdecl QWindowsMouseHandler::translateMouseEvent(class QWindow *,struct HWND__ *,enum QtWindows::WindowsEventType,struct tagMSG,__int64 *)
bool __cdecl QWindowsNativeFileDialogBase::init(const struct _GUID &,const struct _GUID &)
bool __cdecl QWindowsOpenGLTester::testDesktopGL(void)
bool __cdecl QWindowsOpengl32DLL::init(bool)
bool __cdecl QWindowsScreenManager::handleDisplayChange(unsigned __int64,__int64)
bool __cdecl QWindowsScreenManager::handleScreenChanges(void)
bool __cdecl QWindowsTabletSupport::translateTabletPacketEvent(void)
bool __cdecl QWindowsTabletSupport::translateTabletProximityEvent(unsigned __int64,__int64)
bool __cdecl QWindowsWindow::setKeyboardGrabEnabled(bool)
bool __cdecl QWindowsWindow::setMouseGrabEnabled(bool)
bool __cdecl addFontToDatabase(const class QString &,const class QString &,unsigned char,const struct tagTEXTMETRICW *,const struct tagFONTSIGNATURE *,int,bool)
bool __cdecl addFontToDatabase(const class QString &,unsigned char,const struct tagTEXTMETRICW *,const struct tagFONTSIGNATURE *,int,bool)
bool __cdecl addGlyphToPath(unsigned int,const struct QFixedPoint &,struct HDC__ *,class QPainterPath *,bool,struct glyph_metrics_t *,double)
bool __cdecl launchMail(const class QUrl &)
bool __cdecl monitorData(struct HMONITOR__ *,struct QWindowsScreenData *)
bool __cdecl parseIntOption<enum QtWindows::ProcessDpiAwareness>(const class QString &,const class QLatin1String &,enum QtWindows::ProcessDpiAwareness,enum QtWindows::ProcessDpiAwareness,enum QtWindows::ProcessDpiAwareness *)
bool __cdecl parseIntOption<int>(const class QString &,const class QLatin1String &,int,int,int *)
bool __cdecl shellExecute(const class QUrl &)
braceleft
braceright
bracketleft
bracketright
breve
brokenbar
bsuperior
bullet
button:
buttons
bwb~
c c2
c.bitmap()
c.mask()
c7cPc
c>cG
cZcccqc
cacute
called with
capacity() >= asize
caron
ccaron
ccedilla
cedilla
cent
centinferior
centoldstyle
centsuperior
changed packet queue size 
char
cinu
circumflex
class QByteArray __cdecl writeDib(const class QImage &)
class QFlags<enum QWindowsOpenGLTester::Renderer> __cdecl QWindowsOpenGLTester::detectSupportedRenderers(const struct GpuDescription &,bool)
class QFlags<enum QWindowsOpenGLTester::Renderer> __cdecl QWindowsOpenGLTester::supportedGlesRenderers(void)
class QFlags<enum QWindowsOpenGLTester::Renderer> __cdecl QWindowsOpenGLTester::supportedRenderers(void)
class QFont __cdecl QWindowsFontDatabase::systemDefaultFont(void)
class QFontEngine *__cdecl QWindowsFontDatabase::fontEngine(const class QByteArray &,double,enum QFont::HintingPreference)
class QFontEngine *__cdecl QWindowsFontDatabase::fontEngine(const struct QFontDef &,void *)
class QFontEngine *__cdecl QWindowsFontDatabaseFT::fontEngine(const class QByteArray &,double,enum QFont::HintingPreference)
class QFontEngine *__cdecl QWindowsFontDatabaseFT::fontEngine(const struct QFontDef &,void *)
class QImage __cdecl QWindowsBackingStore::toImage(void) const
class QImage __cdecl readDib(class QByteArray)
class QMargins __cdecl QWindowsGeometryHint::frame(unsigned long,unsigned long)
class QMimeData *__cdecl QWindowsClipboard::mimeData(enum QClipboard::Mode)
class QOpenGLStaticContext *__cdecl QOpenGLStaticContext::create(bool)
class QPixmap __cdecl QWindowsTheme::fileIconPixmap(const class QFileInfo &,const class QSizeF &,class QFlags<enum QPlatformTheme::IconOption>) const
class QPlatformOpenGLContext *__cdecl QWindowsIntegration::createPlatformOpenGLContext(class QOpenGLContext *) const
class QString __cdecl QWindowsContext::registerWindowClass(class QString,__int64 (__cdecl *)(struct HWND__ *,unsigned int,unsigned __int64,__int64),unsigned int,struct HBRUSH__ *,bool)
class QString __cdecl QWindowsFontDatabase::fontDir(void) const
class QString __cdecl QWindowsFontDatabaseFT::fontDir(void) const
class QString __cdecl mailCommand(void)
class QStringList __cdecl QBasicFontDatabase::addTTFile(const class QByteArray &,const class QByteArray &,class QSupportedWritingSystems *)
class QStringList __cdecl QWindowsFontDatabase::fallbacksForFamily(const class QString &,enum QFont::Style,enum QFont::StyleHint,enum QChar::Script) const
class QStringList __cdecl QWindowsFontDatabaseFT::fallbacksForFamily(const class QString &,enum QFont::Style,enum QFont::StyleHint,enum QChar::Script) const
class QStringList __cdecl QWindowsInternalMimeData::formats_sys(void) const
class QStringList __cdecl QWindowsMimeConverter::allMimesForFormats(struct IDataObject *) const
class QTouchDevice *__cdecl createTouchDevice(void)
class QVariant __cdecl QWindowsInternalMimeData::retrieveData_sys(const class QString &,enum QVariant::Type) const
class QVariant __cdecl QWindowsMimeConverter::convertToMime(const class QStringList &,struct IDataObject *,enum QVariant::Type,class QString *) const
class QVariant __cdecl QWindowsMimeText::convertToMime(const class QString &,struct IDataObject *,enum QVariant::Type) const
class QWindow *__cdecl QWindowsScreen::topLevelAt(const class QPoint &) const
class QWindow *__cdecl QWindowsScreen::windowAt(const class QPoint &,unsigned int)
class QWindowsNativeDialogBase *__cdecl QWindowsDialogHelperBase<class QPlatformFileDialogHelper>::nativeDialog(void) const
class QWindowsTabletSupport *__cdecl QWindowsTabletSupport::create(void)
classNameIn
classNameTemplate
close
closedhandcursor_32.png
closedhandcursor_48.png
closedhandcursor_64.png
closefile
closing
clsid
colon
colonmonetary
comma
commainferior
commasuperior
compressed event
const void*
contour:
copyright
createDIB
createDummyGLContext
createMessageWindow
currency
currentChanged
currentlyLockedAlphaMap.isNull()
cursorRectChanged
cursors:\n
d != Data::unsharableEmpty()
d->alloc >= uint(aalloc)
d->data()
d->size == asize
d3d11
d3d9
d6d?a
d:\qt5\qtbase\include\qtcore\../../src/corelib/global/qglobal.h
d:\qt5\qtbase\include\qtcore\../../src/corelib/kernel/qmetatype.h
d:\qt5\qtbase\include\qtcore\../../src/corelib/tools/qbytearray.h
d:\qt5\qtbase\include\qtcore\../../src/corelib/tools/qhash.h
d:\qt5\qtbase\include\qtcore\../../src/corelib/tools/qlist.h
d:\qt5\qtbase\include\qtcore\../../src/corelib/tools/qscopedpointer.h
d:\qt5\qtbase\include\qtcore\../../src/corelib/tools/qsharedpointer_impl.h
d:\qt5\qtbase\include\qtcore\../../src/corelib/tools/qsize.h
d:\qt5\qtbase\include\qtcore\../../src/corelib/tools/qstring.h
d:\qt5\qtbase\include\qtcore\../../src/corelib/tools/qvarlengtharray.h
d:\qt5\qtbase\include\qtcore\../../src/corelib/tools/qvector.h
d:\qt5\qtbase\include\qtcore\5.5.0\qtcore\private\../../../../../src/corelib/tools/qsimd_p.h
d:\qt5\qtbase\include\qtcore\5.5.0\qtcore\private\../../../../../src/corelib/tools/qstringiterator_p.h
d:\qt5\qtbase\include\qtgui\5.5.0\qtgui\private\../../../../../src/gui/painting/qdrawhelper_p.h
d:\qt5\qtbase\include\qtgui\5.5.0\qtgui\private\../../../../../src/gui/text/qfragmentmap_p.h
d:\qt5\qtbase\src\plugins\platforms\windows\accessible\qwindowsmsaaaccessible.h
dX&L
d]dbdpdyd
dagger
daggerdbl
darkening-parameters
dcroat
default-script
degree
desktop
dhdl3
dialogs=
dieresis
directWriteFont
directWriteFontFace
directory
directoryEntered
dispidNamed
dispparams
divide
dollar
dollarinferior
dollaroldstyle
dollarsuperior
dotaccent
dotlessi
dpiawareness
dragcopycursor_32.png
dragcopycursor_48.png
dragcopycursor_64.png
draglinkcursor_32.png
draglinkcursor_48.png
draglinkcursor_64.png
dragmovecursor_32.png
dragmovecursor_48.png
dragmovecursor_64.png
dropAction=
dsuperior
dwFlags=
e e%e.e=eM
eZe}e
e\rxG+E\4XR
eacute
ebegeq
ecircumflex
edieresis
eexec
effects=0x
eglconfig
eglcontext
egldisplay
egrave
eight
eightinferior
eightoldstyle
eightsuperior
ellipsis
emdash
empty distance tree with lengths
endash
enter proximity for device #
enum QWindowsOpenGLTester::Renderer __cdecl QWindowsOpenGLTester::requestedGlesRenderer(void)
enum QWindowsOpenGLTester::Renderer __cdecl QWindowsOpenGLTester::requestedRenderer(void)
enum Qt::DropAction __cdecl QWindowsDrag::drag(class QDrag *)
equal
esuperior
et=0x
eventProc
excepInfo
exclam
exclamdown
exclamdownsmall
exclamsmall
f!f=fEfwf
f'f5
fEscapePressed=
fPfo
fWfc
fails
fallback-script
ffffff
field < Fragment::size_array_max
figuredash
fijkdbh
file
filter
filterSelected
filterSeparatorRE.isValid()
five
fiveeighths
fiveinferior
fiveoldstyle
fivesuperior
float
florin
fontEngine->ref.load() == 0
fontdatabases\basic\qbasicfontdatabase.cpp
fontengine=
for option
format != Format_None
format listener:
found cell? 
four
fourinferior
fouroldstyle
foursuperior
fraction
franc
freetype
g5g>gK
gZgnhKhWhci
gamma: 
gbreve
germandbls
getDC
getdc
gl=gdi
glBindTexture
glBlendFunc
glClear
glClearColor
glClearDepth
glClearStencil
glColorMask
glCopyTexImage2D
glCopyTexSubImage2D
glCreateShader
glCullFace
glDeleteTextures
glDepthFunc
glDepthMask
glDepthRange
glDisable
glDrawArrays
glDrawElements
glEnable
glFinish
glFlush
glFrontFace
glGenTextures
glGetBooleanv
glGetError
glGetFloatv
glGetGraphicsResetStatusARB
glGetIntegerv
glGetString
glGetStringi
glGetTexParameterfv
glGetTexParameteriv
glHint
glIsEnabled
glIsTexture
glLineWidth
glPixelStorei
glPolygonOffset
glReadPixels
glScissor
glStencilFunc
glStencilMask
glStencilOp
glTexImage2D
glTexParameterf
glTexParameterfv
glTexParameteri
glTexParameteriv
glTexSubImage2D
glViewport
glhandle
glyph-dict
glyph-to-script-map
glyph_buffer_size <= bitmap_buffer_size
glyphs->numGlyphs >= *nglyphs
grave
greater
greaterequal
grfKeyState=
guillemotleft
guillemotright
guilsinglleft
guilsinglright
h>5q
hJuA
handle
handled=
hhh/09GGG+,7
hideFiltersDetails
hinting-engine
hj(5W<
hotspot:
hr=0x
hsxD
hungarumlaut
hyphen
hypheninferior
hyphensuperior
i(i4i:iP
iIDATx^
iacute
icircumflex
icon
idieresis
idx >= 0 && idx < s
igrave
imeNotifyCancelComposition
incomplete distance tree
incomplete dynamic bit lengths tree
incomplete literal/length tree
incorrect data check
incorrect header check
increase-x-height
index in parent invalid:
index out of range
infinity
initDirectWrite
initFontInfo: Failed to get family name
int __cdecl ARB::choosePixelFormat(struct HDC__ *,const class QOpenGLStaticContext &,const class QSurfaceFormat &,const struct QWindowsOpenGLAdditionalFormat &,struct tagPIXELFORMATDESCRIPTOR *)
int __cdecl GDI::choosePixelFormat(struct HDC__ *,const class QSurfaceFormat &,const struct QWindowsOpenGLAdditionalFormat &,struct tagPIXELFORMATDESCRIPTOR *)
int __cdecl QWindowsInputContext::reconvertString(struct tagRECONVERTSTRING *)
int(*length) > 0
int(d->alloc) == aalloc
integral
interpreter-version
invalid bit length repeat
invalid block type
invalid distance code
invalid literal/length code
invalid stored block lengths
invalid window size
ipos < GRADIENT_STOPTABLE_SIZE
ipos >= 0
isDetached()
isFixedPitch
isuperior
iterator hasn't a next item
jDjK
j[ros
jsIM]G
k k.k;m
kZkjk
k\vnK
kerning
key=
keyName=
keys=
kjO}
known
l*l3
lElblrl
lKlV
launchMail
leave proximity for device #
lenBuildCharArray
lenIV
less
lessequal
load glyph failed due to broken hinting bytecode in font, switching to auto hinting
load glyph failed err=%x face=%p, glyph=%d
logFont
logFontToQFont
logicalnot
long __cdecl AccessibleApplication::QueryInterface(const struct _GUID &,void **)
long __cdecl QWindowsIA2Accessible::QueryService(const struct _GUID &,const struct _GUID &,void **)
long __cdecl QWindowsIA2Accessible::addSelection(long,long)
long __cdecl QWindowsIA2Accessible::copyText(long,long)
long __cdecl QWindowsIA2Accessible::cutText(long,long)
long __cdecl QWindowsIA2Accessible::deleteText(long,long)
long __cdecl QWindowsIA2Accessible::doAction(long)
long __cdecl QWindowsIA2Accessible::get_attributes(long,long *,long *,wchar_t **)
long __cdecl QWindowsIA2Accessible::get_attributes(wchar_t **)
long __cdecl QWindowsIA2Accessible::get_background(long *)
long __cdecl QWindowsIA2Accessible::get_caption(struct IUnknown **)
long __cdecl QWindowsIA2Accessible::get_caretOffset(long *)
long __cdecl QWindowsIA2Accessible::get_cellAt(long,long,struct IUnknown **)
long __cdecl QWindowsIA2Accessible::get_characterExtents(long,enum IA2CoordinateType,long *,long *,long *,long *)
long __cdecl QWindowsIA2Accessible::get_columnDescription(long,wchar_t **)
long __cdecl QWindowsIA2Accessible::get_columnExtent(long *)
long __cdecl QWindowsIA2Accessible::get_columnHeaderCells(struct IUnknown ***,long *)
long __cdecl QWindowsIA2Accessible::get_columnIndex(long *)
long __cdecl QWindowsIA2Accessible::get_currentValue(struct tagVARIANT *)
long __cdecl QWindowsIA2Accessible::get_description(long,wchar_t **)
long __cdecl QWindowsIA2Accessible::get_foreground(long *)
long __cdecl QWindowsIA2Accessible::get_indexInParent(long *)
long __cdecl QWindowsIA2Accessible::get_isColumnSelected(long,unsigned char *)
long __cdecl QWindowsIA2Accessible::get_isRowSelected(long,unsigned char *)
long __cdecl QWindowsIA2Accessible::get_isSelected(unsigned char *)
long __cdecl QWindowsIA2Accessible::get_keyBinding(long,long,wchar_t ***,long *)
long __cdecl QWindowsIA2Accessible::get_locale(struct IA2Locale *)
long __cdecl QWindowsIA2Accessible::get_localizedName(long,wchar_t **)
long __cdecl QWindowsIA2Accessible::get_locationInParent(long *,long *)
long __cdecl QWindowsIA2Accessible::get_maximumValue(struct tagVARIANT *)
long __cdecl QWindowsIA2Accessible::get_minimumValue(struct tagVARIANT *)
long __cdecl QWindowsIA2Accessible::get_modelChange(struct IA2TableModelChange *)
long __cdecl QWindowsIA2Accessible::get_nCharacters(long *)
long __cdecl QWindowsIA2Accessible::get_nColumns(long *)
long __cdecl QWindowsIA2Accessible::get_nRelations(long *)
long __cdecl QWindowsIA2Accessible::get_nRows(long *)
long __cdecl QWindowsIA2Accessible::get_nSelectedCells(long *)
long __cdecl QWindowsIA2Accessible::get_nSelectedColumns(long *)
long __cdecl QWindowsIA2Accessible::get_nSelectedRows(long *)
long __cdecl QWindowsIA2Accessible::get_nSelections(long *)
long __cdecl QWindowsIA2Accessible::get_name(long,wchar_t **)
long __cdecl QWindowsIA2Accessible::get_offsetAtPoint(long,long,enum IA2CoordinateType,long *)
long __cdecl QWindowsIA2Accessible::get_relation(long,struct IAccessibleRelation **)
long __cdecl QWindowsIA2Accessible::get_relations(long,struct IAccessibleRelation **,long *)
long __cdecl QWindowsIA2Accessible::get_rowColumnExtents(long *,long *,long *,long *,unsigned char *)
long __cdecl QWindowsIA2Accessible::get_rowDescription(long,wchar_t **)
long __cdecl QWindowsIA2Accessible::get_rowExtent(long *)
long __cdecl QWindowsIA2Accessible::get_rowHeaderCells(struct IUnknown ***,long *)
long __cdecl QWindowsIA2Accessible::get_rowIndex(long *)
long __cdecl QWindowsIA2Accessible::get_selectedCells(struct IUnknown ***,long *)
long __cdecl QWindowsIA2Accessible::get_selectedColumns(long **,long *)
long __cdecl QWindowsIA2Accessible::get_selectedRows(long **,long *)
long __cdecl QWindowsIA2Accessible::get_selection(long,long *,long *)
long __cdecl QWindowsIA2Accessible::get_states(long *)
long __cdecl QWindowsIA2Accessible::get_summary(struct IUnknown **)
long __cdecl QWindowsIA2Accessible::get_table(struct IUnknown **)
long __cdecl QWindowsIA2Accessible::get_text(long,long,wchar_t **)
long __cdecl QWindowsIA2Accessible::get_textAfterOffset(long,enum IA2TextBoundaryType,long *,long *,wchar_t **)
long __cdecl QWindowsIA2Accessible::get_textAtOffset(long,enum IA2TextBoundaryType,long *,long *,wchar_t **)
long __cdecl QWindowsIA2Accessible::get_textBeforeOffset(long,enum IA2TextBoundaryType,long *,long *,wchar_t **)
long __cdecl QWindowsIA2Accessible::get_uniqueID(long *)
long __cdecl QWindowsIA2Accessible::get_windowHandle(struct HWND__ **)
long __cdecl QWindowsIA2Accessible::insertText(long,wchar_t **)
long __cdecl QWindowsIA2Accessible::nActions(long *)
long __cdecl QWindowsIA2Accessible::pasteText(long)
long __cdecl QWindowsIA2Accessible::removeSelection(long)
long __cdecl QWindowsIA2Accessible::replaceText(long,long,wchar_t **)
long __cdecl QWindowsIA2Accessible::role(long *)
long __cdecl QWindowsIA2Accessible::scrollSubstringTo(long,long,enum IA2ScrollType)
long __cdecl QWindowsIA2Accessible::selectColumn(long)
long __cdecl QWindowsIA2Accessible::selectRow(long)
long __cdecl QWindowsIA2Accessible::setCaretOffset(long)
long __cdecl QWindowsIA2Accessible::setCurrentValue(struct tagVARIANT)
long __cdecl QWindowsIA2Accessible::setSelection(long,long,long)
long __cdecl QWindowsIA2Accessible::unselectColumn(long)
long __cdecl QWindowsIA2Accessible::unselectRow(long)
long __cdecl QWindowsMsaaAccessible::GetWindow(struct HWND__ **)
long __cdecl QWindowsMsaaAccessible::QueryInterface(const struct _GUID &,void **)
long __cdecl QWindowsMsaaAccessible::accDoDefaultAction(struct tagVARIANT)
long __cdecl QWindowsMsaaAccessible::accHitTest(long,long,struct tagVARIANT *)
long __cdecl QWindowsMsaaAccessible::accLocation(long *,long *,long *,long *,struct tagVARIANT)
long __cdecl QWindowsMsaaAccessible::accNavigate(long,struct tagVARIANT,struct tagVARIANT *)
long __cdecl QWindowsMsaaAccessible::accSelect(long,struct tagVARIANT)
long __cdecl QWindowsMsaaAccessible::get_accChild(struct tagVARIANT,struct IDispatch **)
long __cdecl QWindowsMsaaAccessible::get_accChildCount(long *)
long __cdecl QWindowsMsaaAccessible::get_accDefaultAction(struct tagVARIANT,wchar_t **)
long __cdecl QWindowsMsaaAccessible::get_accDescription(struct tagVARIANT,wchar_t **)
long __cdecl QWindowsMsaaAccessible::get_accFocus(struct tagVARIANT *)
long __cdecl QWindowsMsaaAccessible::get_accHelp(struct tagVARIANT,wchar_t **)
long __cdecl QWindowsMsaaAccessible::get_accKeyboardShortcut(struct tagVARIANT,wchar_t **)
long __cdecl QWindowsMsaaAccessible::get_accName(struct tagVARIANT,wchar_t **)
long __cdecl QWindowsMsaaAccessible::get_accParent(struct IDispatch **)
long __cdecl QWindowsMsaaAccessible::get_accRole(struct tagVARIANT,struct tagVARIANT *)
long __cdecl QWindowsMsaaAccessible::get_accSelection(struct tagVARIANT *)
long __cdecl QWindowsMsaaAccessible::get_accState(struct tagVARIANT,struct tagVARIANT *)
long __cdecl QWindowsMsaaAccessible::get_accValue(struct tagVARIANT,wchar_t **)
long __cdecl QWindowsMsaaAccessible::put_accName(struct tagVARIANT,wchar_t *)
long __cdecl QWindowsMsaaAccessible::put_accValue(struct tagVARIANT,wchar_t *)
long __cdecl QWindowsOleDataObject::EnumFormatEtc(unsigned long,struct IEnumFORMATETC **)
long __cdecl QWindowsOleDataObject::GetData(struct tagFORMATETC *,struct tagSTGMEDIUM *)
long __cdecl QWindowsOleDataObject::QueryGetData(struct tagFORMATETC *)
long __cdecl QWindowsOleDataObject::SetData(struct tagFORMATETC *,struct tagSTGMEDIUM *,int)
long __cdecl QWindowsOleDropSource::QueryContinueDrag(int,unsigned long)
long __cdecl QWindowsOleDropTarget::DragEnter(struct IDataObject *,unsigned long,struct _POINTL,unsigned long *)
long __cdecl QWindowsOleDropTarget::DragLeave(void)
long __cdecl QWindowsOleDropTarget::DragOver(unsigned long,struct _POINTL,unsigned long *)
long __cdecl QWindowsOleDropTarget::Drop(struct IDataObject *,unsigned long,struct _POINTL,unsigned long *)
long __cdecl `anonymous-namespace'::DirectWriteFontFileLoader::CreateStreamFromKey(const void *,unsigned int,struct IDWriteFontFileStream **)
lozenge
lslash
lsuperior
ltuo
mRmom}m
mXme
m\tm9e
m_clipboardViewer:
m_data.hwnd
m_directWriteFontFace
m_image.paintEngine()->type() == QPaintEngine::Raster
m_path != 0
m_targets.count()
m_touchDevice
m_window
macron
mailCommand
mailto
makeCurrent(): context loss detected
metrics != 0
mime
mimeIn
mimeType
minus
modal=
mode=
monitorData
msg=0x
msuperior
multi-masters
multiply
n2n?
nArgErr
nNy~
nPnq
n^nf
name
native
native=
need dictionary
next:
nine
nineinferior
nineoldstyle
ninesuperior
nmra
no-stem-darkening
nomousefromtouch
nonbreakingspace
none
nonmarkingreturn
notequal
nsuperior
ntilde
numbersign
oEoOoZoaozo
oIDATx^
oacute
ocircumflex
odieresis
ogonek
ograve
ohoq
oleacc
onedotenleader
oneeighth
onefitted
onehalf
oneinferior
oneoldstyle
onequarter
onesuperior
onethird
opengl32.dll
opengl32sw.dll
openhandcursor_32.png
openhandcursor_48.png
openhandcursor_64.png
options=
ordfeminine
ordmasculine
oslash
osuperior
otilde
out of range
oversubscribed distance tree
oversubscribed dynamic bit lengths tree
oversubscribed literal/length tree
owner
p#p7pP
paragraph
parenleft
parenleftinferior
parenleftsuperior
parenright
parenrightinferior
parenrightsuperior
parent
parent:
partialdiff
password
pattern.isValid()
pcerrinfo
percent
period
periodcentered
periodinferior
periodsuperior
perrinfo
perthousand
pfr-metrics
pixmap
platform
plus
plusminus
pointer:
possible Actions=0x
postscript-cmaps
postscript-font-name
postscript-info
pqgjy
processing 
product
properties
psaux
psei
pshinter
psnames
q4qIqQ
qIDATx^
qRegisterNormalizedMetaType
qRegisterNormalizedMetaType was called with a not normalized type name, please call qRegisterMetaType instead.
qYqaqnq
qt.qpa.accessibility
qt.qpa.backingstore
qt.qpa.dialogs
qt.qpa.events
qt.qpa.fonts
qt.qpa.gl
qt.qpa.input.methods
qt.qpa.input.tablet
qt.qpa.mime
qt.qpa.windows
qt_dir_
qt_plugin_instance
qt_plugin_query_metadata
question
questiondown
questiondownsmall
questionsmall
quotedbl
quotedblbase
quotedblleft
quotedblright
quoteleft
quoteright
quotesinglbase
quotesingle
qwindowsbackingstore.cpp
qwindowsclipboard.cpp
qwindowscontext.cpp
qwindowscursor.cpp
qwindowsd.dll
qwindowsdialoghelpers.cpp
qwindowsdrag.cpp
qwindowsfontdatabase.cpp
qwindowsfontdatabase_ft.cpp
qwindowsfontengine.cpp
qwindowsfontenginedirectwrite.cpp
qwindowsgdinativeinterface.cpp
qwindowsglcontext.cpp
qwindowsguieventdispatcher.cpp
qwindowsinputcontext.cpp
qwindowsintegration.cpp
qwindowsinternalmimedata.cpp
qwindowskeymapper.cpp
qwindowsmime.cpp
qwindowsmousehandler.cpp
qwindowsnativeimage.cpp
qwindowsnativeinterface.cpp
qwindowsole.cpp
qwindowsopengltester.cpp
qwindowsscreen.cpp
qwindowsservices.cpp
qwindowstabletsupport.cpp
qwindowstheme.cpp
qwindowswindow.cpp
r*r4r;
r?RJ
rQr\
radical
raster1
raster5
readDib
registerMimeType
registerWindowClass
registerWindowsMime
registered
rejected
releasedc
renderer: 
renderingcontext
reportedPerformedEffect=0x
resource.frk/
result.hwnd
results in
return S_FALSE
returns
returns 0x
rgvarg
rgwParams
ring
rotation:
rsuperior
rupiah
s&sg
s1s:sHsX
scaron
scedilla
section
semicolon
sending markup=
seven
seveneighths
seveninferior
sevenoldstyle
sevensuperior
sfnt
sfnt-table
sfnts
short
sibling
signature
sijs
sixinferior
sixoldstyle
sixsuperior
sizeListMatch.isValid()
slash
slot->bitmap.pixel_mode == FT_PIXEL_MODE_MONO
smooth
smooth-lcd
smooth-lcdv
smsv
snaw
software
space
splithcursor_32.png
splithcursor_48.png
splithcursor_64.png
splitvcursor_32.png
splitvcursor_48.png
splitvcursor_64.png
ssuperior
sterling
str.ref.isStatic()
strongref.load() <= 0
struct HBITMAP__ *__cdecl createDIB(struct HDC__ *,int,int,enum QImage::Format,unsigned char **)
struct HGLRC__ *__cdecl ARB::createContext(const class QOpenGLStaticContext &,struct HDC__ *,const class QSurfaceFormat &,const struct QWindowsOpenGLAdditionalFormat &,struct HGLRC__ *)
struct HICON__ *__cdecl QWindowsCursor::createSystemCursor(const class QCursor &)
struct IShellItem *__cdecl QWindowsNativeFileDialogBase::shellItem(const class QUrl &)
struct QFontEngineFT::Glyph *__cdecl QFontEngineFT::loadGlyph(struct QFontEngineFT::QGlyphSet *,unsigned int,struct QFixed,enum QFontEngine::GlyphFormat,bool) const
struct QWindowsWindowData __cdecl QWindowsIntegration::createWindowData(class QWindow *) const
struct QWindowsWindowData __cdecl WindowCreationData::create(const class QWindow *,const struct QWindowsWindowData &,class QString) const
struct tagLOGFONTW __cdecl QWindowsFontDatabase::fontDefToLOGFONT(const struct QFontDef &)
summation
surface->surface()->supportsOpenGL()
symbol
t1cid
t5tF
tName
tRNS
tUt[
tXT9bq^F
tabletabsoluterange
tag =
tagName.size() == 4
tanP:
target:
tcommaaccent
text/html
text/plain
text/uri-list
thorn
three
threeeighths
threeinferior
threeoldstyle
threequarters
threequartersemdash
threesuperior
tilde
tilt:
tlt~
too many length or distance symbols
tq\n$S
trademark
triggered=
true
truetype
truetype-engine
tsuperior
tt-cmaps
tt-glyf
twodotenleader
twoinferior
twooldstyle
twosuperior
twothirds
type1
type42
u,uEu
uKu`
uX\tP
uacute
ucircumflex
udieresis
ugrave
uint(d->size) <= d->alloc
uluzu
underscore
uniqueID: 
unknown compression method
unregisterWindowsMime
unsigned int __cdecl QStringIterator::next(unsigned int)
unsigned int __cdecl parseOptions(const class QStringList &,int *,enum QtWindows::ProcessDpiAwareness *)
v8vUb
vaResult
verbose
version
verticalDpi
vk > 0 && vk < 256
vnvyv
void (__cdecl *__cdecl QWindowsGLContext::getProcAddress(const class QByteArray &))(void)
void *__cdecl QWindowsGdiNativeInterface::nativeResourceForBackingStore(const class QByteArray &,class QBackingStore *)
void *__cdecl QWindowsNativeInterface::nativeResourceForContext(const class QByteArray &,class QOpenGLContext *)
void *__cdecl QWindowsNativeInterface::nativeResourceForWindow(const class QByteArray &,class QWindow *)
void __cdecl KeyRecorder::storeKey(int,int,int,const class QString &)
void __cdecl QBasicFontDatabase::populateFontDatabase(void)
void __cdecl QWindowsBackingStore::beginPaint(const class QRegion &)
void __cdecl QWindowsBackingStore::flushDp(class QWindow *,const class QRect &,const class QPoint &)
void __cdecl QWindowsBackingStore::resize(const class QSize &,const class QRegion &)
void __cdecl QWindowsClipboard::propagateClipboardMessage(unsigned int,unsigned __int64,__int64) const
void __cdecl QWindowsClipboard::registerViewer(void)
void __cdecl QWindowsClipboard::setMimeData(class QMimeData *,enum QClipboard::Mode)
void __cdecl QWindowsContext::setProcessDpiAwareness(enum QtWindows::ProcessDpiAwareness)
void __cdecl QWindowsCursor::changeCursor(class QCursor *,class QWindow *)
void __cdecl QWindowsDialogHelperBase<class QPlatformFileDialogHelper>::cleanupThread(void)
void __cdecl QWindowsDialogHelperBase<class QPlatformFileDialogHelper>::exec(void)
void __cdecl QWindowsDialogThread::run(void)
void __cdecl QWindowsDialogs::eatMouseMove(void)
void __cdecl QWindowsDrag::releaseDropDataObject(void)
void __cdecl QWindowsDragCursorWindow::setPixmap(const class QPixmap &)
void __cdecl QWindowsFileDialogHelper::selectFile(const class QUrl &)
void __cdecl QWindowsFileDialogHelper::setDirectory(const class QUrl &)
void __cdecl QWindowsFileDialogHelper::setFilter(void)
void __cdecl QWindowsFontDatabase::populateFamily(const class QString &)
void __cdecl QWindowsFontDatabaseFT::populateFamily(const class QString &)
void __cdecl QWindowsGLContext::swapBuffers(class QPlatformSurface *)
void __cdecl QWindowsGeometryHint::applyToMinMaxInfo(unsigned long,unsigned long,struct tagMINMAXINFO *) const
void __cdecl QWindowsInputContext::cursorRectChanged(void)
void __cdecl QWindowsInputContext::endContextComposition(void)
void __cdecl QWindowsInputContext::invokeAction(enum QInputMethod::Action,int)
void __cdecl QWindowsInputContext::reset(void)
void __cdecl QWindowsInputContext::startContextComposition(void)
void __cdecl QWindowsKeyMapper::updatePossibleKeyCodes(unsigned char *,unsigned int,unsigned int)
void __cdecl QWindowsNativeFileDialogBase::close(void)
void __cdecl QWindowsNativeFileDialogBase::doExec(struct HWND__ *)
void __cdecl QWindowsNativeFileDialogBase::selectNameFilter(const class QString &)
void __cdecl QWindowsNativeFileDialogBase::setMode(enum QFileDialogOptions::FileMode,enum QFileDialogOptions::AcceptMode,class QFlags<enum QFileDialogOptions::FileDialogOption>)
void __cdecl QWindowsOleDropSource::createCursors(void)
void __cdecl QWindowsOleDropTarget::handleDrag(class QWindow *,unsigned long,const class QPoint &,unsigned long *)
void __cdecl QWindowsScreenManager::removeScreen(int)
void __cdecl QWindowsTabletSupport::notifyActivate(void)
void __cdecl QWindowsUser32DLL::init(void)
void __cdecl QWindowsWindow::destroyWindow(void)
void __cdecl QWindowsWindow::getSizeHints(struct tagMINMAXINFO *) const
void __cdecl QWindowsWindow::handleGeometryChange(void)
void __cdecl QWindowsWindow::handleWindowStateChange(enum Qt::WindowState)
void __cdecl QWindowsWindow::lower(void)
void __cdecl QWindowsWindow::propagateSizeHints(void)
void __cdecl QWindowsWindow::raise(void)
void __cdecl QWindowsWindow::requestActivateWindow(void)
void __cdecl QWindowsWindow::setCursor(const class QWindowsWindowCursor &)
void __cdecl QWindowsWindow::setCustomMargins(const class QMargins &)
void __cdecl QWindowsWindow::setDropSiteEnabled(bool)
void __cdecl QWindowsWindow::setExStyle(unsigned int) const
void __cdecl QWindowsWindow::setGeometryDp(const class QRect &)
void __cdecl QWindowsWindow::setGeometry_sys(const class QRect &) const
void __cdecl QWindowsWindow::setOpacity(double)
void __cdecl QWindowsWindow::setParent(const class QPlatformWindow *)
void __cdecl QWindowsWindow::setStyle(unsigned int) const
void __cdecl QWindowsWindow::setVisible(bool)
void __cdecl QWindowsWindow::setWindowFlags(class QFlags<enum Qt::WindowType>)
void __cdecl QWindowsWindow::setWindowState_sys(enum Qt::WindowState)
void __cdecl QWindowsWindow::setWindowTitle(const class QString &)
void __cdecl WindowCreationData::applyWindowFlags(struct HWND__ *) const
void __cdecl WindowCreationData::initialize(const class QWindow *,struct HWND__ *,bool,double) const
void __cdecl accessibleDebugClientCalls_helper(const char *,const class QAccessibleInterface *)
void __cdecl describeFormats(struct HDC__ *)
void __cdecl imeNotifyCancelComposition(struct HWND__ *)
w%nc
wBz)
wDwNwYw`wy
warp
wglChoosePixelFormatARB
wglCreateContext
wglCreateContextAttribsARB
wglDeleteContext
wglGetCurrentContext
wglGetCurrentDC
wglGetPixelFormatAttribivARB
wglGetProcAddress
wglGetSwapIntervalEXT
wglMakeCurrent
wglSetPixelFormat
wglShareLists
wglSwapBuffers
wglSwapIntervalEXT
wgwp
widget=
win%1_%2.png
windir
window
window()->screen() returned a null screen
windowName
windows
windows_generic_MSG
winfonts
writeDib
x->ref.isSharable() || options.testFlag(QArrayData::Unsharable)
x>xoxyx~
xIxRx[xe
xf86-driver-name
xzroesc
y#uL
y'y6y?yMa
yZygy
yacute
ydieresis
ymyx
z<zRz_zvz
zCzI
zcaron
zero
zeroinferior
zerooldstyle
zerosuperior
zezn
{Sl"v
}D"pN
