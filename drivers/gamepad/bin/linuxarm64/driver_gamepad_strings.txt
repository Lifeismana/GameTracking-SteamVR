#
$d
$x
%llu
%p
%s
%s %s
%s: __pos (which is %zu) > this->size() (which is %zu)
%u
'
*NSt6thread11_State_implINS_8_InvokerISt5tupleIJZN21CServerDriver_Gamepad4InitEPN2vr16IVRDriverContextEEUlvE_EEEEEE
+
.
/
/data/src/common/vrcore/src/strtools_public.cpp
/data/src/common/vrcore/src/threadtools.cpp
/e%s%s
/etc/os-release
/input/a/click
/input/b/click
/input/back/click
/input/dpad_down/click
/input/dpad_left/click
/input/dpad_right/click
/input/dpad_up/click
/input/guide/click
/input/joystick_left/click
/input/joystick_left/x
/input/joystick_left/y
/input/joystick_right/click
/input/joystick_right/x
/input/joystick_right/y
/input/shoulder_left/click
/input/shoulder_right/click
/input/start/click
/input/trigger_left/value
/input/trigger_right/value
/input/x/click
/input/y/click
/output/haptic
/proc
/proc/%u/stat
/tmp/.steam-sem-names
0123456789ABCDEF
20CGamepadDeviceDriver
21CServerDriver_Gamepad
<unknown>
ASSERT: "%s" at %s:%d.
CAssert::AddCallback(CAssertCallback*)
CAssert::AssertMsgImpl(char const*, unsigned int, bool, unsigned int, ...)
CAssert::GetInstance()
CAssert::RemoveCallback(CAssertCallback*)
CAssert::m_mutex
CAssert::m_pInstance
CAssertCallback::Initialize(std::function<void (char const*, char const*, unsigned int, bool, void*, bool*)>, void*)
CAssertCallback::~CAssertCallback()
CGamepadDeviceDriver::Activate(unsigned int)
CGamepadDeviceDriver::AddTrackedDevice()
CGamepadDeviceDriver::Deactivate()
CGamepadDeviceDriver::DebugRequest(char const*, char*, unsigned int)
CGamepadDeviceDriver::EnterStandby()
CGamepadDeviceDriver::GetComponent(char const*)
CGamepadDeviceDriver::GetPose()
CGamepadDeviceDriver::PowerOff()
CGamepadDeviceDriver::~CGamepadDeviceDriver()
CLog::AddCallback(CLogCallback*)
CLog::GetInstance()
CLog::Log(ELogLevel, char const*, ...)
CLog::Log(ELogLevel, char const*, std::__va_list&)
CLog::RemoveCallback(CLogCallback*)
CLog::s_mutex
CLog::s_pInstance
CLogCallback::Initialize(std::function<void (ELogLevel, char const*, void*)>, void*)
CLogCallback::~CLogCallback()
CSWTCH.152
CServerDriver_Gamepad::AddGameControllerByIndex(int)
CServerDriver_Gamepad::Cleanup()
CServerDriver_Gamepad::Cleanup_SDL()
CServerDriver_Gamepad::EnterStandby()
CServerDriver_Gamepad::GetInterfaceVersions()
CServerDriver_Gamepad::Init(vr::IVRDriverContext*)
CServerDriver_Gamepad::LeaveStandby()
CServerDriver_Gamepad::RunFrame()
CServerDriver_Gamepad::RunFrame_SDL()
CServerDriver_Gamepad::RunThread()
CServerDriver_Gamepad::Setup_SDL()
CServerDriver_Gamepad::ShouldBlockStandbyMode()
CServerDriver_Gamepad::~CServerDriver_Gamepad()
CXXABI_1.3
CXXABI_1.3.9
CharNeedsEscape_Component(char)
CharNeedsEscape_FullPath(char)
CleanupDriverLog()
CreateSimpleProcess
CreateSimpleThread(unsigned int (*)(void*), void*, unsigned int*, unsigned int)
DW.ref.__gxx_personality_v0
DebugDriverLog(char const*, ...)
DeclareCurrentThreadIsMainThread
DriverLog(char const*, ...)
DriverLogString(char const*)
DriverLogVarArgs(char const*, std::__va_list)
Failed to init scheduler: failed to get rlimit
Failed to init scheduler: failed to get sched params %d
Failed to init scheduler: failed to set rlimit
Failed to set thread %p priority: invalid priority %d
Failed to set thread %p priority: set failed for %d: %d: %s
Failed to set thread priority: foreign thread unsupported
Failed to set thread priority: scheduler init failed
Failed to set thread priority: setschedparam failed %d: %d
FbcE
Format string parse failure
Format[abi:cxx11](char const*, ...)
GCC: (Ubuntu/Linaro 8.4.0-1ubuntu1~18.04) 8.4.0
GLIBCXX_3.4
GLIBCXX_3.4.11
GLIBCXX_3.4.14
GLIBCXX_3.4.20
GLIBCXX_3.4.21
GLIBCXX_3.4.22
GLIBC_2.17
GNU
Gamepad
GetEnvironmentVariableAsBool(%s): Unable to parse value '%s', using default %d
GetEnvironmentVariableAsBool(char const*, bool)
GetEnvironmentVariable[abi:cxx11](char const*)
HmdDriverFactory
ID
IServerTrackedDeviceProvider_004
ITrackedDeviceServerDriver_005
IVRCameraComponent_003
IVRCompositorPluginProvider_001
IVRDisplayComponent_002
IVRDriverDirectModeComponent_007
IVRDriverInput_003
IVRDriverLog_001
IVRDriverManager_001
IVRProperties_001
IVRResources_001
IVRServerDriverHost_006
IVRSettings_003
IVRVirtualDisplay_002
IVRWatchdogProvider_001
InitDriverLog(vr::IVRDriverLog*)
InitMainThread()
IsDriverLogActive()
IsOnLaptop()
IsPosix()
IsRunningAsService()
IsRunningInAppContainer()
IsRunningInAppContainer()::s_bDeterminedAppContainerStatus
IsRunningInAppContainer()::s_bIsRunningInAppContainer
IsWorkstationLocked()
Log(ELogLevel, char const*, ...)
Log(char const*, ...)
LogDirect(ELogLevel, char const*, std::__va_list&)
LogHelper(ELogLevel, char const*, std::__va_list&)
N16SteamThreadTools7CThreadE
N2vr26ITrackedDeviceServerDriverE
N2vr28IServerTrackedDeviceProviderE
Out of thread local storage!
PFbcE
Plat_IsInDebugSession
Plat_IsInDebugSession::fp
ReapChildProcesses(int)
ReleaseThreadHandle
RepairUTF8(char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
RepairUTF8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
ReturnStdString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char*, unsigned int)
SDL_GAMECONTROLLER_ALLOW_STEAM_VIRTUAL_GAMEPAD
SDL_GAMECONTROLLER_IGNORE_DEVICES
SDL_GAMECONTROLLER_IGNORE_DEVICES_EXCEPT
SDL_GameControllerClose
SDL_GameControllerGetAttached
SDL_GameControllerGetJoystick
SDL_GameControllerName
SDL_GameControllerOpen
SDL_GameControllerUpdate
SDL_GetError
SDL_GetPowerInfo
SDL_HapticClose
SDL_HapticOpenFromJoystick
SDL_HapticRumbleInit
SDL_HapticRumblePlay
SDL_HapticRumbleStop
SDL_HapticRumbleSupported
SDL_InitSubSystem
SDL_IsGameController
SDL_JoystickGetDeviceVendor
SDL_JoystickGetGUID
SDL_JoystickGetGUIDString
SDL_JoystickInstanceID
SDL_NumJoysticks
SDL_PollEvent
SDL_QuitSubSystem
SDL_SetThreadPriority
Set thread %p priority to: %d
SetCurrentProcessExplicitAppUserModelID()
SetEnvironmentVariable(char const*, char const*)
Skipping controller %d because it has the Valve VID
St12codecvt_utf8IDiLm1114111ELSt12codecvt_mode0EE
St12codecvt_utf8IwLm1114111ELSt12codecvt_mode0EE
SteamThreadTools::CThread::BHasValidThreadID()
SteamThreadTools::CThread::CThread()
SteamThreadTools::CThread::GetCurrentCThread()
SteamThreadTools::CThread::GetName()
SteamThreadTools::CThread::GetPriority() const
SteamThreadTools::CThread::GetResult() const
SteamThreadTools::CThread::GetThreadProc()
SteamThreadTools::CThread::Init()
SteamThreadTools::CThread::IsAlive()
SteamThreadTools::CThread::IsAlive() [clone .part.6]
SteamThreadTools::CThread::IsThreadRunning()
SteamThreadTools::CThread::Join(unsigned int)
SteamThreadTools::CThread::OnExit()
SteamThreadTools::CThread::Resume()
SteamThreadTools::CThread::SetName(char const*)
SteamThreadTools::CThread::SetPriority(int)
SteamThreadTools::CThread::Sleep(unsigned int)
SteamThreadTools::CThread::Start(unsigned int)
SteamThreadTools::CThread::Stop(int)
SteamThreadTools::CThread::Suspend()
SteamThreadTools::CThread::Terminate(int)
SteamThreadTools::CThread::ThreadExceptionWrapper(void*)
SteamThreadTools::CThread::ThreadProc(void*)
SteamThreadTools::CThread::WaitForCreateComplete(SteamThreadTools::CThreadEvent*)
SteamThreadTools::CThread::Yield()
SteamThreadTools::CThread::~CThread()
SteamThreadTools::CThread::~CThread() [clone .part.14]
SteamThreadTools::CThreadEvent::CThreadEvent(bool)
SteamThreadTools::CThreadEvent::CThreadEvent(char const*, bool, bool)
SteamThreadTools::CThreadEvent::Check()
SteamThreadTools::CThreadEvent::Reset()
SteamThreadTools::CThreadEvent::Set()
SteamThreadTools::CThreadFullMutex::CThreadFullMutex(bool, char const*, bool, bool)
SteamThreadTools::CThreadFullMutex::IsCreator() const
SteamThreadTools::CThreadFullMutex::Release()
SteamThreadTools::CThreadLocalBase::CThreadLocalBase()
SteamThreadTools::CThreadLocalBase::Get() const
SteamThreadTools::CThreadLocalBase::Set(void*)
SteamThreadTools::CThreadLocalBase::~CThreadLocalBase()
SteamThreadTools::CThreadLocalInt<long>::~CThreadLocalInt()
SteamThreadTools::CThreadLocalPtr<SteamThreadTools::CThread>::~CThreadLocalPtr()
SteamThreadTools::CThreadMutex::CThreadMutex()
SteamThreadTools::CThreadMutex::~CThreadMutex()
SteamThreadTools::CThreadRWLock::LockForWrite()
SteamThreadTools::CThreadRWLock::UnlockWrite()
SteamThreadTools::CThreadRWLock::WaitForRead()
SteamThreadTools::CThreadSemaphore::CThreadSemaphore(long, long)
SteamThreadTools::CThreadSemaphore::Release(long)
SteamThreadTools::CThreadSpinLock::Lock(unsigned int) volatile
SteamThreadTools::CThreadSpinRWLock::LockForRead()
SteamThreadTools::CThreadSpinRWLock::SpinLockForWrite(unsigned int)
SteamThreadTools::CThreadSpinRWLock::TryLockForWrite(unsigned int)::oldValue
SteamThreadTools::CThreadSpinRWLock::UnlockRead()
SteamThreadTools::CThreadSpinRWLock::UnlockWrite()
SteamThreadTools::CThreadSpinRWLock::UnlockWrite()::newValue
SteamThreadTools::CThreadSyncObject::AcquireSemaphoreInternal(unsigned int)
SteamThreadTools::CThreadSyncObject::AssertUseable()
SteamThreadTools::CThreadSyncObject::CThreadSyncObject()
SteamThreadTools::CThreadSyncObject::CloseSemaphoreInternal(int, bool, char const*)
SteamThreadTools::CThreadSyncObject::CreateAnonymousSyncObjectInternal(bool, bool)
SteamThreadTools::CThreadSyncObject::CreateSemaphoreInternal(char const*, long, bool, bool*)
SteamThreadTools::CThreadSyncObject::EnsureSemaphoreClearedInternal(int)
SteamThreadTools::CThreadSyncObject::EnsureSemaphorePostedInternal(int)
SteamThreadTools::CThreadSyncObject::IsSemaphoreOrphanedInternal(int, int)
SteamThreadTools::CThreadSyncObject::OpenSemaphoreInternal(char const*, bool)
SteamThreadTools::CThreadSyncObject::ReleaseSemaphoreInternal(int, long)
SteamThreadTools::CThreadSyncObject::SaveNameToFile(char const*)
SteamThreadTools::CThreadSyncObject::SignalThreadSyncObjectInternal()
SteamThreadTools::CThreadSyncObject::Wait(unsigned int)
SteamThreadTools::CThreadSyncObject::operator!() const
SteamThreadTools::CThreadSyncObject::~CThreadSyncObject()
SteamThreadTools::CThreadSyncObject::~CThreadSyncObject() [clone .part.3]
SteamVRVersionAsString[abi:cxx11]()
SteamVRVersionAsString[abi:cxx11]()::s_sCachedVersion
StringHasPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
StringHasPrefixCaseSensitive(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
StringHasSuffix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
StringHasSuffixCaseSensitive(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
StringToLower(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
StringToUint64(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
StringToUpper(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
Thread failed to initialize 1
Thread failed to initialize 2
Thread(0x%p/0x%p/0x%x)
ThreadCloseProcess
ThreadGetCurrentHandle
ThreadGetCurrentId
ThreadGetCurrentId::s_selftid
ThreadGetCurrentProcessHandle
ThreadGetCurrentProcessId
ThreadGetCurrentRunningRef
ThreadGetPriority
ThreadGetProcessExitCode
ThreadGetProcessListInfo
ThreadGetProcessParentID
ThreadGetProcessPriority
ThreadInMainThread
ThreadInitSchedulerForRtkit()::sInitMutex
ThreadInitSchedulerForRtkit()::sbThreadSchedInitialized
ThreadInterlockedAssignIf
ThreadInterlockedAssignIf64
ThreadInterlockedAssignPointerIf
ThreadInterlockedCompareExchange
ThreadInterlockedCompareExchange64
ThreadInterlockedCompareExchangePointer
ThreadInterlockedDecrement
ThreadInterlockedDecrement64
ThreadInterlockedExchange
ThreadInterlockedExchange64
ThreadInterlockedExchangeAdd
ThreadInterlockedExchangeAdd64
ThreadInterlockedExchangePointer
ThreadInterlockedIncrement
ThreadInterlockedIncrement64
ThreadIsProcessActive
ThreadIsThreadRunning
ThreadOpenProcess
ThreadProcConvert(void*)
ThreadResumeSignal(int)
ThreadSetAffinity
ThreadSetDebugName
ThreadSetDebugName.part.1
ThreadSetPriority
ThreadSetProcessPriority
ThreadShellExecute
ThreadShellExecute::bInstalledSignalHandler
ThreadSleep
ThreadSuspendSignal(int)
ThreadTerminate
ThreadTerminateProcessCode
ThreadWaitForProcessExit
ThreadYield()
TokenizeString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char)
TracerPid:
TrimTrailingWhitespace(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
USER
UTF16to8(std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&)
UTF16to8[abi:cxx11](wchar_t const*)
UTF16to8[abi:cxx11](wchar_t const*)::s_converter
UTF8to16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
UTF8to16[abi:cxx11](char const*)
UTF8to16[abi:cxx11](char const*)::s_converter
Uint64ToString[abi:cxx11](unsigned long)
Unknown priority class!
VTT for std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >
VTT for std::basic_ifstream<char, std::char_traits<char> >
V_StripExtension(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
V_URLDecode(char*, int, char const*, int)
V_URLDecodeInternal(char*, int, char const*, int, bool)
V_URLDecodeInternal(char*, int, char const*, int, bool) [clone .part.13]
V_URLDecodeNoPlusForSpace(char*, int, char const*, int)
V_URLEncode(char*, int, char const*, int)
V_URLEncodeFullPath(char*, int, char const*, int)
V_URLEncodeInternal(char*, int, char const*, int, bool, std::function<bool (char)>)
V_URLEncodeNoPlusForSpace(char*, int, char const*, int)
_DYNAMIC
_GLOBAL_OFFSET_TABLE_
_GLOBAL__sub_I_driver_gamepad.cpp
_GLOBAL__sub_I_strtools_public.cpp
_GLOBAL__sub_I_threadtools.cpp
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
_TLS_MODULE_BASE_
_Unwind_Backtrace
_Unwind_DebugHook
_Unwind_DeleteException
_Unwind_FindEnclosingFunction
_Unwind_Find_FDE
_Unwind_ForcedUnwind
_Unwind_ForcedUnwind_Phase2
_Unwind_GetCFA
_Unwind_GetDataRelBase
_Unwind_GetGR
_Unwind_GetIP
_Unwind_GetIPInfo
_Unwind_GetLanguageSpecificData
_Unwind_GetRegionStart
_Unwind_GetTextRelBase
_Unwind_IteratePhdrCallback
_Unwind_RaiseException
_Unwind_RaiseException_Phase2
_Unwind_Resume
_Unwind_Resume_or_Rethrow
_Unwind_SetGR
_Unwind_SetIP
_ZNKSt19__codecvt_utf8_baseIDiE10do_unshiftER11__mbstate_tPcS3_RS3_@@GLIBCXX_3.4.21
_ZNKSt19__codecvt_utf8_baseIDiE11do_encodingEv@@GLIBCXX_3.4.21
_ZNKSt19__codecvt_utf8_baseIDiE13do_max_lengthEv@@GLIBCXX_3.4.21
_ZNKSt19__codecvt_utf8_baseIDiE16do_always_noconvEv@@GLIBCXX_3.4.21
_ZNKSt19__codecvt_utf8_baseIDiE5do_inER11__mbstate_tPKcS4_RS4_PDiS6_RS6_@@GLIBCXX_3.4.21
_ZNKSt19__codecvt_utf8_baseIDiE6do_outER11__mbstate_tPKDiS4_RS4_PcS6_RS6_@@GLIBCXX_3.4.21
_ZNKSt19__codecvt_utf8_baseIDiE9do_lengthER11__mbstate_tPKcS4_m@@GLIBCXX_3.4.21
_ZNKSt19__codecvt_utf8_baseIwE10do_unshiftER11__mbstate_tPcS3_RS3_@@GLIBCXX_3.4.21
_ZNKSt19__codecvt_utf8_baseIwE11do_encodingEv@@GLIBCXX_3.4.21
_ZNKSt19__codecvt_utf8_baseIwE13do_max_lengthEv@@GLIBCXX_3.4.21
_ZNKSt19__codecvt_utf8_baseIwE16do_always_noconvEv@@GLIBCXX_3.4.21
_ZNKSt19__codecvt_utf8_baseIwE5do_inER11__mbstate_tPKcS4_RS4_PwS6_RS6_@@GLIBCXX_3.4.21
_ZNKSt19__codecvt_utf8_baseIwE6do_outER11__mbstate_tPKwS4_RS4_PcS6_RS6_@@GLIBCXX_3.4.21
_ZNKSt19__codecvt_utf8_baseIwE9do_lengthER11__mbstate_tPKcS4_m@@GLIBCXX_3.4.21
_ZNKSt5ctypeIcE13_M_widen_initEv@@GLIBCXX_3.4.11
_ZNSt12__basic_fileIcED1Ev@@GLIBCXX_3.4
_ZNSt13basic_filebufIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode@@GLIBCXX_3.4
_ZNSt13basic_filebufIcSt11char_traitsIcEE5closeEv@@GLIBCXX_3.4
_ZNSt13basic_filebufIcSt11char_traitsIcEEC1Ev@@GLIBCXX_3.4
_ZNSt13basic_filebufIcSt11char_traitsIcEED1Ev@@GLIBCXX_3.4
_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev@@GLIBCXX_3.4
_ZNSt19__codecvt_utf8_baseIDiED2Ev@@GLIBCXX_3.4.21
_ZNSt19__codecvt_utf8_baseIwED2Ev@@GLIBCXX_3.4.21
_ZNSt6localeC1Ev@@GLIBCXX_3.4
_ZNSt6localeD1Ev@@GLIBCXX_3.4
_ZNSt6thread15_M_start_threadESt10unique_ptrINS_6_StateESt14default_deleteIS1_EEPFvvE@@GLIBCXX_3.4.22
_ZNSt6thread4joinEv@@GLIBCXX_3.4.11
_ZNSt6thread6_StateD2Ev@@GLIBCXX_3.4.22
_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcmm@@GLIBCXX_3.4.21
_ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEED1Ev@@GLIBCXX_3.4.21
_ZNSt7codecvtIwc11__mbstate_tEC2Em@@GLIBCXX_3.4
_ZNSt8ios_base4InitC1Ev@@GLIBCXX_3.4
_ZNSt8ios_base4InitD1Ev@@GLIBCXX_3.4
_ZNSt8ios_baseC2Ev@@GLIBCXX_3.4
_ZNSt8ios_baseD2Ev@@GLIBCXX_3.4
_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@@GLIBCXX_3.4
_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate@@GLIBCXX_3.4
_ZSt16__throw_bad_castv@@GLIBCXX_3.4
_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@@GLIBCXX_3.4
_ZSt19__throw_logic_errorPKc@@GLIBCXX_3.4
_ZSt19__throw_range_errorPKc@@GLIBCXX_3.4
_ZSt20__throw_length_errorPKc@@GLIBCXX_3.4
_ZSt20__throw_system_errori@@GLIBCXX_3.4.11
_ZSt24__throw_out_of_range_fmtPKcz@@GLIBCXX_3.4.20
_ZSt25__throw_bad_function_callv@@GLIBCXX_3.4.14
_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_@@GLIBCXX_3.4
_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@@GLIBCXX_3.4
_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EES4_@@GLIBCXX_3.4.21
_ZSt9terminatev@@GLIBCXX_3.4
_ZTINSt6thread6_StateE@@GLIBCXX_3.4.22
_ZTISt19__codecvt_utf8_baseIDiE@@GLIBCXX_3.4.21
_ZTISt19__codecvt_utf8_baseIwE@@GLIBCXX_3.4.21
_ZTIi@@CXXABI_1.3
_ZTTNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEEE@@GLIBCXX_3.4.21
_ZTTSt14basic_ifstreamIcSt11char_traitsIcEE@@GLIBCXX_3.4
_ZTVN10__cxxabiv117__class_type_infoE@@CXXABI_1.3
_ZTVN10__cxxabiv119__pointer_type_infoE@@CXXABI_1.3
_ZTVN10__cxxabiv120__function_type_infoE@@CXXABI_1.3
_ZTVN10__cxxabiv120__si_class_type_infoE@@CXXABI_1.3
_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE@@GLIBCXX_3.4.21
_ZTVNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEEE@@GLIBCXX_3.4.21
_ZTVSt13basic_filebufIcSt11char_traitsIcEE@@GLIBCXX_3.4
_ZTVSt14basic_ifstreamIcSt11char_traitsIcEE@@GLIBCXX_3.4
_ZTVSt15basic_streambufIcSt11char_traitsIcEE@@GLIBCXX_3.4
_ZTVSt9basic_iosIcSt11char_traitsIcEE@@GLIBCXX_3.4
_ZdaPv@@GLIBCXX_3.4
_ZdlPv@@GLIBCXX_3.4
_ZdlPvm@@CXXABI_1.3.9
_Znam@@GLIBCXX_3.4
_Znwm@@GLIBCXX_3.4
__FRAME_END__
__GNU_EH_FRAME_HDR
__TMC_END__
__bss_end__
__bss_start
__bss_start__
__cxa_allocate_exception
__cxa_allocate_exception@@CXXABI_1.3
__cxa_atexit
__cxa_atexit@@GLIBC_2.17
__cxa_begin_catch
__cxa_begin_catch@@CXXABI_1.3
__cxa_end_catch
__cxa_end_catch@@CXXABI_1.3
__cxa_finalize
__cxa_finalize@@GLIBC_2.17
__cxa_guard_abort
__cxa_guard_abort@@CXXABI_1.3
__cxa_guard_acquire
__cxa_guard_acquire@@CXXABI_1.3
__cxa_guard_release
__cxa_guard_release@@CXXABI_1.3
__cxa_pure_virtual
__cxa_pure_virtual@@CXXABI_1.3
__cxa_rethrow
__cxa_rethrow@@CXXABI_1.3
__cxa_throw
__cxa_throw@@CXXABI_1.3
__deregister_frame
__deregister_frame_info
__deregister_frame_info_bases
__do_global_dtors_aux
__do_global_dtors_aux_fini_array_entry
__dso_handle
__end__
__errno_location
__errno_location@@GLIBC_2.17
__fprintf_chk
__fprintf_chk@@GLIBC_2.17
__frame_dummy_init_array_entry
__frame_state_for
__gmon_start__
__gxx_personality_v0
__gxx_personality_v0@@CXXABI_1.3
__pthread_key_create
__pthread_key_create@@GLIBC_2.17
__register_frame
__register_frame_info
__register_frame_info_bases
__register_frame_info_bases.part.7
__register_frame_info_table
__register_frame_info_table_bases
__register_frame_table
__snprintf_chk
__snprintf_chk@@GLIBC_2.17
__sprintf_chk
__sprintf_chk@@GLIBC_2.17
__stack_chk_fail
__stack_chk_fail@@GLIBC_2.17
__stack_chk_guard
__stack_chk_guard@@GLIBC_2.17
__vsnprintf_chk
__vsnprintf_chk@@GLIBC_2.17
__xstat64
__xstat64@@GLIBC_2.17
_edata
_end
_exit
_exit@@GLIBC_2.17
_fini
_init
abort@@GLIBC_2.17
add_fdes
adds.10930
any_objects_registered
base_from_cb_data.isra.5
base_from_object.isra.4
base_of_encoded_value
basic_string::_M_construct null not valid
basic_string::_M_create
basic_string::_M_replace
basic_string::_M_replace_aux
basic_string::append
basic_string::at: __n (which is %zu) >= this->size() (which is %zu)
basic_string::substr
cIntToHexDigit(int)
call_weak_fn
chdir
chdir@@GLIBC_2.17
classify_object_over_fdes
closedir
closedir@@GLIBC_2.17
completed.8904
crc32(unsigned int, void const*, unsigned long)
crc32(unsigned int, void const*, unsigned long)::crcTable
d
deregister_tm_clones
dl_iterate_phdr
dl_iterate_phdr@@GLIBC_2.17
execute_cfa_program
execute_stack_op
false
fclose
fclose@@GLIBC_2.17
fde_mixed_encoding_compare
fde_single_encoding_compare
fde_unencoded_compare
fflush
fflush@@GLIBC_2.17
fgets
fgets@@GLIBC_2.17
fopen
fopen@@GLIBC_2.17
fork
fork@@GLIBC_2.17
frame_downheap
frame_dummy
frame_hdr_cache
frame_hdr_cache_head
frame_heapsort
free
free@@GLIBC_2.17
g_SuspendResumeLock
g_ThreadMainThreadID
g_bSetSuspendHandlers
g_bSuspendResumeAck
g_mutex
g_nCurThreadSuspendCount
g_pCurThread
g_serverDriverGamepad
g_szSemFileName
get_cie_encoding
getenv
getenv@@GLIBC_2.17
getpid
getpid@@GLIBC_2.17
getppid
getppid@@GLIBC_2.17
getpriority
getpriority@@GLIBC_2.17
getrlimit
getrlimit@@GLIBC_2.17
gettimeofday
gettimeofday@@GLIBC_2.17
guard variable for SteamVRVersionAsString[abi:cxx11]()::s_sCachedVersion
guard variable for ThreadInitSchedulerForRtkit()::sInitMutex
guard variable for UTF16to8[abi:cxx11](wchar_t const*)::s_converter
guard variable for UTF8to16[abi:cxx11](char const*)::s_converter
iHexCharToInt(char)
init_dwarf_reg_size_table
isalpha
isalpha@@GLIBC_2.17
ld-linux-aarch64.so.1
libSDL2-2.0.so.0
libc.so.6
libpthread.so.0
libstdc++.so.6
linear_search_fdes
m
malloc
malloc@@GLIBC_2.17
marker.10668
memchr
memchr@@GLIBC_2.17
memcmp
memcmp@@GLIBC_2.17
n
nanosleep
nanosleep@@GLIBC_2.17
no
object_mutex
once_regsizes.11106
opendir
opendir@@GLIBC_2.17
operator delete(void*)
operator delete(void*, unsigned long)
operator delete[](void*)
operator new(unsigned long)
operator new[](unsigned long)
pthread_attr_init
pthread_attr_init@@GLIBC_2.17
pthread_attr_setstacksize
pthread_attr_setstacksize@@GLIBC_2.17
pthread_cancel
pthread_cancel@@GLIBC_2.17
pthread_cond_destroy
pthread_cond_destroy@@GLIBC_2.17
pthread_cond_init
pthread_cond_init@@GLIBC_2.17
pthread_cond_signal
pthread_cond_signal@@GLIBC_2.17
pthread_cond_timedwait
pthread_cond_timedwait@@GLIBC_2.17
pthread_create
pthread_create@@GLIBC_2.17
pthread_getschedparam
pthread_getschedparam@@GLIBC_2.17
pthread_getspecific
pthread_getspecific@@GLIBC_2.17
pthread_join
pthread_join@@GLIBC_2.17
pthread_key_delete
pthread_key_delete@@GLIBC_2.17
pthread_kill
pthread_kill@@GLIBC_2.17
pthread_mutex_destroy
pthread_mutex_destroy@@GLIBC_2.17
pthread_mutex_init
pthread_mutex_init@@GLIBC_2.17
pthread_mutex_lock
pthread_mutex_lock@@GLIBC_2.17
pthread_mutex_unlock
pthread_mutex_unlock@@GLIBC_2.17
pthread_mutexattr_destroy
pthread_mutexattr_destroy@@GLIBC_2.17
pthread_mutexattr_init
pthread_mutexattr_init@@GLIBC_2.17
pthread_mutexattr_settype
pthread_mutexattr_settype@@GLIBC_2.17
pthread_once
pthread_once@@GLIBC_2.17
pthread_self
pthread_self@@GLIBC_2.17
pthread_setname_np
pthread_setname_np@@GLIBC_2.17
pthread_setschedparam
pthread_setschedparam@@GLIBC_2.17
pthread_setspecific
pthread_setspecific@@GLIBC_2.17
r
read_encoded_value_with_base
readdir
readdir@@GLIBC_2.17
rewind
rewind@@GLIBC_2.17
s_pLogFile
sched_get_priority_max
sched_get_priority_max@@GLIBC_2.17
sched_get_priority_min
sched_get_priority_min@@GLIBC_2.17
sched_getparam
sched_getparam@@GLIBC_2.17
sched_getscheduler
sched_getscheduler@@GLIBC_2.17
sched_setscheduler
sched_setscheduler@@GLIBC_2.17
sched_yield
sched_yield@@GLIBC_2.17
search_object
semctl
semctl@@GLIBC_2.17
semget
semget@@GLIBC_2.17
semop
semop@@GLIBC_2.17
setpriority
setpriority@@GLIBC_2.17
setrlimit
setrlimit@@GLIBC_2.17
sigaction
sigaction@@GLIBC_2.17
size_of_encoded_value
std::_Function_base::_Base_manager<bool (*)(char)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<bool (char), bool (*)(char)>::_M_invoke(std::_Any_data const&, char&&)
std::_Rb_tree<SDL_GameControllerAxis, std::pair<SDL_GameControllerAxis const, CGamepadDeviceDriver::AxisInfo_t>, std::_Select1st<std::pair<SDL_GameControllerAxis const, CGamepadDeviceDriver::AxisInfo_t> >, std::less<SDL_GameControllerAxis>, std::allocator<std::pair<SDL_GameControllerAxis const, CGamepadDeviceDriver::AxisInfo_t> > >::_M_erase(std::_Rb_tree_node<std::pair<SDL_GameControllerAxis const, CGamepadDeviceDriver::AxisInfo_t> >*)
std::_Rb_tree<SDL_GameControllerButton, std::pair<SDL_GameControllerButton const, unsigned long>, std::_Select1st<std::pair<SDL_GameControllerButton const, unsigned long> >, std::less<SDL_GameControllerButton>, std::allocator<std::pair<SDL_GameControllerButton const, unsigned long> > >::_M_erase(std::_Rb_tree_node<std::pair<SDL_GameControllerButton const, unsigned long> >*)
std::_Rb_tree<int, std::pair<int const, CGamepadDeviceDriver*>, std::_Select1st<std::pair<int const, CGamepadDeviceDriver*> >, std::less<int>, std::allocator<std::pair<int const, CGamepadDeviceDriver*> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, CGamepadDeviceDriver*> >*)
std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
std::__basic_file<char>::~__basic_file()
std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::in(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const
std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::out(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const
std::__codecvt_utf8_base<char32_t>::do_always_noconv() const
std::__codecvt_utf8_base<char32_t>::do_encoding() const
std::__codecvt_utf8_base<char32_t>::do_in(__mbstate_t&, char const*, char const*, char const*&, char32_t*, char32_t*, char32_t*&) const
std::__codecvt_utf8_base<char32_t>::do_length(__mbstate_t&, char const*, char const*, unsigned long) const
std::__codecvt_utf8_base<char32_t>::do_max_length() const
std::__codecvt_utf8_base<char32_t>::do_out(__mbstate_t&, char32_t const*, char32_t const*, char32_t const*&, char*, char*, char*&) const
std::__codecvt_utf8_base<char32_t>::do_unshift(__mbstate_t&, char*, char*, char*&) const
std::__codecvt_utf8_base<char32_t>::~__codecvt_utf8_base()
std::__codecvt_utf8_base<wchar_t>::do_always_noconv() const
std::__codecvt_utf8_base<wchar_t>::do_encoding() const
std::__codecvt_utf8_base<wchar_t>::do_in(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const
std::__codecvt_utf8_base<wchar_t>::do_length(__mbstate_t&, char const*, char const*, unsigned long) const
std::__codecvt_utf8_base<wchar_t>::do_max_length() const
std::__codecvt_utf8_base<wchar_t>::do_out(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const
std::__codecvt_utf8_base<wchar_t>::do_unshift(__mbstate_t&, char*, char*, char*&) const
std::__codecvt_utf8_base<wchar_t>::~__codecvt_utf8_base()
std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_istringstream()
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned long, char const*, std::__va_list), unsigned long, char const*, ...)
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned long)
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) [clone .isra.123]
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) [clone .isra.33]
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long) [clone .isra.76]
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long)
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long)
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned long)
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::resize(unsigned long, char)
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_create(unsigned long&, unsigned long)
std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_mutate(unsigned long, unsigned long, wchar_t const*, unsigned long)
std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_replace(unsigned long, unsigned long, wchar_t const*, unsigned long)
std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_replace_aux(unsigned long, unsigned long, unsigned long, wchar_t)
std::__cxx11::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::resize(unsigned long, wchar_t)
std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::_M_sync(char*, unsigned long, unsigned long)
std::__cxx11::wstring_convert<std::codecvt_utf8<wchar_t, 1114111ul, (std::codecvt_mode)0>, wchar_t, std::allocator<wchar_t>, std::allocator<char> >::~wstring_convert()
std::__ioinit
std::__throw_bad_cast()
std::__throw_bad_function_call()
std::__throw_length_error(char const*)
std::__throw_logic_error(char const*)
std::__throw_out_of_range_fmt(char const*, ...)
std::__throw_range_error(char const*)
std::__throw_system_error(int)
std::basic_filebuf<char, std::char_traits<char> >::basic_filebuf()
std::basic_filebuf<char, std::char_traits<char> >::close()
std::basic_filebuf<char, std::char_traits<char> >::open(char const*, std::_Ios_Openmode)
std::basic_filebuf<char, std::char_traits<char> >::~basic_filebuf()
std::basic_ifstream<char, std::char_traits<char> >::~basic_ifstream()
std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)
std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*)
std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char)
std::codecvt<wchar_t, char, __mbstate_t>::codecvt(unsigned long)
std::codecvt_utf8<char32_t, 1114111ul, (std::codecvt_mode)0>::~codecvt_utf8()
std::codecvt_utf8<wchar_t, 1114111ul, (std::codecvt_mode)0>::~codecvt_utf8()
std::ctype<char>::_M_widen_init() const
std::ctype<char>::do_widen(char) const
std::ios_base::Init::Init()
std::ios_base::Init::~Init()
std::ios_base::ios_base()
std::ios_base::~ios_base()
std::locale::locale()
std::locale::~locale()
std::pair<std::_Rb_tree_iterator<std::pair<SDL_GameControllerAxis const, CGamepadDeviceDriver::AxisInfo_t> >, bool> std::_Rb_tree<SDL_GameControllerAxis, std::pair<SDL_GameControllerAxis const, CGamepadDeviceDriver::AxisInfo_t>, std::_Select1st<std::pair<SDL_GameControllerAxis const, CGamepadDeviceDriver::AxisInfo_t> >, std::less<SDL_GameControllerAxis>, std::allocator<std::pair<SDL_GameControllerAxis const, CGamepadDeviceDriver::AxisInfo_t> > >::_M_emplace_unique<std::pair<SDL_GameControllerAxis, CGamepadDeviceDriver::AxisInfo_t> >(std::pair<SDL_GameControllerAxis, CGamepadDeviceDriver::AxisInfo_t>&&)
std::pair<std::_Rb_tree_iterator<std::pair<SDL_GameControllerButton const, unsigned long> >, bool> std::_Rb_tree<SDL_GameControllerButton, std::pair<SDL_GameControllerButton const, unsigned long>, std::_Select1st<std::pair<SDL_GameControllerButton const, unsigned long> >, std::less<SDL_GameControllerButton>, std::allocator<std::pair<SDL_GameControllerButton const, unsigned long> > >::_M_emplace_unique<std::pair<SDL_GameControllerButton, unsigned long> >(std::pair<SDL_GameControllerButton, unsigned long>&&)
std::pair<std::_Rb_tree_iterator<std::pair<int const, CGamepadDeviceDriver*> >, bool> std::_Rb_tree<int, std::pair<int const, CGamepadDeviceDriver*>, std::_Select1st<std::pair<int const, CGamepadDeviceDriver*> >, std::less<int>, std::allocator<std::pair<int const, CGamepadDeviceDriver*> > >::_M_emplace_unique<std::pair<int, CGamepadDeviceDriver*> >(std::pair<int, CGamepadDeviceDriver*>&&)
std::terminate()
std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)())
std::thread::_State::~_State()
std::thread::_State_impl<std::thread::_Invoker<std::tuple<CServerDriver_Gamepad::Init(vr::IVRDriverContext*)::{lambda()#1}> > >::_M_run()
std::thread::_State_impl<std::thread::_Invoker<std::tuple<CServerDriver_Gamepad::Init(vr::IVRDriverContext*)::{lambda()#1}> > >::~_State_impl()
std::thread::join()
std::vector<char, std::allocator<char> >::_M_default_append(unsigned long)
stderr
stderr@@GLIBC_2.17
steamrt
strcasecmp
strcasecmp@@GLIBC_2.17
strcmp
strcmp@@GLIBC_2.17
strcpy_safe(char*, unsigned long, char const*)
strerror
strerror@@GLIBC_2.17
stricmp(char const*, char const*)
strlen
strlen@@GLIBC_2.17
strncasecmp
strncasecmp@@GLIBC_2.17
strncmp
strncmp@@GLIBC_2.17
strncpy
strncpy@@GLIBC_2.17
strnicmp(char const*, char const*, unsigned long)
strtol
strtol@@GLIBC_2.17
strtoull
strtoull@@GLIBC_2.17
subs.10931
syscall
syscall@@GLIBC_2.17
system
system@@GLIBC_2.17
terminator.10774
tolower
tolower@@GLIBC_2.17
toupper
toupper@@GLIBC_2.17
true
typeinfo for CGamepadDeviceDriver
typeinfo for CServerDriver_Gamepad
typeinfo for SteamThreadTools::CThread
typeinfo for bool (*)(char)
typeinfo for bool (char)
typeinfo for int
typeinfo for std::__codecvt_utf8_base<char32_t>
typeinfo for std::__codecvt_utf8_base<wchar_t>
typeinfo for std::codecvt_utf8<char32_t, 1114111ul, (std::codecvt_mode)0>
typeinfo for std::codecvt_utf8<wchar_t, 1114111ul, (std::codecvt_mode)0>
typeinfo for std::thread::_State
typeinfo for std::thread::_State_impl<std::thread::_Invoker<std::tuple<CServerDriver_Gamepad::Init(vr::IVRDriverContext*)::{lambda()#1}> > >
typeinfo for vr::IServerTrackedDeviceProvider
typeinfo for vr::ITrackedDeviceServerDriver
typeinfo name for CGamepadDeviceDriver
typeinfo name for CServerDriver_Gamepad
typeinfo name for SteamThreadTools::CThread
typeinfo name for bool (*)(char)
typeinfo name for bool (char)
typeinfo name for std::codecvt_utf8<char32_t, 1114111ul, (std::codecvt_mode)0>
typeinfo name for std::codecvt_utf8<wchar_t, 1114111ul, (std::codecvt_mode)0>
typeinfo name for std::thread::_State_impl<std::thread::_Invoker<std::tuple<CServerDriver_Gamepad::Init(vr::IVRDriverContext*)::{lambda()#1}> > >
typeinfo name for vr::IServerTrackedDeviceProvider
typeinfo name for vr::ITrackedDeviceServerDriver
unseen_objects
unsetenv
unsetenv@@GLIBC_2.17
usleep
usleep@@GLIBC_2.17
uw_frame_state_for
uw_init_context_1
uw_install_context_1
uw_update_context
uw_update_context_1
vector::_M_default_append
void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
void std::vector<CAssertCallback*, std::allocator<CAssertCallback*> >::_M_realloc_insert<CAssertCallback* const&>(__gnu_cxx::__normal_iterator<CAssertCallback**, std::vector<CAssertCallback*, std::allocator<CAssertCallback*> > >, CAssertCallback* const&)
void std::vector<CGamepadDeviceDriver*, std::allocator<CGamepadDeviceDriver*> >::_M_realloc_insert<CGamepadDeviceDriver* const&>(__gnu_cxx::__normal_iterator<CGamepadDeviceDriver**, std::vector<CGamepadDeviceDriver*, std::allocator<CGamepadDeviceDriver*> > >, CGamepadDeviceDriver* const&)
void std::vector<CLogCallback*, std::allocator<CLogCallback*> >::_M_realloc_insert<CLogCallback* const&>(__gnu_cxx::__normal_iterator<CLogCallback**, std::vector<CLogCallback*, std::allocator<CLogCallback*> > >, CLogCallback* const&)
void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
vr::OpenVRInternal_ModuleServerDriverContext()::ctx
vr::VRDriverContext()::pHost
vr::k_InterfaceVersions
vsnprintf
vsnprintf@@GLIBC_2.17
vtable for CGamepadDeviceDriver
vtable for CServerDriver_Gamepad
vtable for SteamThreadTools::CThread
vtable for __cxxabiv1::__class_type_info
vtable for __cxxabiv1::__function_type_info
vtable for __cxxabiv1::__pointer_type_info
vtable for __cxxabiv1::__si_class_type_info
vtable for std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >
vtable for std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >
vtable for std::basic_filebuf<char, std::char_traits<char> >
vtable for std::basic_ifstream<char, std::char_traits<char> >
vtable for std::basic_ios<char, std::char_traits<char> >
vtable for std::basic_streambuf<char, std::char_traits<char> >
vtable for std::codecvt_utf8<char32_t, 1114111ul, (std::codecvt_mode)0>
vtable for std::codecvt_utf8<wchar_t, 1114111ul, (std::codecvt_mode)0>
vtable for std::thread::_State_impl<std::thread::_Invoker<std::tuple<CServerDriver_Gamepad::Init(vr::IVRDriverContext*)::{lambda()#1}> > >
waitpid
waitpid@@GLIBC_2.17
wcslen
wcslen@@GLIBC_2.17
wmemcpy
wmemcpy@@GLIBC_2.17
wmemmove
wmemmove@@GLIBC_2.17
wmemset
wmemset@@GLIBC_2.17
wstring_convert::from_bytes
wstring_convert::to_bytes
y
yes
{gamepad}/icons/gamepad_status_error.png
{gamepad}/icons/gamepad_status_off.png
{gamepad}/icons/gamepad_status_ready.png
{gamepad}/icons/gamepad_status_ready_alert.png
{gamepad}/icons/gamepad_status_ready_low.png
{gamepad}/icons/gamepad_status_searching.gif
{gamepad}/icons/gamepad_status_searching_alert.gif
{gamepad}/icons/gamepad_status_standby.png
{gamepad}/input/gamepad_profile.json

