 A __bss_start
 A _edata
 A _end
 T GetCameraHALInterface
 T _fini
 T _init
 VTT for std::basic_ifstream<char, std::char_traits<char> >@@GLIBCXX_3.4
 W void std::vector<void*, std::allocator<void*> >::_M_emplace_back_aux<void* const&>(void* const&)
 _ITM_deregisterTMCloneTable
 _ITM_registerTMCloneTable
 _Jv_RegisterClasses
 __cxa_allocate_exception@@CXXABI_1.3
 __cxa_atexit@@GLIBC_2.2.5
 __cxa_begin_catch@@CXXABI_1.3
 __cxa_end_catch@@CXXABI_1.3
 __cxa_finalize@@GLIBC_2.2.5
 __cxa_guard_abort@@CXXABI_1.3
 __cxa_guard_acquire@@CXXABI_1.3
 __cxa_guard_release@@CXXABI_1.3
 __cxa_pure_virtual@@CXXABI_1.3
 __cxa_rethrow@@CXXABI_1.3
 __cxa_throw@@CXXABI_1.3
 __errno_location@@GLIBC_2.2.5
 __fprintf_chk@@GLIBC_2.3.4
 __gmon_start__
 __gxx_personality_v0@@CXXABI_1.3
 __printf_chk@@GLIBC_2.3.4
 __pthread_key_create@@GLIBC_2.2.5
 __snprintf_chk@@GLIBC_2.3.4
 __sprintf_chk@@GLIBC_2.3.4
 __stack_chk_fail@@GLIBC_2.4
 __vsnprintf_chk@@GLIBC_2.3.4
 __xstat64@@GLIBC_2.2.5
 __xstat@@GLIBC_2.2.5
 _exit@@GLIBC_2.2.5
 a _DYNAMIC
 a _GLOBAL_OFFSET_TABLE_
 abort@@GLIBC_2.2.5
 alphasort@@GLIBC_2.2.5
 b CVRLog::InitLog(char const*, char const*, bool, unsigned long)::sb_combinedLogging
 b Plat_IsInDebugSession::fp
 b ThreadShellExecute::bInstalledSignalHandler
 b completed.6976
 b dwarf_reg_size_table
 b frame_hdr_cache
 b frame_hdr_cache_head
 b g_AITCamera
 b g_SuspendResumeLock
 b g_ThreadMainThreadID
 b g_VRLog
 b g_bSetSuspendHandlers
 b g_bSuspendResumeAck
 b g_nCurThreadSuspendCount
 b g_pCurThread
 b g_pLoggingMutex
 b guard variable for CVRLog::InitLog(char const*, char const*, bool, unsigned long)::sb_combinedLogging
 b marker.8723
 b object_mutex
 b once_regsizes.9087
 b seen_objects
 b selectBuf
 b subs.8986
 b systemBaseTicks
 b systemSecondsPerTick
 b systemTicksPerSecond
 b systemTimeInitialized
 b terminator.8829
 b unseen_objects
 chdir@@GLIBC_2.2.5
 chmod@@GLIBC_2.2.5
 clock_gettime@@GLIBC_2.2.5
 close@@GLIBC_2.2.5
 closedir@@GLIBC_2.2.5
 d DW.ref.__gxx_personality_v0
 d __JCR_END__
 d __JCR_LIST__
 d __TMC_END__
 d __do_global_dtors_aux_fini_array_entry
 d __dso_handle
 d __frame_dummy_init_array_entry
 d adds.8985
 d g_szSemFileName
 d typeinfo for CAitCamera
 d typeinfo for CCameraWorkThread
 d typeinfo for CLinuxVideoStream
 d typeinfo for CPreviewThread
 d typeinfo for IAitCamGraph
 d typeinfo for ICameraCompletionCallback
 d typeinfo for SteamThreadTools::CThread
 d typeinfo for vr::ICameraHAL
 d vtable for CAitCamera
 d vtable for CCameraWorkThread
 d vtable for CLinuxVideoStream
 d vtable for CPreviewThread
 d vtable for IAitCamGraph
 d vtable for ICameraCompletionCallback
 d vtable for SteamThreadTools::CThread
 d vtable for vr::ICameraHAL
 dl_iterate_phdr@@GLIBC_2.2.5
 dladdr@@GLIBC_2.2.5
 fclose@@GLIBC_2.2.5
 fflush@@GLIBC_2.2.5
 fgets@@GLIBC_2.2.5
 fopen@@GLIBC_2.2.5
 fork@@GLIBC_2.2.5
 fputs@@GLIBC_2.2.5
 fread@@GLIBC_2.2.5
 free@@GLIBC_2.2.5
 fseek@@GLIBC_2.2.5
 ftell@@GLIBC_2.2.5
 fwrite@@GLIBC_2.2.5
 getcwd@@GLIBC_2.2.5
 getenv@@GLIBC_2.2.5
 getpid@@GLIBC_2.2.5
 getppid@@GLIBC_2.2.5
 gettimeofday@@GLIBC_2.2.5
 ioctl@@GLIBC_2.2.5
 isalpha@@GLIBC_2.2.5
 kill@@GLIBC_2.2.5
 localtime@@GLIBC_2.2.5
 malloc@@GLIBC_2.2.5
 memcpy@@GLIBC_2.14
 memmove@@GLIBC_2.2.5
 memset@@GLIBC_2.2.5
 mkdir@@GLIBC_2.2.5
 mktime@@GLIBC_2.2.5
 mmap@@GLIBC_2.2.5
 munmap@@GLIBC_2.2.5
 nanosleep@@GLIBC_2.2.5
 open@@GLIBC_2.2.5
 opendir@@GLIBC_2.2.5
 operator delete(void*)@@GLIBCXX_3.4
 operator delete[](void*)@@GLIBCXX_3.4
 operator new(unsigned long)@@GLIBCXX_3.4
 operator new[](unsigned long)@@GLIBCXX_3.4
 pthread_attr_init@@GLIBC_2.2.5
 pthread_attr_setstacksize@@GLIBC_2.2.5
 pthread_cancel@@GLIBC_2.2.5
 pthread_cond_destroy@@GLIBC_2.3.2
 pthread_cond_init@@GLIBC_2.3.2
 pthread_cond_signal@@GLIBC_2.3.2
 pthread_cond_timedwait@@GLIBC_2.3.2
 pthread_create@@GLIBC_2.2.5
 pthread_getschedparam@@GLIBC_2.2.5
 pthread_getspecific@@GLIBC_2.2.5
 pthread_join@@GLIBC_2.2.5
 pthread_key_create@@GLIBC_2.2.5
 pthread_key_delete@@GLIBC_2.2.5
 pthread_kill@@GLIBC_2.2.5
 pthread_mutex_destroy@@GLIBC_2.2.5
 pthread_mutex_init@@GLIBC_2.2.5
 pthread_mutex_lock@@GLIBC_2.2.5
 pthread_mutex_unlock@@GLIBC_2.2.5
 pthread_mutexattr_destroy@@GLIBC_2.2.5
 pthread_mutexattr_init@@GLIBC_2.2.5
 pthread_mutexattr_settype@@GLIBC_2.2.5
 pthread_once@@GLIBC_2.2.5
 pthread_self@@GLIBC_2.2.5
 pthread_setname_np@@GLIBC_2.12
 pthread_setschedparam@@GLIBC_2.2.5
 pthread_setspecific@@GLIBC_2.2.5
 r CSWTCH.221
 r CSWTCH.253
 r SteamThreadTools::CThreadSpinRWLock::TryLockForWrite(unsigned int)::oldValue
 r SteamThreadTools::CThreadSpinRWLock::UnlockWrite()::newValue
 r __FRAME_END__
 r crc32(unsigned long, void const*, unsigned long)::crcTable
 r typeinfo name for CAitCamera
 r typeinfo name for CCameraWorkThread
 r typeinfo name for CLinuxVideoStream
 r typeinfo name for CPreviewThread
 r typeinfo name for IAitCamGraph
 r typeinfo name for ICameraCompletionCallback
 r typeinfo name for SteamThreadTools::CThread
 r typeinfo name for vr::ICameraHAL
 readdir@@GLIBC_2.2.5
 readlink@@GLIBC_2.2.5
 rename@@GLIBC_2.2.5
 rewind@@GLIBC_2.2.5
 scandir@@GLIBC_2.2.5
 sched_yield@@GLIBC_2.2.5
 semctl@@GLIBC_2.2.5
 semget@@GLIBC_2.2.5
 semop@@GLIBC_2.2.5
 setenv@@GLIBC_2.2.5
 sigaction@@GLIBC_2.2.5
 sigemptyset@@GLIBC_2.2.5
 std::__basic_file<char>::~__basic_file()@@GLIBCXX_3.4
 std::__throw_bad_alloc()@@GLIBCXX_3.4
 std::__throw_out_of_range(char const*)@@GLIBCXX_3.4
 std::basic_filebuf<char, std::char_traits<char> >::basic_filebuf()@@GLIBCXX_3.4
 std::basic_filebuf<char, std::char_traits<char> >::close()@@GLIBCXX_3.4
 std::basic_filebuf<char, std::char_traits<char> >::open(char const*, std::_Ios_Openmode)@@GLIBCXX_3.4
 std::basic_filebuf<char, std::char_traits<char> >::~basic_filebuf()@@GLIBCXX_3.4
 std::basic_ifstream<char, std::char_traits<char> >::~basic_ifstream()@@GLIBCXX_3.4
 std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)@@GLIBCXX_3.4
 std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*)@@GLIBCXX_3.4
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)@@GLIBCXX_3.4
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&)@@GLIBCXX_3.4
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long)@@GLIBCXX_3.4
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(unsigned long, char, std::allocator<char> const&)@@GLIBCXX_3.4
 std::ios_base::ios_base()@@GLIBCXX_3.4
 std::ios_base::~ios_base()@@GLIBCXX_3.4
 std::istream& std::istream::_M_extract<unsigned int>(unsigned int&)@@GLIBCXX_3.4.9
 std::locale::~locale()@@GLIBCXX_3.4
 std::string::_M_leak_hard()@@GLIBCXX_3.4
 std::string::_M_mutate(unsigned long, unsigned long, unsigned long)@@GLIBCXX_3.4
 std::string::_Rep::_M_destroy(std::allocator<char> const&)@@GLIBCXX_3.4
 std::string::_Rep::_M_dispose(std::allocator<char> const&)@@GLIBCXX_3.4
 std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&)@@GLIBCXX_3.4
 std::string::_Rep::_S_empty_rep_storage@@GLIBCXX_3.4
 std::string::append(char const*, unsigned long)@@GLIBCXX_3.4
 std::string::append(std::string const&)@@GLIBCXX_3.4
 std::string::assign(char const*, unsigned long)@@GLIBCXX_3.4
 std::string::assign(std::string const&)@@GLIBCXX_3.4
 std::string::erase(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>)@@GLIBCXX_3.4
 std::string::insert(unsigned long, char const*, unsigned long)@@GLIBCXX_3.4
 std::string::replace(unsigned long, unsigned long, char const*, unsigned long)@@GLIBCXX_3.4
 std::string::rfind(char, unsigned long) const@@GLIBCXX_3.4
 std::string::swap(std::string&)@@GLIBCXX_3.4
 stderr@@GLIBC_2.2.5
 strcasecmp@@GLIBC_2.2.5
 strerror@@GLIBC_2.2.5
 strftime@@GLIBC_2.2.5
 strlen@@GLIBC_2.2.5
 strncasecmp@@GLIBC_2.2.5
 strncpy@@GLIBC_2.2.5
 strrchr@@GLIBC_2.2.5
 strtol@@GLIBC_2.2.5
 syscall@@GLIBC_2.2.5
 system@@GLIBC_2.2.5
 t AITAPI_AitExtGet(void*, unsigned short, unsigned char*, unsigned long, unsigned long*)
 t AITAPI_AitExtSet(void*, unsigned short, unsigned char*, unsigned long, unsigned long*)
 t AITAPI_CloseDevice(void**)
 t AITAPI_GetFWBuildDate(void*, char*)
 t AITAPI_GetFWVersion(void*, unsigned char*)
 t AITAPI_IspCommand(void*, unsigned char*, unsigned char*)
 t AITAPI_MmpCommand(void*, unsigned char*, unsigned char*)
 t AITAPI_OpenDeviceEx(unsigned int, void**, unsigned int, unsigned int)
 t BCreateDirectory(char const*)
 t BCreateDirectoryRecursive(char const*)
 t BDeleteFileIfExists(char const*)
 t BFileExists(char const*)
 t BRenameFile(char const*, char const*)
 t CAitCamera::AitStreamTypeToVideoStreamFormat(AitStreamType_e)
 t CAitCamera::AitXU_SetTvOption(void*, unsigned char, bool)
 t CAitCamera::CAitCamera()
 t CAitCamera::CloseCamera()
 t CAitCamera::CreateVideoStream()
 t CAitCamera::FlushFrameQueue(bool)
 t CAitCamera::FramePayloadParser(void*, unsigned int, RawFrameDescriptor_t*)
 t CAitCamera::GetCameraCompatibilityMode(vr::ECameraCompatibilityMode*)
 t CAitCamera::GetCameraFormatDimensions(vr::ECameraVideoStreamFormat, unsigned int*, unsigned int*)
 t CAitCamera::GetCameraFrameBufferingRequirements(vr::ECameraVideoStreamFormat, int*, unsigned int*)
 t CAitCamera::GetFirmwareDescription(char*, unsigned int)
 t CAitCamera::GetFirmwareVersion(unsigned long*)
 t CAitCamera::GetVideoStreamElapsedTime()
 t CAitCamera::GetVideoStreamFormat()
 t CAitCamera::GetVideoStreamFrame()
 t CAitCamera::HasCameraStartupFailure()
 t CAitCamera::IsVideoStreamActive()
 t CAitCamera::IsVideoStreamPaused()
 t CAitCamera::LogMessage(LogLevel, char const*, ...)
 t CAitCamera::OnCamSyncEvent(double)
 t CAitCamera::OnCameraCommandCompleted(CameraCommand_t*, bool)
 t CAitCamera::OnCameraCommandCompleted(CameraCommand_t*, bool) [clone .part.17]
 t CAitCamera::OnISPSyncEvent(double)
 t CAitCamera::OnStartCommand_StartVideoStreamInternal(CameraCommand_t*)
 t CAitCamera::OnStopCommand_StopVideoStreamInternal(CameraCommand_t*)
 t CAitCamera::OnVideoSinkCallback(void*, unsigned int)
 t CAitCamera::OnWorkThread_CloseCamera()
 t CAitCamera::OnWorkThread_OpenCamera()
 t CAitCamera::OpenCamera(vr::IVRSettings*, vr::ICameraHostServices*)
 t CAitCamera::PauseVideoStream_Async(vr::ICameraAsyncCompletionCallback*, void const*)
 t CAitCamera::ReleaseVideoStreamFrame(vr::CameraVideoStreamFrame_t const*)
 t CAitCamera::ResetForSyncBeforeResume()
 t CAitCamera::ResumeVideoStream_Async(vr::ICameraAsyncCompletionCallback*, void const*)
 t CAitCamera::ServiceVideoSinkCallback(void*, unsigned int)
 t CAitCamera::SetAutoExposure_Async(bool)
 t CAitCamera::SetCameraCompatibilityMode_Async(vr::ECameraCompatibilityMode)
 t CAitCamera::SetCameraFrameBuffering(int, void**, unsigned int)
 t CAitCamera::SetEdgeEnhancement_Async(bool)
 t CAitCamera::SetFrameRate_Async(int, int)
 t CAitCamera::SetVideoSinkCallback(vr::ICameraVideoSinkCallback*)
 t CAitCamera::SetVideoStreamFormat(vr::ECameraVideoStreamFormat)
 t CAitCamera::StartVideoStream_Async(vr::ICameraAsyncCompletionCallback*, void const*)
 t CAitCamera::StopVideoStreamForShutdown()
 t CAitCamera::StopVideoStreamForTermination_Async()
 t CAitCamera::StopVideoStream_Async(vr::ICameraAsyncCompletionCallback*, void const*)
 t CAitCamera::VideoStreamFormatToAitVideoSignal(vr::ECameraVideoStreamFormat)
 t CAitCamera::~CAitCamera()
 t CCamSyncQueueTS::CCamSyncQueueTS()
 t CCamSyncQueueTS::FindClosestEvent(double, double, double*, double*, int*)
 t CCamSyncQueueTS::Flush()
 t CCamSyncQueueTS::IsEmpty()
 t CCamSyncQueueTS::Write(double)
 t CCameraWorkThread::CCameraWorkThread(ICameraCompletionCallback*)
 t CCameraWorkThread::Flush()
 t CCameraWorkThread::GetCommand()
 t CCameraWorkThread::LinkToCommand(CameraCommand_t*, CameraCommand_t const&)
 t CCameraWorkThread::QueueCommand(CameraCommand_t const&)
 t CCameraWorkThread::Run()
 t CCameraWorkThread::RunCommands()
 t CCameraWorkThread::Shutdown()
 t CCameraWorkThread::WaitForEmpty(unsigned int)
 t CCameraWorkThread::~CCameraWorkThread()
 t CDirIterator::BCurrentIsDir() const
 t CDirIterator::BCurrentIsHidden() const
 t CDirIterator::BCurrentIsMarkedForArchive() const
 t CDirIterator::BCurrentIsReadOnly() const
 t CDirIterator::BCurrentIsSystem() const
 t CDirIterator::BNextFile()
 t CDirIterator::BValidFilename()
 t CDirIterator::CDirIterator(char const*, char const*)
 t CDirIterator::CurrentFileCreateTime() const
 t CDirIterator::CurrentFileLength() const
 t CDirIterator::CurrentFileName()
 t CDirIterator::CurrentFileWriteTime() const
 t CDirIterator::Init(std::string const&)
 t CDirIterator::IsValid() const
 t CDirIterator::~CDirIterator()
 t CLinuxVideoStream::CloseDevice()
 t CLinuxVideoStream::OpenDevice(unsigned int, unsigned int)
 t CLinuxVideoStream::Release()
 t CLinuxVideoStream::StartPreview(unsigned int (*)(unsigned int, void*, void*), void*)
 t CLinuxVideoStream::StopPreview()
 t CLogTimer::CLogTimer(char const*, double)
 t CLogTimer::~CLogTimer()
 t CPreviewThread::Run()
 t CPreviewThread::~CPreviewThread()
 t CStopwatch::CStopwatch()
 t CStopwatch::GetElapsedSeconds()
 t CStopwatch::Reset()
 t CStopwatch::Start()
 t CStopwatch::Stop()
 t CVRLog::CVRLog()
 t CVRLog::CloseLog()
 t CVRLog::InitLog(char const*, char const*, bool, unsigned long)
 t CVRLog::IsOpen()
 t CVRLog::Log(LogLevel, char const*, ...)
 t CVRLog::Log(char const*, ...)
 t CVRLog::LogDirect(LogLevel, bool, char const*, __va_list_tag (&) [1])
 t CVRLog::LogIncremental(LogLevel, char const*, ...)
 t CVRLog::LogIncremental(char const*, ...)
 t CVRLog::SetMaxLogLevel(LogLevel)
 t CVRLog::WillLog(LogLevel)
 t CVRLog::~CVRLog()
 t CloseLog()
 t CreateSimpleProcess
 t CreateSimpleThread(unsigned int (*)(void*), void*, unsigned int*, unsigned int)
 t DeclareCurrentThreadIsMainThread
 t DumpLogStrings(std::vector<std::string, std::allocator<std::string> >&)
 t FileSelect(dirent const*)
 t FillDataStruct(_finddata_t*)
 t GetEnvironmentVariable(char const*)
 t GetFileLength(char const*)
 t GetGMUnixTime()
 t GetGMUnixTimeAtNextLocalTime(unsigned long, int, int, int)
 t GetSystemBaseTicks()
 t GetSystemTicksFromTime(double)
 t GetSystemTime()
 t GetSystemTimeFrequency()
 t GetSystemTimeFromTicks(unsigned long)
 t GetSystemTimeInTicks()
 t GetUserDocumentsPath()
 t GetVRLogTimeString(bool)
 t InitLog(char const*, char const*)
 t InitMainThread()
 t InitSystemBaseTimeTicks(unsigned long)
 t InitSystemTime(unsigned long) [clone .part.0]
 t IsPosix()
 t Log(LogLevel, char const*, ...)
 t Log(char const*, ...)
 t LogIncremental(LogLevel, char const*, ...)
 t LogIncremental(char const*, ...)
 t MakeFileWriteable(char const*)
 t Path_Compact(std::string const&, char)
 t Path_Exists(std::string const&)
 t Path_FilePathToUrl(std::string const&, std::string const&)
 t Path_FindParentDirectoryRecursively(std::string const&, std::string const&)
 t Path_FindParentSubDirectoryRecursively(std::string const&, std::string const&)
 t Path_FixSlashes(std::string const&, char)
 t Path_GetExecutablePath()
 t Path_GetExtension(std::string const&)
 t Path_GetSlash()
 t Path_GetThisModulePath()
 t Path_GetWorkingDirectory()
 t Path_IsAbsolute(std::string const&)
 t Path_IsAppBundle(std::string const&)
 t Path_IsDirectory(std::string const&)
 t Path_Join(std::string const&, std::string const&, char)
 t Path_Join(std::string const&, std::string const&, std::string const&, char)
 t Path_Join(std::string const&, std::string const&, std::string const&, std::string const&, char)
 t Path_Join(std::string const&, std::string const&, std::string const&, std::string const&, std::string const&, char)
 t Path_MakeAbsolute(std::string const&, std::string const&, char)
 t Path_ReadBinaryFile(std::string const&, int*)
 t Path_ReadBinaryFile(std::string const&, unsigned char*, unsigned int)
 t Path_ReadTextFile(std::string const&)
 t Path_RemoveTrailingSlash(std::string const&, char)
 t Path_SetWorkingDirectory(std::string const&)
 t Path_StripDirectory(std::string const&, char)
 t Path_StripExtension(std::string const&)
 t Path_StripFilename(std::string const&, char)
 t Path_UrlToFilePath(std::string const&)
 t Path_WriteBinaryFile(std::string const&, unsigned char*, unsigned int)
 t Path_WriteStringToTextFile(std::string const&, char const*)
 t Path_WriteStringToTextFileAtomic(std::string const&, char const*)
 t Plat_IsInDebugSession
 t ReadVideoDeviceId(char const*, char const*)
 t ReapChildProcesses(int)
 t ReleaseThreadHandle
 t SecondsToSystemTicks(double)
 t SetEnvironmentVariable(char const*, char const*)
 t SetMaxLogLevel(LogLevel)
 t SteamThreadTools::CThread::BHasValidThreadID()
 t SteamThreadTools::CThread::CThread()
 t SteamThreadTools::CThread::GetCurrentCThread()
 t SteamThreadTools::CThread::GetName()
 t SteamThreadTools::CThread::GetPriority() const
 t SteamThreadTools::CThread::GetResult() const
 t SteamThreadTools::CThread::GetThreadProc()
 t SteamThreadTools::CThread::Init()
 t SteamThreadTools::CThread::IsAlive()
 t SteamThreadTools::CThread::IsAlive() [clone .part.4]
 t SteamThreadTools::CThread::IsThreadRunning()
 t SteamThreadTools::CThread::Join(unsigned int)
 t SteamThreadTools::CThread::OnExit()
 t SteamThreadTools::CThread::Resume()
 t SteamThreadTools::CThread::SetName(char const*)
 t SteamThreadTools::CThread::SetPriority(int)
 t SteamThreadTools::CThread::Sleep(unsigned int)
 t SteamThreadTools::CThread::Start(unsigned int)
 t SteamThreadTools::CThread::Stop(int)
 t SteamThreadTools::CThread::Suspend()
 t SteamThreadTools::CThread::Terminate(int)
 t SteamThreadTools::CThread::ThreadExceptionWrapper(void*)
 t SteamThreadTools::CThread::ThreadProc(void*)
 t SteamThreadTools::CThread::WaitForCreateComplete(SteamThreadTools::CThreadEvent*)
 t SteamThreadTools::CThread::Yield()
 t SteamThreadTools::CThread::~CThread()
 t SteamThreadTools::CThread::~CThread() [clone .part.8]
 t SteamThreadTools::CThreadEvent::CThreadEvent(bool)
 t SteamThreadTools::CThreadEvent::CThreadEvent(char const*, bool, bool)
 t SteamThreadTools::CThreadEvent::Check()
 t SteamThreadTools::CThreadEvent::Reset()
 t SteamThreadTools::CThreadEvent::Set()
 t SteamThreadTools::CThreadFullMutex::CThreadFullMutex(bool, char const*, bool, bool)
 t SteamThreadTools::CThreadFullMutex::IsCreator() const
 t SteamThreadTools::CThreadFullMutex::Release()
 t SteamThreadTools::CThreadLocalBase::CThreadLocalBase()
 t SteamThreadTools::CThreadLocalBase::Get() const
 t SteamThreadTools::CThreadLocalBase::Set(void*)
 t SteamThreadTools::CThreadLocalBase::~CThreadLocalBase()
 t SteamThreadTools::CThreadLocalInt<long>::~CThreadLocalInt()
 t SteamThreadTools::CThreadLocalPtr<SteamThreadTools::CThread>::~CThreadLocalPtr()
 t SteamThreadTools::CThreadMutex::CThreadMutex()
 t SteamThreadTools::CThreadMutex::~CThreadMutex()
 t SteamThreadTools::CThreadRWLock::LockForWrite()
 t SteamThreadTools::CThreadRWLock::UnlockWrite()
 t SteamThreadTools::CThreadRWLock::WaitForRead()
 t SteamThreadTools::CThreadSemaphore::CThreadSemaphore(long, long)
 t SteamThreadTools::CThreadSemaphore::Release(long)
 t SteamThreadTools::CThreadSpinLock::Lock(unsigned int) volatile
 t SteamThreadTools::CThreadSpinRWLock::LockForRead()
 t SteamThreadTools::CThreadSpinRWLock::SpinLockForWrite(unsigned int)
 t SteamThreadTools::CThreadSpinRWLock::UnlockRead()
 t SteamThreadTools::CThreadSpinRWLock::UnlockWrite()
 t SteamThreadTools::CThreadSyncObject::AcquireSemaphoreInternal(unsigned int)
 t SteamThreadTools::CThreadSyncObject::AssertUseable()
 t SteamThreadTools::CThreadSyncObject::CThreadSyncObject()
 t SteamThreadTools::CThreadSyncObject::CloseSemaphoreInternal(int, bool, char const*)
 t SteamThreadTools::CThreadSyncObject::CreateAnonymousSyncObjectInternal(bool, bool)
 t SteamThreadTools::CThreadSyncObject::CreateSemaphoreInternal(char const*, long, bool, bool*)
 t SteamThreadTools::CThreadSyncObject::EnsureSemaphoreClearedInternal(int)
 t SteamThreadTools::CThreadSyncObject::EnsureSemaphorePostedInternal(int)
 t SteamThreadTools::CThreadSyncObject::IsSemaphoreOrphanedInternal(int, int)
 t SteamThreadTools::CThreadSyncObject::OpenSemaphoreInternal(char const*, bool)
 t SteamThreadTools::CThreadSyncObject::ReleaseSemaphoreInternal(int, long)
 t SteamThreadTools::CThreadSyncObject::SaveNameToFile(char const*)
 t SteamThreadTools::CThreadSyncObject::SignalThreadSyncObjectInternal()
 t SteamThreadTools::CThreadSyncObject::Wait(unsigned int)
 t SteamThreadTools::CThreadSyncObject::operator!() const
 t SteamThreadTools::CThreadSyncObject::~CThreadSyncObject()
 t SteamThreadTools::CThreadSyncObject::~CThreadSyncObject() [clone .part.2]
 t SuspendResumePthread(unsigned long, int)
 t SystemTicksToSeconds(unsigned long)
 t SystemTimeSleep(unsigned int)
 t ThreadCloseProcess
 t ThreadGetCurrentHandle
 t ThreadGetCurrentId
 t ThreadGetCurrentProcessHandle
 t ThreadGetCurrentProcessId
 t ThreadGetCurrentRunningRef
 t ThreadGetPriority
 t ThreadGetProcessExitCode
 t ThreadGetProcessListInfo
 t ThreadGetProcessParentID
 t ThreadInMainThread
 t ThreadInterlockedAssignIf
 t ThreadInterlockedAssignIf64
 t ThreadInterlockedAssignPointerIf
 t ThreadInterlockedCompareExchange
 t ThreadInterlockedCompareExchange64
 t ThreadInterlockedCompareExchangePointer
 t ThreadInterlockedDecrement
 t ThreadInterlockedDecrement64
 t ThreadInterlockedExchange
 t ThreadInterlockedExchange64
 t ThreadInterlockedExchangeAdd
 t ThreadInterlockedExchangeAdd64
 t ThreadInterlockedExchangePointer
 t ThreadInterlockedIncrement
 t ThreadInterlockedIncrement64
 t ThreadIsProcessActive
 t ThreadIsThreadRunning
 t ThreadOpenProcess
 t ThreadProcConvert(void*)
 t ThreadResumeSignal(int)
 t ThreadSetAffinity
 t ThreadSetDebugName
 t ThreadSetDebugName.part.0
 t ThreadSetPriority
 t ThreadShellExecute
 t ThreadSleep
 t ThreadSuspendSignal(int)
 t ThreadTerminate
 t ThreadTerminateProcessCode
 t ThreadWaitForProcessExit
 t ThreadYield()
 t UnixTimeToDateString(unsigned long)
 t UnlinkFile(char const*)
 t VideoSinkCallback(unsigned int, void*, void*)
 t WillLog(LogLevel)
 t _GLOBAL__sub_I_aitcamera.cpp
 t _GLOBAL__sub_I_threadtools.cpp
 t _GLOBAL__sub_I_vrlog.cpp
 t _Unwind_Backtrace
 t _Unwind_DebugHook
 t _Unwind_DeleteException
 t _Unwind_FindEnclosingFunction
 t _Unwind_Find_FDE
 t _Unwind_ForcedUnwind
 t _Unwind_ForcedUnwind_Phase2
 t _Unwind_GetCFA
 t _Unwind_GetDataRelBase
 t _Unwind_GetGR
 t _Unwind_GetIP
 t _Unwind_GetIPInfo
 t _Unwind_GetLanguageSpecificData
 t _Unwind_GetRegionStart
 t _Unwind_GetTextRelBase
 t _Unwind_IteratePhdrCallback
 t _Unwind_RaiseException
 t _Unwind_RaiseException_Phase2
 t _Unwind_Resume
 t _Unwind_Resume_or_Rethrow
 t _Unwind_SetGR
 t _Unwind_SetIP
 t __deregister_frame
 t __deregister_frame_info
 t __deregister_frame_info_bases
 t __do_global_dtors_aux
 t __frame_state_for
 t __register_frame
 t __register_frame_info
 t __register_frame_info_bases
 t __register_frame_info_table
 t __register_frame_info_table_bases
 t __register_frame_table
 t _findclose(long)
 t _findfirst(char const*, _finddata_t*)
 t _findnext(long, _finddata_t*)
 t add_fdes
 t base_from_cb_data.isra.4
 t base_from_object.isra.3
 t call_gmon_start
 t char* std::string::_S_construct<__gnu_cxx::__normal_iterator<char const*, std::string> >(__gnu_cxx::__normal_iterator<char const*, std::string>, __gnu_cxx::__normal_iterator<char const*, std::string>, std::allocator<char> const&, std::forward_iterator_tag)
 t classify_object_over_fdes
 t deregister_tm_clones
 t execute_cfa_program
 t execute_stack_op
 t fde_mixed_encoding_compare
 t fde_single_encoding_compare
 t fde_unencoded_compare
 t frame_downheap
 t frame_dummy
 t frame_heapsort
 t get_cie_encoding
 t init_dwarf_reg_size_table
 t linear_search_fdes
 t non-virtual thunk to CAitCamera::OnCameraCommandCompleted(CameraCommand_t*, bool)
 t read_encoded_value_with_base
 t read_sleb128
 t register_tm_clones
 t search_object
 t set_fast_math
 t size_of_encoded_value
 t std::_Deque_base<CameraCommand_t*, std::allocator<CameraCommand_t*> >::~_Deque_base()
 t std::_Deque_base<vr::CameraVideoStreamFrame_t*, std::allocator<vr::CameraVideoStreamFrame_t*> >::_M_initialize_map(unsigned long)
 t std::_Deque_base<vr::CameraVideoStreamFrame_t*, std::allocator<vr::CameraVideoStreamFrame_t*> >::~_Deque_base()
 t std::deque<vr::CameraVideoStreamFrame_t*, std::allocator<vr::CameraVideoStreamFrame_t*> >::_M_reallocate_map(unsigned long, bool)
 t uw_frame_state_for
 t uw_init_context_1
 t uw_install_context_1
 t uw_update_context
 t uw_update_context_1
 t void std::deque<CameraCommand_t*, std::allocator<CameraCommand_t*> >::_M_push_back_aux<CameraCommand_t* const&>(CameraCommand_t* const&)
 t void std::vector<CPreviewThread::buff_t, std::allocator<CPreviewThread::buff_t> >::_M_emplace_back_aux<CPreviewThread::buff_t const&>(CPreviewThread::buff_t const&)
 t void std::vector<void*, std::allocator<void*> >::_M_emplace_back_aux<void* const&>(void* const&)
 time@@GLIBC_2.2.5
 toupper@@GLIBC_2.2.5
 typeinfo for int@@CXXABI_1.3
 unlink@@GLIBC_2.2.5
 unsetenv@@GLIBC_2.2.5
 usleep@@GLIBC_2.2.5
 vtable for __cxxabiv1::__class_type_info@@CXXABI_1.3
 vtable for __cxxabiv1::__si_class_type_info@@CXXABI_1.3
 vtable for __cxxabiv1::__vmi_class_type_info@@CXXABI_1.3
 vtable for std::basic_filebuf<char, std::char_traits<char> >@@GLIBCXX_3.4
 vtable for std::basic_ifstream<char, std::char_traits<char> >@@GLIBCXX_3.4
 vtable for std::basic_ios<char, std::char_traits<char> >@@GLIBCXX_3.4
 vtable for std::basic_streambuf<char, std::char_traits<char> >@@GLIBCXX_3.4
 waitpid@@GLIBC_2.2.5
