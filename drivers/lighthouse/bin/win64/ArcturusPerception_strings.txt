 n;^
Qkkbal
3_L\n
>jm\r
Zjz\v
i]Wb
9a&g
MGiI
wn>Jj
#.zf
+o*7
0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.-:+=^!/*?&<>()[]{}@%$#
TSRH
KLFA
IBJGQ$%&'()*+,-./0123456789:;<=M
\n\v\f\r
 !"#O
cvGetModeWindow_W32
cvSetCloseCallback
cvGetRatioWindow_W32
cvGetOpenGlProp_W32
cvGetPropVisible_W32
createGlContext
drawGl
resizeGl
cvNamedWindow
cvSetOpenGlContext
cvUpdateWindow
cvCreateOpenGLCallback
cvDestroyWindow
cvShowImage
cvResizeWindow
?IUUUUU
=LUUUUU
.?AUbase_any_policy@anyimpl@cvflann@@
.?AU?$big_any_policy@W4flann_centers_init_t@cvflann@@@anyimpl@cvflann@@
.?AU?$typed_base_any_policy@W4flann_centers_init_t@cvflann@@@anyimpl@cvflann@@
.?AU?$big_any_policy@W4cmI8HrPX@cvflann@@@anyimpl@cvflann@@
.?AU?$typed_base_any_policy@W4cmI8HrPX@cvflann@@@anyimpl@cvflann@@
.?AU?$big_any_policy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@anyimpl@cvflann@@
.?AU?$typed_base_any_policy@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@anyimpl@cvflann@@
.?AU?$small_any_policy@H@anyimpl@cvflann@@
.?AU?$typed_base_any_policy@H@anyimpl@cvflann@@
.?AU?$small_any_policy@I@anyimpl@cvflann@@
.?AU?$typed_base_any_policy@I@anyimpl@cvflann@@
.?AU?$small_any_policy@M@anyimpl@cvflann@@
.?AU?$typed_base_any_policy@M@anyimpl@cvflann@@
.?AU?$small_any_policy@_N@anyimpl@cvflann@@
.?AU?$typed_base_any_policy@_N@anyimpl@cvflann@@
.?AU?$big_any_policy@Uempty_any@anyimpl@cvflann@@@anyimpl@cvflann@@
.?AU?$typed_base_any_policy@Uempty_any@anyimpl@cvflann@@@anyimpl@cvflann@@
.?AU?$small_any_policy@PEBD@anyimpl@cvflann@@
.?AU?$typed_base_any_policy@PEBD@anyimpl@cvflann@@
.?AUempty_any@anyimpl@cvflann@@
.?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@
.?AW4cmI8HrPX@cvflann@@
.?AW4flann_centers_init_t@cvflann@@
.PEBD
.?AVruntime_error@std@@
.?AVexception@std@@
.?AV<lambda_506d615cd3999252c78a1f4e07b93666>@@
.?AV<lambda_7f2969df043e005999c56fd26537be1a>@@
.?AV<lambda_0524fa8eb997aaacccbdc390a00e0782>@@
.?AV_Ref_count_base@std@@
.?AV_Pad@std@@
.?AV?$_Func_base@X$$V@std@@
.?AV?$_Ref_count_obj@UControllersInfo@valve@@@std@@
.?AV?$_Ref_count_obj@V?$Rrxb8nSd@U?$OCVector4@E@@UmQxo0Pk4@oc@@@oc@@@std@@
.?AV?$_Ref_count_obj@V?$Rrxb8nSd@EUmQxo0Pk4@oc@@@oc@@@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_0524fa8eb997aaacccbdc390a00e0782>@@X$$V@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_7f2969df043e005999c56fd26537be1a>@@X$$V@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_506d615cd3999252c78a1f4e07b93666>@@X$$V@std@@
.?AV?$_LaunchPad@V?$unique_ptr@V?$tuple@V<lambda_96c62fca4a71e2fc4f230af4573dc276>@@@std@@U?$default_delete@V?$tuple@V<lambda_96c62fca4a71e2fc4f230af4573dc276>@@@std@@@2@@std@@@std@@
.?AVbad_cast@std@@
.?AV?$basic_stringbuf@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@
.?AV?$basic_streambuf@DU?$char_traits@D@std@@@std@@
.?AV?$basic_stringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@
.?AV?$basic_iostream@DU?$char_traits@D@std@@@std@@
.?AV?$basic_istream@DU?$char_traits@D@std@@@std@@
.?AV?$basic_ios@DU?$char_traits@D@std@@@std@@
.?AVios_base@std@@
.?AV?$_Iosb@H@std@@
.?AV?$basic_ostream@DU?$char_traits@D@std@@@std@@
.?AV?$basic_filebuf@DU?$char_traits@D@std@@@std@@
.?AV?$basic_ifstream@DU?$char_traits@D@std@@@std@@
.?AV?$basic_ofstream@DU?$char_traits@D@std@@@std@@
.?AUThat@XRSession@PE@@
.?AUOCDispatchDependentObject@ST@@
.?AV?$_Ref_count_obj@UXRIPCClient@PE@@@std@@
.?AV?$_Ref_count_obj@VTrackerRoomLayoutAdapter@oc@@@std@@
.?AV<lambda_631c5fe32211b377264b3504b1fa54d7>@@
.?AV<lambda_c61e24dcfd1e8be23f04696c4d0d5055>@@
.?AVmPgH8PNs@oc@@
.?AVIr9Z37cZ@oc@@
.?AUWV3i5bRI@oc@@
.?AU?$x8jQyi78@UYiCuUdlV@oc@@@oc@@
.?AV?$_Ref_count_obj@VyF9OMDV0@oc@@@std@@
.?AV?$_Ref_count_obj@VIr9Z37cZ@oc@@@std@@
.?AV?$_Ref_count_obj@UYiCuUdlV@oc@@@std@@
.?AV?$_Ref_count_resource@PEAUYiCuUdlV@oc@@V<lambda_c61e24dcfd1e8be23f04696c4d0d5055>@@@std@@
.?AV?$_Ref_count_resource@PEAUYiCuUdlV@oc@@V<lambda_631c5fe32211b377264b3504b1fa54d7>@@@std@@
.?AV?$_Ref_count_obj@UHoH9XOH5@?$x8jQyi78@UYiCuUdlV@oc@@@oc@@@std@@
.?AV?$_Ref_count@VST7c8ns3@oc@@@std@@
.?AV?$_Ref_count@VMultiCameraColorFrame@oc@@@std@@
.?AV<lambda_d5b3e66e968a3161f1ddad1c24884dcf>@@
.?AV<lambda_d33c3a15e2d59a3b56f7ff7468d0e167>@@
.?AV<lambda_b001d00426da2c2f0c340ebaaa204082>@@
.?AV<lambda_c6daf1ebd60b66ead4b1971e2d93e34d>@@
.?AV<lambda_66849c3df19a23f275d2a19f1230060a>@@
.?AV<lambda_0f11aa623b426574e9c18bb4ca646e74>@@
.?AV<lambda_c0451a1530d4f28b4f7679ff3ff92532>@@
.?AV?$_Func_base@XAEBVPerformanceMonitor@ST@@@std@@
.?AV?$_Ref_count_obj@VMultiCameraColorFrame@oc@@@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_c0451a1530d4f28b4f7679ff3ff92532>@@XAEBVPerformanceMonitor@ST@@@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_0f11aa623b426574e9c18bb4ca646e74>@@XAEBVPerformanceMonitor@ST@@@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_66849c3df19a23f275d2a19f1230060a>@@XAEBVPerformanceMonitor@ST@@@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_c6daf1ebd60b66ead4b1971e2d93e34d>@@XAEBVPerformanceMonitor@ST@@@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_b001d00426da2c2f0c340ebaaa204082>@@XAEBVPerformanceMonitor@ST@@@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_d33c3a15e2d59a3b56f7ff7468d0e167>@@XAEBVPerformanceMonitor@ST@@@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_d5b3e66e968a3161f1ddad1c24884dcf>@@XAEBVPerformanceMonitor@ST@@@std@@
.?AV<lambda_bd8b37f724883952247d8797f8a89c46>@@
.?AV<lambda_8c302d1ecc4fdfc0e6af2614431d48e3>@@
.?AV<lambda_5ccab961e573cc02ab7cf89a79c13810>@@
.?AV<lambda_f33a7b8ea7d18f706678e6bee113ede3>@@
.?AV<lambda_c79e475b1bc15640514c12680f162b2b>@@
.?AV<lambda_1784903b7604d0df17f53b77ab58e034>@@
.?AV<lambda_5d672e87899b20f342d366ddb0c0e0c1>@@
.?AV<lambda_36504a0694d972f02e9fec9af405b4eb>@@
.?AV<lambda_a33fbcd90c7bf771e996c5bb1228a063>@@
.?AV<lambda_af28d0f237aba80f9c06504e174353c1>@@
.?AV<lambda_ea2330533903733967016a62174535d1>@@
.?AV<lambda_8a375bb3fe361e3a0e8a0b7948a1b4b6>@@
.?AV<lambda_10efb203bbf211a39f5ec078ad04689b>@@
.P6A_KAEAPEAE@Z
.?AV?$_Func_base@_KAEAPEAE@std@@
.?AV?$_Func_impl_no_alloc@P6A_KAEAPEAE@Z_KAEAPEAE@std@@
.?AV?$_LaunchPad@V?$unique_ptr@V?$tuple@P8That@XRIPCClient@PE@@EAAXXZPEAU123@@std@@U?$default_delete@V?$tuple@P8That@XRIPCClient@PE@@EAAXXZPEAU123@@std@@@2@@std@@@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_10efb203bbf211a39f5ec078ad04689b>@@_KAEAPEAE@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_8a375bb3fe361e3a0e8a0b7948a1b4b6>@@_KAEAPEAE@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_ea2330533903733967016a62174535d1>@@_KAEAPEAE@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_af28d0f237aba80f9c06504e174353c1>@@_KAEAPEAE@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_a33fbcd90c7bf771e996c5bb1228a063>@@_KAEAPEAE@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_36504a0694d972f02e9fec9af405b4eb>@@_KAEAPEAE@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_5d672e87899b20f342d366ddb0c0e0c1>@@_KAEAPEAE@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_1784903b7604d0df17f53b77ab58e034>@@_KAEAPEAE@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_c79e475b1bc15640514c12680f162b2b>@@_KAEAPEAE@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_f33a7b8ea7d18f706678e6bee113ede3>@@_KAEAPEAE@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_5ccab961e573cc02ab7cf89a79c13810>@@_KAEAPEAE@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_8c302d1ecc4fdfc0e6af2614431d48e3>@@_KAEAPEAE@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_bd8b37f724883952247d8797f8a89c46>@@_KAEAPEAE@std@@
.?AV<lambda_b8d3cc5f9c66dd137d61ddbcbd67cf17>@@
.?AV?$_Func_impl_no_alloc@V<lambda_b8d3cc5f9c66dd137d61ddbcbd67cf17>@@X$$V@std@@
.?AV<lambda_a81e57a9a3ff767ef2f6bcaf946f8fa0>@@
.?AVSerializationBuffer@oc@@
.?AVMemoryBlockBuffer@oc@@
.?AVb72VUrqq@oc@@
.?AVu8TeMdX6@oc@@
.?AV?$_Func_base@XPEBE_K@std@@
.?AV?$_Ref_count_obj@Vu8TeMdX6@oc@@@std@@
.?AV?$_Ref_count_obj@UahCE8LX7@oc@@@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_a81e57a9a3ff767ef2f6bcaf946f8fa0>@@XPEBE_K@std@@
.?AV?$_Ref_count@VyF9OMDV0@oc@@@std@@
.?AV?$_Ref_count@G@std@@
.?AV?$_Ref_count@M@std@@
.?AV<lambda_210ba627762f801dc5111b105b68707c>@@
.?AVMultiCameraColorFrame@oc@@
.?AUCaptureSessionDelegate@ST@@
.?AV?$_Func_impl_no_alloc@V<lambda_210ba627762f801dc5111b105b68707c>@@X$$V@std@@
.?AV?$_Ref_count_obj@UzDNgQPtk@oc@@@std@@
.?AV?$_Ref_count_obj@ViTeM8clz@oc@@@std@@
.?AV?$_Ref_count_obj@UMesh@ST@@@std@@
.?AV?$_Ref_count@ViTeM8clz@oc@@@std@@
.?AV<lambda_ce10957060de9ccd380185b84353a6a1>@@
.?AV<lambda_d44b91faadcb8714c8d48f51f06bf39b>@@
.?AV<lambda_f74b87e349753976b19ad9805e468de3>@@
.?AV<lambda_09047a915aeb00e6f7f1ae4e96734f0e>@@
.?AV?$_Func_impl_no_alloc@V<lambda_09047a915aeb00e6f7f1ae4e96734f0e>@@X$$V@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_f74b87e349753976b19ad9805e468de3>@@X$$V@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_d44b91faadcb8714c8d48f51f06bf39b>@@X$$V@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_ce10957060de9ccd380185b84353a6a1>@@X$$V@std@@
.?AV?$basic_ostringstream@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@
.?AVJsonValue@@
.?AVJsonInt@@
.?AV?$Value@$00H@@
.?AVJsonDouble@@
.?AV?$Value@$00N@@
.?AVJsonBoolean@@
.?AV?$Value@$01_N@@
.?AVJsonString@@
.?AV?$Value@$02V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@
.?AVJsonArray@@
.?AV?$Value@$03V?$vector@VJson@@V?$allocator@VJson@@@std@@@std@@@@
.?AVJsonObject@@
.?AV?$Value@$04V?$map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VJson@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@VJson@@@std@@@2@@std@@@@
.?AVJsonNull@@
.?AV?$Value@$0A@UcB71wXhr@@@@
.?AV?$_Ref_count_obj@VJsonNull@@@std@@
.?AV?$_Ref_count_obj@VJsonBoolean@@@std@@
.?AV?$_Ref_count_obj@VJsonDouble@@@std@@
.?AV?$_Ref_count_obj@VJsonInt@@@std@@
.?AV?$_Ref_count_obj@VJsonString@@@std@@
.?AV?$_Ref_count_obj@VJsonArray@@@std@@
.?AV?$_Ref_count_obj@VJsonObject@@@std@@
.?AV<lambda_83e93ed2dab93ac1b7cceb4d90165d91>@@
.?AV<lambda_40808ab8aa955173bde28b431303a454>@@
.?AV<lambda_98e3bbea9f53830c300c00c439adf9c3>@@
.?AV<lambda_86bb34f249708caf018ee275c8de6ce6>@@
.?AV<lambda_402dd5741ef06fa951cc05aeb145fb4c>@@
.?AV?$_Func_base@X_K_K_K@std@@
.?AV?$_Func_base@XAEAVgB8ODmAp@@PEAUni3GNnww@oc@@@std@@
.?AV?$_Func_base@XAEAV?$SerializerHelper@W4Hgvsunuk@oc@@@oc@@AEBVgB8ODmAp@@PEAUni3GNnww@2@@std@@
.?AV?$_Func_base@X_K@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_402dd5741ef06fa951cc05aeb145fb4c>@@X_K_K_K@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_86bb34f249708caf018ee275c8de6ce6>@@X_K_K_K@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_98e3bbea9f53830c300c00c439adf9c3>@@XAEAVgB8ODmAp@@PEAUni3GNnww@oc@@@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_40808ab8aa955173bde28b431303a454>@@XAEAV?$SerializerHelper@W4Hgvsunuk@oc@@@oc@@AEBVgB8ODmAp@@PEAUni3GNnww@3@@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_83e93ed2dab93ac1b7cceb4d90165d91>@@X_K@std@@
.?AVsystem_error@std@@
.?AV_System_error@std@@
.?AV<lambda_c3c81f3079865616bd2b5472106a7fa9>@@
.?AV<lambda_c9a1fb68c47916ee452cee954630bf59>@@
.?AV<lambda_9950fe185347255fa90790531e5af33d>@@
.?AV<lambda_b6798398854dc24b77c2b119ca3b79ba>@@
.?AV<lambda_4d026ed23ef5861af20611ec7a0e947a>@@
.?AV<lambda_56a373bb5e17a46acae00f1161a1c4da>@@
.?AV<lambda_a092191559324d338c4f5879d9816207>@@
.?AV<lambda_754c8385e9b139f24a5298ef834a63e2>@@
.?AV<lambda_ae7651f251f9f64edcdd436aaf583257>@@
.?AVerror_category@std@@
.?AV_Generic_error_category@std@@
.?AVPCNwq0KG@oc@@
.?AVpQQuJ0Ja@oc@@
.?AV?$_Ref_count@V?$Rrxb8nSd@U?$OCVector4@E@@UmQxo0Pk4@oc@@@oc@@@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_56a373bb5e17a46acae00f1161a1c4da>@@X$$V@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_4d026ed23ef5861af20611ec7a0e947a>@@X$$V@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_b6798398854dc24b77c2b119ca3b79ba>@@X$$V@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_9950fe185347255fa90790531e5af33d>@@X$$V@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_c9a1fb68c47916ee452cee954630bf59>@@X$$V@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_c3c81f3079865616bd2b5472106a7fa9>@@X$$V@std@@
.?AV?$_LaunchPad@V?$unique_ptr@V?$tuple@P8Impl@pQQuJ0Ja@oc@@EAAXXZPEAU123@@std@@U?$default_delete@V?$tuple@P8Impl@pQQuJ0Ja@oc@@EAAXXZPEAU123@@std@@@2@@std@@@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_ae7651f251f9f64edcdd436aaf583257>@@X$$V@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_754c8385e9b139f24a5298ef834a63e2>@@X$$V@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_a092191559324d338c4f5879d9816207>@@X$$V@std@@
.?AVfilesystem_error@filesystem@std@@
.?AV_System_error_category@std@@
.?AVexception@oc@@
.?AV<lambda_e807ab8a79df19838871938dfbf9dc49>@@
.?AVyF9OMDV0@oc@@
.?AV?$_Ref_count_obj@UH26XContext@ni3GNnww@oc@@@std@@
.?AV?$_Ref_count_obj@V?$Rrxb8nSd@U?$OCVector3@E@@UmQxo0Pk4@oc@@@oc@@@std@@
.?AV?$_Ref_count_resource@PEAV?$Rrxb8nSd@EUmQxo0Pk4@oc@@@oc@@V<lambda_e807ab8a79df19838871938dfbf9dc49>@@@std@@
.?AV<lambda_6ea5508d6b7b4e44ee8c66cfb59ebd9c>@@
.?AV<lambda_f03ab6a2cb502aed1e4f6f6e26b78231>@@
.?AVBSmYrxcP@oc@@
.?AVoMgn4T1N@oc@@
.?AV?$_Func_impl_no_alloc@V<lambda_f03ab6a2cb502aed1e4f6f6e26b78231>@@XAEAVgB8ODmAp@@PEAUni3GNnww@oc@@@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_6ea5508d6b7b4e44ee8c66cfb59ebd9c>@@XAEAV?$SerializerHelper@W4Hgvsunuk@oc@@@oc@@AEBVgB8ODmAp@@PEAUni3GNnww@3@@std@@
.?AV<lambda_ca6507c8ac88fd7adee6387097849b7e>@@
.?AV<lambda_385349014b50f19292741544023bbf39>@@
.?AV<lambda_0fc7940236e1b1a85b76266ecf633b5c>@@
.?AV<lambda_4ca633086c2f5d7ff65c72293c2bcd7c>@@
.?AV?$_Func_impl_no_alloc@V<lambda_4ca633086c2f5d7ff65c72293c2bcd7c>@@X$$V@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_0fc7940236e1b1a85b76266ecf633b5c>@@X$$V@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_385349014b50f19292741544023bbf39>@@X$$V@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_ca6507c8ac88fd7adee6387097849b7e>@@X$$V@std@@
.?AVcdlADqeZ@oc@@
.?AVpx1yMtSu@oc@@
.?AVDCtXxbgc@oc@@
.?AVO8KUV4py@oc@@
.?AVSensorDepthFrameMetadataExtrinsicsFullInfoSerializer@oc@@
.?AV?$PlKC47Tq@UDHEbTLGN@oc@@@oc@@
.?AV?$wsLzvwKW@V?$vector@UDHEbTLGN@oc@@V?$allocator@UDHEbTLGN@oc@@@std@@@std@@VSensorDepthFrameMetadataExtrinsicsFullInfoSerializer@oc@@@oc@@
.?AV?$PlKC47Tq@V?$vector@UDHEbTLGN@oc@@V?$allocator@UDHEbTLGN@oc@@@std@@@std@@@oc@@
.?AV?$_Ref_count@V?$Rrxb8nSd@EUTzRZgVr3@oc@@@oc@@@std@@
.?AViTeM8clz@oc@@
.?AV?$_Ref_count_obj@Ucxx_dispatch_queue_attr@@@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_9dc9404d28720188e861857bbf5b9f75>@@X$$V@std@@
.?AV<lambda_9dc9404d28720188e861857bbf5b9f75>@@
.?AV<lambda_287f6e01839f8c8be88d220ba7ed1f92>@@
.?AV<lambda_fdd1bd26193c8b4a245bea073d127bd4>@@
.?AUcxx_dispatch_queue@@
.?AUcxx_serial_dispatch_queue@@
.?AUcxx_prioritized_dispatch_queue@@
.?AUcxx_concurrent_dispatch_queue@@
.?AV?$_Ref_count_obj@Ucxx_concurrent_dispatch_queue@@@std@@
.?AV?$_Ref_count_obj@Ucxx_serial_dispatch_queue@@@std@@
.?AV?$_Ref_count_obj@Ucxx_prioritized_dispatch_queue@@@std@@
.?AV?$_Ref_count_obj@Ucxx_dispatch_group@@@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_287f6e01839f8c8be88d220ba7ed1f92>@@X$$V@std@@
.?AV?$_LaunchPad@V?$unique_ptr@V?$tuple@P8cxx_serial_dispatch_queue@@EAAXXZPEAU1@@std@@U?$default_delete@V?$tuple@P8cxx_serial_dispatch_queue@@EAAXXZPEAU1@@std@@@2@@std@@@std@@
.?AV?$_LaunchPad@V?$unique_ptr@V?$tuple@P8cxx_prioritized_dispatch_queue@@EAAXXZPEAU1@@std@@U?$default_delete@V?$tuple@P8cxx_prioritized_dispatch_queue@@EAAXXZPEAU1@@std@@@2@@std@@@std@@
.?AV?$_LaunchPad@V?$unique_ptr@V?$tuple@P8cxx_concurrent_dispatch_queue@@EAAXH@ZPEAU1@H@std@@U?$default_delete@V?$tuple@P8cxx_concurrent_dispatch_queue@@EAAXH@ZPEAU1@H@std@@@2@@std@@@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_fdd1bd26193c8b4a245bea073d127bd4>@@X$$V@std@@
.?AV<lambda_f05841af60d4d3a9559581ed71d946a4>@@
.?AV<lambda_180b7949419c157de3b131efd3d08bda>@@
.?AV?$_Func_impl_no_alloc@V<lambda_180b7949419c157de3b131efd3d08bda>@@X$$V@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_f05841af60d4d3a9559581ed71d946a4>@@X$$V@std@@
.?AV?$_Ref_count_obj@U_Dir_enum_impl@filesystem@std@@@std@@
.?AV<lambda_f56460bb0254bfb7667170979f61e61c>@@
.?AV<lambda_b6aa665d17b8e4cc81e7b1f9a29f9ab7>@@
.?AV<lambda_912d2c3a1d880075411dcc88297a427d>@@
.?AV<lambda_c55ebbc12f9f4601ce80b937aa62fab3>@@
.?AV<lambda_4cc426136f343ea72775a0d7206f77e4>@@
.?AV<lambda_a1fc3aa2001ae0f311715eb92b56c97b>@@
.?AV<lambda_b37c3822484a2144fd8539c82f1b541d>@@
.?AV<lambda_b33502f61708c66e9690014b08a16942>@@
.?AV?$_Func_base@XAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAD@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_b33502f61708c66e9690014b08a16942>@@XAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAD@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_b37c3822484a2144fd8539c82f1b541d>@@XAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAD@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_a1fc3aa2001ae0f311715eb92b56c97b>@@XAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAD@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_4cc426136f343ea72775a0d7206f77e4>@@XAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAD@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_c55ebbc12f9f4601ce80b937aa62fab3>@@XAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAD@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_912d2c3a1d880075411dcc88297a427d>@@XAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAD@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_b6aa665d17b8e4cc81e7b1f9a29f9ab7>@@XAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAD@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_f56460bb0254bfb7667170979f61e61c>@@XAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAD@std@@
.?AUBaseHolder@EnumValue@oc@@
.?AV?$_LaunchPad@V?$unique_ptr@V?$tuple@P8WorkerThreadPool@oc@@EAAXH@ZPEAV12@H@std@@U?$default_delete@V?$tuple@P8WorkerThreadPool@oc@@EAAXH@ZPEAV12@H@std@@@2@@std@@@std@@
.?AVBitmap@Gdiplus@@
.?AVImage@Gdiplus@@
.?AVGdiplusBase@Gdiplus@@
.?AUIUnknown@@
.?AUIMFAsyncCallback@@
.?AUEncoderCallbacks@MFVideoEncoder@oc@@
.?AV_com_error@@
.?AV<lambda_6575a7d83a4c92a9dbde062d77180693>@@
.?AV<lambda_7667a49ef51007ce0aba8b7a6851ee5c>@@
.?AV<lambda_c586fdaea083274778a289cf1082a473>@@
.?AV<lambda_c6746a31be91e0f924f8f9b9dca366c4>@@
.?AV?$_Func_base@_KPEAE@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_c6746a31be91e0f924f8f9b9dca366c4>@@_KPEAE@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_c586fdaea083274778a289cf1082a473>@@XPEBE_K@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_7667a49ef51007ce0aba8b7a6851ee5c>@@_KPEAE@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_6575a7d83a4c92a9dbde062d77180693>@@XPEBE_K@std@@
.?AV?$_Ref_count_obj@VdCJVD5NK@oc@@@std@@
.?AV?$_Ref_count@UQIiJCIrr@oc@@@std@@
.?AV?$_Ref_count@VvyH8Zrn9@oc@@@std@@
.?AULodePNGState@@
.?AVState@lodepng@@
.?AVbad_alloc@std@@
.?AVStereoMatcher@cv@@
.?AVStereoBM@cv@@
.?AV<lambda_882f6bb837a707782c9cb58dc8c933d3>@@
.?AV<lambda_ac12580e674c99ab8ca71b04c858515e>@@
.?AV<lambda_d02bada1e56457c79115fe28494a4551>@@
.?AV<lambda_334de5ea32875c37a62db59f962831aa>@@
.?AV<lambda_e32e171227917f838bfc8299d9d54dfe>@@
.?AV?$_Ref_count_obj@V?$Rrxb8nSd@MUTzRZgVr3@oc@@@oc@@@std@@
.?AV?$_Ref_count_obj@V?$Rrxb8nSd@_NUTzRZgVr3@oc@@@oc@@@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_e32e171227917f838bfc8299d9d54dfe>@@X$$V@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_334de5ea32875c37a62db59f962831aa>@@X$$V@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_d02bada1e56457c79115fe28494a4551>@@X$$V@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_ac12580e674c99ab8ca71b04c858515e>@@X$$V@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_882f6bb837a707782c9cb58dc8c933d3>@@X$$V@std@@
.?AU?$Inner@W4SplatAndSliceStrategy@HardwareFriendlyBilateralSolver@valve@@@EnumValue@oc@@
.?AU?$Inner@W4TemporalConsistentStrategy@HardwareFriendlyBilateralSolver@valve@@@EnumValue@oc@@
.?AU?$Inner@W4BetterCloseDepthStrategy@HardwareFriendlyBilateralSolver@valve@@@EnumValue@oc@@
.?AU?$Inner@W4InitialDepthAlgo@ICMHWlwt@DepthFromStereo@valve@@@EnumValue@oc@@
.?AU?$Inner@W4SparseDepthCleaningAlgo@ICMHWlwt@DepthFromStereo@valve@@@EnumValue@oc@@
.?AU?$Inner@W4PostprocessingFilter@ICMHWlwt@DepthFromStereo@valve@@@EnumValue@oc@@
.?AU?$Inner@W4LeftToRightWarpingStrategy@ICMHWlwt@DepthFromStereo@valve@@@EnumValue@oc@@
.?AU?$Inner@W4RenderingType@ControllersRenderer@valve@@@EnumValue@oc@@
.?AU?$Inner@W4PostProcessingStrategy@ICMHWlwt@DepthFromStereo@valve@@@EnumValue@oc@@
.?AU?$Inner@W4AddDilatedController@ICMHWlwt@DepthFromStereo@valve@@@EnumValue@oc@@
.?AV<lambda_7fa7cb0b038471f79e24019726e6cb36>@@
.?AV<lambda_003b4af55da3ada46f6acc79c062fc00>@@
.?AV<lambda_72b6c94c6e551d75cbcd8db4a701a249>@@
.?AV<lambda_809e141b333da6add7bee6a3bc3fd9c0>@@
.?AV<lambda_5a405567bca38fd134670af5e2873664>@@
.?AV?$_Func_impl_no_alloc@V<lambda_5a405567bca38fd134670af5e2873664>@@X$$V@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_809e141b333da6add7bee6a3bc3fd9c0>@@X$$V@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_72b6c94c6e551d75cbcd8db4a701a249>@@X$$V@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_003b4af55da3ada46f6acc79c062fc00>@@X$$V@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_7fa7cb0b038471f79e24019726e6cb36>@@X$$V@std@@
.?AV?$_Ref_count_obj@V?$Rrxb8nSd@U?$OCVector3@M@@UTzRZgVr3@oc@@@oc@@@std@@
.?AV<lambda_10057c1990a046d1f497cbc64d87149f>@@
.?AV<lambda_eee058ece293137b0f5b727816392873>@@
.?AV?$_Func_impl_no_alloc@V<lambda_eee058ece293137b0f5b727816392873>@@X$$V@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_10057c1990a046d1f497cbc64d87149f>@@X_K_K_K@std@@
.?AVerror_t@zmq@@
.?AUHeartbeatFailure@Impl@RemoteInferenceClient@oc@@
.?AVmultipart_t@zmq@@
.?AV<lambda_b29f562a038b511df1e978e6d35429ef>@@
.?AV?$_Func_impl_no_alloc@V<lambda_b29f562a038b511df1e978e6d35429ef>@@X$$V@std@@
.?AV<lambda_738124311910ded4706b0c5ce4c18117>@@
.?AV?$_Func_impl_no_alloc@V<lambda_738124311910ded4706b0c5ce4c18117>@@X_K_K_K@std@@
.?AVrabCbffo@oc@@
.?AVRoomLayoutDataSource@oc@@
.?AV<lambda_a7d240fab4d89ca558e16817140edf09>@@
.?AV<lambda_742afae297cb249a88713433ea84fe5a>@@
.?AV<lambda_bccf55388102be923e8a4f9b4c82feb0>@@
.?AV<lambda_478a25dcedfa24d2aa458d86ead13cf9>@@
.?AVAOJJkJxz@oc@@
.?AV?$_Func_base@_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVJson@@@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_478a25dcedfa24d2aa458d86ead13cf9>@@X$$V@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_bccf55388102be923e8a4f9b4c82feb0>@@X$$V@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_742afae297cb249a88713433ea84fe5a>@@X$$V@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_a7d240fab4d89ca558e16817140edf09>@@X$$V@std@@
.?AVFGl4F2EA@oc@@
.?AVTrackerRoomLayoutAdapter@oc@@
.?AV?$_Ref_count@UImpl@TrackerRoomLayoutAdapter@oc@@@std@@
.?AV<lambda_e4bd886463fddb068be2ddd51b7ebe73>@@
.?AV<lambda_428141df5aead49937bb0cfec48c12e9>@@
.?AV<lambda_86ef208deb676b595e750fc9cb195773>@@
.?AV?$_Func_base@XAEBUICMHWlwt@TNXhUHm5@oc@@PEAVWorld@23@@std@@
.?AV?$_Func_base@XAEBQEAVICQtZ7rW@TNXhUHm5@oc@@@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_86ef208deb676b595e750fc9cb195773>@@XAEBUICMHWlwt@TNXhUHm5@oc@@PEAVWorld@34@@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_428141df5aead49937bb0cfec48c12e9>@@XAEBUICMHWlwt@TNXhUHm5@oc@@PEAVWorld@34@@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_e4bd886463fddb068be2ddd51b7ebe73>@@XAEBUICMHWlwt@TNXhUHm5@oc@@PEAVWorld@34@@std@@
.?AUwTGDZo8k@EQf4PSDP@oc@@
.?AUwTGDZo8k@EF1aw4nX@oc@@
.?AU?$default_delete@VlbngrYpE@oc@@@std@@
.?AVEQf4PSDP@oc@@
.?AVEF1aw4nX@oc@@
.?AV?$_Ref_count_obj@UwTGDZo8k@EF1aw4nX@oc@@@std@@
.?AV?$_Ref_count_obj@V?$vector@U?$OCVector3@M@@V?$allocator@U?$OCVector3@M@@@std@@@std@@@std@@
.?AV?$_Ref_count_obj@V?$vector@U?$pair@U?$OCVector3@M@@U1@@std@@V?$allocator@U?$pair@U?$OCVector3@M@@U1@@std@@@2@@std@@@std@@
.?AV?$_Ref_count_obj@V?$vector@Uhz5UqdlJ@TNXhUHm5@oc@@V?$allocator@Uhz5UqdlJ@TNXhUHm5@oc@@@std@@@std@@@std@@
.?AV?$_Ref_count_resource@PEAVlbngrYpE@oc@@U?$default_delete@VlbngrYpE@oc@@@std@@@std@@
.?AUwTGDZo8k@q39st7Vw@oc@@
.?AU?$default_delete@VWXavR46U@oc@@@std@@
.?AU?$default_delete@VSdKtNSxe@oc@@@std@@
.?AVq39st7Vw@oc@@
.?AV?$_Ref_count_obj@UwTGDZo8k@q39st7Vw@oc@@@std@@
.?AV?$_Ref_count_resource@PEAVSdKtNSxe@oc@@U?$default_delete@VSdKtNSxe@oc@@@std@@@std@@
.?AV?$_Ref_count_resource@PEAVWXavR46U@oc@@U?$default_delete@VWXavR46U@oc@@@std@@@std@@
.?AUwTGDZo8k@th01CFwL@oc@@
.?AV<lambda_23e8256d83719b9acb906366f99526c1>@@
.?AVBDApe8Mf@oc@@
.?AVcln2CgxS@oc@@
.?AVth01CFwL@oc@@
.?AV?$_Ref_count_obj@VBDApe8Mf@oc@@@std@@
.?AV?$_Ref_count_obj@VChnNUrSN@oc@@@std@@
.?AV?$_Ref_count_obj@UwTGDZo8k@th01CFwL@oc@@@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_23e8256d83719b9acb906366f99526c1>@@_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVJson@@@std@@
.?AUwTGDZo8k@J2FB1Ofz@oc@@
.?AUwTGDZo8k@Polsi0Rh@oc@@
.?AVJ2FB1Ofz@oc@@
.?AVPolsi0Rh@oc@@
.?AV?$_Ref_count_obj@UwTGDZo8k@Polsi0Rh@oc@@@std@@
.?AVKrnq2HAF@oc@@
.?AV?$_Ref_count_obj@UwTGDZo8k@J2FB1Ofz@oc@@@std@@
.?AUwTGDZo8k@FKcLwdwl@oc@@
.?AVFKcLwdwl@oc@@
.?AV?$_Ref_count_obj@UwTGDZo8k@FKcLwdwl@oc@@@std@@
.?AV?$_Func_base@XAEBV?$shared_ptr@VFrame@TNXhUHm5@oc@@@std@@@std@@
.?AV<lambda_f2bdec2c05e693a9f006eba0b98a4326>@@
.?AV<lambda_9542486d6f02974883e40add4a193fef>@@
.?AV<lambda_37a6c11309b6d95b4540de39c4ae9956>@@
.?AV?$_Func_base@XAEBQEAVjrkYIN9E@TNXhUHm5@oc@@@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_37a6c11309b6d95b4540de39c4ae9956>@@XAEBV?$shared_ptr@VFrame@TNXhUHm5@oc@@@std@@@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_9542486d6f02974883e40add4a193fef>@@XAEBQEAVICQtZ7rW@TNXhUHm5@oc@@@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_f2bdec2c05e693a9f006eba0b98a4326>@@XAEBQEAVjrkYIN9E@TNXhUHm5@oc@@@std@@
.?AVShader@oc@@
.?AV<lambda_7940cfe95b6e2a91a3293990ee4c5c6e>@@
.?AV?$_Func_impl_no_alloc@V<lambda_7940cfe95b6e2a91a3293990ee4c5c6e>@@X$$V@std@@
.?AVfRmk3Krt@oc@@
.?AVK1xrRDfW@oc@@
.?AVFVdgknid@oc@@
.?AV<lambda_d3186251cb4c53b4d8ac7967cb5c2e42>@@
.?AV<lambda_dff95a0608966968eab8c7f7bd00d2ed>@@
.?AV?$_Func_impl_no_alloc@V<lambda_dff95a0608966968eab8c7f7bd00d2ed>@@_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVJson@@@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_d3186251cb4c53b4d8ac7967cb5c2e42>@@_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVJson@@@std@@
.?AV<lambda_65143db95a8789bda58df0fd3a97630a>@@
.P6AMAEBV?$vector@MV?$allocator@M@std@@@std@@0@Z
.?AVMTRand_int32@@
.?AVMTRand@@
.?AV?$_Func_base@MAEBV?$vector@MV?$allocator@M@std@@@std@@AEBV12@@std@@
.?AV?$_Func_base@MHAEBMAEBM@std@@
.?AV?$_Ref_count_obj@UdbmrDRQZ@oCeVAAY0@ChnNUrSN@oc@@@std@@
.?AV?$_Ref_count_obj@UI4bqlDIy@v822XITA@ChnNUrSN@oc@@@std@@
.?AV?$_Ref_count_obj@UFrameData@v822XITA@ChnNUrSN@oc@@@std@@
.?AV?$_Ref_count_obj@UI4bqlDIy@A9sKmFFz@ChnNUrSN@oc@@@std@@
.?AV?$_Ref_count_obj@UbmihgcZY@A9sKmFFz@ChnNUrSN@oc@@@std@@
.?AV?$_Ref_count_obj@UFrameData@A9sKmFFz@ChnNUrSN@oc@@@std@@
.?AV?$_Func_impl_no_alloc@V<lambda_65143db95a8789bda58df0fd3a97630a>@@MHAEBMAEBM@std@@
.?AV?$_Func_impl_no_alloc@P6AMAEBV?$vector@MV?$allocator@M@std@@@std@@0@ZMAEBV12@AEBV12@@std@@
.?AV?$_Ref_count_obj@UI4bqlDIy@dF9UBydy@oc@@@std@@
.?AV?$_Ref_count_obj@UbmihgcZY@dF9UBydy@oc@@@std@@
.?AV?$_Ref_count_obj@UFrameData@dF9UBydy@oc@@@std@@
.?AV?$_Ref_count_obj@UTYiuyUGB@oc@@@std@@
.?AV?$_Ref_count_obj@UUsjlNYzC@oc@@@std@@
.?AU?$x8jQyi78@UA4LVu1XP@TNXhUHm5@oc@@@oc@@
.?AV?$_Ref_count_obj@UHoH9XOH5@?$x8jQyi78@UA4LVu1XP@TNXhUHm5@oc@@@oc@@@std@@
.?AVsocket_base_t@zmq@@
.?AVown_t@zmq@@
.?AVobject_t@zmq@@
.?AV?$array_item_t@$0A@@zmq@@
.?AUi_poll_events@zmq@@
.?AUi_pipe_events@zmq@@
.?AVrouting_socket_base_t@zmq@@
.?AVi_mailbox@zmq@@
.?AVmailbox_t@zmq@@
.?AV?$ypipe_t@Ucommand_t@zmq@@$0BA@@zmq@@
.?AV?$ypipe_base_t@Ucommand_t@zmq@@@zmq@@
.?AVselect_t@zmq@@
.?AVworker_poller_base_t@zmq@@
.?AVpoller_base_t@zmq@@
.?AVpipe_t@zmq@@
.?AV?$array_item_t@$00@zmq@@
.?AV?$array_item_t@$01@zmq@@
.?AV?$array_item_t@$02@zmq@@
.?AV?$ypipe_base_t@Vmsg_t@zmq@@@zmq@@
.?AV?$ypipe_t@Vmsg_t@zmq@@$0BAA@@zmq@@
.?AV?$ypipe_conflate_t@Vmsg_t@zmq@@@zmq@@
.?AVio_thread_t@zmq@@
.?AVreaper_t@zmq@@
.?AVtcp_listener_t@zmq@@
.?AVio_object_t@zmq@@
.?AVsession_base_t@zmq@@
.?AVudp_address_t@zmq@@
.?AVmailbox_safe_t@zmq@@
.?AVpair_t@zmq@@
.?AVxpub_t@zmq@@
.?AVpub_t@zmq@@
.?AVxsub_t@zmq@@
.?AVsub_t@zmq@@
.?AVdealer_t@zmq@@
.?AVreq_t@zmq@@
.?AVreq_session_t@zmq@@
.?AVrouter_t@zmq@@
.?AVrep_t@zmq@@
.?AVpull_t@zmq@@
.?AVpush_t@zmq@@
.?AVstream_t@zmq@@
.?AVserver_t@zmq@@
.?AVclient_t@zmq@@
.?AVradio_t@zmq@@
.?AVradio_session_t@zmq@@
.?AVdish_t@zmq@@
.?AVdish_session_t@zmq@@
.?AVgather_t@zmq@@
.?AVscatter_t@zmq@@
.?AVdgram_t@zmq@@
.?AVip_resolver_t@zmq@@
.?AUi_engine@zmq@@
.?AVstream_engine_t@zmq@@
.?AVtcp_connecter_t@zmq@@
.?AVsocks_connecter_t@zmq@@
.?AVudp_engine_t@zmq@@
.?AUi_encoder@zmq@@
.?AVv1_encoder_t@zmq@@
.?AV?$encoder_base_t@Vv1_encoder_t@zmq@@@zmq@@
.?AVi_decoder@zmq@@
.?AVv1_decoder_t@zmq@@
.?AV?$decoder_base_t@Vv1_decoder_t@zmq@@Vc_single_allocator@2@@zmq@@
.?AVv2_encoder_t@zmq@@
.?AV?$encoder_base_t@Vv2_encoder_t@zmq@@@zmq@@
.?AVv2_decoder_t@zmq@@
.?AV?$decoder_base_t@Vv2_decoder_t@zmq@@Vshared_message_memory_allocator@2@@zmq@@
.?AVmechanism_t@zmq@@
.?AVnull_mechanism_t@zmq@@
.?AVzap_client_t@zmq@@
.?AVmechanism_base_t@zmq@@
.?AVplain_client_t@zmq@@
.?AVplain_server_t@zmq@@
.?AVzap_client_common_handshake_t@zmq@@
.?AVcurve_client_t@zmq@@
.?AVcurve_mechanism_base_t@zmq@@
.?AVcurve_server_t@zmq@@
.?AVraw_decoder_t@zmq@@
.?AVraw_encoder_t@zmq@@
.?AV?$encoder_base_t@Vraw_encoder_t@zmq@@@zmq@@
.?AV<lambda_556f86237556118ed686dda5f02b2963>@@
.?AV<lambda_8a188fe43bf6cf5a75eae73d74f9dbc8>@@
.?AVynNyNRJD@oc@@
.?AU?$x8jQyi78@VdEIpo85o@oc@@@oc@@
.?AV?$_Ref_count_obj@UKqgRESQq@oc@@@std@@
.?AV?$_Ref_count_obj@VdEIpo85o@oc@@@std@@
.?AV?$_Ref_count_obj@UHoH9XOH5@?$x8jQyi78@VdEIpo85o@oc@@@oc@@@std@@
.?AV?$_Ref_count_resource@PEAVdEIpo85o@oc@@V<lambda_8a188fe43bf6cf5a75eae73d74f9dbc8>@@@std@@
.?AV?$_Ref_count_resource@PEAVdEIpo85o@oc@@V<lambda_556f86237556118ed686dda5f02b2963>@@@std@@
.?AV?$_Ref_count@VdEIpo85o@oc@@@std@@
.?AVvycG1vCZ@oc@@
.?AVg0UR2JU1@oc@@
.?AVBwp0Ogin@oc@@
.?AVQGyIRw3w@oc@@
.?AVlugOfjDB@oc@@
.?AVXp070MdF@oc@@
.?AVuOJH5ECD@oc@@
.?AVddgOSlUU@oc@@
.?AVBZqjLxPu@oc@@
.?AVOeWvL1Hc@oc@@
.?AVfm1gOLNe@oc@@
.?AVNtfgVvje@oc@@
.?AVBWTrIYEp@oc@@
.?AVoPROwtKa@oc@@
.?AVU2F1aVfW@oc@@
.?AVlMrmohGh@oc@@
.?AVKOFNqUy7@oc@@
.?AVnoTxt0Au@oc@@
.?AVWBPYowBz@oc@@
.?AVXuVAdmZX@oc@@
.?AVxh0wl61v@oc@@
.?AVJGlQhR81@oc@@
.?AVbt9810JX@oc@@
.?AVteLZp40F@oc@@
.?AVTa0T665j@oc@@
.?AVrrluPIAD@oc@@
.?AVxhjhPYVC@oc@@
.?AVjCz4Ulec@oc@@
.?AVwyZ6xP8h@oc@@
.?AV?$_Ref_count@VHe7sd3t7@oc@@@std@@
.?AVException@cv@@
.?AVParseError@cv@@
.?AVTLSDataContainer@cv@@
.?AV?$TLSData@UCoreTLSData@cv@@@cv@@
.?AV?$TLSData@VThreadID@?A0xf0e83a83@cv@@@cv@@
.?AVBufferPoolController@cv@@
.?AVMatAllocator@cv@@
.?AVDummyBufferPoolController@cv@@
.?AVStdMatAllocator@cv@@
.?AVParallelLoopBody@cv@@
.?AV?$fixedSmoothInvoker@EVufixedpoint16@?A0xf14b3eeb@cv@@@?A0xf14b3eeb@cpu_baseline@cv@@
.?AVAlgorithm@cv@@
.?AUPrefilterInvoker@cv@@
.?AUFindStereoCorrespInvoker@cv@@
.?AVStereoBMImpl@cv@@
.?AV?$_Ref_count_obj@VStereoBMImpl@cv@@@std@@
.?AVStereoSGBM@cv@@
.?AUCalcVerticalSums@cv@@
.?AUCalcHorizontalSums@cv@@
.?AUSGBM3WayMainLoop@cv@@
.?AVStereoSGBMImpl@cv@@
.?AV?$_Ref_count@VStereoSGBMImpl@cv@@@std@@
.?AVDisparityFilter@ximgproc@cv@@
.?AVDisparityWLSFilter@ximgproc@cv@@
.?AVDisparityWLSFilterImpl@ximgproc@cv@@
.?AUComputeDiscontinuityAwareLRC_ParBody@DisparityWLSFilterImpl@ximgproc@cv@@
.?AUComputeDepthDisc_ParBody@DisparityWLSFilterImpl@ximgproc@cv@@
.?AUParallelMatOp_ParBody@DisparityWLSFilterImpl@ximgproc@cv@@
.?AV?$_Ref_count@VDisparityWLSFilterImpl@ximgproc@cv@@@std@@
.?AVMatOp@cv@@
.?AVMatOp_Identity@cv@@
.?AVMatOp_AddEx@cv@@
.?AVMatOp_Bin@cv@@
.?AVMatOp_Cmp@cv@@
.?AVMatOp_GEMM@cv@@
.?AVMatOp_Invert@cv@@
.?AVMatOp_T@cv@@
.?AVMatOp_Solve@cv@@
.?AVMatOp_Initializer@cv@@
.?AVresizeNNInvoker@cv@@
.?AV?$resizeGeneric_Invoker@U?$HResizeLinear@EHF$0IAA@UHResizeNoVec@cv@@@cv@@U?$VResizeLinear@EHFU?$FixedPtCast@HE$0BG@@cv@@UVResizeLinearVec_32s8u@2@@2@@cv@@
.?AV?$resizeGeneric_Invoker@U?$HResizeLinear@GMM$00UHResizeNoVec@cv@@@cv@@U?$VResizeLinear@GMMU?$Cast@MG@cv@@UVResizeLinearVec_32f16u@2@@2@@cv@@
.?AV?$resizeGeneric_Invoker@U?$HResizeLinear@FMM$00UHResizeNoVec@cv@@@cv@@U?$VResizeLinear@FMMU?$Cast@MF@cv@@UVResizeLinearVec_32f16s@2@@2@@cv@@
.?AV?$resizeGeneric_Invoker@U?$HResizeLinear@MMM$00UHResizeNoVec@cv@@@cv@@U?$VResizeLinear@MMMU?$Cast@MM@cv@@UVResizeLinearVec_32f@2@@2@@cv@@
.?AV?$resizeGeneric_Invoker@U?$HResizeLinear@NNM$00UHResizeNoVec@cv@@@cv@@U?$VResizeLinear@NNMU?$Cast@NN@cv@@UVResizeNoVec@2@@2@@cv@@
.?AV?$resizeGeneric_Invoker@U?$HResizeCubic@EHF@cv@@U?$VResizeCubic@EHFU?$FixedPtCast@HE$0BG@@cv@@UVResizeCubicVec_32s8u@2@@2@@cv@@
.?AV?$resizeGeneric_Invoker@U?$HResizeCubic@GMM@cv@@U?$VResizeCubic@GMMU?$Cast@MG@cv@@UVResizeCubicVec_32f16u@2@@2@@cv@@
.?AV?$resizeGeneric_Invoker@U?$HResizeCubic@FMM@cv@@U?$VResizeCubic@FMMU?$Cast@MF@cv@@UVResizeCubicVec_32f16s@2@@2@@cv@@
.?AV?$resizeGeneric_Invoker@U?$HResizeCubic@MMM@cv@@U?$VResizeCubic@MMMU?$Cast@MM@cv@@UVResizeCubicVec_32f@2@@2@@cv@@
.?AV?$resizeGeneric_Invoker@U?$HResizeCubic@NNM@cv@@U?$VResizeCubic@NNMU?$Cast@NN@cv@@UVResizeNoVec@2@@2@@cv@@
.?AV?$resizeGeneric_Invoker@U?$HResizeLanczos4@EHF@cv@@U?$VResizeLanczos4@EHFU?$FixedPtCast@HE$0BG@@cv@@UVResizeNoVec@2@@2@@cv@@
.?AV?$resizeGeneric_Invoker@U?$HResizeLanczos4@GMM@cv@@U?$VResizeLanczos4@GMMU?$Cast@MG@cv@@UVResizeLanczos4Vec_32f16u@2@@2@@cv@@
.?AV?$resizeGeneric_Invoker@U?$HResizeLanczos4@FMM@cv@@U?$VResizeLanczos4@FMMU?$Cast@MF@cv@@UVResizeLanczos4Vec_32f16s@2@@2@@cv@@
.?AV?$resizeGeneric_Invoker@U?$HResizeLanczos4@MMM@cv@@U?$VResizeLanczos4@MMMU?$Cast@MM@cv@@UVResizeLanczos4Vec_32f@2@@2@@cv@@
.?AV?$resizeGeneric_Invoker@U?$HResizeLanczos4@NNM@cv@@U?$VResizeLanczos4@NNMU?$Cast@NN@cv@@UVResizeNoVec@2@@2@@cv@@
.?AV?$resizeAreaFast_Invoker@EHU?$ResizeAreaFastVec@EVResizeAreaFastVec_SIMD_8u@cv@@@cv@@@cv@@
.?AV?$resizeAreaFast_Invoker@GMU?$ResizeAreaFastVec@GVResizeAreaFastVec_SIMD_16u@cv@@@cv@@@cv@@
.?AV?$resizeAreaFast_Invoker@FMU?$ResizeAreaFastVec@FVResizeAreaFastVec_SIMD_16s@cv@@@cv@@@cv@@
.?AV?$resizeAreaFast_Invoker@MMUResizeAreaFastVec_SIMD_32f@cv@@@cv@@
.?AV?$resizeAreaFast_Invoker@NNU?$ResizeAreaFastNoVec@NN@cv@@@cv@@
.?AV?$ResizeArea_Invoker@EM@cv@@
.?AV?$ResizeArea_Invoker@GM@cv@@
.?AV?$ResizeArea_Invoker@FM@cv@@
.?AV?$ResizeArea_Invoker@MM@cv@@
.?AV?$ResizeArea_Invoker@NN@cv@@
.?AV?$resize_bitExactInvoker@EVufixedpoint16@?A0xb72ae151@@$01@?A0xb72ae151@@
.?AV?$resize_bitExactInvoker@CVfixedpoint32@?A0xb72ae151@@$01@?A0xb72ae151@@
.?AV?$resize_bitExactInvoker@GVufixedpoint32@?A0xb72ae151@@$01@?A0xb72ae151@@
.?AV?$resize_bitExactInvoker@FVfixedpoint32@?A0xb72ae151@@$01@?A0xb72ae151@@
.?AV?$resize_bitExactInvoker@HVfixedpoint64@?A0xb72ae151@@$01@?A0xb72ae151@@
.?AU?$MorphRowFilter@U?$MinOp@E@?A0xc11cad24@cpu_baseline@cv@@U?$MorphRowVec@U?$VMin@Uv_uint8x16@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@
.?AVBaseRowFilter@cv@@
.?AU?$MorphRowFilter@U?$MinOp@G@?A0xc11cad24@cpu_baseline@cv@@U?$MorphRowVec@U?$VMin@Uv_uint16x8@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@
.?AU?$MorphRowFilter@U?$MinOp@F@?A0xc11cad24@cpu_baseline@cv@@U?$MorphRowVec@U?$VMin@Uv_int16x8@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@
.?AU?$MorphRowFilter@U?$MinOp@M@?A0xc11cad24@cpu_baseline@cv@@U?$MorphRowVec@U?$VMin@Uv_float32x4@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@
.?AU?$MorphRowFilter@U?$MinOp@N@?A0xc11cad24@cpu_baseline@cv@@UMorphRowNoVec@234@@?A0xc11cad24@cpu_baseline@cv@@
.?AU?$MorphRowFilter@U?$MaxOp@E@?A0xc11cad24@cpu_baseline@cv@@U?$MorphRowVec@U?$VMax@Uv_uint8x16@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@
.?AU?$MorphRowFilter@U?$MaxOp@G@?A0xc11cad24@cpu_baseline@cv@@U?$MorphRowVec@U?$VMax@Uv_uint16x8@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@
.?AU?$MorphRowFilter@U?$MaxOp@F@?A0xc11cad24@cpu_baseline@cv@@U?$MorphRowVec@U?$VMax@Uv_int16x8@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@
.?AU?$MorphRowFilter@U?$MaxOp@M@?A0xc11cad24@cpu_baseline@cv@@U?$MorphRowVec@U?$VMax@Uv_float32x4@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@
.?AU?$MorphRowFilter@U?$MaxOp@N@?A0xc11cad24@cpu_baseline@cv@@UMorphRowNoVec@234@@?A0xc11cad24@cpu_baseline@cv@@
.?AU?$MorphColumnFilter@U?$MinOp@E@?A0xc11cad24@cpu_baseline@cv@@U?$MorphColumnVec@U?$VMin@Uv_uint8x16@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@
.?AVBaseColumnFilter@cv@@
.?AU?$MorphColumnFilter@U?$MinOp@G@?A0xc11cad24@cpu_baseline@cv@@U?$MorphColumnVec@U?$VMin@Uv_uint16x8@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@
.?AU?$MorphColumnFilter@U?$MinOp@F@?A0xc11cad24@cpu_baseline@cv@@U?$MorphColumnVec@U?$VMin@Uv_int16x8@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@
.?AU?$MorphColumnFilter@U?$MinOp@M@?A0xc11cad24@cpu_baseline@cv@@U?$MorphColumnVec@U?$VMin@Uv_float32x4@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@
.?AU?$MorphColumnFilter@U?$MinOp@N@?A0xc11cad24@cpu_baseline@cv@@UMorphColumnNoVec@234@@?A0xc11cad24@cpu_baseline@cv@@
.?AU?$MorphColumnFilter@U?$MaxOp@E@?A0xc11cad24@cpu_baseline@cv@@U?$MorphColumnVec@U?$VMax@Uv_uint8x16@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@
.?AU?$MorphColumnFilter@U?$MaxOp@G@?A0xc11cad24@cpu_baseline@cv@@U?$MorphColumnVec@U?$VMax@Uv_uint16x8@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@
.?AU?$MorphColumnFilter@U?$MaxOp@F@?A0xc11cad24@cpu_baseline@cv@@U?$MorphColumnVec@U?$VMax@Uv_int16x8@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@
.?AU?$MorphColumnFilter@U?$MaxOp@M@?A0xc11cad24@cpu_baseline@cv@@U?$MorphColumnVec@U?$VMax@Uv_float32x4@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@
.?AU?$MorphColumnFilter@U?$MaxOp@N@?A0xc11cad24@cpu_baseline@cv@@UMorphColumnNoVec@234@@?A0xc11cad24@cpu_baseline@cv@@
.?AU?$MorphFilter@U?$MinOp@E@?A0xc11cad24@cpu_baseline@cv@@U?$MorphVec@U?$VMin@Uv_uint8x16@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@
.?AVBaseFilter@cv@@
.?AU?$MorphFilter@U?$MinOp@G@?A0xc11cad24@cpu_baseline@cv@@U?$MorphVec@U?$VMin@Uv_uint16x8@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@
.?AU?$MorphFilter@U?$MinOp@F@?A0xc11cad24@cpu_baseline@cv@@U?$MorphVec@U?$VMin@Uv_int16x8@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@
.?AU?$MorphFilter@U?$MinOp@M@?A0xc11cad24@cpu_baseline@cv@@U?$MorphVec@U?$VMin@Uv_float32x4@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@
.?AU?$MorphFilter@U?$MinOp@N@?A0xc11cad24@cpu_baseline@cv@@UMorphNoVec@234@@?A0xc11cad24@cpu_baseline@cv@@
.?AU?$MorphFilter@U?$MaxOp@E@?A0xc11cad24@cpu_baseline@cv@@U?$MorphVec@U?$VMax@Uv_uint8x16@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@
.?AU?$MorphFilter@U?$MaxOp@G@?A0xc11cad24@cpu_baseline@cv@@U?$MorphVec@U?$VMax@Uv_uint16x8@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@
.?AU?$MorphFilter@U?$MaxOp@F@?A0xc11cad24@cpu_baseline@cv@@U?$MorphVec@U?$VMax@Uv_int16x8@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@
.?AU?$MorphFilter@U?$MaxOp@M@?A0xc11cad24@cpu_baseline@cv@@U?$MorphVec@U?$VMax@Uv_float32x4@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@
.?AU?$MorphFilter@U?$MaxOp@N@?A0xc11cad24@cpu_baseline@cv@@UMorphNoVec@234@@?A0xc11cad24@cpu_baseline@cv@@
.?AV?$_Ref_count_obj@U?$MorphRowFilter@U?$MinOp@E@?A0xc11cad24@cpu_baseline@cv@@U?$MorphRowVec@U?$VMin@Uv_uint8x16@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphRowFilter@U?$MinOp@G@?A0xc11cad24@cpu_baseline@cv@@U?$MorphRowVec@U?$VMin@Uv_uint16x8@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphRowFilter@U?$MinOp@F@?A0xc11cad24@cpu_baseline@cv@@U?$MorphRowVec@U?$VMin@Uv_int16x8@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphRowFilter@U?$MinOp@M@?A0xc11cad24@cpu_baseline@cv@@U?$MorphRowVec@U?$VMin@Uv_float32x4@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphRowFilter@U?$MinOp@N@?A0xc11cad24@cpu_baseline@cv@@UMorphRowNoVec@234@@?A0xc11cad24@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphRowFilter@U?$MaxOp@E@?A0xc11cad24@cpu_baseline@cv@@U?$MorphRowVec@U?$VMax@Uv_uint8x16@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphRowFilter@U?$MaxOp@G@?A0xc11cad24@cpu_baseline@cv@@U?$MorphRowVec@U?$VMax@Uv_uint16x8@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphRowFilter@U?$MaxOp@F@?A0xc11cad24@cpu_baseline@cv@@U?$MorphRowVec@U?$VMax@Uv_int16x8@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphRowFilter@U?$MaxOp@M@?A0xc11cad24@cpu_baseline@cv@@U?$MorphRowVec@U?$VMax@Uv_float32x4@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphRowFilter@U?$MaxOp@N@?A0xc11cad24@cpu_baseline@cv@@UMorphRowNoVec@234@@?A0xc11cad24@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphColumnFilter@U?$MinOp@E@?A0xc11cad24@cpu_baseline@cv@@U?$MorphColumnVec@U?$VMin@Uv_uint8x16@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphColumnFilter@U?$MinOp@G@?A0xc11cad24@cpu_baseline@cv@@U?$MorphColumnVec@U?$VMin@Uv_uint16x8@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphColumnFilter@U?$MinOp@F@?A0xc11cad24@cpu_baseline@cv@@U?$MorphColumnVec@U?$VMin@Uv_int16x8@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphColumnFilter@U?$MinOp@M@?A0xc11cad24@cpu_baseline@cv@@U?$MorphColumnVec@U?$VMin@Uv_float32x4@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphColumnFilter@U?$MinOp@N@?A0xc11cad24@cpu_baseline@cv@@UMorphColumnNoVec@234@@?A0xc11cad24@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphColumnFilter@U?$MaxOp@E@?A0xc11cad24@cpu_baseline@cv@@U?$MorphColumnVec@U?$VMax@Uv_uint8x16@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphColumnFilter@U?$MaxOp@G@?A0xc11cad24@cpu_baseline@cv@@U?$MorphColumnVec@U?$VMax@Uv_uint16x8@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphColumnFilter@U?$MaxOp@F@?A0xc11cad24@cpu_baseline@cv@@U?$MorphColumnVec@U?$VMax@Uv_int16x8@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphColumnFilter@U?$MaxOp@M@?A0xc11cad24@cpu_baseline@cv@@U?$MorphColumnVec@U?$VMax@Uv_float32x4@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphColumnFilter@U?$MaxOp@N@?A0xc11cad24@cpu_baseline@cv@@UMorphColumnNoVec@234@@?A0xc11cad24@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphFilter@U?$MinOp@E@?A0xc11cad24@cpu_baseline@cv@@U?$MorphVec@U?$VMin@Uv_uint8x16@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphFilter@U?$MinOp@G@?A0xc11cad24@cpu_baseline@cv@@U?$MorphVec@U?$VMin@Uv_uint16x8@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphFilter@U?$MinOp@F@?A0xc11cad24@cpu_baseline@cv@@U?$MorphVec@U?$VMin@Uv_int16x8@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphFilter@U?$MinOp@M@?A0xc11cad24@cpu_baseline@cv@@U?$MorphVec@U?$VMin@Uv_float32x4@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphFilter@U?$MinOp@N@?A0xc11cad24@cpu_baseline@cv@@UMorphNoVec@234@@?A0xc11cad24@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphFilter@U?$MaxOp@E@?A0xc11cad24@cpu_baseline@cv@@U?$MorphVec@U?$VMax@Uv_uint8x16@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphFilter@U?$MaxOp@G@?A0xc11cad24@cpu_baseline@cv@@U?$MorphVec@U?$VMax@Uv_uint16x8@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphFilter@U?$MaxOp@F@?A0xc11cad24@cpu_baseline@cv@@U?$MorphVec@U?$VMax@Uv_int16x8@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphFilter@U?$MaxOp@M@?A0xc11cad24@cpu_baseline@cv@@U?$MorphVec@U?$VMax@Uv_float32x4@hal_baseline@cv@@@?A0xc11cad24@cpu_baseline@cv@@@234@@?A0xc11cad24@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphFilter@U?$MaxOp@N@?A0xc11cad24@cpu_baseline@cv@@UMorphNoVec@234@@?A0xc11cad24@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@VFilterEngine@cv@@@std@@
.?AVFirstScan8Connectivity@?$LabelingWuParallel@HEUCCStatsOp@connectedcomponents@cv@@@connectedcomponents@cv@@
.?AVFirstScan4Connectivity@?$LabelingWuParallel@HEUCCStatsOp@connectedcomponents@cv@@@connectedcomponents@cv@@
.?AVSecondScan@?$LabelingWuParallel@HEUCCStatsOp@connectedcomponents@cv@@@connectedcomponents@cv@@
.?AVFirstScan@?$LabelingGranaParallel@HEUCCStatsOp@connectedcomponents@cv@@@connectedcomponents@cv@@
.?AVSecondScan@?$LabelingGranaParallel@HEUCCStatsOp@connectedcomponents@cv@@@connectedcomponents@cv@@
.?AVFastBilateralSolverFilter@ximgproc@cv@@
.?AVFastBilateralSolverFilterImpl@ximgproc@cv@@
.?AV?$_Ref_count@VFastBilateralSolverFilterImpl@ximgproc@cv@@@std@@
.?AVFileStorage@cv@@
.?AVImpl@FileStorage@cv@@
.?AVFileStorage_API@cv@@
.?AV?$_Ref_count_obj@V?$vector@EV?$allocator@E@std@@@std@@@std@@
.?AV?$_Ref_count_obj@VImpl@FileStorage@cv@@@std@@
.?AV?$TLSData@UUMatDataAutoLocker@cv@@@cv@@
.?AVTraceStorage@details@trace@utils@cv@@
.?AV?$TLSData@UTraceManagerThreadLocal@details@trace@utils@cv@@@cv@@
.?AVAsyncTraceStorage@details@trace@utils@cv@@
.?AVSyncTraceStorage@details@trace@utils@cv@@
.?AV?$_Ref_count@VAsyncTraceStorage@details@trace@utils@cv@@@std@@
.?AV?$_Ref_count@VSyncTraceStorage@details@trace@utils@cv@@@std@@
.?AV?$_Ref_count@VImpl@Buffer@ogl@cv@@@std@@
.?AV?$_Ref_count@VImpl@Texture2D@ogl@cv@@@std@@
.?AV?$Bayer2RGB_Invoker@EVSIMDBayerInterpolator_8u@cv@@@cv@@
.?AV?$Bayer2Gray_Invoker@EVSIMDBayerInterpolator_8u@cv@@@cv@@
.?AV?$Bayer2Gray_Invoker@GV?$SIMDBayerStubInterpolator_@G@cv@@@cv@@
.?AV?$Bayer2RGB_Invoker@GV?$SIMDBayerStubInterpolator_@G@cv@@@cv@@
.?AV?$Bayer2RGB_EdgeAware_T_Invoker@EVSIMDBayerInterpolator_8u@cv@@@cv@@
.?AV?$Bayer2RGB_EdgeAware_T_Invoker@GV?$SIMDBayerStubInterpolator_@G@cv@@@cv@@
.?AV?$CvtColorLoop_Invoker@U?$RGB2XYZ_i@E@cv@@@?A0x69f409c9@impl@cv@@
.?AV?$CvtColorLoop_Invoker@U?$RGB2XYZ_i@G@cv@@@?A0x69f409c9@impl@cv@@
.?AV?$CvtColorLoop_Invoker@U?$RGB2XYZ_f@M@cv@@@?A0x69f409c9@impl@cv@@
.?AV?$CvtColorLoop_Invoker@U?$XYZ2RGB_i@E@cv@@@?A0x69f409c9@impl@cv@@
.?AV?$CvtColorLoop_Invoker@U?$XYZ2RGB_i@G@cv@@@?A0x69f409c9@impl@cv@@
.?AV?$CvtColorLoop_Invoker@U?$XYZ2RGB_f@M@cv@@@?A0x69f409c9@impl@cv@@
.?AV?$CvtColorLoop_Invoker@URGB2Lab_b@cv@@@?A0x69f409c9@impl@cv@@
.?AV?$CvtColorLoop_Invoker@URGB2Lab_f@cv@@@?A0x69f409c9@impl@cv@@
.?AV?$CvtColorLoop_Invoker@URGB2Luv_b@cv@@@?A0x69f409c9@impl@cv@@
.?AV?$CvtColorLoop_Invoker@URGB2Luv_f@cv@@@?A0x69f409c9@impl@cv@@
.?AV?$CvtColorLoop_Invoker@ULab2RGB_b@cv@@@?A0x69f409c9@impl@cv@@
.?AV?$CvtColorLoop_Invoker@ULab2RGB_f@cv@@@?A0x69f409c9@impl@cv@@
.?AV?$CvtColorLoop_Invoker@ULuv2RGB_b@cv@@@?A0x69f409c9@impl@cv@@
.?AV?$CvtColorLoop_Invoker@ULuv2RGB_f@cv@@@?A0x69f409c9@impl@cv@@
.?AURGB8toYUV420pInvoker@?A0x392828e4@cpu_baseline@hal@cv@@
.?AV?$CvtColorLoop_Invoker@U?$RGB2YCrCb_i@E@?A0x392828e4@cpu_baseline@hal@cv@@@?A0x392828e4@impl@cv@@
.?AV?$CvtColorLoop_Invoker@U?$RGB2YCrCb_i@G@?A0x392828e4@cpu_baseline@hal@cv@@@?A0x392828e4@impl@cv@@
.?AV?$CvtColorLoop_Invoker@U?$RGB2YCrCb_f@M@?A0x392828e4@cpu_baseline@hal@cv@@@?A0x392828e4@impl@cv@@
.?AV?$CvtColorLoop_Invoker@U?$YCrCb2RGB_i@E@?A0x392828e4@cpu_baseline@hal@cv@@@?A0x392828e4@impl@cv@@
.?AV?$CvtColorLoop_Invoker@U?$YCrCb2RGB_i@G@?A0x392828e4@cpu_baseline@hal@cv@@@?A0x392828e4@impl@cv@@
.?AV?$CvtColorLoop_Invoker@U?$YCrCb2RGB_f@M@?A0x392828e4@cpu_baseline@hal@cv@@@?A0x392828e4@impl@cv@@
.?AU?$YUV420sp2RGB8Invoker@$0A@$0A@$02@?A0x392828e4@cpu_baseline@hal@cv@@
.?AU?$YUV420sp2RGB8Invoker@$0A@$00$02@?A0x392828e4@cpu_baseline@hal@cv@@
.?AU?$YUV420sp2RGB8Invoker@$01$0A@$02@?A0x392828e4@cpu_baseline@hal@cv@@
.?AU?$YUV420sp2RGB8Invoker@$01$00$02@?A0x392828e4@cpu_baseline@hal@cv@@
.?AU?$YUV420sp2RGB8Invoker@$0A@$0A@$03@?A0x392828e4@cpu_baseline@hal@cv@@
.?AU?$YUV420sp2RGB8Invoker@$0A@$00$03@?A0x392828e4@cpu_baseline@hal@cv@@
.?AU?$YUV420sp2RGB8Invoker@$01$0A@$03@?A0x392828e4@cpu_baseline@hal@cv@@
.?AU?$YUV420sp2RGB8Invoker@$01$00$03@?A0x392828e4@cpu_baseline@hal@cv@@
.?AU?$YUV420p2RGB8Invoker@$0A@$02@?A0x392828e4@cpu_baseline@hal@cv@@
.?AU?$YUV420p2RGB8Invoker@$01$02@?A0x392828e4@cpu_baseline@hal@cv@@
.?AU?$YUV420p2RGB8Invoker@$0A@$03@?A0x392828e4@cpu_baseline@hal@cv@@
.?AU?$YUV420p2RGB8Invoker@$01$03@?A0x392828e4@cpu_baseline@hal@cv@@
.?AU?$YUV422toRGB8Invoker@$0A@$0A@$0A@$02@?A0x392828e4@cpu_baseline@hal@cv@@
.?AU?$YUV422toRGB8Invoker@$0A@$0A@$00$02@?A0x392828e4@cpu_baseline@hal@cv@@
.?AU?$YUV422toRGB8Invoker@$0A@$00$0A@$02@?A0x392828e4@cpu_baseline@hal@cv@@
.?AU?$YUV422toRGB8Invoker@$01$0A@$0A@$02@?A0x392828e4@cpu_baseline@hal@cv@@
.?AU?$YUV422toRGB8Invoker@$01$0A@$00$02@?A0x392828e4@cpu_baseline@hal@cv@@
.?AU?$YUV422toRGB8Invoker@$01$00$0A@$02@?A0x392828e4@cpu_baseline@hal@cv@@
.?AU?$YUV422toRGB8Invoker@$0A@$0A@$0A@$03@?A0x392828e4@cpu_baseline@hal@cv@@
.?AU?$YUV422toRGB8Invoker@$0A@$0A@$00$03@?A0x392828e4@cpu_baseline@hal@cv@@
.?AU?$YUV422toRGB8Invoker@$0A@$00$0A@$03@?A0x392828e4@cpu_baseline@hal@cv@@
.?AU?$YUV422toRGB8Invoker@$01$0A@$0A@$03@?A0x392828e4@cpu_baseline@hal@cv@@
.?AU?$YUV422toRGB8Invoker@$01$0A@$00$03@?A0x392828e4@cpu_baseline@hal@cv@@
.?AU?$YUV422toRGB8Invoker@$01$00$0A@$03@?A0x392828e4@cpu_baseline@hal@cv@@
.?AV?$CvtColorLoop_Invoker@URGB2HSV_b@?A0xfa4e133e@cpu_baseline@hal@cv@@@?A0xfa4e133e@impl@cv@@
.?AV?$CvtColorLoop_Invoker@URGB2HSV_f@?A0xfa4e133e@cpu_baseline@hal@cv@@@?A0xfa4e133e@impl@cv@@
.?AV?$CvtColorLoop_Invoker@URGB2HLS_b@?A0xfa4e133e@cpu_baseline@hal@cv@@@?A0xfa4e133e@impl@cv@@
.?AV?$CvtColorLoop_Invoker@URGB2HLS_f@?A0xfa4e133e@cpu_baseline@hal@cv@@@?A0xfa4e133e@impl@cv@@
.?AV?$CvtColorLoop_Invoker@UHSV2RGB_b@?A0xfa4e133e@cpu_baseline@hal@cv@@@?A0xfa4e133e@impl@cv@@
.?AV?$CvtColorLoop_Invoker@UHSV2RGB_f@?A0xfa4e133e@cpu_baseline@hal@cv@@@?A0xfa4e133e@impl@cv@@
.?AV?$CvtColorLoop_Invoker@UHLS2RGB_b@?A0xfa4e133e@cpu_baseline@hal@cv@@@?A0xfa4e133e@impl@cv@@
.?AV?$CvtColorLoop_Invoker@UHLS2RGB_f@?A0xfa4e133e@cpu_baseline@hal@cv@@@?A0xfa4e133e@impl@cv@@
.?AV?$CvtColorLoop_Invoker@U?$RGB2RGB@E@?A0x233bdd2f@cpu_baseline@hal@cv@@@?A0x233bdd2f@impl@cv@@
.?AV?$CvtColorLoop_Invoker@U?$RGB2RGB@G@?A0x233bdd2f@cpu_baseline@hal@cv@@@?A0x233bdd2f@impl@cv@@
.?AV?$CvtColorLoop_Invoker@U?$RGB2RGB@M@?A0x233bdd2f@cpu_baseline@hal@cv@@@?A0x233bdd2f@impl@cv@@
.?AV?$CvtColorLoop_Invoker@URGB2RGB5x5@?A0x233bdd2f@cpu_baseline@hal@cv@@@?A0x233bdd2f@impl@cv@@
.?AV?$CvtColorLoop_Invoker@URGB5x52RGB@?A0x233bdd2f@cpu_baseline@hal@cv@@@?A0x233bdd2f@impl@cv@@
.?AV?$CvtColorLoop_Invoker@U?$RGB2Gray@E@?A0x233bdd2f@cpu_baseline@hal@cv@@@?A0x233bdd2f@impl@cv@@
.?AV?$CvtColorLoop_Invoker@U?$RGB2Gray@G@?A0x233bdd2f@cpu_baseline@hal@cv@@@?A0x233bdd2f@impl@cv@@
.?AV?$CvtColorLoop_Invoker@U?$RGB2Gray@M@?A0x233bdd2f@cpu_baseline@hal@cv@@@?A0x233bdd2f@impl@cv@@
.?AV?$CvtColorLoop_Invoker@U?$Gray2RGB@E@?A0x233bdd2f@cpu_baseline@hal@cv@@@?A0x233bdd2f@impl@cv@@
.?AV?$CvtColorLoop_Invoker@U?$Gray2RGB@G@?A0x233bdd2f@cpu_baseline@hal@cv@@@?A0x233bdd2f@impl@cv@@
.?AV?$CvtColorLoop_Invoker@U?$Gray2RGB@M@?A0x233bdd2f@cpu_baseline@hal@cv@@@?A0x233bdd2f@impl@cv@@
.?AV?$CvtColorLoop_Invoker@URGB5x52Gray@?A0x233bdd2f@cpu_baseline@hal@cv@@@?A0x233bdd2f@impl@cv@@
.?AV?$CvtColorLoop_Invoker@UGray2RGB5x5@?A0x233bdd2f@cpu_baseline@hal@cv@@@?A0x233bdd2f@impl@cv@@
.?AV?$CvtColorLoop_Invoker@U?$RGBA2mRGBA@E@?A0x233bdd2f@cpu_baseline@hal@cv@@@?A0x233bdd2f@impl@cv@@
.?AV?$CvtColorLoop_Invoker@U?$mRGBA2RGBA@E@?A0x233bdd2f@cpu_baseline@hal@cv@@@?A0x233bdd2f@impl@cv@@
.?AV_UnrealizedChore@details@Concurrency@@
.?AU_Chore@details@Concurrency@@
.?AU_AllocBase@details@Concurrency@@
.?AVParallelLoopBodyWrapper@?A0x08673d9c@@
.?AVProxyLoopBody@?A0x08673d9c@@
.?AV?$task_handle@V?$_Parallel_chunk_helper@HKVProxyLoopBody@?A0x08673d9c@@Vauto_partitioner@Concurrency@@$0A@@Concurrency@@@Concurrency@@
.?AV?$_MallocaArrayHolder@V?$task_handle@V?$_Parallel_chunk_helper@HKVProxyLoopBody@?A0x08673d9c@@Vauto_partitioner@Concurrency@@$0A@@Concurrency@@@Concurrency@@@details@Concurrency@@
.?AV?$_MallocaListHolder@V?$task_handle@V?$_Parallel_chunk_helper@HKVProxyLoopBody@?A0x08673d9c@@Vauto_partitioner@Concurrency@@$0A@@Concurrency@@@Concurrency@@@details@Concurrency@@
.?AU?$ColumnSum@HE@?A0xa590e9ca@cpu_baseline@cv@@
.?AU?$ColumnSum@GE@?A0xa590e9ca@cpu_baseline@cv@@
.?AU?$ColumnSum@HF@?A0xa590e9ca@cpu_baseline@cv@@
.?AU?$ColumnSum@HG@?A0xa590e9ca@cpu_baseline@cv@@
.?AU?$ColumnSum@HH@?A0xa590e9ca@cpu_baseline@cv@@
.?AU?$ColumnSum@HM@?A0xa590e9ca@cpu_baseline@cv@@
.?AU?$RowSum@EH@?A0xa590e9ca@cpu_baseline@cv@@
.?AU?$RowSum@EG@?A0xa590e9ca@cpu_baseline@cv@@
.?AU?$RowSum@EN@?A0xa590e9ca@cpu_baseline@cv@@
.?AU?$RowSum@GH@?A0xa590e9ca@cpu_baseline@cv@@
.?AU?$RowSum@GN@?A0xa590e9ca@cpu_baseline@cv@@
.?AU?$RowSum@FH@?A0xa590e9ca@cpu_baseline@cv@@
.?AU?$RowSum@HH@?A0xa590e9ca@cpu_baseline@cv@@
.?AU?$RowSum@FN@?A0xa590e9ca@cpu_baseline@cv@@
.?AU?$RowSum@MN@?A0xa590e9ca@cpu_baseline@cv@@
.?AU?$RowSum@NN@?A0xa590e9ca@cpu_baseline@cv@@
.?AU?$ColumnSum@NE@?A0xa590e9ca@cpu_baseline@cv@@
.?AU?$ColumnSum@NG@?A0xa590e9ca@cpu_baseline@cv@@
.?AU?$ColumnSum@NF@?A0xa590e9ca@cpu_baseline@cv@@
.?AU?$ColumnSum@NM@?A0xa590e9ca@cpu_baseline@cv@@
.?AU?$ColumnSum@HN@?A0xa590e9ca@cpu_baseline@cv@@
.?AU?$ColumnSum@NN@?A0xa590e9ca@cpu_baseline@cv@@
.?AU?$SqrRowSum@EH@?A0xa590e9ca@cpu_baseline@cv@@
.?AU?$SqrRowSum@EN@?A0xa590e9ca@cpu_baseline@cv@@
.?AU?$SqrRowSum@GN@?A0xa590e9ca@cpu_baseline@cv@@
.?AU?$SqrRowSum@FN@?A0xa590e9ca@cpu_baseline@cv@@
.?AU?$SqrRowSum@MN@?A0xa590e9ca@cpu_baseline@cv@@
.?AU?$SqrRowSum@NN@?A0xa590e9ca@cpu_baseline@cv@@
.?AV?$_Ref_count_obj@U?$RowSum@EH@?A0xa590e9ca@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowSum@EG@?A0xa590e9ca@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowSum@EN@?A0xa590e9ca@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowSum@GH@?A0xa590e9ca@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowSum@GN@?A0xa590e9ca@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowSum@FH@?A0xa590e9ca@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowSum@HH@?A0xa590e9ca@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowSum@FN@?A0xa590e9ca@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowSum@MN@?A0xa590e9ca@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowSum@NN@?A0xa590e9ca@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnSum@HE@?A0xa590e9ca@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnSum@GE@?A0xa590e9ca@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnSum@NE@?A0xa590e9ca@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnSum@HG@?A0xa590e9ca@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnSum@NG@?A0xa590e9ca@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnSum@HF@?A0xa590e9ca@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnSum@NF@?A0xa590e9ca@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnSum@HH@?A0xa590e9ca@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnSum@HM@?A0xa590e9ca@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnSum@NM@?A0xa590e9ca@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnSum@HN@?A0xa590e9ca@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnSum@NN@?A0xa590e9ca@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SqrRowSum@EH@?A0xa590e9ca@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SqrRowSum@EN@?A0xa590e9ca@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SqrRowSum@GN@?A0xa590e9ca@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SqrRowSum@FN@?A0xa590e9ca@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SqrRowSum@MN@?A0xa590e9ca@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SqrRowSum@NN@?A0xa590e9ca@cpu_baseline@cv@@@std@@
.?AVFilterEngine@cv@@
.?AU?$SymmRowSmallFilter@EHUSymmRowSmallVec_8u32s@cpu_baseline@cv@@@cpu_baseline@cv@@
.?AU?$RowFilter@EHUSymmRowSmallVec_8u32s@cpu_baseline@cv@@@cpu_baseline@cv@@
.?AU?$SymmRowSmallFilter@MMUSymmRowSmallVec_32f@cpu_baseline@cv@@@cpu_baseline@cv@@
.?AU?$RowFilter@MMUSymmRowSmallVec_32f@cpu_baseline@cv@@@cpu_baseline@cv@@
.?AU?$RowFilter@EHURowVec_8u32s@cpu_baseline@cv@@@cpu_baseline@cv@@
.?AU?$RowFilter@EMURowNoVec@cpu_baseline@cv@@@cpu_baseline@cv@@
.?AU?$RowFilter@ENURowNoVec@cpu_baseline@cv@@@cpu_baseline@cv@@
.?AU?$RowFilter@GMURowNoVec@cpu_baseline@cv@@@cpu_baseline@cv@@
.?AU?$RowFilter@GNURowNoVec@cpu_baseline@cv@@@cpu_baseline@cv@@
.?AU?$RowFilter@FMURowVec_16s32f@cpu_baseline@cv@@@cpu_baseline@cv@@
.?AU?$RowFilter@FNURowNoVec@cpu_baseline@cv@@@cpu_baseline@cv@@
.?AU?$RowFilter@MMURowVec_32f@cpu_baseline@cv@@@cpu_baseline@cv@@
.?AU?$RowFilter@MNURowNoVec@cpu_baseline@cv@@@cpu_baseline@cv@@
.?AU?$RowFilter@NNURowNoVec@cpu_baseline@cv@@@cpu_baseline@cv@@
.?AU?$ColumnFilter@U?$FixedPtCastEx@HE@cpu_baseline@cv@@UColumnNoVec@23@@cpu_baseline@cv@@
.?AU?$ColumnFilter@U?$Cast@ME@cpu_baseline@cv@@UColumnNoVec@23@@cpu_baseline@cv@@
.?AU?$ColumnFilter@U?$Cast@NE@cpu_baseline@cv@@UColumnNoVec@23@@cpu_baseline@cv@@
.?AU?$ColumnFilter@U?$Cast@MG@cpu_baseline@cv@@UColumnNoVec@23@@cpu_baseline@cv@@
.?AU?$ColumnFilter@U?$Cast@NG@cpu_baseline@cv@@UColumnNoVec@23@@cpu_baseline@cv@@
.?AU?$ColumnFilter@U?$Cast@MF@cpu_baseline@cv@@UColumnNoVec@23@@cpu_baseline@cv@@
.?AU?$ColumnFilter@U?$Cast@NF@cpu_baseline@cv@@UColumnNoVec@23@@cpu_baseline@cv@@
.?AU?$ColumnFilter@U?$Cast@MM@cpu_baseline@cv@@UColumnNoVec@23@@cpu_baseline@cv@@
.?AU?$ColumnFilter@U?$Cast@NN@cpu_baseline@cv@@UColumnNoVec@23@@cpu_baseline@cv@@
.?AU?$SymmColumnSmallFilter@U?$FixedPtCastEx@HE@cpu_baseline@cv@@USymmColumnVec_32s8u@23@@cpu_baseline@cv@@
.?AU?$SymmColumnFilter@U?$FixedPtCastEx@HE@cpu_baseline@cv@@USymmColumnVec_32s8u@23@@cpu_baseline@cv@@
.?AU?$ColumnFilter@U?$FixedPtCastEx@HE@cpu_baseline@cv@@USymmColumnVec_32s8u@23@@cpu_baseline@cv@@
.?AU?$SymmColumnSmallFilter@U?$Cast@HF@cpu_baseline@cv@@USymmColumnSmallVec_32s16s@23@@cpu_baseline@cv@@
.?AU?$SymmColumnFilter@U?$Cast@HF@cpu_baseline@cv@@USymmColumnSmallVec_32s16s@23@@cpu_baseline@cv@@
.?AU?$ColumnFilter@U?$Cast@HF@cpu_baseline@cv@@USymmColumnSmallVec_32s16s@23@@cpu_baseline@cv@@
.?AU?$SymmColumnSmallFilter@U?$Cast@MM@cpu_baseline@cv@@USymmColumnSmallVec_32f@23@@cpu_baseline@cv@@
.?AU?$SymmColumnFilter@U?$Cast@MM@cpu_baseline@cv@@USymmColumnSmallVec_32f@23@@cpu_baseline@cv@@
.?AU?$ColumnFilter@U?$Cast@MM@cpu_baseline@cv@@USymmColumnSmallVec_32f@23@@cpu_baseline@cv@@
.?AU?$SymmColumnFilter@U?$Cast@ME@cpu_baseline@cv@@UColumnNoVec@23@@cpu_baseline@cv@@
.?AU?$SymmColumnFilter@U?$Cast@NE@cpu_baseline@cv@@UColumnNoVec@23@@cpu_baseline@cv@@
.?AU?$SymmColumnFilter@U?$Cast@MG@cpu_baseline@cv@@UColumnNoVec@23@@cpu_baseline@cv@@
.?AU?$SymmColumnFilter@U?$Cast@NG@cpu_baseline@cv@@UColumnNoVec@23@@cpu_baseline@cv@@
.?AU?$SymmColumnFilter@U?$Cast@HF@cpu_baseline@cv@@UColumnNoVec@23@@cpu_baseline@cv@@
.?AU?$ColumnFilter@U?$Cast@HF@cpu_baseline@cv@@UColumnNoVec@23@@cpu_baseline@cv@@
.?AU?$SymmColumnFilter@U?$Cast@MF@cpu_baseline@cv@@USymmColumnVec_32f16s@23@@cpu_baseline@cv@@
.?AU?$ColumnFilter@U?$Cast@MF@cpu_baseline@cv@@USymmColumnVec_32f16s@23@@cpu_baseline@cv@@
.?AU?$SymmColumnFilter@U?$Cast@NF@cpu_baseline@cv@@UColumnNoVec@23@@cpu_baseline@cv@@
.?AU?$SymmColumnFilter@U?$Cast@MM@cpu_baseline@cv@@USymmColumnVec_32f@23@@cpu_baseline@cv@@
.?AU?$ColumnFilter@U?$Cast@MM@cpu_baseline@cv@@USymmColumnVec_32f@23@@cpu_baseline@cv@@
.?AU?$SymmColumnFilter@U?$Cast@NN@cpu_baseline@cv@@UColumnNoVec@23@@cpu_baseline@cv@@
.?AV?$_Ref_count_obj@U?$SymmRowSmallFilter@EHUSymmRowSmallVec_8u32s@cpu_baseline@cv@@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SymmRowSmallFilter@MMUSymmRowSmallVec_32f@cpu_baseline@cv@@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowFilter@EHURowVec_8u32s@cpu_baseline@cv@@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowFilter@EMURowNoVec@cpu_baseline@cv@@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowFilter@ENURowNoVec@cpu_baseline@cv@@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowFilter@GMURowNoVec@cpu_baseline@cv@@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowFilter@GNURowNoVec@cpu_baseline@cv@@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowFilter@FMURowVec_16s32f@cpu_baseline@cv@@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowFilter@FNURowNoVec@cpu_baseline@cv@@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowFilter@MMURowVec_32f@cpu_baseline@cv@@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowFilter@MNURowNoVec@cpu_baseline@cv@@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowFilter@NNURowNoVec@cpu_baseline@cv@@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnFilter@U?$FixedPtCastEx@HE@cpu_baseline@cv@@UColumnNoVec@23@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnFilter@U?$Cast@ME@cpu_baseline@cv@@UColumnNoVec@23@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnFilter@U?$Cast@NE@cpu_baseline@cv@@UColumnNoVec@23@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnFilter@U?$Cast@MG@cpu_baseline@cv@@UColumnNoVec@23@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnFilter@U?$Cast@NG@cpu_baseline@cv@@UColumnNoVec@23@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnFilter@U?$Cast@MF@cpu_baseline@cv@@UColumnNoVec@23@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnFilter@U?$Cast@NF@cpu_baseline@cv@@UColumnNoVec@23@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnFilter@U?$Cast@MM@cpu_baseline@cv@@UColumnNoVec@23@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnFilter@U?$Cast@NN@cpu_baseline@cv@@UColumnNoVec@23@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SymmColumnSmallFilter@U?$FixedPtCastEx@HE@cpu_baseline@cv@@USymmColumnVec_32s8u@23@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SymmColumnSmallFilter@U?$Cast@HF@cpu_baseline@cv@@USymmColumnSmallVec_32s16s@23@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SymmColumnSmallFilter@U?$Cast@MM@cpu_baseline@cv@@USymmColumnSmallVec_32f@23@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SymmColumnFilter@U?$FixedPtCastEx@HE@cpu_baseline@cv@@USymmColumnVec_32s8u@23@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SymmColumnFilter@U?$Cast@ME@cpu_baseline@cv@@UColumnNoVec@23@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SymmColumnFilter@U?$Cast@NE@cpu_baseline@cv@@UColumnNoVec@23@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SymmColumnFilter@U?$Cast@MG@cpu_baseline@cv@@UColumnNoVec@23@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SymmColumnFilter@U?$Cast@NG@cpu_baseline@cv@@UColumnNoVec@23@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SymmColumnFilter@U?$Cast@HF@cpu_baseline@cv@@UColumnNoVec@23@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SymmColumnFilter@U?$Cast@MF@cpu_baseline@cv@@USymmColumnVec_32f16s@23@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SymmColumnFilter@U?$Cast@NF@cpu_baseline@cv@@UColumnNoVec@23@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SymmColumnFilter@U?$Cast@MM@cpu_baseline@cv@@USymmColumnVec_32f@23@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SymmColumnFilter@U?$Cast@NN@cpu_baseline@cv@@UColumnNoVec@23@@cpu_baseline@cv@@@std@@
.?AV?$_Ref_count@VFilterEngine@cv@@@std@@
.?AV?$fixedSmoothInvoker@EVufixedpoint16@?A0x96d99e32@opt_SSE4_1@cv@@@?A0x96d99e32@opt_SSE4_1@cv@@
.?AVFastGlobalSmootherFilter@ximgproc@cv@@
.?AVFastGlobalSmootherFilterImpl@ximgproc@cv@@
.?AUHorizontalPass_ParBody@FastGlobalSmootherFilterImpl@ximgproc@cv@@
.?AUVerticalPass_ParBody@FastGlobalSmootherFilterImpl@ximgproc@cv@@
.?AUComputeLUT_ParBody@FastGlobalSmootherFilterImpl@ximgproc@cv@@
.?AU?$ComputeHorizontalWeights_ParBody@$1?get_weight_1channel@ximgproc@cv@@YAMPEAMPEAE1@Z$00@FastGlobalSmootherFilterImpl@ximgproc@cv@@
.?AU?$ComputeVerticalWeights_ParBody@$1?get_weight_1channel@ximgproc@cv@@YAMPEAMPEAE1@Z$00@FastGlobalSmootherFilterImpl@ximgproc@cv@@
.?AU?$ComputeHorizontalWeights_ParBody@$1?get_weight_3channel@ximgproc@cv@@YAMPEAMPEAE1@Z$02@FastGlobalSmootherFilterImpl@ximgproc@cv@@
.?AU?$ComputeVerticalWeights_ParBody@$1?get_weight_3channel@ximgproc@cv@@YAMPEAMPEAE1@Z$02@FastGlobalSmootherFilterImpl@ximgproc@cv@@
.?AV?$_Ref_count@VFastGlobalSmootherFilterImpl@ximgproc@cv@@@std@@
.?AVresizeNNInvokerSSE2@opt_SSE4_1@cv@@
.?AVresizeNNInvokerSSE4@opt_SSE4_1@cv@@
.?AU?$MorphRowFilter@U?$MinOp@E@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphRowVec@U?$VMin@Uv_uint8x16@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@
.?AU?$MorphRowFilter@U?$MinOp@G@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphRowVec@U?$VMin@Uv_uint16x8@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@
.?AU?$MorphRowFilter@U?$MinOp@F@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphRowVec@U?$VMin@Uv_int16x8@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@
.?AU?$MorphRowFilter@U?$MinOp@M@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphRowVec@U?$VMin@Uv_float32x4@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@
.?AU?$MorphRowFilter@U?$MinOp@N@?A0xf3d25239@opt_SSE4_1@cv@@UMorphRowNoVec@234@@?A0xf3d25239@opt_SSE4_1@cv@@
.?AU?$MorphRowFilter@U?$MaxOp@E@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphRowVec@U?$VMax@Uv_uint8x16@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@
.?AU?$MorphRowFilter@U?$MaxOp@G@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphRowVec@U?$VMax@Uv_uint16x8@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@
.?AU?$MorphRowFilter@U?$MaxOp@F@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphRowVec@U?$VMax@Uv_int16x8@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@
.?AU?$MorphRowFilter@U?$MaxOp@M@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphRowVec@U?$VMax@Uv_float32x4@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@
.?AU?$MorphRowFilter@U?$MaxOp@N@?A0xf3d25239@opt_SSE4_1@cv@@UMorphRowNoVec@234@@?A0xf3d25239@opt_SSE4_1@cv@@
.?AU?$MorphColumnFilter@U?$MinOp@E@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphColumnVec@U?$VMin@Uv_uint8x16@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@
.?AU?$MorphColumnFilter@U?$MinOp@G@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphColumnVec@U?$VMin@Uv_uint16x8@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@
.?AU?$MorphColumnFilter@U?$MinOp@F@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphColumnVec@U?$VMin@Uv_int16x8@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@
.?AU?$MorphColumnFilter@U?$MinOp@M@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphColumnVec@U?$VMin@Uv_float32x4@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@
.?AU?$MorphColumnFilter@U?$MinOp@N@?A0xf3d25239@opt_SSE4_1@cv@@UMorphColumnNoVec@234@@?A0xf3d25239@opt_SSE4_1@cv@@
.?AU?$MorphColumnFilter@U?$MaxOp@E@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphColumnVec@U?$VMax@Uv_uint8x16@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@
.?AU?$MorphColumnFilter@U?$MaxOp@G@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphColumnVec@U?$VMax@Uv_uint16x8@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@
.?AU?$MorphColumnFilter@U?$MaxOp@F@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphColumnVec@U?$VMax@Uv_int16x8@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@
.?AU?$MorphColumnFilter@U?$MaxOp@M@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphColumnVec@U?$VMax@Uv_float32x4@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@
.?AU?$MorphColumnFilter@U?$MaxOp@N@?A0xf3d25239@opt_SSE4_1@cv@@UMorphColumnNoVec@234@@?A0xf3d25239@opt_SSE4_1@cv@@
.?AU?$MorphFilter@U?$MinOp@E@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphVec@U?$VMin@Uv_uint8x16@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@
.?AU?$MorphFilter@U?$MinOp@G@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphVec@U?$VMin@Uv_uint16x8@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@
.?AU?$MorphFilter@U?$MinOp@F@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphVec@U?$VMin@Uv_int16x8@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@
.?AU?$MorphFilter@U?$MinOp@M@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphVec@U?$VMin@Uv_float32x4@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@
.?AU?$MorphFilter@U?$MinOp@N@?A0xf3d25239@opt_SSE4_1@cv@@UMorphNoVec@234@@?A0xf3d25239@opt_SSE4_1@cv@@
.?AU?$MorphFilter@U?$MaxOp@E@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphVec@U?$VMax@Uv_uint8x16@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@
.?AU?$MorphFilter@U?$MaxOp@G@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphVec@U?$VMax@Uv_uint16x8@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@
.?AU?$MorphFilter@U?$MaxOp@F@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphVec@U?$VMax@Uv_int16x8@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@
.?AU?$MorphFilter@U?$MaxOp@M@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphVec@U?$VMax@Uv_float32x4@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@
.?AU?$MorphFilter@U?$MaxOp@N@?A0xf3d25239@opt_SSE4_1@cv@@UMorphNoVec@234@@?A0xf3d25239@opt_SSE4_1@cv@@
.?AV?$_Ref_count_obj@U?$MorphRowFilter@U?$MinOp@E@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphRowVec@U?$VMin@Uv_uint8x16@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphRowFilter@U?$MinOp@G@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphRowVec@U?$VMin@Uv_uint16x8@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphRowFilter@U?$MinOp@F@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphRowVec@U?$VMin@Uv_int16x8@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphRowFilter@U?$MinOp@M@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphRowVec@U?$VMin@Uv_float32x4@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphRowFilter@U?$MinOp@N@?A0xf3d25239@opt_SSE4_1@cv@@UMorphRowNoVec@234@@?A0xf3d25239@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphRowFilter@U?$MaxOp@E@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphRowVec@U?$VMax@Uv_uint8x16@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphRowFilter@U?$MaxOp@G@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphRowVec@U?$VMax@Uv_uint16x8@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphRowFilter@U?$MaxOp@F@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphRowVec@U?$VMax@Uv_int16x8@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphRowFilter@U?$MaxOp@M@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphRowVec@U?$VMax@Uv_float32x4@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphRowFilter@U?$MaxOp@N@?A0xf3d25239@opt_SSE4_1@cv@@UMorphRowNoVec@234@@?A0xf3d25239@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphColumnFilter@U?$MinOp@E@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphColumnVec@U?$VMin@Uv_uint8x16@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphColumnFilter@U?$MinOp@G@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphColumnVec@U?$VMin@Uv_uint16x8@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphColumnFilter@U?$MinOp@F@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphColumnVec@U?$VMin@Uv_int16x8@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphColumnFilter@U?$MinOp@M@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphColumnVec@U?$VMin@Uv_float32x4@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphColumnFilter@U?$MinOp@N@?A0xf3d25239@opt_SSE4_1@cv@@UMorphColumnNoVec@234@@?A0xf3d25239@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphColumnFilter@U?$MaxOp@E@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphColumnVec@U?$VMax@Uv_uint8x16@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphColumnFilter@U?$MaxOp@G@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphColumnVec@U?$VMax@Uv_uint16x8@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphColumnFilter@U?$MaxOp@F@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphColumnVec@U?$VMax@Uv_int16x8@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphColumnFilter@U?$MaxOp@M@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphColumnVec@U?$VMax@Uv_float32x4@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphColumnFilter@U?$MaxOp@N@?A0xf3d25239@opt_SSE4_1@cv@@UMorphColumnNoVec@234@@?A0xf3d25239@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphFilter@U?$MinOp@E@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphVec@U?$VMin@Uv_uint8x16@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphFilter@U?$MinOp@G@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphVec@U?$VMin@Uv_uint16x8@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphFilter@U?$MinOp@F@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphVec@U?$VMin@Uv_int16x8@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphFilter@U?$MinOp@M@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphVec@U?$VMin@Uv_float32x4@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphFilter@U?$MinOp@N@?A0xf3d25239@opt_SSE4_1@cv@@UMorphNoVec@234@@?A0xf3d25239@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphFilter@U?$MaxOp@E@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphVec@U?$VMax@Uv_uint8x16@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphFilter@U?$MaxOp@G@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphVec@U?$VMax@Uv_uint16x8@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphFilter@U?$MaxOp@F@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphVec@U?$VMax@Uv_int16x8@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphFilter@U?$MaxOp@M@?A0xf3d25239@opt_SSE4_1@cv@@U?$MorphVec@U?$VMax@Uv_float32x4@hal_SSE4_1@cv@@@?A0xf3d25239@opt_SSE4_1@cv@@@234@@?A0xf3d25239@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$MorphFilter@U?$MaxOp@N@?A0xf3d25239@opt_SSE4_1@cv@@UMorphNoVec@234@@?A0xf3d25239@opt_SSE4_1@cv@@@std@@
.?AVFileStorageParser@cv@@
.?AVFileStorageEmitter@cv@@
.?AVXMLEmitter@cv@@
.?AVXMLParser@cv@@
.?AV?$_Ref_count_obj@VXMLEmitter@cv@@@std@@
.?AV?$_Ref_count_obj@VXMLParser@cv@@@std@@
.?AVYAMLEmitter@cv@@
.?AVYAMLParser@cv@@
.?AV?$_Ref_count_obj@VYAMLEmitter@cv@@@std@@
.?AV?$_Ref_count_obj@VYAMLParser@cv@@@std@@
.?AVJSONEmitter@cv@@
.?AVJSONParser@cv@@
.?AV?$_Ref_count_obj@VJSONEmitter@cv@@@std@@
.?AV?$_Ref_count_obj@VJSONParser@cv@@@std@@
.?AV?$_Ref_count_obj@VBmpDecoder@cv@@@std@@
.?AV?$_Ref_count_obj@VBmpEncoder@cv@@@std@@
.?AURGB8toYUV420pInvoker@?A0x1961e80d@opt_SSE4_1@hal@cv@@
.?AV?$CvtColorLoop_Invoker@U?$RGB2YCrCb_i@E@?A0x1961e80d@opt_SSE4_1@hal@cv@@@?A0x1961e80d@opt_SSE4_1@hal@cv@@
.?AV?$CvtColorLoop_Invoker@U?$RGB2YCrCb_i@G@?A0x1961e80d@opt_SSE4_1@hal@cv@@@?A0x1961e80d@opt_SSE4_1@hal@cv@@
.?AV?$CvtColorLoop_Invoker@U?$RGB2YCrCb_f@M@?A0x1961e80d@opt_SSE4_1@hal@cv@@@?A0x1961e80d@opt_SSE4_1@hal@cv@@
.?AV?$CvtColorLoop_Invoker@U?$YCrCb2RGB_i@E@?A0x1961e80d@opt_SSE4_1@hal@cv@@@?A0x1961e80d@opt_SSE4_1@hal@cv@@
.?AV?$CvtColorLoop_Invoker@U?$YCrCb2RGB_i@G@?A0x1961e80d@opt_SSE4_1@hal@cv@@@?A0x1961e80d@opt_SSE4_1@hal@cv@@
.?AV?$CvtColorLoop_Invoker@U?$YCrCb2RGB_f@M@?A0x1961e80d@opt_SSE4_1@hal@cv@@@?A0x1961e80d@opt_SSE4_1@hal@cv@@
.?AU?$YUV420sp2RGB8Invoker@$0A@$0A@$02@?A0x1961e80d@opt_SSE4_1@hal@cv@@
.?AU?$YUV420sp2RGB8Invoker@$0A@$00$02@?A0x1961e80d@opt_SSE4_1@hal@cv@@
.?AU?$YUV420sp2RGB8Invoker@$01$0A@$02@?A0x1961e80d@opt_SSE4_1@hal@cv@@
.?AU?$YUV420sp2RGB8Invoker@$01$00$02@?A0x1961e80d@opt_SSE4_1@hal@cv@@
.?AU?$YUV420sp2RGB8Invoker@$0A@$0A@$03@?A0x1961e80d@opt_SSE4_1@hal@cv@@
.?AU?$YUV420sp2RGB8Invoker@$0A@$00$03@?A0x1961e80d@opt_SSE4_1@hal@cv@@
.?AU?$YUV420sp2RGB8Invoker@$01$0A@$03@?A0x1961e80d@opt_SSE4_1@hal@cv@@
.?AU?$YUV420sp2RGB8Invoker@$01$00$03@?A0x1961e80d@opt_SSE4_1@hal@cv@@
.?AU?$YUV420p2RGB8Invoker@$0A@$02@?A0x1961e80d@opt_SSE4_1@hal@cv@@
.?AU?$YUV420p2RGB8Invoker@$01$02@?A0x1961e80d@opt_SSE4_1@hal@cv@@
.?AU?$YUV420p2RGB8Invoker@$0A@$03@?A0x1961e80d@opt_SSE4_1@hal@cv@@
.?AU?$YUV420p2RGB8Invoker@$01$03@?A0x1961e80d@opt_SSE4_1@hal@cv@@
.?AU?$YUV422toRGB8Invoker@$0A@$0A@$0A@$02@?A0x1961e80d@opt_SSE4_1@hal@cv@@
.?AU?$YUV422toRGB8Invoker@$0A@$0A@$00$02@?A0x1961e80d@opt_SSE4_1@hal@cv@@
.?AU?$YUV422toRGB8Invoker@$0A@$00$0A@$02@?A0x1961e80d@opt_SSE4_1@hal@cv@@
.?AU?$YUV422toRGB8Invoker@$01$0A@$0A@$02@?A0x1961e80d@opt_SSE4_1@hal@cv@@
.?AU?$YUV422toRGB8Invoker@$01$0A@$00$02@?A0x1961e80d@opt_SSE4_1@hal@cv@@
.?AU?$YUV422toRGB8Invoker@$01$00$0A@$02@?A0x1961e80d@opt_SSE4_1@hal@cv@@
.?AU?$YUV422toRGB8Invoker@$0A@$0A@$0A@$03@?A0x1961e80d@opt_SSE4_1@hal@cv@@
.?AU?$YUV422toRGB8Invoker@$0A@$0A@$00$03@?A0x1961e80d@opt_SSE4_1@hal@cv@@
.?AU?$YUV422toRGB8Invoker@$0A@$00$0A@$03@?A0x1961e80d@opt_SSE4_1@hal@cv@@
.?AU?$YUV422toRGB8Invoker@$01$0A@$0A@$03@?A0x1961e80d@opt_SSE4_1@hal@cv@@
.?AU?$YUV422toRGB8Invoker@$01$0A@$00$03@?A0x1961e80d@opt_SSE4_1@hal@cv@@
.?AU?$YUV422toRGB8Invoker@$01$00$0A@$03@?A0x1961e80d@opt_SSE4_1@hal@cv@@
.?AV?$CvtColorLoop_Invoker@URGB2HSV_b@?A0x1c3ae71c@opt_SSE4_1@hal@cv@@@?A0x1c3ae71c@opt_SSE4_1@hal@cv@@
.?AV?$CvtColorLoop_Invoker@URGB2HSV_f@?A0x1c3ae71c@opt_SSE4_1@hal@cv@@@?A0x1c3ae71c@opt_SSE4_1@hal@cv@@
.?AV?$CvtColorLoop_Invoker@URGB2HLS_b@?A0x1c3ae71c@opt_SSE4_1@hal@cv@@@?A0x1c3ae71c@opt_SSE4_1@hal@cv@@
.?AV?$CvtColorLoop_Invoker@URGB2HLS_f@?A0x1c3ae71c@opt_SSE4_1@hal@cv@@@?A0x1c3ae71c@opt_SSE4_1@hal@cv@@
.?AV?$CvtColorLoop_Invoker@UHSV2RGB_b@?A0x1c3ae71c@opt_SSE4_1@hal@cv@@@?A0x1c3ae71c@opt_SSE4_1@hal@cv@@
.?AV?$CvtColorLoop_Invoker@UHSV2RGB_f@?A0x1c3ae71c@opt_SSE4_1@hal@cv@@@?A0x1c3ae71c@opt_SSE4_1@hal@cv@@
.?AV?$CvtColorLoop_Invoker@UHLS2RGB_b@?A0x1c3ae71c@opt_SSE4_1@hal@cv@@@?A0x1c3ae71c@opt_SSE4_1@hal@cv@@
.?AV?$CvtColorLoop_Invoker@UHLS2RGB_f@?A0x1c3ae71c@opt_SSE4_1@hal@cv@@@?A0x1c3ae71c@opt_SSE4_1@hal@cv@@
.?AV?$CvtColorLoop_Invoker@U?$RGB2RGB@E@?A0x34f77a7e@opt_SSE4_1@hal@cv@@@?A0x34f77a7e@opt_SSE4_1@hal@cv@@
.?AV?$CvtColorLoop_Invoker@U?$RGB2RGB@G@?A0x34f77a7e@opt_SSE4_1@hal@cv@@@?A0x34f77a7e@opt_SSE4_1@hal@cv@@
.?AV?$CvtColorLoop_Invoker@U?$RGB2RGB@M@?A0x34f77a7e@opt_SSE4_1@hal@cv@@@?A0x34f77a7e@opt_SSE4_1@hal@cv@@
.?AV?$CvtColorLoop_Invoker@URGB2RGB5x5@?A0x34f77a7e@opt_SSE4_1@hal@cv@@@?A0x34f77a7e@opt_SSE4_1@hal@cv@@
.?AV?$CvtColorLoop_Invoker@URGB5x52RGB@?A0x34f77a7e@opt_SSE4_1@hal@cv@@@?A0x34f77a7e@opt_SSE4_1@hal@cv@@
.?AV?$CvtColorLoop_Invoker@U?$RGB2Gray@E@?A0x34f77a7e@opt_SSE4_1@hal@cv@@@?A0x34f77a7e@opt_SSE4_1@hal@cv@@
.?AV?$CvtColorLoop_Invoker@U?$RGB2Gray@G@?A0x34f77a7e@opt_SSE4_1@hal@cv@@@?A0x34f77a7e@opt_SSE4_1@hal@cv@@
.?AV?$CvtColorLoop_Invoker@U?$RGB2Gray@M@?A0x34f77a7e@opt_SSE4_1@hal@cv@@@?A0x34f77a7e@opt_SSE4_1@hal@cv@@
.?AV?$CvtColorLoop_Invoker@U?$Gray2RGB@E@?A0x34f77a7e@opt_SSE4_1@hal@cv@@@?A0x34f77a7e@opt_SSE4_1@hal@cv@@
.?AV?$CvtColorLoop_Invoker@U?$Gray2RGB@G@?A0x34f77a7e@opt_SSE4_1@hal@cv@@@?A0x34f77a7e@opt_SSE4_1@hal@cv@@
.?AV?$CvtColorLoop_Invoker@U?$Gray2RGB@M@?A0x34f77a7e@opt_SSE4_1@hal@cv@@@?A0x34f77a7e@opt_SSE4_1@hal@cv@@
.?AV?$CvtColorLoop_Invoker@URGB5x52Gray@?A0x34f77a7e@opt_SSE4_1@hal@cv@@@?A0x34f77a7e@opt_SSE4_1@hal@cv@@
.?AV?$CvtColorLoop_Invoker@UGray2RGB5x5@?A0x34f77a7e@opt_SSE4_1@hal@cv@@@?A0x34f77a7e@opt_SSE4_1@hal@cv@@
.?AV?$CvtColorLoop_Invoker@U?$RGBA2mRGBA@E@?A0x34f77a7e@opt_SSE4_1@hal@cv@@@?A0x34f77a7e@opt_SSE4_1@hal@cv@@
.?AV?$CvtColorLoop_Invoker@U?$mRGBA2RGBA@E@?A0x34f77a7e@opt_SSE4_1@hal@cv@@@?A0x34f77a7e@opt_SSE4_1@hal@cv@@
.?AU?$ColumnSum@HE@?A0x61f39527@opt_SSE4_1@cv@@
.?AU?$ColumnSum@GE@?A0x61f39527@opt_SSE4_1@cv@@
.?AU?$ColumnSum@HF@?A0x61f39527@opt_SSE4_1@cv@@
.?AU?$ColumnSum@HG@?A0x61f39527@opt_SSE4_1@cv@@
.?AU?$ColumnSum@HH@?A0x61f39527@opt_SSE4_1@cv@@
.?AU?$ColumnSum@HM@?A0x61f39527@opt_SSE4_1@cv@@
.?AU?$RowSum@EH@?A0x61f39527@opt_SSE4_1@cv@@
.?AU?$RowSum@EG@?A0x61f39527@opt_SSE4_1@cv@@
.?AU?$RowSum@EN@?A0x61f39527@opt_SSE4_1@cv@@
.?AU?$RowSum@GH@?A0x61f39527@opt_SSE4_1@cv@@
.?AU?$RowSum@GN@?A0x61f39527@opt_SSE4_1@cv@@
.?AU?$RowSum@FH@?A0x61f39527@opt_SSE4_1@cv@@
.?AU?$RowSum@HH@?A0x61f39527@opt_SSE4_1@cv@@
.?AU?$RowSum@FN@?A0x61f39527@opt_SSE4_1@cv@@
.?AU?$RowSum@MN@?A0x61f39527@opt_SSE4_1@cv@@
.?AU?$RowSum@NN@?A0x61f39527@opt_SSE4_1@cv@@
.?AU?$ColumnSum@NE@?A0x61f39527@opt_SSE4_1@cv@@
.?AU?$ColumnSum@NG@?A0x61f39527@opt_SSE4_1@cv@@
.?AU?$ColumnSum@NF@?A0x61f39527@opt_SSE4_1@cv@@
.?AU?$ColumnSum@NM@?A0x61f39527@opt_SSE4_1@cv@@
.?AU?$ColumnSum@HN@?A0x61f39527@opt_SSE4_1@cv@@
.?AU?$ColumnSum@NN@?A0x61f39527@opt_SSE4_1@cv@@
.?AU?$SqrRowSum@EH@?A0x61f39527@opt_SSE4_1@cv@@
.?AU?$SqrRowSum@EN@?A0x61f39527@opt_SSE4_1@cv@@
.?AU?$SqrRowSum@GN@?A0x61f39527@opt_SSE4_1@cv@@
.?AU?$SqrRowSum@FN@?A0x61f39527@opt_SSE4_1@cv@@
.?AU?$SqrRowSum@MN@?A0x61f39527@opt_SSE4_1@cv@@
.?AU?$SqrRowSum@NN@?A0x61f39527@opt_SSE4_1@cv@@
.?AV?$_Ref_count_obj@U?$RowSum@EH@?A0x61f39527@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowSum@EG@?A0x61f39527@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowSum@EN@?A0x61f39527@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowSum@GH@?A0x61f39527@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowSum@GN@?A0x61f39527@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowSum@FH@?A0x61f39527@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowSum@HH@?A0x61f39527@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowSum@FN@?A0x61f39527@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowSum@MN@?A0x61f39527@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowSum@NN@?A0x61f39527@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnSum@HE@?A0x61f39527@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnSum@GE@?A0x61f39527@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnSum@NE@?A0x61f39527@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnSum@HG@?A0x61f39527@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnSum@NG@?A0x61f39527@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnSum@HF@?A0x61f39527@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnSum@NF@?A0x61f39527@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnSum@HH@?A0x61f39527@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnSum@HM@?A0x61f39527@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnSum@NM@?A0x61f39527@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnSum@HN@?A0x61f39527@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnSum@NN@?A0x61f39527@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SqrRowSum@EH@?A0x61f39527@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SqrRowSum@EN@?A0x61f39527@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SqrRowSum@GN@?A0x61f39527@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SqrRowSum@FN@?A0x61f39527@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SqrRowSum@MN@?A0x61f39527@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SqrRowSum@NN@?A0x61f39527@opt_SSE4_1@cv@@@std@@
.?AU?$SymmRowSmallFilter@EHUSymmRowSmallVec_8u32s@opt_SSE4_1@cv@@@opt_SSE4_1@cv@@
.?AU?$RowFilter@EHUSymmRowSmallVec_8u32s@opt_SSE4_1@cv@@@opt_SSE4_1@cv@@
.?AU?$SymmRowSmallFilter@MMUSymmRowSmallVec_32f@opt_SSE4_1@cv@@@opt_SSE4_1@cv@@
.?AU?$RowFilter@MMUSymmRowSmallVec_32f@opt_SSE4_1@cv@@@opt_SSE4_1@cv@@
.?AU?$RowFilter@EHURowVec_8u32s@opt_SSE4_1@cv@@@opt_SSE4_1@cv@@
.?AU?$RowFilter@EMURowNoVec@opt_SSE4_1@cv@@@opt_SSE4_1@cv@@
.?AU?$RowFilter@ENURowNoVec@opt_SSE4_1@cv@@@opt_SSE4_1@cv@@
.?AU?$RowFilter@GMURowNoVec@opt_SSE4_1@cv@@@opt_SSE4_1@cv@@
.?AU?$RowFilter@GNURowNoVec@opt_SSE4_1@cv@@@opt_SSE4_1@cv@@
.?AU?$RowFilter@FMURowVec_16s32f@opt_SSE4_1@cv@@@opt_SSE4_1@cv@@
.?AU?$RowFilter@FNURowNoVec@opt_SSE4_1@cv@@@opt_SSE4_1@cv@@
.?AU?$RowFilter@MMURowVec_32f@opt_SSE4_1@cv@@@opt_SSE4_1@cv@@
.?AU?$RowFilter@MNURowNoVec@opt_SSE4_1@cv@@@opt_SSE4_1@cv@@
.?AU?$RowFilter@NNURowNoVec@opt_SSE4_1@cv@@@opt_SSE4_1@cv@@
.?AU?$ColumnFilter@U?$FixedPtCastEx@HE@opt_SSE4_1@cv@@UColumnNoVec@23@@opt_SSE4_1@cv@@
.?AU?$ColumnFilter@U?$Cast@ME@opt_SSE4_1@cv@@UColumnNoVec@23@@opt_SSE4_1@cv@@
.?AU?$ColumnFilter@U?$Cast@NE@opt_SSE4_1@cv@@UColumnNoVec@23@@opt_SSE4_1@cv@@
.?AU?$ColumnFilter@U?$Cast@MG@opt_SSE4_1@cv@@UColumnNoVec@23@@opt_SSE4_1@cv@@
.?AU?$ColumnFilter@U?$Cast@NG@opt_SSE4_1@cv@@UColumnNoVec@23@@opt_SSE4_1@cv@@
.?AU?$ColumnFilter@U?$Cast@MF@opt_SSE4_1@cv@@UColumnNoVec@23@@opt_SSE4_1@cv@@
.?AU?$ColumnFilter@U?$Cast@NF@opt_SSE4_1@cv@@UColumnNoVec@23@@opt_SSE4_1@cv@@
.?AU?$ColumnFilter@U?$Cast@MM@opt_SSE4_1@cv@@UColumnNoVec@23@@opt_SSE4_1@cv@@
.?AU?$ColumnFilter@U?$Cast@NN@opt_SSE4_1@cv@@UColumnNoVec@23@@opt_SSE4_1@cv@@
.?AU?$SymmColumnSmallFilter@U?$FixedPtCastEx@HE@opt_SSE4_1@cv@@USymmColumnVec_32s8u@23@@opt_SSE4_1@cv@@
.?AU?$SymmColumnFilter@U?$FixedPtCastEx@HE@opt_SSE4_1@cv@@USymmColumnVec_32s8u@23@@opt_SSE4_1@cv@@
.?AU?$ColumnFilter@U?$FixedPtCastEx@HE@opt_SSE4_1@cv@@USymmColumnVec_32s8u@23@@opt_SSE4_1@cv@@
.?AU?$SymmColumnSmallFilter@U?$Cast@HF@opt_SSE4_1@cv@@USymmColumnSmallVec_32s16s@23@@opt_SSE4_1@cv@@
.?AU?$SymmColumnFilter@U?$Cast@HF@opt_SSE4_1@cv@@USymmColumnSmallVec_32s16s@23@@opt_SSE4_1@cv@@
.?AU?$ColumnFilter@U?$Cast@HF@opt_SSE4_1@cv@@USymmColumnSmallVec_32s16s@23@@opt_SSE4_1@cv@@
.?AU?$SymmColumnSmallFilter@U?$Cast@MM@opt_SSE4_1@cv@@USymmColumnSmallVec_32f@23@@opt_SSE4_1@cv@@
.?AU?$SymmColumnFilter@U?$Cast@MM@opt_SSE4_1@cv@@USymmColumnSmallVec_32f@23@@opt_SSE4_1@cv@@
.?AU?$ColumnFilter@U?$Cast@MM@opt_SSE4_1@cv@@USymmColumnSmallVec_32f@23@@opt_SSE4_1@cv@@
.?AU?$SymmColumnFilter@U?$Cast@ME@opt_SSE4_1@cv@@UColumnNoVec@23@@opt_SSE4_1@cv@@
.?AU?$SymmColumnFilter@U?$Cast@NE@opt_SSE4_1@cv@@UColumnNoVec@23@@opt_SSE4_1@cv@@
.?AU?$SymmColumnFilter@U?$Cast@MG@opt_SSE4_1@cv@@UColumnNoVec@23@@opt_SSE4_1@cv@@
.?AU?$SymmColumnFilter@U?$Cast@NG@opt_SSE4_1@cv@@UColumnNoVec@23@@opt_SSE4_1@cv@@
.?AU?$SymmColumnFilter@U?$Cast@HF@opt_SSE4_1@cv@@UColumnNoVec@23@@opt_SSE4_1@cv@@
.?AU?$ColumnFilter@U?$Cast@HF@opt_SSE4_1@cv@@UColumnNoVec@23@@opt_SSE4_1@cv@@
.?AU?$SymmColumnFilter@U?$Cast@MF@opt_SSE4_1@cv@@USymmColumnVec_32f16s@23@@opt_SSE4_1@cv@@
.?AU?$ColumnFilter@U?$Cast@MF@opt_SSE4_1@cv@@USymmColumnVec_32f16s@23@@opt_SSE4_1@cv@@
.?AU?$SymmColumnFilter@U?$Cast@NF@opt_SSE4_1@cv@@UColumnNoVec@23@@opt_SSE4_1@cv@@
.?AU?$SymmColumnFilter@U?$Cast@MM@opt_SSE4_1@cv@@USymmColumnVec_32f@23@@opt_SSE4_1@cv@@
.?AU?$ColumnFilter@U?$Cast@MM@opt_SSE4_1@cv@@USymmColumnVec_32f@23@@opt_SSE4_1@cv@@
.?AU?$SymmColumnFilter@U?$Cast@NN@opt_SSE4_1@cv@@UColumnNoVec@23@@opt_SSE4_1@cv@@
.?AV?$_Ref_count_obj@U?$SymmRowSmallFilter@EHUSymmRowSmallVec_8u32s@opt_SSE4_1@cv@@@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SymmRowSmallFilter@MMUSymmRowSmallVec_32f@opt_SSE4_1@cv@@@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowFilter@EHURowVec_8u32s@opt_SSE4_1@cv@@@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowFilter@EMURowNoVec@opt_SSE4_1@cv@@@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowFilter@ENURowNoVec@opt_SSE4_1@cv@@@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowFilter@GMURowNoVec@opt_SSE4_1@cv@@@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowFilter@GNURowNoVec@opt_SSE4_1@cv@@@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowFilter@FMURowVec_16s32f@opt_SSE4_1@cv@@@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowFilter@FNURowNoVec@opt_SSE4_1@cv@@@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowFilter@MMURowVec_32f@opt_SSE4_1@cv@@@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowFilter@MNURowNoVec@opt_SSE4_1@cv@@@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$RowFilter@NNURowNoVec@opt_SSE4_1@cv@@@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnFilter@U?$FixedPtCastEx@HE@opt_SSE4_1@cv@@UColumnNoVec@23@@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnFilter@U?$Cast@ME@opt_SSE4_1@cv@@UColumnNoVec@23@@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnFilter@U?$Cast@NE@opt_SSE4_1@cv@@UColumnNoVec@23@@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnFilter@U?$Cast@MG@opt_SSE4_1@cv@@UColumnNoVec@23@@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnFilter@U?$Cast@NG@opt_SSE4_1@cv@@UColumnNoVec@23@@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnFilter@U?$Cast@MF@opt_SSE4_1@cv@@UColumnNoVec@23@@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnFilter@U?$Cast@NF@opt_SSE4_1@cv@@UColumnNoVec@23@@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnFilter@U?$Cast@MM@opt_SSE4_1@cv@@UColumnNoVec@23@@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$ColumnFilter@U?$Cast@NN@opt_SSE4_1@cv@@UColumnNoVec@23@@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SymmColumnSmallFilter@U?$FixedPtCastEx@HE@opt_SSE4_1@cv@@USymmColumnVec_32s8u@23@@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SymmColumnSmallFilter@U?$Cast@HF@opt_SSE4_1@cv@@USymmColumnSmallVec_32s16s@23@@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SymmColumnSmallFilter@U?$Cast@MM@opt_SSE4_1@cv@@USymmColumnSmallVec_32f@23@@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SymmColumnFilter@U?$FixedPtCastEx@HE@opt_SSE4_1@cv@@USymmColumnVec_32s8u@23@@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SymmColumnFilter@U?$Cast@ME@opt_SSE4_1@cv@@UColumnNoVec@23@@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SymmColumnFilter@U?$Cast@NE@opt_SSE4_1@cv@@UColumnNoVec@23@@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SymmColumnFilter@U?$Cast@MG@opt_SSE4_1@cv@@UColumnNoVec@23@@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SymmColumnFilter@U?$Cast@NG@opt_SSE4_1@cv@@UColumnNoVec@23@@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SymmColumnFilter@U?$Cast@HF@opt_SSE4_1@cv@@UColumnNoVec@23@@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SymmColumnFilter@U?$Cast@MF@opt_SSE4_1@cv@@USymmColumnVec_32f16s@23@@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SymmColumnFilter@U?$Cast@NF@opt_SSE4_1@cv@@UColumnNoVec@23@@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SymmColumnFilter@U?$Cast@MM@opt_SSE4_1@cv@@USymmColumnVec_32f@23@@opt_SSE4_1@cv@@@std@@
.?AV?$_Ref_count_obj@U?$SymmColumnFilter@U?$Cast@NN@opt_SSE4_1@cv@@UColumnNoVec@23@@opt_SSE4_1@cv@@@std@@
.?AVRLByteStream@cv@@
.?AVRBaseStream@cv@@
.?AVWLByteStream@cv@@
.?AVWBaseStream@cv@@
.?AVBaseImageDecoder@cv@@
.?AVBaseImageEncoder@cv@@
.?AVBmpDecoder@cv@@
.?AVBmpEncoder@cv@@
.?AVRBS_THROW_EOS_Exception@cv@@
.?AVtype_info@@
.?AVbad_array_new_length@std@@
[empty_any]
Unknown exception
null input
We require SSE4.1 for some parts of the code, like HFBS
Decoded YCbCr - %d
[AppDocuments]\decoded-rgba-%d.png
Decoded Y - %d
[AppDocuments]\decoded-rgba.png
[AppDocuments]\decoded-y.png
Decoded Y MCCF - %d
[AppDocuments]\y-%s-fromMCCF-%d.png
openvr_yuyv
vector<T> too long
string too long
MbP?
[AppDocuments]/CaptureSessionSettings.json
bad cast
UNKNOWN-PathIsTooLarge
[%s (%i)] - %s\n
Error
The XR service is not currently running!
The XR client failed to initialize!
Client is not connected!
The XR service could not start the session!
none
XRSession::readWorldFromCameraPoses is not yet implemented!
getDenseMap is not implemented yet.
Error opening json settings file: %s
WARNING
Loading persistant XRSession settings from %s
INFO
Error parsing json settings file: %s, msg: %s
tracking_mode
Error Tracking Mode settings and will revert it to default value: %d
Finished loading XRSession persistant settings.
invalid string position
map/set<T> too long
yUpperBoundAppliedToCurrCameraInMeters
yLowerBoundAppliedToCurrCameraInMeters
minDegreeToDeviateFromHorizontalRay
minTimeToAddKeyframeInSeconds
minPoseDeltaOrTimeBased
keyframingStrategy
patchTrackingPlaneDetectorConfig
System call failure in %s [%s]: %s (context: %s)\n
System call failure in %s [%s]: %s (context: %s)\nMake sure all XR/Steam processes have been killed and try again.
OpenMutexA
PE::SharedMemoryBuffer::That::initialize_Open
OpenMutexA is returning nullptr.
OpenSemaphoreA
OpenSemaphoreA is returning nullptr.
OpenFileMappingA
OpenFileMappingA is returning nullptr.
CreateMutexA
PE::SharedMemoryBuffer::That::initialize_Create
CreateSemaphoreA
CreateFileMappingA
Local\
_Data
_Mutex
_NewDataWrittenSemaphore
acquire/release InputBuffer
PE::SharedMemoryBuffer::readData
PE::SharedMemoryBuffer::writeData
WaitForSingleObject
PE::SharedMemoryBuffer::acquireOutputBuffer
MapViewOfFile
releaseOutputBuffer
PE::SharedMemoryBuffer::releaseOutputBuffer
acquireInputBuffer
PE::SharedMemoryBuffer::acquireInputBuffer
XRServiceControlOutput_VeryLow
XRServiceControlInput_VeryLow
XRServiceControlOutput_Low
XRServiceControlInput_Low
XRServiceControlOutput_Mid
XRServiceControlInput_Mid
XRServiceControlOutput_High
XRServiceControlInput_High
XRClientControlOutput_VeryLow
XRClientControlInput_VeryLow
XRClientControlOutput_Low
XRClientControlInput_Low
XRClientControlOutput_Mid
XRClientControlInput_Mid
XRClientControlOutput_High
XRClientControlInput_High
!that->mutableClientActivity().start() failed
!buf->initialize() failed
An error happened internally.
Message from the server: %s
Unable to call_ReadLastWorldPose
call_GetRoomLayout failed
call_GetSparseMap failed
call_GetGlobalSparseLineMap failed
call_GetDenseMap failed
call_SetTrackerPaused failed
Unable to handleReturn_DataNotWritten
call_readTrackingStatus failed
call_SetDynamicOptions failed
call_GetMetrics failed
call_GetCurrentPerceptionEngineInternalState failed
call_SetNumericalProperty failed: nValues must be < %d
call_SetNumericalProperty failed
call_GetNumericalProperty failed
Global\Occipital_XRService_Unique_Lock
Global\Occipital_XRClient_Unique_Lock
Global\Occipital_XRClient_VeryLow_Lock
Global\Occipital_XRClient_Low_Lock
Global\Occipital_XRClient_Mid_Lock
Global\Occipital_XRClient_High_Lock
shouldDisconnect
!call_buf
argsSize != writtenArgsSize <==> %i != %i
!ret_buf
!isValid(ret.tid) on %i
ret.size > maxMessageSize(%i) - sizeof(XRIPCReturnTypeId) - sizeof(size_t)
%i %i %i %i
invalid vector<T> subscript
R [%.3f %.3f %.3f] T [%.4f %.4f %.4f]
unknown
openvr_rgba
openvr_4cam
android_yuv
Decoded RGBA - %d
Decoded Y only - %d
Frame given to an OCCFileWriter thatis not currently writing.
[OCCFileWriter] The serializer is not going fast enough, dropping a multi camera color frame (image queue size = %d)
ERROR
structuresensorv2
vegacontroller
egypt
vive
openvr
CSVWriting
Could not open the CSV file %s
/tmp
Starting new log. ---------------------------\n
.log
ocdbg-
[AppDocuments]/occ
%s %s: %s\n
%s: %s\n
%s %s\n
false
true
Could not open file
null
%.25g
"NAN"
\u%04x
\u2028
\u2029
NULL
'%c' (%d)
(%d)
 (line 
unexpected end of input after start of comment
unexpected end of input inside multi-line comment
malformed comment
unexpected end of input
unexpected end of input in string
 in string
unescaped 
bad \u escape: 
invalid escape character 
leading 0s not permitted in numbers
 in number
invalid 
at least one digit required in fractional part
at least one digit required in exponent
, got 
parse error: expected 
exceeded maximum nesting depth
expected '"' in object, got 
expected ':' in object, got 
expected ',' in object, got 
expected ',' in list, got 
expected value, got 
unexpected trailing 
deserMCC
seriaMCC
nV@'1
PerceptionEngine HUD
generic
Depth
Tracker
__TrackerFPS
Tracker Accuracy
__StartTrackingToPose
Tracker Hints
Post-tracker UKF Filter
__TSProcessFrameOnceInQueue
Tight IMU Integration
__TrackerSparseIKF
Sparse Frame State
__TrackerSparseUWWKF
__PredictedPoseErrorAgainstLH
[DeltaFromBAHiding]
USB3 Status
FloorHeight
OpenVR calibration file
Persistent IMU Settings
IMU Scaling Cross Axis Present
IMU Extrinsics
IMU Scaling
motionIsInitialized
sensorFusionIsInitialized
Sparse Gravity Angle
Scale Accuracy
Accel Temperature
Sparse imuFromColor
UKF imuFromFrame
UKF Gyro Bias
Sparse Gyro Bias
Sparse Known Gyro Bias
UKF Accel Bias
Sparse Accel Bias
Sparse Known Accel Bias
 accelDelivered
 accelToRender
  gyroDelivered
  gyroToRender
cameraToRender
cameraEOEToArrival
visibleFrameCreation
__OpenVRLatencyStatus
stereoFrameCreation
cameraEOEToEarlyCapture
cameraEOEToStartTracking
sensorFromHeadset
coreHmdPoseUpdate
VisualLogger
%RED%
%s = %s
deque<T> too long
list<T> too long
system
unknown error
", "
status
create_directories
[AppDocuments]
[BundleResources]
[Dropbox]
[StructureApps]
[Temp]
\Dropbox\info.json
Cannot resolve path: Could not find Dropbox/Info.json.
business
path
Exception
%s: %s
Option key `%s' is not supported
OptionNotRecognizedException
The value for option key `%s' is invalid (%s)
OptionInvalidValueException
Providing a value for option key `%s' is mandatory.
OptionMissingValueException
invalid map<K, T> key
zkmf
O1A[
N}Xo
only JPEG is supported when deserialzing in Windows, you are trying to use another mode ! Throwing an exception
33s?
integer
float
mrm-
veronica-
openvr-
stereo-
egypt-
metadata
pixel_coordinates_convention
device_type
veronica
openvr_stereo
index
device_serial
intrinsics
width
height
intrinsicsOffsets
extrinsics
extrinsicsOffsets
poly3Intrinsics
scaleFactors_accel
scaleFactors_gyro
scaleFactorsCrossAxis_accel
scaleFactorsCrossAxis_gyro
bias_accel
bias_gyro
%Y-%m-%d_%H-%M-%S
stereoCalibration
cam_
deviceSerial
invalid array<T, N> subscript
_vOn?
vector<bool> too long
Concurrent queue thread #%d has started.
Concurrent queue thread #%d is stopping.
global_queue
directory_iterator::directory_iterator
directory_iterator::operator++
remove_all
[AppDocuments]/Occipital/profiling-
green
blue
texture_u
texture_v
vertex_indices
texcoord
vertex
face
TextureFile
[PLY] Only keeping the first texture, ignoring the subsequent ones
%i//%i%i//%i%i//%i
newmtl
map_Kd
map_Ka
map_KdHdr
mtllib
usemtl
%512s %512[^\n]
.png
ply\n
format ascii 1.0\n
comment TextureFile 
element vertex 
property float x\n
property float y\n
property float z\n
property float nx\n
property float ny\n
property float nz\n
property float s\n
property float t\n
property float red\n
property float green\n
property float blue\n
property uchar red\n
property uchar green\n
property uchar blue\n
element face 
property list uchar uint vertex_indices\n
property list uchar float texcoord\n
end_header\n
format binary_little_endian 1.0\n
String removed in Release
ocWorldFromOcRawRefCamera
ocWorldFromOcRectifiedRefCamera
standingLhWorldFromLhDriverRef
VisualInertialTracker
SyntheticLighthouse
Lighthouse
#{ "dataFormat": "VisualInertial_Pose_Velocity_Biases_Gravity_ImuRotation_AccelScale_Latency_Confidence", "worldFromDevice": "%s", "source": "%s", "OCSV_version": 1 }
#"timestampInSeconds", "worldFromDevice.translation",,, "worldFromDevice.quaternion",,,, "linearVelocityOfDeviceInWorld",,, "angularVelocityOfDeviceInWorld",,, "gyroBiasesRadPerSec",,, "accelBiasesMetersPerSecSqr",,, "gravityInWorldInMetersPerSecSqr",,, "realImuFromPrecalibratedImu.quaternion",,,, "accelScaleFactor",,, "latencyInSeconds", "confidence"
#"ts", "tx", "ty", "tz", "qw", "qx", "qy", "qz", "vx", "vy", "vz", "wx", "wy", "wz", "bg_x", "bg_y", "bg_z", "ba_x", "ba_y", "ba_z", "gx", "gy", "gz", "imu_qw", "imu_qx", "imu_qy", "imu_qz", "accel_scale_x", "accel_scale_y", "accel_scale_z", "latency", "confidence"
%.16g,%.9g,%.9g,%.9g,%.9g,%.9g,%.9g,%.9g,%.9g,%.9g,%.9g,%.9g,%.9g,%.9g,%.9g,%.9g,%.9g,%.9g,%.9g,%.9g,%.12g,%.12g,%.12g,%.9g,%.9g,%.9g,%.9g,%.9g,%.9g,%.9g,%.9g,%.9g\n
ERROR_Invalid__Enum_Value
H264
qHEVC
,=DN
$&3 \r
\-\vN
p6te
vids
MFTEnumEx
MFStartup
MFCreateMemoryBuffer
MFCreateSample
MFCreateMediaType
MFCopyImage
*NV12
IDispatch error #%d
Unknown error 0x%0lX
aAM"
charmander
eclipse
winterfresh
caterpie
EVT1494467714
EVT1494467941
EHT3256741209
spearow
EVT1494472371
EVT1494472606
EVT1494469252
EVT1494473688
added to pool
[INVALID]
[normal=%.3f %.3f %.3f] [distToOrigin=%.3f] [abcd=%.3f, %.3f, %.3f, %.3f]
L==\n
occipitl
invalid
int8
int16
PLY_Int32
uint8
uint16
PLY_UInt32
float32
float64
char
short
uchar
ushort
uint
double
major
same
end_marker
format
ascii
binary_big_endian
binary_little_endian
element
property
comment
obj_info
end_header
Warning:  Can't find property '%s' in element '%s'\n
ply_get_element: unexpected end of file\n
get_binary_item: bad type = %d\n
get_ascii_item: bad type = %d\n
store_item: bad type = %d\n
list
string
Warning:  No element with index %d\n
?333333
20161127
IHDR
IDAT
IEND
PLTE
tRNS
bKGD
tEXt
zTXt
iTXt
tIME
pHYs
LodePNG
uknown_file
cv::Mat::Mat
total() == 0 || data != NULL
unknown_file
Step must be a multiple of esz1
Cannot encode shift value %d\n
(Cq=:@
*C33
bad allocation
FIXME: document
sgbm
How to build the splat matrix
Apply a temporal consistency the splat matrix
Sigma to divide the spacial dimension 
Sigma to divide the intensity dimension 
Will do extra processing to keep close depth
Try to prevent background grid cell to leak in foreground
Make sure grid voxel for which we have a value don't move during the optiminization
Initial depth algorithm to produce a sparse but accurate depth. Default is StereoSGBM
Option to clean the depth after the initial computation
Postprocessing applied on the sparse depth, e.g. to make it dense. Default is HardwareFriendlyBilateral.
When we want to add a dilated reprojection of the controllers.
Images will get downsampled until they width is smaller than the given value. Default is 4096.
The full pipeline is run in the background.
Do we want to get a right depth frame from the pipeline.
Adress local of the server
JSON parameters of the deep depth from stereo pipeline
Close depth estimation
BilateralSolver
Left image
Right image
Left depth
Right depth
vis mask
/Resources/decimatedLeftController.obj
/Resources/decimatedRightController.obj
u=)\
Background full depth estimation
unspecified
tcp://localhost:7788
[PretrainedModels]/DPSNet/dpsnet_updated.pth.tar
~/tmp/_remote_cache_dps
cacheFolderPath
modelPath
use_half
computeDepthFrameStep
frameSize
depthSize
numViews
logitsConfidence
ndepths
depth_interval
min_depth
max_depth
use2DBaselineCheck
viewMinBaseline1
viewMinBaseline2
viewMaxAngleDegrees
viewSearchStep
minViewVisibility
maxSpeckleSize
maxSpeckleDiffMeters
doCrossCheck
historyMaxTimeSeconds
historyMaxDistanceShiftedMeters
historyMaxAngleRotatedDegrees
useUndistotedColor
depthDumpPath
enableFetchingRecentPosesFromTracker
%s/depth_%06d.png
%s/left_%06d.png
%s/right_%06d.png
%s/filtered_depth_%06d.png
Multiview Depth (Filtered)
Input left color full sized
Input right color full sized
image_format
model_path
output_size
init_config
logits_confidence
normals
image%d
cam%d
multiview
depth_mm
prob
Multiview Depth
Frame associated to multiview Depth
Sparse left depth frame
Depth before refining discontinuities
Discontinuities
Depth after refining discontinuities
cv::Mat_<unsigned char>::operator =
DataType<_Tp>::channels == m.channels() || m.empty()
cv::Mat_<short>::operator =
6\n?fff?
tcp://localhost
tcp://127.0.0.1
int32
name
dtype
shape
%016llx
SEND
KeHxKxeNz)347BqNQgjDF3Y6INBHZwv6(mKJ@c4R
Too many connection attempts
PlanarBilateralSolver
Before warping
Depth before warping
After warping
Depth after warping
After update
[%s] weights
[%s] Frame %i (0 is the oldest)
Input before filtering
Output after filtering
?333333
\r\r\r\v
\r\r\r\v\r
\r\v\f\r
\r\n\r\r
\v\f\r\v
\r\v\f\r
\v\t\r\f
\r\r\v\r
[@JO
333333
Raw Mask before post processing
Raw Mask after filtering
Raw Mask after post processing
Semantic Segmentation
hint score %f
invalid unordered_map<K, T> key
<333333
[@JO
[@JO
[@JO
[@JO
point #%d
Horizontal Planes
Brute Force Search
Plane Matching Residuals
keyframe #%d
Inlier Samples
Global Histogram
Current Frame Histogram
Std(y):%fm
Inlier Samples Height Std
Global Planes Height Std
Horizontal Planes [%d]
Reference Matching Costs [%d]
Inlier Samples [%d]
Ref point %d
Reference Std(y) Frame %llu
Converged Ref[%d] Samples in Current 
Sampling Points Ref %lu
Possible Sample Matches [%lu]
Frame %lu
Candidate matches [%d]
#%02x%02x%02x
Global Histogram Number Samples
Global Histogram Weights
=333?33
[@JO
@????
[@JO
[@JO
[@JO
[@JO
cv::operator <<
No element name has been given
[@JO
[@JO
[@JO
[@JO
[@JO
[@JO
[@JO
[@JO
[@JO
[@JO
[@JO
[@JO
[@JO
[@JO
[@JO
[@JO
[@JO
~GL_ATIX_texture_env_route
GL_ATIX_vertex_shader_output_point_size
GL_ATI_draw_buffers
GL_ATI_element_array
GL_ATI_envmap_bumpmap
GL_ATI_fragment_shader
GL_ATI_map_object_buffer
GL_ATI_meminfo
GL_ATI_pn_triangles
GL_ATI_separate_stencil
GL_ATI_shader_texture_lod
GL_ATI_text_fragment_shader
GL_ATI_texture_compression_3dc
GL_ATI_texture_env_combine3
GL_ATI_texture_float
GL_ATI_texture_mirror_once
GL_ATI_vertex_array_object
GL_ATI_vertex_attrib_array_object
GL_ATI_vertex_streams
GL_EGL_KHR_context_flush_control
GL_EGL_NV_robustness_video_memory_purge
GL_EXT_422_pixels
GL_EXT_Cg_shader
GL_EXT_abgr
GL_EXT_bgra
GL_EXT_bindable_uniform
GL_EXT_blend_color
GL_EXT_blend_equation_separate
GL_EXT_blend_func_separate
GL_EXT_blend_logic_op
GL_EXT_blend_minmax
GL_EXT_blend_subtract
GL_EXT_clip_volume_hint
GL_EXT_cmyka
GL_EXT_color_subtable
GL_EXT_compiled_vertex_array
GL_EXT_convolution
GL_EXT_coordinate_frame
GL_EXT_copy_texture
GL_EXT_cull_vertex
GL_EXT_debug_label
GL_EXT_debug_marker
GL_EXT_depth_bounds_test
GL_EXT_direct_state_access
GL_EXT_draw_buffers2
GL_EXT_draw_instanced
GL_EXT_draw_range_elements
GL_EXT_fog_coord
GL_EXT_fragment_lighting
GL_EXT_framebuffer_blit
GL_EXT_framebuffer_multisample
GL_EXT_framebuffer_multisample_blit_scaled
GL_EXT_framebuffer_object
GL_EXT_framebuffer_sRGB
GL_EXT_geometry_shader4
GL_EXT_gpu_program_parameters
GL_EXT_gpu_shader4
GL_EXT_histogram
GL_EXT_index_array_formats
GL_EXT_index_func
GL_EXT_index_material
GL_EXT_index_texture
GL_EXT_light_texture
GL_EXT_misc_attribute
GL_EXT_multi_draw_arrays
GL_EXT_multisample
GL_EXT_packed_depth_stencil
GL_EXT_packed_float
GL_EXT_packed_pixels
GL_EXT_paletted_texture
GL_EXT_pixel_buffer_object
GL_EXT_pixel_transform
GL_EXT_pixel_transform_color_table
GL_EXT_point_parameters
GL_EXT_polygon_offset
GL_EXT_polygon_offset_clamp
GL_EXT_post_depth_coverage
GL_EXT_provoking_vertex
GL_EXT_raster_multisample
GL_EXT_rescale_normal
GL_EXT_scene_marker
GL_EXT_secondary_color
GL_EXT_separate_shader_objects
GL_EXT_separate_specular_color
GL_EXT_shader_image_load_formatted
GL_EXT_shader_image_load_store
GL_EXT_shader_integer_mix
GL_EXT_shadow_funcs
GL_EXT_shared_texture_palette
GL_EXT_sparse_texture2
GL_EXT_stencil_clear_tag
GL_EXT_stencil_two_side
GL_EXT_stencil_wrap
GL_EXT_subtexture
GL_EXT_texture
GL_EXT_texture3D
GL_EXT_texture_array
GL_EXT_texture_buffer_object
GL_EXT_texture_compression_dxt1
GL_EXT_texture_compression_latc
GL_EXT_texture_compression_rgtc
GL_EXT_texture_compression_s3tc
GL_EXT_texture_cube_map
GL_EXT_texture_edge_clamp
GL_EXT_texture_env
GL_EXT_texture_env_add
GL_EXT_texture_env_combine
GL_EXT_texture_env_dot3
GL_EXT_texture_filter_anisotropic
GL_EXT_texture_filter_minmax
GL_EXT_texture_integer
GL_EXT_texture_lod_bias
GL_EXT_texture_mirror_clamp
GL_EXT_texture_object
GL_EXT_texture_perturb_normal
GL_EXT_texture_rectangle
GL_EXT_texture_sRGB
GL_EXT_texture_sRGB_decode
GL_EXT_texture_shared_exponent
GL_EXT_texture_snorm
GL_EXT_texture_swizzle
GL_EXT_timer_query
GL_EXT_transform_feedback
GL_EXT_vertex_array
GL_EXT_vertex_array_bgra
GL_EXT_vertex_attrib_64bit
GL_EXT_vertex_shader
GL_EXT_vertex_weighting
GL_EXT_window_rectangles
GL_EXT_x11_sync_object
GL_GREMEDY_frame_terminator
GL_GREMEDY_string_marker
GL_HP_convolution_border_modes
GL_HP_image_transform
GL_HP_occlusion_test
GL_HP_texture_lighting
GL_IBM_cull_vertex
GL_IBM_multimode_draw_arrays
GL_IBM_rasterpos_clip
GL_IBM_static_data
GL_IBM_texture_mirrored_repeat
GL_IBM_vertex_array_lists
GL_INGR_color_clamp
GL_INGR_interlace_read
GL_INTEL_conservative_rasterization
GL_INTEL_fragment_shader_ordering
GL_INTEL_framebuffer_CMAA
GL_INTEL_map_texture
GL_INTEL_parallel_arrays
GL_INTEL_performance_query
GL_INTEL_texture_scissor
GL_KHR_blend_equation_advanced
GL_KHR_blend_equation_advanced_coherent
GL_KHR_context_flush_control
GL_KHR_debug
GL_KHR_no_error
GL_KHR_robust_buffer_access_behavior
GL_KHR_robustness
GL_KHR_texture_compression_astc_hdr
GL_KHR_texture_compression_astc_ldr
GL_KHR_texture_compression_astc_sliced_3d
GL_KTX_buffer_region
GL_MESAX_texture_stack
GL_MESA_pack_invert
GL_MESA_resize_buffers
GL_MESA_shader_integer_functions
GL_MESA_window_pos
GL_MESA_ycbcr_texture
GL_NVX_blend_equation_advanced_multi_draw_buffers
GL_NVX_conditional_render
GL_NVX_gpu_memory_info
GL_NVX_linked_gpu_multicast
GL_NV_bindless_multi_draw_indirect
GL_NV_bindless_multi_draw_indirect_count
GL_NV_bindless_texture
GL_NV_blend_equation_advanced
GL_NV_blend_equation_advanced_coherent
GL_NV_blend_square
GL_NV_clip_space_w_scaling
GL_NV_command_list
GL_NV_compute_program5
GL_NV_conditional_render
GL_NV_conservative_raster
GL_NV_conservative_raster_dilate
GL_NV_conservative_raster_pre_snap_triangles
GL_NV_copy_depth_to_color
GL_NV_copy_image
GL_NV_deep_texture3D
GL_NV_depth_buffer_float
GL_NV_depth_clamp
GL_NV_depth_range_unclamped
GL_NV_draw_texture
GL_NV_draw_vulkan_image
GL_NV_evaluators
GL_NV_explicit_multisample
GL_NV_fence
GL_NV_fill_rectangle
GL_NV_float_buffer
GL_NV_fog_distance
GL_NV_fragment_coverage_to_color
GL_NV_fragment_program
GL_NV_fragment_program2
GL_NV_fragment_program4
GL_NV_fragment_program_option
GL_NV_fragment_shader_interlock
GL_NV_framebuffer_mixed_samples
GL_NV_framebuffer_multisample_coverage
GL_NV_geometry_program4
GL_NV_geometry_shader4
GL_NV_geometry_shader_passthrough
GL_NV_gpu_multicast
GL_NV_gpu_program4
GL_NV_gpu_program5
GL_NV_gpu_program5_mem_extended
GL_NV_gpu_program_fp64
GL_NV_gpu_shader5
GL_NV_half_float
GL_NV_internalformat_sample_query
GL_NV_light_max_exponent
GL_NV_multisample_coverage
GL_NV_multisample_filter_hint
GL_NV_occlusion_query
GL_NV_packed_depth_stencil
GL_NV_parameter_buffer_object
GL_NV_parameter_buffer_object2
GL_NV_path_rendering
GL_NV_path_rendering_shared_edge
GL_NV_pixel_data_range
GL_NV_point_sprite
GL_NV_present_video
GL_NV_primitive_restart
GL_NV_register_combiners
GL_NV_register_combiners2
GL_NV_robustness_video_memory_purge
GL_NV_sample_locations
GL_NV_sample_mask_override_coverage
GL_NV_shader_atomic_counters
GL_NV_shader_atomic_float
GL_NV_shader_atomic_float64
GL_NV_shader_atomic_fp16_vector
GL_NV_shader_atomic_int64
GL_NV_shader_buffer_load
GL_NV_shader_storage_buffer_object
GL_NV_shader_thread_group
GL_NV_shader_thread_shuffle
GL_NV_stereo_view_rendering
GL_NV_tessellation_program5
GL_NV_texgen_emboss
GL_NV_texgen_reflection
GL_NV_texture_barrier
GL_NV_texture_compression_vtc
GL_NV_texture_env_combine4
GL_NV_texture_expand_normal
GL_NV_texture_multisample
GL_NV_texture_rectangle
GL_NV_texture_shader
GL_NV_texture_shader2
GL_NV_texture_shader3
GL_NV_transform_feedback
GL_NV_transform_feedback2
GL_NV_uniform_buffer_unified_memory
GL_NV_vdpau_interop
GL_NV_vertex_array_range
GL_NV_vertex_array_range2
GL_NV_vertex_attrib_integer_64bit
GL_NV_vertex_buffer_unified_memory
GL_NV_vertex_program
GL_NV_vertex_program1_1
GL_NV_vertex_program2
GL_NV_vertex_program2_option
GL_NV_vertex_program3
GL_NV_vertex_program4
GL_NV_video_capture
GL_NV_viewport_array2
GL_NV_viewport_swizzle
GL_OES_byte_coordinates
GL_OES_compressed_paletted_texture
GL_OES_read_format
GL_OES_single_precision
GL_OML_interlace
GL_OML_resample
GL_OML_subsample
GL_OVR_multiview
GL_OVR_multiview2
GL_PGI_misc_hints
GL_PGI_vertex_hints
GL_REGAL_ES1_0_compatibility
GL_REGAL_ES1_1_compatibility
GL_REGAL_enable
GL_REGAL_error_string
GL_REGAL_extension_query
GL_REGAL_log
GL_REGAL_proc_address
GL_REND_screen_coordinates
GL_S3_s3tc
GL_SGIS_color_range
GL_SGIS_detail_texture
GL_SGIS_fog_function
GL_SGIS_generate_mipmap
GL_SGIS_multisample
GL_SGIS_pixel_texture
GL_SGIS_point_line_texgen
GL_SGIS_sharpen_texture
GL_SGIS_texture4D
GL_SGIS_texture_border_clamp
GL_SGIS_texture_edge_clamp
GL_SGIS_texture_filter4
GL_SGIS_texture_lod
GL_SGIS_texture_select
GL_SGIX_async
GL_SGIX_async_histogram
GL_SGIX_async_pixel
GL_SGIX_blend_alpha_minmax
GL_SGIX_clipmap
GL_SGIX_convolution_accuracy
GL_SGIX_depth_texture
GL_SGIX_flush_raster
GL_SGIX_fog_offset
GL_SGIX_fog_texture
GL_SGIX_fragment_specular_lighting
GL_SGIX_framezoom
GL_SGIX_interlace
GL_SGIX_ir_instrument1
GL_SGIX_list_priority
GL_SGIX_pixel_texture
GL_SGIX_pixel_texture_bits
GL_SGIX_reference_plane
GL_SGIX_resample
GL_SGIX_shadow
GL_SGIX_shadow_ambient
GL_SGIX_sprite
GL_SGIX_tag_sample_buffer
GL_SGIX_texture_add_env
GL_SGIX_texture_coordinate_clamp
GL_SGIX_texture_lod_bias
GL_SGIX_texture_multi_buffer
GL_SGIX_texture_range
GL_SGIX_texture_scale_bias
GL_SGIX_vertex_preclip
GL_SGIX_vertex_preclip_hint
GL_SGIX_ycrcb
GL_SGI_color_matrix
GL_SGI_color_table
GL_SGI_texture_color_table
GL_SUNX_constant_data
GL_SUN_convolution_border_modes
GL_SUN_global_alpha
GL_SUN_mesh_array
GL_SUN_read_video_pixels
GL_SUN_slice_accum
GL_SUN_triangle_list
GL_SUN_vertex
GL_WIN_phong_shading
GL_WIN_specular_fog
GL_WIN_swap_hint
No error
Missing GL version
GL 1.1 and up are not supported
GLX 1.2 and up are not supported
Unknown error
2.0.0
GL_VERSION_1_2
GL_VERSION_1_2_1
GL_VERSION_1_3
GL_VERSION_1_4
GL_VERSION_1_5
GL_VERSION_2_0
GL_VERSION_2_1
GL_VERSION_3_0
GL_VERSION_3_1
GL_VERSION_3_2
GL_VERSION_3_3
GL_VERSION_4_0
GL_VERSION_4_1
GL_VERSION_4_2
GL_VERSION_4_3
GL_VERSION_4_4
GL_VERSION_4_5
GL_3DFX_multisample
GL_3DFX_tbuffer
GL_3DFX_texture_compression_FXT1
GL_AMD_blend_minmax_factor
GL_AMD_conservative_depth
GL_AMD_debug_output
GL_AMD_depth_clamp_separate
GL_AMD_draw_buffers_blend
GL_AMD_gcn_shader
GL_AMD_gpu_shader_half_float
GL_AMD_gpu_shader_int64
GL_AMD_interleaved_elements
GL_AMD_multi_draw_indirect
GL_AMD_name_gen_delete
GL_AMD_occlusion_query_event
GL_AMD_performance_monitor
GL_AMD_pinned_memory
GL_AMD_query_buffer_object
GL_AMD_sample_positions
GL_AMD_seamless_cubemap_per_texture
GL_AMD_shader_atomic_counter_ops
GL_AMD_shader_ballot
GL_AMD_shader_explicit_vertex_parameter
GL_AMD_shader_stencil_export
GL_AMD_shader_stencil_value_export
GL_AMD_shader_trinary_minmax
GL_AMD_sparse_texture
GL_AMD_stencil_operation_extended
GL_AMD_texture_texture4
GL_AMD_transform_feedback3_lines_triangles
GL_AMD_transform_feedback4
GL_AMD_vertex_shader_layer
GL_AMD_vertex_shader_tessellator
GL_AMD_vertex_shader_viewport_index
GL_ANGLE_depth_texture
GL_ANGLE_framebuffer_blit
GL_ANGLE_framebuffer_multisample
GL_ANGLE_instanced_arrays
GL_ANGLE_pack_reverse_row_order
GL_ANGLE_program_binary
GL_ANGLE_texture_compression_dxt1
GL_ANGLE_texture_compression_dxt3
GL_ANGLE_texture_compression_dxt5
GL_ANGLE_texture_usage
GL_ANGLE_timer_query
GL_ANGLE_translated_shader_source
GL_APPLE_aux_depth_stencil
GL_APPLE_client_storage
GL_APPLE_element_array
GL_APPLE_fence
GL_APPLE_float_pixels
GL_APPLE_flush_buffer_range
GL_APPLE_object_purgeable
GL_APPLE_pixel_buffer
GL_APPLE_rgb_422
GL_APPLE_row_bytes
GL_APPLE_specular_vector
GL_APPLE_texture_range
GL_APPLE_transform_hint
GL_APPLE_vertex_array_object
GL_APPLE_vertex_array_range
GL_APPLE_vertex_program_evaluators
GL_APPLE_ycbcr_422
GL_ARB_ES2_compatibility
GL_ARB_ES3_1_compatibility
GL_ARB_ES3_2_compatibility
GL_ARB_ES3_compatibility
GL_ARB_arrays_of_arrays
GL_ARB_base_instance
GL_ARB_bindless_texture
GL_ARB_blend_func_extended
GL_ARB_buffer_storage
GL_ARB_cl_event
GL_ARB_clear_buffer_object
GL_ARB_clear_texture
GL_ARB_clip_control
GL_ARB_color_buffer_float
GL_ARB_compatibility
GL_ARB_compressed_texture_pixel_storage
GL_ARB_compute_shader
GL_ARB_compute_variable_group_size
GL_ARB_conditional_render_inverted
GL_ARB_conservative_depth
GL_ARB_copy_buffer
GL_ARB_copy_image
GL_ARB_cull_distance
GL_ARB_debug_output
GL_ARB_depth_buffer_float
GL_ARB_depth_clamp
GL_ARB_depth_texture
GL_ARB_derivative_control
GL_ARB_direct_state_access
GL_ARB_draw_buffers
GL_ARB_draw_buffers_blend
GL_ARB_draw_elements_base_vertex
GL_ARB_draw_indirect
GL_ARB_draw_instanced
GL_ARB_enhanced_layouts
GL_ARB_explicit_attrib_location
GL_ARB_explicit_uniform_location
GL_ARB_fragment_coord_conventions
GL_ARB_fragment_layer_viewport
GL_ARB_fragment_program
GL_ARB_fragment_program_shadow
GL_ARB_fragment_shader
GL_ARB_fragment_shader_interlock
GL_ARB_framebuffer_no_attachments
GL_ARB_framebuffer_object
GL_ARB_framebuffer_sRGB
GL_ARB_geometry_shader4
GL_ARB_get_program_binary
GL_ARB_get_texture_sub_image
GL_ARB_gl_spirv
GL_ARB_gpu_shader5
GL_ARB_gpu_shader_fp64
GL_ARB_gpu_shader_int64
GL_ARB_half_float_pixel
GL_ARB_half_float_vertex
GL_ARB_imaging
GL_ARB_indirect_parameters
GL_ARB_instanced_arrays
GL_ARB_internalformat_query
GL_ARB_internalformat_query2
GL_ARB_invalidate_subdata
GL_ARB_map_buffer_alignment
GL_ARB_map_buffer_range
GL_ARB_matrix_palette
GL_ARB_multi_bind
GL_ARB_multi_draw_indirect
GL_ARB_multisample
GL_ARB_multitexture
GL_ARB_occlusion_query
GL_ARB_occlusion_query2
GL_ARB_parallel_shader_compile
GL_ARB_pipeline_statistics_query
GL_ARB_pixel_buffer_object
GL_ARB_point_parameters
GL_ARB_point_sprite
GL_ARB_post_depth_coverage
GL_ARB_program_interface_query
GL_ARB_provoking_vertex
GL_ARB_query_buffer_object
GL_ARB_robust_buffer_access_behavior
GL_ARB_robustness
GL_ARB_robustness_application_isolation
GL_ARB_robustness_share_group_isolation
GL_ARB_sample_locations
GL_ARB_sample_shading
GL_ARB_sampler_objects
GL_ARB_seamless_cube_map
GL_ARB_seamless_cubemap_per_texture
GL_ARB_separate_shader_objects
GL_ARB_shader_atomic_counter_ops
GL_ARB_shader_atomic_counters
GL_ARB_shader_ballot
GL_ARB_shader_bit_encoding
GL_ARB_shader_clock
GL_ARB_shader_draw_parameters
GL_ARB_shader_group_vote
GL_ARB_shader_image_load_store
GL_ARB_shader_image_size
GL_ARB_shader_objects
GL_ARB_shader_precision
GL_ARB_shader_stencil_export
GL_ARB_shader_storage_buffer_object
GL_ARB_shader_subroutine
GL_ARB_shader_texture_image_samples
GL_ARB_shader_texture_lod
GL_ARB_shader_viewport_layer_array
GL_ARB_shading_language_100
GL_ARB_shading_language_420pack
GL_ARB_shading_language_include
GL_ARB_shading_language_packing
GL_ARB_shadow
GL_ARB_shadow_ambient
GL_ARB_sparse_buffer
GL_ARB_sparse_texture
GL_ARB_sparse_texture2
GL_ARB_sparse_texture_clamp
GL_ARB_stencil_texturing
GL_ARB_sync
GL_ARB_tessellation_shader
GL_ARB_texture_barrier
GL_ARB_texture_border_clamp
GL_ARB_texture_buffer_object
GL_ARB_texture_buffer_object_rgb32
GL_ARB_texture_buffer_range
GL_ARB_texture_compression
GL_ARB_texture_compression_bptc
GL_ARB_texture_compression_rgtc
GL_ARB_texture_cube_map
GL_ARB_texture_cube_map_array
GL_ARB_texture_env_add
GL_ARB_texture_env_combine
GL_ARB_texture_env_crossbar
GL_ARB_texture_env_dot3
GL_ARB_texture_filter_minmax
GL_ARB_texture_float
GL_ARB_texture_gather
GL_ARB_texture_mirror_clamp_to_edge
GL_ARB_texture_mirrored_repeat
GL_ARB_texture_multisample
GL_ARB_texture_non_power_of_two
GL_ARB_texture_query_levels
GL_ARB_texture_query_lod
GL_ARB_texture_rectangle
GL_ARB_texture_rg
GL_ARB_texture_rgb10_a2ui
GL_ARB_texture_stencil8
GL_ARB_texture_storage
GL_ARB_texture_storage_multisample
GL_ARB_texture_swizzle
GL_ARB_texture_view
GL_ARB_timer_query
GL_ARB_transform_feedback2
GL_ARB_transform_feedback3
GL_ARB_transform_feedback_instanced
GL_ARB_transform_feedback_overflow_query
GL_ARB_transpose_matrix
GL_ARB_uniform_buffer_object
GL_ARB_vertex_array_bgra
GL_ARB_vertex_array_object
GL_ARB_vertex_attrib_64bit
GL_ARB_vertex_attrib_binding
GL_ARB_vertex_blend
GL_ARB_vertex_buffer_object
GL_ARB_vertex_program
GL_ARB_vertex_shader
GL_ARB_vertex_type_10f_11f_11f_rev
GL_ARB_vertex_type_2_10_10_10_rev
GL_ARB_viewport_array
GL_ARB_window_pos
GL_ATIX_point_sprites
GL_ATIX_texture_env_combine3
glCopyTexSubImage3D
glDrawRangeElements
glTexImage3D
glTexSubImage3D
glActiveTexture
glClientActiveTexture
glCompressedTexImage1D
glCompressedTexImage2D
glCompressedTexImage3D
glCompressedTexSubImage1D
glCompressedTexSubImage2D
glCompressedTexSubImage3D
glGetCompressedTexImage
glLoadTransposeMatrixd
glLoadTransposeMatrixf
glMultTransposeMatrixd
glMultTransposeMatrixf
glMultiTexCoord1d
glMultiTexCoord1dv
glMultiTexCoord1f
glMultiTexCoord1fv
glMultiTexCoord1i
glMultiTexCoord1iv
glMultiTexCoord1s
glMultiTexCoord1sv
glMultiTexCoord2d
glMultiTexCoord2dv
glMultiTexCoord2f
glMultiTexCoord2fv
glMultiTexCoord2i
glMultiTexCoord2iv
glMultiTexCoord2s
glMultiTexCoord2sv
glMultiTexCoord3d
glMultiTexCoord3dv
glMultiTexCoord3f
glMultiTexCoord3fv
glMultiTexCoord3i
glMultiTexCoord3iv
glMultiTexCoord3s
glMultiTexCoord3sv
glMultiTexCoord4d
glMultiTexCoord4dv
glMultiTexCoord4f
glMultiTexCoord4fv
glMultiTexCoord4i
glMultiTexCoord4iv
glMultiTexCoord4s
glMultiTexCoord4sv
glSampleCoverage
glBlendColor
glBlendEquation
glBlendFuncSeparate
glFogCoordPointer
glFogCoordd
glFogCoorddv
glFogCoordf
glFogCoordfv
glMultiDrawArrays
glMultiDrawElements
glPointParameterf
glPointParameterfv
glPointParameteri
glPointParameteriv
glSecondaryColor3b
glSecondaryColor3bv
glSecondaryColor3d
glSecondaryColor3dv
glSecondaryColor3f
glSecondaryColor3fv
glSecondaryColor3i
glSecondaryColor3iv
glSecondaryColor3s
glSecondaryColor3sv
glSecondaryColor3ub
glSecondaryColor3ubv
glSecondaryColor3ui
glSecondaryColor3uiv
glSecondaryColor3us
glSecondaryColor3usv
glSecondaryColorPointer
glWindowPos2d
glWindowPos2dv
glWindowPos2f
glWindowPos2fv
glWindowPos2i
glWindowPos2iv
glWindowPos2s
glWindowPos2sv
glWindowPos3d
glWindowPos3dv
glWindowPos3f
glWindowPos3fv
glWindowPos3i
glWindowPos3iv
glWindowPos3s
glWindowPos3sv
glBeginQuery
glBindBuffer
glBufferData
glBufferSubData
glDeleteBuffers
glDeleteQueries
glEndQuery
glGenBuffers
glGenQueries
glGetBufferParameteriv
glGetBufferPointerv
glGetBufferSubData
glGetQueryObjectiv
glGetQueryObjectuiv
glGetQueryiv
glIsBuffer
glIsQuery
glMapBuffer
glUnmapBuffer
glAttachShader
glBindAttribLocation
glBlendEquationSeparate
glCompileShader
glCreateProgram
glCreateShader
glDeleteProgram
glDeleteShader
glDetachShader
glDisableVertexAttribArray
glDrawBuffers
glEnableVertexAttribArray
glGetActiveAttrib
glGetActiveUniform
glGetAttachedShaders
glGetAttribLocation
glGetProgramInfoLog
glGetProgramiv
glGetShaderInfoLog
glGetShaderSource
glGetShaderiv
glGetUniformLocation
glGetUniformfv
glGetUniformiv
glGetVertexAttribPointerv
glGetVertexAttribdv
glGetVertexAttribfv
glGetVertexAttribiv
glIsProgram
glIsShader
glLinkProgram
glShaderSource
glStencilFuncSeparate
glStencilMaskSeparate
glStencilOpSeparate
glUniform1f
glUniform1fv
glUniform1i
glUniform1iv
glUniform2f
glUniform2fv
glUniform2i
glUniform2iv
glUniform3f
glUniform3fv
glUniform3i
glUniform3iv
glUniform4f
glUniform4fv
glUniform4i
glUniform4iv
glUniformMatrix2fv
glUniformMatrix3fv
glUniformMatrix4fv
glUseProgram
glValidateProgram
glVertexAttrib1d
glVertexAttrib1dv
glVertexAttrib1f
glVertexAttrib1fv
glVertexAttrib1s
glVertexAttrib1sv
glVertexAttrib2d
glVertexAttrib2dv
glVertexAttrib2f
glVertexAttrib2fv
glVertexAttrib2s
glVertexAttrib2sv
glVertexAttrib3d
glVertexAttrib3dv
glVertexAttrib3f
glVertexAttrib3fv
glVertexAttrib3s
glVertexAttrib3sv
glVertexAttrib4Nbv
glVertexAttrib4Niv
glVertexAttrib4Nsv
glVertexAttrib4Nub
glVertexAttrib4Nubv
glVertexAttrib4Nuiv
glVertexAttrib4Nusv
glVertexAttrib4bv
glVertexAttrib4d
glVertexAttrib4dv
glVertexAttrib4f
glVertexAttrib4fv
glVertexAttrib4iv
glVertexAttrib4s
glVertexAttrib4sv
glVertexAttrib4ubv
glVertexAttrib4uiv
glVertexAttrib4usv
glVertexAttribPointer
glUniformMatrix2x3fv
glUniformMatrix2x4fv
glUniformMatrix3x2fv
glUniformMatrix3x4fv
glUniformMatrix4x2fv
glUniformMatrix4x3fv
glBeginConditionalRender
glBeginTransformFeedback
glBindFragDataLocation
glClampColor
glClearBufferfi
glClearBufferfv
glClearBufferiv
glClearBufferuiv
glColorMaski
glDisablei
glEnablei
glEndConditionalRender
glEndTransformFeedback
glGetBooleani_v
glGetFragDataLocation
glGetStringi
glGetTexParameterIiv
glGetTexParameterIuiv
glGetTransformFeedbackVarying
glGetUniformuiv
glGetVertexAttribIiv
glGetVertexAttribIuiv
glIsEnabledi
glTexParameterIiv
glTexParameterIuiv
glTransformFeedbackVaryings
glUniform1ui
glUniform1uiv
glUniform2ui
glUniform2uiv
glUniform3ui
glUniform3uiv
glUniform4ui
glUniform4uiv
glVertexAttribI1i
glVertexAttribI1iv
glVertexAttribI1ui
glVertexAttribI1uiv
glVertexAttribI2i
glVertexAttribI2iv
glVertexAttribI2ui
glVertexAttribI2uiv
glVertexAttribI3i
glVertexAttribI3iv
glVertexAttribI3ui
glVertexAttribI3uiv
glVertexAttribI4bv
glVertexAttribI4i
glVertexAttribI4iv
glVertexAttribI4sv
glVertexAttribI4ubv
glVertexAttribI4ui
glVertexAttribI4uiv
glVertexAttribI4usv
glVertexAttribIPointer
glDrawArraysInstanced
glDrawElementsInstanced
glPrimitiveRestartIndex
glTexBuffer
glFramebufferTexture
glGetBufferParameteri64v
glGetInteger64i_v
glVertexAttribDivisor
glBlendEquationSeparatei
glBlendEquationi
glBlendFuncSeparatei
glBlendFunci
glMinSampleShading
glGetGraphicsResetStatus
glGetnCompressedTexImage
glGetnTexImage
glGetnUniformdv
glTbufferMask3DFX
glDebugMessageCallbackAMD
glDebugMessageEnableAMD
glDebugMessageInsertAMD
glGetDebugMessageLogAMD
glBlendEquationIndexedAMD
glBlendEquationSeparateIndexedAMD
glBlendFuncIndexedAMD
glBlendFuncSeparateIndexedAMD
glVertexAttribParameteriAMD
glMultiDrawArraysIndirectAMD
glMultiDrawElementsIndirectAMD
glDeleteNamesAMD
glGenNamesAMD
glIsNameAMD
glQueryObjectParameteruiAMD
glBeginPerfMonitorAMD
glDeletePerfMonitorsAMD
glEndPerfMonitorAMD
glGenPerfMonitorsAMD
glGetPerfMonitorCounterDataAMD
glGetPerfMonitorCounterInfoAMD
glGetPerfMonitorCounterStringAMD
glGetPerfMonitorCountersAMD
glGetPerfMonitorGroupStringAMD
glGetPerfMonitorGroupsAMD
glSelectPerfMonitorCountersAMD
glSetMultisamplefvAMD
glTexStorageSparseAMD
glTextureStorageSparseAMD
glStencilOpValueAMD
glTessellationFactorAMD
glTessellationModeAMD
glBlitFramebufferANGLE
glRenderbufferStorageMultisampleANGLE
glDrawArraysInstancedANGLE
glDrawElementsInstancedANGLE
glVertexAttribDivisorANGLE
glBeginQueryANGLE
glDeleteQueriesANGLE
glEndQueryANGLE
glGenQueriesANGLE
glGetQueryObjecti64vANGLE
glGetQueryObjectivANGLE
glGetQueryObjectui64vANGLE
glGetQueryObjectuivANGLE
glGetQueryivANGLE
glIsQueryANGLE
glQueryCounterANGLE
glGetTranslatedShaderSourceANGLE
glDrawElementArrayAPPLE
glDrawRangeElementArrayAPPLE
glElementPointerAPPLE
glMultiDrawElementArrayAPPLE
glMultiDrawRangeElementArrayAPPLE
glDeleteFencesAPPLE
glFinishFenceAPPLE
glFinishObjectAPPLE
glGenFencesAPPLE
glIsFenceAPPLE
glSetFenceAPPLE
glTestFenceAPPLE
glTestObjectAPPLE
glBufferParameteriAPPLE
glFlushMappedBufferRangeAPPLE
glGetObjectParameterivAPPLE
glObjectPurgeableAPPLE
glObjectUnpurgeableAPPLE
glGetTexParameterPointervAPPLE
glTextureRangeAPPLE
glBindVertexArrayAPPLE
glDeleteVertexArraysAPPLE
glGenVertexArraysAPPLE
glIsVertexArrayAPPLE
glFlushVertexArrayRangeAPPLE
glVertexArrayParameteriAPPLE
glVertexArrayRangeAPPLE
glDisableVertexAttribAPPLE
glEnableVertexAttribAPPLE
glIsVertexAttribEnabledAPPLE
glMapVertexAttrib1dAPPLE
glMapVertexAttrib1fAPPLE
glMapVertexAttrib2dAPPLE
glMapVertexAttrib2fAPPLE
glClearDepthf
glDepthRangef
glGetShaderPrecisionFormat
glReleaseShaderCompiler
glShaderBinary
glMemoryBarrierByRegion
glPrimitiveBoundingBoxARB
glDrawArraysInstancedBaseInstance
glDrawElementsInstancedBaseInstance
glDrawElementsInstancedBaseVertexBaseInstance
glGetImageHandleARB
glGetTextureHandleARB
glGetTextureSamplerHandleARB
glGetVertexAttribLui64vARB
glIsImageHandleResidentARB
glIsTextureHandleResidentARB
glMakeImageHandleNonResidentARB
glMakeImageHandleResidentARB
glMakeTextureHandleNonResidentARB
glMakeTextureHandleResidentARB
glProgramUniformHandleui64ARB
glProgramUniformHandleui64vARB
glUniformHandleui64ARB
glUniformHandleui64vARB
glVertexAttribL1ui64ARB
glVertexAttribL1ui64vARB
glBindFragDataLocationIndexed
glGetFragDataIndex
glBufferStorage
glNamedBufferStorageEXT
glCreateSyncFromCLeventARB
glClearBufferData
glClearBufferSubData
glClearNamedBufferDataEXT
glClearNamedBufferSubDataEXT
glClearTexImage
glClearTexSubImage
glClipControl
glClampColorARB
glDispatchCompute
glDispatchComputeIndirect
glDispatchComputeGroupSizeARB
glCopyBufferSubData
glCopyImageSubData
glDebugMessageCallbackARB
glDebugMessageControlARB
glDebugMessageInsertARB
glGetDebugMessageLogARB
glBindTextureUnit
glBlitNamedFramebuffer
glCheckNamedFramebufferStatus
glClearNamedBufferData
glClearNamedBufferSubData
glClearNamedFramebufferfi
glClearNamedFramebufferfv
glClearNamedFramebufferiv
glClearNamedFramebufferuiv
glCompressedTextureSubImage1D
glCompressedTextureSubImage2D
glCompressedTextureSubImage3D
glCopyNamedBufferSubData
glCopyTextureSubImage1D
glCopyTextureSubImage2D
glCopyTextureSubImage3D
glCreateBuffers
glCreateFramebuffers
glCreateProgramPipelines
glCreateQueries
glCreateRenderbuffers
glCreateSamplers
glCreateTextures
glCreateTransformFeedbacks
glCreateVertexArrays
glDisableVertexArrayAttrib
glEnableVertexArrayAttrib
glFlushMappedNamedBufferRange
glGenerateTextureMipmap
glGetCompressedTextureImage
glGetNamedBufferParameteri64v
glGetNamedBufferParameteriv
glGetNamedBufferPointerv
glGetNamedBufferSubData
glGetNamedFramebufferAttachmentParameteriv
glGetNamedFramebufferParameteriv
glGetNamedRenderbufferParameteriv
glGetQueryBufferObjecti64v
glGetQueryBufferObjectiv
glGetQueryBufferObjectui64v
glGetQueryBufferObjectuiv
glGetTextureImage
glGetTextureLevelParameterfv
glGetTextureLevelParameteriv
glGetTextureParameterIiv
glGetTextureParameterIuiv
glGetTextureParameterfv
glGetTextureParameteriv
glGetTransformFeedbacki64_v
glGetTransformFeedbacki_v
glGetTransformFeedbackiv
glGetVertexArrayIndexed64iv
glGetVertexArrayIndexediv
glGetVertexArrayiv
glInvalidateNamedFramebufferData
glInvalidateNamedFramebufferSubData
glMapNamedBuffer
glMapNamedBufferRange
glNamedBufferData
glNamedBufferStorage
glNamedBufferSubData
glNamedFramebufferDrawBuffer
glNamedFramebufferDrawBuffers
glNamedFramebufferParameteri
glNamedFramebufferReadBuffer
glNamedFramebufferRenderbuffer
glNamedFramebufferTexture
glNamedFramebufferTextureLayer
glNamedRenderbufferStorage
glNamedRenderbufferStorageMultisample
glTextureBuffer
glTextureBufferRange
glTextureParameterIiv
glTextureParameterIuiv
glTextureParameterf
glTextureParameterfv
glTextureParameteri
glTextureParameteriv
glTextureStorage1D
glTextureStorage2D
glTextureStorage2DMultisample
glTextureStorage3D
glTextureStorage3DMultisample
glTextureSubImage1D
glTextureSubImage2D
glTextureSubImage3D
glTransformFeedbackBufferBase
glTransformFeedbackBufferRange
glUnmapNamedBuffer
glVertexArrayAttribBinding
glVertexArrayAttribFormat
glVertexArrayAttribIFormat
glVertexArrayAttribLFormat
glVertexArrayBindingDivisor
glVertexArrayElementBuffer
glVertexArrayVertexBuffer
glVertexArrayVertexBuffers
glDrawBuffersARB
glBlendEquationSeparateiARB
glBlendEquationiARB
glBlendFuncSeparateiARB
glBlendFunciARB
glDrawElementsBaseVertex
glDrawElementsInstancedBaseVertex
glDrawRangeElementsBaseVertex
glMultiDrawElementsBaseVertex
glDrawArraysIndirect
glDrawElementsIndirect
glFramebufferParameteri
glGetFramebufferParameteriv
glGetNamedFramebufferParameterivEXT
glNamedFramebufferParameteriEXT
glBindFramebuffer
glBindRenderbuffer
glBlitFramebuffer
glCheckFramebufferStatus
glDeleteFramebuffers
glDeleteRenderbuffers
glFramebufferRenderbuffer
glFramebufferTexture1D
glFramebufferTexture2D
glFramebufferTexture3D
glFramebufferTextureLayer
glGenFramebuffers
glGenRenderbuffers
glGenerateMipmap
glGetFramebufferAttachmentParameteriv
glGetRenderbufferParameteriv
glIsFramebuffer
glIsRenderbuffer
glRenderbufferStorage
glRenderbufferStorageMultisample
glFramebufferTextureARB
glFramebufferTextureFaceARB
glFramebufferTextureLayerARB
glProgramParameteriARB
glGetProgramBinary
glProgramBinary
glProgramParameteri
glGetCompressedTextureSubImage
glGetTextureSubImage
glSpecializeShaderARB
glGetUniformdv
glUniform1d
glUniform1dv
glUniform2d
glUniform2dv
glUniform3d
glUniform3dv
glUniform4d
glUniform4dv
glUniformMatrix2dv
glUniformMatrix2x3dv
glUniformMatrix2x4dv
glUniformMatrix3dv
glUniformMatrix3x2dv
glUniformMatrix3x4dv
glUniformMatrix4dv
glUniformMatrix4x2dv
glUniformMatrix4x3dv
glGetUniformi64vARB
glGetUniformui64vARB
glGetnUniformi64vARB
glGetnUniformui64vARB
glProgramUniform1i64ARB
glProgramUniform1i64vARB
glProgramUniform1ui64ARB
glProgramUniform1ui64vARB
glProgramUniform2i64ARB
glProgramUniform2i64vARB
glProgramUniform2ui64ARB
glProgramUniform2ui64vARB
glProgramUniform3i64ARB
glProgramUniform3i64vARB
glProgramUniform3ui64ARB
glProgramUniform3ui64vARB
glProgramUniform4i64ARB
glProgramUniform4i64vARB
glProgramUniform4ui64ARB
glProgramUniform4ui64vARB
glUniform1i64ARB
glUniform1i64vARB
glUniform1ui64ARB
glUniform1ui64vARB
glUniform2i64ARB
glUniform2i64vARB
glUniform2ui64ARB
glUniform2ui64vARB
glUniform3i64ARB
glUniform3i64vARB
glUniform3ui64ARB
glUniform3ui64vARB
glUniform4i64ARB
glUniform4i64vARB
glUniform4ui64ARB
glUniform4ui64vARB
glColorSubTable
glColorTable
glColorTableParameterfv
glColorTableParameteriv
glConvolutionFilter1D
glConvolutionFilter2D
glConvolutionParameterf
glConvolutionParameterfv
glConvolutionParameteri
glConvolutionParameteriv
glCopyColorSubTable
glCopyColorTable
glCopyConvolutionFilter1D
glCopyConvolutionFilter2D
glGetColorTable
glGetColorTableParameterfv
glGetColorTableParameteriv
glGetConvolutionFilter
glGetConvolutionParameterfv
glGetConvolutionParameteriv
glGetHistogram
glGetHistogramParameterfv
glGetHistogramParameteriv
glGetMinmax
glGetMinmaxParameterfv
glGetMinmaxParameteriv
glGetSeparableFilter
glHistogram
glMinmax
glResetHistogram
glResetMinmax
glSeparableFilter2D
glMultiDrawArraysIndirectCountARB
glMultiDrawElementsIndirectCountARB
glDrawArraysInstancedARB
glDrawElementsInstancedARB
glVertexAttribDivisorARB
glGetInternalformativ
glGetInternalformati64v
glInvalidateBufferData
glInvalidateBufferSubData
glInvalidateFramebuffer
glInvalidateSubFramebuffer
glInvalidateTexImage
glInvalidateTexSubImage
glFlushMappedBufferRange
glMapBufferRange
glCurrentPaletteMatrixARB
glMatrixIndexPointerARB
glMatrixIndexubvARB
glMatrixIndexuivARB
glMatrixIndexusvARB
glBindBuffersBase
glBindBuffersRange
glBindImageTextures
glBindSamplers
glBindTextures
glBindVertexBuffers
glMultiDrawArraysIndirect
glMultiDrawElementsIndirect
glSampleCoverageARB
glActiveTextureARB
glClientActiveTextureARB
glMultiTexCoord1dARB
glMultiTexCoord1dvARB
glMultiTexCoord1fARB
glMultiTexCoord1fvARB
glMultiTexCoord1iARB
glMultiTexCoord1ivARB
glMultiTexCoord1sARB
glMultiTexCoord1svARB
glMultiTexCoord2dARB
glMultiTexCoord2dvARB
glMultiTexCoord2fARB
glMultiTexCoord2fvARB
glMultiTexCoord2iARB
glMultiTexCoord2ivARB
glMultiTexCoord2sARB
glMultiTexCoord2svARB
glMultiTexCoord3dARB
glMultiTexCoord3dvARB
glMultiTexCoord3fARB
glMultiTexCoord3fvARB
glMultiTexCoord3iARB
glMultiTexCoord3ivARB
glMultiTexCoord3sARB
glMultiTexCoord3svARB
glMultiTexCoord4dARB
glMultiTexCoord4dvARB
glMultiTexCoord4fARB
glMultiTexCoord4fvARB
glMultiTexCoord4iARB
glMultiTexCoord4ivARB
glMultiTexCoord4sARB
glMultiTexCoord4svARB
glBeginQueryARB
glDeleteQueriesARB
glEndQueryARB
glGenQueriesARB
glGetQueryObjectivARB
glGetQueryObjectuivARB
glGetQueryivARB
glIsQueryARB
glMaxShaderCompilerThreadsARB
glPointParameterfARB
glPointParameterfvARB
glGetProgramInterfaceiv
glGetProgramResourceIndex
glGetProgramResourceLocation
glGetProgramResourceLocationIndex
glGetProgramResourceName
glGetProgramResourceiv
glProvokingVertex
glGetGraphicsResetStatusARB
glGetnColorTableARB
glGetnCompressedTexImageARB
glGetnConvolutionFilterARB
glGetnHistogramARB
glGetnMapdvARB
glGetnMapfvARB
glGetnMapivARB
glGetnMinmaxARB
glGetnPixelMapfvARB
glGetnPixelMapuivARB
glGetnPixelMapusvARB
glGetnPolygonStippleARB
glGetnSeparableFilterARB
glGetnTexImageARB
glGetnUniformdvARB
glGetnUniformfvARB
glGetnUniformivARB
glGetnUniformuivARB
glReadnPixelsARB
glFramebufferSampleLocationsfvARB
glNamedFramebufferSampleLocationsfvARB
glMinSampleShadingARB
glBindSampler
glDeleteSamplers
glGenSamplers
glGetSamplerParameterIiv
glGetSamplerParameterIuiv
glGetSamplerParameterfv
glGetSamplerParameteriv
glIsSampler
glSamplerParameterIiv
glSamplerParameterIuiv
glSamplerParameterf
glSamplerParameterfv
glSamplerParameteri
glSamplerParameteriv
glActiveShaderProgram
glBindProgramPipeline
glCreateShaderProgramv
glDeleteProgramPipelines
glGenProgramPipelines
glGetProgramPipelineInfoLog
glGetProgramPipelineiv
glIsProgramPipeline
glProgramUniform1d
glProgramUniform1dv
glProgramUniform1f
glProgramUniform1fv
glProgramUniform1i
glProgramUniform1iv
glProgramUniform1ui
glProgramUniform1uiv
glProgramUniform2d
glProgramUniform2dv
glProgramUniform2f
glProgramUniform2fv
glProgramUniform2i
glProgramUniform2iv
glProgramUniform2ui
glProgramUniform2uiv
glProgramUniform3d
glProgramUniform3dv
glProgramUniform3f
glProgramUniform3fv
glProgramUniform3i
glProgramUniform3iv
glProgramUniform3ui
glProgramUniform3uiv
glProgramUniform4d
glProgramUniform4dv
glProgramUniform4f
glProgramUniform4fv
glProgramUniform4i
glProgramUniform4iv
glProgramUniform4ui
glProgramUniform4uiv
glProgramUniformMatrix2dv
glProgramUniformMatrix2fv
glProgramUniformMatrix2x3dv
glProgramUniformMatrix2x3fv
glProgramUniformMatrix2x4dv
glProgramUniformMatrix2x4fv
glProgramUniformMatrix3dv
glProgramUniformMatrix3fv
glProgramUniformMatrix3x2dv
glProgramUniformMatrix3x2fv
glProgramUniformMatrix3x4dv
glProgramUniformMatrix3x4fv
glProgramUniformMatrix4dv
glProgramUniformMatrix4fv
glProgramUniformMatrix4x2dv
glProgramUniformMatrix4x2fv
glProgramUniformMatrix4x3dv
glProgramUniformMatrix4x3fv
glUseProgramStages
glValidateProgramPipeline
glGetActiveAtomicCounterBufferiv
glBindImageTexture
glMemoryBarrier
glAttachObjectARB
glCompileShaderARB
glCreateProgramObjectARB
glCreateShaderObjectARB
glDeleteObjectARB
glDetachObjectARB
glGetActiveUniformARB
glGetAttachedObjectsARB
glGetHandleARB
glGetInfoLogARB
glGetObjectParameterfvARB
glGetObjectParameterivARB
glGetShaderSourceARB
glGetUniformLocationARB
glGetUniformfvARB
glGetUniformivARB
glLinkProgramARB
glShaderSourceARB
glUniform1fARB
glUniform1fvARB
glUniform1iARB
glUniform1ivARB
glUniform2fARB
glUniform2fvARB
glUniform2iARB
glUniform2ivARB
glUniform3fARB
glUniform3fvARB
glUniform3iARB
glUniform3ivARB
glUniform4fARB
glUniform4fvARB
glUniform4iARB
glUniform4ivARB
glUniformMatrix2fvARB
glUniformMatrix3fvARB
glUniformMatrix4fvARB
glUseProgramObjectARB
glValidateProgramARB
glShaderStorageBlockBinding
glGetActiveSubroutineName
glGetActiveSubroutineUniformName
glGetActiveSubroutineUniformiv
glGetProgramStageiv
glGetSubroutineIndex
glGetSubroutineUniformLocation
glGetUniformSubroutineuiv
glUniformSubroutinesuiv
glCompileShaderIncludeARB
glDeleteNamedStringARB
glGetNamedStringARB
glGetNamedStringivARB
glIsNamedStringARB
glNamedStringARB
glBufferPageCommitmentARB
glTexPageCommitmentARB
glTexturePageCommitmentEXT
glClientWaitSync
glDeleteSync
glFenceSync
glGetInteger64v
glGetSynciv
glIsSync
glWaitSync
glPatchParameterfv
glPatchParameteri
glTextureBarrier
glTexBufferARB
glTexBufferRange
glTextureBufferRangeEXT
glCompressedTexImage1DARB
glCompressedTexImage2DARB
glCompressedTexImage3DARB
glCompressedTexSubImage1DARB
glCompressedTexSubImage2DARB
glCompressedTexSubImage3DARB
glGetCompressedTexImageARB
glGetMultisamplefv
glSampleMaski
glTexImage2DMultisample
glTexImage3DMultisample
glTexStorage1D
glTexStorage2D
glTexStorage3D
glTextureStorage1DEXT
glTextureStorage2DEXT
glTextureStorage3DEXT
glTexStorage2DMultisample
glTexStorage3DMultisample
glTextureStorage2DMultisampleEXT
glTextureStorage3DMultisampleEXT
glTextureView
glGetQueryObjecti64v
glGetQueryObjectui64v
glQueryCounter
glBindTransformFeedback
glDeleteTransformFeedbacks
glDrawTransformFeedback
glGenTransformFeedbacks
glIsTransformFeedback
glPauseTransformFeedback
glResumeTransformFeedback
glBeginQueryIndexed
glDrawTransformFeedbackStream
glEndQueryIndexed
glGetQueryIndexediv
glDrawTransformFeedbackInstanced
glDrawTransformFeedbackStreamInstanced
glLoadTransposeMatrixdARB
glLoadTransposeMatrixfARB
glMultTransposeMatrixdARB
glMultTransposeMatrixfARB
glBindBufferBase
glBindBufferRange
glGetActiveUniformBlockName
glGetActiveUniformBlockiv
glGetActiveUniformName
glGetActiveUniformsiv
glGetIntegeri_v
glGetUniformBlockIndex
glGetUniformIndices
glUniformBlockBinding
glBindVertexArray
glDeleteVertexArrays
glGenVertexArrays
glIsVertexArray
glGetVertexAttribLdv
glVertexAttribL1d
glVertexAttribL1dv
glVertexAttribL2d
glVertexAttribL2dv
glVertexAttribL3d
glVertexAttribL3dv
glVertexAttribL4d
glVertexAttribL4dv
glVertexAttribLPointer
glBindVertexBuffer
glVertexArrayBindVertexBufferEXT
glVertexArrayVertexAttribBindingEXT
glVertexArrayVertexAttribFormatEXT
glVertexArrayVertexAttribIFormatEXT
glVertexArrayVertexAttribLFormatEXT
glVertexArrayVertexBindingDivisorEXT
glVertexAttribBinding
glVertexAttribFormat
glVertexAttribIFormat
glVertexAttribLFormat
glVertexBindingDivisor
glVertexBlendARB
glWeightPointerARB
glWeightbvARB
glWeightdvARB
glWeightfvARB
glWeightivARB
glWeightsvARB
glWeightubvARB
glWeightuivARB
glWeightusvARB
glBindBufferARB
glBufferDataARB
glBufferSubDataARB
glDeleteBuffersARB
glGenBuffersARB
glGetBufferParameterivARB
glGetBufferPointervARB
glGetBufferSubDataARB
glIsBufferARB
glMapBufferARB
glUnmapBufferARB
glBindProgramARB
glDeleteProgramsARB
glDisableVertexAttribArrayARB
glEnableVertexAttribArrayARB
glGenProgramsARB
glGetProgramEnvParameterdvARB
glGetProgramEnvParameterfvARB
glGetProgramLocalParameterdvARB
glGetProgramLocalParameterfvARB
glGetProgramStringARB
glGetProgramivARB
glGetVertexAttribPointervARB
glGetVertexAttribdvARB
glGetVertexAttribfvARB
glGetVertexAttribivARB
glIsProgramARB
glProgramEnvParameter4dARB
glProgramEnvParameter4dvARB
glProgramEnvParameter4fARB
glProgramEnvParameter4fvARB
glProgramLocalParameter4dARB
glProgramLocalParameter4dvARB
glProgramLocalParameter4fARB
glProgramLocalParameter4fvARB
glProgramStringARB
glVertexAttrib1dARB
glVertexAttrib1dvARB
glVertexAttrib1fARB
glVertexAttrib1fvARB
glVertexAttrib1sARB
glVertexAttrib1svARB
glVertexAttrib2dARB
glVertexAttrib2dvARB
glVertexAttrib2fARB
glVertexAttrib2fvARB
glVertexAttrib2sARB
glVertexAttrib2svARB
glVertexAttrib3dARB
glVertexAttrib3dvARB
glVertexAttrib3fARB
glVertexAttrib3fvARB
glVertexAttrib3sARB
glVertexAttrib3svARB
glVertexAttrib4NbvARB
glVertexAttrib4NivARB
glVertexAttrib4NsvARB
glVertexAttrib4NubARB
glVertexAttrib4NubvARB
glVertexAttrib4NuivARB
glVertexAttrib4NusvARB
glVertexAttrib4bvARB
glVertexAttrib4dARB
glVertexAttrib4dvARB
glVertexAttrib4fARB
glVertexAttrib4fvARB
glVertexAttrib4ivARB
glVertexAttrib4sARB
glVertexAttrib4svARB
glVertexAttrib4ubvARB
glVertexAttrib4uivARB
glVertexAttrib4usvARB
glVertexAttribPointerARB
glBindAttribLocationARB
glGetActiveAttribARB
glGetAttribLocationARB
glColorP3ui
glColorP3uiv
glColorP4ui
glColorP4uiv
glMultiTexCoordP1ui
glMultiTexCoordP1uiv
glMultiTexCoordP2ui
glMultiTexCoordP2uiv
glMultiTexCoordP3ui
glMultiTexCoordP3uiv
glMultiTexCoordP4ui
glMultiTexCoordP4uiv
glNormalP3ui
glNormalP3uiv
glSecondaryColorP3ui
glSecondaryColorP3uiv
glTexCoordP1ui
glTexCoordP1uiv
glTexCoordP2ui
glTexCoordP2uiv
glTexCoordP3ui
glTexCoordP3uiv
glTexCoordP4ui
glTexCoordP4uiv
glVertexAttribP1ui
glVertexAttribP1uiv
glVertexAttribP2ui
glVertexAttribP2uiv
glVertexAttribP3ui
glVertexAttribP3uiv
glVertexAttribP4ui
glVertexAttribP4uiv
glVertexP2ui
glVertexP2uiv
glVertexP3ui
glVertexP3uiv
glVertexP4ui
glVertexP4uiv
glDepthRangeArrayv
glDepthRangeIndexed
glGetDoublei_v
glGetFloati_v
glScissorArrayv
glScissorIndexed
glScissorIndexedv
glViewportArrayv
glViewportIndexedf
glViewportIndexedfv
glWindowPos2dARB
glWindowPos2dvARB
glWindowPos2fARB
glWindowPos2fvARB
glWindowPos2iARB
glWindowPos2ivARB
glWindowPos2sARB
glWindowPos2svARB
glWindowPos3dARB
glWindowPos3dvARB
glWindowPos3fARB
glWindowPos3fvARB
glWindowPos3iARB
glWindowPos3ivARB
glWindowPos3sARB
glWindowPos3svARB
glDrawBuffersATI
glDrawElementArrayATI
glDrawRangeElementArrayATI
glElementPointerATI
glGetTexBumpParameterfvATI
glGetTexBumpParameterivATI
glTexBumpParameterfvATI
glTexBumpParameterivATI
glAlphaFragmentOp1ATI
glAlphaFragmentOp2ATI
glAlphaFragmentOp3ATI
glBeginFragmentShaderATI
glBindFragmentShaderATI
glColorFragmentOp1ATI
glColorFragmentOp2ATI
glColorFragmentOp3ATI
glDeleteFragmentShaderATI
glEndFragmentShaderATI
glGenFragmentShadersATI
glPassTexCoordATI
glSampleMapATI
glSetFragmentShaderConstantATI
glMapObjectBufferATI
glUnmapObjectBufferATI
glPNTrianglesfATI
glPNTrianglesiATI
glStencilFuncSeparateATI
glStencilOpSeparateATI
glArrayObjectATI
glFreeObjectBufferATI
glGetArrayObjectfvATI
glGetArrayObjectivATI
glGetObjectBufferfvATI
glGetObjectBufferivATI
glGetVariantArrayObjectfvATI
glGetVariantArrayObjectivATI
glIsObjectBufferATI
glNewObjectBufferATI
glUpdateObjectBufferATI
glVariantArrayObjectATI
glGetVertexAttribArrayObjectfvATI
glGetVertexAttribArrayObjectivATI
glVertexAttribArrayObjectATI
glClientActiveVertexStreamATI
glNormalStream3bATI
glNormalStream3bvATI
glNormalStream3dATI
glNormalStream3dvATI
glNormalStream3fATI
glNormalStream3fvATI
glNormalStream3iATI
glNormalStream3ivATI
glNormalStream3sATI
glNormalStream3svATI
glVertexBlendEnvfATI
glVertexBlendEnviATI
glVertexStream1dATI
glVertexStream1dvATI
glVertexStream1fATI
glVertexStream1fvATI
glVertexStream1iATI
glVertexStream1ivATI
glVertexStream1sATI
glVertexStream1svATI
glVertexStream2dATI
glVertexStream2dvATI
glVertexStream2fATI
glVertexStream2fvATI
glVertexStream2iATI
glVertexStream2ivATI
glVertexStream2sATI
glVertexStream2svATI
glVertexStream3dATI
glVertexStream3dvATI
glVertexStream3fATI
glVertexStream3fvATI
glVertexStream3iATI
glVertexStream3ivATI
glVertexStream3sATI
glVertexStream3svATI
glVertexStream4dATI
glVertexStream4dvATI
glVertexStream4fATI
glVertexStream4fvATI
glVertexStream4iATI
glVertexStream4ivATI
glVertexStream4sATI
glVertexStream4svATI
glGetUniformBufferSizeEXT
glGetUniformOffsetEXT
glUniformBufferEXT
glBlendColorEXT
glBlendEquationSeparateEXT
glBlendFuncSeparateEXT
glBlendEquationEXT
glColorSubTableEXT
glCopyColorSubTableEXT
glLockArraysEXT
glUnlockArraysEXT
glConvolutionFilter1DEXT
glConvolutionFilter2DEXT
glConvolutionParameterfEXT
glConvolutionParameterfvEXT
glConvolutionParameteriEXT
glConvolutionParameterivEXT
glCopyConvolutionFilter1DEXT
glCopyConvolutionFilter2DEXT
glGetConvolutionFilterEXT
glGetConvolutionParameterfvEXT
glGetConvolutionParameterivEXT
glGetSeparableFilterEXT
glSeparableFilter2DEXT
glBinormalPointerEXT
glTangentPointerEXT
glCopyTexImage1DEXT
glCopyTexImage2DEXT
glCopyTexSubImage1DEXT
glCopyTexSubImage2DEXT
glCopyTexSubImage3DEXT
glCullParameterdvEXT
glCullParameterfvEXT
glGetObjectLabelEXT
glLabelObjectEXT
glInsertEventMarkerEXT
glPopGroupMarkerEXT
glPushGroupMarkerEXT
glDepthBoundsEXT
glBindMultiTextureEXT
glCheckNamedFramebufferStatusEXT
glClientAttribDefaultEXT
glCompressedMultiTexImage1DEXT
glCompressedMultiTexImage2DEXT
glCompressedMultiTexImage3DEXT
glCompressedMultiTexSubImage1DEXT
glCompressedMultiTexSubImage2DEXT
glCompressedMultiTexSubImage3DEXT
glCompressedTextureImage1DEXT
glCompressedTextureImage2DEXT
glCompressedTextureImage3DEXT
glCompressedTextureSubImage1DEXT
glCompressedTextureSubImage2DEXT
glCompressedTextureSubImage3DEXT
glCopyMultiTexImage1DEXT
glCopyMultiTexImage2DEXT
glCopyMultiTexSubImage1DEXT
glCopyMultiTexSubImage2DEXT
glCopyMultiTexSubImage3DEXT
glCopyTextureImage1DEXT
glCopyTextureImage2DEXT
glCopyTextureSubImage1DEXT
glCopyTextureSubImage2DEXT
glCopyTextureSubImage3DEXT
glDisableClientStateIndexedEXT
glDisableClientStateiEXT
glDisableVertexArrayAttribEXT
glDisableVertexArrayEXT
glEnableClientStateIndexedEXT
glEnableClientStateiEXT
glEnableVertexArrayAttribEXT
glEnableVertexArrayEXT
glFlushMappedNamedBufferRangeEXT
glFramebufferDrawBufferEXT
glFramebufferDrawBuffersEXT
glFramebufferReadBufferEXT
glGenerateMultiTexMipmapEXT
glGenerateTextureMipmapEXT
glGetCompressedMultiTexImageEXT
glGetCompressedTextureImageEXT
glGetDoubleIndexedvEXT
glGetDoublei_vEXT
glGetFloatIndexedvEXT
glGetFloati_vEXT
glGetFramebufferParameterivEXT
glGetMultiTexEnvfvEXT
glGetMultiTexEnvivEXT
glGetMultiTexGendvEXT
glGetMultiTexGenfvEXT
glGetMultiTexGenivEXT
glGetMultiTexImageEXT
glGetMultiTexLevelParameterfvEXT
glGetMultiTexLevelParameterivEXT
glGetMultiTexParameterIivEXT
glGetMultiTexParameterIuivEXT
glGetMultiTexParameterfvEXT
glGetMultiTexParameterivEXT
glGetNamedBufferParameterivEXT
glGetNamedBufferPointervEXT
glGetNamedBufferSubDataEXT
glGetNamedFramebufferAttachmentParameterivEXT
glGetNamedProgramLocalParameterIivEXT
glGetNamedProgramLocalParameterIuivEXT
glGetNamedProgramLocalParameterdvEXT
glGetNamedProgramLocalParameterfvEXT
glGetNamedProgramStringEXT
glGetNamedProgramivEXT
glGetNamedRenderbufferParameterivEXT
glGetPointerIndexedvEXT
glGetPointeri_vEXT
glGetTextureImageEXT
glGetTextureLevelParameterfvEXT
glGetTextureLevelParameterivEXT
glGetTextureParameterIivEXT
glGetTextureParameterIuivEXT
glGetTextureParameterfvEXT
glGetTextureParameterivEXT
glGetVertexArrayIntegeri_vEXT
glGetVertexArrayIntegervEXT
glGetVertexArrayPointeri_vEXT
glGetVertexArrayPointervEXT
glMapNamedBufferEXT
glMapNamedBufferRangeEXT
glMatrixFrustumEXT
glMatrixLoadIdentityEXT
glMatrixLoadTransposedEXT
glMatrixLoadTransposefEXT
glMatrixLoaddEXT
glMatrixLoadfEXT
glMatrixMultTransposedEXT
glMatrixMultTransposefEXT
glMatrixMultdEXT
glMatrixMultfEXT
glMatrixOrthoEXT
glMatrixPopEXT
glMatrixPushEXT
glMatrixRotatedEXT
glMatrixRotatefEXT
glMatrixScaledEXT
glMatrixScalefEXT
glMatrixTranslatedEXT
glMatrixTranslatefEXT
glMultiTexBufferEXT
glMultiTexCoordPointerEXT
glMultiTexEnvfEXT
glMultiTexEnvfvEXT
glMultiTexEnviEXT
glMultiTexEnvivEXT
glMultiTexGendEXT
glMultiTexGendvEXT
glMultiTexGenfEXT
glMultiTexGenfvEXT
glMultiTexGeniEXT
glMultiTexGenivEXT
glMultiTexImage1DEXT
glMultiTexImage2DEXT
glMultiTexImage3DEXT
glMultiTexParameterIivEXT
glMultiTexParameterIuivEXT
glMultiTexParameterfEXT
glMultiTexParameterfvEXT
glMultiTexParameteriEXT
glMultiTexParameterivEXT
glMultiTexRenderbufferEXT
glMultiTexSubImage1DEXT
glMultiTexSubImage2DEXT
glMultiTexSubImage3DEXT
glNamedBufferDataEXT
glNamedBufferSubDataEXT
glNamedCopyBufferSubDataEXT
glNamedFramebufferRenderbufferEXT
glNamedFramebufferTexture1DEXT
glNamedFramebufferTexture2DEXT
glNamedFramebufferTexture3DEXT
glNamedFramebufferTextureEXT
glNamedFramebufferTextureFaceEXT
glNamedFramebufferTextureLayerEXT
glNamedProgramLocalParameter4dEXT
glNamedProgramLocalParameter4dvEXT
glNamedProgramLocalParameter4fEXT
glNamedProgramLocalParameter4fvEXT
glNamedProgramLocalParameterI4iEXT
glNamedProgramLocalParameterI4ivEXT
glNamedProgramLocalParameterI4uiEXT
glNamedProgramLocalParameterI4uivEXT
glNamedProgramLocalParameters4fvEXT
glNamedProgramLocalParametersI4ivEXT
glNamedProgramLocalParametersI4uivEXT
glNamedProgramStringEXT
glNamedRenderbufferStorageEXT
glNamedRenderbufferStorageMultisampleCoverageEXT
glNamedRenderbufferStorageMultisampleEXT
glProgramUniform1fEXT
glProgramUniform1fvEXT
glProgramUniform1iEXT
glProgramUniform1ivEXT
glProgramUniform1uiEXT
glProgramUniform1uivEXT
glProgramUniform2fEXT
glProgramUniform2fvEXT
glProgramUniform2iEXT
glProgramUniform2ivEXT
glProgramUniform2uiEXT
glProgramUniform2uivEXT
glProgramUniform3fEXT
glProgramUniform3fvEXT
glProgramUniform3iEXT
glProgramUniform3ivEXT
glProgramUniform3uiEXT
glProgramUniform3uivEXT
glProgramUniform4fEXT
glProgramUniform4fvEXT
glProgramUniform4iEXT
glProgramUniform4ivEXT
glProgramUniform4uiEXT
glProgramUniform4uivEXT
glProgramUniformMatrix2fvEXT
glProgramUniformMatrix2x3fvEXT
glProgramUniformMatrix2x4fvEXT
glProgramUniformMatrix3fvEXT
glProgramUniformMatrix3x2fvEXT
glProgramUniformMatrix3x4fvEXT
glProgramUniformMatrix4fvEXT
glProgramUniformMatrix4x2fvEXT
glProgramUniformMatrix4x3fvEXT
glPushClientAttribDefaultEXT
glTextureBufferEXT
glTextureImage1DEXT
glTextureImage2DEXT
glTextureImage3DEXT
glTextureParameterIivEXT
glTextureParameterIuivEXT
glTextureParameterfEXT
glTextureParameterfvEXT
glTextureParameteriEXT
glTextureParameterivEXT
glTextureRenderbufferEXT
glTextureSubImage1DEXT
glTextureSubImage2DEXT
glTextureSubImage3DEXT
glUnmapNamedBufferEXT
glVertexArrayColorOffsetEXT
glVertexArrayEdgeFlagOffsetEXT
glVertexArrayFogCoordOffsetEXT
glVertexArrayIndexOffsetEXT
glVertexArrayMultiTexCoordOffsetEXT
glVertexArrayNormalOffsetEXT
glVertexArraySecondaryColorOffsetEXT
glVertexArrayTexCoordOffsetEXT
glVertexArrayVertexAttribDivisorEXT
glVertexArrayVertexAttribIOffsetEXT
glVertexArrayVertexAttribOffsetEXT
glVertexArrayVertexOffsetEXT
glColorMaskIndexedEXT
glDisableIndexedEXT
glEnableIndexedEXT
glGetBooleanIndexedvEXT
glGetIntegerIndexedvEXT
glIsEnabledIndexedEXT
glDrawArraysInstancedEXT
glDrawElementsInstancedEXT
glDrawRangeElementsEXT
glFogCoordPointerEXT
glFogCoorddEXT
glFogCoorddvEXT
glFogCoordfEXT
glFogCoordfvEXT
glFragmentColorMaterialEXT
glFragmentLightModelfEXT
glFragmentLightModelfvEXT
glFragmentLightModeliEXT
glFragmentLightModelivEXT
glFragmentLightfEXT
glFragmentLightfvEXT
glFragmentLightiEXT
glFragmentLightivEXT
glFragmentMaterialfEXT
glFragmentMaterialfvEXT
glFragmentMaterialiEXT
glFragmentMaterialivEXT
glGetFragmentLightfvEXT
glGetFragmentLightivEXT
glGetFragmentMaterialfvEXT
glGetFragmentMaterialivEXT
glLightEnviEXT
glBlitFramebufferEXT
glRenderbufferStorageMultisampleEXT
glBindFramebufferEXT
glBindRenderbufferEXT
glCheckFramebufferStatusEXT
glDeleteFramebuffersEXT
glDeleteRenderbuffersEXT
glFramebufferRenderbufferEXT
glFramebufferTexture1DEXT
glFramebufferTexture2DEXT
glFramebufferTexture3DEXT
glGenFramebuffersEXT
glGenRenderbuffersEXT
glGenerateMipmapEXT
glGetFramebufferAttachmentParameterivEXT
glGetRenderbufferParameterivEXT
glIsFramebufferEXT
glIsRenderbufferEXT
glRenderbufferStorageEXT
glFramebufferTextureEXT
glFramebufferTextureFaceEXT
glProgramParameteriEXT
glProgramEnvParameters4fvEXT
glProgramLocalParameters4fvEXT
glBindFragDataLocationEXT
glGetFragDataLocationEXT
glGetUniformuivEXT
glGetVertexAttribIivEXT
glGetVertexAttribIuivEXT
glUniform1uiEXT
glUniform1uivEXT
glUniform2uiEXT
glUniform2uivEXT
glUniform3uiEXT
glUniform3uivEXT
glUniform4uiEXT
glUniform4uivEXT
glVertexAttribI1iEXT
glVertexAttribI1ivEXT
glVertexAttribI1uiEXT
glVertexAttribI1uivEXT
glVertexAttribI2iEXT
glVertexAttribI2ivEXT
glVertexAttribI2uiEXT
glVertexAttribI2uivEXT
glVertexAttribI3iEXT
glVertexAttribI3ivEXT
glVertexAttribI3uiEXT
glVertexAttribI3uivEXT
glVertexAttribI4bvEXT
glVertexAttribI4iEXT
glVertexAttribI4ivEXT
glVertexAttribI4svEXT
glVertexAttribI4ubvEXT
glVertexAttribI4uiEXT
glVertexAttribI4uivEXT
glVertexAttribI4usvEXT
glVertexAttribIPointerEXT
glGetHistogramEXT
glGetHistogramParameterfvEXT
glGetHistogramParameterivEXT
glGetMinmaxEXT
glGetMinmaxParameterfvEXT
glGetMinmaxParameterivEXT
glHistogramEXT
glMinmaxEXT
glResetHistogramEXT
glResetMinmaxEXT
glIndexFuncEXT
glIndexMaterialEXT
glApplyTextureEXT
glTextureLightEXT
glTextureMaterialEXT
glMultiDrawArraysEXT
glMultiDrawElementsEXT
glSampleMaskEXT
glSamplePatternEXT
glColorTableEXT
glGetColorTableEXT
glGetColorTableParameterfvEXT
glGetColorTableParameterivEXT
glGetPixelTransformParameterfvEXT
glGetPixelTransformParameterivEXT
glPixelTransformParameterfEXT
glPixelTransformParameterfvEXT
glPixelTransformParameteriEXT
glPixelTransformParameterivEXT
glPointParameterfEXT
glPointParameterfvEXT
glPolygonOffsetEXT
glPolygonOffsetClampEXT
glProvokingVertexEXT
glCoverageModulationNV
glCoverageModulationTableNV
glGetCoverageModulationTableNV
glRasterSamplesEXT
glBeginSceneEXT
glEndSceneEXT
glSecondaryColor3bEXT
glSecondaryColor3bvEXT
glSecondaryColor3dEXT
glSecondaryColor3dvEXT
glSecondaryColor3fEXT
glSecondaryColor3fvEXT
glSecondaryColor3iEXT
glSecondaryColor3ivEXT
glSecondaryColor3sEXT
glSecondaryColor3svEXT
glSecondaryColor3ubEXT
glSecondaryColor3ubvEXT
glSecondaryColor3uiEXT
glSecondaryColor3uivEXT
glSecondaryColor3usEXT
glSecondaryColor3usvEXT
glSecondaryColorPointerEXT
glActiveProgramEXT
glCreateShaderProgramEXT
glUseShaderProgramEXT
glBindImageTextureEXT
glMemoryBarrierEXT
glActiveStencilFaceEXT
glTexSubImage1DEXT
glTexSubImage2DEXT
glTexSubImage3DEXT
glTexImage3DEXT
glFramebufferTextureLayerEXT
glTexBufferEXT
glClearColorIiEXT
glClearColorIuiEXT
glGetTexParameterIivEXT
glGetTexParameterIuivEXT
glTexParameterIivEXT
glTexParameterIuivEXT
glAreTexturesResidentEXT
glBindTextureEXT
glDeleteTexturesEXT
glGenTexturesEXT
glIsTextureEXT
glPrioritizeTexturesEXT
glTextureNormalEXT
glGetQueryObjecti64vEXT
glGetQueryObjectui64vEXT
glBeginTransformFeedbackEXT
glBindBufferBaseEXT
glBindBufferOffsetEXT
glBindBufferRangeEXT
glEndTransformFeedbackEXT
glGetTransformFeedbackVaryingEXT
glTransformFeedbackVaryingsEXT
glArrayElementEXT
glColorPointerEXT
glDrawArraysEXT
glEdgeFlagPointerEXT
glIndexPointerEXT
glNormalPointerEXT
glTexCoordPointerEXT
glVertexPointerEXT
glGetVertexAttribLdvEXT
glVertexArrayVertexAttribLOffsetEXT
glVertexAttribL1dEXT
glVertexAttribL1dvEXT
glVertexAttribL2dEXT
glVertexAttribL2dvEXT
glVertexAttribL3dEXT
glVertexAttribL3dvEXT
glVertexAttribL4dEXT
glVertexAttribL4dvEXT
glVertexAttribLPointerEXT
glBeginVertexShaderEXT
glBindLightParameterEXT
glBindMaterialParameterEXT
glBindParameterEXT
glBindTexGenParameterEXT
glBindTextureUnitParameterEXT
glBindVertexShaderEXT
glDeleteVertexShaderEXT
glDisableVariantClientStateEXT
glEnableVariantClientStateEXT
glEndVertexShaderEXT
glExtractComponentEXT
glGenSymbolsEXT
glGenVertexShadersEXT
glGetInvariantBooleanvEXT
glGetInvariantFloatvEXT
glGetInvariantIntegervEXT
glGetLocalConstantBooleanvEXT
glGetLocalConstantFloatvEXT
glGetLocalConstantIntegervEXT
glGetVariantBooleanvEXT
glGetVariantFloatvEXT
glGetVariantIntegervEXT
glGetVariantPointervEXT
glInsertComponentEXT
glIsVariantEnabledEXT
glSetInvariantEXT
glSetLocalConstantEXT
glShaderOp1EXT
glShaderOp2EXT
glShaderOp3EXT
glSwizzleEXT
glVariantPointerEXT
glVariantbvEXT
glVariantdvEXT
glVariantfvEXT
glVariantivEXT
glVariantsvEXT
glVariantubvEXT
glVariantuivEXT
glVariantusvEXT
glWriteMaskEXT
glVertexWeightPointerEXT
glVertexWeightfEXT
glVertexWeightfvEXT
glWindowRectanglesEXT
glImportSyncEXT
glFrameTerminatorGREMEDY
glStringMarkerGREMEDY
glGetImageTransformParameterfvHP
glGetImageTransformParameterivHP
glImageTransformParameterfHP
glImageTransformParameterfvHP
glImageTransformParameteriHP
glImageTransformParameterivHP
glMultiModeDrawArraysIBM
glMultiModeDrawElementsIBM
glColorPointerListIBM
glEdgeFlagPointerListIBM
glFogCoordPointerListIBM
glIndexPointerListIBM
glNormalPointerListIBM
glSecondaryColorPointerListIBM
glTexCoordPointerListIBM
glVertexPointerListIBM
glMapTexture2DINTEL
glSyncTextureINTEL
glUnmapTexture2DINTEL
glColorPointervINTEL
glNormalPointervINTEL
glTexCoordPointervINTEL
glVertexPointervINTEL
glBeginPerfQueryINTEL
glCreatePerfQueryINTEL
glDeletePerfQueryINTEL
glEndPerfQueryINTEL
glGetFirstPerfQueryIdINTEL
glGetNextPerfQueryIdINTEL
glGetPerfCounterInfoINTEL
glGetPerfQueryDataINTEL
glGetPerfQueryIdByNameINTEL
glGetPerfQueryInfoINTEL
glTexScissorFuncINTEL
glTexScissorINTEL
glBlendBarrierKHR
glDebugMessageCallback
glDebugMessageControl
glDebugMessageInsert
glGetDebugMessageLog
glGetObjectLabel
glGetObjectPtrLabel
glObjectLabel
glObjectPtrLabel
glPopDebugGroup
glPushDebugGroup
glGetnUniformfv
glGetnUniformiv
glGetnUniformuiv
glReadnPixels
glBufferRegionEnabled
glDeleteBufferRegion
glDrawBufferRegion
glNewBufferRegion
glReadBufferRegion
glResizeBuffersMESA
glWindowPos2dMESA
glWindowPos2dvMESA
glWindowPos2fMESA
glWindowPos2fvMESA
glWindowPos2iMESA
glWindowPos2ivMESA
glWindowPos2sMESA
glWindowPos2svMESA
glWindowPos3dMESA
glWindowPos3dvMESA
glWindowPos3fMESA
glWindowPos3fvMESA
glWindowPos3iMESA
glWindowPos3ivMESA
glWindowPos3sMESA
glWindowPos3svMESA
glWindowPos4dMESA
glWindowPos4dvMESA
glWindowPos4fMESA
glWindowPos4fvMESA
glWindowPos4iMESA
glWindowPos4ivMESA
glWindowPos4sMESA
glWindowPos4svMESA
glBeginConditionalRenderNVX
glEndConditionalRenderNVX
glLGPUCopyImageSubDataNVX
glLGPUInterlockNVX
glLGPUNamedBufferSubDataNVX
glMultiDrawArraysIndirectBindlessNV
glMultiDrawElementsIndirectBindlessNV
glMultiDrawArraysIndirectBindlessCountNV
glMultiDrawElementsIndirectBindlessCountNV
glGetImageHandleNV
glGetTextureHandleNV
glGetTextureSamplerHandleNV
glIsImageHandleResidentNV
glIsTextureHandleResidentNV
glMakeImageHandleNonResidentNV
glMakeImageHandleResidentNV
glMakeTextureHandleNonResidentNV
glMakeTextureHandleResidentNV
glProgramUniformHandleui64NV
glProgramUniformHandleui64vNV
glUniformHandleui64NV
glUniformHandleui64vNV
glBlendBarrierNV
glBlendParameteriNV
glViewportPositionWScaleNV
glCallCommandListNV
glCommandListSegmentsNV
glCompileCommandListNV
glCreateCommandListsNV
glCreateStatesNV
glDeleteCommandListsNV
glDeleteStatesNV
glDrawCommandsAddressNV
glDrawCommandsNV
glDrawCommandsStatesAddressNV
glDrawCommandsStatesNV
glGetCommandHeaderNV
glGetStageIndexNV
glIsCommandListNV
glIsStateNV
glListDrawCommandsStatesClientNV
glStateCaptureNV
glBeginConditionalRenderNV
glEndConditionalRenderNV
glSubpixelPrecisionBiasNV
glConservativeRasterParameterfNV
glConservativeRasterParameteriNV
glCopyImageSubDataNV
glClearDepthdNV
glDepthBoundsdNV
glDepthRangedNV
glDrawTextureNV
glDrawVkImageNV
glGetVkProcAddrNV
glSignalVkFenceNV
glSignalVkSemaphoreNV
glWaitVkSemaphoreNV
glEvalMapsNV
glGetMapAttribParameterfvNV
glGetMapAttribParameterivNV
glGetMapControlPointsNV
glGetMapParameterfvNV
glGetMapParameterivNV
glMapControlPointsNV
glMapParameterfvNV
glMapParameterivNV
glGetMultisamplefvNV
glSampleMaskIndexedNV
glTexRenderbufferNV
glDeleteFencesNV
glFinishFenceNV
glGenFencesNV
glGetFenceivNV
glIsFenceNV
glSetFenceNV
glTestFenceNV
glFragmentCoverageColorNV
glGetProgramNamedParameterdvNV
glGetProgramNamedParameterfvNV
glProgramNamedParameter4dNV
glProgramNamedParameter4dvNV
glProgramNamedParameter4fNV
glProgramNamedParameter4fvNV
glRenderbufferStorageMultisampleCoverageNV
glProgramVertexLimitNV
glMulticastBarrierNV
glMulticastBlitFramebufferNV
glMulticastBufferSubDataNV
glMulticastCopyBufferSubDataNV
glMulticastCopyImageSubDataNV
glMulticastFramebufferSampleLocationsfvNV
glMulticastGetQueryObjecti64vNV
glMulticastGetQueryObjectivNV
glMulticastGetQueryObjectui64vNV
glMulticastGetQueryObjectuivNV
glMulticastWaitSyncNV
glRenderGpuMaskNV
glProgramEnvParameterI4iNV
glProgramEnvParameterI4ivNV
glProgramEnvParameterI4uiNV
glProgramEnvParameterI4uivNV
glProgramEnvParametersI4ivNV
glProgramEnvParametersI4uivNV
glProgramLocalParameterI4iNV
glProgramLocalParameterI4ivNV
glProgramLocalParameterI4uiNV
glProgramLocalParameterI4uivNV
glProgramLocalParametersI4ivNV
glProgramLocalParametersI4uivNV
glGetUniformi64vNV
glGetUniformui64vNV
glProgramUniform1i64NV
glProgramUniform1i64vNV
glProgramUniform1ui64NV
glProgramUniform1ui64vNV
glProgramUniform2i64NV
glProgramUniform2i64vNV
glProgramUniform2ui64NV
glProgramUniform2ui64vNV
glProgramUniform3i64NV
glProgramUniform3i64vNV
glProgramUniform3ui64NV
glProgramUniform3ui64vNV
glProgramUniform4i64NV
glProgramUniform4i64vNV
glProgramUniform4ui64NV
glProgramUniform4ui64vNV
glUniform1i64NV
glUniform1i64vNV
glUniform1ui64NV
glUniform1ui64vNV
glUniform2i64NV
glUniform2i64vNV
glUniform2ui64NV
glUniform2ui64vNV
glUniform3i64NV
glUniform3i64vNV
glUniform3ui64NV
glUniform3ui64vNV
glUniform4i64NV
glUniform4i64vNV
glUniform4ui64NV
glUniform4ui64vNV
glColor3hNV
glColor3hvNV
glColor4hNV
glColor4hvNV
glFogCoordhNV
glFogCoordhvNV
glMultiTexCoord1hNV
glMultiTexCoord1hvNV
glMultiTexCoord2hNV
glMultiTexCoord2hvNV
glMultiTexCoord3hNV
glMultiTexCoord3hvNV
glMultiTexCoord4hNV
glMultiTexCoord4hvNV
glNormal3hNV
glNormal3hvNV
glSecondaryColor3hNV
glSecondaryColor3hvNV
glTexCoord1hNV
glTexCoord1hvNV
glTexCoord2hNV
glTexCoord2hvNV
glTexCoord3hNV
glTexCoord3hvNV
glTexCoord4hNV
glTexCoord4hvNV
glVertex2hNV
glVertex2hvNV
glVertex3hNV
glVertex3hvNV
glVertex4hNV
glVertex4hvNV
glVertexAttrib1hNV
glVertexAttrib1hvNV
glVertexAttrib2hNV
glVertexAttrib2hvNV
glVertexAttrib3hNV
glVertexAttrib3hvNV
glVertexAttrib4hNV
glVertexAttrib4hvNV
glVertexAttribs1hvNV
glVertexAttribs2hvNV
glVertexAttribs3hvNV
glVertexAttribs4hvNV
glVertexWeighthNV
glVertexWeighthvNV
glGetInternalformatSampleivNV
glBeginOcclusionQueryNV
glDeleteOcclusionQueriesNV
glEndOcclusionQueryNV
glGenOcclusionQueriesNV
glGetOcclusionQueryivNV
glGetOcclusionQueryuivNV
glIsOcclusionQueryNV
glProgramBufferParametersIivNV
glProgramBufferParametersIuivNV
glProgramBufferParametersfvNV
glCopyPathNV
glCoverFillPathInstancedNV
glCoverFillPathNV
glCoverStrokePathInstancedNV
glCoverStrokePathNV
glDeletePathsNV
glGenPathsNV
glGetPathColorGenfvNV
glGetPathColorGenivNV
glGetPathCommandsNV
glGetPathCoordsNV
glGetPathDashArrayNV
glGetPathLengthNV
glGetPathMetricRangeNV
glGetPathMetricsNV
glGetPathParameterfvNV
glGetPathParameterivNV
glGetPathSpacingNV
glGetPathTexGenfvNV
glGetPathTexGenivNV
glGetProgramResourcefvNV
glInterpolatePathsNV
glIsPathNV
glIsPointInFillPathNV
glIsPointInStrokePathNV
glMatrixLoad3x2fNV
glMatrixLoad3x3fNV
glMatrixLoadTranspose3x3fNV
glMatrixMult3x2fNV
glMatrixMult3x3fNV
glMatrixMultTranspose3x3fNV
glPathColorGenNV
glPathCommandsNV
glPathCoordsNV
glPathCoverDepthFuncNV
glPathDashArrayNV
glPathFogGenNV
glPathGlyphIndexArrayNV
glPathGlyphIndexRangeNV
glPathGlyphRangeNV
glPathGlyphsNV
glPathMemoryGlyphIndexArrayNV
glPathParameterfNV
glPathParameterfvNV
glPathParameteriNV
glPathParameterivNV
glPathStencilDepthOffsetNV
glPathStencilFuncNV
glPathStringNV
glPathSubCommandsNV
glPathSubCoordsNV
glPathTexGenNV
glPointAlongPathNV
glProgramPathFragmentInputGenNV
glStencilFillPathInstancedNV
glStencilFillPathNV
glStencilStrokePathInstancedNV
glStencilStrokePathNV
glStencilThenCoverFillPathInstancedNV
glStencilThenCoverFillPathNV
glStencilThenCoverStrokePathInstancedNV
glStencilThenCoverStrokePathNV
glTransformPathNV
glWeightPathsNV
glFlushPixelDataRangeNV
glPixelDataRangeNV
glPointParameteriNV
glPointParameterivNV
glGetVideoi64vNV
glGetVideoivNV
glGetVideoui64vNV
glGetVideouivNV
glPresentFrameDualFillNV
glPresentFrameKeyedNV
glPrimitiveRestartIndexNV
glPrimitiveRestartNV
glCombinerInputNV
glCombinerOutputNV
glCombinerParameterfNV
glCombinerParameterfvNV
glCombinerParameteriNV
glCombinerParameterivNV
glFinalCombinerInputNV
glGetCombinerInputParameterfvNV
glGetCombinerInputParameterivNV
glGetCombinerOutputParameterfvNV
glGetCombinerOutputParameterivNV
glGetFinalCombinerInputParameterfvNV
glGetFinalCombinerInputParameterivNV
glCombinerStageParameterfvNV
glGetCombinerStageParameterfvNV
glFramebufferSampleLocationsfvNV
glNamedFramebufferSampleLocationsfvNV
glGetBufferParameterui64vNV
glGetIntegerui64vNV
glGetNamedBufferParameterui64vNV
glIsBufferResidentNV
glIsNamedBufferResidentNV
glMakeBufferNonResidentNV
glMakeBufferResidentNV
glMakeNamedBufferNonResidentNV
glMakeNamedBufferResidentNV
glProgramUniformui64NV
glProgramUniformui64vNV
glUniformui64NV
glUniformui64vNV
glTextureBarrierNV
glTexImage2DMultisampleCoverageNV
glTexImage3DMultisampleCoverageNV
glTextureImage2DMultisampleCoverageNV
glTextureImage2DMultisampleNV
glTextureImage3DMultisampleCoverageNV
glTextureImage3DMultisampleNV
glActiveVaryingNV
glBeginTransformFeedbackNV
glBindBufferBaseNV
glBindBufferOffsetNV
glBindBufferRangeNV
glEndTransformFeedbackNV
glGetActiveVaryingNV
glGetTransformFeedbackVaryingNV
glGetVaryingLocationNV
glTransformFeedbackAttribsNV
glTransformFeedbackVaryingsNV
glBindTransformFeedbackNV
glDeleteTransformFeedbacksNV
glDrawTransformFeedbackNV
glGenTransformFeedbacksNV
glIsTransformFeedbackNV
glPauseTransformFeedbackNV
glResumeTransformFeedbackNV
glVDPAUFiniNV
glVDPAUGetSurfaceivNV
glVDPAUInitNV
glVDPAUIsSurfaceNV
glVDPAUMapSurfacesNV
glVDPAURegisterOutputSurfaceNV
glVDPAURegisterVideoSurfaceNV
glVDPAUSurfaceAccessNV
glVDPAUUnmapSurfacesNV
glVDPAUUnregisterSurfaceNV
glFlushVertexArrayRangeNV
glVertexArrayRangeNV
glGetVertexAttribLi64vNV
glGetVertexAttribLui64vNV
glVertexAttribL1i64NV
glVertexAttribL1i64vNV
glVertexAttribL1ui64NV
glVertexAttribL1ui64vNV
glVertexAttribL2i64NV
glVertexAttribL2i64vNV
glVertexAttribL2ui64NV
glVertexAttribL2ui64vNV
glVertexAttribL3i64NV
glVertexAttribL3i64vNV
glVertexAttribL3ui64NV
glVertexAttribL3ui64vNV
glVertexAttribL4i64NV
glVertexAttribL4i64vNV
glVertexAttribL4ui64NV
glVertexAttribL4ui64vNV
glVertexAttribLFormatNV
glBufferAddressRangeNV
glColorFormatNV
glEdgeFlagFormatNV
glFogCoordFormatNV
glGetIntegerui64i_vNV
glIndexFormatNV
glNormalFormatNV
glSecondaryColorFormatNV
glTexCoordFormatNV
glVertexAttribFormatNV
glVertexAttribIFormatNV
glVertexFormatNV
glAreProgramsResidentNV
glBindProgramNV
glDeleteProgramsNV
glExecuteProgramNV
glGenProgramsNV
glGetProgramParameterdvNV
glGetProgramParameterfvNV
glGetProgramStringNV
glGetProgramivNV
glGetTrackMatrixivNV
glGetVertexAttribPointervNV
glGetVertexAttribdvNV
glGetVertexAttribfvNV
glGetVertexAttribivNV
glIsProgramNV
glLoadProgramNV
glProgramParameter4dNV
glProgramParameter4dvNV
glProgramParameter4fNV
glProgramParameter4fvNV
glProgramParameters4dvNV
glProgramParameters4fvNV
glRequestResidentProgramsNV
glTrackMatrixNV
glVertexAttrib1dNV
glVertexAttrib1dvNV
glVertexAttrib1fNV
glVertexAttrib1fvNV
glVertexAttrib1sNV
glVertexAttrib1svNV
glVertexAttrib2dNV
glVertexAttrib2dvNV
glVertexAttrib2fNV
glVertexAttrib2fvNV
glVertexAttrib2sNV
glVertexAttrib2svNV
glVertexAttrib3dNV
glVertexAttrib3dvNV
glVertexAttrib3fNV
glVertexAttrib3fvNV
glVertexAttrib3sNV
glVertexAttrib3svNV
glVertexAttrib4dNV
glVertexAttrib4dvNV
glVertexAttrib4fNV
glVertexAttrib4fvNV
glVertexAttrib4sNV
glVertexAttrib4svNV
glVertexAttrib4ubNV
glVertexAttrib4ubvNV
glVertexAttribPointerNV
glVertexAttribs1dvNV
glVertexAttribs1fvNV
glVertexAttribs1svNV
glVertexAttribs2dvNV
glVertexAttribs2fvNV
glVertexAttribs2svNV
glVertexAttribs3dvNV
glVertexAttribs3fvNV
glVertexAttribs3svNV
glVertexAttribs4dvNV
glVertexAttribs4fvNV
glVertexAttribs4svNV
glVertexAttribs4ubvNV
glBeginVideoCaptureNV
glBindVideoCaptureStreamBufferNV
glBindVideoCaptureStreamTextureNV
glEndVideoCaptureNV
glGetVideoCaptureStreamdvNV
glGetVideoCaptureStreamfvNV
glGetVideoCaptureStreamivNV
glGetVideoCaptureivNV
glVideoCaptureNV
glVideoCaptureStreamParameterdvNV
glVideoCaptureStreamParameterfvNV
glVideoCaptureStreamParameterivNV
glViewportSwizzleNV
glClearDepthfOES
glClipPlanefOES
glDepthRangefOES
glFrustumfOES
glGetClipPlanefOES
glOrthofOES
glFramebufferTextureMultiviewOVR
glAlphaFuncx
glClearColorx
glClearDepthx
glColor4x
glDepthRangex
glFogx
glFogxv
glFrustumf
glFrustumx
glLightModelx
glLightModelxv
glLightx
glLightxv
glLineWidthx
glLoadMatrixx
glMaterialx
glMaterialxv
glMultMatrixx
glMultiTexCoord4x
glNormal3x
glOrthof
glOrthox
glPointSizex
glPolygonOffsetx
glRotatex
glSampleCoveragex
glScalex
glTexEnvx
glTexEnvxv
glTexParameterx
glTranslatex
glClipPlanef
glClipPlanex
glGetClipPlanef
glGetClipPlanex
glGetFixedv
glGetLightxv
glGetMaterialxv
glGetTexEnvxv
glGetTexParameterxv
glPointParameterx
glPointParameterxv
glPointSizePointerOES
glTexParameterxv
glErrorStringREGAL
glGetExtensionREGAL
glIsSupportedREGAL
glLogMessageCallbackREGAL
glGetProcAddressREGAL
glDetailTexFuncSGIS
glGetDetailTexFuncSGIS
glFogFuncSGIS
glGetFogFuncSGIS
glSampleMaskSGIS
glSamplePatternSGIS
glGetSharpenTexFuncSGIS
glSharpenTexFuncSGIS
glTexImage4DSGIS
glTexSubImage4DSGIS
glGetTexFilterFuncSGIS
glTexFilterFuncSGIS
glAsyncMarkerSGIX
glDeleteAsyncMarkersSGIX
glFinishAsyncSGIX
glGenAsyncMarkersSGIX
glIsAsyncMarkerSGIX
glPollAsyncSGIX
glFlushRasterSGIX
glTextureFogSGIX
glFragmentColorMaterialSGIX
glFragmentLightModelfSGIX
glFragmentLightModelfvSGIX
glFragmentLightModeliSGIX
glFragmentLightModelivSGIX
glFragmentLightfSGIX
glFragmentLightfvSGIX
glFragmentLightiSGIX
glFragmentLightivSGIX
glFragmentMaterialfSGIX
glFragmentMaterialfvSGIX
glFragmentMaterialiSGIX
glFragmentMaterialivSGIX
glGetFragmentLightfvSGIX
glGetFragmentLightivSGIX
glGetFragmentMaterialfvSGIX
glGetFragmentMaterialivSGIX
glFrameZoomSGIX
glPixelTexGenSGIX
glReferencePlaneSGIX
glSpriteParameterfSGIX
glSpriteParameterfvSGIX
glSpriteParameteriSGIX
glSpriteParameterivSGIX
glTagSampleBufferSGIX
glColorTableParameterfvSGI
glColorTableParameterivSGI
glColorTableSGI
glCopyColorTableSGI
glGetColorTableParameterfvSGI
glGetColorTableParameterivSGI
glGetColorTableSGI
glFinishTextureSUNX
glGlobalAlphaFactorbSUN
glGlobalAlphaFactordSUN
glGlobalAlphaFactorfSUN
glGlobalAlphaFactoriSUN
glGlobalAlphaFactorsSUN
glGlobalAlphaFactorubSUN
glGlobalAlphaFactoruiSUN
glGlobalAlphaFactorusSUN
glReadVideoPixelsSUN
glReplacementCodePointerSUN
glReplacementCodeubSUN
glReplacementCodeubvSUN
glReplacementCodeuiSUN
glReplacementCodeuivSUN
glReplacementCodeusSUN
glReplacementCodeusvSUN
glColor3fVertex3fSUN
glColor3fVertex3fvSUN
glColor4fNormal3fVertex3fSUN
glColor4fNormal3fVertex3fvSUN
glColor4ubVertex2fSUN
glColor4ubVertex2fvSUN
glColor4ubVertex3fSUN
glColor4ubVertex3fvSUN
glNormal3fVertex3fSUN
glNormal3fVertex3fvSUN
glReplacementCodeuiColor3fVertex3fSUN
glReplacementCodeuiColor3fVertex3fvSUN
glReplacementCodeuiColor4fNormal3fVertex3fSUN
glReplacementCodeuiColor4fNormal3fVertex3fvSUN
glReplacementCodeuiColor4ubVertex3fSUN
glReplacementCodeuiColor4ubVertex3fvSUN
glReplacementCodeuiNormal3fVertex3fSUN
glReplacementCodeuiNormal3fVertex3fvSUN
glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN
glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN
glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN
glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN
glReplacementCodeuiTexCoord2fVertex3fSUN
glReplacementCodeuiTexCoord2fVertex3fvSUN
glReplacementCodeuiVertex3fSUN
glReplacementCodeuiVertex3fvSUN
glTexCoord2fColor3fVertex3fSUN
glTexCoord2fColor3fVertex3fvSUN
glTexCoord2fColor4fNormal3fVertex3fSUN
glTexCoord2fColor4fNormal3fVertex3fvSUN
glTexCoord2fColor4ubVertex3fSUN
glTexCoord2fColor4ubVertex3fvSUN
glTexCoord2fNormal3fVertex3fSUN
glTexCoord2fNormal3fVertex3fvSUN
glTexCoord2fVertex3fSUN
glTexCoord2fVertex3fvSUN
glTexCoord4fColor4fNormal3fVertex4fSUN
glTexCoord4fColor4fNormal3fVertex4fvSUN
glTexCoord4fVertex4fSUN
glTexCoord4fVertex4fvSUN
glAddSwapHintRectWIN
wglSetStereoEmitterState3DL
wglBlitContextFramebufferAMD
wglCreateAssociatedContextAMD
wglCreateAssociatedContextAttribsAMD
wglDeleteAssociatedContextAMD
wglGetContextGPUIDAMD
wglGetCurrentAssociatedContextAMD
wglGetGPUIDsAMD
wglGetGPUInfoAMD
wglMakeAssociatedContextCurrentAMD
wglCreateBufferRegionARB
wglDeleteBufferRegionARB
wglRestoreBufferRegionARB
wglSaveBufferRegionARB
wglCreateContextAttribsARB
wglGetExtensionsStringARB
wglGetCurrentReadDCARB
wglMakeContextCurrentARB
wglCreatePbufferARB
wglDestroyPbufferARB
wglGetPbufferDCARB
wglQueryPbufferARB
wglReleasePbufferDCARB
wglChoosePixelFormatARB
wglGetPixelFormatAttribfvARB
wglGetPixelFormatAttribivARB
wglBindTexImageARB
wglReleaseTexImageARB
wglSetPbufferAttribARB
wglBindDisplayColorTableEXT
wglCreateDisplayColorTableEXT
wglDestroyDisplayColorTableEXT
wglLoadDisplayColorTableEXT
wglGetExtensionsStringEXT
wglGetCurrentReadDCEXT
wglMakeContextCurrentEXT
wglCreatePbufferEXT
wglDestroyPbufferEXT
wglGetPbufferDCEXT
wglQueryPbufferEXT
wglReleasePbufferDCEXT
wglChoosePixelFormatEXT
wglGetPixelFormatAttribfvEXT
wglGetPixelFormatAttribivEXT
wglGetSwapIntervalEXT
wglSwapIntervalEXT
wglGetDigitalVideoParametersI3D
wglSetDigitalVideoParametersI3D
wglGetGammaTableI3D
wglGetGammaTableParametersI3D
wglSetGammaTableI3D
wglSetGammaTableParametersI3D
wglDisableGenlockI3D
wglEnableGenlockI3D
wglGenlockSampleRateI3D
wglGenlockSourceDelayI3D
wglGenlockSourceEdgeI3D
wglGenlockSourceI3D
wglGetGenlockSampleRateI3D
wglGetGenlockSourceDelayI3D
wglGetGenlockSourceEdgeI3D
wglGetGenlockSourceI3D
wglIsEnabledGenlockI3D
wglQueryGenlockMaxSourceDelayI3D
wglAssociateImageBufferEventsI3D
wglCreateImageBufferI3D
wglDestroyImageBufferI3D
wglReleaseImageBufferEventsI3D
wglDisableFrameLockI3D
wglEnableFrameLockI3D
wglIsEnabledFrameLockI3D
wglQueryFrameLockMasterI3D
wglBeginFrameTrackingI3D
wglEndFrameTrackingI3D
wglGetFrameUsageI3D
wglQueryFrameTrackingI3D
wglDXCloseDeviceNV
wglDXLockObjectsNV
wglDXObjectAccessNV
wglDXOpenDeviceNV
wglDXRegisterObjectNV
wglDXSetResourceShareHandleNV
wglDXUnlockObjectsNV
wglDXUnregisterObjectNV
wglCopyImageSubDataNV
wglDelayBeforeSwapNV
wglCreateAffinityDCNV
wglDeleteDCNV
wglEnumGpuDevicesNV
wglEnumGpusFromAffinityDCNV
wglEnumGpusNV
wglBindVideoDeviceNV
wglEnumerateVideoDevicesNV
wglQueryCurrentContextNV
wglBindSwapBarrierNV
wglJoinSwapGroupNV
wglQueryFrameCountNV
wglQueryMaxSwapGroupsNV
wglQuerySwapGroupNV
wglResetFrameCountNV
wglAllocateMemoryNV
wglFreeMemoryNV
wglBindVideoCaptureDeviceNV
wglEnumerateVideoCaptureDevicesNV
wglLockVideoCaptureDeviceNV
wglQueryVideoCaptureDeviceNV
wglReleaseVideoCaptureDeviceNV
wglBindVideoImageNV
wglGetVideoDeviceNV
wglGetVideoInfoNV
wglReleaseVideoDeviceNV
wglReleaseVideoImageNV
wglSendPbufferToVideoNV
wglGetMscRateOML
wglGetSyncValuesOML
wglSwapBuffersMscOML
wglSwapLayerBuffersMscOML
wglWaitForMscOML
wglWaitForSbcOML
WGL_3DFX_multisample
WGL_3DL_stereo_control
WGL_AMD_gpu_association
WGL_ARB_buffer_region
WGL_ARB_context_flush_control
WGL_ARB_create_context
WGL_ARB_create_context_profile
WGL_ARB_create_context_robustness
WGL_ARB_extensions_string
WGL_ARB_framebuffer_sRGB
WGL_ARB_make_current_read
WGL_ARB_multisample
WGL_ARB_pbuffer
WGL_ARB_pixel_format
WGL_ARB_pixel_format_float
WGL_ARB_render_texture
WGL_ARB_robustness_application_isolation
WGL_ARB_robustness_share_group_isolation
WGL_ATI_pixel_format_float
WGL_ATI_render_texture_rectangle
WGL_EXT_create_context_es2_profile
WGL_EXT_create_context_es_profile
WGL_EXT_depth_float
WGL_EXT_display_color_table
WGL_EXT_extensions_string
WGL_EXT_framebuffer_sRGB
WGL_EXT_make_current_read
WGL_EXT_multisample
WGL_EXT_pbuffer
WGL_EXT_pixel_format
WGL_EXT_pixel_format_packed_float
WGL_EXT_swap_control
WGL_EXT_swap_control_tear
WGL_I3D_digital_video_control
WGL_I3D_gamma
WGL_I3D_genlock
WGL_I3D_image_buffer
WGL_I3D_swap_frame_lock
WGL_I3D_swap_frame_usage
WGL_NV_DX_interop
WGL_NV_DX_interop2
WGL_NV_copy_image
WGL_NV_delay_before_swap
WGL_NV_float_buffer
WGL_NV_gpu_affinity
WGL_NV_multisample_coverage
WGL_NV_present_video
WGL_NV_render_depth_texture
WGL_NV_render_texture_rectangle
WGL_NV_swap_group
WGL_NV_vertex_array_range
WGL_NV_video_capture
WGL_NV_video_output
WGL_OML_sync_control
debug
libzmq
FATAL ERROR: OUT OF MEMORY (%s:%d)\n
FATAL ERROR: OUT OF MEMORY
%s (%s:%d)\n
__fd
Not supported
Protocol not supported
No buffer space available
Network is down
Address in use
Address not available
Connection refused
Operation in progress
Operation cannot be accomplished in current state
The protocol is not compatible with the socket type
Context was terminated
No thread available
Host unreachable
No Error
Interrupted system call
Bad file number
Permission denied
Bad address
Invalid argument
Too many open files
Operation now in progress
Operation already in progress
Socket operation on non-socket
Destination address required
Message too long
Protocol wrong type for socket
Bas protocol option
Socket type not supported
Operation not supported on socket
Protocol family not supported
Address family not supported by protocol family
Address already in use
Can't assign requested address
Network is unreachable
Net dropped connection or reset
Software caused connection abort
Connection reset by peer
Socket is already connected
Socket is not connected
Can't send after socket shutdown
Too many references can't splice
Connection timed out
Too many levels of symbolic links
File name too long
Host is down
No Route to Host
Directory not empty
Too many processes
Too many users
Disc Quota Exceeded
Stale NFS file handle
Too many levels of remote in path
Network SubSystem is unavailable
WINSOCK DLL Version out of range
Successful WSASTARTUP not yet performed
Host not found
Non-Authoritative Host not found
Non-Recoverable errors: FORMERR REFUSED NOTIMP
Valid name no data record of requested
error not defined
Assertion failed: %s (%s:%d)\n
Assertion failed: %s [%i] (%s:%d)\n
_sockets.empty ()
cmd.type == command_t::done
ZMQbg/
written
Kernel32.dll
GetTickCount64
_mailbox
_destroyed
uri_ != NULL
inproc
epgm
norm
_reaper_signaler
errno == EAGAIN
options.recv_routing_id
_out_pipes.empty ()
it != _out_pipes.end ()
!it->second.active
erased
Identity
NULL != data_
data_ != NULL || size_ == 0
_u.zclmsg.content->ffn
check ()
refs_ >= 0
_u.base.metadata == NULL
rc == 0
LOBYTE (wsa_data.wVersion) == 2 && HIBYTE (wsa_data.wVersion) == 2
expand 32-byte k
D7q/;M
}\fUo
+Yo,
\ng))
&\8!
Ts\ne
* qW
LwH'
L*~e
!_owner
!_terminating
_term_acks > 0
_owned.empty ()
fd_ != retired_fd
fd_entry.fd != retired_fd
retired == 1
get_load () == 0
rc != WSA_WAIT_IO_COMPLETION
xvalue.check ()
_back->check ()
_front->check ()
!_peer
!_sink
msg.flags () & msg_t::more
_out_pipe
pipe_
_state == active || _state == delimiter_received || _state == term_req_sent1
_sink
_state == term_ack_sent || _state == term_req_sent2
_state == active || _state == waiting_for_delimiter
_poller
_mailbox_handle
_mailbox.valid ()
sa_ && sa_len_ > 0
tcp://[
tcp://
_address_mask != -1 && ss_ != NULL && ss_len_ >= static_cast<socklen_t> (sizeof (struct sockaddr))
ss_len_ == sizeof (struct sockaddr_in6)
ss_len_ == sizeof (struct sockaddr_in)
nbytes == sizeof (dummy)
rc == 1
pfd.revents & POLLIN
dummy == 0
_s == retired_fd
!_handle
io_thread
_s != retired_fd
!_pipe
!_zap_pipe
!is_terminating ()
_pipe != NULL
pipe_ == _pipe || pipe_ == _zap_pipe || _terminating_pipes.count (pipe_) == 1
_terminating_pipes.count (pipe_) == 1
inproc://zeromq.zap.01
peer.options.type == ZMQ_REP || peer.options.type == ZMQ_ROUTER || peer.options.type == ZMQ_SERVER
engine_ != NULL
!_engine
reason_ == stream_engine_t::connection_error || reason_ == stream_engine_t::timeout_error || reason_ == stream_engine_t::protocol_error
!_pending
!_has_linger_timer
id_ == linger_timer_id
_pipe
_active
options.type == ZMQ_DISH || options.type == ZMQ_RADIO || options.type == ZMQ_DGRAM
pipe_ != NULL
_live_nodes == 0
_live_nodes > 0
_count > 1
new_min == new_max
new_min >= _min && new_min < _min + _count
node
new_max - new_min + 1 > 1
new_min > _min || new_max < _min + _count - 1
new_min >= _min
new_max <= _min + _count - 1
new_max - new_min + 1 < _count
request_id_copy
_reply_pipe
_anonymous_pipes.empty ()
!_current_out
pipe != NULL
!has_out_pipe (routing_id)
(_prefetched_msg.flags () & msg_t::more) == 0
JOIN
LEAVE
get_load () > 0
res != NULL
(size_t) res->ai_addrlen <= sizeof (*ip_addr_)
io_thread_
!_poller
!_plugged
!_session
session_
_metadata == NULL
_plugged
!_io_error
_decoder
processed <= _insize
_handshaking
n > 0
_input_stopped
_session != NULL
_decoder != NULL
_greeting_bytes_read < _greeting_size
_options.mechanism == ZMQ_NULL || _options.mechanism == ZMQ_PLAIN || _options.mechanism == ZMQ_CURVE || _options.mechanism == ZMQ_GSSAPI
PLAIN
GSSAPI
CURVE
buffer_size == header_size
NULL
PLAIN
CURVE
_mechanism != NULL
_session
!_has_handshake_timer
Peer-Address
PING
PONG
PING
PONG
SUBSCRIBE
CANCEL
_addr
_addr->protocol == protocol_name::tcp
!_connect_timer_started
!_reconnect_timer_started
id_ == reconnect_timer_id || id_ == connect_timer_id
_addr->resolved.tcp_addr != NULL
Operation would block
_status != unplugged && _status != waiting_for_reconnect_time
_status == waiting_for_proxy_connection || _status == sending_greeting || _status == sending_request
_greeting_encoder.has_pending_data ()
_request_encoder.has_pending_data ()
_status == waiting_for_reconnect_time
id_ == reconnect_timer_id
_proxy_addr->resolved.tcp_addr != NULL
address_
send_ || recv_
iface >= -1
in_address.ss_family == AF_INET
_next.node
erased == 1
_count > 0
_live_nodes > 1
i < _count
_pipes.empty ()
!_more
_next.table
_live_nodes == 1
new_min != _min
new_min > _min
_count > new_min - _min
new_count != _count
*buff_
in_progress () == NULL
size_ <= _to_read
PAIR
DEALER
ROUTER
PULL
PUSH
XPUB
XSUB
STREAM
User-Id
socket_type_ >= 0 && socket_type_ < (int) names_count
name_len <= UCHAR_MAX
total_len <= ptr_capacity_
value_len_ <= 0x7FFFFFFF
Socket-Type
ERROR
READY
WELCOME
WELCOME
READY
INITIATE
^RROR
username.length () <= UCHAR_MAX
password.length () <= UCHAR_MAX
WELCOME
WELCOME
READY
INITIATE
^RROR
zap_required ()
status_code.length () == static_cast<size_t> (expected_status_code_len)
CurveZMQHELLO---
HELLO
CurveZMQINITIATE
size_ == 113 + 128 + crypto_box_BOXZEROBYTES + metadata_length_
INITIATE
WELCOME
READY
ERROR
CurveZMQMESSAGES
CurveZMQMESSAGEC
_state == connected
CurveZMQREADY---
state == ready
status_code.length () == 3
_bytes_read < 2
message_ready ()
hostname_.size () <= UINT8_MAX
req_.hostname.size () <= UINT8_MAX
atyp == 0x01 || atyp == 0x03 || atyp == 0x04
hint_
state == waiting_for_zap_reply
MESSAGE
#version 330\n\n#define WINDOWS\n
Error linking program:\n%s\n
glDepthFunc
glCullFace
glFrontFace
bcde
bedc
\n        attribute vec4 bcde;\n        attribute vec2 adcc;\n        uniform mat4 aaa;\n        uniform mat4 bcb;\n        varying vec2 bedb;\n        void main()\n        {\n            gl_Position = aaa*bcb*bcde;\n            bedb  = adcc;\n        }\n        
adcc
abce
bbac
\n        attribute vec4 bcde;\n        uniform vec3 caac;\n        uniform mat4 cb;\n        uniform mat4 bcb;\n        uniform float abce;\n        uniform float bbac;\n        varying vec3 acdb;\n        void main()\n        {\n            vec4 beb = bcb*bcde;\n            float bebb = sqrt(beb.x*beb.x + beb.y*beb.y + beb.z*beb.z);\n            gl_Position = cb * bcb * bcde;\n            gl_PointSize = 5.0;  \n            acdb = caac;\n            if (bebb > abce + bbac)\n                gl_PointSize = 0.0;\n            else if (bebb > abce)\n                gl_PointSize = gl_PointSize *\n                (1.0 - min(1.0, (beb.z - abce)/(bbac - abce))\n                 );\n        }\n        
\n#ifdef GLES\n        precision mediump float;\n#endif\n        varying vec3 acdb;\n        void main()\n        {\n            gl_FragColor = vec4(acdb, 1.0);\n        }\n        
caac
cbbe
acba
acbd
cbda
\n#ifdef GLES\n        precision mediump float;\n#endif\n        uniform sampler2D cab;\n        varying vec2 bedb;\n        uniform vec2 aea;\n        uniform vec2 acbd;\n        uniform vec2 cbda;\n        uniform vec2 bdbc;\n        uniform vec2 cbbe;\n        uniform vec2 acba;\n        void main()\n        {\n            float adbd = (bedb.x*aea.x + 0.5 - cbda.x)/acbd.x;\n            float cbdc = (bedb.y*aea.y + 0.5 - cbda.y)/acbd.y;\n            float acea = bdbc[0];\n            float cba = bdbc[1];\n            float aaaa = adbd;\n            float bdb = cbdc;\n            for (int j = 0; j < 10; j++)\n            {\n                float cbac = adbd * adbd + cbdc * cbdc;\n                float cacd = 1.0 + (cba*cbac + acea)*cbac;\n                adbd = aaaa / cacd;\n                cbdc = bdb / cacd;\n            }\n            vec2 caec = vec2( (adbd*cbbe.x + acba.x - 0.5)/aea.x,\n                                    (cbdc*cbbe.y + acba.y - 0.5)/aea.y);\n            bool bccd = (caec.x >= 0 && caec.x <= 1.0 && caec.y >= 0 && caec.y <= 1.0);\n            vec4 babd = bccd ? texture2D(cab, caec) : vec4(0,0,0,0);\n            gl_FragColor = vec4(babd.rgb, bccd);\n        }\n        
bdbc
adae
\n#ifdef GLES\n        precision mediump float;\n#endif\n        attribute vec4 bcde;\n        uniform mat4 aaa;\n        uniform mat4 bcb;\n        varying float acde;\n        void main()\n        {\n            vec4 beb = bcb*bcde;\n            gl_Position = aaa*beb;\n            acde = beb.z;\n        }\n        
\n#ifdef GLES\n        precision mediump float;\n#endif\n        varying float acde;\n        const float div_256 = 1.0/256.0;\n        const float div_255 = 1.0/255.0;\n        void main()\n        {\n            float depth_mm = acde * (1000.0);\n            gl_FragColor = vec4(floor(depth_mm * div_256) * div_255, mod(depth_mm, 256.0) * div_255, 0, 0);\n        }\n        
\n#ifdef GLES\n        precision mediump float;\n#endif\n        attribute vec4 bcde;\n        attribute vec2 adcc;\n        uniform sampler2D be;\n        uniform mat4 aaa;\n        uniform mat4 bcb;\n        uniform float cabc;\n        uniform float acee;\n        uniform float abca;\n        varying float acde;\n        varying float aaec;\n        varying mediump vec3 adeb;\n        void main()\n        {\n            const float caee = 0.001;\n            highp vec4 cbdd = texture2DLod(be, adcc, 0.0);\n            highp float baca = cbdd.r * caee;\n            vec4 caab;\n            caab.xyz = bcde.xyz * baca;\n            caab.w = bcde.w;\n            vec2 babe = vec2(adcc.x, adcc.y + abca);\n            highp vec4 aaba = texture2DLod(be, babe, 0.0);\n            float bdaa = aaba.r * caee;\n            babe = vec2(adcc.x, adcc.y - abca);\n            aaba = texture2DLod(be, babe, 0.0);\n            float bee = aaba.r * caee;\n            babe = vec2(adcc.x + acee, adcc.y);\n            aaba = texture2DLod(be, babe, 0.0);\n            float bcba = aaba.r * caee;\n            babe = vec2(adcc.x - acee, adcc.y);\n            aaba = texture2DLod(be, babe, 0.0);\n            float cbeb = aaba.r * caee;\n            bool bea = (cbeb > 0.0);\n            bool cbce = (bcba > 0.0);\n            bool abad = (bdaa > 0.0);\n            bool accd = (bee > 0.0);\n            highp vec3 aace = bcde.xyz * (bcba - baca);\n            aace.x = aace.x + bcba * cabc;\n            highp vec3 bbae = bcde.xyz * (bee - baca);\n            bbae.y = bbae.y - bee * cabc;\n            highp vec3 bdcb = bcde.xyz * (cbeb - baca);\n            bdcb.x = bdcb.x - cbeb * cabc;\n            highp vec3 aaad = bcde.xyz * (bdaa - baca);\n            aaad.y = aaad.y + bdaa * cabc;\n            highp vec3 zeroVec = vec3(0.0);\n            highp vec3 adba;\n            highp vec3 beca = cross(aaad, aace);\n            adba = (abad && cbce) ? normalize(beca) : zeroVec;\n            beca = cross(aace, bbae);\n            adba += (accd && cbce) ? normalize(beca) : zeroVec;\n            beca = cross(bbae, bdcb);\n            adba += (accd && bea) ? normalize(beca) : zeroVec;\n            beca = cross(bdcb , aaad);\n            adba += (bea && abad) ? normalize(beca) : zeroVec;\n            adba = normalize(adba);\n            adeb.x = bcb[0][0] * adba.x + bcb[1][0] * adba.y + bcb[2][0] * adba.z;\n            adeb.y = bcb[0][1] * adba.x + bcb[1][1] * adba.y + bcb[2][1] * adba.z;\n            adeb.z = bcb[0][2] * adba.x + bcb[1][2] * adba.y + bcb[2][2] * adba.z;\n            const float bbe = 0.05;\n            float adac = baca * bbe;\n            vec4 beb = bcb * caab;\n            gl_Position = aaa*beb;\n            aaec = (baca <= 0.0 ||                      \n                           gl_Position.z < 0.0 ||                \n                           length(adba) < 0.5 ||          \n                           (bea && (baca - cbeb) > adac) ||\n                           (cbce && (baca - bcba) > adac) ||\n                           (abad && (baca - bdaa) > adac) ||\n                           (accd && (baca - bee) > adac))\n                           ? 0.0 : 1.0;\n            acde = beb.z;\n        }\n        
\n#ifdef GLES\n        precision mediump float;\n#endif\n        varying float acde;\n        varying mediump vec3 adeb;\n        const float bdc = 1.0/256.0;\n        const float cbaa = 1.0/255.0;\n        uniform float abbb;  \n        varying vec2 aed;\n        varying float aaec;\n        void main()\n        {\n            if (aaec < 0.95)\n                discard;\n            float baed = acde ;\n            float abda = baed * abbb;\n            abda = (abda < 65536.0) ? abda : 0.0;  \n            abda = aaec < 0.95 ? 0.0 : abda;\n            vec3 normal = aaec < 0.95 ? vec3(0.0,0.0,0.0) : adeb;\n            gl_FragColor = vec4(floor(abda * bdc) * cbaa, mod(abda, 256.0) * cbaa, .5*(normal.x+1.0), .5*(normal.y+1.0));\n        }\n        
abbb
cabc
acee
abca
\n#ifdef GLES\n        precision mediump float;\n#endif\n        attribute vec4 bcde;\n        attribute vec2 adcc;\n        uniform sampler2D be;\n        uniform mat4 aaa;\n        uniform mat4 bcb;\n        uniform float cabc;\n        uniform float acee;\n        uniform float abca;\n        varying float aaec;\n        varying float cbec;\n        void main()\n        {\n            const float caee = 0.001;\n            highp vec4 cbdd = texture2DLod(be, adcc, 0.0);\n            highp float baca = cbdd.r * caee;\n            vec4 caab;\n            caab.xyz = bcde.xyz * baca;\n            caab.w = bcde.w;\n            vec2 babe = vec2(adcc.x, adcc.y + abca);\n            highp vec4 aaba = texture2DLod(be, babe, 0.0);\n            float bdaa = aaba.r * caee;\n            babe = vec2(adcc.x, adcc.y - abca);\n            aaba = texture2DLod(be, babe, 0.0);\n            float bee = aaba.r * caee;\n            babe = vec2(adcc.x + acee, adcc.y);\n            aaba = texture2DLod(be, babe, 0.0);\n            float bcba = aaba.r * caee;\n            babe = vec2(adcc.x - acee, adcc.y);\n            aaba = texture2DLod(be, babe, 0.0);\n            float cbeb = aaba.r * caee;\n            babe = vec2(adcc.x - acee, adcc.y + abca);\n            aaba = texture2DLod(be, babe, 0.0);\n            float cbea = aaba.r * caee;\n            babe = vec2(adcc.x + acee, adcc.y - abca);\n            aaba = texture2DLod(be, babe, 0.0);\n            float aeae = aaba.r * caee;\n            bool bea = (cbeb > 0.0);\n            bool cbce = (bcba > 0.0);\n            bool abad = (bdaa > 0.0);\n            bool accd = (bee > 0.0);\n            bool cbcb = (cbea > 0.0);\n            bool abdd = (aeae > 0.0);\n            highp vec3 aace = bcde.xyz * (bcba - baca);\n            aace.x = aace.x + bcba * cabc;\n            highp vec3 bbae = bcde.xyz * (bee - baca);\n            bbae.y = bbae.y - bee * cabc;\n            highp vec3 bdcb = bcde.xyz * (cbeb - baca);\n            bdcb.x = bdcb.x - cbeb * cabc;\n            highp vec3 aaad = bcde.xyz * (bdaa - baca);\n            aaad.y = aaad.y + bdaa * cabc;\n            highp vec3 zeroVec = vec3(0.0);\n            highp vec3 adba;\n            highp vec3 beca = cross(aaad, aace);\n            adba = (abad && cbce) ? normalize(beca) : zeroVec;\n            beca = cross(aace, bbae);\n            adba += (accd && cbce) ? normalize(beca) : zeroVec;\n            beca = cross(bbae, bdcb);\n            adba += (accd && bea) ? normalize(beca) : zeroVec;\n            beca = cross(bdcb , aaad);\n            adba += (bea && abad) ? normalize(beca) : zeroVec;\n            beca = normalize(adba);\n            vec3 adeb;\n            adeb.z = bcb[0][2] * beca.x + bcb[1][2] * beca.y + bcb[2][2] * beca.z;\n            const float bbe = 0.06;\n            float adac = baca * bbe;\n            vec4 beb = bcb * caab;\n            gl_Position = aaa*beb;\n            bool baab = (\n                             (abs(baca - bcba) > adac) ||\n                             (abs(baca - bee) > adac) ||\n                             (abs(baca - aeae) > adac)\n                             );\n            bool aedd = (\n                             (abs(baca - cbeb) > adac) ||\n                             (abs(baca - bdaa) > adac) ||\n                             (abs(baca - cbea) > adac)\n                             );\n            const float cabe = 16383.0;  \n            aaec = baab && !aedd ? 1.0 :  \n                          aedd && !baab ? -1.0 :  \n                          baab && aedd ? 0.0 :  \n                          cabe;  \n            const float aacc = -16383.0;\n            aaec = (baca <= 0.0 ||             \n                           length(adba) < 0.5 ||  \n                           gl_Position.z < 0.0)              \n                           ? aacc : aaec;\n            cbec = 0.5*abs(adeb.z) + 0.5;\n        }\n        
\n#ifdef GLES\n        precision mediump float;\n#endif\n        varying float cbec;\n        varying float aaec;\n        void main()\n        {\n            if (abs(aaec) < 1.0 || aaec < -2.0)\n                discard;\n            gl_FragColor = vec4(cbec, cbec, cbec, 1.0);\n        }\n        
\n#if defined(GLES) || defined(WINDOWS)\n        precision highp float;\n#endif\n        attribute vec4 bcde;\n#ifdef WINDOWS\n# define NORMAL_PRECISION highp\n#else\n# define NORMAL_PRECISION mediump\n#endif\n        attribute NORMAL_PRECISION vec3 adae;\n        uniform mat4 aaa;\n        uniform mat4 bcb;\n        varying NORMAL_PRECISION vec3 adeb;\n        varying float acde;\n        void main()\n        {\n            vec4 beb = bcb*bcde;\n            gl_Position = aaa*beb;\n            adeb.x = bcb[0][0] * adae.x + bcb[1][0] * adae.y + bcb[2][0] * adae.z;\n            adeb.y = bcb[0][1] * adae.x + bcb[1][1] * adae.y + bcb[2][1] * adae.z;\n            adeb.z = bcb[0][2] * adae.x + bcb[1][2] * adae.y + bcb[2][2] * adae.z;\n#if defined(WINDOWS)\n            adeb = normalize(adeb);\n#endif\n            acde = beb.z;\n        }\n        
\n#ifdef GLES\n        precision highp float;\n#endif\n#ifdef WINDOWS\n# define NORMAL_PRECISION highp\n#else\n# define NORMAL_PRECISION mediump\n#endif\n        varying NORMAL_PRECISION vec3 adeb;\n        varying float acde;\n        const float bdc = 1.0/256.0;\n        const float cbaa = 1.0/255.0;\n        uniform float abbb;  \n        void main()\n        {\n            float abda = acde * abbb;\n            abda = (abda < 65536.0) ? abda : 0.0;  \n            gl_FragColor = vec4(floor(abda * bdc) * cbaa, mod(abda, 256.0) * cbaa\n                                , .5*(adeb.x+1.0), .5*(adeb.y+1.0));\n        }\n        
\n#ifdef GLES\n        precision mediump float;\n#endif\n        attribute vec4 bcde;\n        attribute vec3 adae;\n        uniform mat4 aaa;\n        uniform mat4 bcb;\n        varying vec3 adeb;\n        varying float acde;\n        void main()\n        {\n            vec4 beb = bcb*bcde;\n            gl_Position = aaa*beb;\n            adeb.x = bcb[0][0] * adae.x + bcb[1][0] * adae.y + bcb[2][0] * adae.z;\n            adeb.y = bcb[0][1] * adae.x + bcb[1][1] * adae.y + bcb[2][1] * adae.z;\n            adeb.z = bcb[0][2] * adae.x + bcb[1][2] * adae.y + bcb[2][2] * adae.z;\n            acde = beb.z;\n        }\n        
\n#ifdef GLES\n        precision mediump float;\n#endif\n        varying vec3 adeb;\n        varying float acde;\n        const float bdc = 1.0/256.0;\n        const float cbaa = 1.0/255.0;\n        void main()\n        {\n            float baed = acde * (1000.0);\n            gl_FragColor = vec4(floor(baed * bdc) * cbaa, mod(baed, 256.0) * cbaa\n                                , .5*(adeb.x+1.0), .5*(adeb.y+1.0));\n        }\n        
\n#ifdef GLES\n        precision highp float;\n#endif\n        attribute vec4 bcde;\n        attribute vec4 bceb;\n        uniform mat4 aaa;\n        uniform mat4 bcb;\n        varying mediump vec4 cadc;\n        void main()\n        {\n            gl_Position = aaa *bcb *bcde;\n            cadc = bceb;\n        }\n        
\n#ifdef GLES\n        precision highp float;\n#endif\n        varying mediump vec4 cadc;\n        void main()\n        {\n            gl_FragColor = cadc;\n        }\n        
bceb
\n#ifdef GLES\n        precision highp float;\n#endif\n        attribute vec4 bcde;\n        attribute mediump vec3 adca;\n        uniform mat4 aaa;\n        uniform mat4 bcb;\n        varying mediump vec3 adeb;\n        void main()\n        {\n            gl_Position = aaa *bcb *bcde;\n            adeb = adca;\n        }\n        
\n#ifdef GLES\n        precision highp float;\n#endif\n        varying mediump vec3 adeb;\n        void main()\n        {\n            gl_FragColor = vec4(adeb, 1.0);\n        }\n        
adca
\n#ifdef GLES\n        precision mediump float;\n#endif\n        varying vec3 adeb;\n        varying float acde;\n        void main()\n        {\n            gl_FragColor = vec4(acde,acde,acde,1.0);\n        }\n        
_uabcd
\n        attribute vec4 bcde;\n        attribute vec3 aece;\n        uniform mat4 aaa;\n        uniform mat4 bcb;\n        uniform float aeeb;\n        varying vec3 _vabcd;\n        void main()\n        {\n            gl_Position = aaa*bcb*bcde;\n            _vabcd = aece;\n#ifdef GLES\n            gl_PointSize = 8.0;  \n#endif\n        }\n        
\n#ifdef GLES\n        precision mediump float;\n#endif\n        uniform float bbc;\n        varying vec3 _vabcd;\n        void main()\n        {\n            gl_FragColor = vec4(_vabcd, bbc);\n        }\n        
aece
aeeb
\n        attribute vec4 bcde;\n        attribute vec3 adae;\n        attribute vec3 _aabcd;\n        uniform mat4 aaa;\n        uniform mat4 bcb;\n        uniform float aeeb;\n        varying vec3 _vabcd;\n        void main()\n        {\n            gl_Position = aaa*bcb*bcde;\n            vec3 vec = mat3(bcb)*adae*aeeb;\n            float cbec = 0.75*abs(vec.z) + 0.25;\n            _vabcd = _aabcd * cbec;\n        }\n        
\n#ifdef GLES\n        precision mediump float;\n#endif\n        uniform float bbc;\n        uniform float bbdc;\n        uniform float caad;\n        uniform float bcaa;\n        uniform float bbed;\n        varying vec3 _vabcd;\n        void main()\n        {\n            vec3 rgb;\n            rgb.x = (bbed*_vabcd.x-bbdc)/(caad-bbdc);\n            rgb.y = (bbed*_vabcd.y-bbdc)/(caad-bbdc);\n            rgb.z = (bbed*_vabcd.z-bbdc)/(caad-bbdc);\n            if (bcaa > 0.5) {\n                if (rgb.x < 0.018) rgb.x *= 4.5; else rgb.x = 1.099*pow(rgb.x,0.45)-0.099;\n                if (rgb.y < 0.018) rgb.y *= 4.5; else rgb.y = 1.099*pow(rgb.y,0.45)-0.099;\n                if (rgb.z < 0.018) rgb.z *= 4.5; else rgb.z = 1.099*pow(rgb.z,0.45)-0.099;\n            }\n            gl_FragColor = vec4(clamp(rgb,0.0,1.0), bbc);\n        }\n        
bbdc
caad
bcaa
bbed
\n        attribute vec4 bcde;\n        attribute vec3 adae;\n        attribute vec3 _aabcd;\n        uniform mat4 aaa;\n        uniform mat4 bcb;\n        uniform float aeeb;\n        varying vec3 _vabcd;\n        void main()\n        {\n            gl_Position = aaa*bcb*bcde;\n            vec3 vec = mat3(bcb)*adae*aeeb;\n            float cbec = 0.5*abs(vec.z) + 0.5;\n            _vabcd = _aabcd * cbec;\n        }\n        
\n        attribute vec4 bcde;\n        attribute vec3 adae;\n        uniform mat4 aaa;\n        uniform mat4 bcb;\n        uniform float aeeb;\n        varying float cbec;\n        void main()\n        {\n            gl_Position = aaa*bcb*bcde;\n            mat3 scaledRotation = mat3(bcb);\n            vec3 vec = mat3(bcb)*adae*aeeb;\n            cbec = 0.5*abs(vec.z) + 0.5;\n        }\n        
\n#ifdef GLES\n        precision mediump float;\n#endif\n        varying float cbec;\n        uniform float bbc;\n        void main()\n        {\n            gl_FragColor = vec4(cbec, cbec, cbec, bbc);\n        }\n        
\n        attribute vec4 bcde;\n        attribute vec3 adae;\n        uniform mat4 aaa;\n        uniform mat4 bcb;\n        uniform float aeeb;\n        uniform float ad;\n        varying float cbec;\n        varying float aedc;\n        void main()\n        {\n            vec4 position = bcb*bcde;\n            aedc = position.z;\n            position = aaa*position;\n            mat3 scaledRotation = mat3(bcb);\n            vec3 vec = mat3(bcb)*adae*aeeb;\n            cbec = 0.5*abs(vec.z) + 0.5;\n            gl_Position = position;\n        }\n        
\n#ifdef GLES\n        precision mediump float;\n#endif\n        varying float cbec;\n        varying float aedc;\n        uniform float bbc;\n        uniform float ad;\n        void main()\n        {\n            float gb = cbec, alpha = bbc;\n            if (aedc < ad)\n            {\n                alpha *= 0.5;\n                gb = 0.;\n            }\n            gl_FragColor = vec4(cbec, gb, gb, alpha);\n        }\n        
\n        attribute vec4 bcde;\n        uniform mat4 aaa;\n        uniform mat4 bcb;\n        uniform float aeeb;\n        void main()\n        {\n            gl_Position = aaa*bcb*bcde;\n        }\n        
\n#ifdef GLES\n        precision mediump float;\n#endif\n        uniform vec3 _uabcd;\n        uniform float bbc;  \n        void main()\n        {\n            gl_FragColor = vec4(_uabcd.xyz, bbc);\n        }\n        
\n        attribute vec4 bcde;\n        attribute vec3 adae;\n        uniform mat4 aaa;\n        uniform mat4 bcb;\n        uniform float aeeb;\n        varying float cbec;\n        void main()\n        {\n            gl_Position = aaa*bcb*bcde;\n            vec3 vec = mat3(bcb)*adae*aeeb;\n            cbec = 1.0 - abs(vec.z);\n        }\n        
\n#ifdef GLES\n        precision mediump float;\n#endif\n        varying float cbec;\n        uniform float bbc;  \n        void main()\n        {\n            gl_FragColor = vec4(cbec, cbec, cbec, bbc);\n        }\n        
\n        attribute vec4 bcde;\n        attribute vec3 adae;\n        uniform mat4 aaa;\n        uniform mat4 bcb;\n        uniform float aeeb;\n        varying float bdbb;\n        void main()\n        {\n            gl_Position = aaa*bcb*bcde;\n            mat3 scaledRotation = mat3(bcb);\n            vec3 vec = mat3(bcb)*adae*aeeb;\n            bdbb = 0.5*(1.0 - abs(vec.z));\n        }\n        
\n#ifdef GLES\n        precision mediump float;\n#endif\n        varying float bdbb;\n        void main()\n        {\n            gl_FragColor = vec4(bdbb, bdbb, bdbb, 1.0);\n        }\n        
\n        attribute vec4 bcde;\n        attribute vec3 adae;\n        attribute highp vec2 adcc;\n        uniform mat4 aaa;\n        uniform mat4 bcb;\n        varying vec2 bedb;\n        void main()\n        {\n            gl_Position = aaa*bcb*bcde;\n            bedb = adcc;\n        }\n        
\n#ifdef GLES\n        precision highp float;\n#endif\n        uniform sampler2D aebd;\n        varying vec2 bedb;\n        uniform float bbc;\n        uniform float _ubbdc;\n        uniform float becb;\n        uniform float accc;\n        uniform float _ubbed;\n        void main()\n        {\n            vec3 rgb = texture2D(aebd, bedb).rgb;\n            rgb.x = (_ubbed*rgb.x-_ubbdc)/(becb-_ubbdc);\n            rgb.y = (_ubbed*rgb.y-_ubbdc)/(becb-_ubbdc);\n            rgb.z = (_ubbed*rgb.z-_ubbdc)/(becb-_ubbdc);\n            if (accc > 0.5)\n            {\n                if (rgb.x < 0.018) rgb.x *= 4.5; else rgb.x = 1.099*pow(rgb.x,0.45)-0.099;\n                if (rgb.y < 0.018) rgb.y *= 4.5; else rgb.y = 1.099*pow(rgb.y,0.45)-0.099;\n                if (rgb.z < 0.018) rgb.z *= 4.5; else rgb.z = 1.099*pow(rgb.z,0.45)-0.099;\n            }\n            gl_FragColor = vec4(clamp(rgb,0.0,1.0), bbc);\n        }\n        
aebd
_ubbdc
becb
accc
_ubbed
\n        attribute vec4 bcde;\n        attribute vec3 adae;\n        attribute vec2 adcc;\n        uniform mat4 aaa;\n        uniform mat4 bcb;\n        varying vec2 bedb;\n        void main()\n        {\n            gl_Position = aaa*bcb*bcde;\n            bedb = adcc;\n        }\n        
\n#ifdef GLES\n        precision mediump float;\n#endif\n        uniform sampler2D aebd;\n        varying vec2 bedb;\n        uniform float bbc;\n        uniform float _ubbdc;\n        uniform float becb;\n        uniform float accc;\n        uniform float _ubbed;\n        void main()\n        {\n            vec3 rgb = texture2D(aebd, bedb).rgb;\n            rgb.x = (_ubbed*rgb.x-_ubbdc)/(becb-_ubbdc);\n            rgb.y = (_ubbed*rgb.y-_ubbdc)/(becb-_ubbdc);\n            rgb.z = (_ubbed*rgb.z-_ubbdc)/(becb-_ubbdc);\n            if (accc > 0.5)\n            {\n                if (rgb.x < 0.018) rgb.x *= 4.5; else rgb.x = 1.099*pow(rgb.x,0.45)-0.099;\n                if (rgb.y < 0.018) rgb.y *= 4.5; else rgb.y = 1.099*pow(rgb.y,0.45)-0.099;\n                if (rgb.z < 0.018) rgb.z *= 4.5; else rgb.z = 1.099*pow(rgb.z,0.45)-0.099;\n            }\n            rgb.r = (rgb.x + rgb.y + rgb.z) * 0.33333333;\n            rgb.g = 0.0;\n            rgb.b = 0.0;\n            gl_FragColor = vec4(rgb.rgb, bbc);\n        }\n        
\n        attribute vec4 bcde;\n        attribute vec3 adae;\n        attribute vec2 adcc;\n        uniform mat4 aaa;\n        uniform mat4 bcb;\n        uniform float aeeb;\n        varying vec2 bedb;\n        varying float cbec;\n        void main()\n        {\n            gl_Position = aaa*bcb*bcde;\n            vec3 vec = mat3(bcb)*adae*aeeb;\n            cbec = 0.5*abs(vec.z) + 0.5;\n            bedb = adcc;\n        }\n        
\n#ifdef GLES\n        precision mediump float;\n#endif\n        uniform sampler2D aebd;\n        varying vec2 bedb;\n        varying float cbec;\n        uniform float bbc;\n        void main()\n        {\n            gl_FragColor = vec4(texture2D(aebd, bedb).bgr, bbc);\n        }\n        
\n#ifdef GLES\n        precision mediump float;\n#endif\n        uniform sampler2D aebd;\n        varying vec2 bedb;\n        varying float cbec;\n        uniform float bbc;\n        void main()\n        {\n            gl_FragColor = vec4(texture2D(aebd, bedb).rgb, bbc);\n        }\n        
\n        uniform mat4 aaa;\n        uniform mat4 bcb;\n        attribute vec4 bcde;\n        attribute vec3 adae;\n        attribute vec2 adcc;\n        varying vec3 aee;\n        varying vec3 abac;\n        varying vec2 bedb;\n        void main()\n        {\n            aee = vec3(bcb * vec4(adae, 0.0));\n            vec4 vertPos4 = bcb * bcde;\n            abac = vec3(vertPos4) / vertPos4.w;\n            bedb = adcc;\n            gl_Position = aaa*bcb*bcde;\n        }\n        
\n#ifdef GLES\n        precision mediump float;\n#endif\n        struct SunLight\n        {\n            vec3 position;\n            vec4 ambientColor;\n            vec4 diffuseColor;\n            vec4 specularColor;\n        };\n        struct Material\n        {\n            vec4 ambientFactor;\n            vec4 diffuseFactor;\n            vec4 specularFactor;\n            float shininess;\n        };\n        uniform SunLight acdd;\n        uniform Material bebc;\n        uniform sampler2D aebd;\n        varying vec2 bedb;\n        varying vec3 aee;  \n        varying vec3 abac;  \n        uniform float bbc;\n        void main()\n        {\n            float distanceFactor = 1.0f;  \n            vec3 pointNormal = normalize(aee);\n            vec3 lightDir = normalize (acdd.position - abac);\n            float lightDirDotNormal = max(dot(lightDir,pointNormal), 0.1);\n            vec4 ambientLight = acdd.ambientColor * bebc.ambientFactor;\n            vec4 diffuseLight = lightDirDotNormal * acdd.diffuseColor * bebc.diffuseFactor;\n            vec4 specularLight = vec4(0,0,0,0);\n            if (lightDirDotNormal > 0.0)\n            {\n                vec3 viewDir = normalize (-abac);\n                vec3 halfDir = normalize(lightDir + viewDir);\n                float specAngle = max(dot(halfDir, pointNormal), 0.0);\n                specularLight = pow(specAngle, bebc.shininess) * acdd.specularColor * bebc.specularFactor;\n            }\n            vec3 color = texture2D(aebd, bedb).rgb * (ambientLight + diffuseLight).rgb + specularLight.rgb;\n            gl_FragColor = vec4(color, bbc);\n        }\n        
acdd.position
acdd.ambientColor
acdd.diffuseColor
acdd.specularColor
bebc.ambientFactor
bebc.diffuseFactor
bebc.specularFactor
bebc.shininess
\n        attribute vec4 bcde;\n        attribute vec3 adae;\n        attribute vec3 aebb;\n        attribute vec3 badb;\n        uniform mat4 aaa;\n        uniform mat4 bcb;\n        uniform float aeeb;\n        varying vec3 bddd;\n        varying vec3 acbc;\n        varying float cbec;\n        void main()\n        {\n            gl_Position = aaa*bcb*bcde;\n            vec3 vec = mat3(bcb)*adae*aeeb;\n            cbec = 0.5*abs(vec.z) + 0.5;\n            bddd = aebb;\n            acbc = badb;\n        }\n        
\n#ifdef GLES\n        precision mediump float;\n#endif\n        uniform sampler2D aebd;\n        varying vec3 bddd;\n        varying vec3 acbc;\n        varying float cbec;\n        uniform float bbc;\n        void main()\n        {\n            vec2 uv0 = bddd.xy;\n            vec2 uv1 = acbc.xy;\n            vec3 c0 = texture2D(aebd, uv0).bgr;\n            vec3 c1 = texture2D(aebd, uv1).bgr;\n            float w0 = bddd.z;\n            float w1 = acbc.z;\n            vec3 color = (c0 * w0 + c1 * w1) / (w0 + w1);\n            if ((w0+w1) < 0.00001)\n            {\n                color = vec3 (1.0, 0.0, 0.0);\n            }\n            gl_FragColor = vec4 (color, bbc);\n        }\n        
aebb
badb
_ubabd
\n#ifdef GLES\n        precision highp float;\n#endif\n        attribute vec4 bcde;\n        uniform mat4 aaa;\n        uniform mat4 bcb;\n        void main()\n        {\n            gl_Position = aaa*bcb*bcde;\n        }\n        
\n#ifdef GLES\n        precision highp float;\n#endif\n        void main()\n        {\n            gl_FragColor = vec4(0.0);\n        }\n        
\n#ifdef GLES\n        precision highp float;\n#endif\n        attribute vec4 bcde;\n        attribute vec3 adae;\n        uniform mat4 aaa;\n        uniform mat4 bcb;\n        varying vec3 v_normal;\n        varying vec3 v_worldPos;\n        void main()\n        {\n            v_normal = abs(adae);\n            v_worldPos = bcde.xyz;\n            gl_Position = aaa*bcb*bcde;\n        }\n        
\n#ifdef GLES\n        precision highp float;\n        precision highp sampler2D;\n#endif\n        varying vec3 v_normal;\n        varying vec3 v_worldPos;\n        uniform sampler2D acb;\n        uniform vec2 aabd;\n        uniform float abba;\n        bool occluded() {\n            float depth_thresh = 0.01;\n            vec2 texpos = fract(gl_FragCoord.xy  / aabd);\n            return abs(texture2D(acb, texpos).r - gl_FragCoord.z) > depth_thresh;\n        }\n        float modSquareAliased(vec2 coord, float size) {\n            vec2 p0 = fract(coord / vec2(size));\n            return (p0.x > 0.5 && p0.y > 0.5) || (p0.x < 0.5 && p0.y < 0.5) ? 0.0 : 1.0;\n        }\n        float modSquareAntiAliased(vec2 coord, float size) {\n            vec2 p0 = fract(coord / vec2(size));\n            float dist1 = max (abs(p0.x - 0.25), abs(p0.y - 0.25));\n            float dist2 = max (abs(p0.x - 0.75), abs(p0.y - 0.75));\n            float dist3 = max (abs(p0.x - 1.25), abs(p0.y - 0.25));\n            float dist4 = max (abs(p0.x + 0.25), abs(p0.y - 0.75));\n            float dist5 = max (abs(p0.x - 0.75), abs(p0.y + 0.25));\n            float dist6 = max (abs(p0.x - 0.25), abs(p0.y - 1.25));\n            float minDistToBlack = min(dist1, dist2);\n            minDistToBlack = min (minDistToBlack, min(dist3, dist4));\n            minDistToBlack = min (minDistToBlack, min(dist5, dist6));\n            float margin = 0.05;\n            return smoothstep (0.25-margin, 0.25+margin, minDistToBlack);\n        }\n        void main()\n        {\n            vec2 coord = v_worldPos.xy;  \n            float n_thresh = 0.6;\n            if (v_normal.x > n_thresh){ coord = v_worldPos.yz; }\n            if (v_normal.y > n_thresh){ coord = v_worldPos.xz; }\n            if (v_normal.z > n_thresh){ coord = v_worldPos.xy; }\n#if ENABLE_ANTIALIASING\n            vec3 checker = vec3(modSquareAntiAliased(coord, 0.2));\n#else\n            vec3 checker = vec3(modSquareAliased(coord, 0.2));\n#endif\n            vec4 color = vec4(0.0);\n            if (!occluded() ) {\n                color = vec4(checker, 0.5);\n            }\n            gl_FragColor = color;\n        }\n        
\n#define ENABLE_ANTIALIASING 1\n
\n#define ENABLE_ANTIALIASING 0\n
aabd
abba
\n#ifdef GLES\n        precision mediump float;\n#endif\n        attribute vec4 bcde;\n        attribute vec2 adcc;\n        varying vec2 bedb;\n        void main()\n        {\n            gl_Position = bcde;\n            bedb  = adcc;\n        }\n        
\n#ifdef GLES\n        precision mediump float;\n#endif\n        uniform sampler2D cbb;\n        varying vec2 bedb;\n        void main()\n        {\n            gl_FragColor = texture2D(cbb, bedb);\n        }\n        
OPENCV_DUMP_ERRORS
SSE2
SSE3
SSSE3
SSE4.1
SSE4.2
POPCNT
FP16
AVX2
FMA3
AVX512F
AVX512BW
AVX512CD
AVX512DQ
AVX512ER
AVX512IFMA
AVX512PF
AVX512VBMI
AVX512VL
NEON
VSX3
AVX512-SKX
OPENCV_DUMP_CONFIG
\nOpenCV build configuration is:\n%s\n
\n******************************************************************\n* FATAL ERROR:                                                   *\n* This OpenCV build doesn't support current CPU/HW configuration *\n*                                                                *\n* Use OPENCV_DUMP_CONFIG=1 environment variable for details      *\n******************************************************************\n
\nRequired baseline features:\n
cv::HWFeatures::initialize
Missing support for required CPU baseline features. Check OpenCV build configuration and required CPU/HW setup.
%s - OK\n
%s - NOT AVAILABLE\n
OPENCV_CPU_DISABLE
cv::HWFeatures::readSettings
feature.size() > 0
OPENCV: Trying to disable baseline CPU feature: '%s'. This has very limited effect, because code optimizations for this feature are executed unconditionally in the most cases.\n
OPENCV: Trying to disable unavailable CPU feature on the current platform: '%s'.\n
OPENCV: Trying to disable unknown CPU feature: '%s'.\n
OPENCV_SETUP_TERMINATE_HANDLER
4.1.0
OpenCV(%s) %s:%d: error: (%d:%s) in function '%s'\n%s
OpenCV(%s) %s:%d: error: (%d:%s) %s in function '%s'\n
OpenCV(%s) %s:%d: error: (%d:%s) %s%s
Unknown feature
cv::format
len >= 0 && "Check format string for errors"
unknown function
OpenCV(%s) Error: %s (%s) in %s, file %s, line %d
OpenCV: terminate handler is called! The last OpenCV error is:\n
Backtrace
Unspecified error
Internal error
Insufficient memory
Bad argument
Iterations do not converge
Autotrace call
Incorrect size of input array
Null pointer
Division by zero occurred
Image step is wrong
Inplace operation is not supported
Requested object was not found
Input image depth is not supported by function
Formats of input arguments do not match
Sizes of input arguments do not match
One of arguments' values is out of range
Unsupported format or combination of formats
Input COI is not supported
Bad number of channels
Bad flag (parameter or structure field)
Bad parameter of type CvPoint
Bad type of mask argument
Parsing error
The function/feature is not implemented
Memory block has been corrupted
Assertion failed
No CUDA support
Gpu API call
No OpenGL support
OpenGL API call
error
Unknown %s code %d
cv::TlsAbstraction::TlsAbstraction
tlsKey != TLS_OUT_OF_INDEXES
cv::TlsAbstraction::SetData
TlsSetValue(tlsKey, pData) == TRUE
cv::TlsStorage::reserveSlot
tlsSlotsSize == tlsSlots.size()
cv::TlsStorage::releaseSlot
tlsSlotsSize > slotIdx
cv::TlsStorage::getData
cv::TlsStorage::gather
cv::TlsStorage::setData
cv::TLSDataContainer::~TLSDataContainer
key_ == -1
cv::TLSDataContainer::getData
key_ != -1 && "Can't fetch data from terminated TLS container."
Invalid value for parameter 
True
TRUE
False
FALSE
disabled
cv::read
cv::OutOfMemoryError
Failed to allocate %llu bytes
void __cdecl cv::Mat::copyTo(const class cv::_OutputArray &) const
sz.width
cv::Mat::copyTo
channels() == CV_MAT_CN(dtype)
dst.u != NULL
dims > 0 && dims < CV_MAX_DIM
class cv::Mat &__cdecl cv::Mat::operator =(const class cv::Scalar_<double> &)
cv::Mat::operator =
sz <= sizeof(scalar)
class cv::Mat &__cdecl cv::Mat::setTo(const class cv::_InputArray &,const class cv::_InputArray &)
cv::Mat::setTo
checkScalar(value, type(), _value.kind(), _InputArray::MAT )
mask.empty() || (mask.depth() == CV_8U && (mcn == 1 || mcn == cn) && size == mask.size)
void __cdecl cv::flip(const class cv::_InputArray &,const class cv::_OutputArray &,int)
cv::flip
_src.dims() <= 2
void __cdecl cv::repeat(const class cv::_InputArray &,int,int,const class cv::_OutputArray &)
cv::repeat
_src.getObj() != _dst.getObj()
ny > 0 && nx > 0
cv::borderInterpolate
len > 0
Unknown/unsupported border type
void __cdecl cv::copyMakeBorder(const class cv::_InputArray &,const class cv::_OutputArray &,int,int,int,int,int,const class cv::Scalar_<double> &)
cv::copyMakeBorder
top >= 0 && bottom >= 0 && left >= 0 && right >= 0 && _src.dims() <= 2
value[0] == value[1] && value[0] == value[2] && value[0] == value[3]
src.type() == dst.type() && src.size() == dst.size()
cv::MatAllocator::download
sz[i] <= (size_t)INT_MAX
cv::MatAllocator::upload
void __cdecl cv::MatAllocator::copy(struct cv::UMatData *,struct cv::UMatData *,int,const unsigned __int64 [],const unsigned __int64 [],const unsigned __int64 [],const unsigned __int64 [],const unsigned __int64 [],bool) const
cv::MatAllocator::copy
cv::StdMatAllocator::allocate
total <= step[i]
cv::StdMatAllocator::deallocate
u->urefcount == 0
u->refcount == 0
cv::setSize
0 <= _dims && _dims <= CV_MAX_DIM
s >= 0
cv::Mat::create
0 <= d && d <= CV_MAX_DIM && _sizes
u != 0
step[dims-1] == (size_t)CV_ELEM_SIZE(flags)
m.dims >= 2
0 <= _rowRange.start && _rowRange.start <= _rowRange.end && _rowRange.end <= m.rows
0 <= _colRange.start && _colRange.start <= _colRange.end && _colRange.end <= m.cols
m.dims <= 2
0 <= roi.x && 0 <= roi.width && roi.x + roi.width <= m.cols && 0 <= roi.y && 0 <= roi.height && roi.y + roi.height <= m.rows
ranges
r == Range::all() || (0 <= r.start && r.start < r.end && r.end <= m.size[i])
cv::Mat::diag
dims <= 2
cv::Mat::reserveBuffer
nelems <= size_t(INT_MAX)*size_t(INT_MAX)
cv::Mat::locateROI
dims <= 2 && step[0] > 0
cv::Mat::adjustROI
cv::Mat::reshape
The matrix is not continuous, thus its number of rows can not be changed
Bad new number of rows
The total number of matrix elements is not divisible by the new number of rows
The total width is not divisible by the new number of channels
_cn >= 0 && _newndims > 0 && _newndims <= CV_MAX_DIM && _newsz
_cn <= CV_CN_MAX
_newsz[i] >= 0
Copy dimension (which has zero size) is not present in source matrix
Requested and source matrices have different count of elements
Reshaping of n-dimensional non-continuous matrices is not supported yet
m1.dims
class cv::Size_<int> __cdecl cv::getContinuousSize2D(class cv::Mat &,class cv::Mat &,int)
m2.dims
total_sz
m2.total()
cv::getContinuousSize2D
is_m1_vector
is_m2_vector
m1.cols == m2.cols && m1.rows == m2.rows
class cv::Size_<int> __cdecl cv::getContinuousSize2D(class cv::Mat &,class cv::Mat &,class cv::Mat &,int)
m3.dims
m3.total()
is_m3_vector
m1.cols == m2.cols && m1.rows == m2.rows && m1.cols == m3.cols && m1.rows == m3.rows
The library is compiled without QT support
void __cdecl cv::namedWindow(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,int)
void __cdecl cv::destroyWindow(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
void __cdecl cv::resizeWindow(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,int,int)
double __cdecl cv::getWindowProperty(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,int)
int __cdecl cv::waitKeyEx(int)
int __cdecl cv::waitKey(int)
OPENCV_LEGACY_WAITKEY
void __cdecl cv::setOpenGlDrawCallback(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,void (__cdecl *)(void *),void *)
void __cdecl cv::setOpenGlContext(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
void __cdecl cv::updateWindow(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)
void __cdecl cv::imshow(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,const class cv::_InputArray &)
cv::imshow
size.width>0 && size.height>0
Unknown/unsupported color conversion code
void __cdecl cv::cvtColor(const class cv::_InputArray &,const class cv::_OutputArray &,int,int)
cv::cvtColor
!_src.empty()
=F^V=
>^0 >
1>ocC>
Yf>`
?vm\v?D'
'?%L+?r
4A?|
I?`sL?
Y?Qo[?
[m? 
\rr?pxs?d
Fw?Mex?Rpy?
K{?]
gz?Rpy?Mex?
Fw??
t?pxs?
[m?6
]?Qo[?
O?`sL?
.?%L+?|
?vm\v?
T>ocC>
1>^0 >e
=F^V=
=F^V=
>^0 >
1>ocC>
Yf>`
?vm\v?D'
'?%L+?r
4A?|
I?`sL?
Y?Qo[?
[m? 
\rr?pxs?d
Fw?Mex?Rpy?
K{?]
bool __cdecl cv::clipLine(class cv::Size_<__int64>,class cv::Point_<__int64> &,class cv::Point_<__int64> &)
cv::LineIterator::LineIterator
connectivity == 8 || connectivity == 4
void __cdecl cv::ellipse2Poly(class cv::Point_<double>,class cv::Size_<double>,int,int,int,int,class std::vector<class cv::Point_<double>,class std::allocator<class cv::Point_<double> > > &)
cv::PolyLine
0 <= shift && shift <= XY_SHIFT && thickness >= 0
void __cdecl cv::line(const class cv::_InputOutputArray &,class cv::Point_<int>,class cv::Point_<int>,const class cv::Scalar_<double> &,int,int,int)
cv::line
0 < thickness && thickness <= MAX_THICKNESS
0 <= shift && shift <= XY_SHIFT
void __cdecl cv::rectangle(const class cv::_InputOutputArray &,class cv::Point_<int>,class cv::Point_<int>,const class cv::Scalar_<double> &,int,int,int)
cv::rectangle
thickness <= MAX_THICKNESS
void __cdecl cv::rectangle(const class cv::_InputOutputArray &,class cv::Rect_<int>,const class cv::Scalar_<double> &,int,int,int)
void __cdecl cv::circle(const class cv::_InputOutputArray &,class cv::Point_<int>,int,const class cv::Scalar_<double> &,int,int,int)
cv::circle
radius >= 0 && thickness <= MAX_THICKNESS && 0 <= shift && shift <= XY_SHIFT
cv::getFontData
Unknown font type
void __cdecl cv::putText(const class cv::_InputOutputArray &,const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,class cv::Point_<int>,int,double,class cv::Scalar_<double>,int,int,bool)
void __cdecl cv::cpu_baseline::GaussianBlurFixedPoint(const class cv::Mat &,class cv::Mat &,const unsigned short *,int,const unsigned short *,int,int)
cv::cpu_baseline::GaussianBlurFixedPoint
src.depth() == CV_8U && ((borderType & BORDER_ISOLATED) || !src.isSubmatrix())
=cv::getGaussianKernel
ktype == CV_32F || ktype == CV_64F
void __cdecl cv::GaussianBlur(const class cv::_InputArray &,const class cv::_OutputArray &,class cv::Size_<int>,double,double,int)
cv::createGaussianKernels
ksize.width > 0 && ksize.width % 2 == 1 && ksize.height > 0 && ksize.height % 2 == 1
?ffffff
StereoMatcher.BM
cv::FindStereoCorrespInvoker::FindStereoCorrespInvoker
_disp.type() == CV_16S || _disp.type() == CV_32S
void __cdecl cv::StereoBMImpl::compute(const class cv::_InputArray &,const class cv::_InputArray &,const class cv::_OutputArray &)
cv::StereoBMImpl::compute
All the images must have the same size
Both input images must have CV_8UC1
Disparity image must have CV_16SC1 or CV_32FC1 format
preFilterType must be = CV_STEREO_BM_NORMALIZED_RESPONSE
preFilterSize must be odd and be within 5..255
preFilterCap must be within 1..63
SADWindowSize must be odd, be within 5..255 and be not larger than image width or height
numDisparities must be positive and divisble by 16
texture threshold must be non-negative
uniqueness ratio must be non-negative
uniquenessRatio
textureThreshold
preFilterCap
preFilterSize
preFilterType
disp12MaxDiff
speckleRange
speckleWindowSize
blockSize
numDisparities
minDisparity
cv::StereoBMImpl::read
n.isString() && String(n) == name_
cv::findStereoCorrespondenceBM
ndisp % 8 == 0
StereoMatcher.SGBM
cv::computeDisparitySGBM
D % 16 == 0
cv::computeDisparitySGBM_HH4
cv::SGBM3WayMainLoop::SGBM3WayMainLoop
void __cdecl cv::StereoSGBMImpl::compute(const class cv::_InputArray &,const class cv::_InputArray &,const class cv::_OutputArray &)
cv::StereoSGBMImpl::compute
left.size() == right.size() && left.type() == right.type() && left.depth() == CV_8U
mode
cv::StereoSGBMImpl::read
void __cdecl cv::filterSpeckles(const class cv::_InputOutputArray &,double,int,double,const class cv::_InputOutputArray &)
cv::filterSpeckles
type == CV_8UC1 || type == CV_16SC1
void __cdecl cv::validateDisparity(const class cv::_InputOutputArray &,const class cv::_InputArray &,int,int,int,int)
cv::validateDisparity
numberOfDisparities > 0 && disp.type() == CV_16S && (costType == CV_16S || costType == CV_32S) && disp.size() == cost.size()
cv::ximgproc::DisparityWLSFilterImpl::filter
!disparity_map_left.empty() && (disparity_map_left.channels() == 1)
!left_view.empty() && (left_view.depth() == CV_8U) && (left_view.channels() == 3 || left_view.channels() == 1)
cv::ximgproc::DisparityWLSFilterImpl::filter_
!disparity_map_left.empty() && ( disparity_map_left.depth() == CV_32F) && (disparity_map_left.channels() == 1)
!disparity_map_right.empty() && (disparity_map_right.depth() == CV_32F) && (disparity_map_right.channels() == 1)
(disparity_map_left.cols() == disparity_map_right.cols())
(disparity_map_left.rows() == disparity_map_right.rows())
cv::ximgproc::createDisparityWLSFilter
DisparityWLSFilter natively supports only StereoBM and StereoSGBM
cv::ximgproc::createRightMatcher
createRightMatcher supports only StereoBM and StereoSGBM
cv::_InputArray::getMat_
i < 0
0 <= i && i < (int)vv.size()
0 <= i && i < (int)v.size()
0 <= i && i < sz.height
You should explicitly call mapHost/unmapHost methods for ogl::Buffer object
You should explicitly call download method for cuda::GpuMat object
Unknown/unsupported array type
cv::_InputArray::getUMat
cv::_InputArray::getMatVector
cv::_InputArray::getOGlBuffer
k == OPENGL_BUFFER
cv::_InputArray::size
i < (int)vv.size()
i < sz.height
cv::_InputArray::sizend
cv::_InputArray::dims
cv::_InputArray::type
(flags & FIXED_TYPE) != 0
cv::_InputArray::empty
cv::_InputArray::isContinuous
i >= 0 && (size_t)i < vv.size()
i > 0 && i < sz.height
cv::_InputArray::copyTo
cv::_OutputArray::create
!fixedSize() || ((Mat*)obj)->size.operator()() == _sz
!fixedType() || ((Mat*)obj)->type() == mtype
!fixedSize() || ((UMat*)obj)->size.operator()() == _sz
!fixedType() || ((UMat*)obj)->type() == mtype
!fixedSize() || ((cuda::GpuMat*)obj)->size() == _sz
!fixedType() || ((cuda::GpuMat*)obj)->type() == mtype
!fixedSize() || ((ogl::Buffer*)obj)->size() == _sz
!fixedType() || ((ogl::Buffer*)obj)->type() == mtype
!fixedSize() || ((cuda::HostMem*)obj)->size() == _sz
!fixedType() || ((cuda::HostMem*)obj)->type() == mtype
!fixedSize() || ((Mat*)obj)->size.operator()() == Size(_cols, _rows)
!fixedSize() || ((UMat*)obj)->size.operator()() == Size(_cols, _rows)
!fixedSize() || ((cuda::GpuMat*)obj)->size() == Size(_cols, _rows)
!fixedSize() || ((ogl::Buffer*)obj)->size() == Size(_cols, _rows)
!fixedSize() || ((cuda::HostMem*)obj)->size() == Size(_cols, _rows)
void __cdecl cv::_OutputArray::create(int,const int *,int,int,bool,enum cv::_OutputArray::DepthMask) const
m.type()
CV_MAT_TYPE(mtype)
m.dims
m.size[j]
sizes[j]
mtype == type0 || (CV_MAT_CN(mtype) == 1 && ((1 << type0) & fixedDepthMask) != 0)
d == 2 && ((sizes[0] == sz.height && sizes[1] == sz.width) || (allowTransposed && sizes[0] == sz.width && sizes[1] == sz.height))
d == 2 && sz.area() == sizes[0]*sizes[1]
d == 2 && (sizes[0] == 1 || sizes[1] == 1 || sizes[0]*sizes[1] == 0)
!fixedSize() || len == vv.size()
mtype == type0 || (CV_MAT_CN(mtype) == CV_MAT_CN(type0) && ((1 << type0) & fixedDepthMask) != 0)
!fixedSize() || len == ((std::vector<uchar>*)v)->size() / esz
Vectors with element size %d are not supported. Please, modify OutputArray::create()\n
create() called for the missing output array
!fixedSize() || len == len0
v[j].empty()
i < (int)v.size()
!fixedType() && !fixedSize()
CV_MAT_TYPE(mtype) == m.type()
m.dims == d
m.size[j] == sizes[j]
len == len0
cv::_OutputArray::release
!fixedSize()
cv::_OutputArray::getMatRef
k == MAT
k == STD_VECTOR_MAT || k == STD_ARRAY_MAT
cv::_OutputArray::setTo
checkScalar(value, type(), arr.kind(), _InputArray::CUDA_GPU_MAT)
void __cdecl cv::hal::cpu_baseline::cvt32f16f(const float *,class cv::float16_t *,int)
void __cdecl cv::hal::cpu_baseline::addRNGBias32f(float *,const float *,int)
void __cdecl cv::hal::cpu_baseline::addRNGBias64f(double *,const double *,int)
void __cdecl cv::cpu_baseline::cvt8u8s(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,signed char *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt8u16u(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,unsigned short *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt8u16s(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,short *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt8u32s(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt8u32f(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,float *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt8u64f(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,double *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt8u16f(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,class cv::float16_t *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt8s8u(const signed char *,unsigned __int64,unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt8s16u(const signed char *,unsigned __int64,unsigned char *,unsigned __int64,unsigned short *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt8s16s(const signed char *,unsigned __int64,unsigned char *,unsigned __int64,short *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt8s32s(const signed char *,unsigned __int64,unsigned char *,unsigned __int64,int *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt8s32f(const signed char *,unsigned __int64,unsigned char *,unsigned __int64,float *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt8s64f(const signed char *,unsigned __int64,unsigned char *,unsigned __int64,double *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt8s16f(const signed char *,unsigned __int64,unsigned char *,unsigned __int64,class cv::float16_t *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt16u8u(const unsigned short *,unsigned __int64,unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt16u8s(const unsigned short *,unsigned __int64,unsigned char *,unsigned __int64,signed char *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt16u16s(const unsigned short *,unsigned __int64,unsigned char *,unsigned __int64,short *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt16u32s(const unsigned short *,unsigned __int64,unsigned char *,unsigned __int64,int *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt16u32f(const unsigned short *,unsigned __int64,unsigned char *,unsigned __int64,float *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt16u64f(const unsigned short *,unsigned __int64,unsigned char *,unsigned __int64,double *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt16u16f(const unsigned short *,unsigned __int64,unsigned char *,unsigned __int64,class cv::float16_t *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt16s8u(const short *,unsigned __int64,unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt16s8s(const short *,unsigned __int64,unsigned char *,unsigned __int64,signed char *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt16s16u(const short *,unsigned __int64,unsigned char *,unsigned __int64,unsigned short *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt16s32s(const short *,unsigned __int64,unsigned char *,unsigned __int64,int *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt16s32f(const short *,unsigned __int64,unsigned char *,unsigned __int64,float *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt16s64f(const short *,unsigned __int64,unsigned char *,unsigned __int64,double *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt16s16f(const short *,unsigned __int64,unsigned char *,unsigned __int64,class cv::float16_t *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt32s8u(const int *,unsigned __int64,unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt32s8s(const int *,unsigned __int64,unsigned char *,unsigned __int64,signed char *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt32s16u(const int *,unsigned __int64,unsigned char *,unsigned __int64,unsigned short *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt32s16s(const int *,unsigned __int64,unsigned char *,unsigned __int64,short *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt32s32f(const int *,unsigned __int64,unsigned char *,unsigned __int64,float *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt32s64f(const int *,unsigned __int64,unsigned char *,unsigned __int64,double *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt32s16f(const int *,unsigned __int64,unsigned char *,unsigned __int64,class cv::float16_t *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt32f8u(const float *,unsigned __int64,unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt32f8s(const float *,unsigned __int64,unsigned char *,unsigned __int64,signed char *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt32f16u(const float *,unsigned __int64,unsigned char *,unsigned __int64,unsigned short *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt32f16s(const float *,unsigned __int64,unsigned char *,unsigned __int64,short *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt32f32s(const float *,unsigned __int64,unsigned char *,unsigned __int64,int *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt32f64f(const float *,unsigned __int64,unsigned char *,unsigned __int64,double *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt32f16f(const float *,unsigned __int64,unsigned char *,unsigned __int64,class cv::float16_t *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt64f8u(const double *,unsigned __int64,unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt64f8s(const double *,unsigned __int64,unsigned char *,unsigned __int64,signed char *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt64f16u(const double *,unsigned __int64,unsigned char *,unsigned __int64,unsigned short *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt64f16s(const double *,unsigned __int64,unsigned char *,unsigned __int64,short *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt64f32s(const double *,unsigned __int64,unsigned char *,unsigned __int64,int *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt64f32f(const double *,unsigned __int64,unsigned char *,unsigned __int64,float *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt64f16f(const double *,unsigned __int64,unsigned char *,unsigned __int64,class cv::float16_t *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt16f8u(const class cv::float16_t *,unsigned __int64,unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt16f8s(const class cv::float16_t *,unsigned __int64,unsigned char *,unsigned __int64,signed char *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt16f16u(const class cv::float16_t *,unsigned __int64,unsigned char *,unsigned __int64,unsigned short *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt16f16s(const class cv::float16_t *,unsigned __int64,unsigned char *,unsigned __int64,short *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt16f32s(const class cv::float16_t *,unsigned __int64,unsigned char *,unsigned __int64,int *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt16f32f(const class cv::float16_t *,unsigned __int64,unsigned char *,unsigned __int64,float *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt16f64f(const class cv::float16_t *,unsigned __int64,unsigned char *,unsigned __int64,double *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt8u(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt16u(const unsigned short *,unsigned __int64,unsigned char *,unsigned __int64,unsigned short *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt32s(const int *,unsigned __int64,unsigned char *,unsigned __int64,int *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::cpu_baseline::cvt64s(const __int64 *,unsigned __int64,unsigned char *,unsigned __int64,__int64 *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::hal::cvt32f16f(const float *,class cv::float16_t *,int)
void __cdecl cv::hal::addRNGBias32f(float *,const float *,int)
void __cdecl cv::hal::addRNGBias64f(double *,const double *,int)
void (__cdecl *__cdecl cv::getConvertFunc(int,int))(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::Mat::convertTo(const class cv::_OutputArray &,int,double,double) const
cv::Mat::convertTo
func != 0
void __cdecl cv::MatOp::add(const class cv::MatExpr &,const class cv::MatExpr &,class cv::MatExpr &) const
void __cdecl cv::MatOp::add(const class cv::MatExpr &,const class cv::Scalar_<double> &,class cv::MatExpr &) const
void __cdecl cv::MatOp::subtract(const class cv::MatExpr &,const class cv::MatExpr &,class cv::MatExpr &) const
void __cdecl cv::MatOp::subtract(const class cv::Scalar_<double> &,const class cv::MatExpr &,class cv::MatExpr &) const
void __cdecl cv::MatOp::multiply(const class cv::MatExpr &,const class cv::MatExpr &,class cv::MatExpr &,double) const
void __cdecl cv::MatOp::multiply(const class cv::MatExpr &,double,class cv::MatExpr &) const
void __cdecl cv::MatOp::divide(const class cv::MatExpr &,const class cv::MatExpr &,class cv::MatExpr &,double) const
void __cdecl cv::MatOp::divide(double,const class cv::MatExpr &,class cv::MatExpr &) const
void __cdecl cv::MatOp::abs(const class cv::MatExpr &,class cv::MatExpr &) const
void __cdecl cv::MatOp::transpose(const class cv::MatExpr &,class cv::MatExpr &) const
int __cdecl cv::MatOp::type(const class cv::MatExpr &) const
int __cdecl cv::MatExpr::type(void) const
cv::MatOp_Identity::assign
CV_MAT_CN(_type) == e.a.channels()
void __cdecl cv::MatOp_AddEx::add(const class cv::MatExpr &,const class cv::Scalar_<double> &,class cv::MatExpr &) const
void __cdecl cv::MatOp_AddEx::subtract(const class cv::Scalar_<double> &,const class cv::MatExpr &,class cv::MatExpr &) const
void __cdecl cv::MatOp_AddEx::multiply(const class cv::MatExpr &,double,class cv::MatExpr &) const
void __cdecl cv::MatOp_AddEx::divide(double,const class cv::MatExpr &,class cv::MatExpr &) const
void __cdecl cv::MatOp_AddEx::transpose(const class cv::MatExpr &,class cv::MatExpr &) const
void __cdecl cv::MatOp_AddEx::abs(const class cv::MatExpr &,class cv::MatExpr &) const
cv::MatOp_Bin::assign
Unknown operation
void __cdecl cv::MatOp_Bin::multiply(const class cv::MatExpr &,double,class cv::MatExpr &) const
void __cdecl cv::MatOp_Bin::divide(double,const class cv::MatExpr &,class cv::MatExpr &) const
void __cdecl cv::MatOp_T::multiply(const class cv::MatExpr &,double,class cv::MatExpr &) const
void __cdecl cv::MatOp_T::transpose(const class cv::MatExpr &,class cv::MatExpr &) const
void __cdecl cv::MatOp_GEMM::add(const class cv::MatExpr &,const class cv::MatExpr &,class cv::MatExpr &) const
void __cdecl cv::MatOp_GEMM::subtract(const class cv::MatExpr &,const class cv::MatExpr &,class cv::MatExpr &) const
void __cdecl cv::MatOp_GEMM::multiply(const class cv::MatExpr &,double,class cv::MatExpr &) const
void __cdecl cv::MatOp_GEMM::transpose(const class cv::MatExpr &,class cv::MatExpr &) const
cv::MatOp_Initializer::assign
Invalid matrix initializer type
void __cdecl cv::MatOp_Initializer::multiply(const class cv::MatExpr &,double,class cv::MatExpr &) const
class cv::MatExpr __cdecl cv::Mat::mul(const class cv::_InputArray &,double) const
class cv::MatExpr __cdecl cv::Mat::zeros(int,int,int)
cv::ResizeAreaFastVec_SIMD_8u::operator ()
cn == 4
cv::ResizeAreaFastVec_SIMD_16u::operator ()
cv::ResizeAreaFastVec_SIMD_16s::operator ()
void __cdecl cv::hal::resize(int,const unsigned char *,unsigned __int64,int,int,unsigned char *,unsigned __int64,int,int,double,double,int)
cv::hal::resize
(dst_width > 0 && dst_height > 0) || (inv_scale_x > 0 && inv_scale_y > 0)
!dsize.empty()
func != 0 && cn <= 4
Unknown interpolation method
void __cdecl cv::resize(const class cv::_InputArray &,const class cv::_OutputArray &,class cv::Size_<int>,double,double,int)
cv::resize
!ssize.empty()
inv_scale_x > 0
inv_scale_y > 0
cv::resizeGeneric_Invoker<struct cv::HResizeLanczos4<double,double,float>,struct cv::VResizeLanczos4<double,double,float,struct cv::Cast<double,double>,struct cv::VResizeNoVec> >::resizeGeneric_Invoker
ksize <= MAX_ESIZE
cv::resizeGeneric_Invoker<struct cv::HResizeLanczos4<float,float,float>,struct cv::VResizeLanczos4<float,float,float,struct cv::Cast<float,float>,struct cv::VResizeLanczos4Vec_32f> >::resizeGeneric_Invoker
cv::resizeGeneric_Invoker<struct cv::HResizeLanczos4<short,float,float>,struct cv::VResizeLanczos4<short,float,float,struct cv::Cast<float,short>,struct cv::VResizeLanczos4Vec_32f16s> >::resizeGeneric_Invoker
cv::resizeGeneric_Invoker<struct cv::HResizeLanczos4<unsigned short,float,float>,struct cv::VResizeLanczos4<unsigned short,float,float,struct cv::Cast<float,unsigned short>,struct cv::VResizeLanczos4Vec_32f16u> >::resizeGeneric_Invoker
cv::resizeGeneric_Invoker<struct cv::HResizeLanczos4<unsigned char,int,short>,struct cv::VResizeLanczos4<unsigned char,int,short,struct cv::FixedPtCast<int,unsigned char,22>,struct cv::VResizeNoVec> >::resizeGeneric_Invoker
cv::resizeGeneric_Invoker<struct cv::HResizeCubic<double,double,float>,struct cv::VResizeCubic<double,double,float,struct cv::Cast<double,double>,struct cv::VResizeNoVec> >::resizeGeneric_Invoker
cv::resizeGeneric_Invoker<struct cv::HResizeCubic<float,float,float>,struct cv::VResizeCubic<float,float,float,struct cv::Cast<float,float>,struct cv::VResizeCubicVec_32f> >::resizeGeneric_Invoker
cv::resizeGeneric_Invoker<struct cv::HResizeCubic<short,float,float>,struct cv::VResizeCubic<short,float,float,struct cv::Cast<float,short>,struct cv::VResizeCubicVec_32f16s> >::resizeGeneric_Invoker
cv::resizeGeneric_Invoker<struct cv::HResizeCubic<unsigned short,float,float>,struct cv::VResizeCubic<unsigned short,float,float,struct cv::Cast<float,unsigned short>,struct cv::VResizeCubicVec_32f16u> >::resizeGeneric_Invoker
cv::resizeGeneric_Invoker<struct cv::HResizeCubic<unsigned char,int,short>,struct cv::VResizeCubic<unsigned char,int,short,struct cv::FixedPtCast<int,unsigned char,22>,struct cv::VResizeCubicVec_32s8u> >::resizeGeneric_Invoker
cv::resizeGeneric_Invoker<struct cv::HResizeLinear<double,double,float,1,struct cv::HResizeNoVec>,struct cv::VResizeLinear<double,double,float,struct cv::Cast<double,double>,struct cv::VResizeNoVec> >::resizeGeneric_Invoker
cv::resizeGeneric_Invoker<struct cv::HResizeLinear<float,float,float,1,struct cv::HResizeNoVec>,struct cv::VResizeLinear<float,float,float,struct cv::Cast<float,float>,struct cv::VResizeLinearVec_32f> >::resizeGeneric_Invoker
cv::resizeGeneric_Invoker<struct cv::HResizeLinear<short,float,float,1,struct cv::HResizeNoVec>,struct cv::VResizeLinear<short,float,float,struct cv::Cast<float,short>,struct cv::VResizeLinearVec_32f16s> >::resizeGeneric_Invoker
cv::resizeGeneric_Invoker<struct cv::HResizeLinear<unsigned short,float,float,1,struct cv::HResizeNoVec>,struct cv::VResizeLinear<unsigned short,float,float,struct cv::Cast<float,unsigned short>,struct cv::VResizeLinearVec_32f16u> >::resizeGeneric_Invoker
cv::resizeGeneric_Invoker<struct cv::HResizeLinear<unsigned char,int,short,2048,struct cv::HResizeNoVec>,struct cv::VResizeLinear<unsigned char,int,short,struct cv::FixedPtCast<int,unsigned char,22>,struct cv::VResizeLinearVec_32s8u> >::resizeGeneric_Invoker
cv::ResizeAreaFastVec<short,class cv::ResizeAreaFastVec_SIMD_16s>::operator ()
cv::ResizeAreaFastVec<unsigned short,class cv::ResizeAreaFastVec_SIMD_16u>::operator ()
cv::ResizeAreaFastVec<unsigned char,class cv::ResizeAreaFastVec_SIMD_8u>::operator ()
\f\t\r\n
\n\t\v\f
\t\n\v\f\r
cv::initInterTab1D
cv::initInterTab2D
Unknown/unsupported interpolation type
Distortion coefficients must be 1x4, 4x1, 1x5, 5x1, 1x8, 8x1, 1x12, 12x1, 1x14 or 14x1 floating-point vector
cv::normalizeAnchor
anchor.inside(Rect(0, 0, ksize.width, ksize.height))
struct cv::Ptr<class cv::BaseRowFilter> __cdecl cv::cpu_baseline::getMorphologyRowFilter(int,int,int,int)
cv::cpu_baseline::getMorphologyRowFilter
op == MORPH_ERODE || op == MORPH_DILATE
Unsupported data type (=%d)
struct cv::Ptr<class cv::BaseColumnFilter> __cdecl cv::cpu_baseline::getMorphologyColumnFilter(int,int,int,int)
cv::cpu_baseline::getMorphologyColumnFilter
struct cv::Ptr<class cv::BaseFilter> __cdecl cv::cpu_baseline::getMorphologyFilter(int,int,const class cv::Mat &,class cv::Point_<int>)
cv::cpu_baseline::getMorphologyFilter
struct cv::Ptr<class cv::BaseRowFilter> __cdecl cv::getMorphologyRowFilter(int,int,int,int)
struct cv::Ptr<class cv::BaseColumnFilter> __cdecl cv::getMorphologyColumnFilter(int,int,int,int)
struct cv::Ptr<class cv::BaseFilter> __cdecl cv::getMorphologyFilter(int,int,const class cv::_InputArray &,class cv::Point_<int>)
cv::createMorphologyFilter
depth == CV_8U || depth == CV_16U || depth == CV_16S || depth == CV_32F || depth == CV_64F
cv::getStructuringElement
shape == MORPH_RECT || shape == MORPH_CROSS || shape == MORPH_ELLIPSE
void __cdecl cv::morphOp(int,const class cv::_InputArray &,const class cv::_OutputArray &,const class cv::_InputArray &,class cv::Point_<int>,int,int,const class cv::Scalar_<double> &)
void __cdecl cv::erode(const class cv::_InputArray &,const class cv::_OutputArray &,const class cv::_InputArray &,class cv::Point_<int>,int,int,const class cv::Scalar_<double> &)
void __cdecl cv::dilate(const class cv::_InputArray &,const class cv::_OutputArray &,const class cv::_InputArray &,class cv::Point_<int>,int,int,const class cv::Scalar_<double> &)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphFilter<struct cv::cpu_baseline::`anonymous namespace'::MaxOp<double>,struct cv::cpu_baseline::A0xc11cad24::MorphNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphFilter<struct cv::cpu_baseline::`anonymous namespace'::MaxOp<float>,struct cv::cpu_baseline::A0xc11cad24::MorphVec<struct cv::cpu_baseline::`anonymous namespace'::VMax<struct cv::hal_baseline::v_float32x4> > >::operator ()(const unsigned char **,unsigned char *,int,int,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphFilter<struct cv::cpu_baseline::`anonymous namespace'::MaxOp<short>,struct cv::cpu_baseline::A0xc11cad24::MorphVec<struct cv::cpu_baseline::`anonymous namespace'::VMax<struct cv::hal_baseline::v_int16x8> > >::operator ()(const unsigned char **,unsigned char *,int,int,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphFilter<struct cv::cpu_baseline::`anonymous namespace'::MaxOp<unsigned short>,struct cv::cpu_baseline::A0xc11cad24::MorphVec<struct cv::cpu_baseline::`anonymous namespace'::VMax<struct cv::hal_baseline::v_uint16x8> > >::operator ()(const unsigned char **,unsigned char *,int,int,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphFilter<struct cv::cpu_baseline::`anonymous namespace'::MaxOp<unsigned char>,struct cv::cpu_baseline::A0xc11cad24::MorphVec<struct cv::cpu_baseline::`anonymous namespace'::VMax<struct cv::hal_baseline::v_uint8x16> > >::operator ()(const unsigned char **,unsigned char *,int,int,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphFilter<struct cv::cpu_baseline::`anonymous namespace'::MinOp<double>,struct cv::cpu_baseline::A0xc11cad24::MorphNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphFilter<struct cv::cpu_baseline::`anonymous namespace'::MinOp<float>,struct cv::cpu_baseline::A0xc11cad24::MorphVec<struct cv::cpu_baseline::`anonymous namespace'::VMin<struct cv::hal_baseline::v_float32x4> > >::operator ()(const unsigned char **,unsigned char *,int,int,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphFilter<struct cv::cpu_baseline::`anonymous namespace'::MinOp<short>,struct cv::cpu_baseline::A0xc11cad24::MorphVec<struct cv::cpu_baseline::`anonymous namespace'::VMin<struct cv::hal_baseline::v_int16x8> > >::operator ()(const unsigned char **,unsigned char *,int,int,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphFilter<struct cv::cpu_baseline::`anonymous namespace'::MinOp<unsigned short>,struct cv::cpu_baseline::A0xc11cad24::MorphVec<struct cv::cpu_baseline::`anonymous namespace'::VMin<struct cv::hal_baseline::v_uint16x8> > >::operator ()(const unsigned char **,unsigned char *,int,int,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphFilter<struct cv::cpu_baseline::`anonymous namespace'::MinOp<unsigned char>,struct cv::cpu_baseline::A0xc11cad24::MorphVec<struct cv::cpu_baseline::`anonymous namespace'::VMin<struct cv::hal_baseline::v_uint8x16> > >::operator ()(const unsigned char **,unsigned char *,int,int,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphColumnFilter<struct cv::cpu_baseline::`anonymous namespace'::MaxOp<double>,struct cv::cpu_baseline::A0xc11cad24::MorphColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphColumnFilter<struct cv::cpu_baseline::`anonymous namespace'::MaxOp<float>,struct cv::cpu_baseline::A0xc11cad24::MorphColumnVec<struct cv::cpu_baseline::`anonymous namespace'::VMax<struct cv::hal_baseline::v_float32x4> > >::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphColumnFilter<struct cv::cpu_baseline::`anonymous namespace'::MaxOp<short>,struct cv::cpu_baseline::A0xc11cad24::MorphColumnVec<struct cv::cpu_baseline::`anonymous namespace'::VMax<struct cv::hal_baseline::v_int16x8> > >::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphColumnFilter<struct cv::cpu_baseline::`anonymous namespace'::MaxOp<unsigned short>,struct cv::cpu_baseline::A0xc11cad24::MorphColumnVec<struct cv::cpu_baseline::`anonymous namespace'::VMax<struct cv::hal_baseline::v_uint16x8> > >::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphColumnFilter<struct cv::cpu_baseline::`anonymous namespace'::MaxOp<unsigned char>,struct cv::cpu_baseline::A0xc11cad24::MorphColumnVec<struct cv::cpu_baseline::`anonymous namespace'::VMax<struct cv::hal_baseline::v_uint8x16> > >::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphColumnFilter<struct cv::cpu_baseline::`anonymous namespace'::MinOp<double>,struct cv::cpu_baseline::A0xc11cad24::MorphColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphColumnFilter<struct cv::cpu_baseline::`anonymous namespace'::MinOp<float>,struct cv::cpu_baseline::A0xc11cad24::MorphColumnVec<struct cv::cpu_baseline::`anonymous namespace'::VMin<struct cv::hal_baseline::v_float32x4> > >::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphColumnFilter<struct cv::cpu_baseline::`anonymous namespace'::MinOp<short>,struct cv::cpu_baseline::A0xc11cad24::MorphColumnVec<struct cv::cpu_baseline::`anonymous namespace'::VMin<struct cv::hal_baseline::v_int16x8> > >::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphColumnFilter<struct cv::cpu_baseline::`anonymous namespace'::MinOp<unsigned short>,struct cv::cpu_baseline::A0xc11cad24::MorphColumnVec<struct cv::cpu_baseline::`anonymous namespace'::VMin<struct cv::hal_baseline::v_uint16x8> > >::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphColumnFilter<struct cv::cpu_baseline::`anonymous namespace'::MinOp<unsigned char>,struct cv::cpu_baseline::A0xc11cad24::MorphColumnVec<struct cv::cpu_baseline::`anonymous namespace'::VMin<struct cv::hal_baseline::v_uint8x16> > >::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphRowFilter<struct cv::cpu_baseline::`anonymous namespace'::MaxOp<double>,struct cv::cpu_baseline::A0xc11cad24::MorphRowNoVec>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphRowFilter<struct cv::cpu_baseline::`anonymous namespace'::MaxOp<float>,struct cv::cpu_baseline::A0xc11cad24::MorphRowVec<struct cv::cpu_baseline::`anonymous namespace'::VMax<struct cv::hal_baseline::v_float32x4> > >::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphRowFilter<struct cv::cpu_baseline::`anonymous namespace'::MaxOp<short>,struct cv::cpu_baseline::A0xc11cad24::MorphRowVec<struct cv::cpu_baseline::`anonymous namespace'::VMax<struct cv::hal_baseline::v_int16x8> > >::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphRowFilter<struct cv::cpu_baseline::`anonymous namespace'::MaxOp<unsigned short>,struct cv::cpu_baseline::A0xc11cad24::MorphRowVec<struct cv::cpu_baseline::`anonymous namespace'::VMax<struct cv::hal_baseline::v_uint16x8> > >::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphRowFilter<struct cv::cpu_baseline::`anonymous namespace'::MaxOp<unsigned char>,struct cv::cpu_baseline::A0xc11cad24::MorphRowVec<struct cv::cpu_baseline::`anonymous namespace'::VMax<struct cv::hal_baseline::v_uint8x16> > >::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphRowFilter<struct cv::cpu_baseline::`anonymous namespace'::MinOp<double>,struct cv::cpu_baseline::A0xc11cad24::MorphRowNoVec>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphRowFilter<struct cv::cpu_baseline::`anonymous namespace'::MinOp<float>,struct cv::cpu_baseline::A0xc11cad24::MorphRowVec<struct cv::cpu_baseline::`anonymous namespace'::VMin<struct cv::hal_baseline::v_float32x4> > >::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphRowFilter<struct cv::cpu_baseline::`anonymous namespace'::MinOp<short>,struct cv::cpu_baseline::A0xc11cad24::MorphRowVec<struct cv::cpu_baseline::`anonymous namespace'::VMin<struct cv::hal_baseline::v_int16x8> > >::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphRowFilter<struct cv::cpu_baseline::`anonymous namespace'::MinOp<unsigned short>,struct cv::cpu_baseline::A0xc11cad24::MorphRowVec<struct cv::cpu_baseline::`anonymous namespace'::VMin<struct cv::hal_baseline::v_uint16x8> > >::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphRowFilter<struct cv::cpu_baseline::`anonymous namespace'::MinOp<unsigned char>,struct cv::cpu_baseline::A0xc11cad24::MorphRowVec<struct cv::cpu_baseline::`anonymous namespace'::VMin<struct cv::hal_baseline::v_uint8x16> > >::operator ()(const unsigned char *,unsigned char *,int,int)
int __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphVec<struct cv::cpu_baseline::`anonymous namespace'::VMax<struct cv::hal_baseline::v_float32x4> >::operator ()(unsigned char **,int,unsigned char *,int) const
int __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphVec<struct cv::cpu_baseline::`anonymous namespace'::VMin<struct cv::hal_baseline::v_float32x4> >::operator ()(unsigned char **,int,unsigned char *,int) const
int __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphVec<struct cv::cpu_baseline::`anonymous namespace'::VMax<struct cv::hal_baseline::v_int16x8> >::operator ()(unsigned char **,int,unsigned char *,int) const
int __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphVec<struct cv::cpu_baseline::`anonymous namespace'::VMin<struct cv::hal_baseline::v_int16x8> >::operator ()(unsigned char **,int,unsigned char *,int) const
int __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphVec<struct cv::cpu_baseline::`anonymous namespace'::VMax<struct cv::hal_baseline::v_uint16x8> >::operator ()(unsigned char **,int,unsigned char *,int) const
int __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphVec<struct cv::cpu_baseline::`anonymous namespace'::VMin<struct cv::hal_baseline::v_uint16x8> >::operator ()(unsigned char **,int,unsigned char *,int) const
int __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphVec<struct cv::cpu_baseline::`anonymous namespace'::VMax<struct cv::hal_baseline::v_uint8x16> >::operator ()(unsigned char **,int,unsigned char *,int) const
int __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphVec<struct cv::cpu_baseline::`anonymous namespace'::VMin<struct cv::hal_baseline::v_uint8x16> >::operator ()(unsigned char **,int,unsigned char *,int) const
int __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphColumnVec<struct cv::cpu_baseline::`anonymous namespace'::VMax<struct cv::hal_baseline::v_float32x4> >::operator ()(const unsigned char **,unsigned char *,int,int,int) const
cv::cpu_baseline::`anonymous-namespace'::MorphColumnVec<struct cv::cpu_baseline::`anonymous namespace'::VMax<struct cv::hal_baseline::v_float32x4> >::operator ()
((size_t)_src[i] & (CV_SIMD_WIDTH-1)) == 0
int __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphColumnVec<struct cv::cpu_baseline::`anonymous namespace'::VMin<struct cv::hal_baseline::v_float32x4> >::operator ()(const unsigned char **,unsigned char *,int,int,int) const
cv::cpu_baseline::`anonymous-namespace'::MorphColumnVec<struct cv::cpu_baseline::`anonymous namespace'::VMin<struct cv::hal_baseline::v_float32x4> >::operator ()
int __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphColumnVec<struct cv::cpu_baseline::`anonymous namespace'::VMax<struct cv::hal_baseline::v_int16x8> >::operator ()(const unsigned char **,unsigned char *,int,int,int) const
cv::cpu_baseline::`anonymous-namespace'::MorphColumnVec<struct cv::cpu_baseline::`anonymous namespace'::VMax<struct cv::hal_baseline::v_int16x8> >::operator ()
int __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphColumnVec<struct cv::cpu_baseline::`anonymous namespace'::VMin<struct cv::hal_baseline::v_int16x8> >::operator ()(const unsigned char **,unsigned char *,int,int,int) const
cv::cpu_baseline::`anonymous-namespace'::MorphColumnVec<struct cv::cpu_baseline::`anonymous namespace'::VMin<struct cv::hal_baseline::v_int16x8> >::operator ()
int __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphColumnVec<struct cv::cpu_baseline::`anonymous namespace'::VMax<struct cv::hal_baseline::v_uint16x8> >::operator ()(const unsigned char **,unsigned char *,int,int,int) const
cv::cpu_baseline::`anonymous-namespace'::MorphColumnVec<struct cv::cpu_baseline::`anonymous namespace'::VMax<struct cv::hal_baseline::v_uint16x8> >::operator ()
int __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphColumnVec<struct cv::cpu_baseline::`anonymous namespace'::VMin<struct cv::hal_baseline::v_uint16x8> >::operator ()(const unsigned char **,unsigned char *,int,int,int) const
cv::cpu_baseline::`anonymous-namespace'::MorphColumnVec<struct cv::cpu_baseline::`anonymous namespace'::VMin<struct cv::hal_baseline::v_uint16x8> >::operator ()
int __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphColumnVec<struct cv::cpu_baseline::`anonymous namespace'::VMax<struct cv::hal_baseline::v_uint8x16> >::operator ()(const unsigned char **,unsigned char *,int,int,int) const
cv::cpu_baseline::`anonymous-namespace'::MorphColumnVec<struct cv::cpu_baseline::`anonymous namespace'::VMax<struct cv::hal_baseline::v_uint8x16> >::operator ()
int __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphColumnVec<struct cv::cpu_baseline::`anonymous namespace'::VMin<struct cv::hal_baseline::v_uint8x16> >::operator ()(const unsigned char **,unsigned char *,int,int,int) const
cv::cpu_baseline::`anonymous-namespace'::MorphColumnVec<struct cv::cpu_baseline::`anonymous namespace'::VMin<struct cv::hal_baseline::v_uint8x16> >::operator ()
int __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphRowVec<struct cv::cpu_baseline::`anonymous namespace'::VMax<struct cv::hal_baseline::v_float32x4> >::operator ()(const unsigned char *,unsigned char *,int,int) const
int __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphRowVec<struct cv::cpu_baseline::`anonymous namespace'::VMin<struct cv::hal_baseline::v_float32x4> >::operator ()(const unsigned char *,unsigned char *,int,int) const
int __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphRowVec<struct cv::cpu_baseline::`anonymous namespace'::VMax<struct cv::hal_baseline::v_int16x8> >::operator ()(const unsigned char *,unsigned char *,int,int) const
int __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphRowVec<struct cv::cpu_baseline::`anonymous namespace'::VMin<struct cv::hal_baseline::v_int16x8> >::operator ()(const unsigned char *,unsigned char *,int,int) const
int __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphRowVec<struct cv::cpu_baseline::`anonymous namespace'::VMax<struct cv::hal_baseline::v_uint16x8> >::operator ()(const unsigned char *,unsigned char *,int,int) const
int __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphRowVec<struct cv::cpu_baseline::`anonymous namespace'::VMin<struct cv::hal_baseline::v_uint16x8> >::operator ()(const unsigned char *,unsigned char *,int,int) const
int __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphRowVec<struct cv::cpu_baseline::`anonymous namespace'::VMax<struct cv::hal_baseline::v_uint8x16> >::operator ()(const unsigned char *,unsigned char *,int,int) const
int __cdecl cv::cpu_baseline::`anonymous-namespace'::MorphRowVec<struct cv::cpu_baseline::`anonymous namespace'::VMin<struct cv::hal_baseline::v_uint8x16> >::operator ()(const unsigned char *,unsigned char *,int,int) const
cv::cpu_baseline::`anonymous-namespace'::MorphFilter<struct cv::cpu_baseline::`anonymous namespace'::MaxOp<double>,struct cv::cpu_baseline::A0xc11cad24::MorphNoVec>::MorphFilter
_kernel.type() == CV_8U
cv::cpu_baseline::`anonymous-namespace'::MorphFilter<struct cv::cpu_baseline::`anonymous namespace'::MaxOp<float>,struct cv::cpu_baseline::A0xc11cad24::MorphVec<struct cv::cpu_baseline::`anonymous namespace'::VMax<struct cv::hal_baseline::v_float32x4> > >::MorphFilter
cv::cpu_baseline::`anonymous-namespace'::MorphFilter<struct cv::cpu_baseline::`anonymous namespace'::MaxOp<short>,struct cv::cpu_baseline::A0xc11cad24::MorphVec<struct cv::cpu_baseline::`anonymous namespace'::VMax<struct cv::hal_baseline::v_int16x8> > >::MorphFilter
cv::cpu_baseline::`anonymous-namespace'::MorphFilter<struct cv::cpu_baseline::`anonymous namespace'::MaxOp<unsigned short>,struct cv::cpu_baseline::A0xc11cad24::MorphVec<struct cv::cpu_baseline::`anonymous namespace'::VMax<struct cv::hal_baseline::v_uint16x8> > >::MorphFilter
cv::cpu_baseline::`anonymous-namespace'::MorphFilter<struct cv::cpu_baseline::`anonymous namespace'::MaxOp<unsigned char>,struct cv::cpu_baseline::A0xc11cad24::MorphVec<struct cv::cpu_baseline::`anonymous namespace'::VMax<struct cv::hal_baseline::v_uint8x16> > >::MorphFilter
cv::cpu_baseline::`anonymous-namespace'::MorphFilter<struct cv::cpu_baseline::`anonymous namespace'::MinOp<double>,struct cv::cpu_baseline::A0xc11cad24::MorphNoVec>::MorphFilter
cv::cpu_baseline::`anonymous-namespace'::MorphFilter<struct cv::cpu_baseline::`anonymous namespace'::MinOp<float>,struct cv::cpu_baseline::A0xc11cad24::MorphVec<struct cv::cpu_baseline::`anonymous namespace'::VMin<struct cv::hal_baseline::v_float32x4> > >::MorphFilter
cv::cpu_baseline::`anonymous-namespace'::MorphFilter<struct cv::cpu_baseline::`anonymous namespace'::MinOp<short>,struct cv::cpu_baseline::A0xc11cad24::MorphVec<struct cv::cpu_baseline::`anonymous namespace'::VMin<struct cv::hal_baseline::v_int16x8> > >::MorphFilter
cv::cpu_baseline::`anonymous-namespace'::MorphFilter<struct cv::cpu_baseline::`anonymous namespace'::MinOp<unsigned short>,struct cv::cpu_baseline::A0xc11cad24::MorphVec<struct cv::cpu_baseline::`anonymous namespace'::VMin<struct cv::hal_baseline::v_uint16x8> > >::MorphFilter
cv::cpu_baseline::`anonymous-namespace'::MorphFilter<struct cv::cpu_baseline::`anonymous namespace'::MinOp<unsigned char>,struct cv::cpu_baseline::A0xc11cad24::MorphVec<struct cv::cpu_baseline::`anonymous namespace'::VMin<struct cv::hal_baseline::v_uint8x16> > >::MorphFilter
void __cdecl cv::cpu_baseline::medianBlur_8u_O1(const class cv::Mat &,class cv::Mat &,int)
cv::cpu_baseline::medianBlur_8u_O1
cn > 0 && cn <= 4
k < 16
b < 16
void __cdecl cv::cpu_baseline::medianBlur_8u_Om(const class cv::Mat &,class cv::Mat &,int)
cv::cpu_baseline::medianBlur_8u_Om
void __cdecl cv::cpu_baseline::medianBlur(const class cv::Mat &,class cv::Mat &,int)
cv::cpu_baseline::medianBlur
src.depth() == CV_8U && (cn == 1 || cn == 3 || cn == 4)
void __cdecl cv::medianBlur(const class cv::_InputArray &,const class cv::_OutputArray &,int)
cv::medianBlur
(ksize % 2 == 1) && (_src0.dims() <= 2 )
void __cdecl cv::cpu_baseline::`anonymous-namespace'::medianBlur_SortNet<struct cv::cpu_baseline::`anonymous-namespace'::MinMax8u,struct cv::cpu_baseline::`anonymous-namespace'::MinMaxVec8u>(const class cv::Mat &,class cv::Mat &,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::medianBlur_SortNet<struct cv::cpu_baseline::`anonymous-namespace'::MinMax16u,struct cv::cpu_baseline::`anonymous-namespace'::MinMaxVec16u>(const class cv::Mat &,class cv::Mat &,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::medianBlur_SortNet<struct cv::cpu_baseline::`anonymous-namespace'::MinMax16s,struct cv::cpu_baseline::`anonymous-namespace'::MinMaxVec16s>(const class cv::Mat &,class cv::Mat &,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::medianBlur_SortNet<struct cv::cpu_baseline::`anonymous-namespace'::MinMax32f,struct cv::cpu_baseline::`anonymous-namespace'::MinMaxVec32f>(const class cv::Mat &,class cv::Mat &,int)
the type of labels must be 16u or 32s
cv::connectedComponentsWithStats
cv::connectedComponents_sub1
L.channels() == 1 && I.channels() == 1
ccltype == CCL_GRANA || ccltype == CCL_WU || ccltype == CCL_DEFAULT
iDepth == CV_8U || iDepth == CV_8S
unsupported label/image type
cv::connectedcomponents::LabelingGranaParallel<int,unsigned char,struct cv::connectedcomponents::CCStatsOp>::operator ()
img.rows == imgLabels.rows
img.cols == imgLabels.cols
connectivity == 8
cv::connectedcomponents::LabelingGrana<int,unsigned char,struct cv::connectedcomponents::CCStatsOp>::operator ()
cv::connectedcomponents::LabelingGrana<unsigned short,unsigned char,struct cv::connectedcomponents::CCStatsOp>::operator ()
cv::connectedcomponents::LabelingWuParallel<int,unsigned char,struct cv::connectedcomponents::CCStatsOp>::operator ()
cv::connectedcomponents::LabelingWu<int,unsigned char,struct cv::connectedcomponents::CCStatsOp>::operator ()
imgLabels.rows == img.rows
imgLabels.cols == img.cols
cv::connectedcomponents::LabelingWu<unsigned short,unsigned char,struct cv::connectedcomponents::CCStatsOp>::operator ()
cv::ximgproc::FastBilateralSolverFilterImpl::create
guide.type() == CV_8UC1 || guide.type() == CV_8UC3
cv::ximgproc::FastBilateralSolverFilterImpl::filter
!src.empty() && (src.depth() == CV_8U || src.depth() == CV_16S || src.depth() == CV_16U || src.depth() == CV_32F) && src.channels()<=4
!confidence.empty() && (confidence.depth() == CV_8U || confidence.depth() == CV_32F) && confidence.channels()==1
Size of the filtered image must be equal to the size of the guide image
Size of the confidence image must be equal to the size of the guide image
#iterations:     
estimated error: 
p@ucwsifdh
%.16e
%d.0
.Nan
-.Inf
.Inf
cv::fs::symbolToType
Invalid data type specification
cv::fs::decodeFormat
Too long data type specification
</opencv_storage>\n
cv::FileStorage::Impl::open
NULL or empty filename
FileStorage::APPEND and FileStorage::MEMORY are not currently compatible
Appending data to compressed file is not implemented
.xml
.xml.gz
.json
.json.gz
UTF-16
UTF-16 XML encoding is not supported! Use 8-bit encoding\n
strlen(encoding) < 1000
<?xml version="1.0" encoding="%s"?>\n
<?xml version="1.0"?>\n
<opencv_storage>\n
</opencv_storage>
Could not find </opencv_storage> in the end of file.\n
file != 0
 <!-- resumed -->
%YAML:1.0\n---\n
...\n---\n
fmt == FileStorage::FORMAT_JSON
Could not find '}' in the end of file.\n
%YAML
<?xml
Input file is empty
Unsupported file storage format
!fs_data_ptrs.empty()
cv::FileStorage::Impl::puts
write_mode
The storage is not opened
cv::FileStorage::Impl::gets
j < maxCount - 1 && "OpenCV persistence doesn't support very long lines"
sz < (size_t)(maxCount - 1) && "OpenCV persistence doesn't support very long lines"
Too long string or a last string w/o newline
cv::FileStorage::Impl::resizeWriteBuffer
written_len <= (int)buffer.size()
cv::FileStorage::Impl::endWriteStruct
!write_stack.empty()
cv::FileStorage::Impl::startWriteStruct
Some collection type: FileNode::SEQ or FileNode::MAP must be specified
type_id
cv::FileStorage::Impl::write
Unsupported type
cv::FileStorage::Impl::setBufferPtr
ptr >= bufferstart && ptr <= bufferEnd()
cv::FileStorage::Impl::getCurrentStruct
Bad format of floating-point constant
cv::FileStorage::Impl::processSpecialDouble
cv::FileStorage::Impl::convertToCollection
type == FileNode::SEQ || type == FileNode::MAP
type == FileNode::SEQ
The node of type %d cannot be converted to collection
cv::FileStorage::Impl::reserveNodeSpace
blockIdx == fs_data_ptrs.size()-1
ofs <= fs_data_blksz[blockIdx]
Map element should have a name
Sequence element should not have name (use <_></_>)
cv::FileStorage::Impl::addNode
cv::FileStorage::Impl::normalizeNodeOfs
ofs == fs_data_blksz[blockIdx]
?456789:;<=
\t\n\v\f\r
 !"#$%&'()*+,-./0123
cv::FileStorage::Impl::Base64Decoder::readMore
ofs <= sz
!parser.empty() && ptr
cv::FileStorage::Impl::parseBase64
!base64decoder.endOfStream()
%s(%d): %s
cv::FileStorage::Impl::getNodePtr
blockIdx < fs_data_ptrs.size()
ofs < fs_data_blksz[blockIdx]
Extra closing '%c'
The closing '%c' does not match the opening '%c'
!fs_impl->write_stack.empty()
Incorrect element name %s; should start with a letter or '_'
Invalid fs.state
cv::FileNode::operator []
isMap()
key2 < fs->p->str_hash_data.size()
cv::FileNode::rawSize
tp == STRING || tp == SEQ || tp == MAP
cv::FileNode::setValue
p != 0
current_type == NONE || current_type == type
Only scalar types can be dynamically assigned to a file node
cv::convertAndUnrollScalar
scn == 1
cv::binary_op
The operation is neither 'array op array' (where arrays have the same size and type), nor 'array op scalar', nor 'scalar op array'
psrc1->sameSize(*psrc2) && type1 == type2
(mtype == CV_8U || mtype == CV_8S) && _mask.sameSize(*psrc1)
void __cdecl cv::bitwise_and(const class cv::_InputArray &,const class cv::_InputArray &,const class cv::_OutputArray &,const class cv::_InputArray &)
void __cdecl cv::bitwise_or(const class cv::_InputArray &,const class cv::_InputArray &,const class cv::_OutputArray &,const class cv::_InputArray &)
void __cdecl cv::bitwise_xor(const class cv::_InputArray &,const class cv::_InputArray &,const class cv::_OutputArray &,const class cv::_InputArray &)
void __cdecl cv::bitwise_not(const class cv::_InputArray &,const class cv::_OutputArray &,const class cv::_InputArray &)
void __cdecl cv::max(const class cv::_InputArray &,const class cv::_InputArray &,const class cv::_OutputArray &)
void __cdecl cv::min(const class cv::_InputArray &,const class cv::_InputArray &,const class cv::_OutputArray &)
void __cdecl cv::max(const class cv::Mat &,const class cv::Mat &,class cv::Mat &)
void __cdecl cv::min(const class cv::Mat &,const class cv::Mat &,class cv::Mat &)
cv::arithm_op
The operation is neither 'array op array' (where arrays have the same size and the same number of channels), nor 'array op scalar', nor 'scalar op array'
type2 == CV_64F && (sz2.height == 1 || sz2.height == 4)
When the input arrays in add/subtract/multiply/divide functions have different types, the output array type must be explicitly specified
(mtype == CV_8UC1 || mtype == CV_8SC1) && _mask.sameSize(*psrc1)
void __cdecl cv::add(const class cv::_InputArray &,const class cv::_InputArray &,const class cv::_OutputArray &,const class cv::_InputArray &,int)
void __cdecl cv::subtract(const class cv::_InputArray &,const class cv::_InputArray &,const class cv::_OutputArray &,const class cv::_InputArray &,int)
void __cdecl cv::absdiff(const class cv::_InputArray &,const class cv::_InputArray &,const class cv::_OutputArray &)
void __cdecl cv::multiply(const class cv::_InputArray &,const class cv::_InputArray &,const class cv::_OutputArray &,double,int)
void __cdecl cv::divide(const class cv::_InputArray &,const class cv::_InputArray &,const class cv::_OutputArray &,double,int)
void __cdecl cv::divide(double,const class cv::_InputArray &,const class cv::_OutputArray &,int)
void __cdecl cv::addWeighted(const class cv::_InputArray &,double,const class cv::_InputArray &,double,double,const class cv::_OutputArray &,int)
void __cdecl cv::compare(const class cv::_InputArray &,const class cv::_InputArray &,const class cv::_OutputArray &,int)
cv::compare
op == CMP_LT || op == CMP_LE || op == CMP_EQ || op == CMP_NE || op == CMP_GE || op == CMP_GT
_src1.empty() == _src2.empty()
The operation is neither 'array op array' (where arrays have the same size and the same type), nor 'array op scalar', nor 'scalar op array'
cn == 1 || cn == 3 || cn == 4
binary
size > 0
<invalid depth>
<invalid type>
{custom check}
equal to
not equal to
less than or equal to
less than
greater than or equal to
greater than
CV_8U
CV_8S
CV_16U
CV_16S
CV_32S
CV_32F
CV_64F
CV_16F
%sC%d
' is 
    '
'), where
 (expected: '
must be 
where
cv::UMatData::~UMatData
mapcount == 0
cv::UMatDataAutoLocker::lock
usage_count == 0
cv::UMatDataAutoLocker::release
usage_count == 1
cv::Mat::getUMat
data == datastart
Exception: %s\n
allocated
cv::UMat::create
cv::UMat::UMat
cv::UMat::getMat
u->data != 0 && "Error mapping of UMat to host memory."
void __cdecl cv::UMat::copyTo(const class cv::_OutputArray &) const
cv::UMat::copyTo
dst.u
void __cdecl cv::UMat::convertTo(const class cv::_OutputArray &,int,double,double) const
class cv::UMat &__cdecl cv::UMat::setTo(const class cv::_InputArray &,const class cv::_InputArray &)
cv::TLSData<struct cv::UMatDataAutoLocker>::getRef
cv::NAryMatIterator::init
_arrays && (_ptrs || _planes)
narrays <= 1000
arrays[i] != 0
A.size == arrays[i0]->size
A.step[d-1] == A.elemSize()
void __cdecl cv::mixChannels(const class cv::Mat *,unsigned __int64,class cv::Mat *,unsigned __int64,const int *,unsigned __int64)
cv::mixChannels
src && nsrcs > 0 && dst && ndsts > 0 && fromTo && npairs > 0
j < nsrcs && src[j].depth() == depth
i1 >= 0 && j < ndsts && dst[j].depth() == depth
void __cdecl cv::extractChannel(const class cv::_InputArray &,const class cv::_OutputArray &,int)
cv::extractChannel
0 <= coi && coi < cn
void __cdecl cv::setIdentity(const class cv::_InputOutputArray &,const class cv::Scalar_<double> &)
cv::setIdentity
_m.dims() <= 2
void __cdecl cv::transpose(const class cv::_InputArray &,const class cv::_OutputArray &)
cv::transpose
_src.dims() <= 2 && esz <= 32
src.size() == dst.size() && (src.cols == 1 || src.rows == 1)
dst.cols == dst.rows
void __cdecl cv::completeSymm(const class cv::_InputOutputArray &,bool)
cv::completeSymm
m.dims <= 2 && m.rows == m.cols
cvInitMatHeader
Non-positive cols or rows
NULL array pointer is passed
The matrix has NULL data pointer
Unrecognized or unsupported array type
Input array has NULL data pointer
Only continuous nD arrays are supported here
cvGetMat
The image has NULL data pointer
Images with planar data layout should be used with COI selected
The image is interleaved and has over CV_CN_MAX channels
Pixel order should be used with coi == 0
void __cdecl cv::scalarToRawData(const class cv::Scalar_<double> &,void *,int,int)
cv::scalarToRawData
cn <= 4
cvCvtSeqToArray
cvStartReadSeq
cvSetSeqReaderPos
cv::iplImageToMat
img->dataOrder == IPL_DATA_ORDER_PIXEL
img->dataOrder == IPL_DATA_ORDER_PIXEL || img->roi->coi != 0
cv::cvarrToMat
COI is not supported by the function
total > 0 && CV_ELEM_SIZE(seq->flags) == esz
Unknown array type
OPENCV_TRACE
OPENCV_TRACE_DEPTH_OPENCV
OPENCV_TRACE_MAX_CHILDREN_OPENCV
OPENCV_TRACE_MAX_CHILDREN
OpenCVTrace
OPENCV_TRACE_LOCATION
                                                               
l,%lld,"%s",%d,"%s",0x%llX\n
b,%d,%lld,%lld,%lld
,parentThread=%d,parent=%lld
e,%d,%lld,%lld,%lld,%lld
,skip=%d
OpenCV parent region exceeds children count. Bailout
Parent region exceeds children count. Bailout
Region location is disabled. Bailout
#description: OpenCV trace file
#version: 1.0
%s-%03d.txt
#thread file: %s\n
.txt
Trace: Total events: 
Trace: Total skipped events: 
cv::utils::trace::details::parallelForSetRootRegion
ctx.dummy_stack_top.region == NULL
ctx.stack.empty()
cv::utils::trace::details::traceArg
region->pImpl
cv::TLSData<struct cv::utils::trace::details::TraceManagerThreadLocal>::getRef
                                                                                             
HighGUI class
Main HighGUI class
Software\OpenCV\HighGUI\Windows\
convertToShow
src_depth != CV_16F && src_depth != CV_32S
Left
Width
Height
NULL name string
NULL window
Can't Create A GL Device Context
Can't Find A Suitable PixelFormat
Can't Set The PixelFormat
Can't Create A GL Rendering Context
Can't Activate The GL Rendering Context
Can't swap OpenGL buffers
Frame window can not be created
Inner function failed.
Window doesn't support OpenGL
Window was created without OpenGL context
NULL name
cvShowImage
dst.data == (uchar*)dst_ptr
MainWindowProc
rgn != 0
rgn1 != 0
rgn2 != 0
Windows bitmap (*.bmp;*.dib)
*.bmp;*.dib
Portable image format (*.pbm;*.pgm;*.ppm;*.pxm;*.pnm)
*.pbm;*.pgm;*.ppm;*.pxm;*.pnm
Radiance HDR (*.hdr;*.pic)
*.hdr;*.pic
Sun raster files (*.sr;*.ras)
*.sr;*.ras
All Files (*.*)
throw_no_cuda
The library is compiled without CUDA support
cv::ogl::Buffer::Impl::Impl
bufId_ != 0
mat.isContinuous()
cv::ogl::Buffer::copyFrom
cv::ogl::Texture2D::Impl::Impl
texId_ != 0
depth <= CV_32F
cv::ogl::Texture2D::copyFrom
void __cdecl cv::demosaicing(const class cv::_InputArray &,const class cv::_OutputArray &,int,int)
cv::demosaicing
depth == CV_8U || depth == CV_16U
!src.empty()
scn == 1 && dcn == 1
Bayer->Gray demosaicing only supports 8u and 16u types
scn == 1 && (dcn == 3 || dcn == 4)
Bayer->RGB demosaicing only supports 8u and 16u types
depth == CV_8U
scn == 1 && dcn == 3
Bayer->RGB Edge-Aware demosaicing only currently supports 8u and 16u types
Unknown / unsupported color conversion code
"K"K"K"K"K"K"K"K
cv::RGB2Lab_b::RGB2Lab_b
coeffs[i*3] >= 0 && coeffs[i*3+1] >= 0 && coeffs[i*3+2] >= 0 && coeffs[i*3] + coeffs[i*3+1] + coeffs[i*3+2] < 2*(1 << lab_shift)
cv::RGB2Lab_f::RGB2Lab_f
c[0] >= 0 && c[1] >= 0 && c[2] >= 0 && c[0] + c[1] + c[2] < softfloat((int)LAB_CBRT_TAB_SIZE)
cv::RGB2Luvfloat::RGB2Luvfloat
coeffs[i*3] >= 0 && coeffs[i*3+1] >= 0 && coeffs[i*3+2] >= 0 && softfloat(coeffs[i*3]) + softfloat(coeffs[i*3+1]) + softfloat(coeffs[i*3+2]) < softfloat(1.5f)
whitePt[1] == softdouble::one()
cv::Luv2RGBfloat::Luv2RGBfloat
void __cdecl cv::hal::cvtBGRtoXYZ(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,bool)
void __cdecl cv::hal::cvtXYZtoBGR(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,bool)
void __cdecl cv::hal::cvtBGRtoLab(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,bool,bool,bool)
void __cdecl cv::hal::cvtLabtoBGR(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,bool,bool,bool)
__cdecl cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<3,-1,-1>,struct cv::impl::A0x69f409c9::Set<3,4,-1>,struct cv::impl::A0x69f409c9::Set<0,2,5>,2>::CvtHelper(const class cv::_InputArray &,const class cv::_OutputArray &,int)
Invalid number of channels in input image
VScn::contains(scn)
Invalid number of channels in output image
VDcn::contains(dcn)
Unsupported depth of input image
depth
VDepth::contains(depth)
cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<3,-1,-1>,struct cv::impl::A0x69f409c9::Set<3,4,-1>,struct cv::impl::A0x69f409c9::Set<0,2,5>,2>::CvtHelper
__cdecl cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<3,4,-1>,struct cv::impl::A0x69f409c9::Set<3,-1,-1>,struct cv::impl::A0x69f409c9::Set<0,2,5>,2>::CvtHelper(const class cv::_InputArray &,const class cv::_OutputArray &,int)
cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<3,4,-1>,struct cv::impl::A0x69f409c9::Set<3,-1,-1>,struct cv::impl::A0x69f409c9::Set<0,2,5>,2>::CvtHelper
__cdecl cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<3,-1,-1>,struct cv::impl::A0x69f409c9::Set<3,4,-1>,struct cv::impl::A0x69f409c9::Set<0,5,-1>,2>::CvtHelper(const class cv::_InputArray &,const class cv::_OutputArray &,int)
cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<3,-1,-1>,struct cv::impl::A0x69f409c9::Set<3,4,-1>,struct cv::impl::A0x69f409c9::Set<0,5,-1>,2>::CvtHelper
__cdecl cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<3,4,-1>,struct cv::impl::A0x69f409c9::Set<3,-1,-1>,struct cv::impl::A0x69f409c9::Set<0,5,-1>,2>::CvtHelper(const class cv::_InputArray &,const class cv::_OutputArray &,int)
cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<3,4,-1>,struct cv::impl::A0x69f409c9::Set<3,-1,-1>,struct cv::impl::A0x69f409c9::Set<0,5,-1>,2>::CvtHelper
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::Luv2RGB_f>::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::Luv2RGB_b>::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::Lab2RGB_f>::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::Lab2RGB_b>::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::RGB2Luv_f>::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::RGB2Luv_b>::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::RGB2Lab_f>::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::RGB2Lab_b>::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::XYZ2RGB_f<float> >::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::XYZ2RGB_i<unsigned short> >::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::XYZ2RGB_i<unsigned char> >::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::RGB2XYZ_f<float> >::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::RGB2XYZ_i<unsigned short> >::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::RGB2XYZ_i<unsigned char> >::operator ()(const class cv::Range &) const
void __cdecl cv::hal::cpu_baseline::cvtBGRtoYUV(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,bool,bool)
void __cdecl cv::hal::cpu_baseline::cvtYUVtoBGR(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,bool,bool)
void __cdecl cv::hal::cpu_baseline::cvtTwoPlaneYUVtoBGR(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,bool,int)
void __cdecl cv::hal::cpu_baseline::cvtTwoPlaneYUVtoBGR(const unsigned char *,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,bool,int)
cv::hal::cpu_baseline::cvtTwoPlaneYUVtoBGR
void __cdecl cv::hal::cpu_baseline::cvtThreePlaneYUVtoBGR(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,bool,int)
cv::hal::cpu_baseline::cvtThreePlaneYUVtoBGR
void __cdecl cv::hal::cpu_baseline::cvtBGRtoThreePlaneYUV(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,bool,int)
void __cdecl cv::hal::cpu_baseline::cvtOnePlaneYUVtoBGR(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,bool,int,int)
cv::hal::cpu_baseline::cvtOnePlaneYUVtoBGR
void __cdecl cv::hal::cvtBGRtoYUV(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,bool,bool)
void __cdecl cv::hal::cvtYUVtoBGR(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,bool,bool)
void __cdecl cv::hal::cvtTwoPlaneYUVtoBGR(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,bool,int)
void __cdecl cv::hal::cvtThreePlaneYUVtoBGR(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,bool,int)
void __cdecl cv::hal::cvtBGRtoThreePlaneYUV(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,bool,int)
void __cdecl cv::hal::cvtOnePlaneYUVtoBGR(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,bool,int,int)
cv::cvtColorYUV2Gray_ch
_src.channels() == 2 && _src.depth() == CV_8U
__cdecl cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<1,-1,-1>,struct cv::impl::A0x392828e4::Set<3,4,-1>,struct cv::impl::A0x392828e4::Set<0,-1,-1>,1>::CvtHelper(const class cv::_InputArray &,const class cv::_OutputArray &,int)
cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<1,-1,-1>,struct cv::impl::A0x392828e4::Set<3,4,-1>,struct cv::impl::A0x392828e4::Set<0,-1,-1>,1>::CvtHelper
sz.width % 2 == 0 && sz.height % 2 == 0
sz.width % 2 == 0 && sz.height % 3 == 0
__cdecl cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<1,-1,-1>,struct cv::impl::A0x392828e4::Set<1,-1,-1>,struct cv::impl::A0x392828e4::Set<0,-1,-1>,1>::CvtHelper(const class cv::_InputArray &,const class cv::_OutputArray &,int)
cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<1,-1,-1>,struct cv::impl::A0x392828e4::Set<1,-1,-1>,struct cv::impl::A0x392828e4::Set<0,-1,-1>,1>::CvtHelper
__cdecl cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<3,4,-1>,struct cv::impl::A0x392828e4::Set<1,-1,-1>,struct cv::impl::A0x392828e4::Set<0,-1,-1>,0>::CvtHelper(const class cv::_InputArray &,const class cv::_OutputArray &,int)
cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<3,4,-1>,struct cv::impl::A0x392828e4::Set<1,-1,-1>,struct cv::impl::A0x392828e4::Set<0,-1,-1>,0>::CvtHelper
__cdecl cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<2,-1,-1>,struct cv::impl::A0x392828e4::Set<3,4,-1>,struct cv::impl::A0x392828e4::Set<0,-1,-1>,2>::CvtHelper(const class cv::_InputArray &,const class cv::_OutputArray &,int)
cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<2,-1,-1>,struct cv::impl::A0x392828e4::Set<3,4,-1>,struct cv::impl::A0x392828e4::Set<0,-1,-1>,2>::CvtHelper
__cdecl cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<3,-1,-1>,struct cv::impl::A0x392828e4::Set<3,4,-1>,struct cv::impl::A0x392828e4::Set<0,2,5>,2>::CvtHelper(const class cv::_InputArray &,const class cv::_OutputArray &,int)
cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<3,-1,-1>,struct cv::impl::A0x392828e4::Set<3,4,-1>,struct cv::impl::A0x392828e4::Set<0,2,5>,2>::CvtHelper
__cdecl cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<3,4,-1>,struct cv::impl::A0x392828e4::Set<3,-1,-1>,struct cv::impl::A0x392828e4::Set<0,2,5>,2>::CvtHelper(const class cv::_InputArray &,const class cv::_OutputArray &,int)
cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<3,4,-1>,struct cv::impl::A0x392828e4::Set<3,-1,-1>,struct cv::impl::A0x392828e4::Set<0,2,5>,2>::CvtHelper
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::cpu_baseline::`anonymous namespace'::YCrCb2RGB_f<float> >::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::cpu_baseline::`anonymous namespace'::YCrCb2RGB_i<unsigned short> >::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::cpu_baseline::`anonymous namespace'::YCrCb2RGB_i<unsigned char> >::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::cpu_baseline::`anonymous namespace'::RGB2YCrCb_f<float> >::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::cpu_baseline::`anonymous namespace'::RGB2YCrCb_i<unsigned short> >::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::cpu_baseline::`anonymous namespace'::RGB2YCrCb_i<unsigned char> >::operator ()(const class cv::Range &) const
cv::hal::cpu_baseline::`anonymous-namespace'::RGB2HSV_b::RGB2HSV_b
hrange == 180 || hrange == 256
void __cdecl cv::hal::cpu_baseline::cvtBGRtoHSV(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,bool,bool,bool)
void __cdecl cv::hal::cpu_baseline::cvtHSVtoBGR(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,bool,bool,bool)
void __cdecl cv::hal::cvtBGRtoHSV(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,bool,bool,bool)
void __cdecl cv::hal::cvtHSVtoBGR(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,bool,bool,bool)
__cdecl cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<3,-1,-1>,struct cv::impl::A0xfa4e133e::Set<3,4,-1>,struct cv::impl::A0xfa4e133e::Set<0,5,-1>,2>::CvtHelper(const class cv::_InputArray &,const class cv::_OutputArray &,int)
cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<3,-1,-1>,struct cv::impl::A0xfa4e133e::Set<3,4,-1>,struct cv::impl::A0xfa4e133e::Set<0,5,-1>,2>::CvtHelper
__cdecl cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<3,4,-1>,struct cv::impl::A0xfa4e133e::Set<3,-1,-1>,struct cv::impl::A0xfa4e133e::Set<0,5,-1>,2>::CvtHelper(const class cv::_InputArray &,const class cv::_OutputArray &,int)
cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<3,4,-1>,struct cv::impl::A0xfa4e133e::Set<3,-1,-1>,struct cv::impl::A0xfa4e133e::Set<0,5,-1>,2>::CvtHelper
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::cpu_baseline::`anonymous namespace'::HLS2RGB_f>::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::cpu_baseline::`anonymous namespace'::HLS2RGB_b>::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::cpu_baseline::`anonymous namespace'::HSV2RGB_f>::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::cpu_baseline::`anonymous namespace'::HSV2RGB_b>::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::cpu_baseline::`anonymous namespace'::RGB2HLS_f>::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::cpu_baseline::`anonymous namespace'::RGB2HLS_b>::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::cpu_baseline::`anonymous namespace'::RGB2HSV_f>::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::cpu_baseline::`anonymous namespace'::RGB2HSV_b>::operator ()(const class cv::Range &) const
a\v6;
cv::hal::cpu_baseline::`anonymous-namespace'::RGB2Gray<unsigned char>::RGB2Gray
coeffs[0] + coeffs[1] + coeffs[2] == (1 << shift)
cv::hal::cpu_baseline::`anonymous-namespace'::RGB2Gray<unsigned short>::RGB2Gray
void __cdecl cv::hal::cpu_baseline::cvtBGRtoBGR(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,int,bool)
void __cdecl cv::hal::cpu_baseline::cvtBGRtoBGR5x5(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,bool,int)
void __cdecl cv::hal::cpu_baseline::cvtBGR5x5toBGR(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,bool,int)
void __cdecl cv::hal::cpu_baseline::cvtBGRtoGray(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,bool)
void __cdecl cv::hal::cpu_baseline::cvtGraytoBGR(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int)
void __cdecl cv::hal::cpu_baseline::cvtBGR5x5toGray(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int)
void __cdecl cv::hal::cpu_baseline::cvtGraytoBGR5x5(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int)
void __cdecl cv::hal::cpu_baseline::cvtRGBAtoMultipliedRGBA(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::cvtMultipliedRGBAtoRGBA(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int)
void __cdecl cv::hal::cvtBGRtoBGR(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,int,bool)
void __cdecl cv::hal::cvtBGRtoBGR5x5(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,bool,int)
void __cdecl cv::hal::cvtBGR5x5toBGR(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,bool,int)
void __cdecl cv::hal::cvtBGRtoGray(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,bool)
void __cdecl cv::hal::cvtGraytoBGR(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int)
void __cdecl cv::hal::cvtBGR5x5toGray(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int)
void __cdecl cv::hal::cvtGraytoBGR5x5(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int)
void __cdecl cv::hal::cvtRGBAtoMultipliedRGBA(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int)
void __cdecl cv::hal::cvtMultipliedRGBAtoRGBA(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int)
__cdecl cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<4,-1,-1>,struct cv::impl::A0x233bdd2f::Set<4,-1,-1>,struct cv::impl::A0x233bdd2f::Set<0,-1,-1>,2>::CvtHelper(const class cv::_InputArray &,const class cv::_OutputArray &,int)
cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<4,-1,-1>,struct cv::impl::A0x233bdd2f::Set<4,-1,-1>,struct cv::impl::A0x233bdd2f::Set<0,-1,-1>,2>::CvtHelper
__cdecl cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<1,-1,-1>,struct cv::impl::A0x233bdd2f::Set<2,-1,-1>,struct cv::impl::A0x233bdd2f::Set<0,-1,-1>,2>::CvtHelper(const class cv::_InputArray &,const class cv::_OutputArray &,int)
cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<1,-1,-1>,struct cv::impl::A0x233bdd2f::Set<2,-1,-1>,struct cv::impl::A0x233bdd2f::Set<0,-1,-1>,2>::CvtHelper
__cdecl cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<2,-1,-1>,struct cv::impl::A0x233bdd2f::Set<1,-1,-1>,struct cv::impl::A0x233bdd2f::Set<0,-1,-1>,2>::CvtHelper(const class cv::_InputArray &,const class cv::_OutputArray &,int)
cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<2,-1,-1>,struct cv::impl::A0x233bdd2f::Set<1,-1,-1>,struct cv::impl::A0x233bdd2f::Set<0,-1,-1>,2>::CvtHelper
__cdecl cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<1,-1,-1>,struct cv::impl::A0x233bdd2f::Set<3,4,-1>,struct cv::impl::A0x233bdd2f::Set<0,2,5>,2>::CvtHelper(const class cv::_InputArray &,const class cv::_OutputArray &,int)
cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<1,-1,-1>,struct cv::impl::A0x233bdd2f::Set<3,4,-1>,struct cv::impl::A0x233bdd2f::Set<0,2,5>,2>::CvtHelper
__cdecl cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<3,4,-1>,struct cv::impl::A0x233bdd2f::Set<1,-1,-1>,struct cv::impl::A0x233bdd2f::Set<0,2,5>,2>::CvtHelper(const class cv::_InputArray &,const class cv::_OutputArray &,int)
cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<3,4,-1>,struct cv::impl::A0x233bdd2f::Set<1,-1,-1>,struct cv::impl::A0x233bdd2f::Set<0,2,5>,2>::CvtHelper
__cdecl cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<2,-1,-1>,struct cv::impl::A0x233bdd2f::Set<3,4,-1>,struct cv::impl::A0x233bdd2f::Set<0,-1,-1>,2>::CvtHelper(const class cv::_InputArray &,const class cv::_OutputArray &,int)
cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<2,-1,-1>,struct cv::impl::A0x233bdd2f::Set<3,4,-1>,struct cv::impl::A0x233bdd2f::Set<0,-1,-1>,2>::CvtHelper
__cdecl cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<3,4,-1>,struct cv::impl::A0x233bdd2f::Set<2,-1,-1>,struct cv::impl::A0x233bdd2f::Set<0,-1,-1>,2>::CvtHelper(const class cv::_InputArray &,const class cv::_OutputArray &,int)
cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<3,4,-1>,struct cv::impl::A0x233bdd2f::Set<2,-1,-1>,struct cv::impl::A0x233bdd2f::Set<0,-1,-1>,2>::CvtHelper
__cdecl cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<3,4,-1>,struct cv::impl::A0x233bdd2f::Set<3,4,-1>,struct cv::impl::A0x233bdd2f::Set<0,2,5>,2>::CvtHelper(const class cv::_InputArray &,const class cv::_OutputArray &,int)
cv::impl::`anonymous-namespace'::CvtHelper<struct cv::impl::`anonymous namespace'::Set<3,4,-1>,struct cv::impl::A0x233bdd2f::Set<3,4,-1>,struct cv::impl::A0x233bdd2f::Set<0,2,5>,2>::CvtHelper
cv::hal::cpu_baseline::`anonymous-namespace'::RGB2RGB<float>::RGB2RGB
srccn == 3 || srccn == 4
dstcn == 3 || dstcn == 4
cv::hal::cpu_baseline::`anonymous-namespace'::RGB2RGB<unsigned short>::RGB2RGB
cv::hal::cpu_baseline::`anonymous-namespace'::RGB2RGB<unsigned char>::RGB2RGB
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::cpu_baseline::`anonymous namespace'::mRGBA2RGBA<unsigned char> >::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::cpu_baseline::`anonymous namespace'::RGBA2mRGBA<unsigned char> >::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::cpu_baseline::`anonymous namespace'::Gray2RGB5x5>::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::cpu_baseline::`anonymous namespace'::RGB5x52Gray>::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::cpu_baseline::`anonymous namespace'::Gray2RGB<float> >::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::cpu_baseline::`anonymous namespace'::Gray2RGB<unsigned short> >::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::cpu_baseline::`anonymous namespace'::Gray2RGB<unsigned char> >::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::cpu_baseline::`anonymous namespace'::RGB2Gray<float> >::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::cpu_baseline::`anonymous namespace'::RGB2Gray<unsigned short> >::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::cpu_baseline::`anonymous namespace'::RGB2Gray<unsigned char> >::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::cpu_baseline::`anonymous namespace'::RGB5x52RGB>::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::cpu_baseline::`anonymous namespace'::RGB2RGB5x5>::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::cpu_baseline::`anonymous namespace'::RGB2RGB<float> >::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::cpu_baseline::`anonymous namespace'::RGB2RGB<unsigned short> >::operator ()(const class cv::Range &) const
void __cdecl cv::impl::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::cpu_baseline::`anonymous namespace'::RGB2RGB<unsigned char> >::operator ()(const class cv::Range &) const
F&F&F&F&F&F&F&F&
@#K#K#K#K#K#K#K#K
I[XFSWRYQZO[M[KZJXJVKULVKW WFRWQYO[ TF[F
F]OFI[ PFJ[ ]FLS SOW[ ROV[ LFSF YF_F F[M[ S[Y[
H\QFK[ RFL[ NFUF H[W[YUV[
E`NFH[ NFO[ OFPY \FO[ \FV[ ]FW[ KFOF \F`F E[K[ S[Z[
F_OFI[ OFVX OIV[ \FV[ LFOF YF_F F[L[
G]SFPGNILLKOJSJVKYLZN[Q[TZVXXUYRZNZKYHXGVFSF SFQGOIMLLOKSKVLYN[ Q[SZUXWUXRYNYKXHVF
F]OFI[ PFJ[ LFXF[G\I\K[NYPUQMQ XFZG[I[KZNXPUQ F[M[
G]SFPGNILLKOJSJVKYLZN[Q[TZVXXUYRZNZKYHXGVFSF SFQGOIMLLOKSKVLYN[ Q[SZUXWUXRYNYKXHVF LYLXMVOUPURVSXS_T`V`W^W] SXT^U_V_W^
F^OFI[ PFJ[ LFWFZG[I[KZNYOVPMP WFYGZIZKYNXOVP RPTQURVZW[Y[ZYZX URWYXZYZZY F[M[
G^ZH[H\F[L[JZHYGVFRFOGMIMKNMONVRXT MKOMVQWRXTXWWYVZS[O[LZKYJWJUI[JYKY
H]UFO[ VFP[ OFLLNF]F\L\F L[S[
F_NFKQJUJXKZN[R[UZWXXU\F OFLQKUKXLZN[ KFRF YF_F
H\NFO[ OFPY \FO[ LFRF XF^F
E_MFK[ NFLY UFK[ UFS[ VFTY ]FS[ JFQF ZF`F
G]NFU[ OFV[ \FH[ LFRF XF^F F[L[ R[X[
H]NFRPO[ OFSPP[ ]FSP LFRF YF_F L[S[
G][FH[ \FI[ OFLLNF\F H[V[XUU[
H\KILKXWYYY[ LLXX KIKKLMXYY[ PPLTKVKXLZK[ KVMZ LTLVMXMZK[ SSXN VIVLWNYNYLWKVI VIWLYN
H\QIK[ SIY[ RIX[ MUVU I[O[ U[[[ QBOCNENGOIQJSJUIVGVEUCSBQB
G]IB[b
F^RJIZ RJ[Z
I]NONPMPMONNPMTMVNWOXQXXYZZ[ WOWXXZZ[[[ WQVRPSMTLVLXMZP[S[UZWX PSNTMVMXNZP[
G\LFL[ MFM[ MPONQMSMVNXPYSYUXXVZS[Q[OZMX SMUNWPXSXUWXUZS[ IFMF
H[WPVQWRXQXPVNTMQMNNLPKSKULXNZQ[S[VZXX QMONMPLSLUMXOZQ[
H]WFW[ XFX[ WPUNSMQMNNLPKSKULXNZQ[S[UZWX QMONMPLSLUMXOZQ[ TFXF W[[[
H[LSXSXQWOVNTMQMNNLPKSKULXNZQ[S[VZXX WSWPVN QMONMPLSLUMXOZQ[
KXUGTHUIVHVGUFSFQGPIP[ SFRGQIQ[ MMUM M[T[
I\QMONNOMQMSNUOVQWSWUVVUWSWQVOUNSMQM ONNPNTOV UVVTVPUN VOWNYMYNWN NUMVLXLYM[P\U\X]Y^ LYMZP[U[X\Y^Y_XaUbObLaK_K^L\O[
G]LFL[ MFM[ MPONRMTMWNXPX[ TMVNWPW[ IFMF I[P[ T[[[
MXRFQGRHSGRF RMR[ SMS[ OMSM O[V[
MXSFRGSHTGSF TMT_SaQbObNaN`O_P`Oa SMS_RaQb PMTM
G\LFL[ MFM[ WMMW RSX[ QSW[ IFMF TMZM I[P[ T[Z[
MXRFR[ SFS[ OFSF O[V[
BcGMG[ HMH[ HPJNMMOMRNSPS[ OMQNRPR[ SPUNXMZM]N^P^[ ZM\N]P][ DMHM D[K[ O[V[ Z[a[
G]LML[ MMM[ MPONRMTMWNXPX[ TMVNWPW[ IMMM I[P[ T[[[
H\QMNNLPKSKULXNZQ[S[VZXXYUYSXPVNSMQM QMONMPLSLUMXOZQ[ S[UZWXXUXSWPUNSM
G\LMLb MMMb MPONQMSMVNXPYSYUXXVZS[Q[OZMX SMUNWPXSXUWXUZS[ IMMM IbPb
H\WMWb XMXb WPUNSMQMNNLPKSKULXNZQ[S[UZWX QMONMPLSLUMXOZQ[ Tb[b
IZNMN[ OMO[ OSPPRNTMWMXNXOWPVOWN KMOM K[R[
J[WOXMXQWOVNTMPMNNMOMQNRPSUUWVXW MPNQPRUTWUXVXYWZU[Q[OZNYMWM[NY
KZPFPWQZS[U[WZXX QFQWRZS[ MMUM
G]LMLXMZP[R[UZWX MMMXNZP[ WMW[ XMX[ IMMM TMXM W[[[
I[LMR[ MMRY XMR[ JMPM TMZM
F^JMN[ KMNX RMN[ RMV[ SMVX ZMV[ GMNM WM]M
H\LMW[ MMX[ XML[ JMPM TMZM J[P[ T[Z[
H[LMR[ MMRY XMR[P_NaLbKbJaK`La JMPM TMZM
I[WML[ XMM[ MMLQLMXM L[X[XWW[
G^QMNNLPKRJUJXKZN[P[RZUWWTYPZM QMONMPLRKUKXLZN[ QMSMUNVPXXYZZ[ SMTNUPWXXZZ[[[
G\TFQGOIMMLPKTJZIb TFRGPINMMPLTKZJb TFVFXGYHYKXMWNTOPO VFXHXKWMVNTO POTPVRWTWWVYUZR[P[NZMYLV POSPURVTVWUYTZR[
H\IPKNMMOMQNROSRSVRZOb JOLNPNRO ZMYPXRSYP^Nb YMXPWRSY
I\VNTMRMONMQLTLWMYNZP[R[UZWWXTXQWOSJRHRFSEUEWFYH RMPNNQMTMXNZ R[TZVWWTWPVNTKSISGTFVFYH
I[XPVNTMPMNNNPPRSS PMONOPQRSS SSNTLVLXMZP[S[UZWX SSOTMVMXNZP[
I[TFRGQHQIRJUKZKZJWKSMPOMRLULWMYP[S]T_TaSbQbPa ULQONRMUMWNYP[
G]HQIOKMNMONOPNTL[ MMNNNPMTK[ NTPPRNTMVMXNYOYRXWUb VMXOXRWWTb
F]GQHOJMMMNNNPMUMXNZO[ LMMNMPLULXMZO[Q[SZUXWUXRYMYIXGVFTFRHRJSMUPWRZT SZUWVUWRXMXIWGVF
LXRMPTOXOZP[S[UYVW SMQTPXPZQ[
H\NMJ[ OMK[ XMYNZNYMWMUNQROSMS OSQTSZT[ OSPTRZS[U[WZYW
H\KFMFOGPHQJWXXZY[ MFOHPJVXWZY[Z[ RMJ[ RMK[
F]MMGb NMHb MPLVLYN[P[RZTXVU XMUXUZV[Y[[Y\W YMVXVZW[
H\NML[ OMNSMXL[ YMXQVU ZMYPXRVUTWQYOZL[ KMOM
IZTFRGQHQIRJUKXK UKQLOMNONQPSSTVT UKRLPMOOOQQSST STOUMVLXLZN\S^T_TaRbPb STPUNVMXMZO\S^
I[RMONMQLTLWMYNZP[R[UZWWXTXQWOVNTMRM RMPNNQMTMXNZ R[TZVWWTWPVN
G]PNL[ PNM[ VNV[ VNW[ IPKNNM[M IPKONN[N
H[LVMYNZP[R[UZWWXTXQWOVNTMRMONMQLTHb R[TZVWWTWPVN RMPNNQMTIb
H][MQMNNLQKTKWLYMZO[Q[TZVWWTWQVOUNSM QMONMQLTLXMZ Q[SZUWVTVPUN UN[N
H\SNP[ SNQ[ JPLNOMZM JPLOONZN
H\IQJOLMOMPNPPNVNYP[ NMONOPMVMYNZP[Q[TZVXXUYRYOXMWNXOYR XUYO
G]ONMOKQJTJWKYLZN[Q[TZWXYUZRZOXMVMTORSPXMb JWLYNZQZTYWWYU ZOXNVNTPRSPYNb
I[KMMMONPPU_VaWb MMNNOPT_UaWbYb ZMYOWRM]K`Jb
F]UFOb VFNb GQHOJMMMNNNPMUMXOZRZTYWVYS LMMNMPLULXMZO[R[TZVXXUYS[M
F]JQLOONNMLNJQITIWJZK[M[OZQWRT IWJYKZMZOYQW QTQWRZS[U[WZYWZTZQYNXMWNYOZQ QWRYSZUZWYYW
H]XMVTUXUZV[Y[[Y\W YMWTVXVZW[ VTVQUNSMQMNNLQKTKWLYMZO[Q[SZUWVT QMONMQLTLXMZ
H[PFLSLVMYNZ QFMS MSNPPNRMTMVNWOXQXTWWUZR[P[NZMWMS VNWPWTVWTZR[ MFQF
I[WPWQXQXPWNUMRMONMQLTLWMYNZP[R[UZWW RMPNNQMTMXNZ
H]ZFVTUXUZV[Y[[Y\W [FWTVXVZW[ VTVQUNSMQMNNLQKTKWLYMZO[Q[SZUWVT QMONMQLTLXMZ WF[F
I[MVQUTTWRXPWNUMRMONMQLTLWMYNZP[R[UZWX RMPNNQMTMXNZ
KZZGYHZI[H[GZFXFVGUHTJSMP[O_Na XFVHUJTNRWQ[P^O`NaLbJbIaI`J_K`Ja OMYM
H\YMU[T^RaObLbJaI`I_J^K_J` XMT[S^QaOb VTVQUNSMQMNNLQKTKWLYMZO[Q[SZUWVT QMONMQLTLXMZ
H]PFJ[ QFK[ MTOPQNSMUMWNXOXQVWVZW[ UMWOWQUWUZV[Y[[Y\W MFQF
LYUFTGUHVGUF MQNOPMSMTNTQRWRZS[ RMSNSQQWQZR[U[WYXW
LYVFUGVHWGVF NQOOQMTMUNUQR[Q^P`OaMbKbJaJ`K_L`Ka SMTNTQQ[P^O`Mb
H\PFJ[ QFK[ XNWOXPYOYNXMWMUNQROSMS OSQTSZT[ OSPTRZS[U[WZYW MFQF
MYUFQTPXPZQ[T[VYWW VFRTQXQZR[ RFVF
AbBQCOEMHMINIPHTF[ GMHNHPGTE[ HTJPLNNMPMRNSOSQP[ PMRORQO[ RTTPVNXMZM\N]O]Q[W[Z\[ ZM\O\QZWZZ[[^[`YaW
F]GQHOJMMMNNNPMTK[ LMMNMPLTJ[ MTOPQNSMUMWNXOXQVWVZW[ UMWOWQUWUZV[Y[[Y\W
G\HQIOKMNMONOPNTJb MMNNNPMTIb NTOQQNSMUMWNXOYQYTXWVZS[Q[OZNWNT WNXPXTWWUZS[ FbMb
H\XMRb YMSb VTVQUNSMQMNNLQKTKWLYMZO[Q[SZUWVT QMONMQLTLXMZ ObVb
IZJQKOMMPMQNQPPTN[ OMPNPPOTM[ PTRPTNVMXMYNYOXPWOXN
J[XOXPYPYOXNUMRMONNONQORVVWW NPOQVUWVWYVZS[P[MZLYLXMXMY
KYTFPTOXOZP[S[UYVW UFQTPXPZQ[ NMWM
F]GQHOJMMMNNNQLWLYN[ LMMNMQKWKYLZN[P[RZTXVT XMVTUXUZV[Y[[Y\W YMWTVXVZW[
H\IQJOLMOMPNPQNWNYP[ NMONOQMWMYNZP[Q[TZVXXUYQYMXMYO
C`DQEOGMJMKNKQIWIYK[ IMJNJQHWHYIZK[M[OZQXRV TMRVRYSZU[W[YZ[X\V]R]M\M]O UMSVSYU[
H\KQMNOMRMSOSR QMRORRQVPXNZL[K[JZJYKXLYKZ QVQYR[U[WZYW YNXOYPZOZNYMXMVNTPSRRVRYS[
G\HQIOKMNMONOQMWMYO[ MMNNNQLWLYMZO[Q[SZUXWT ZMV[U^SaPbMbKaJ`J_K^L_K` YMU[T^RaPb
H\YMXOVQNWLYK[ LQMOOMRMVO MOONRNVOXO LYNYRZUZWY NYR[U[WYXW
G^VGUHVIWHWGUFRFOGMILLL[ RFPGNIMLM[ \G[H\I]H]G\FZFXGWIW[ ZFYGXIX[ IM[M I[P[ T[[[
G]WGVHWIXHWGUFRFOGMILLL[ RFPGNIMLM[ WMW[ XMX[ IMXM I[P[ T[[[
G]VGUHVIWHWGUF XFRFOGMILLL[ RFPGNIMLM[ WHW[ XFX[ IMWM I[P[ T[[[
BcRGQHRISHRGPFMFJGHIGLG[ MFKGIIHLH[ ]G\H]I^H]G[FXFUGSIRLR[ XFVGTISLS[ ]M][ ^M^[ DM^M D[K[ O[V[ Z[a[
BcRGQHRISHRGPFMFJGHIGLG[ MFKGIIHLH[ \G[H\I]H]G[F ^FXFUGSIRLR[ XFVGTISLS[ ]H][ ^F^[ DM]M D[K[ O[V[ Z[a[
MXRMR[ SMS[ OMSM O[V[
IZWNUMRMONMPLSLVMYNZQ[T[VZ RMPNNPMSMVNYOZQ[ MTUT
I\TFQGOJNLMOLTLXMZO[Q[TZVWWUXRYMYIXGVFTF TFRGPJOLNOMTMXNZO[ Q[SZUWVUWRXMXIWGVF NPWP
G]UFOb VFNb QMMNKPJSJVKXMZP[S[WZYXZUZRYPWNTMQM QMNNLPKSKVLXNZP[ S[VZXXYUYRXPVNTM
I[TMVNXPXOWNTMQMNNMOLQLSMUOWSZ QMONNOMQMSNUSZT\T^S_Q_
G]LMKNJPJRKUOYP[ JRKTOXP[P]O`MbLbKaJ_J\KXMTOQRNTMVMYNZPZTYXWZU[T[SZSXTWUXTY VMXNYPYTXXWZ
E_YGXHYIZHYGWFTFQGOINKMNLRJ[I_Ha TFRGPIOKNNLWK[J^I`HaFbDbCaC`D_E`Da _G^H_I`H`G_F]F[GZHYJXMU[T_Sa ]F[HZJYNWWV[U^T`SaQbObNaN`O_P`Oa IM^M
F^[GZH[I\H[GXFUFRGPIOKNNMRK[J_Ia UFSGQIPKONMWL[K^J`IaGbEbDaD`E_F`Ea YMWTVXVZW[Z[\Y]W ZMXTWXWZX[ JMZM
F^YGXHYIZHZGXF \FUFRGPIOKNNMRK[J_Ia UFSGQIPKONMWL[K^J`IaGbEbDaD`E_F`Ea [FWTVXVZW[Z[\Y]W \FXTWXWZX[ JMYM
@cTGSHTIUHTGRFOFLGJIIKHNGRE[D_Ca OFMGKIJKINGWF[E^D`CaAb?b>a>`?_@`?a `G_H`IaH`G]FZFWGUITKSNRRP[O_Na ZFXGVIUKTNRWQ[P^O`NaLbJbIaI`J_K`Ja ^M\T[X[Z\[_[aYbW _M]T\X\Z][ DM_M
@cTGSHTIUHTGRFOFLGJIIKHNGRE[D_Ca OFMGKIJKINGWF[E^D`CaAb?b>a>`?_@`?a ^G]H^I_H_G]F aFZFWGUITKSNRRP[O_Na ZFXGVIUKTNRWQ[P^O`NaLbJbIaI`J_K`Ja `F\T[X[Z\[_[aYbW aF]T\X\Z][ DM^M
LYMQNOPMSMTNTQRWRZS[ RMSNSQQWQZR[U[WYXW
H\QFNGLJKOKRLWNZQ[S[VZXWYRYOXJVGSFQF QFOGNHMJLOLRMWNYOZQ[ S[UZVYWWXRXOWJVHUGSF
H\NJPISFS[ RGR[ N[W[
H\LJMKLLKKKJLHMGPFTFWGXHYJYLXNUPPRNSLUKXK[ TFVGWHXJXLWNTPPR KYLXNXSZVZXYYX NXS[W[XZYXYV
H\LJMKLLKKKJLHMGPFTFWGXIXLWNTOQO TFVGWIWLVNTO TOVPXRYTYWXYWZT[P[MZLYKWKVLUMVLW WQXTXWWYVZT[
H\THT[ UFU[ UFJUZU Q[X[
H\MFKP KPMNPMSMVNXPYSYUXXVZS[P[MZLYKWKVLUMVLW SMUNWPXSXUWXUZS[ MFWF MGRGWF
H\WIVJWKXJXIWGUFRFOGMILKKOKULXNZQ[S[VZXXYUYTXQVOSNRNOOMQLT RFPGNIMKLOLUMXOZQ[ S[UZWXXUXTWQUOSN
H\KFKL KJLHNFPFUIWIXHYF LHNGPGUI YFYIXLTQSSRVR[ XLSQRSQVQ[
H\PFMGLILLMNPOTOWNXLXIWGTFPF PFNGMIMLNNPO TOVNWLWIVGTF POMPLQKSKWLYMZP[T[WZXYYWYSXQWPTO PONPMQLSLWMYNZP[ T[VZWYXWXSWQVPTO
H\XMWPURRSQSNRLPKMKLLINGQFSFVGXIYLYRXVWXUZR[O[MZLXLWMVNWMX QSORMPLMLLMIOGQF SFUGWIXLXRWVVXTZR[
MWR[QZRYSZS\R^Q_
MWRMQNROSNRM R[QZRYSZS\R^Q_
MWRFQHRTSHRF RHRN RYQZR[SZRY
I[MJNKMLLKLJMHNGPFSFVGWHXJXLWNVORQRT SFUGVHWJWLVNTP RYQZR[SZRY
NVRFQM SFQM
JZNFMM OFMM VFUM WFUM
JZRFRR MIWO WIMO
KYUBNRUb
KYOBVROb
KYOBOb UBUb
F^RJR[ JRZR J[Z[
F^RJR[ JJZJ JRZR
MWQQQSSSSQQQ RQRS QRSR
E_RIQJRKSJRI IR[R RYQZR[SZRY
E_YIK[ IO[O IU[U
E_IM[M IR[R IW[W
F^ZFJMZT JVZV J[Z[
F^JFZMJT JVZV J[Z[
F_[WYWWVUTRPQOONMNKOJQJSKUMVOVQURTUPWNYM[M
F^IUISJPLONOPPTSVTXTZS[Q ISJQLPNPPQTTVUXUZT[Q[O
G]JTROZT JTRPZT
LXTFOL TFUGOL
LXPFUL PFOGUL
H\KFLHNJQKSKVJXHYF KFLINKQLSLVKXIYF
MWRHSGRFQGQIRKSL
MWQFRGSISKRLQKRJ
E[HMLMRY KMR[ [BR[
F^ZJSJOKMLKNJQJSKVMXOYSZZZ
F^JJJQKULWNYQZSZVYXWYUZQZJ
F^JJQJUKWLYNZQZSYVWXUYQZJZ
F^JZJSKOLMNKQJSJVKXMYOZSZZ
F^ZJSJOKMLKNJQJSKVMXOYSZZZ JRVR
E_XP[RXT UMZRUW IRZR
JZPLRITL MORJWO RJR[
E_LPIRLT OMJROW JR[R
JZPXR[TX MURZWU RIRZ
I\XRWOVNTMRMONMQLTLWMYNZP[R[UZWXXUYPYKXHWGUFRFPGOHOIPIPH RMPNNQMTMXNZ R[TZVXWUXPXKWHUF
H\JFR[ KFRY ZFR[ JFZF KGYG
AbDMIMRY HNR[ b:R[
F^[CZD[E\D\C[BYBWCUETGSJRNPZO^N` VDUFTJRVQZP]O_MaKbIbHaH`I_J`Ia QKNLLNKQKSLVNXQYSYVXXVYSYQXNVLSKQK
F_\S[UYVWVUUTTQPPONNLNJOIQISJULVNVPUQTTPUOWNYN[O\Q\S
F^[FI[ NFPHPJOLMMKMIKIIJGLFNFPGSHVHYG[F WTUUTWTYV[X[ZZ[X[VYTWT
F_[NZO[P\O\N[MZMYNXPVUTXRZP[M[JZIXIUJSPORMSKSIRGPFNGMIMKNNPQUXWZZ[[[\Z\Y M[KZJXJUKSMQ MKNMVXXZZ[
E`WNVLTKQKOLNMMPMSNUPVSVUUVS QKOMNPNSOUPV WKVSVUXVZV\T]Q]O\L[JYHWGTFQFNGLHJJILHOHRIUJWLYNZQ[T[WZYYZX XKWSWUXV
H\PBP_ TBT_ XIWJXKYJYIWGTFPFMGKIKKLMMNOOUQWRYT KKMMONUPWQXRYTYXWZT[P[MZKXKWLVMWLX
JZUITJUKVJVIUGSFQFOGNINKOMQOVR OMTPVRWTWVVXTZ PNNPMRMTNVPXU[ NVSYU[V]V_UaSbQbOaN_N^O]P^O_
JZRFQHRJSHRF RFRb RQQTRbSTRQ LMNNPMNLLM LMXM TMVNXMVLTM
JZRFQHRJSHRF RFRT RPQRSVRXQVSRRP RTRb R^Q`RbS`R^ LMNNPMNLLM LMXM TMVNXMVLTM L[N\P[NZL[ L[X[ T[V\X[VZT[
I\XFX[ KFXF PPXP K[X[
E`QFNGKIILHOHRIUKXNZQ[T[WZZX\U]R]O\LZIWGTFQF ROQPQQRRSRTQTPSORO RPRQSQSPRP
J[PFNGOIQJ PFOGOI UFWGVITJ UFVGVI QJOKNLMNMQNSOTQUTUVTWSXQXNWLVKTJQJ RUR[ SUS[ NXWX
I\RFOGMILLLMMPORRSSSVRXPYMYLXIVGSFRF RSR[ SSS[ NWWW
D`PFMGJIHLGOGSHVJYM[P\T\W[ZY\V]S]O\LZIWGTFPF RFR\ GQ]Q
G`PMMNKPJSJTKWMYPZQZTYVWWTWSVPTNQMPM ]GWG[HUN ]G]M\IVO \HVN
F\IIJGLFOFQGRIRLQOPQNSKU OFPGQIQMPPNS VFT[ WFS[ KUYU
I\MFMU NFMQ MQNOONQMTMWNXPXRWTUV TMVNWPWRTXTZU[W[YY KFNF
I\RNOOMQLTLUMXOZR[S[VZXXYUYTXQVOSNRN RHNJRFRN SHWJSFSN RSQTQURVSVTUTTSSRS RTRUSUSTRT
G^QHRFR[ THSFS[ JHKFKMLPNRQSRS MHLFLNMQ [HZFZMYPWRTSSS XHYFYNXQ NWWW
G]LFL[ MFM[ IFUFXGYHZJZMYOXPUQMQ UFWGXHYJYMXOWPUQ I[Y[YVX[
H[YGUGQHNJLMKPKSLVNYQ[U\Y\ YGVHSJQMPPPSQVSYV[Y\
F_OQMQKRJSIUIWJYKZM[O[QZRYSWSURSQROQ SHPQ ZJRR \QST
H\OKUY UKOY KOYU YOKU
F^NVLUKUIVHXHYI[K\L\N[OYOXNVKRJOJMKJMHPGTGWHYJZMZOYRVVUXUYV[X\Y\[[\Y\X[VYUXUVV JMKKMIPHTHWIYKZM
F^NMLNKNIMHKHJIHKGLGNHOJOKNMKQJTJVKYM[P\T\W[YYZVZTYQVMUKUJVHXGYG[H\J\K[MYNXNVM JVKXMZP[T[WZYXZV
I[KYYK QLULYKXOXS ULXLXO
I[YKKY LQLUKYOXSX LULXOX
I[YYKK SLOLKKLOLS OLLLLO
I[KKYY QXUXYYXUXQ UXXXXU
F_JMILIJJHLGNGPHQIRKSP IJKHMHOIPJQLRPR[ [M\L\J[HYGWGUHTISKRP \JZHXHVIUJTLSPS[
F^IGJKKMMOPPTPWOYMZK[G IGJJKLMNPOTOWNYLZJ[G PONPMQLSLVMXOZQ[S[UZWXXVXSWQVPTO PPNQMSMVNY VYWVWSVQTP
F^MJMV NKNU VKVU WJWV IGKIMJPKTKWJYI[G IYKWMVPUTUWVYW[Y
F^[ILIJJILINJPLQNQPPQNQLPJ[J IMJOKPMQ QMPKOJMI IXXXZW[U[SZQXPVPTQSSSUTWIW [TZRYQWP STTVUWWX
F]OUMTLTJUIWIXJZL[M[OZPXPWOUJPINIKJILHOGSGWHYJZLZOYRVUUWUYV[X[YZZX MSKPJNJKKILH SGVHXJYLYOXRVU
G_HKKHMKMV JILLLV MKPHRKRU OIQLQU RKUHWKW[ TIVLV[ WKZH[J\M\P[SZUXWUYP[ YIZJ[M[PZSYUWWTYP[
F^ISMSLRKOKMLJNHQGSGVHXJYMYOXRWS[S ITOTMRLOLMMJOHQG SGUHWJXMXOWRUT[T KXYX KYYY
F_GLJIMLMX IJLMLX MLPISLSX OJRMRX SLVIYLYW[Y UJXMXXZZ]W
G]ZIJY ZIWJQJ XKUKQJ ZIYLYR XKXNYR QRJR PSMSJR QRQY PSPVQY
F^HOJKOU JMOWRPWPZO[M[KZIXHWHUITKTMUPVRWUWXUZ WHVIUKUMWQXTXWWYUZ
F^IOLLPN KMOORLUN QMTOWLYN VMXO[L IULRPT KSOURRUT QSTUWRYT VSXU[R
F^JHNJPLQOQRPUNWJY JHMIOJQLRO RRQUOWMXJY ZHWIUJSLRO RRSUUWWXZY ZHVJTLSOSRTUVWZY IP[P IQ[Q
NVQQQSSSSQQQ QQSS SQQS
JZMPQRTTVVWYW[V]U^ MQST MRPSTUVWWY
JZWKVMTOPQMR SPMS UFVGWIWKVNTPQRMT
H\SMONLPKRKTLVNWQWUVXTYRYPXNVMSM XNSM VMQNLP ONKR LVQW NWSVXT UVYR
J[SMPNNPMRMTNVPWRWUVWTXRXPWNUMSM OPUM NRVN MTWO NUXP OVWR PWVT
JZOGO^ UFU] MNWL MOWM MWWU MXWV
JZNFNX VLV^ NNVL NOVM NWVU NXVV
JZNBNW NNQLTLVMWOWQVSSUQVNW NNQMTMVN UMVOVQUSSU
E_HIHL \I\L HI\I HJ\J HK\K HL\L
JZMNMQ WNWQ MNWN MOWO MPWP MQWQ
JZMLWX MLONQOTOVNWMWKUKUMTO ONTO QOWM VKVN ULWL WXUVSUPUNVMWMYOYOWPU UVPU SUMW NVNY MXOX
JZPOOMOKMKMMNNPOSOUNWL NKNN MLOL MMSO POUN WLWY
A^GfHfIeIdHcGcFdFfGhIiKiNhPfQdR`RUQ;Q4R/S-U,V,X-Y/Y3X6W8U;P?JCHEFHEJDNDREVGYJ[N\R\V[XZZW[T[PZMYKWITHPHMIKKJNJRKUMW GdGeHeHdGd U;Q?LCIFGIFKENERFVGXJ[ R\U[WZYWZTZPYMXKVITH
EfNSOUQVSVUUVSVQUOSNQNOONPMSMVNYP[S\V\Y[[Y\W]T]P\MZJXIUHRHOIMJKLIOHSHXI]KaMcPeTfYf]e`cba KLJNIRIXJ\L`NbQdUeYe]d_cba POTO OPUP NQVQ NRVR NSVS OTUT PUTU aLaNcNcLaL bLbN aMcM aVaXcXcVaV bVbX aWcW
D`H@Hd M@Md W@Wd \@\d MMWK MNWL MOWM MWWU MXWV MYWW
H\PMMNLOKQKSLUMVPWTWWVXUYSYQXOWNTMPM MNLPLSMUNVPW WVXTXQWOVNTM
JZQCVMRTRU ULQS TITKPRRUUY W\UYSXQXOYN[N]O_Ra W\UZSYOYO]P_Ra SXPZN]
JZPOOMOKMKMMNNPOSOUNWL NKNN MLOL MMSO POUN WLSY
IjNQOOQNSNUOVQVSUUSVQVOUNTMQMNNKPISHWH[I^K`NaRaW`[_]]`ZcVfQiMk WHZI]K_N`R`W_[^]\`YcTgQi POTO OPUP NQVQ NRVR NSVS OTUT PUTU eLeNgNgLeL fLfN eMgM eVeXgXgVeV fVfX eWgW
D`H>Hf I>If M>Mf QBSBSDQDQAR?T>W>Y?[A\D\I[LYNWOUOSNRLQNOQNROSQVRXSVUUWUYV[X\[\`[cYeWfTfReQcQ`S`SbQb RBRD QCSC Y?ZA[D[IZLYN RLRNPQNRPSRVRX YVZX[[[`ZcYe R`Rb QaSa
AcHBHb IBIb [B[b \B\b DB`B DbMb Wb`b
BaGBQPFb FBPP EBPQ EB\B^I[B Ga\a Fb\b^[[b
I[X+U1R8P=OANFMNMVN^OcPgRlUsXy U1S6Q<P@OFNNNVO^PdQhSnUs
I[L+O1R8T=UAVFWNWVV^UcTgRlOsLy O1Q6S<T@UFVNVVU^TdShQnOs
I[M+MRMy N+NRNy M+X+ MyXy
I[V+VRVy W+WRWy L+W+ LyWy
H[V+R1P5O:O>PBTJTLSNROMRRUSVTXTZPbOfOjPoRsVy T.R2Q5P:P>QCRF R^QaPfPjQoRrTv
I\N+R1T5U:U>TBPJPLQNROWRRUQVPXPZTbUfUjToRsNy P.R2S5T:T>SCRF R^SaTfTjSoRrPv
I[V.S1Q4O8N=NCOIPMSXT\UbUgTlSoQs S1Q5P8O=OBPHQLTWU[VaVgUlSpQsNv
I[N.Q1S4U8V=VCUITMQXP\ObOgPlQoSs Q1S5T8U=UBTHSLPWO[NaNgOlQpSsVv
7Z:RARRo @RQo ?RRr Z"VJRr
Ca].\.[/[0\1]1^0^.],[+Y+W,U.T0S3R:QJQjPsOv \/\0]0]/\/ R:Rj U.T1S:SZRjQqPtOvMxKyIyGxFvFtGsHsItIuHvGv GtGuHuHtGt
H\RFJ[ RIK[J[ RIY[Z[ RFZ[ MUWU LVXV
H\LFL[ MGMZ LFTFWGXHYJYMXOWPTQ MGTGWHXJXMWOTP MPTPWQXRYTYWXYWZT[L[ MQTQWRXTXWWYTZMZ
H]ZKYIWGUFQFOGMILKKNKSLVMXOZQ[U[WZYXZV ZKYKXIWHUGQGOHMKLNLSMVOYQZUZWYXXYVZV
H]LFL[ MGMZ LFSFVGXIYKZNZSYVXXVZS[L[ MGSGVHWIXKYNYSXVWXVYSZMZ
I\MFM[ NGNZ MFYF NGYGYF NPTPTQ NQTQ NZYZY[ M[Y[
I[MFM[ NGN[M[ MFYF NGYGYF NPTPTQ NQTQ
H]ZKYIWGUFQFOGMILKKNKSLVMXOZQ[U[WZYXZVZRUR ZKYKXIWHUGQGOHNIMKLNLSMVNXOYQZUZWYXXYVYSUSUR
G]KFK[ KFLFL[K[ YFXFX[Y[ YFY[ LPXP LQXQ
NWRFR[S[ RFSFS[
J[VFVVUYSZQZOYNVMV VFWFWVVYUZS[Q[OZNYMV
H]LFL[M[ LFMFM[ ZFYFMR ZFMS POY[Z[ QOZ[
IZMFM[ MFNFNZ NZYZY[ M[Y[
F^JFJ[ KKK[J[ KKR[ JFRX ZFRX YKR[ YKY[Z[ ZFZ[
G]KFK[ LIL[K[ LIY[ KFXX XFXX XFYFY[
G]PFNGLIKKJNJSKVLXNZP[T[VZXXYVZSZNYKXIVGTFPF QGNHLKKNKSLVNYQZSZVYXVYSYNXKVHSGQG
H\LFL[ MGM[L[ LFUFWGXHYJYMXOWPUQMQ MGUGWHXJXMWOUPMP
G]PFNGLIKKJNJSKVLXNZP[T[VZXXYVZSZNYKXIVGTFPF QGNHLKKNKSLVNYQZSZVYXVYSYNXKVHSGQG SXX]Y] SXTXY]
H\LFL[ MGM[L[ LFTFWGXHYJYMXOWPTQMQ MGTGWHXJXMWOTPMP RQX[Y[ SQY[
H\YIWGTFPFMGKIKKLMMNOOTQVRWSXUXXWYTZPZNYMXKX YIWIVHTGPGMHLILKMMONTPVQXSYUYXWZT[P[MZKX
J[RGR[ SGS[R[ LFYFYG LFLGYG
G]KFKULXNZQ[S[VZXXYUYF KFLFLUMXNYQZSZVYWXXUXFYF
H\JFR[ JFKFRX ZFYFRX ZFR[
E_GFM[ GFHFMX RFMX RIM[ RIW[ RFWX ]F\FWX ]FW[
H\KFX[Y[ KFLFY[ YFXFK[ YFL[K[
I\KFRPR[S[ KFLFSP ZFYFRP ZFSPS[
H\XFK[ YFL[ KFYF KFKGXG LZYZY[ K[Y[
E\XFVHTKQPOSLWIZG[E[DZDXEWFXEY XFWJUTT[ XFU[ T[TYSVRTPRNQLQKRKTLWOZR[V[XZ
F^UGTHSJQOOUNWLZJ[ THSKQSPVOXMZJ[H[GZGXHWIXHY OLNNMOKOJNJLKJMHOGRFXFZG[I[KZMXNTORO XFYGZIZKYMXN TOWPXQYSYVXYWZU[S[RZRXSU TOVPWQXSXVWYU[
H]KHJJJLKNNOQOUNWMYKZIZGYFWFTGQJOMMQLULXMZP[R[UZWXXVXTWRURSSRU WFUGRJPMNQMUMXNZP[
F]UGTHSJQOOUNWLZJ[ THSKQSPVOXMZJ[H[GZGXHWJWLXNZP[S[UZWXYTZOZLYIWGUFPFMGKIJKJMKNMNNMOK
I\WIVJVLWMYMZKZIYGWFTFRGQHPJPLQNSO TFRHQJQMSO SOQONPLRKTKWLYMZO[R[UZWXXVXTWRURSSRU QOOPMRLTLXMZ
G\WHVJTORUQWOZM[ QLPNNOLOKMKKLINGQF[FXGWHVKTSSVRXPZM[K[IZHYHXIWJXIY SFWGXG OSPRRQVQXPZMXT
G]JIIKIMJOLPOPROTNWKXHXGWFVFTGRIQKPNPQQSSTUTWSYQZO WFUGSIRKQNQRST ZOYSWWUYSZO[L[JZIXIWJVKWJX YSWVUXRZO[
F^LLKKKILGOFRFOQMWLYKZI[G[FZFXGWHXGY RFOONRLWKYI[ JTKSMRVOXN[L]J^H^G]F\FZGXJWLURTVTYV[W[YZ[X \FZHXLVRUVUYV[
IYWHUKSPQUPWNZL[ YLWNTOQOONNLNJOHQGUFYFWHVJTPRVQXOZL[J[IZIXJWKXJY
IZYFWHUKSPPYN] YMWOTPQPOONMNKOIQGUFYFWIVKSTQXPZN]M^K_J^J\KZMXOWRVVU
F^LLKKKIMGPFRFOQMWLYKZI[G[FZFXGWHXGY RFOONRLWKYI[ ZGWKUMSNPO ]G\H]I^H^G]F\FZGWLVMTNPO POSPTRUYV[ PORPSRTYV[W[YZ[X
I[MILKLMMOOPRPUOWNZK[H[GZFYFWGVHTKPUOWMZK[ VHTLRSQVPXNZK[I[HZHXIWKWMXPZR[U[WZYX
D`RFNOKUIXGZE[C[BZBXCWDXCY RFPMOQNVNZP[ RFQJPOOVOZP[ [FWORXP[ [FYMXQWVWZY[Z[\Z^X [FZJYOXVXZY[
G^RFQJOPMULWJZH[F[EZEXFWGXFY RFRKSVT[ RFSKTVT[ `G_H`IaHaG`F^F\GZJYLWQUWT[
H]SFQGOIMLLNKRKVLYMZO[Q[TZVXXUYSZOZKYHXGWGUHSJQNPSPV QGOJMNLRLVMYO[
F]UGTHSJQOOUNWLZJ[ THSKQSPVOXMZJ[H[GZGXHWIXHY OLNNMOKOJNJLKJMHOGRFVFYGZH[J[MZOYPVQTQRP VFXGYHZJZMYOXPVQ
H]UJULTNSOQPOPNNNLOIQGTFWFYGZIZMYPWSSWPYNZK[I[HZHXIWKWMXPZS[V[XZZX WFXGYIYMXPVSSVOYK[
F^UGTHSJQOOUNWLZJ[ THSKQSPVOXMZJ[H[GZGXHWIXHY OLNNMOKOJNJLKJMHOGRFWFZG[I[KZMYNVORO WFYGZIZKYMXNVO ROUPVRWYX[ ROTPURVYX[Y[[Z]X
H\NIMKMMNOPPSPVOXN[K\H\G[FZFXGWHVJUMSTRWPZN[ VJUNTUSXQZN[K[IZHXHWIVJWIX
I[YHXJVOTUSWQZO[ SLRNPONOMMMKNIPGSF\FZGYHXKVSUVTXRZO[M[KZJYJXKWLXKY UFYGZG
G]HJJGLFMFOHOKNNKVKYL[ MFNHNKKSJVJYL[N[PZSWUTVR ZFVRUVUYW[X[ZZ\X [FWRVVVYW[
G\HJJGLFMFOHOKNOLVLYM[ MFNHNKLRKVKYM[N[QZTWVTXPYMZIZGYFXFWGVIVLWNYP[Q]Q
F]ILHLGKGIHGJFNFMHLLKUJ[ LLLUK[ VFTHRLOUMYK[ VFUHTLSUR[ TLTUS[ `F^G\IZLWUUYS[
H\PKOLMLLKLIMGOFQFSGTITLSPQUOXMZJ[H[GZGXHWIXHY QFRGSISLRPPUNXLZJ[ ]G\H]I^H^G]F[FYGWIULSPRURXSZT[U[WZYX
G]JJLGNFOFQGQIOOORPT OFPGPINONRPTRTUSWQYNZL \FZLWTUX ]F[LYQWUUXSZP[L[JZIXIWJVKWJX
G\ZHYJWOVRUTSWQYOZL[ SLRNPONOMMMKNIPGSF]F[GZHYKXOVUTXQZL[H[GZGXHWJWLXOZQ[T[WZYX VFZG[G
H\WMW[X[ WMXMX[ WPUNSMPMNNLPKSKULXNZP[S[UZWX WPSNPNNOMPLSLUMXNYPZSZWX
H\LFL[M[ LFMFM[ MPONQMTMVNXPYSYUXXVZT[Q[OZMX MPQNTNVOWPXSXUWXVYTZQZMX
I[XPVNTMQMONMPLSLUMXOZQ[T[VZXX XPWQVOTNQNOONPMSMUNXOYQZTZVYWWXX
H\WFW[X[ WFXFX[ WPUNSMPMNNLPKSKULXNZP[S[UZWX WPSNPNNOMPLSLUMXNYPZSZWX
I[MTXTXQWOVNTMQMONMPLSLUMXOZQ[T[VZXX MSWSWQVOTNQNOONPMSMUNXOYQZTZVYWWXX
LZWFUFSGRJR[S[ WFWGUGSH TGSJS[ OMVMVN OMONVN
H\XMWMW\V_U`SaQaO`N_L_ XMX\W_UaSbPbNaL_ WPUNSMPMNNLPKSKULXNZP[S[UZWX WPSNPNNOMPLSLUMXNYPZSZWX
H\LFL[M[ LFMFM[ MQPNRMUMWNXQX[ MQPORNTNVOWQW[X[
NWRFQGQHRISITHTGSFRF RGRHSHSGRG RMR[S[ RMSMS[
NWRFQGQHRISITHTGSFRF RGRHSHSGRG RMRbSb RMSMSb
H[LFL[M[ LFMFM[ XMWMMW XMMX PTV[X[ QSX[
CbGMG[H[ GMHMH[ HQKNMMPMRNSQS[ HQKOMNONQORQR[S[ SQVNXM[M]N^Q^[ SQVOXNZN\O]Q][^[
H\LML[M[ LMMMM[ MQPNRMUMWNXQX[ MQPORNTNVOWQW[X[
I\QMONMPLSLUMXOZQ[T[VZXXYUYSXPVNTMQM QNOONPMSMUNXOYQZTZVYWXXUXSWPVOTNQN
H\LMLbMb LMMMMb MPONQMTMVNXPYSYUXXVZT[Q[OZMX MPQNTNVOWPXSXUWXVYTZQZMX
H\WMWbXb WMXMXb WPUNSMPMNNLPKSKULXNZP[S[UZWX WPSNPNNOMPLSLUMXNYPZSZWX
KYOMO[P[ OMPMP[ PSQPSNUMXM PSQQSOUNXNXM
J[XPWNTMQMNNMPNRPSUUWV VUWWWXVZ WYTZQZNY OZNXMX XPWPVN WOTNQNNO ONNPOR NQPRUTWUXWXXWZT[Q[NZMX
MXRFR[S[ RFSFS[ OMVMVN OMONVN
H\LMLWMZO[R[TZWW LMMMMWNYPZRZTYWW WMW[X[ WMXMX[
JZLMR[ LMMMRY XMWMRY XMR[
F^IMN[ IMJMNX RMNX RPN[ RPV[ RMVX [MZMVX [MV[
I[LMW[X[ LMMMX[ XMWML[ XMM[L[
JZLMR[ LMMMRY XMWMRYNb XMR[ObNb
I[VNL[ XMNZ LMXM LMLNVN NZXZX[ L[X[
K[UUTSRRPRNSMTLVLXMZO[Q[SZTX PRNTMVMYO[ VRTXTZV[XZYY[V WRUXUZV[
LZLVNSPO SFMXMZO[P[RZTXUUURVVWWXWZV TFNXNZO[
LXTSSTTTTSSRQROSNTMVMXNZP[S[VYXV QROTNVNYP[
K[UUTSRRPRNSMTLVLXMZO[Q[SZTX PRNTMVMYO[ ZFTXTZV[XZYY[V [FUXUZV[
LXOYQXRWSUSSRRQROSNTMVMXNZP[S[VYXV QROTNVNYP[
OXRRUOWLXIXGWFUGTIKdKfLgNfOcPZQ[S[UZVYXV TISNRRO[M`Kd
K[UUTSRRPRNSMTLVLXMZO[Q[SZTX PRNTMVMYO[ VRPd WRT[R`PdOfMgLfLdMaO_R]V[YY[V
L[LVNSPO SFL[ TFM[ OUQSSRTRVSVUUXUZV[ TRUSUUTXTZV[XZYY[V
NVSLRMSNTMSL QROXOZQ[SZTYVV RRPXPZQ[
NVSLRMSNTMSL QRKd RRO[M`KdJfHgGfGdHaJ_M]Q[TYVV
LZLVNSPO SFL[ TFM[ URUSVSURTRRTOU OURVSZT[ OUQVRZT[U[XYZV
NVNVPSRO UFOXOZQ[SZTYVV VFPXPZQ[
E^EVGSIRKSKUI[ IRJSJUH[ KUMSORPRRSRUP[ PRQSQUO[ RUTSVRWRYSYUXXXZY[ WRXSXUWXWZY[[Z\Y^V
I[IVKSMROSOUM[ MRNSNUL[ OUQSSRTRVSVUUXUZV[ TRUSUUTXTZV[XZYY[V
KYRRPRNSMTLVLXMZO[Q[SZTYUWUUTSRRQSQURWTXVXXWYV PRNTMVMYO[
L[LVNSPO QLHg RLIg OUQSSRTRVSVUUXUZV[ TRUSUUTXTZV[XZYY[V
K[UUTSRRPRNSMTLVLXMZO[Q[SZ PRNTMVMYO[ VRPdPfQgSfTcT[V[YY[V WRT[R`Pd
LZLVNSPRRSRUP[ PRQSQUO[ RUTSVRWRVU VRVUWWXWZV
NZNVPSQQQSTUUWUYTZR[ QSSUTWTYR[ NZP[U[XYZV
NVNVPSRO UFOXOZQ[SZTYVV VFPXPZQ[ PNVN
K[NRLXLZN[O[QZSXUU ORMXMZN[ VRTXTZV[XZYY[V WRUXUZV[
KZNRMTLWLZN[O[RZTXUUUR ORNTMWMZN[ URVVWWXWZV
H]LRJTIWIZK[L[NZPX MRKTJWJZK[ RRPXPZR[S[UZWXXUXR SRQXQZR[ XRYVZW[W]V
JZJVLSNRPRQSQUPXOZM[L[KZKYLYKZ WSVTWTWSVRURSSRUQXQZR[U[XYZV QSRU SSQU PXQZ QXOZ
K[NRLXLZN[O[QZSXUU ORMXMZN[ VRPd WRT[R`PdOfMgLfLdMaO_R]V[YY[V
LYLVNSPRRRTSTVSXPZN[ RRSSSVRXPZ N[P\Q^QaPdNfLgKfKdLaO^R\VYYV N[O\P^PaOdNf
H\QFNGLJKOKRLWNZQ[S[VZXWYRYOXJVGSFQF OGMJLOLRMWOZ NYQZSZVY UZWWXRXOWJUG VHSGQGNH
H\NJPISFS[ NJNKPJRHR[S[
H\LKLJMHNGPFTFVGWHXJXLWNUQL[ LKMKMJNHPGTGVHWJWLVNTQK[ LZYZY[ K[Y[
H\MFXFQO MFMGWG WFPO QNSNVOXQYTYUXXVZS[P[MZLYKWLW POSOVPXS TOWQXTXUWXTZ XVVYSZPZMYLW OZLX
H\UIU[V[ VFV[ VFKVZV UILV LUZUZV
H\MFLO NGMN MFWFWG NGWG MNPMSMVNXPYSYUXXVZS[P[MZLYKWLW LOMOONSNVOXR TNWPXSXUWXTZ XVVYSZPZMYLW OZLX
H\VGWIXIWGTFRFOGMJLOLTMXOZR[S[VZXXYUYTXQVOSNRNOOMQ WHTGRGOH PGNJMOMTNXQZ MVOYRZSZVYXV TZWXXUXTWQTO XSVPSOROOPMS QONQMT
H\KFYFO[ KFKGXG XFN[O[
H\PFMGLILKMMNNPOTPVQWRXTXWWYTZPZMYLWLTMRNQPPTOVNWMXKXIWGTFPF NGMIMKNMPNTOVPXRYTYWXYWZT[P[MZLYKWKTLRNPPOTNVMWKWIVG WHTGPGMH LXOZ UZXX
H\WPURRSQSNRLPKMKLLINGQFRFUGWIXMXRWWUZR[P[MZLXMXNZ WMVPSR WNUQRRQRNQLN PRMPLMLLMIPG LKNHQGRGUHWK SGVIWMWRVWTZ UYRZPZMY
MXRXQYQZR[S[TZTYSXRX RYRZSZSYRY
MXTZS[R[QZQYRXSXTYT\S^Q_ RYRZSZSYRY S[T\ TZS^
MXRMQNQORPSPTOTNSMRM RNROSOSNRN RXQYQZR[S[TZTYSXRX RYRZSZSYRY
MXRMQNQORPSPTOTNSMRM RNROSOSNRN TZS[R[QZQYRXSXTYT\S^Q_ RYRZSZSYRY S[T\ TZS^
MXRFRTST RFSFST RXQYQZR[S[TZTYSXRX RYRZSZSYRY
I\LKLJMHNGQFTFWGXHYJYLXNWOUPRQ LKMKMJNHQGTGWHXJXLWNUORP MIPG UGXI XMTP RPRTSTSP RXQYQZR[S[TZTYSXRX RYRZSZSYRY
MXTFRGQIQLRMSMTLTKSJRJQK RKRLSLSKRK RGQK QIRJ
MXTHSIRIQHQGRFSFTGTJSLQM RGRHSHSGRG SITJ THSL
F_\MZMXNWPUVTXSYQZMZKYJWJUKSLRQOSMTKTISGQFPFNGMIMKNNPQUWXZZ[\[ \M\NZNWP ZMXPVVUXSZQ[M[KZJYIWIUJSLQQNRMSKSIRG SHQGPGNH OGNINKONQQVWXYZZ\Z\[
I\RBR_S_ RBSBS_ WIYIWGTFQFNGLILKMMNNVRWSXUXWWYTZQZOYNX WIVHTGQGNHMIMKNMVQXSYUYWXYWZT[Q[NZLXNX XXUZ
G^[BIbJb [B\BJb
KYUBSDQGOKNPNTOYQ]S`UbVb UBVBTDRGPKOPOTPYR]T`Vb
KYNBPDRGTKUPUTTYR]P`NbOb NBOBQDSGUKVPVTUYS]Q`Ob
JZRFQGSQRR RFRR RFSGQQRR MINIVOWO MIWO MIMJWNWO WIVINOMO WIMO WIWJMNMO
F_JQ[Q[R JQJR[R
F_RIRZSZ RISISZ JQ[Q[R JQJR[R
F_JM[M[N JMJN[N JU[U[V JUJV[V
NWSFRGRM SGRM SFTGRM
I[NFMGMM NGMM NFOGMM WFVGVM WGVM WFXGVM
KYQFOGNINKOMQNSNUMVKVIUGSFQF QFNIOMSNVKUGQF SFOGNKQNUMVISF
F^ZIJRZ[ ZIZJLRZZZ[
F^JIZRJ[ JIJJXRJZJ[
G^OFObPb OFPFPb UFUbVb UFVFVb JP[P[Q JPJQ[Q JW[W[X JWJX[X
F^[FYGVHSHPGNFLFJGIIIKKMMMOLPJPHNF [FH[I[ [F\FI[ YTWTUUTWTYV[X[ZZ[X[VYT NFJGIKMMPJNF LFIIKMOLPHLF YTUUTYX[[XYT WTTWV[ZZ[VWT
E`WMTKQKOLNMMOMRNTOUQVTVWT WMTLQLOMNONROTQUTUWT VKVSWUYVZV\U]S]O\L[JYHWGTFQFNGLHJJILHOHRIUJWLYNZQ[U[YZ VKWKWSXUZV YV[U\S\O[LZJYIWHTGQGNHLIKJJLIOIRJUKWLXNYQZUZYYYZ
E_JPLONOPPSTTUVVXVZU[S[QZOXNVNTOSPPTNULUJT ZPXOVOTPQTPUNVLVJUISIQJOLNNNPOQPTTVUXUZT KOJQJSKU YUZSZQYO
H]TFQGOIMLLOKSKVLYMZO[Q[TZVXXUYRZNZKYHXGVFTF TFRGPINLMOLSLVMYO[ Q[SZUXWUXRYNYKXHVF
H]TJO[ VFP[ VFSIPKNL UIQKNL
H]OJPKOLNKNJOHPGSFVFYGZIZKYMWOTQPSMUKWI[ VFXGYIYKXMVOPS JYKXMXRZUZWYXW MXR[U[WZXW
H]OJPKOLNKNJOHPGSFVFYGZIZKYMVOSP VFXGYIYKXMVO QPSPVQWRXTXWWYVZS[O[LZKYJWJVKULVKW SPUQVRWTWWVYUZS[
H]XGR[ YFS[ YFJUZU
H]QFLP QF[F QGVG[F LPMOPNSNVOWPXRXUWXUZR[O[LZKYJWJVKULVKW SNUOVPWRWUVXTZR[
H]YIXJYKZJZIYGWFTFQGOIMLLOKSKWLYMZO[R[UZWXXVXSWQVPTOQOOPMRLT TFRGPINLMOLSLXMZ R[TZVXWVWRVP
H]NFLL [FZIXLSRQUPWO[ XLRRPUOWN[ MIPFRFWI NHPGRGWIYIZH[F
H]SFPGOHNJNMOOQPTPXOYNZLZIYGVFSF SFQGPHOJOMPOQP TPWOXNYLYIXGVF QPMQKSJUJXKZN[R[VZWYXWXTWRVQTP QPNQLSKUKXLZN[ R[UZVYWWWSVQ
H]YMXOVQTRQROQNPMNMKNIPGSFVFXGYHZJZNYRXUVXTZQ[N[LZKXKWLVMWLX OQNONKOIQGSF XGYIYNXRWUUXSZQ[
MXPYOZP[QZPY
MXP[OZPYQZQ[P]N_
MXSMRNSOTNSM PYOZP[QZ
MXSMRNSOTNSM P[OZPYQZQ[P]N_
MXUFTGRS UGRS UFVGRS PYOZP[QZPY
H]OJPKOLNKNJOHPGSFWFZG[I[KZMYNSPQQQSRTTT WFYGZIZKYMXNVO PYOZP[QZPY
MXVFTHSJSKTLUKTJ
MXUHTGUFVGVHUJSL
E_\N[O\P]O]N\M[MYNWPRXPZN[K[HZGXGVHTISKRPPROTMUKUITGRFPGOIOLPRQUSXUZW[Y[ZYZX K[IZHXHVITJSPP OLPQQTSWUYWZYZZY
H]TBL_ YBQ_ ZJYKZL[K[JZHYGVFRFOGMIMKNMONVRXT MKOMVQWRXTXWWYVZS[O[LZKYJWJVKULVKW
G]_BEb
KZZBVESHQKOONTNXO]P`Qb VESIQMPPOUOZP_Qb
JYSBTDUGVLVPUUSYQ\N_Jb SBTEUJUOTTSWQ[N_
J[TFTR OIYO YIOO
NWUFSM VFSM
I[PFNM QFNM YFWM ZFWM
KZSFQGPIPKQMSNUNWMXKXIWGUFSF
H]SFLb YFRb LQZQ KWYW
E_^F\GXHUHQGOFMFKGJIJKLMNMPLQJQHOF ^FF[ XTVTTUSWSYU[W[YZZXZVXT
G]LFL[ MFM[ IFYFYLXF MPUPXQYRZTZWYYXZU[I[ UPWQXRYTYWXYWZU[
F^NFNLMTLXKZJ[ XFX[ YFY[ KF\F G[\[ G[Gb H[Gb [[\b \[\b
CbRFR[ SFS[ OFVF GGHHGIFHFGGFHFIGJIKMLONPWPYOZM[I\G]F^F_G_H^I]H^G NPLQKSJXIZH[ NPMQLSKXJZI[G[FZEX WPYQZS[X\Z][ WPXQYSZX[Z\[^[_Z`X O[V[
H\LIKFKLLINGPFTFWGXIXLWNTOQO TFVGWIWLVNTO TOVPXRYTYWXYWZT[O[MZLYKWKVLUMVLW WQXTXWWYVZT[
F^KFK[ LFL[ XFX[ YFY[ HFOF UF\F XHLY H[O[ U[\[
F^KFK[ LFL[ XFX[ YFY[ HFOF UF\F XHLY H[O[ U[\[ N@N?M?M@NBPCTCVBW@
F^KFK[ LFL[ HFOF LPSPUOVMWIXGYFZF[G[HZIYHZG SPUQVSWXXZY[ SPTQUSVXWZX[Z[[Z\X H[O[
E^MFMLLTKXJZI[H[GZGYHXIYHZ XFX[ YFY[ JF\F U[\[
H]KFRV LFSV ZFSVQYPZN[M[LZLYMXNYMZ IFOF VF\F
F_RFR[ SFS[ OFVF PILJJLIOIRJULWPXUXYW[U\R\O[LYJUIPI PIMJKLJOJRKUMWPX UXXWZU[R[OZLXJUI O[V[
F^KFK[ LFL[ XFX[ YFY[ HFOF UF\F H[\[ [[\b \[\b
F]KFKQLSOTRTUSWQ LFLQMSOT WFW[ XFX[ HFOF TF[F T[[[
BcGFG[ HFH[ RFR[ SFS[ ]F][ ^F^[ DFKF OFVF ZFaF D[a[
BcGFG[ HFH[ RFR[ SFS[ ]F][ ^F^[ DFKF OFVF ZFaF D[a[ `[ab a[ab
F`PFP[ QFQ[ IFHLHFTF QPXP[Q\R]T]W\Y[ZX[M[ XPZQ[R\T\W[YZZX[
CaHFH[ IFI[ EFLF IPPPSQTRUTUWTYSZP[E[ PPRQSRTTTWSYRZP[ [F[[ \F\[ XF_F X[_[
H]MFM[ NFN[ JFQF NPUPXQYRZTZWYYXZU[J[ UPWQXRYTYWXYWZU[
H]LIKFKLLINGQFSFVGXIYKZNZSYVXXVZS[P[MZLYKWKVLUMVLW SFUGWIXKYNYSXVWXUZS[ PPYP
CbHFH[ IFI[ EFLF E[L[ VFSGQIPKOOORPVQXSZV[X[[Z]X^V_R_O^K]I[GXFVF VFTGRIQKPOPRQVRXTZV[ X[ZZ\X]V^R^O]K\IZGXF IPOP
G]WFW[ XFX[ [FOFLGKHJJJLKNLOOPWP OFMGLHKJKLLNMOOP RPPQORLYKZJZIY PQOSMZL[J[IYIX T[[[
H\XFWGQINKLNKQKULXNZQ[S[VZXXYUYSXPVNSMQMNNLPKS XFWHUIQJNLLN QMONMPLSLUMXOZQ[ S[UZWXXUXSWPUNSM
H\MMM[ NMN[ JMUMXNYPYQXSUT UMWNXPXQWSUT NTUTXUYWYXXZU[J[ UTWUXWXXWZU[
HZMMM[ NMN[ JMXMXRWM J[Q[
F]NMNQMWLZK[ WMW[ XMX[ KM[M I[H`H[[[[`Z[
E`RMR[ SMS[ OMVM JNIOHNIMJMKNMRNSPTUTWSXRZN[M\M]N\O[N PTNUMVKZJ[ PTNVLZK[I[HZGX UTWUXVZZ[[ UTWVYZZ[\[]Z^X O[V[
I[MOLMLQMONNPMTMWNXPXQWSTT TMVNWPWQVSTT QTTTWUXWXXWZT[P[MZLXLWMVNWMX TTVUWWWXVZT[
G]LML[ MMM[ WMW[ XMX[ IMPM TM[M I[P[ T[[[ WNMZ
G]LML[ MMM[ WMW[ XMX[ IMPM TM[M I[P[ T[[[ WNMZ OGOFNFNGOIQJSJUIVG
H\MMM[ NMN[ JMQM NTPTSSTRVNWMXMYNXOWN PTSUTVVZW[ PTRUSVUZV[X[YZZX J[Q[
G]NMNQMWLZK[J[IZJYKZ WMW[ XMX[ KM[M T[[[
G^LML[ LMR[ MMRY XMR[ XMX[ YMY[ IMMM XM\M I[O[ U[\[
G]LML[ MMM[ WMW[ XMX[ IMPM TM[M MTWT I[P[ T[[[
G]LML[ MMM[ WMW[ XMX[ IM[M I[P[ T[[[
I\RMR[ SMS[ MMLRLMYMYRXM O[V[
I[LMR[ MMRY XMR[P_NaLbKbJaK`La JMPM TMZM
H]RFRb SFSb OFSF RPQNPMNMLNKQKWLZN[P[QZRX NMMNLQLWMZN[ WMXNYQYWXZW[ SPTNUMWMYNZQZWYZW[U[TZSX ObVb
G]LML[ MMM[ WMW[ XMX[ IMPM TM[M I[[[[`Z[
G]LMLTMVPWRWUVWT MMMTNVPW WMW[ XMX[ IMPM TM[M T[[[
CbHMH[ IMI[ RMR[ SMS[ \M\[ ]M][ EMLM OMVM YM`M E[`[
CbHMH[ IMI[ RMR[ SMS[ \M\[ ]M][ EMLM OMVM YM`M E[`[``_[
H]QMQ[ RMR[ LMKRKMUM RTVTYUZWZXYZV[N[ VTXUYWYXXZV[
E_JMJ[ KMK[ GMNM KTOTRUSWSXRZO[G[ OTQURWRXQZO[ YMY[ ZMZ[ VM]M V[][
J[OMO[ PMP[ LMSM PTTTWUXWXXWZT[L[ TTVUWWWXVZT[
I\MOLMLQMONNPMSMVNXPYSYUXXVZS[P[NZLXLWMVNWMX SMUNWPXSXUWXUZS[ RTXT
DaIMI[ JMJ[ FMMM F[M[ VMSNQPPSPUQXSZV[X[[Z]X^U^S]P[NXMVM VMTNRPQSQURXTZV[ X[ZZ\X]U]S\PZNXM JTPT
G\VMV[ WMW[ ZMOMLNKPKQLSOTVT OMMNLPLQMSOT TTQUPVNZM[ TTRUQVOZN[L[KZJX S[Z[
H\RFKZ QIW[ RIX[ RFY[ MUVU I[O[ T[[[ KZJ[ KZM[ WZU[ WYV[ XYZ[
G]LFL[ MGMZ NFN[ IFUFXGYHZJZLYNXOUP XHYJYLXN UFWGXIXMWOUP NPUPXQYRZTZWYYXZU[I[ XRYTYWXY UPWQXSXXWZU[ JFLG KFLH OFNH PFNG LZJ[ LYK[ NYO[ NZP[
G\XIYFYLXIVGTFQFNGLIKKJNJSKVLXNZQ[T[VZXXYV MILKKNKSLVMX QFOGMJLNLSMWOZQ[
G]LFL[ MGMZ NFN[ IFSFVGXIYKZNZSYVXXVZS[I[ WIXKYNYSXVWX SFUGWJXNXSWWUZS[ JFLG KFLH OFNH PFNG LZJ[ LYK[ NYO[ NZP[
G\LFL[ MGMZ NFN[ IFYFYL NPTP TLTT I[Y[YU JFLG KFLH OFNH PFNG TFYG VFYH WFYI XFYL TLSPTT TNRPTR TOPPTQ LZJ[ LYK[ NYO[ NZP[ T[YZ V[YY W[YX X[YU
G[LFL[ MGMZ NFN[ IFYFYL NPTP TLTT I[Q[ JFLG KFLH OFNH PFNG TFYG VFYH WFYI XFYL TLSPTT TNRPTR TOPPTQ LZJ[ LYK[ NYO[ NZP[
G^XIYFYLXIVGTFQFNGLIKKJNJSKVLXNZQ[T[VZXZY[YS MILKKNKSLVMX QFOGMJLNLSMWOZQ[ XTXY WSWYVZ TS\S USWT VSWU ZSYU [SYT
F^KFK[ LGLZ MFM[ WFW[ XGXZ YFY[ HFPF TF\F MPWP H[P[ T[\[ IFKG JFKH NFMH OFMG UFWG VFWH ZFYH [FYG KZI[ KYJ[ MYN[ MZO[ WZU[ WYV[ YYZ[ YZ[[
LXQFQ[ RGRZ SFS[ NFVF N[V[ OFQG PFQH TFSH UFSG QZO[ QYP[ SYT[ SZU[
JZSFSWRZQ[ TGTWSZ UFUWTZQ[O[MZLXLVMUNUOVOWNXMX MVMWNWNVMV PFXF QFSG RFSH VFUH WFUG
F\KFK[ LGLZ MFM[ XGMR PPW[ QPX[ QNY[ HFPF UF[F H[P[ T[[[ IFKG JFKH NFMH OFMG WFXG ZFXG KZI[ KYJ[ MYN[ MZO[ WYU[ WYZ[
I[NFN[ OGOZ PFP[ KFSF K[Z[ZU LFNG MFNH QFPH RFPG NZL[ NYM[ PYQ[ PZR[ U[ZZ W[ZY X[ZX Y[ZU
E_JFJZ JFQ[ KFQX LFRX XFQ[ XFX[ YGYZ ZFZ[ GFLF XF]F G[M[ U[][ HFJG [FZH \FZG JZH[ JZL[ XZV[ XYW[ ZY[[ ZZ\[
F^KFKZ KFY[ LFXX MFYX YGY[ HFMF VF\F H[N[ IFKG WFYG [FYG KZI[ KZM[
G]QFNGLIKKJOJRKVLXNZQ[S[VZXXYVZRZOYKXIVGSFQF MILKKNKSLVMX WXXVYSYNXKWI QFOGMJLNLSMWOZQ[ S[UZWWXSXNWJUGSF
G]LFL[ MGMZ NFN[ IFUFXGYHZJZMYOXPUQNQ XHYJYMXO UFWGXIXNWPUQ I[Q[ JFLG KFLH OFNH PFNG LZJ[ LYK[ NYO[ NZP[
G]QFNGLIKKJOJRKVLXNZQ[S[VZXXYVZRZOYKXIVGSFQF MILKKNKSLVMX WXXVYSYNXKWI QFOGMJLNLSMWOZQ[ S[UZWWXSXNWJUGSF NXOVQURUTVUXV^W`Y`Z^Z\ V\W^X_Y_ UXW]X^Y^Z]
G]LFL[ MGMZ NFN[ IFUFXGYHZJZLYNXOUPNP XHYJYLXN UFWGXIXMWOUP RPTQUSWYX[Z[[Y[W WWXYYZZZ TQURXXYYZY[X I[Q[ JFLG KFLH OFNH PFNG LZJ[ LYK[ NYO[ NZP[
H\XIYFYLXIVGSFPFMGKIKLLNOPURWSXUXXWZ LLMNOOUQWRXT MGLILKMMONUPXRYTYWXYWZT[Q[NZLXKUK[LX
H\JFJL QFQ[ RGRZ SFS[ ZFZL JFZF N[V[ KFJL LFJI MFJH OFJG UFZG WFZH XFZI YFZL QZO[ QYP[ SYT[ SZU[
F^KFKULXNZQ[S[VZXXYUYG LGLVMX MFMVNYOZQ[ HFPF VF\F IFKG JFKH NFMH OFMG WFYG [FYG
H\KFR[ LFRXR[ MFSX YGR[ IFPF UF[F JFLH NFMH OFMG WFYG ZFYG
F^JFN[ KFNVN[ LFOV RFOVN[ RFV[ SFVVV[ TFWV ZGWVV[ GFOF RFTF WF]F HFKG IFKH MFLH NFLG XFZG \FZG
H\KFW[ LFX[ MFY[ XGLZ IFPF UF[F I[O[ T[[[ JFMH NFMH OFMG VFXG ZFXG LZJ[ LZN[ WZU[ WYV[ WYZ[
G]JFQQQ[ KFRQRZ LFSQS[ YGSQ HFOF VF\F N[V[ IFKG NFLG WFYG [FYG QZO[ QYP[ SYT[ SZU[
H\YFKFKL WFK[ XFL[ YFM[ K[Y[YU LFKL MFKI NFKH PFKG T[YZ V[YY W[YX X[YU
I[NFN[ OGOZ PFP[ KFZFZL K[S[ LFNG MFNH QFPH RFPG UFZG WFZH XFZI YFZL NYM[ NZL[ PYQ[ PZR[
H\RFJ[ QIX[ RIY[ RFZ[ KYXY KZXZ J[Z[
G]QFNGLIKKJOJRKVLXNZQ[S[VZXXYVZRZOYKXIVGSFQF MILKKNKSLVMX WXXVYSYNXKWI QFOGMJLNLSMWOZQ[ S[UZWWXSXNWJUGSF OMOT UMUT OPUP OQUQ ONPP OOQP UNTP UOSP PQOS QQOR SQUR TQUS
H\RFKZ QIW[ RIX[ RFY[ I[O[ T[[[ KZJ[ KZM[ WZU[ WYV[ XYZ[
G]JEJL ZEZL OMOT UMUT JUJ\ ZUZ\ JGZG JHZH JIZI OPUP OQUQ JXZX JYZY JZZZ JFMH ZFWH KIJK LIJJ XIZJ YIZK ONPP OOQP UNTP UOSP PQOS QQOR SQUR TQUS JVKX JWLX ZWXX ZVYX MYJ[ WYZ[
F^KFK[ LGLZ MFM[ WFW[ XGXZ YFY[ HF\F H[P[ T[\[ IFKG JFKH NFMH OFMG UFWG VFWH ZFYH [FYG KZI[ KYJ[ MYN[ MZO[ WZU[ WYV[ YYZ[ YZ[[
G]IFPPQQ JFQP KFRPI[ IFYFZLYIWF VFYH TFYG KYYY JZYZ I[Y[ZUYXWY
H\JMKILGMFOFPGQIRM LHMGOGPH JMKJMHOHPIQMQ[ RMR[ ZMYJWHUHTISMS[ XHWGUGTH ZMYIXGWFUFTGSIRM N[V[ QYP[ QZO[ SZU[ SYT[
G]QFQ[ RGRZ SFS[ NFVF N[V[ OFQG PFQH TFSH UFSG QZO[ QYP[ SYT[ SZU[ OKLLKMJOJRKTLUOVUVXUYTZRZOYMXLUKOK LMKOKRLT XTYRYOXM OKMLLOLRMUOV UVWUXRXOWLUK
F^QFQ[ RGRZ SFS[ NFVF N[V[ OFQG PFQH TFSH UFSG QZO[ QYP[ SYT[ SZU[ HMIMJNKQLSMTPUTUWTXSYQZN[M\M LRKNJLILKN HMIKJKKLLPMSNTPU YN[LZLYNXR TUVTWSXPYLZK[K\M
G]NYKYJWK[O[MVKRJOJLKIMGPFTFWGYIZLZOYRWVU[Y[ZWYYVY LSKOKLLI XIYLYOXS O[MULPLKMHNGPF TFVGWHXKXPWUU[ KZNZ VZYZ
H\UFIZ SJT[ THUZ UFUHVYV[ LUTU F[L[ Q[X[ IZG[ IZK[ TZR[ TYS[ VYW[
F^OFI[ PFJ[ QFK[ LFWFZG[I[KZNYOVP YGZIZKYNXO WFXGYIYKXNVP NPVPXQYSYUXXVZR[F[ WQXSXUWXUZ VPWRWUVXTZR[ MFPG NFOH RFPH SFPG JZG[ JYH[ KYL[ JZM[
H]ZH[H\F[L[JZHYGWFTFQGOIMLLOKSKVLYMZP[S[UZWXXV QHOJNLMOLSLWMY TFRGPJOLNOMSMXNZP[
F]OFI[ PFJ[ QFK[ LFUFXGYHZKZOYSWWUYSZO[F[ WGXHYKYOXSVWTY UFWHXKXOWSUWRZO[ MFPG NFOH RFPH SFPG JZG[ JYH[ KYL[ JZM[
F]OFI[ PFJ[ QFK[ ULST LF[FZL NPTP F[U[WV MFPG NFOH RFPH SFPG WFZG XFZH YFZI ZFZL ULSPST TNRPSR TOQPSQ JZG[ JYH[ KYL[ JZM[ P[UZ R[UY UYWV
F\OFI[ PFJ[ QFK[ ULST LF[FZL NPTP F[N[ MFPG NFOH RFPH SFPG WFZG XFZH YFZI ZFZL ULSPST TNRPSR TOQPSQ JZG[ JYH[ KYL[ JZM[
H^ZH[H\F[L[JZHYGWFTFQGOIMLLOKSKVLYMZP[R[UZWXYT QHOJNLMOLSLWMY VXWWXT TFRGPJOLNOMSMXNZP[ R[TZVWWT TT\T UTWU VTWW ZTXV [TXU
E_NFH[ OFI[ PFJ[ ZFT[ [FU[ \FV[ KFSF WF_F LPXP E[M[ Q[Y[ LFOG MFNH QFOH RFOG XF[G YFZH ]F[H ^F[G IZF[ IYG[ JYK[ IZL[ UZR[ UYS[ VYW[ UZX[
KYTFN[ UFO[ VFP[ QFYF K[S[ RFUG SFTH WFUH XFUG OZL[ OYM[ PYQ[ OZR[
I\WFRWQYO[ XFTSSVRX YFUSSXQZO[M[KZJXJVKULUMVMWLXKX KVKWLWLVKV TF\F UFXG VFWH ZFXH [FXG
F]OFI[ PFJ[ QFK[ \GMR QOU[ ROV[ SNWZ LFTF YF_F F[N[ R[Y[ MFPG NFOH RFPH SFPG ZF\G ^F\G JZG[ JYH[ KYL[ JZM[ UZS[ UYT[ VYX[
H\QFK[ RFL[ SFM[ NFVF H[W[YU OFRG PFQH TFRH UFRG LZI[ LYJ[ MYN[ LZO[ R[WZ T[XX V[YU
D`MFGZ MGNYN[ NFOY OFPX [FPXN[ [FU[ \FV[ ]FW[ JFOF [F`F D[J[ R[Z[ KFMG LFMH ^F\H _F\G GZE[ GZI[ VZS[ VYT[ WYX[ VZY[
F_OFIZ OFV[ PFVX QFWX \GWXV[ LFQF YF_F F[L[ MFPG NFPH ZF\G ^F\G IZG[ IZK[
G]SFPGNILLKOJSJVKYLZN[Q[TZVXXUYRZNZKYHXGVFSF OIMLLOKSKWLY UXWUXRYNYJXH SFQGOJNLMOLSLXMZN[ Q[SZUWVUWRXNXIWGVF
F]OFI[ PFJ[ QFK[ LFXF[G\I\K[NYPUQMQ ZG[I[KZNXP XFYGZIZKYNWPUQ F[N[ MFPG NFOH RFPH SFPG JZG[ JYH[ KYL[ JZM[
G]SFPGNILLKOJSJVKYLZN[Q[TZVXXUYRZNZKYHXGVFSF OIMLLOKSKWLY UXWUXRYNYJXH SFQGOJNLMOLSLXMZN[ Q[SZUWVUWRXNXIWGVF LXMVOUPURVSXT]U^V^W] T^U_V_ SXS_T`V`W]W\
F^OFI[ PFJ[ QFK[ LFWFZG[I[KZNYOVPNP YGZIZKYNXO WFXGYIYKXNVP RPTQURWXXYYYZX WYXZYZ URVZW[Y[ZXZW F[N[ MFPG NFOH RFPH SFPG JZG[ JYH[ KYL[ JZM[
G^ZH[H\F[L[JZHYGVFRFOGMIMLNNPPVSWUWXVZ NLONVRWT OGNINKOMUPWRXTXWWYVZS[O[LZKYJWJUI[JYKY
G]TFN[ UFO[ VFP[ MFKL ]F\L MF]F K[S[ NFKL PFLI RFMG YF\G ZF\H [F\I \F\L OZL[ OYM[ PYQ[ OZR[
F_NFKQJUJXKZN[R[UZWXXU\G OFLQKUKYLZ PFMQLULYN[ KFSF YF_F LFOG MFNH QFOH RFOG ZF\G ^F\G
H\NFNHOYO[ OGPX PFQW [GO[ LFSF XF^F MFNH QFPH RFOG YF[G ]F[G
E_MFMHKYK[ NGLX OFMW UFMWK[ UFUHSYS[ VGTX WFUW ]GUWS[ JFRF UFWF ZF`F KFNG LFMH PFNI QFNG [F]G _F]G
G]NFT[ OFU[ PFV[ [GIZ LFSF XF^F F[L[ Q[X[ MFOH QFPH RFPG YF[G ]F[G IZG[ IZK[ TZR[ TYS[ UYW[
G]MFQPN[ NFRPO[ OFSPP[ \GSP KFRF YF_F K[S[ LFNG PFOH QFNG ZF\G ^F\G OZL[ OYM[ PYQ[ OZR[
G]ZFH[ [FI[ \FJ[ \FNFLL H[V[XU OFLL PFMI RFNG R[VZ T[WX U[XU
H\JFR[ KFRX LFSX JFZFR[ LGYG LHYH
I]NPNOOOOQMQMONNPMTMVNWOXQXXYZZ[ VOWQWXXZ TMUNVPVXWZZ[[[ VRUSPTMULWLXMZP[S[UZVX NUMWMXNZ USQTOUNWNXOZP[
G\LFL[MZOZ MGMY IFNFNZ NPONQMSMVNXPYSYUXXVZS[Q[OZNX WPXRXVWX SMUNVOWRWVVYUZS[ JFLG KFLH
H[WQWPVPVRXRXPVNTMQMNNLPKSKULXNZQ[S[VZXX MPLRLVMX QMONNOMRMVNYOZQ[
H]VFV[[[ WGWZ SFXFX[ VPUNSMQMNNLPKSKULXNZQ[S[UZVX MPLRLVMX QMONNOMRMVNYOZQ[ TFVG UFVH XYY[ XZZ[
H[MSXSXQWOVNSMQMNNLPKSKULXNZQ[S[VZXX WRWQVO MPLRLVMX VSVPUNSM QMONNOMRMVNYOZQ[
KYWHWGVGVIXIXGWFTFRGQHPKP[ RHQKQZ TFSGRIR[ MMVM M[U[ PZN[ PYO[ RYS[ RZT[
I\XNYOZNYMXMVNUO QMONNOMQMSNUOVQWSWUVVUWSWQVOUNSMQM OONQNSOU UUVSVQUO QMPNOPOTPVQW SWTVUTUPTNSM NUMVLXLYM[N\Q]U]X^Y_ N[Q\U\X] LYMZP[U[X\Y^Y_XaUbObLaK_K^L\O[ ObMaL_L^M\O[
G^LFL[ MGMZ IFNFN[ NQOOPNRMUMWNXOYRY[ WOXRXZ UMVNWQW[ I[Q[ T[\[ JFLG KFLH LZJ[ LYK[ NYO[ NZP[ WZU[ WYV[ YYZ[ YZ[[
LXQFQHSHSFQF RFRH QGSG QMQ[ RNRZ NMSMS[ N[V[ OMQN PMQO QZO[ QYP[ SYT[ SZU[
KXRFRHTHTFRF SFSH RGTG RMR^QaPb SNS]R` OMTMT]S`RaPbMbLaL_N_NaMaM` PMRN QMRO
G]LFL[ MGMZ IFNFN[ WNNW RSY[ RTX[ QTW[ TM[M I[Q[ T[[[ JFLG KFLH UMWN ZMWN LZJ[ LYK[ NYO[ NZP[ WYU[ VYZ[
LXQFQ[ RGRZ NFSFS[ N[V[ OFQG PFQH QZO[ QYP[ SYT[ SZU[
AcFMF[ GNGZ CMHMH[ HQIOJNLMOMQNROSRS[ QORRRZ OMPNQQQ[ SQTOUNWMZM\N]O^R^[ \O]R]Z ZM[N\Q\[ C[K[ N[V[ Y[a[ DMFN EMFO FZD[ FYE[ HYI[ HZJ[ QZO[ QYP[ SYT[ SZU[ \ZZ[ \Y[[ ^Y_[ ^Z`[
G^LML[ MNMZ IMNMN[ NQOOPNRMUMWNXOYRY[ WOXRXZ UMVNWQW[ I[Q[ T[\[ JMLN KMLO LZJ[ LYK[ NYO[ NZP[ WZU[ WYV[ YYZ[ YZ[[
H\QMNNLPKSKULXNZQ[S[VZXXYUYSXPVNSMQM MPLRLVMX WXXVXRWP QMONNOMRMVNYOZQ[ S[UZVYWVWRVOUNSM
G\LMLb MNMa IMNMNb NPONQMSMVNXPYSYUXXVZS[Q[OZNX WPXRXVWX SMUNVOWRWVVYUZS[ IbQb JMLN KMLO LaJb L`Kb N`Ob NaPb
H\VNVb WOWa UNWNXMXb VPUNSMQMNNLPKSKULXNZQ[S[UZVX MPLRLVMX QMONNOMRMVNYOZQ[ Sb[b VaTb V`Ub X`Yb XaZb
IZNMN[ ONOZ KMPMP[ WOWNVNVPXPXNWMUMSNQPPS K[S[ LMNN MMNO NZL[ NYM[ PYQ[ PZR[
J[WOXMXQWOVNTMPMNNMOMQNSPTUUWVXY NNMQ NRPSUTWU XVWZ MONQPRUSWTXVXYWZU[Q[OZNYMWM[NY
KZPHPVQYRZT[V[XZYX QHQWRY PHRFRWSZT[ MMVM
G^LMLVMYNZP[S[UZVYWW MNMWNY IMNMNWOZP[ WMW[\[ XNXZ TMYMY[ JMLN KMLO YYZ[ YZ[[
I[LMR[ MMRY NMSY XNSYR[ JMQM TMZM KMNO PMNN VMXN YMXN
F^JMN[ KMNX LMOX RMOXN[ RMV[ SMVX RMTMWX ZNWXV[ GMOM WM]M HMKN NMLN XMZN \MZN
H\LMV[ MMW[ NMX[ WNMZ JMQM TMZM J[P[ S[Z[ KMMN PMNN UMWN YMWN MZK[ MZO[ VZT[ WZY[
H[LMR[ MMRY NMSY XNSYP_NaLbJbIaI_K_KaJaJ` JMQM TMZM KMNO PMNN VMXN YMXN
I[VML[ WMM[ XMN[ XMLMLQ L[X[XW MMLQ NMLP OMLO QMLN S[XZ U[XY V[XX W[XW
G^[MZQYTWXUZR[P[MZKXJUJSKPMNPMRMUNVOWQYXZZ[[\[ ZMYQXTWVUYTZR[ LXKVKRLP P[NZMYLVLRMONNPM RMTNUOVQXXYZ[[
G\QFNGMHLJKNKb NHMJLNLa QFOGNIMNMb QFSFVGWHXJXLWNVOSP PPTPWQXRYTYWXYWZT[Q[OZNYMW VHWJWLVN WRXTXWWY SFUGVIVMUOSP TPVQWSWXVZT[ KbMb
F\HRINKMMMONPOQRRYSb IOKNMNOOPP HRIPKOMOOPPQQTRYRa XMWPVRTUSWR[Qb YMWQ ZMYOWRTVSXR[ XMZM QbSb
H\SMQMNNLPKSKULXNZQ[S[VZXXYUYSXPVNSMPLNKMJMHNGPFSFWH MPLSLUMX WXXUXSWP QMONNOMRMVNYOZQ[ S[UZVYWVWRVOUNOKNJNIOHQGTGWH
I[SMUNVOWOVNSMQMMNLOLQMRQS SSQSMTKVKXMZP[S[VZXXWXVZ NNMOMQNR MULVLXMY QMONNONQORQS QSNTMVMXNZP[
I[QHRGRFQFPGPIQJTKXKYKYJXJUKSLPNNPMRLULWMYNZP[S\U]V_VaUbSbRaR`S`Sa POOPNRMUMWNYOZ UKRMQNOQNTNWOYQ[S\
G]JMKNLPL[ KMLNMPMZ HPINJMLMMNNPN[ UMVNWQWb WOXRXa NQOOPNRMUMWNXOYRYb L[N[ WbYb
F]IMJNKPKTLWMYNZQ[S[VZWYXWYRYOXJVGTFRFPGOIOKPMSOVP[Q JMKNLPLTMWNY VYWWXRXOWJVHTG GPHNIMKMLNMPMTNXOZQ[ S[UZVXWSWNVJUHSGQGOI
KZNMONPPPXQZS[U[WZXX OMPNQPQXRZ LPMNNMPMQNRPRXSZT[
G]JMKNLPL[ KMLNMPMZ HPINJMLMMNNPN[ SOUNWNXOXPZPZNXMVMTNQQOTNW XNYOYP PSQSWYYYZX TWWZYZ RTUZV[X[YZZX L[N[
H\JGKFMFOGQIXXYZZ[ OHPIWXXY MFNGOIVXXZZ[[[ RMJZJ[K[RM
G]KMKb LNLa MMMb VMVXWZX[Z[[Z\X WNWXXZY[ XMXXYZZ[ MXNZP[R[TZUYVW KMMM VMXM KbMb
G]JMKNLPMTN[ KMLNMPNTOZ HPINJMLMMNNPOTPZ VVWTXQXMYMZNYQXSVVTXQZN[ XRYOYM
JZPGSFRFPGOHOIPJSKVLWKVJSKPLNMMOMQNRPSSTVUWTVSSTOUMVLXLZM[O\S]U^V_VaTbRbOaPaRb OMNONQOR NVMXMZN[ VKSKQLPMOOOQQSST VTSTPUOVNXNZP\S]
G]IQJOKNMM[M KOMNZN IQJPLO[O OONZM[LZMWOO UOVZW[XZWWUO [M[O OOMZ UOWZ
G\QMNNLPKTKb MPLTLa QMONNOMSMb MWNYOZQ[S[VZXXYUYSXPVNSMQM WXXVXRWP S[UZVYWVWRVOUNSM KbMb
G]PMMNKPJSJUKXMZP[R[UZWXXUXSWPUNRM LPKRKVLX VXWVWRVP PMNNMOLRLVMYNZP[ R[TZUYVVVRUOTNRM RMZO[N[MPM RMZN
H\JQKOLNNMZM LONNYN JQKPMOZO ROQZR[SZRO ZMZO RORZ
G\JMKNLPLUMXOZQ[S[UZWXXVYRYNXMWMXPXSWWUZ KMLNMPMUNX WMXNXO HPINJMLMMNNPNVOYQ[
G]RQQNPMNMLNKOJRJUKXMZP[T[WZYXZUZRYOXNVMTMSNRQ LOKRKULX XXYUYRXO NMMNLQLVMYNZP[ T[VZWYXVXQWNVM RQQb RQRa RQSb QbSb
H\LMMNNPT_VaXbZb[a NOOPU_V` INJMLMNNPPV_WaXb VSXPYMZMYOVSN\K`JbKbL_N\
F]HNINJPJUKXMZP[T[VZXXYVZRZNYMXMYPYSXWVZ JNKPKULX XMYNYO GPHNIMJMKNLPLVMYNZP[ QFSb RGRa SFQb QFSF QbSb
F^NMLNJPISIWJYKZM[O[QZRYSWSTRSQTQWRYSZU[W[YZZY[W[SZPXNVM KPJSJWKY RTRX YYZWZSYP NMLOKRKWLZM[ W[XZYWYRXOVM
G]WMUTUXVZW[Y[[Y\W XMVTVZ WMYMWTVX UTUQTNRMPMMNKQJTJVKYLZN[P[RZSYTWUT NNLQKTKWLY PMNOMQLTLWMZN[
I\PFNMMSMWNYOZQ[S[VZXWYTYRXOWNUMSMQNPOOQNT QFOMNQNWOZ VYWWXTXQWO MFRFPMNT S[UYVWWTWQVNUM NFQG OFPH
I[WQWPVPVRXRXPWNUMRMONMQLTLVMYNZP[R[UZWW OONQMTMWNY RMPOOQNTNWOZP[
G]YFVQUUUXVZW[Y[[Y\W ZFWQVUVZ VF[FWTVX UTUQTNRMPMMNKQJTJVKYLZN[P[RZSYTWUT MOLQKTKWLY PMNOMQLTLWMZN[ WFZG XFYH
I[MVQUTTWRXPWNUMRMONMQLTLVMYNZP[R[UZWX OONQMTMWNY RMPOOQNTNWOZP[
JZZHZGYGYI[I[GZFXFVGTISKRNQRO[N^M`Kb TJSMRRP[O^ XFVHUJTMSRQZP]O_MaKbIbHaH_J_JaIaI` NMYM
H]XMT[S^QaOb YMU[S_ XMZMV[T_RaObLbJaI`I^K^K`J`J_ VTVQUNSMQMNNLQKTKVLYMZO[Q[SZTYUWVT NOMQLTLWMY QMOONQMTMWNZO[
G]OFI[K[ PFJ[ LFQFK[ MTOPQNSMUMWNXPXSVX WNWRVVVZ WPUUUXVZW[Y[[Y\W MFPG NFOH
KXTFTHVHVFTF UFUH TGVG LQMOOMQMRNSPSSQX RNRRQVQZ RPPUPXQZR[T[VYWW
KXUFUHWHWFUF VFVH UGWG MQNOPMRMSNTPTSRZQ]P_NaLbJbIaI_K_KaJaJ` SNSSQZP]O_ SPRTP[O^N`Lb
G]OFI[K[ PFJ[ LFQFK[ YOYNXNXPZPZNYMWMUNQROS MSOSQTRUTYUZWZ QUSYTZ OSPTRZS[U[WZYW MFPG NFOH
LXTFQQPUPXQZR[T[VYWW UFRQQUQZ QFVFRTQX RFUG SFTH
@cAQBODMFMGNHPHSF[ GNGSE[ GPFTD[F[ HSJPLNNMPMRNSPSSQ[ RNRSP[ RPQTO[Q[ SSUPWNYM[M]N^P^S\X ]N]R\V\Z ]P[U[X\Z][_[aYbW
F^GQHOJMLMMNNPNSL[ MNMSK[ MPLTJ[L[ NSPPRNTMVMXNYPYSWX XNXRWVWZ XPVUVXWZX[Z[\Y]W
H\QMNNLQKTKVLYMZP[S[VZXWYTYRXOWNTMQM NOMQLTLWMY VYWWXTXQWO QMOONQMTMWNZP[ S[UYVWWTWQVNTM
G]HQIOKMMMNNOPOSNWKb NNNSMWJb NPMTIb OTPQQORNTMVMXNYOZRZTYWWZT[R[PZOWOT XOYQYTXWWY VMWNXQXTWWVYT[ FbNb JaGb J`Hb K`Lb JaMb
G\WMQb XMRb WMYMSb UTUQTNRMPMMNKQJTJVKYLZN[P[RZSYTWUT MOLQKTKWLY PMNOMQLTLWMZN[ NbVb RaOb R`Pb S`Tb RaUb
I[JQKOMMOMPNQPQTO[ PNPTN[ PPOTM[O[ YOYNXNXPZPZNYMWMUNSPQT
J[XPXOWOWQYQYOXNUMRMONNONQOSQTTUVVWX ONNQ ORQSTTVU WVVZ NOOQQRTSVTWVWXVZS[P[MZLYLWNWNYMYMX
KYTFQQPUPXQZR[T[VYWW UFRQQUQZ TFVFRTQX NMXM
F^GQHOJMLMMNNPNSLX MNMRLVLZ MPKUKXLZN[P[RZTXVU XMVUVXWZX[Z[\Y]W YMWUWZ XMZMXTWX
H\IQJOLMNMONPPPSNX ONORNVNZ OPMUMXNZP[R[TZVXXUYQYMXMXNYP
CaDQEOGMIMJNKPKSIX JNJRIVIZ JPHUHXIZK[M[OZQXRU TMRURXSZU[W[YZ[X]U^Q^M]M]N^P UMSUSZ TMVMTTSX
G]JQLNNMPMRNSPSR PMQNQRPVOXMZK[I[HZHXJXJZIZIY RORRQVQY ZOZNYNYP[P[NZMXMVNTPSRRVRZS[ PVPXQZS[U[WZYW
G]HQIOKMMMNNOPOSMX NNNRMVMZ NPLULXMZO[Q[SZUXWT YMU[T^RaPb ZMV[T_ YM[MW[U_SaPbMbKaJ`J^L^L`K`K_
H\YMXOVQNWLYK[ XOOOMPLR VORNONNO VORMOMMOLR LYUYWXXV NYRZUZVY NYR[U[WYXV
H\WQVOUNSMQMNNLPKSKULXNZQ[S[VZWYXWYSYNXJWHVGSFQFNGMHNHOGQF MPLRLVMX VYWWXSXNWJVH QMONNOMRMVNYOZQ[ S[UZVXWTWMVIUGSF
I[UMWNXOYOXNUMRMONMPLSLUMXOZR[U[XZYYXYWZU[ NPMSMUNX RMPNOONRNVOYPZR[ NTTUUTTSNT NTTT
H\QFNGLJKOKRLWNZQ[S[VZXWYRYOXJVGSFQF NHMJLNLSMWNY VYWWXSXNWJVH QFOGNIMNMSNXOZQ[ S[UZVXWSWNVIUGSF LPXQ LQXP
G]PMMNKPJSJUKXMZP[T[WZYXZUZSYPWNTMPM LPKSKULX XXYUYSXP PMNNMOLRLVMYNZP[T[VZWYXVXRWOVNTM QFSb RGRa SFQb QFSF QbSb
H\TMVNXPYPYOWNTMPMMNLOKQKSLUNWPXRYSZT\T^S_Q_O^P^Q_ MOLQLSMUOW PMNNMPMSNURY YPXO
H\QFNGLJKOKRLWNZQ[S[VZXWYRYOXJVGSFQF NHMJLNLSMWNY VYWWXSXNWJVH QFOGNIMNMSNXOZQ[ S[UZVXWSWNVIUGSF
H\QHQ[ RHRZ SFS[ SFPINJ M[W[ QZO[ QYP[ SYT[ SZU[
H\LJLKMKMJLJ LIMINJNKMLLLKKKJLHMGPFTFWGXHYJYLXNUPPRNSLUKXK[ WHXJXLWN TFVGWJWLVNTPPR KYLXNXSYWYYX NXSZWZXY NXS[W[XZYXYV
H\LJLKMKMJLJ LIMINJNKMLLLKKKJLHMGPFTFWGXIXLWNTO VGWIWLVN SFUGVIVLUNSO QOTOVPXRYTYWXYWZT[P[MZLYKWKVLUMUNVNWMXLX WRXTXWWY SOUPVQWTWWVZT[ LVLWMWMVLV
H\SIS[ THTZ UFU[ UFJUZU P[X[ SZQ[ SYR[ UYV[ UZW[
H\MFKPMNPMSMVNXPYSYUXXVZS[P[MZLYKWKVLUMUNVNWMXLX WPXRXVWX SMUNVOWRWVVYUZS[ LVLWMWMVLV MFWF MGUG MHQHUGWF
H\VIVJWJWIVI WHVHUIUJVKWKXJXIWGUFRFOGMILKKOKULXNZQ[S[VZXXYUYTXQVOSNQNOONPMR NIMKLOLUMXNY WXXVXSWQ RFPGOHNJMNMUNXOZQ[ S[UZVYWVWSVPUOSN
H\KFKL YFYIXLTQSSRWR[ SRRTQWQ[ XLSQQTPWP[R[ KJLHNFPFUIWIXHYF MHNGPGRH KJLINHPHUI
H\PFMGLILLMNPOTOWNXLXIWGTFPF NGMIMLNN VNWLWIVG PFOGNINLONPO TOUNVLVIUGTF POMPLQKSKWLYMZP[T[WZXYYWYSXQWPTO MQLSLWMY WYXWXSWQ PONPMSMWNZP[ T[VZWWWSVPTO
H\MWMXNXNWMW WOVQURSSQSNRLPKMKLLINGQFSFVGXIYLYRXVWXUZR[O[MZLXLWMVNVOWOXNYMY MPLNLKMI VHWIXLXRWVVX QSORNQMNMKNHOGQF SFUGVIWLWSVWUYTZR[
MXRFQGQIRQ RFRTST RFSFST SFTGTISQ RXQYQZR[S[TZTYSXRX RYRZSZSYRY
I\MKMJNJNLLLLJMHNGPFTFWGXHYJYLXNWOSQ WHXIXMWN TFVGWIWMVOUP RQRTSTSQRQ RXQYQZR[S[TZTYSXRX RYRZSZSYRY
E_[O[NZNZP\P\N[MZMYNXPVUTXRZP[L[JZIXIUJSPORMSKSIRGPFNGMIMLNOPRTWWZY[[[\Y\X KZJXJUKSLR RMSI SKRG NGMK NNPQTVWYYZ N[LZKXKULSPO MINMQQUVXYZZ[Z\Y
H\PBP_ TBT_ XKXJWJWLYLYJXHWGTFPFMGKIKLLNOPURWSXUXXWZ LLMNOOUQWRXT MGLILKMMONUPXRYTYWXYWZT[P[MZLYKWKUMUMWLWLV
KYUBSDQGOKNPNTOYQ]S`Ub QHPKOOOUPYQ\ SDRFQIPOPUQ[R^S`
KYOBQDSGUKVPVTUYS]Q`Ob SHTKUOUUTYS\ QDRFSITOTUS[R^Q`
F^[FYGVHSHPGNFLFJGIIIKKMMMOLPJPHNF [FH[ [FI[ [FJ[ YTWTUUTWTYV[X[ZZ[X[VYT OGLFIIJLMMPJOG NFJGIK KMOLPH ZUWTTWUZX[[XZU YTUUTY V[ZZ[V H[J[
E`VNULSKQKOLNMMOMRNTOUQVSVUUVS OMNONROT QKPLOOORPUQV VKVSWUYVZV\U]R]O\L[JYHWGTFQFNGLHJJILHOHRIUJWLYNZQ[T[WZYYXYWZ WLWSXU VKXKXSYUZV
H]TFQGOIMLLOKSKVLYMZO[Q[TZVXXUYRZNZKYHXGVFTF QHOJNLMOLSLWMY TYVWWUXRYNYJXH TFRGPJOLNOMSMXNZO[ Q[SZUWVUWRXNXIWGVF
H]TJO[Q[ WFUJP[ WFQ[ WFTIQKOL TJRKOL
H]OKOJPJPLNLNJOHPGSFVFYGZIZKYMWOMUKWI[ XGYIYKXMVOSQ VFWGXIXKWMUOMU JYKXMXRYWYXX MXRZWZ MXR[U[WZXXXW
H]OKOJPJPLNLNJOHPGSFVFYGZIZKYMXNVOSP XGYIYKXMWN VFWGXIXKWMUOSP QPSPVQWRXTXWWYUZR[O[LZKYJWJULULWKWKV VRWTWWVY SPUQVSVWUYTZR[
H]WJR[T[ ZFXJS[ ZFT[ ZFJUZU
H]QFLP QF[F QGYG PHUHYG[F LPMOPNSNVOWPXRXUWXUZQ[N[LZKYJWJULULWKWKV VPWRWUVXTZ SNUOVQVUUXSZQ[
H]YJYIXIXKZKZIYGWFTFQGOIMLLOKSKVLYMZO[R[UZWXXVXSWQVPTOQOOPNQMS PINLMOLSLWMY VXWVWSVQ TFRGPJOLNOMSMXNZO[ R[TZUYVVVRUPTO
H]NFLL [FZIXLTQRTQWP[ RSPWO[ XLRRPUOWN[P[ MIPFRFWI OGRGWI MIOHRHWIYIZH[F
H]SFPGOHNJNMOOQPTPWOYNZLZIYGWFSF UFPG PHOJONPO OORP SPWO XNYLYIXG YGUF SFQHPJPNQP TPVOWNXLXHWF QPMQKSJUJXKZN[R[VZWYXWXTWRVQTP RPMQ NQLSKUKXLZ KZP[VZ VYWWWTVR VQSP QPOQMSLULXMZN[ R[TZUYVWVSUQTP
H]XNWPVQTRQROQNPMNMKNIPGSFVFXGYHZKZNYRXUVXTZQ[N[LZKXKVMVMXLXLW OPNNNKOI XHYJYNXRWUUX QRPQOOOKPHQGSF VFWGXIXNWRVUUWSZQ[
MXPXOYOZP[Q[RZRYQXPX PYPZQZQYPY
MXQ[P[OZOYPXQXRYR[Q]P^N_ PYPZQZQYPY Q[Q\P^
MXSMRNROSPTPUOUNTMSM SNSOTOTNSN PXOYOZP[Q[RZRYQXPX PYPZQZQYPY
MXSMRNROSPTPUOUNTMSM SNSOTOTNSN Q[P[OZOYPXQXRYR[Q]P^N_ PYPZQZQYPY Q[Q\P^
MXVFUFTGRT VGUGRT VGVHRT VFWGWHRT PXOYOZP[Q[RZRYQXPX PYPZQZQYPY
H]OKOJPJPLNLNJOHPGSFWFZG[I[KZMYNWOSPQQQSSTTT UFZG YGZIZKYMXNVO WFXGYIYKXMWNSPRQRSST PXOYOZP[Q[RZRYQXPX PYPZQZQYPY
MXWFUGTHSJSLTMUMVLVKUJTJ UGTITJ TKTLULUKTK
MXVIUITHTGUFVFWGWIVKULSM UGUHVHVGUG VIVJUL
E_\O\N[N[P]P]N\M[MYNWPRXPZN[K[HZGXGVHTISKRPPROTMUKUITGRFPGOIOLPRQURWTZV[X[YYYX L[HZ IZHXHVITJSLR PPQSTYVZ K[JZIXIVJTKSMRRO OLPOQRSVUYWZXZYY
H]TBL_ YBQ_ ZKZJYJYL[L[JZHYGVFRFOGMIMLNNPPVSWUWXVZ NLONVRWT OGNINKOMUPWRXTXWWYVZS[O[LZKYJWJULULWKWKV
G^_BEbFb _B`BFb
JZZBXCUERHPKNOMSMXN\O_Qb SHQKOONTN\ ZBWDTGRJQLPOOSN\ NTO]P`Qb
JZSBUEVHWLWQVUTYR\O_LaJb VHVPUUSYQ\ SBTDUGVP VHUQTUSXRZP]M`Jb
J[TFSGUQTR TFTR TFUGSQTR OIPIXOYO OIYO OIOJYNYO YIXIPOOO YIOO YIYJONOO
MWUFTGRM UGRM UFVGRM
H\PFOGMM PGMM PFQGMM ZFYGWM ZGWM ZF[GWM
KZSFQGPIPKQMSNUNWMXKXIWGUFSF SFPIQMUNXKWGSF UFQGPKSNWMXIUF
G^SFKbLb SFTFLb YFQbRb YFZFRb KP\P\Q KPKQ\Q IWZWZX IWIXZX
E^^F\GXHUHQGOFMFKGJIJKLMNMPLQJQHOF ^FE[ ^FF[ ^FG[ XTVTTUSWSYU[W[YZZXZVXT PGMFJIKLNMQJPG OFKGJK LMPLQH YUVTSWTZW[ZXYU XTTUSY U[YZZV E[G[
E`UQUNTLRKPKNLMMLPLSMUOVQVSUTTUQ OLNMMPMSNU RKPLOMNPNSOUPV VKUQUSVUXVZV\U]R]O\L[JYHWGTFQFNGLHJJILHOHRIUJWLYNZQ[T[WZYYXYWZ WKVQVSWU VKXKWQWSXUZV
MWRMNV RMVV PSTS
MWOMOV OMSMUNUPSQ OQSQURUUSVOV
MXVNTMRMPNOPOSPURVTVVU
MWOMOV OMRMTNUPUSTURVOV
MWOMOV OMUM OQSQ OVUV
MVOMOV OMUM OQSQ
MXVNTMRMPNOPOSPURVTVVUVR SRVR
MWOMOV UMUV OQUQ
PTRMRV
NUSMSTRVPVOTOS
MWOMOV UMOS QQUV
MVOMOV OVUV
LXNMNV NMRV VMRV VMVV
MWOMOV OMUV UMUV
MXRMPNOPOSPURVSVUUVSVPUNSMRM
MWOMOV OMSMUNUQSROR
MXRMPNOPOSPURVSVUUVSVPUNSMRM STVW
MWOMOV OMSMUNUQSROR RRUV
MWUNSMQMONOOPPTRUSUUSVQVOU
MWRMRV NMVM
MXOMOSPURVSVUUVSVM
MWNMRV VMRV
LXNMPV RMPV RMTV VMTV
MWOMUV UMOV
MWNMRQRV VMRQ
MWUMOV OMUM OVUV
MVOMOV OMUM
MWRMNV RMVV NVVV
MXRMPNOPOSPURVSVUUVSVPUNSMRM QQTR TQQR
MWRMNV RMVV
MWOMUM PQTR TQPR OVUV
MWOMOV UMUV OMUM
MWOMRQOV OMUM OVUV
MWNONNOMPMQNRPRV VOVNUMTMSNRP
LXRMRV PONPNSPTTTVSVPTOPO
LXRMRV NOOPOSQTSTUSUPVO
MXOVQVOROPPNRMSMUNVPVRTVVV
MWSMMV SMUV OSTS
MWQMNV QMTMVNVPSQPQ SQURUTTURVNV
LXVPUNTMRMPNOONQNSOUPVRVTUUT
MXQMNV QMUMVOVQUTTURVNV
MVQMNV QMVM PQSQ NVSV
MVQMNV QMVM PQSQ
LXVPUNTMRMPNOONQNSOUPVRVTUUSRS
MXQMNV WMTV PQUQ
PUTMQV
OVUMSSRUQVPVOUOT
MVQMNV VMOS RQTV
NVRMOV OVTV
LYPMMV PMQV XMQV XMUV
MXQMNV QMTV WMTV
LXRMPNOONQNSOUPVRVTUUTVRVPUNTMRM
MWQMNV QMUMVNVPUQSRPR
LXRMPNOONQNSOUPVRVTUUTVRVPUNTMRM QVPUPTQSRSSTTVUWVW
MWQMNV QMUMVNVPUQSRPR QRRUSVTVUU
MWVNTMRMPNPPQQTRUSUUSVPVNU
MVSMPV PMVM
LXPMNSNUOVRVTUUSWM
MWOMQV WMQV
KXNMNV SMNV SMSV XMSV
NWQMTV WMNV
NWQMSQQV WMSQ
MWQMWMNVTV
LXNMRV VMRV NMVM
MWNLVX
LXRONU ROVU
MWNVVV
PVRMUQ
MWMMOKQKTMVMWK
NWQPTPUQUV URQSPTPUQVSVUU
MWOMOV OSPURVTUUSTQRPPQOS
MWUQSPRPPQOSPURVSVUU
MWUMUV USTQRPPQOSPURVTUUS
MWOSUSTQRPPQOSPURVTV
NVUNTMSMRNRV PPTP
MWUPUVTXRYPY USTQRPPQOSPURVTUUS
MWOMOV OSPQRPTQUSUV
PTRLQMRNSMRL RPRV
PUSLRMSNTMSL SPSXRYQYPX
NWPMPV UPPT RSUV
KYMPMV MSNQOPPPQQRSRV RSSQTPUPVQWSWV
MWOPOV OSPQRPTQUSUV
MWRPPQOSPURVTUUSTQRP
MWOPOY OSPURVTUUSTQRPPQOS
MWUPUY USTQRPPQOSPURVTUUS
NVPPPV PSQQSPTP
NWUQTPQPPQPRQSTSUTUUTVQVPU
NVRMRUSVTVUU PPTP
MWUPUV OPOSPURVTUUS
NVOPRV UPRV
LXNPPV RPPV RPTV VPTV
MWOPUV UPOV
MWOPRV UPRVQXPYOY
MWOPUPOVUV
MXVPUSTURVPUOSPQRPTQUUVV
MWOTQVSVTUTSSRPQRQTPUOUNTMRMQNPPOTNY
MXNQOPQPRQRSQW VPURSTQWPY
MWTNSMRMQNQORPTQUSTURVPUOSPQRP
NWUQSPQPPQPRQS SSQSPTPUQVSVUU
NWTMSNSOTP UPSPQQPSPUQVSWSXRYQY
LXNQOPPPQQQSPV QSRQTPUPVQVSUVTY
LXNQOPPPQQQURVSVTUUSVPVNUMTMSNSPTRUSWT
OVRPQSQURVSVTU
MWQPOV UPTPRQPS PSQUSVTV
MWOMPMQNRPUV RPOV
LYPPMY UPTSSUQVPVOUOS TSTUUVVVWU
MWNPOPOV UPTSRUOV
NWTMSNSOTP UPSPQQQRRSTS SSQTPUPVQWSXSYRZQZ
MXOQQPVP QPQRPV TPTRUV
MWOSPURVTUUSTQRPPQOSNY
MXVPRPPQOSPURVTUUSTQRP
MXOQQPVP SPRV
KXMQNPOPPQPUQVSVTUUSVP
MXPPOQOSPURVSVUUVSVQUPTPSQRSQY
MWOPPPQQSXTYUY UPTRPWOY
KYTMRY MQNPOPPQPUQVTVUUVSWP
LXOPNRNTOVQVRTRR UPVRVTUVSVRT
LWTSSQQPOQNSOUQVSUTS UPTSTUUVVV
MWQMOSPURVTUUSTQRPPQOS
MWUQSPRPPQOSPURVTV
LWTSSQQPOQNSOUQVSUTS VMTSTUUVVV
MWOSTSURUQSPRPPQOSPURVTV
OVVMUMTNSPQVPXOYNY QPUP
MXUSTQRPPQOSPURVTUUS VPTVSXRYPYOX
MVQMNV OSPQQPSPTQTRSTSUTVUV
PUSMSNTNTMSM QPRPSQSRRTRUSVTV
OUSMSNTNTMSM QPRPSQSRRVQXPYOYNX
NVRMOV UPTPRQPS PSQUSVTV
OTSMQSQURVSV
JYKPLPMQMSLV MSNQOPQPRQRSQV RSSQTPVPWQWRVTVUWVXV
MWNPOPPQPSOV PSQQRPTPUQURTTTUUVVV
MXNPOPPQPSNY PSQUSVUUVSUQSPQQPS
MXUSTQRPPQOSPURVTUUS VPSY
MVOPPPQQQSPV UQTPSPRQQS
NVTQSPQPPQPRQSRSSTSURVPVOU
NUSMQSQURVSV PPTP
MWNPOPPQPROTOUPVRVSUTS UPTSTUUVVV
MWNPOPPQPROTOUPVRVTUURUP
KYLPMPNQNRMTMUNVPVQURSSP RSRUSVUVVUWRWP
MWOQPPQPRQRUSVTVUU VQUPTPSQQUPVOVNU
MWNPOPPQPROTOUPVRVSUTS UPSVRXQYOYNX
NVUPOV PQQPSPTQ PUQVSVTU
MWUSTQRPPQOSPURVTUUSUPTNRMQM
MWUQSPRPPQOSPURVSVUU OSSS
MWRMQNPPOSOVPWRWSVTTUQUNTMRM PRTR
MWTMQY RPPQOSPURVSVUUVSUQSPRP
MWUQSPQPOQOSPTRUSVSWRXQX
KYTPTSUTVTWSWQVOUNSMQMONNOMQMSNUOVQWSWUV TQSPQPPQPSQTSTTS
MWUNORUV
MWONUROV
OUTKQKQYTY
OUPKSKSYPY
OUTKSLRNROSQQRSSRURVSXTY
OUPKQLRNROQQSRQSRURVQXPY
LYPMQNQOPPOPNONNOMPMSNUNWMNV USTTTUUVVVWUWTVSUS
MWRMPNOPOSPURVTUUSUPTNRM
MWPORMRV
MWONQMSMUNUPTROVUV
MWONQMSMUNUPSQ RQSQURUUSVQVOU
MWSMSV SMNSVS
MWPMOQQPRPTQUSTURVQVOU PMTM
MWTMRMPNOPOSPURVTUUSTQRPPQOS
MWUMQV OMUM
MWQMONOPQQSQUPUNSMQM QQOROUQVSVUUURSQ
MWUPTRRSPROPPNRMTNUPUSTURVPV
PURURVSVSURU
PUSVRVRUSUSWRY
PURPRQSQSPRP RURVSVSURU
PURPRQSQSPRP SVRVRUSUSWRY
PURMRR SMSR RURVSVSURU
NWPNRMSMUNUPRQRRSRSQUP RURVSVSURU
PTRMRQ
NVPMPQ TMTQ
NVQMPNPPQQSQTPTNSMQM
MWRKRX UNSMQMONOPQQTRUSUUSVQVOU
MWVLNX
OUTKRNQQQSRVTY
OUPKRNSQSSRVPY
PTRKRY
LXNRVR
LXRNRV NRVR
LXNPVP NTVT
MWOOUU UOOU
MWRORU OPUT UPOT
PURQRRSRSQRQ
PUSMRORQSQSPRP
PUSNRNRMSMSORQ
LXSOVRSU NRVR
MXQLQY TLTY OQVQ OTVT
LXVRURTSSURVOVNUNSORRQSPSNRMPMONOPQSSUUVVV
LXNNOQOSNV VNUQUSVV NNQOSOVN NVQUSUVV
LYRQQPOPNQNSOTQTRSSQTPVPWQWSVTTTSSRQ
H\NRMQLRMSNR VRWQXRWSVR
H\MPLQLRMSNSOROQNPMP MQMRNRNQMQ WPVQVRWSXSYRYQXPWP WQWRXRXQWQ
I[KRYR
H\RUJPRTZPRU
F^ISJQLPNPPQTTVUXUZT[Q ISJPLONOPPTSVTXTZS[Q IYJWLVNVPWTZV[X[ZZ[W IYJVLUNUPVTYVZXZZY[W
F^ISJQLPNPPQTTVUXUZT[Q ISJPLONOPPTSVTXTZS[Q IW[W I[[[
CaGO]OXI L[GU]U
D`F^^^^FFFF^
KYQVOUNSNQOOQNSNUOVQVSUUSVQV SVVS QVVQ OUUO NSSN NQQN
H\IR[R
H\IR[R IQ[Q
LYPFSCSP RDRP OPVP MRXR OVOWNWNVOUQTTTVUWWVYTZQ[O\N^Na TTUUVWUYTZ N`O_P_S`V`W_ P_SaVaW_W^
LYPFSCSP RDRP OPVP MRXR OVOWNWNVOUQTTTVUWWVYTZ TTUUVWUYTZ RZTZV[W]W^V`TaQaO`N_N^O^O_ TZU[V]V^U`Ta
LYPFSCSP RDRP OPVP MRXR VVVWWWWVVUTTRTPUOVNYN^O`QaTaV`W^W\VZTYQYN[ RTPVOYO^P`Qa TaU`V^V\UZTY
LYPFSCSP RDRP OPVP MRXR QTOUNWOYQZTZVYWWVUTTQT QTPUOWPYQZ TZUYVWUUTT QZO[N]N^O`QaTaV`W^W]V[TZ QZP[O]O^P`Qa TaU`V^V]U[TZ
LYOEOFNFNEODQCTCVDWFVHTIQJOKNMNP TCUDVFUHTI NOONPNSOVOWN PNSPVPWNWM MRXR OVOWNWNVOUQTTTVUWWVYTZ TTUUVWUYTZ RZTZV[W]W^V`TaQaO`N_N^O^O_ TZU[V]V^U`Ta
LYOEOFNFNEODQCTCVDWFVHTI TCUDVFUHTI RITIVJWLWMVOTPQPOONNNMOMON TIUJVLVMUOTP MRXR QTOUNWOYQZTZVYWWVUTTQT QTPUOWPYQZ TZUYVWUUTT QZO[N]N^O`QaTaV`W^W]V[TZ QZP[O]O^P`Qa TaU`V^V]U[TZ
LYOCNI OCVC ODSDVC NIOHQGTGVHWJWMVOTPQPOONNNMOMON TGUHVJVMUOTP MRXR QTOUNWOYQZTZVYWWVUTTQT QTPUOWPYQZ TZUYVWUUTT QZO[N]N^O`QaTaV`W^W]V[TZ QZP[O]O^P`Qa TaU`V^V]U[TZ
LYNCNG VERLPP WCTIQP NEPCRCUE NEPDRDUEVE MRXR QTOUNWOYQZTZVYWWVUTTQT QTPUOWPYQZ TZUYVWUUTT QZO[N]N^O`QaTaV`W^W]V[TZ QZP[O]O^P`Qa TaU`V^V]U[TZ
LYOCNI OCVC ODSDVC NIOHQGTGVHWJWMVOTPQPOONNNMOMON TGUHVJVMUOTP MRXR VVVWWWWVVUTTRTPUOVNYN^O`QaTaV`W^W\VZTYQYN[ RTPVOYO^P`Qa TaU`V^V\UZTY
LYPFSCSP RDRP OPVP MRXR SVSa TTTa TTM]X] QaVa
LYOEOFNFNEODQCTCVDWFVHTI TCUDVFUHTI RITIVJWLWMVOTPQPOONNNMOMON TIUJVLVMUOTP MRXR SVSa TTTa TTM]X] QaVa
F^YXWZU[R[PZMXKWIWHXHZI[K[MZOWPURQTKWGYFZF[G\H[IZH[G[FZFYFWGVHTLRPPVNZMZ OPUP
E^P[MZJXHUGRGOHLJIMGPFTFWGYI[L\O\R[UYXVZS[P[ NJNW OJOW LJSJVKWMWNVPSQOQ SJUKVMVNUPSQ LWQW SQTRUVVWWWXV SQURVVWW
E^P[MZJXHUGRGOHLJIMGPFTFWGYI[L\O\R[UYXVZS[P[ UKVJVNUKSJPJNKMLLOLRMUNVPWSWUVVT PJNLMOMRNUPW
E_IM[M IR[R IW[W K[YI
CaHQGRHSIRHQ RQQRRSSRRQ \Q[R\S]R\Q
E_NWLTIRLPNM LPJRLT JRZR VWXT[RXPVM XPZRXT
JZWNTLRIPLMN PLRJTL RJRZ WVTXR[PXMV PXRZTX
F^ZJSJOKMLKNJQJSKVMXOYSZZZ SFS^
F^JJQJUKWLYNZQZSYVWXUYQZJZ QFQ^
F^JJQJUKWLYNZQZSYVWXUYQZJZ ORZR
H\LBL[ RBR[ XBX[
I[RFJ[ RFZ[ MTWT
G\KFK[ KFTFWGXHYJYLXNWOTP KPTPWQXRYTYWXYWZT[K[
H]ZKYIWGUFQFOGMILKKNKSLVMXOZQ[U[WZYXZV
G\KFK[ KFRFUGWIXKYNYSXVWXUZR[K[
H[LFL[ LFYF LPTP L[Y[
HZLFL[ LFYF LPTP
H]ZKYIWGUFQFOGMILKKNKSLVMXOZQ[U[WZYXZVZS USZS
G]KFK[ YFY[ KPYP
NVRFR[
JZVFVVUYTZR[P[NZMYLVLT
G\KFK[ YFKT POY[
HYLFL[ L[X[
F^JFJ[ JFR[ ZFR[ ZFZ[
G]KFK[ KFY[ YFY[
G]PFNGLIKKJNJSKVLXNZP[T[VZXXYVZSZNYKXIVGTFPF
G\KFK[ KFTFWGXHYJYMXOWPTQKQ
G]PFNGLIKKJNJSKVLXNZP[T[VZXXYVZSZNYKXIVGTFPF SWY]
G\KFK[ KFTFWGXHYJYLXNWOTPKP RPY[
H\YIWGTFPFMGKIKKLMMNOOUQWRXSYUYXWZT[P[MZKX
JZRFR[ KFYF
G]KFKULXNZQ[S[VZXXYUYF
I[JFR[ ZFR[
F^HFM[ RFM[ RFW[ \FW[
H\KFY[ YFK[
I[JFRPR[ ZFRP
H\YFK[ KFYF K[Y[
HYLFL[ LFXF
I[RFJ[ RFZ[ J[Z[
G]PFNGLIKKJNJSKVLXNZP[T[VZXXYVZSZNYKXIVGTFPF OPUP
I[RFJ[ RFZ[
I[KFYF OPUP K[Y[
G]KFK[ YFY[ KFYF
I[KFRPK[ KFYF K[Y[
I[KKKILGMFOFPGQIRMR[ YKYIXGWFUFTGSIRM
H\RFR[ PKMLLMKOKRLTMUPVTVWUXTYRYOXMWLTKPK
H\KFY[ K[YF
G]RFR[ ILJLKMLQMSNTQUSUVTWSXQYMZL[L
H\K[O[LTKPKLLINGQFSFVGXIYLYPXTU[Y[
G[G[IZLWOSSLVFV[UXSUQSNQLQKRKTLVNXQZT[Y[
F]SHTITLSPRSQUOXMZK[J[IZIWJRKOLMNJPHRGUFXFZG[I[KZMYNWOTP SPTPWQXRYTYWXYWZU[R[PZOX
H\TLTMUNWNYMZKZIYGWFTFQGOIMLLNKRKVLYMZO[Q[TZVXWV
G^TFRGQIPMOSNVMXKZI[G[FZFXGWIWKXMZP[S[VZXXZT[O[KZHYGWFTFRHRJSMUPWRZT\U
H\VJVKWLYLZKZIYGVFRFOGNINLONPOSPPPMQLRKTKWLYMZP[S[VZXXYV
H\RLPLNKMINGQFTFXG[G]F XGVNTTRXPZN[L[JZIXIVJULUNV QPZP
G^G[IZMVPQQNRJRGQFPFOGNINLONQOUOXNYMZKZQYVXXVZS[O[LZJXIVIT
F^MMKLJJJIKGMFNFPGQIQKPONULYJ[H[GZGX MRVOXN[L]J^H^G]F\FZHXLVRUWUZV[W[YZZY\V
IZWVUTSQROQLQIRGSFUFVGWIWLVQTVSXQZO[M[KZJXJVKUMUOV
JYT^R[PVOPOJPGRFTFUGVJVMURR[PaOdNfLgKfKdLaN^P\SZWX
F^MMKLJJJIKGMFNFPGQIQKPONULYJ[H[GZGX ^I^G]F\FZGXIVLTNROPO ROSQSXTZU[V[XZYY[V
I\MRORSQVOXMYKYHXFVFUGTISNRSQVPXNZL[J[IZIXJWLWNXQZT[V[YZ[X
@aEMCLBJBICGEFFFHGIIIKHPGTE[ GTJLLHMGOFPFRGSISKRPQTO[ QTTLVHWGYFZF\G]I]K\PZWZZ[[\[^Z_YaV
E]JMHLGJGIHGJFKFMGNINKMPLTJ[ LTOLQHRGTFVFXGYIYKXPVWVZW[X[ZZ[Y]V
H]TFQGOIMLLNKRKVLYMZO[Q[TZVXXUYSZOZKYHXGVFTFRHRKSNUQWSZU\V
F_SHTITLSPRSQUOXMZK[J[IZIWJRKOLMNJPHRGUFZF\G]H^J^M]O\PZQWQUPTO
H^ULTNSOQPOPNNNLOIQGTFWFYGZIZMYPWSSWPYNZK[I[HZHXIWKWMXPZS[V[YZ[X
F_SHTITLSPRSQUOXMZK[J[IZIWJRKOLMNJPHRGUFYF[G\H]J]M\O[PYQVQSPTQUSUXVZX[ZZ[Y]V
H\H[JZLXOTQQSMTJTGSFRFQGPIPKQMSOVQXSYUYWXYWZT[P[MZKXJVJT
H[RLPLNKMINGQFTFXG[G]F XGVNTTRXPZN[L[JZIXIVJULUNV
E]JMHLGJGIHGJFKFMGNINKMOLRKVKXLZN[P[RZSYUUXMZF XMWQVWVZW[X[ZZ[Y]V
F]KMILHJHIIGKFLFNGOIOKNOMRLVLYM[O[QZTWVTXPYMZIZGYFXFWGVIVKWNYP[Q
C_HMFLEJEIFGHFIFKGLILLK[ UFK[ UFS[ aF_G\JYNVTS[
F^NLLLKKKILGNFPFRGSISLQUQXRZT[V[XZYXYVXUVU ]I]G\FZFXGVITLPUNXLZJ[H[GZGX
F]KMILHJHIIGKFLFNGOIOKNOMRLVLXMZN[P[RZTXVUWSYM [FYMVWT]RbPfNgMfMdNaP^S[VY[V
H]ULTNSOQPOPNNNLOIQGTFWFYGZIZMYPWTTWPZN[K[JZJXKWNWPXQYR[R^QaPcNfLgKfKdLaN^Q[TYZV
I[JFR[ ZFR[ JFZF
G]IL[b
E_RJIZ RJ[Z
I[J[Z[
I[J[Z[ZZJZJ[
I\XMX[ XPVNTMQMONMPLSLUMXOZQ[T[VZXX
H[LFL[ LPNNPMSMUNWPXSXUWXUZS[P[NZLX
I[XPVNTMQMONMPLSLUMXOZQ[T[VZXX
I\XFX[ XPVNTMQMONMPLSLUMXOZQ[T[VZXX
I[LSXSXQWOVNTMQMONMPLSLUMXOZQ[T[VZXX
MYWFUFSGRJR[ OMVM
I\XMX]W`VaTbQbOa XPVNTMQMONMPLSLUMXOZQ[T[VZXX
I\MFM[ MQPNRMUMWNXQX[
NVQFRGSFREQF RMR[
MWRFSGTFSERF SMS^RaPbNb
IZMFM[ WMMW QSX[
CaGMG[ GQJNLMOMQNRQR[ RQUNWMZM\N]Q][
I\MMM[ MQPNRMUMWNXQX[
I\QMONMPLSLUMXOZQ[T[VZXXYUYSXPVNTMQM
H[LMLb LPNNPMSMUNWPXSXUWXUZS[P[NZLX
I\XMXb XPVNTMQMONMPLSLUMXOZQ[T[VZXX
KXOMO[ OSPPRNTMWM
J[XPWNTMQMNNMPNRPSUTWUXWXXWZT[Q[NZMX
MYRFRWSZU[W[ OMVM
I\MMMWNZP[S[UZXW XMX[
JZLMR[ XMR[
G]JMN[ RMN[ RMV[ ZMV[
J[MMX[ XMM[
JZLMR[ XMR[P_NaLbKb
J[XMM[ MMXM M[X[
H]QMONMPLRKUKXLZN[P[RZUWWTYPZM QMSMTNUPWXXZY[Z[
I\UFSGQIOMNPMTLZKb UFWFYHYKXMWNUORO ROTPVRWTWWVYUZS[Q[OZNYMV
I\JPLNNMOMQNROSRSVR[ ZMYPXRR[P_Ob
I[TMQMONMPLSLVMYNZP[R[TZVXWUWRVOTMRKQIQGRFTFVGXI
JZWOVNTMQMONOPPRSS SSOTMVMXNZP[S[UZWX
JYTFRGQHQIRJUKXK XKTMQONRMUMWNYP[S]T_TaSbQbP`
H\IQJOLMNMONOPNTL[ NTPPRNTMVMXOXRWWTb
G\HQIOKMMMNNNPMUMXNZO[Q[SZUWVUWRXMXJWGUFSFRHRJSMUPWRZT
LWRMPTOXOZP[R[TYUW
I[OMK[ YNXMWMUNQROSNS NSPTQUSZT[U[VZ
JZKFMFOGPHX[ RML[
H]OMIb NQMVMYO[Q[SZUXWT YMWTVXVZW[Y[[Y\W
I[LMOMNSMXL[ YMXPWRUURXOZL[
JZTFRGQHQIRJUKXK UKRLPMOOOQQSTTVT TTPUNVMXMZO\S^T_TaRbPb
J[RMPNNPMSMVNYOZQ[S[UZWXXUXRWOVNTMRM
G]PML[ UMVSWXX[ IPKNNM[M
I[MSMVNYOZQ[S[UZWXXUXRWOVNTMRMPNNPMSIb
I][MQMONMPLSLVMYNZP[R[TZVXWUWRVOUNSM
H\SMP[ JPLNOMZM
H\IQJOLMNMONOPMVMYO[Q[TZVXXTYPYM
G]ONMOKQJTJWKYLZN[Q[TZWXYUZRZOXMVMTORSPXMb
I[KMMMOOU`WbYb ZMYOWRM]K`Jb
F]VFNb GQHOJMLMMNMPLULXMZO[Q[TZVXXUZP[M
F]NMLNJQITIWJZK[M[OZQW RSQWRZS[U[WZYWZTZQYNXM
L\UUTSRRPRNSMTLVLXMZO[Q[SZTXVRUWUZV[W[YZZY\V
M[MVOSRNSLTITGSFQGPIOMNTNZO[P[RZTXUUURVVWWYW[V
MXTTTSSRQROSNTMVMXNZP[S[VYXV
L\UUTSRRPRNSMTLVLXMZO[Q[SZTXZF VRUWUZV[W[YZZY\V
NXOYQXRWSUSSRRQROSNUNXOZQ[S[UZVYXV
OWOVSQUNVLWIWGVFTGSIQQNZKaJdJfKgMfNcOZP[R[TZUYWV
L[UUTSRRPRNSMTLVLXMZO[Q[SZTY VRTYPdOfMgLfLdMaP^S\U[XY[V
M\MVOSRNSLTITGSFQGPIOMNSM[ M[NXOVQSSRURVSVUUXUZV[W[YZZY\V
PWSMSNTNTMSM PVRRPXPZQ[R[TZUYWV
PWSMSNTNTMSM PVRRLdKfIgHfHdIaL^O\Q[TYWV
M[MVOSRNSLTITGSFQGPIOMNSM[ M[NXOVQSSRURVSVUTVQV QVSWTZU[V[XZYY[V
OWOVQSTNULVIVGUFSGRIQMPTPZQ[R[TZUYWV
E^EVGSIRJSJTIXH[ IXJVLSNRPRQSQTPXO[ PXQVSSURWRXSXUWXWZX[Y[[Z\Y^V
J\JVLSNROSOTNXM[ NXOVQSSRURVSVUUXUZV[W[YZZY\V
LZRRPRNSMTLVLXMZO[Q[SZTYUWUUTSRRQSQURWTXWXYWZV
KZKVMSNQMUGg MUNSPRRRTSUUUWTYSZQ[ MZO[R[UZWYZV
L[UUTSRRPRNSMTLVLXMZO[Q[SZ VRUUSZPaOdOfPgRfScS\U[XY[V
MZMVOSPQPSSSTTTVSYSZT[U[WZXYZV
NYNVPSQQQSSVTXTZR[ NZP[T[VZWYYV
OXOVQSSO VFPXPZQ[S[UZVYXV PNWN
L[LVNRLXLZM[O[QZSXUU VRTXTZU[V[XZYY[V
L[LVNRMWMZN[O[RZTXUUUR URVVWWYW[V
I^LRJTIWIYJ[L[NZPX RRPXPZQ[S[UZWXXUXR XRYVZW\W^V
JZJVLSNRPRQSQZR[U[XYZV WSVRTRSSOZN[L[KZ
L[LVNRLXLZM[O[QZSXUU VRPdOfMgLfLdMaP^S\U[XY[V
LZLVNSPRRRTTTVSXQZN[P\Q^QaPdOfMgLfLdMaP^S\WYZV
J\K[NZQXSVUSWOXKXIWGUFSGRHQJPOPTQXRZT[V[XZYY
I[WUWRVOUNSMQMONMPLSLVMYNZP[R[TZVXWUXPXKWHVGTFRFPGNI
JZWNUMRMPNNPMSMVNYOZQ[T[VZ MTUT
J[TFRGPJOLNOMTMXNZO[Q[SZUWVUWRXMXIWGVFTF NPWP
H\VFNb QMNNLPKSKVLXNZQ[S[VZXXYUYRXPVNSMQM
I[XOWNTMQMNNMOLQLSMUOWSZT\T^S_Q_
DaWNVLTKQKOLNMMOMRNTOUQVTVVUWS WKWSXUYV[V\U]S]O\L[JYHWGTFQFNGLHJJILHOHRIUJWLYNZQ[T[WZYY
F^ZIJRZ[
F^JIZRJ[
KYOBOb OBVB ObVb
KYUBUb NBUB NbUb
KYTBQEPHPJQMSOSPORSTSUQWPZP\Q_Tb
KYPBSETHTJSMQOQPURQTQUSWTZT\S_Pb
F^[FYGVHSHPGNFLFJGIIIKKMMMOLPJPHNF [FI[ YTWTUUTWTYV[X[ZZ[X[VYT
H\QFNGLJKOKRLWNZQ[S[VZXWYRYOXJVGSFQF
H\NJPISFS[
H\LKLJMHNGPFTFVGWHXJXLWNUQK[Y[
H\MFXFRNUNWOXPYSYUXXVZS[P[MZLYKW
H\UFKTZT UFU[
H\WFMFLOMNPMSMVNXPYSYUXXVZS[P[MZLYKW
H\XIWGTFRFOGMJLOLTMXOZR[S[VZXXYUYTXQVOSNRNOOMQLT
H\YFO[ KFYF
H\PFMGLILKMMONSOVPXRYTYWXYWZT[P[MZLYKWKTLRNPQOUNWMXKXIWGTFPF
H\XMWPURRSQSNRLPKMKLLINGQFRFUGWIXMXRWWUZR[P[MZLX
MWRYQZR[SZRY
MWSZR[QZRYSZS\R^Q_
MWRMQNROSNRM RYQZR[SZRY
MWRMQNROSNRM SZR[QZRYSZS\R^Q_
MWRFRT RYQZR[SZRY
I[LKLJMHNGPFTFVGWHXJXLWNVORQRT RYQZR[SZRY
NVRFRM
JZNFNM VFVM
KYQFOGNINKOMQNSNUMVKVIUGSFQF
H\PBP_ TBT_ YIWGTFPFMGKIKKLMMNOOUQWRXSYUYXWZT[P[MZKX
G][BIb
KYVBTDRGPKOPOTPYR]T`Vb
KYNBPDRGTKUPUTTYR]P`Nb
NVRBRb
E_IR[R
E_RIR[ IR[R
E_IO[O IU[U
G]KKYY YKKY
JZRLRX MOWU WOMU
MWRQQRRSSRRQ
MWSFRGQIQKRLSKRJ
MWRHQGRFSGSIRKQL
E_UMXP[RXTUW IR[R
G]OFOb UFUb JQZQ JWZW
E_\O\N[MZMYNXPVUTXRZP[L[JZIYHWHUISJRQNRMSKSIRGPFNGMIMKNNPQUXWZY[[[\Z\Y
G]IIJKKOKUJYI[ [IZKYOYUZY[[ IIKJOKUKYJ[I I[KZOYUYYZ[[
F_\Q[OYNWNUOTPQTPUNVLVJUISIQJOLNNNPOQPTTUUWVYV[U\S\Q
KYOBO[ UBU[
F^RBR[ I[[[
F^[BI[[[
E_RIQJRKSJRI IYHZI[JZIY [YZZ[[\Z[Y
F^RHNLKPJSJUKWMXOXQWRU RHVLYPZSZUYWWXUXSWRU RUQYP\ RUSYT\ P\T\
F^RNQKPINHMHKIJKJOKRLTNWR\ RNSKTIVHWHYIZKZOYRXTVWR\
F^RGPJLOIR RGTJXO[R IRLUPZR] [RXUTZR]
F^RTTWVXXXZW[U[SZQXPVPSQ SQUOVMVKUISHQHOINKNMOOQQ QQNPLPJQISIUJWLXNXPWRT RTQYP\ RTSYT\ P\T\
F^RRR[Q\ RVQ\ RIQHOHNINKONRR RISHUHVIVKUNRR RRNOLNJNIOIQJR RRVOXNZN[O[QZR RRNULVJVIUISJR RRVUXVZV[U[SZR
F^ISJSLTMVMXLZ ISIRJQLQMRNTNWMYLZ RGPIOLOOQUQXPZR\ RGTIULUOSUSXTZR\ [S[RZQXQWRVTVWWYXZ [SZSXTWVWXXZ KVYV
PSSRRSQSPRPQQPRPSQSSRUQV QQQRRRRQQQ
PTQPPQPSQTSTTSTQSPQP RQQRRSSRRQ
NVPOTU TOPU NRVR
MWRKQMOPMR RKSMUPWR RMOQ RMUQ ROPQ ROTQ QQSQ MRWR
MWMRMQNOONQMSMUNVOWQWR PNTN OOUO NPVP NQVQ MRWR
LRLFLRRRLF LIPQ LLOR LOMQ
MWRKQMOPMR RKSMUPWR
MWWRWQVOUNSMQMONNOMQMR
G]]R]P\MZJWHTGPGMHJJHMGPGR
MWMRMSNUOVQWSWUVVUWSWR
LXLPNRQSSSVRXP
RURUTTURTPRO
RVRRUPVNVLUKTK
NRRROPNNNLOKPK
MWWHVGTFQFOGNHMJMLNNOOUSVTWVWXVZU[S\P\N[MZ
G]IWHVGTGQHOINKMMMONPOTUUVWWYW[V\U]S]P\N[M
G]RRTUUVWWYW[V\U]S]Q\O[NYMWMUNTOPUOVMWKWIVHUGSGQHOINKMMMONPORR
H\KFK[ HF[FQP[Z ZV[Y\[ ZVZY WYZY WYZZ\[
KYUARBPCNELHKLKRLUNWQXSXVWXUYR KPLMNKQJSJVKXMYPYVXZV]T_R`Oa
>f>RfR
D`D``D
RRR>Rf
D`DD``
D`DR`R
F^FY^K
KYK^YF
KYKFY^
F^FK^Y
KYKRYR
MWMWWM
MWMMWW
D`DOGQKSPTTTYS]Q`O
PUUDSGQKPPPTQYS]U`
OTODQGSKTPTTSYQ]O`
D`DUGSKQPPTPYQ]S`U
KYRJYNKVRZ
JZJRNKVYZR
KYKVKNYVYN
JZLXJPZTXL
JZJ]L]O\Q[TXUVVSVOULTJSIQIPJOLNONSOVPXS[U\X]Z]
I]]Z]X\U[SXPVOSNONLOJPIQISJTLUOVSVVUXT[Q\O]L]J
JZZGXGUHSIPLONNQNUOXPZQ[S[TZUXVUVQUNTLQIOHLGJG
G[GJGLHOIQLTNUQVUVXUZT[S[QZPXOUNQNNOLPISHUGXGZ
E[EPFRHTJUMVQVUUXSZP[NZLWLSMQNNPLSKVKYL\M^
EYETHVKWPWSVVTXQYNYLXKVKSLPNNQMTMYN\P_
OUQOOQOSQUSUUSUQSOQO QPPQPSQTSTTSTQSPQP RQQRRSSRRQ
D`DRJR ORUR ZR`R
D`DUDO`O`U
JZRDJR RDZR
D`DR`R JYZY P`T`
D`DR`R DRRb `RRb
KYQKNLLNKQKSLVNXQYSYVXXVYSYQXNVLSKQK
LXLLLXXXXLLL
KYRJKVYVRJ
LXRHLRR\XRRH
JZRIPOJOOSMYRUWYUSZOTORI
KYRKRY KRYR
MWMMWW WMMW
MWRLRX MOWU WOMU
NVQNOONQNSOUQVSVUUVSVQUOSNQN OQOS PPPT QOQU RORU SOSU TPTT UQUS
NVNNNVVVVNNN OOOU POPU QOQU RORU SOSU TOTU UOUU
MWRLMUWURL ROOT ROUT RRQT RRST
LULRUWUMLR ORTU ORTO RRTS RRTQ
MWRXWOMORX RUUP RUOP RRSP RRQP
OXXROMOWXR URPO URPU RRPQ RRPS
LXRLNWXPLPVWRL RRRL RRLP RRNW RRVW RRXP
MWRLRX OOUO MUOWQXSXUWWU
LXRLRX LQMOWOXQ PWTW
KYMNWX WNMX OLLOKQ ULXOYQ
I[NII[ VI[[ MM[[ WMI[ NIVI MMWM
I[RGRV MJWP WJMP IVL\ [VX\ IV[V L\X\
G[MJSV KPSL G\[\[RG\
LXPLPPLPLTPTPXTXTTXTXPTPTLPL
KYYPXNVLSKQKNLLNKQKSLVNXQYSYVXXVYT YPWNUMSMQNPOOQOSPUQVSWUWWVYT
KYRJKVYVRJ RZYNKNRZ
G]PIPGQFSFTGTI GZHXJVKTLPLKMJOIUIWJXKXPYTZV\X]Z GZ]Z QZP[Q\S\T[SZ
JZRMRS RSQ\ RSS\ Q\S\ RMQJPHNG QJNG RMSJTHVG SJVG RMNKLKJM PLLLJM RMVKXKZM TLXLZM RMPNOOOR RMPOOR RMTNUOUR RMTOUR
JZRIRK RNRP RSRU RYQ\ RYS\ Q\S\ RGQIPJ RGSITJ PJRITJ RKPNNOMN RKTNVOWN NOPORNTOVO RPPSNTLTKRKSLT RPTSVTXTYRYSXT NTPTRSTTVT RUPXOYMZLZKYJWJYLZ RUTXUYWZXZYYZWZYXZ MZOZRYUZWZ
JZRYQ\ RYS\ Q\S\ RYUZXZZXZUYTWTYRZOYMWLUMVJUHSGQGOHNJOMMLKMJOKRMTKTJUJXLZOZRY
JZRYQ\ RYS\ Q\S\ RYVXVVXUXRZQZLYIXHVHTGPGNHLHKIJLJQLRLUNVNXRY
I[IPKR LKNP RGRO XKVP [PYR
QSRQQRRSSRRQ
PTQPPQPSQTSTTSTQSPQP
NVQNOONQNSOUQVSVUUVSVQUOSNQN
MWQMONNOMQMSNUOVQWSWUVVUWSWQVOUNSMQM
G]PGMHJJHMGPGTHWJZM\P]T]W\ZZ\W]T]P\MZJWHTGPG
AcPALBJCGEEGCJBLAPATBXCZE]G_JaLbPcTcXbZa]__]aZbXcTcPbLaJ_G]EZCXBTAPA
<hP<K=G?DAAD?G=K<P<T=Y?]A`DcGeKgPhThYg]e`cc`e]gYhThPgKeGcD`A]?Y=T<P<
){O)I*E+@-;073370;-@+E*I)O)U*[+_-d0i3m7q;t@wEyIzO{U{[z_ydwitmqqmtiwdy_z[{U{OzIyEw@t;q7m3i0d-_+[*U)O)
>fRAPCMDJDGCEA>H@JAMAZB]D_G`M`PaRc RATCWDZD]C_AfHdJcMcZb]`_]`W`TaRc
AcRAPCMDJDGCEABGAKAPBTDXG\L`Rc RATCWDZD]C_AbGcKcPbT`X]\X`Rc BHbH
H[WPVQWRXQXPVNTMQMNNLPKSKULXNZQ[S[VZXX QMONMPLSLUMXOZQ[ LbXF
KYRKMX RNVX RKWX OTTT KXPX TXYX
JZNKNX OKOX LKSKVLWNVPSQ SKULVNUPSQ OQSQVRWTWUVWSXLX SQURVTVUUWSX
KYVLWKWOVLTKQKOLNMMPMSNVOWQXTXVWWU QKOMNPNSOVQX
JZNKNX OKOX LKSKVLWMXPXSWVVWSXLX SKULVMWPWSVVUWSX
JYNKNX OKOX SOSS LKVKVOUK OQSQ LXVXVTUX
JXNKNX OKOX SOSS LKVKVOUK OQSQ LXQX
K[VLWKWOVLTKQKOLNMMPMSNVOWQXTXVW QKOMNPNSOVQX TXUWVU VSVX WSWX TSYS
J[NKNX OKOX VKVX WKWX LKQK TKYK OQVQ LXQX TXYX
NWRKRX SKSX PKUK PXUX
LXSKSURWQX TKTUSWQXPXNWMUNTOUNV QKVK
JZNKNX OKOX WKOS QQVX RQWX LKQK TKYK LXQX TXYX
KXOKOX PKPX MKRK MXWXWTVX
I\MKMX NNRX NKRU WKRX WKWX XKXX KKNK WKZK KXOX UXZX
JZNKNX OMVX OKVV VKVX LKOK TKXK LXPX
KZQKOLNMMPMSNVOWQXTXVWWVXSXPWMVLTKQK QKOMNPNSOVQX TXVVWSWPVMTK
JYNKNX OKOX LKSKVLWNWOVQSROR SKULVNVOUQSR LXQX
KZQKOLNMMPMSNVOWQXTXVWWVXSXPWMVLTKQK QKOMNPNSOVQX TXVVWSWPVMTK PWPUQTSTTUUZV[W[XZ TUUXVZW[
JZNKNX OKOX LKSKVLWNWOVQSROR SKULVNVOUQSR LXQX SRTSUWVXWXXW SRUSVWWX
KZVMWKWOVMULSKQKOLNMNOOPQQTRVSWT NNOOQPTQVRWSWVVWTXRXPWOVNTNXOV
KZRKRX SKSX NKMOMKXKXOWK PXUX
J[NKNUOWQXTXVWWUWK OKOUPWQX LKQK UKYK
KYMKRX NKRU WKRX KKPK TKYK
I[LKOX MKOT RKOX RKUX SKUT XKUX JKOK VKZK
KZNKVX OKWX WKNX LKQK TKYK LXQX TXYX
LYNKRRRX OKSR WKSRSX LKQK TKYK PXUX
LYVKNX WKOX OKNONKWK NXWXWTVX
KXOKOX PKPX MKWKWOVK MXRX
KYRKLX RMWX RKXX MWVW LXXX
KZQKOLNMMPMSNVOWQXTXVWWVXSXPWMVLTKQK QKOMNPNSOVQX TXVVWSWPVMTK QOQT TOTT QQTQ QRTR
KYRKMX RNVX RKWX KXPX TXYX
JZMJLM XJWM PPOS UPTS MVLY XVWY MKWK MLWL PQTQ PRTR MWWW MXWX
J[NKNX OKOX VKVX WKWX LKYK LXQX TXYX
K[MKRQ NKSQMX MKWKXOVK NWWW MXWXXTVX
KZMONLOKPKQLRORX XOWLVKUKTLSOSX MONMOLPLQMRO XOWMVLULTMSO PXUX
KZRKRX SKSX QNNOMQMRNTQUTUWTXRXQWOTNQN QNOONQNROTQU TUVTWRWQVOTN PKUK PXUX
J[RKRX SKSX LPMONOOSQU TUVSWOXOYP MONROTQUTUVTWRXO PKUK PXUX
KZMVNXQXMRMONMOLQKTKVLWMXOXRTXWXXV OUNRNOOMQK TKVMWOWRVU NWPW UWWW
KYTKKX SMTX TKUX NTTT IXNX RXWX
JYPKLX QKMX NKUKWLWNVPSQ UKVLVNUPSQ OQRQTRUSUUTWQXJX RQTSTUSWQX
KXVLWLXKWNVLTKRKPLOMNOMRMUNWPXRXTWUU RKPMOONRNVPX
JYPKLX QKMX NKTKVLWNWQVTUVTWQXJX TKULVNVQUTTVSWQX
JYPKLX QKMX SORS NKXKWNWK OQRQ JXTXUUSX
JXPKLX QKMX SORS NKXKWNWK OQRQ JXOX
KYVLWLXKWNVLTKRKPLOMNOMRMUNWPXRXTWUVVS RKPMOONRNVPX RXTVUS SSXS
J[PKLX QKMX XKTX YKUX NKSK VK[K OQVQ JXOX RXWX
NWTKPX UKQX RKWK NXSX
LXUKRUQWPX VKSURWPXOXMWLUMTNUMV SKXK
JZPKLX QKMX YKOR RPTX SPUX NKSK VK[K JXOX RXWX
KXQKMX RKNX OKTK KXUXVUTX
I\OKKX OMPX PKQV YKPX YKUX ZKVX MKPK YK\K IXMX SXXX
JZPKLX PKTX QKTU XKTX NKQK VKZK JXNX
KYRKPLOMNOMRMUNWPXRXTWUVVTWQWNVLTKRK RKPMOONRNVPX RXTVUTVQVMTK
JYPKLX QKMX NKUKWLXMXOWQTROR UKWMWOVQTR JXOX
KYRKPLOMNOMRMUNWPXRXTWUVVTWQWNVLTKRK RKPMOONRNVPX RXTVUTVQVMTK OWOVPUQURVRZS[T[UZ RVSZT[
JZPKLX QKMX NKUKWLXMXOWQTROR UKWMWOVQTR SRTWUXVXWW SRTSUWVX JXOX
KZWLXLYKXNWLUKRKPLOMOOPPUSVT ONPOURVSVVUWSXPXNWMULXMWNW
KZTKPX UKQX PKNNOKZKYNYK NXSX
J[PKMUMWOXSXUWVUYK QKNUNWOX NKSK WK[K
KYOKPX PKQV YKPX MKRK VK[K
I[NKMX OKNV TKMX TKSX UKTV ZKSX LKQK XK\K
KZPKTX QKUX YKLX NKSK VK[K JXOX RXWX
LYPKRQPX QKSQ YKSQQX NKSK VK[K NXSX
LYXKLX YKMX QKONPKYK LXUXVUTX
KZMHX\
JZRMLW RMXW
LZQOPPPQOQOPQOTOVQVWWXXX TOUQUWWX URRSPTOUOWPXSXTWUU RSPUPWQX
JYNKNX OKOX ORPPROTOVPWRWUVWTXRXPWOU TOUPVRVUUWTX LKOK
LXVQUQURVRVQUPSOQOOPNRNUOWQXSXUWVV QOPPOROUPWQX
L[VKVX WKWX VRUPSOQOOPNRNUOWQXSXUWVU QOPPOROUPWQX TKWK VXYX
LXOSVSVRUPSOQOOPNRNUOWQXSXUWVV USUQSO QOPPOROUPWQX
LWTKULUMVMVLTKRKPMPX RKQMQX NOSO NXSX
LYQOOQOSQUSUUSUQSOQO QOPQPSQU SUTSTQSO TPUOVO PTOUOXPYTYVZ OWPXTXVYV[T\P\N[NYPX
J[NKNX OKOX ORPPROTOVPWRWX TOUPVRVX LKOK LXQX TXYX
NWRKRLSLSKRK RORX SOSX POSO PXUX
NWSKSLTLTKSK SOSZR\ TOTZR\P\O[OZPZP[O[ QOTO
JZNKNX OKOX WOOU RSVX SSWX LKOK TOYO LXQX TXYX
NWRKRX SKSX PKSK PXUX
F_JOJX KOKX KRLPNOPORPSRSX POQPRRRX SRTPVOXOZP[R[X XOYPZRZX HOKO HXMX PXUX XX]X
J[NONX OOOX ORPPROTOVPWRWX TOUPVRVX LOOO LXQX TXYX
LYQOOPNRNUOWQXTXVWWUWRVPTOQO QOPPOROUPWQX TXUWVUVRUPTO
JYNON\ OOO\ ORPPROTOVPWRWUVWTXRXPWOU TOUPVRVUUWTX LOOO L\Q\
KYUOU\ VOV\ URTPROPONPMRMUNWPXRXTWUU POOPNRNUOWPX S\X\
KXOOOX POPX PRQPSOUOVPVQUQUPVP MOPO MXRX
LYTOUPUQVQVPTOQOOPORQSTTVU OQQRTSVTVWTXQXOWOVPVPWQX
LWPKPVRXTXUWUV QKQVRX NOTO
J[NONUOWQXSXUWVU OOOUPWQX VOVX WOWX LOOO TOWO VXYX
KYNORX OORV VORX LOQO TOXO
I[LOOX MOOU ROOX ROUX SOUU XOUX JOOO VOZO
KYNOUX OOVX VONX LOQO TOXO LXPX SXXX
KYNORX OORV VORXP[N\M\L[LZMZM[L[ LOQO TOXO
LXUONX VOOX OONQNOVO NXVXVVUX
K[QOOPNQMSMUNWPXQXSWUUWRXO QOOQNSNUOWPX QOSOUPWWXX SOTPVWXXYX
KXRKPMOOMUK\ QLPNNTL\ RKTKVLVNUPRQ TKULUNTPRQ RQTRUTUVTWRXQXOWNT RQSRTTTVRX
KYLQNOPORPSSSXR\ LQNPPPRQSS WOVRSXQ\
KYSOQOOPNQMSMUNWPXRXTWUVVTVRUPRNQLQKRJTJUKVM QOOQNSNVPX RXTVUTUQSO QLRKTKVM
LXVPTOQOOPOQPRRS QOPPPQRS RSOTNUNWPXSXUW RSPTOUOWPX
LWRKQLQMSNVNVMSNPOOPNRNTOVPWRXSYS[R\P\O[ SNQOPPOROTPVRX
IYJRKPLONOOPOQMX MONPNQLX OQPPROTOVPVRS\ TOUPURR\
IYJSKQLPNPOQOVPX MPNQNUOWPXQXSWTVUTVQVNULTKRKQLQNRPURWS QXSVTTUQUNTK
NWROPVPWQXSXUWVU SOQVQWRX
KYOOLX POMX UOVPWPVOTORQOR ORPSRWTXVWWU ORQSSWTX
LXLKNKPLWX NKOLVX RPMX RPNX
KZOOK\ POL\ NUNWOXQXSWTV VOTVTWUXWXXWYU WOUVUWVX
JYNOMX OONUMX VRVOWOVRTUQWNXMX LOOO
MXRKQLQMSNVN TNQOPPPRRSUS TNROQPQRRS SSPTOUOWQXSYTZT[S\Q\ SSQTPUPWQX
KXQOOPNQMSMUNWPXRXTWUVVTVRUPSOQO QOOQNSNVPX RXTVUTUQSO
IZPPMX PPNX TPSX TPTX KQMOXO KQMPXP
JXSOQOOPNQMSJ\ QOOQNSK\ SOUPVRVTUVTWRXPXNWMU SOUQUTTVRX
K[YOQOOPNQMSMUNWPXRXTWUVVTVRUPYP QOOQNSNVPX RXTVUTUQSO
KZSPQX SPRX MQOOXO MQOPXP
JXKRLPMOOOPPPROUOWPX NOOPORNUNWPXQXSWUUVRVOUOVP
KZOPNQMSMUNWPXRXUWWUXRXPWOUOTPSRRUO\ MUNVPWRWUVWTXR XQWPUPSR RUQXP\
KXMONOPPS[T\ NOOPR[T\U\ VOTRNYL\
I[TKQ\ UKP\ JRKPLONOOPOVPWSWUVWT MONPNTOWPXSXUWWTXRYO
JZNPPPPONPMQLSLUMWNXPXQWRUSR LUNWPWRU RRRWSXUXWVXTXRWPVOVPWP RUSWUWWV
KZVOTVTWUXWXXWYU WOUVUWVX USUQSOQOOPNQMSMUNWPXRXTV QOOQNSNVPX
JXOKMR PKNRNVPX NROPQOSOUPVRVTUVTWRXPXNWMUMR SOUQUTTVRX MKPK
KXUPUQVQUPSOQOOPNQMSMUNWPXRXTWUV QOOQNSNVPX
KZWKTVTWUXWXXWYU XKUVUWVX USUQSOQOOPNQMSMUNWPXRXTV QOOQNSNVPX UKXK
KWNURTTSURUPSOQOOPNQMSMUNWPXRXTWUV QOOQNSNVPX
MXWKXLXKVKTLSNPYO[N\ VKULTNQYP[N\L\L[M\ POVO
KYVOTVSYR[ WOUVTYR[P\M\L[M[N\ USUQSOQOOPNQMSMUNWPXRXTV QOOQNSNVPX
KZPKLX QKMX OQPPROTOVPVRUUUWVX TOUPURTUTWUXWXXWYU NKQK
MWSKSLTLTKSK NROPPOROSPSRRURWSX QORPRRQUQWRXTXUWVU
MWTKTLULUKTK ORPPQOSOTPTRRYQ[O\M\M[N\ ROSPSRQYP[O\
KXPKLX QKMX VPUQVQVPUOTORQPROR ORPSQWRXTXUWVU ORQSRWSX NKQK
NVSKPVPWQXSXTWUU TKQVQWRX QKTK
F^GRHPIOKOLPLQJX JOKPKQIX LQMPOOQOSPSQQX QORPRQPX SQTPVOXOZPZRYUYWZX XOYPYRXUXWYX[X\W]U
J[KRLPMOOOPPPQNX NOOPOQMX PQQPSOUOWPWRVUVWWX UOVPVRUUUWVXXXYWZU
JYKRLPMOOOPPPQM\ NOOPOQL\ PQROTOVPWRWTVVUWSXQXOVOT TOVQVTUVSX J\O\
KYVOR\ WOS\ USUQSOQOOPNQMSMUNWPXRXTV QOOQNSNVPX P\U\
LXMRNPOOQORPRQPX POQPQQOX RQSPUOVOWPWQVQWP
LYVPVQWQVPTOQOOPORQSTTVU OQQRTSVTVWTXQXOWNVOVOW
NWSKPVPWQXSXTWUU TKQVQWRX POUO
IZJRKPLONOOPORNUNWOX MONPNRMUMWOXQXSWTV VOTVTWUXWXXWYU WOUVUWVX
H\IRJPKOMONPNRMUMWNX LOMPMRLULWNXOXQWRV TORVRWTX UOSVSWTXUXWWYUZRZOYOZP
JZMRNPPOROSPSR QORPRRQUPWNXMXLWLVMVLW XPWQXQXPWOVOTPSRRURWSX QUQWRXTXVWWU
IYJRKPLONOOPORNUNWOX MONPNRMUMWOXQXSWTV VOTVSYR[ WOUVTYR[P\M\L[M[N\
KYWOWPVQNVMWMX NQOOROUQ OPRPUQVQ NVOVRWUW OVRXUXVV
H[RKSLSMTMTLRKOKMLLNLX OKNLMNMX XKYLYMZMZLXKVKTMTX VKUMUX JOWO JXOX RXWX
J[UKVLWLWKQKOLNNNX QKPLONOX VOVX WOWX LOWO LXQX TXYX
J[WKQKOLNNNX QKPLONOX UKVLVX WKWX LOVO LXQX TXYX
F_PKQLQMRMRLPKMKKLJNJX MKLLKNKX YKZL[L[KUKSLRNRX UKTLSNSX ZOZX [O[X HO[O HXMX PXUX XX]X
F_PKQLQMRMRLPKMKKLJNJX MKLLKNKX [KUKSLRNRX UKTLSNSX YKZLZX [K[X HOZO HXMX PXUX XX]X
NWRORX SOSX POSO PXUX
LXVPTOROPPOQNSNUOWQXSXUW ROPQOSOVQX OSSS
LYSKQLPMOONRNUOWPXRXTWUVVTWQWNVLUKSK SKQMPOOSOVPX RXTVUTVPVMUK OQVQ
KZTKQ\ UKP\ QONPMRMUNWQXTXWWXUXRWPTOQO QOOPNRNUOWQX TXVWWUWRVPTO
LXUPVRVQUPSOQOOPNRNTOVRX QOOQOTPVRXSYS[R\P\
I[VKWLXLVKSKQLPMOOLYK[J\ SKQMPOMYL[J\H\H[I\ ZK[L[KYKWLVNSYR[Q\ YKXLWNTYS[Q\O\O[P\ LOYO
IZVKWLXLXKSKQLPMOOLYK[J\ SKQMPOMYL[J\H\H[I\ VOTVTWUXWXXWYU WOUVUWVX LOWO
IZVKWL XKSKQLPMOOLYK[J\ SKQMPOMYL[J\H\H[I\ WKTVTWUXWXXWYU XKUVUWVX LOVO
F^SKTLTM ULSKPKNLMMLOIYH[G\ PKNMMOJYI[G\E\E[F\ ZK[L\L\KWKUL TMSOPYO[N\ WKUMTOQYP[N\L\L[M\ ZOXVXWYX[X\W]U [OYVYWZX IO[O
F^SKTLTM ULSKPKNLMMLOIYH[G\ PKNMMOJYI[G\E\E[F\ ZK[L \KWKUL TMSOPYO[N\ WKUMTOQYP[N\L\L[M\ [KXVXWYX[X\W]U \KYVYWZX IOZO
MWNROPPOROSPSRRURWSX QORPRRQUQWRXTXUWVU
LYQKOLNONTOWQXTXVWWTWOVLTKQK QKPLOOOTPWQX TXUWVTVOULTK
LYPNSKSX RLRX OXVX
LYOMONNNNMOLQKTKVLWNVPTQQROSNUNX TKULVNUPTQ NWOVPVSWVWWV PVSXVXWVWU
LYOMONNNNMOLQKTKVLWNVPTQ TKULVNUPTQ RQTQVRWTWUVWTXQXOWNVNUOUOV TQURVTVUUWTX
LYSMSX TKTX TKMTXT QXVX
LYOKNQ OKVK OLSLVK NQOPQOTOVPWRWUVWTXQXOWNVNUOUOV TOUPVRVUUWTX
LYVMVNWNWMVLTKRKPLOMNPNUOWQXTXVWWUWSVQTPQPNR RKPMOPOUPWQX TXUWVUVSUQTP
LYNKNO VMRTPX WKTQQX NMPKRKUM NMPLRLUMVM
LYQKOLNNOPQQTQVPWNVLTKQK QKPLONPPQQ TQUPVNULTK QQORNTNUOWQXTXVWWUWTVRTQ QQPROTOUPWQX TXUWVUVTURTQ
LYOVOUNUNVOWQXSXUWVVWSWNVLTKQKOLNNNPORQSTSWQ SXUVVSVNULTK QKPLONOPPRQS
NVRVQWRXSWRV
NVSWRXQWRVSWSYQ[
NVROQPRQSPRO RVQWRXSWRV
NVROQPRQSPRO SWRXQWRVSWSYQ[
NVRKQLRSSLRK RLRO RVQWRXSWRV
LYNNONOONONNOLQKTKVLWNWOVQSRRSRTST TKVMVPUQSR RWRXSXSWRW
OVRKRP SKRP
LXOKOP PKOP UKUP VKUP
MWQKPLPNQOSOTNTLSKQK
MWRJRP OKUO UKOO
KZXHM\
MWUHSJQMPPPTQWSZU\ SJRLQPQTRXSZ
MWOHQJSMTPTTSWQZO\ QJRLSPSTRXQZ
MWPHP\ QHQ\ PHUH P\U\
MWSHS\ THT\ OHTH O\T\
LWSHRIQKQMRORPPRRTRUQWQYR[S\ RIQM QKRO RUQY QWR[
MXQHRISKSMRORPTRRTRUSWSYR[Q\ RISM SKRO RUSY SWR[
MWTHPRT\
MWPHTRP\
OURHR\
MWPHP\ THT\
I[LRXR
I[RLRX LRXR
JZRMRX MRWR MXWX
JZRMRX MMWM MRWR
JZMMWW WMMW
NVRQQRRSSRRQ
I[RLQMRNSMRL LRXR RVQWRXSWRV
I[LPXP LTXT
I[WLMX LPXP LTXT
I[LNXN LRXR LVXV
JZWLMRWX
JZMLWRMX
JZWKMOWS MTWT MXWX
JZMKWOMS MTWT MXWX
H[YUWUUTTSRPQOONNNLOKQKRLTNUOUQTRSTPUOWNYN
JZLTLRMPOPUSWSXR LRMQOQUTWTXRXP
JZMSRPWS MSRQWS
NVSKPO SKTLPO
NVQKTO QKPLTO
LXNKOMQNSNUMVK NKONQOSOUNVK
NVSLRMQLRKSLSNQP
NVSKQMQORPSORNQO
NVQLRMSLRKQLQNSP
NVQKSMSORPQORNSO
JZWMQMONNOMQMSNUOVQWWW
JZMMMSNUOVQWSWUVVUWSWM
JZMMSMUNVOWQWSVUUVSWMW
JZMWMQNOONQMSMUNVOWQWW
JZWMQMONNOMQMSNUOVQWWW MRUR
I[TOUPXRUTTU UPWRUT LRWR
MWRMRX OPPORLTOUP PORMTO
I[POOPLROTPU OPMROT MRXR
MWRLRW OTPURXTUUT PURWTU
KYVSUPSOQOOPNQMSMUNWPXRXTWUVVTWQWNVLTKQKPLQLRK QOOQNSNVPX RXTVUTVQVNULTK
JZLKRX MKRV XKRX LKXK NLWL
G[IOLORW KORX [FRX
I[XIXJYJYIXHVHTJSLROQUPYO[ UITKSORUQXPZN\L\K[KZLZL[
I[XIXJYJYIXHVHTJSLROQUPYO[ UITKSORUQXPZN\L\K[KZLZL[ QNOONQNSOUQVSVUUVSVQUOSNQN
H\ZRYTWUVUTTSSQPPONNMNKOJQJRKTMUNUPTQSSPTOVNWNYOZQZR
JZXKLX OKPLPNOOMOLNLLMKOKSLVLXK UTTUTWUXWXXWXUWTUT
J[YPXPXQYQYPXOWOVPUTTVSWQXOXMWLVLTMSORRPSNSLRKPKOLONPQUWWXXXYW OXMVMTOR ONPPVWWX
J[UPSOQOPQPRQTSTUS UOUSVTXTYRYQXNVLSKRKOLMNLQLRMUOWRXSXVW
KZQHQ\ THT\ WLVLVMWMWLUKPKNLNNOPVSWT NNOOVRWTWVVWTXQXOWNVNUOUOVNV
KYPKP[ TKT[ MQWQ MUWU
LXTLSLSMTMTLSKQKPLPNQPTRUS PNQOTQUSUUSW QPOROTPVSXTY OTPUSWTYT[S\Q\P[PZQZQ[P[
LXRKQLRMSLRK RMRQ RQQSRVSSRQ RVR\ POONNOOPPOTOUNVOUPTO
LXRMSLRKQLRMRQQRSURV RQSRQURVRZQ[R\S[RZ POONNOOPPOTOUNVOUPTO PXOWNXOYPXTXUWVXUYTX
LYVKVX NKVK QQVQ NXVX
H\QKNLLNKQKSLVNXQYSYVXXVYSYQXNVLSKQK RQQRRSSRRQ
LYQKPLPMQN TKULUMTN RNPOOQORPTRUSUUTVRVQUOSNRN RURY SUSY OWVW
LYRKPLONOOPQRRSRUQVOVNULSKRK RRRX SRSX OUVU
H\QKNLLNKQKSLVNXQYSYVXXVYSYQXNVLSKQK RKRY KRYR
JYRRPQOQMRLTLUMWOXPXRWSUSTRR WMRR RMWMWR RMVNWR
JZLLMKOKQLRNRPQRPSNT OKPLQNQQPS VKUX WKTX NTXT
JYNKNU OKNR NROPQOSOUPVQVTTVTXUYVYWX SOUQUTTV LKOK
LYONRKRQ VNSKSQ RQPROTOUPWRXSXUWVUVTURSQ RTRUSUSTRT
JZRKRY MKMPNRPSTSVRWPWK LMMKNM QMRKSM VMWKXM OVUV
JYNKNX OKOX LKSKVLWNWOVQSROR SKULVNVOUQSR LXVXVUUX
LYWKTKQLONNQNSOVQXTYWY WKTLRNQQQSRVTXWY
JZRRPQOQMRLTLUMWOXPXRWSUSTRR SLQQ WMRR XQSS
KYPMTW TMPW MPWT WPMT
J[OUMULVLXMYOYPXPVNTMRMONMOLQKTKVLWMXOXRWTUVUXVYXYYXYVXUVU NMPLULWM
J[OOMOLNLLMKOKPLPNNPMRMUNWOXQYTYVXWWXUXRWPUNULVKXKYLYNXOVO NWPXUXWW
F^KHK\ LHL\ XHX\ YHY\ HH\H H\O\ U\\\
H]KHRQJ\ JHQQ JHYHZMXH K[X[ J\Y\ZWX\
KYVBTDRGPKOPOTPYR]T`Vb TDRHQKPPPTQYR\T`
KYNBPDRGTKUPUTTYR]P`Nb PDRHSKTPTTSYR\P`
KYOBOb PBPb OBVB ObVb
KYTBTb UBUb NBUB NbUb
JYTBQEPHPJQMSOSPORSTSUQWPZP\Q_Tb RDQGQKRN RVQYQ]R`
KZPBSETHTJSMQOQPURQTQUSWTZT\S_Pb RDSGSKRN RVSYS]R`
KYU@RCPFOIOLPOSVTYT\S_Ra RCQEPHPKQNTUUXU[T^RaOd
KYO@RCTFUIULTOQVPYP\Q_Ra RCSETHTKSNPUOXO[P^RaUd
AXCRGRR` GSRa FSRb X:Rb
F^[CZD[E\D\C[BYBWCUETGSJRNPZO^N` VDUFTJRVQZP]O_MaKbIbHaH`I_J`Ia
H\RFK[ RFY[ RIX[ MUVU I[O[ U[[[
G]LFL[ MFM[ IFUFXGYHZJZLYNXOUP UFWGXHYJYLXNWOUP MPUPXQYRZTZWYYXZU[I[ UPWQXRYTYWXYWZU[
G\XIYLYFXIVGSFQFNGLIKKJNJSKVLXNZQ[S[VZXXYV QFOGMILKKNKSLVMXOZQ[
G]LFL[ MFM[ IFSFVGXIYKZNZSYVXXVZS[I[ SFUGWIXKYNYSXVWXUZS[
G\LFL[ MFM[ SLST IFYFYLXF MPSP I[Y[YUX[
G[LFL[ MFM[ SLST IFYFYLXF MPSP I[P[
G^XIYLYFXIVGSFQFNGLIKKJNJSKVLXNZQ[S[VZXX QFOGMILKKNKSLVMXOZQ[ XSX[ YSY[ US\S
F^KFK[ LFL[ XFX[ YFY[ HFOF UF\F LPXP H[O[ U[\[
MXRFR[ SFS[ OFVF O[V[
KZUFUWTZR[P[NZMXMVNUOVNW TFTWSZR[ QFXF
F\KFK[ LFL[ YFLS QOY[ POX[ HFOF UF[F H[O[ U[[[
I[NFN[ OFO[ KFRF K[Z[ZUY[
F_KFK[ LFRX KFR[ YFR[ YFY[ ZFZ[ HFLF YF]F H[N[ V[][
G^LFL[ MFYY MHY[ YFY[ IFMF VF\F I[O[
G]QFNGLIKKJOJRKVLXNZQ[S[VZXXYVZRZOYKXIVGSFQF QFOGMILKKOKRLVMXOZQ[ S[UZWXXVYRYOXKWIUGSF
G]LFL[ MFM[ IFUFXGYHZJZMYOXPUQMQ UFWGXHYJYMXOWPUQ I[P[
G]QFNGLIKKJOJRKVLXNZQ[S[VZXXYVZRZOYKXIVGSFQF QFOGMILKKOKRLVMXOZQ[ S[UZWXXVYRYOXKWIUGSF NYNXOVQURUTVUXV_W`Y`Z^Z] UXV\W^X_Y_Z^
G]LFL[ MFM[ IFUFXGYHZJZLYNXOUPMP UFWGXHYJYLXNWOUP I[P[ RPTQURXYYZZZ[Y TQUSWZX[Z[[Y[X
H\XIYFYLXIVGSFPFMGKIKKLMMNOOUQWRYT KKMMONUPWQXRYTYXWZT[Q[NZLXKUK[LX
I\RFR[ SFS[ LFKLKFZFZLYF O[V[
F^KFKULXNZQ[S[VZXXYUYF LFLUMXOZQ[ HFOF VF\F
H\KFR[ LFRX YFR[ IFOF UF[F
F^JFN[ KFNV RFN[ RFV[ SFVV ZFV[ GFNF WF]F
H\KFX[ LFY[ YFK[ IFOF UF[F I[O[ U[[[
H]KFRQR[ LFSQS[ ZFSQ IFOF VF\F O[V[
H\XFK[ YFL[ LFKLKFYF K[Y[YUX[
I[NFN[ OFO[ KFZFZLYF K[R[
H\RFJ[ RFZ[ RIY[ KZYZ J[Z[
G]QFNGLIKKJOJRKVLXNZQ[S[VZXXYVZRZOYKXIVGSFQF QFOGMILKKOKRLVMXOZQ[ S[UZWXXVYRYOXKWIUGSF OMOT UMUT OPUP OQUQ
H\RFK[ RFY[ RIX[ I[O[ U[[[
G]KEJJ ZEYJ ONNS VNUS KWJ\ ZWY\ KGYG KHYH OPUP OQUQ KYYY KZYZ
F^KFK[ LFL[ XFX[ YFY[ HF\F H[O[ U[\[
H]KFRPJ[ JFQP JFYFZLXF KZXZ J[Y[ZUX[
I\KKKILGMFOFPGQIRMR[ KIMGOGQI ZKZIYGXFVFUGTISMS[ ZIXGVGTI O[V[
H]RFR[ SFS[ PKMLLMKOKRLTMUPVUVXUYTZRZOYMXLUKPK PKNLMMLOLRMTNUPV UVWUXTYRYOXMWLUK OFVF O[V[
G^RFR[ SFS[ IMJLLMMQNSOTQU JLKMLQMSNTQUTUWTXSYQZM[L TUVTWSXQYM[L\M OFVF O[V[
G]JXK[O[MWKSJPJLKIMGPFTFWGYIZLZPYSWWU[Y[ZX MWLTKPKLLINGPF TFVGXIYLYPXTWW KZNZ VZYZ
H\UFH[ UFV[ THU[ LUUU F[L[ R[X[
F^OFI[ PFJ[ LFWFZG[I[KZNYOVP WFYGZIZKYNXOVP MPVPXQYSYUXXVZR[F[ VPWQXSXUWXUZR[
H]ZH[H\F[L[JZHYGWFTFQGOIMLLOKSKVLYMZP[S[UZWXXV TFRGPINLMOLSLVMYNZP[
F]OFI[ PFJ[ LFUFXGYHZKZOYSWWUYSZO[F[ UFWGXHYKYOXSVWTYRZO[
F]OFI[ PFJ[ TLRT LF[FZLZF MPSP F[U[WVT[
F\OFI[ PFJ[ TLRT LF[FZLZF MPSP F[M[
H^ZH[H\F[L[JZHYGWFTFQGOIMLLOKSKVLYMZP[R[UZWXYT TFRGPINLMOLSLVMYNZP[ R[TZVXXT UT\T
E_NFH[ OFI[ [FU[ \FV[ KFRF XF_F LPXP E[L[ R[Y[
LYUFO[ VFP[ RFYF L[S[
parallel_for_body
range.start
range.end
parallel_for
nstripes
ms-concurrency
void __cdecl cv::cpu_baseline::`anonymous-namespace'::ColumnSum<int,unsigned char>::operator ()(const unsigned char **,unsigned char *,int,int,int)
cv::cpu_baseline::`anonymous-namespace'::ColumnSum<int,unsigned char>::operator ()
sumCount == ksize-1
void __cdecl cv::cpu_baseline::`anonymous-namespace'::ColumnSum<unsigned short,unsigned char>::operator ()(const unsigned char **,unsigned char *,int,int,int)
cv::cpu_baseline::`anonymous-namespace'::ColumnSum<unsigned short,unsigned char>::operator ()
void __cdecl cv::cpu_baseline::`anonymous-namespace'::ColumnSum<int,short>::operator ()(const unsigned char **,unsigned char *,int,int,int)
cv::cpu_baseline::`anonymous-namespace'::ColumnSum<int,short>::operator ()
void __cdecl cv::cpu_baseline::`anonymous-namespace'::ColumnSum<int,unsigned short>::operator ()(const unsigned char **,unsigned char *,int,int,int)
cv::cpu_baseline::`anonymous-namespace'::ColumnSum<int,unsigned short>::operator ()
void __cdecl cv::cpu_baseline::`anonymous-namespace'::ColumnSum<int,int>::operator ()(const unsigned char **,unsigned char *,int,int,int)
cv::cpu_baseline::`anonymous-namespace'::ColumnSum<int,int>::operator ()
void __cdecl cv::cpu_baseline::`anonymous-namespace'::ColumnSum<int,float>::operator ()(const unsigned char **,unsigned char *,int,int,int)
cv::cpu_baseline::`anonymous-namespace'::ColumnSum<int,float>::operator ()
struct cv::Ptr<class cv::BaseRowFilter> __cdecl cv::cpu_baseline::getRowSumFilter(int,int,int,int)
cv::cpu_baseline::getRowSumFilter
CV_MAT_CN(sumType) == CV_MAT_CN(srcType)
Unsupported combination of source format (=%d), and buffer format (=%d)
struct cv::Ptr<class cv::BaseColumnFilter> __cdecl cv::cpu_baseline::getColumnSumFilter(int,int,int,int,double)
cv::cpu_baseline::getColumnSumFilter
CV_MAT_CN(sumType) == CV_MAT_CN(dstType)
Unsupported combination of sum format (=%d), and destination format (=%d)
struct cv::Ptr<class cv::FilterEngine> __cdecl cv::cpu_baseline::createBoxFilter(int,int,class cv::Size_<int>,class cv::Point_<int>,bool,int)
cv::cpu_baseline::getSqrRowSumFilter
struct cv::Ptr<class cv::BaseColumnFilter> __cdecl cv::getColumnSumFilter(int,int,int,int,double)
struct cv::Ptr<class cv::FilterEngine> __cdecl cv::createBoxFilter(int,int,class cv::Size_<int>,class cv::Point_<int>,bool,int)
void __cdecl cv::boxFilter(const class cv::_InputArray &,const class cv::_OutputArray &,int,class cv::Size_<int>,class cv::Point_<int>,bool,int)
struct cv::Ptr<class cv::BaseRowFilter> __cdecl cv::getSqrRowSumFilter(int,int,int,int)
void __cdecl cv::sqrBoxFilter(const class cv::_InputArray &,const class cv::_OutputArray &,int,class cv::Size_<int>,class cv::Point_<int>,bool,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::SqrRowSum<double,double>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::SqrRowSum<float,double>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::SqrRowSum<short,double>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::SqrRowSum<unsigned short,double>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::SqrRowSum<unsigned char,double>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::SqrRowSum<unsigned char,int>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::ColumnSum<double,double>::operator ()(const unsigned char **,unsigned char *,int,int,int)
cv::cpu_baseline::`anonymous-namespace'::ColumnSum<double,double>::operator ()
void __cdecl cv::cpu_baseline::`anonymous-namespace'::ColumnSum<int,double>::operator ()(const unsigned char **,unsigned char *,int,int,int)
cv::cpu_baseline::`anonymous-namespace'::ColumnSum<int,double>::operator ()
void __cdecl cv::cpu_baseline::`anonymous-namespace'::ColumnSum<double,float>::operator ()(const unsigned char **,unsigned char *,int,int,int)
cv::cpu_baseline::`anonymous-namespace'::ColumnSum<double,float>::operator ()
void __cdecl cv::cpu_baseline::`anonymous-namespace'::ColumnSum<double,short>::operator ()(const unsigned char **,unsigned char *,int,int,int)
cv::cpu_baseline::`anonymous-namespace'::ColumnSum<double,short>::operator ()
void __cdecl cv::cpu_baseline::`anonymous-namespace'::ColumnSum<double,unsigned short>::operator ()(const unsigned char **,unsigned char *,int,int,int)
cv::cpu_baseline::`anonymous-namespace'::ColumnSum<double,unsigned short>::operator ()
void __cdecl cv::cpu_baseline::`anonymous-namespace'::ColumnSum<double,unsigned char>::operator ()(const unsigned char **,unsigned char *,int,int,int)
cv::cpu_baseline::`anonymous-namespace'::ColumnSum<double,unsigned char>::operator ()
void __cdecl cv::cpu_baseline::`anonymous-namespace'::RowSum<double,double>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::RowSum<float,double>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::RowSum<short,double>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::RowSum<int,int>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::RowSum<short,int>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::RowSum<unsigned short,double>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::RowSum<unsigned short,int>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::RowSum<unsigned char,double>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::RowSum<unsigned char,unsigned short>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::`anonymous-namespace'::RowSum<unsigned char,int>::operator ()(const unsigned char *,unsigned char *,int,int)
int __cdecl cv::cpu_baseline::FilterEngine__start(class cv::FilterEngine &,const class cv::Size_<int> &,const class cv::Size_<int> &,const class cv::Point_<int> &)
cv::cpu_baseline::FilterEngine__start
this_.roi.x >= 0 && this_.roi.y >= 0 && this_.roi.width >= 0 && this_.roi.height >= 0 && this_.roi.x + this_.roi.width <= this_.wholeSize.width && this_.roi.y + this_.roi.height <= this_.wholeSize.height
constVal != NULL
int __cdecl cv::cpu_baseline::FilterEngine__proceed(class cv::FilterEngine &,const unsigned char *,int,int,unsigned char *,int)
cv::cpu_baseline::FilterEngine__proceed
src && dst && count > 0
srcY >= this_.startY
this_.dstY <= this_.roi.height
void __cdecl cv::cpu_baseline::FilterEngine__apply(class cv::FilterEngine &,const class cv::Mat &,class cv::Mat &,const class cv::Size_<int> &,const class cv::Point_<int> &)
int __cdecl cv::cpu_baseline::RowVec_8u32s::operator ()(const unsigned char *,unsigned char *,int,int) const
int __cdecl cv::cpu_baseline::SymmRowSmallVec_8u32s::operator ()(const unsigned char *,unsigned char *,int,int) const
cv::cpu_baseline::SymmColumnVec_32s8u::SymmColumnVec_32s8u
(symmetryType & (KERNEL_SYMMETRICAL | KERNEL_ASYMMETRICAL)) != 0
int __cdecl cv::cpu_baseline::SymmColumnVec_32s8u::operator ()(const unsigned char **,unsigned char *,int) const
cv::cpu_baseline::SymmColumnSmallVec_32s16s::SymmColumnSmallVec_32s16s
int __cdecl cv::cpu_baseline::SymmColumnSmallVec_32s16s::operator ()(const unsigned char **,unsigned char *,int) const
int __cdecl cv::cpu_baseline::RowVec_16s32f::operator ()(const unsigned char *,unsigned char *,int,int) const
cv::cpu_baseline::SymmColumnVec_32f16s::SymmColumnVec_32f16s
int __cdecl cv::cpu_baseline::SymmColumnVec_32f16s::operator ()(const unsigned char **,unsigned char *,int) const
int __cdecl cv::cpu_baseline::RowVec_32f::operator ()(const unsigned char *,unsigned char *,int,int) const
int __cdecl cv::cpu_baseline::SymmRowSmallVec_32f::operator ()(const unsigned char *,unsigned char *,int,int) const
cv::cpu_baseline::SymmColumnVec_32f::SymmColumnVec_32f
int __cdecl cv::cpu_baseline::SymmColumnVec_32f::operator ()(const unsigned char **,unsigned char *,int) const
cv::cpu_baseline::SymmColumnSmallVec_32f::SymmColumnSmallVec_32f
int __cdecl cv::cpu_baseline::SymmColumnSmallVec_32f::operator ()(const unsigned char **,unsigned char *,int) const
struct cv::Ptr<class cv::BaseRowFilter> __cdecl cv::cpu_baseline::getLinearRowFilter(int,int,const class cv::Mat &,int,int)
cv::cpu_baseline::getLinearRowFilter
cn == CV_MAT_CN(bufType) && ddepth >= std::max(sdepth, CV_32S) && kernel.type() == ddepth
struct cv::Ptr<class cv::BaseColumnFilter> __cdecl cv::cpu_baseline::getLinearColumnFilter(int,int,const class cv::Mat &,int,int,double,int)
cv::cpu_baseline::getLinearColumnFilter
cn == CV_MAT_CN(bufType) && sdepth >= std::max(ddepth, CV_32S) && kernel.type() == sdepth
Unsupported combination of buffer format (=%d), and destination format (=%d)
cv::FilterEngine::init
columnBorderType != BORDER_WRAP
rowFilter && columnFilter
bufType == srcType
0 <= anchor.x && anchor.x < ksize.width && 0 <= anchor.y && anchor.y < ksize.height
int __cdecl cv::FilterEngine::start(const class cv::Size_<int> &,const class cv::Size_<int> &,const class cv::Point_<int> &)
int __cdecl cv::FilterEngine::proceed(const unsigned char *,int,int,unsigned char *,int)
cv::FilterEngine::proceed
wholeSize.width > 0 && wholeSize.height > 0
void __cdecl cv::FilterEngine::apply(const class cv::Mat &,class cv::Mat &,const class cv::Size_<int> &,const class cv::Point_<int> &)
src.type()
srcType
dst.type()
dstType
cv::getKernelType
_kernel.channels() == 1
struct cv::Ptr<class cv::BaseRowFilter> __cdecl cv::getLinearRowFilter(int,int,const class cv::_InputArray &,int,int)
struct cv::Ptr<class cv::BaseColumnFilter> __cdecl cv::getLinearColumnFilter(int,int,const class cv::_InputArray &,int,int,double,int)
cv::createSeparableLinearFilter
cn == CV_MAT_CN(_dstType)
cv::preprocess2DKernel
ktype == CV_8U || ktype == CV_32S || ktype == CV_32F || ktype == CV_64F
void __cdecl cv::sepFilter2D(const class cv::_InputArray &,const class cv::_OutputArray &,int,const class cv::_InputArray &,const class cv::_InputArray &,class cv::Point_<int>,double,int)
cv::sepFilter2D
kernelX.type() == kernelY.type() && (kernelX.cols == 1 || kernelX.rows == 1) && (kernelY.cols == 1 || kernelY.rows == 1)
void __cdecl cv::cpu_baseline::SymmColumnFilter<struct cv::cpu_baseline::Cast<double,double>,struct cv::cpu_baseline::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::ColumnFilter<struct cv::cpu_baseline::Cast<float,float>,struct cv::cpu_baseline::SymmColumnVec_32f>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::SymmColumnFilter<struct cv::cpu_baseline::Cast<float,float>,struct cv::cpu_baseline::SymmColumnVec_32f>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::SymmColumnFilter<struct cv::cpu_baseline::Cast<double,short>,struct cv::cpu_baseline::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::ColumnFilter<struct cv::cpu_baseline::Cast<float,short>,struct cv::cpu_baseline::SymmColumnVec_32f16s>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::SymmColumnFilter<struct cv::cpu_baseline::Cast<float,short>,struct cv::cpu_baseline::SymmColumnVec_32f16s>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::ColumnFilter<struct cv::cpu_baseline::Cast<int,short>,struct cv::cpu_baseline::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::SymmColumnFilter<struct cv::cpu_baseline::Cast<int,short>,struct cv::cpu_baseline::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::SymmColumnFilter<struct cv::cpu_baseline::Cast<double,unsigned short>,struct cv::cpu_baseline::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::SymmColumnFilter<struct cv::cpu_baseline::Cast<float,unsigned short>,struct cv::cpu_baseline::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::SymmColumnFilter<struct cv::cpu_baseline::Cast<double,unsigned char>,struct cv::cpu_baseline::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::SymmColumnFilter<struct cv::cpu_baseline::Cast<float,unsigned char>,struct cv::cpu_baseline::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::ColumnFilter<struct cv::cpu_baseline::Cast<float,float>,struct cv::cpu_baseline::SymmColumnSmallVec_32f>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::SymmColumnFilter<struct cv::cpu_baseline::Cast<float,float>,struct cv::cpu_baseline::SymmColumnSmallVec_32f>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::SymmColumnSmallFilter<struct cv::cpu_baseline::Cast<float,float>,struct cv::cpu_baseline::SymmColumnSmallVec_32f>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::ColumnFilter<struct cv::cpu_baseline::Cast<int,short>,struct cv::cpu_baseline::SymmColumnSmallVec_32s16s>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::SymmColumnFilter<struct cv::cpu_baseline::Cast<int,short>,struct cv::cpu_baseline::SymmColumnSmallVec_32s16s>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::SymmColumnSmallFilter<struct cv::cpu_baseline::Cast<int,short>,struct cv::cpu_baseline::SymmColumnSmallVec_32s16s>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::ColumnFilter<struct cv::cpu_baseline::FixedPtCastEx<int,unsigned char>,struct cv::cpu_baseline::SymmColumnVec_32s8u>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::SymmColumnFilter<struct cv::cpu_baseline::FixedPtCastEx<int,unsigned char>,struct cv::cpu_baseline::SymmColumnVec_32s8u>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::SymmColumnSmallFilter<struct cv::cpu_baseline::FixedPtCastEx<int,unsigned char>,struct cv::cpu_baseline::SymmColumnVec_32s8u>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::ColumnFilter<struct cv::cpu_baseline::Cast<double,double>,struct cv::cpu_baseline::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::ColumnFilter<struct cv::cpu_baseline::Cast<float,float>,struct cv::cpu_baseline::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::ColumnFilter<struct cv::cpu_baseline::Cast<double,short>,struct cv::cpu_baseline::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::ColumnFilter<struct cv::cpu_baseline::Cast<float,short>,struct cv::cpu_baseline::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::ColumnFilter<struct cv::cpu_baseline::Cast<double,unsigned short>,struct cv::cpu_baseline::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::ColumnFilter<struct cv::cpu_baseline::Cast<float,unsigned short>,struct cv::cpu_baseline::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::ColumnFilter<struct cv::cpu_baseline::Cast<double,unsigned char>,struct cv::cpu_baseline::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::ColumnFilter<struct cv::cpu_baseline::Cast<float,unsigned char>,struct cv::cpu_baseline::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::ColumnFilter<struct cv::cpu_baseline::FixedPtCastEx<int,unsigned char>,struct cv::cpu_baseline::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::cpu_baseline::RowFilter<double,double,struct cv::cpu_baseline::RowNoVec>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::RowFilter<float,double,struct cv::cpu_baseline::RowNoVec>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::RowFilter<float,float,struct cv::cpu_baseline::RowVec_32f>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::RowFilter<short,double,struct cv::cpu_baseline::RowNoVec>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::RowFilter<short,float,struct cv::cpu_baseline::RowVec_16s32f>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::RowFilter<unsigned short,double,struct cv::cpu_baseline::RowNoVec>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::RowFilter<unsigned short,float,struct cv::cpu_baseline::RowNoVec>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::RowFilter<unsigned char,double,struct cv::cpu_baseline::RowNoVec>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::RowFilter<unsigned char,float,struct cv::cpu_baseline::RowNoVec>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::RowFilter<unsigned char,int,struct cv::cpu_baseline::RowVec_8u32s>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::RowFilter<float,float,struct cv::cpu_baseline::SymmRowSmallVec_32f>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::SymmRowSmallFilter<float,float,struct cv::cpu_baseline::SymmRowSmallVec_32f>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::RowFilter<unsigned char,int,struct cv::cpu_baseline::SymmRowSmallVec_8u32s>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::cpu_baseline::SymmRowSmallFilter<unsigned char,int,struct cv::cpu_baseline::SymmRowSmallVec_8u32s>::operator ()(const unsigned char *,unsigned char *,int,int)
cv::cpu_baseline::SymmColumnFilter<struct cv::cpu_baseline::Cast<float,float>,struct cv::cpu_baseline::SymmColumnVec_32f>::SymmColumnFilter
cv::cpu_baseline::SymmColumnFilter<struct cv::cpu_baseline::Cast<float,short>,struct cv::cpu_baseline::SymmColumnVec_32f16s>::SymmColumnFilter
cv::cpu_baseline::SymmColumnFilter<struct cv::cpu_baseline::Cast<int,short>,struct cv::cpu_baseline::ColumnNoVec>::SymmColumnFilter
cv::cpu_baseline::SymmColumnSmallFilter<struct cv::cpu_baseline::Cast<float,float>,struct cv::cpu_baseline::SymmColumnSmallVec_32f>::SymmColumnSmallFilter
this->ksize == 3
cv::cpu_baseline::SymmColumnSmallFilter<struct cv::cpu_baseline::Cast<int,short>,struct cv::cpu_baseline::SymmColumnSmallVec_32s16s>::SymmColumnSmallFilter
cv::cpu_baseline::SymmColumnFilter<struct cv::cpu_baseline::FixedPtCastEx<int,unsigned char>,struct cv::cpu_baseline::SymmColumnVec_32s8u>::SymmColumnFilter
cv::cpu_baseline::SymmColumnSmallFilter<struct cv::cpu_baseline::FixedPtCastEx<int,unsigned char>,struct cv::cpu_baseline::SymmColumnVec_32s8u>::SymmColumnSmallFilter
cv::cpu_baseline::ColumnFilter<struct cv::cpu_baseline::Cast<double,double>,struct cv::cpu_baseline::ColumnNoVec>::ColumnFilter
kernel.type() == DataType<ST>::type && (kernel.rows == 1 || kernel.cols == 1)
cv::cpu_baseline::ColumnFilter<struct cv::cpu_baseline::Cast<float,float>,struct cv::cpu_baseline::ColumnNoVec>::ColumnFilter
cv::cpu_baseline::ColumnFilter<struct cv::cpu_baseline::Cast<double,short>,struct cv::cpu_baseline::ColumnNoVec>::ColumnFilter
cv::cpu_baseline::ColumnFilter<struct cv::cpu_baseline::Cast<float,short>,struct cv::cpu_baseline::ColumnNoVec>::ColumnFilter
cv::cpu_baseline::ColumnFilter<struct cv::cpu_baseline::Cast<double,unsigned short>,struct cv::cpu_baseline::ColumnNoVec>::ColumnFilter
cv::cpu_baseline::ColumnFilter<struct cv::cpu_baseline::Cast<float,unsigned short>,struct cv::cpu_baseline::ColumnNoVec>::ColumnFilter
cv::cpu_baseline::ColumnFilter<struct cv::cpu_baseline::Cast<double,unsigned char>,struct cv::cpu_baseline::ColumnNoVec>::ColumnFilter
cv::cpu_baseline::ColumnFilter<struct cv::cpu_baseline::Cast<float,unsigned char>,struct cv::cpu_baseline::ColumnNoVec>::ColumnFilter
cv::cpu_baseline::ColumnFilter<struct cv::cpu_baseline::FixedPtCastEx<int,unsigned char>,struct cv::cpu_baseline::ColumnNoVec>::ColumnFilter
cv::cpu_baseline::RowFilter<double,double,struct cv::cpu_baseline::RowNoVec>::RowFilter
kernel.type() == DataType<DT>::type && (kernel.rows == 1 || kernel.cols == 1)
cv::cpu_baseline::RowFilter<float,double,struct cv::cpu_baseline::RowNoVec>::RowFilter
cv::cpu_baseline::RowFilter<float,float,struct cv::cpu_baseline::RowVec_32f>::RowFilter
cv::cpu_baseline::RowFilter<short,double,struct cv::cpu_baseline::RowNoVec>::RowFilter
cv::cpu_baseline::RowFilter<short,float,struct cv::cpu_baseline::RowVec_16s32f>::RowFilter
cv::cpu_baseline::RowFilter<unsigned short,double,struct cv::cpu_baseline::RowNoVec>::RowFilter
cv::cpu_baseline::RowFilter<unsigned short,float,struct cv::cpu_baseline::RowNoVec>::RowFilter
cv::cpu_baseline::RowFilter<unsigned char,double,struct cv::cpu_baseline::RowNoVec>::RowFilter
cv::cpu_baseline::RowFilter<unsigned char,float,struct cv::cpu_baseline::RowNoVec>::RowFilter
cv::cpu_baseline::RowFilter<unsigned char,int,struct cv::cpu_baseline::RowVec_8u32s>::RowFilter
cv::cpu_baseline::SymmRowSmallFilter<float,float,struct cv::cpu_baseline::SymmRowSmallVec_32f>::SymmRowSmallFilter
(symmetryType & (KERNEL_SYMMETRICAL | KERNEL_ASYMMETRICAL)) != 0 && this->ksize <= 5
cv::cpu_baseline::SymmRowSmallFilter<unsigned char,int,struct cv::cpu_baseline::SymmRowSmallVec_8u32s>::SymmRowSmallFilter
cv::cpu_baseline::ColumnFilter<struct cv::cpu_baseline::Cast<float,float>,struct cv::cpu_baseline::SymmColumnVec_32f>::ColumnFilter
cv::cpu_baseline::ColumnFilter<struct cv::cpu_baseline::Cast<float,short>,struct cv::cpu_baseline::SymmColumnVec_32f16s>::ColumnFilter
cv::cpu_baseline::ColumnFilter<struct cv::cpu_baseline::Cast<int,short>,struct cv::cpu_baseline::ColumnNoVec>::ColumnFilter
cv::cpu_baseline::SymmColumnFilter<struct cv::cpu_baseline::Cast<float,float>,struct cv::cpu_baseline::SymmColumnSmallVec_32f>::SymmColumnFilter
cv::cpu_baseline::SymmColumnFilter<struct cv::cpu_baseline::Cast<int,short>,struct cv::cpu_baseline::SymmColumnSmallVec_32s16s>::SymmColumnFilter
cv::cpu_baseline::ColumnFilter<struct cv::cpu_baseline::FixedPtCastEx<int,unsigned char>,struct cv::cpu_baseline::SymmColumnVec_32s8u>::ColumnFilter
cv::cpu_baseline::RowFilter<float,float,struct cv::cpu_baseline::SymmRowSmallVec_32f>::RowFilter
cv::cpu_baseline::RowFilter<unsigned char,int,struct cv::cpu_baseline::SymmRowSmallVec_8u32s>::RowFilter
cv::cpu_baseline::ColumnFilter<struct cv::cpu_baseline::Cast<float,float>,struct cv::cpu_baseline::SymmColumnSmallVec_32f>::ColumnFilter
cv::cpu_baseline::ColumnFilter<struct cv::cpu_baseline::Cast<int,short>,struct cv::cpu_baseline::SymmColumnSmallVec_32s16s>::ColumnFilter
?{Q}<
?8bunz8
?'*6
?)TH
?%"U
]{f\f
?]%>
?'Za
?@En[vP
?qBJ
3 FB
l@6 
?-hk
Ok!\
?7{KV\nU
?*>^m
OZQ%
EiUL
?lZE
?d!\vY
-)4d
?:kP<
?UUUUUU
?kxG2)
?f`Y4
?TY,>5
?QY^&
?&l|
?U)#
? 5WOo
?D=$% B
?$<q
@p^_
?39HoKC
g\fG\v
?ysB
?~yX
?\r'u_
?$G4
?[/k
?30]
3?tr
&P?z
[&-*
G\n&s
?7zQ6$
void __cdecl cv::opt_SSE4_1::GaussianBlurFixedPoint(const class cv::Mat &,class cv::Mat &,const unsigned short *,int,const unsigned short *,int,int)
cv::opt_SSE4_1::GaussianBlurFixedPoint
__cdecl cv::Algorithm::Algorithm(void)
__cdecl cv::Algorithm::~Algorithm(void)
void __cdecl cv::Algorithm::save(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &) const
class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl cv::Algorithm::getDefaultName(void) const
my_object
void __cdecl cv::Algorithm::writeFormat(class cv::FileStorage &) const
int (__cdecl *__cdecl cv::getCountNonZeroTab(int))(const unsigned char *,int)
int __cdecl cv::countNonZero(const class cv::_InputArray &)
cv::countNonZero
cn == 1
cv::ximgproc::FastGlobalSmootherFilterImpl::init
!guide.empty() && _lambda >= 0 && _sigmaColor >= 0 && _num_iter >=1
guide.depth() == CV_8U && (guide.channels() == 1 || guide.channels() == 3)
cv::ximgproc::FastGlobalSmootherFilterImpl::filter
!src.empty() && (src.depth() == CV_8U || src.depth() == CV_16S || src.depth() == CV_32F) && src.channels()<=4
void (__cdecl *__cdecl cv::getCvtScaleAbsFunc(int))(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,class cv::Size_<int>,void *)
void (__cdecl *__cdecl cv::getConvertScaleFunc(int,int))(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,class cv::Size_<int>,void *)
void __cdecl cv::convertScaleAbs(const class cv::_InputArray &,const class cv::_OutputArray &,double,double)
cv::convertScaleAbs
void __cdecl cv::cpu_baseline::gemmImpl(class cv::Mat,class cv::Mat,double,class cv::Mat,double,class cv::Mat,int)
cv::cpu_baseline::gemmImpl
type == CV_64FC2
void __cdecl cv::cpu_baseline::gemm32f(const float *,unsigned __int64,const float *,unsigned __int64,float,const float *,unsigned __int64,float,float *,unsigned __int64,int,int,int,int)
void __cdecl cv::cpu_baseline::gemm64f(const double *,unsigned __int64,const double *,unsigned __int64,double,const double *,unsigned __int64,double,double *,unsigned __int64,int,int,int,int)
void __cdecl cv::cpu_baseline::gemm32fc(const float *,unsigned __int64,const float *,unsigned __int64,float,const float *,unsigned __int64,float,float *,unsigned __int64,int,int,int,int)
void __cdecl cv::cpu_baseline::gemm64fc(const double *,unsigned __int64,const double *,unsigned __int64,double,const double *,unsigned __int64,double,double *,unsigned __int64,int,int,int,int)
0 && "Not supported"
cv::cpu_baseline::getScaleAddFunc
cv::cpu_baseline::getMulTransposedFunc
func && "Not supported"
void __cdecl cv::hal::gemm32f(const float *,unsigned __int64,const float *,unsigned __int64,float,const float *,unsigned __int64,float,float *,unsigned __int64,int,int,int,int)
void __cdecl cv::hal::gemm64f(const double *,unsigned __int64,const double *,unsigned __int64,double,const double *,unsigned __int64,double,double *,unsigned __int64,int,int,int,int)
void __cdecl cv::hal::gemm32fc(const float *,unsigned __int64,const float *,unsigned __int64,float,const float *,unsigned __int64,float,float *,unsigned __int64,int,int,int,int)
void __cdecl cv::hal::gemm64fc(const double *,unsigned __int64,const double *,unsigned __int64,double,const double *,unsigned __int64,double,double *,unsigned __int64,int,int,int,int)
cv::gemm
type == B.type()
(type == (((5) & ((1 << 3) - 1)) + (((1)-1) << 3)) || type == (((6) & ((1 << 3) - 1)) + (((1)-1) << 3)) || type == (((5) & ((1 << 3) - 1)) + (((2)-1) << 3)) || type == (((6) & ((1 << 3) - 1)) + (((2)-1) << 3)))
a_size.width == len
a_size.height == len
C.type() == type
(((flags&GEMM_3_T) == 0 && C.rows == d_size.height && C.cols == d_size.width) || ((flags&GEMM_3_T) != 0 && C.rows == d_size.width && C.cols == d_size.height))
void (__cdecl *__cdecl cv::getScaleAddFunc(int))(const unsigned char *,const unsigned char *,unsigned char *,int,const void *)
void __cdecl cv::scaleAdd(const class cv::_InputArray &,double,const class cv::_InputArray &,const class cv::_OutputArray &)
cv::scaleAdd
type == _src2.type()
src1.size == src2.size
func
void __cdecl cv::mulTransposed(const class cv::_InputArray &,const class cv::_OutputArray &,bool,const class cv::_InputArray &,double,int)
cv::mulTransposed
src.channels() == 1
delta.channels() == 1
(delta.rows == src.rows || delta.rows == 1)
(delta.cols == src.cols || delta.cols == 1)
double __cdecl cv::invert(const class cv::_InputArray &,const class cv::_OutputArray &,int)
cv::invert
type == CV_32F || type == CV_64F
m == n
method == DECOMP_LU || method == DECOMP_CHOLESKY
bool __cdecl cv::solve(const class cv::_InputArray &,const class cv::_InputArray &,const class cv::_OutputArray &,int)
Unsupported method, see #DecompTypes
method
method == DECOMP_LU || method == DECOMP_SVD || method == DECOMP_EIG || method == DECOMP_CHOLESKY || method == DECOMP_QR
cv::solve
type == _src2.type() && (type == CV_32F || type == CV_64F)
(method != DECOMP_LU && method != DECOMP_CHOLESKY) || is_normal || src.rows == src.cols
The function can not solve under-determined linear systems
bool __cdecl cv::eigen(const class cv::_InputArray &,const class cv::_OutputArray &,const class cv::_OutputArray &)
cv::eigen
src.rows == src.cols
cv::_SVDcompute
void __cdecl cv::SVD::compute(const class cv::_InputArray &,const class cv::_OutputArray &,const class cv::_OutputArray &,const class cv::_OutputArray &,int)
cv::SVD::backSubst
w.type() == u.type() && u.type() == vt.type() && u.data && vt.data && w.data
u.cols >= nm && vt.rows >= nm && (w.size() == Size(nm, 1) || w.size() == Size(1, nm) || w.size() == Size(vt.rows, u.cols))
rhs.data == 0 || (rhs.type() == type && rhs.rows == m)
void __cdecl cv::hal::cpu_baseline::merge8u(const unsigned char **,unsigned char *,int,int)
void __cdecl cv::hal::cpu_baseline::merge16u(const unsigned short **,unsigned short *,int,int)
void __cdecl cv::hal::cpu_baseline::merge32s(const int **,int *,int,int)
void __cdecl cv::hal::cpu_baseline::merge64s(const __int64 **,__int64 *,int,int)
void __cdecl cv::hal::merge8u(const unsigned char **,unsigned char *,int,int)
void __cdecl cv::hal::merge16u(const unsigned short **,unsigned short *,int,int)
void __cdecl cv::hal::merge32s(const int **,int *,int,int)
void __cdecl cv::hal::merge64s(const __int64 **,__int64 *,int,int)
void __cdecl cv::merge(const class cv::Mat *,unsigned __int64,const class cv::_OutputArray &)
cv::merge
mv && n > 0
mv[i].size == mv[0].size && mv[i].depth() == depth
0 < cn && cn <= CV_CN_MAX
void __cdecl cv::merge(const class cv::_InputArray &,const class cv::_OutputArray &)
cv::hal::cpu_baseline::vecmerge_
void __cdecl cv::hal::cpu_baseline::split8u(const unsigned char *,unsigned char **,int,int)
void __cdecl cv::hal::cpu_baseline::split16u(const unsigned short *,unsigned short **,int,int)
void __cdecl cv::hal::cpu_baseline::split32s(const int *,int **,int,int)
void __cdecl cv::hal::cpu_baseline::split64s(const __int64 *,__int64 **,int,int)
void __cdecl cv::hal::split8u(const unsigned char *,unsigned char **,int,int)
void __cdecl cv::hal::split16u(const unsigned short *,unsigned short **,int,int)
void __cdecl cv::hal::split32s(const int *,int **,int,int)
void __cdecl cv::hal::split64s(const __int64 *,__int64 **,int,int)
void __cdecl cv::split(const class cv::Mat &,class cv::Mat *)
cv::split
void __cdecl cv::split(const class cv::_InputArray &,const class cv::_OutputArray &)
!_mv.fixedType() || _mv.empty() || _mv.type() == m.depth()
cv::hal::cpu_baseline::vecsplit_
?\fAVk
?gkM
?r95
?i\r_
?0#EG
?AT5h14
?qBJ
3 FB
l@6 
?-hk
Ok!\
?7{KV\nU
?*>^m
OZQ%
EiUL
?lZE
?d!\vY
-)4d
?:kP<
?UUUUUU
?kxG2)
?f`Y4
?TY,>5
?QY^&
?&l|
?U)#
? 5WOo
?D=$% B
?$<q
@p^_
?39HoKC
g\fG\v
?ysB
?~yX
?\r'u_
?$G4
?[/k
?30]
3?tr
&P?z
[&-*
G\n&s
?7zQ6$
float __cdecl cv::cubeRoot(float)
struct cv::Ptr<class cv::BaseRowFilter> __cdecl cv::opt_SSE4_1::getMorphologyRowFilter(int,int,int,int)
cv::opt_SSE4_1::getMorphologyRowFilter
struct cv::Ptr<class cv::BaseColumnFilter> __cdecl cv::opt_SSE4_1::getMorphologyColumnFilter(int,int,int,int)
cv::opt_SSE4_1::getMorphologyColumnFilter
struct cv::Ptr<class cv::BaseFilter> __cdecl cv::opt_SSE4_1::getMorphologyFilter(int,int,const class cv::Mat &,class cv::Point_<int>)
cv::opt_SSE4_1::getMorphologyFilter
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MaxOp<double>,struct cv::opt_SSE4_1::A0xf3d25239::MorphNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MaxOp<float>,struct cv::opt_SSE4_1::A0xf3d25239::MorphVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMax<struct cv::hal_SSE4_1::v_float32x4> > >::operator ()(const unsigned char **,unsigned char *,int,int,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MaxOp<short>,struct cv::opt_SSE4_1::A0xf3d25239::MorphVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMax<struct cv::hal_SSE4_1::v_int16x8> > >::operator ()(const unsigned char **,unsigned char *,int,int,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MaxOp<unsigned short>,struct cv::opt_SSE4_1::A0xf3d25239::MorphVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMax<struct cv::hal_SSE4_1::v_uint16x8> > >::operator ()(const unsigned char **,unsigned char *,int,int,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MaxOp<unsigned char>,struct cv::opt_SSE4_1::A0xf3d25239::MorphVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMax<struct cv::hal_SSE4_1::v_uint8x16> > >::operator ()(const unsigned char **,unsigned char *,int,int,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MinOp<double>,struct cv::opt_SSE4_1::A0xf3d25239::MorphNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MinOp<float>,struct cv::opt_SSE4_1::A0xf3d25239::MorphVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMin<struct cv::hal_SSE4_1::v_float32x4> > >::operator ()(const unsigned char **,unsigned char *,int,int,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MinOp<short>,struct cv::opt_SSE4_1::A0xf3d25239::MorphVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMin<struct cv::hal_SSE4_1::v_int16x8> > >::operator ()(const unsigned char **,unsigned char *,int,int,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MinOp<unsigned short>,struct cv::opt_SSE4_1::A0xf3d25239::MorphVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMin<struct cv::hal_SSE4_1::v_uint16x8> > >::operator ()(const unsigned char **,unsigned char *,int,int,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MinOp<unsigned char>,struct cv::opt_SSE4_1::A0xf3d25239::MorphVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMin<struct cv::hal_SSE4_1::v_uint8x16> > >::operator ()(const unsigned char **,unsigned char *,int,int,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphColumnFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MaxOp<double>,struct cv::opt_SSE4_1::A0xf3d25239::MorphColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphColumnFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MaxOp<float>,struct cv::opt_SSE4_1::A0xf3d25239::MorphColumnVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMax<struct cv::hal_SSE4_1::v_float32x4> > >::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphColumnFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MaxOp<short>,struct cv::opt_SSE4_1::A0xf3d25239::MorphColumnVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMax<struct cv::hal_SSE4_1::v_int16x8> > >::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphColumnFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MaxOp<unsigned short>,struct cv::opt_SSE4_1::A0xf3d25239::MorphColumnVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMax<struct cv::hal_SSE4_1::v_uint16x8> > >::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphColumnFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MaxOp<unsigned char>,struct cv::opt_SSE4_1::A0xf3d25239::MorphColumnVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMax<struct cv::hal_SSE4_1::v_uint8x16> > >::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphColumnFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MinOp<double>,struct cv::opt_SSE4_1::A0xf3d25239::MorphColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphColumnFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MinOp<float>,struct cv::opt_SSE4_1::A0xf3d25239::MorphColumnVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMin<struct cv::hal_SSE4_1::v_float32x4> > >::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphColumnFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MinOp<short>,struct cv::opt_SSE4_1::A0xf3d25239::MorphColumnVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMin<struct cv::hal_SSE4_1::v_int16x8> > >::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphColumnFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MinOp<unsigned short>,struct cv::opt_SSE4_1::A0xf3d25239::MorphColumnVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMin<struct cv::hal_SSE4_1::v_uint16x8> > >::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphColumnFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MinOp<unsigned char>,struct cv::opt_SSE4_1::A0xf3d25239::MorphColumnVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMin<struct cv::hal_SSE4_1::v_uint8x16> > >::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphRowFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MaxOp<double>,struct cv::opt_SSE4_1::A0xf3d25239::MorphRowNoVec>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphRowFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MaxOp<float>,struct cv::opt_SSE4_1::A0xf3d25239::MorphRowVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMax<struct cv::hal_SSE4_1::v_float32x4> > >::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphRowFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MaxOp<short>,struct cv::opt_SSE4_1::A0xf3d25239::MorphRowVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMax<struct cv::hal_SSE4_1::v_int16x8> > >::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphRowFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MaxOp<unsigned short>,struct cv::opt_SSE4_1::A0xf3d25239::MorphRowVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMax<struct cv::hal_SSE4_1::v_uint16x8> > >::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphRowFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MaxOp<unsigned char>,struct cv::opt_SSE4_1::A0xf3d25239::MorphRowVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMax<struct cv::hal_SSE4_1::v_uint8x16> > >::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphRowFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MinOp<double>,struct cv::opt_SSE4_1::A0xf3d25239::MorphRowNoVec>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphRowFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MinOp<float>,struct cv::opt_SSE4_1::A0xf3d25239::MorphRowVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMin<struct cv::hal_SSE4_1::v_float32x4> > >::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphRowFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MinOp<short>,struct cv::opt_SSE4_1::A0xf3d25239::MorphRowVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMin<struct cv::hal_SSE4_1::v_int16x8> > >::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphRowFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MinOp<unsigned short>,struct cv::opt_SSE4_1::A0xf3d25239::MorphRowVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMin<struct cv::hal_SSE4_1::v_uint16x8> > >::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphRowFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MinOp<unsigned char>,struct cv::opt_SSE4_1::A0xf3d25239::MorphRowVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMin<struct cv::hal_SSE4_1::v_uint8x16> > >::operator ()(const unsigned char *,unsigned char *,int,int)
int __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMax<struct cv::hal_SSE4_1::v_float32x4> >::operator ()(unsigned char **,int,unsigned char *,int) const
int __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMin<struct cv::hal_SSE4_1::v_float32x4> >::operator ()(unsigned char **,int,unsigned char *,int) const
int __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMax<struct cv::hal_SSE4_1::v_int16x8> >::operator ()(unsigned char **,int,unsigned char *,int) const
int __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMin<struct cv::hal_SSE4_1::v_int16x8> >::operator ()(unsigned char **,int,unsigned char *,int) const
int __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMax<struct cv::hal_SSE4_1::v_uint16x8> >::operator ()(unsigned char **,int,unsigned char *,int) const
int __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMin<struct cv::hal_SSE4_1::v_uint16x8> >::operator ()(unsigned char **,int,unsigned char *,int) const
int __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMax<struct cv::hal_SSE4_1::v_uint8x16> >::operator ()(unsigned char **,int,unsigned char *,int) const
int __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMin<struct cv::hal_SSE4_1::v_uint8x16> >::operator ()(unsigned char **,int,unsigned char *,int) const
int __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphColumnVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMax<struct cv::hal_SSE4_1::v_float32x4> >::operator ()(const unsigned char **,unsigned char *,int,int,int) const
cv::opt_SSE4_1::`anonymous-namespace'::MorphColumnVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMax<struct cv::hal_SSE4_1::v_float32x4> >::operator ()
int __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphColumnVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMin<struct cv::hal_SSE4_1::v_float32x4> >::operator ()(const unsigned char **,unsigned char *,int,int,int) const
cv::opt_SSE4_1::`anonymous-namespace'::MorphColumnVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMin<struct cv::hal_SSE4_1::v_float32x4> >::operator ()
int __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphColumnVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMax<struct cv::hal_SSE4_1::v_int16x8> >::operator ()(const unsigned char **,unsigned char *,int,int,int) const
cv::opt_SSE4_1::`anonymous-namespace'::MorphColumnVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMax<struct cv::hal_SSE4_1::v_int16x8> >::operator ()
int __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphColumnVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMin<struct cv::hal_SSE4_1::v_int16x8> >::operator ()(const unsigned char **,unsigned char *,int,int,int) const
cv::opt_SSE4_1::`anonymous-namespace'::MorphColumnVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMin<struct cv::hal_SSE4_1::v_int16x8> >::operator ()
int __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphColumnVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMax<struct cv::hal_SSE4_1::v_uint16x8> >::operator ()(const unsigned char **,unsigned char *,int,int,int) const
cv::opt_SSE4_1::`anonymous-namespace'::MorphColumnVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMax<struct cv::hal_SSE4_1::v_uint16x8> >::operator ()
int __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphColumnVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMin<struct cv::hal_SSE4_1::v_uint16x8> >::operator ()(const unsigned char **,unsigned char *,int,int,int) const
cv::opt_SSE4_1::`anonymous-namespace'::MorphColumnVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMin<struct cv::hal_SSE4_1::v_uint16x8> >::operator ()
int __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphColumnVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMax<struct cv::hal_SSE4_1::v_uint8x16> >::operator ()(const unsigned char **,unsigned char *,int,int,int) const
cv::opt_SSE4_1::`anonymous-namespace'::MorphColumnVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMax<struct cv::hal_SSE4_1::v_uint8x16> >::operator ()
int __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphColumnVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMin<struct cv::hal_SSE4_1::v_uint8x16> >::operator ()(const unsigned char **,unsigned char *,int,int,int) const
cv::opt_SSE4_1::`anonymous-namespace'::MorphColumnVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMin<struct cv::hal_SSE4_1::v_uint8x16> >::operator ()
int __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphRowVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMax<struct cv::hal_SSE4_1::v_float32x4> >::operator ()(const unsigned char *,unsigned char *,int,int) const
int __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphRowVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMin<struct cv::hal_SSE4_1::v_float32x4> >::operator ()(const unsigned char *,unsigned char *,int,int) const
int __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphRowVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMax<struct cv::hal_SSE4_1::v_int16x8> >::operator ()(const unsigned char *,unsigned char *,int,int) const
int __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphRowVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMin<struct cv::hal_SSE4_1::v_int16x8> >::operator ()(const unsigned char *,unsigned char *,int,int) const
int __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphRowVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMax<struct cv::hal_SSE4_1::v_uint16x8> >::operator ()(const unsigned char *,unsigned char *,int,int) const
int __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphRowVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMin<struct cv::hal_SSE4_1::v_uint16x8> >::operator ()(const unsigned char *,unsigned char *,int,int) const
int __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphRowVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMax<struct cv::hal_SSE4_1::v_uint8x16> >::operator ()(const unsigned char *,unsigned char *,int,int) const
int __cdecl cv::opt_SSE4_1::`anonymous-namespace'::MorphRowVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMin<struct cv::hal_SSE4_1::v_uint8x16> >::operator ()(const unsigned char *,unsigned char *,int,int) const
cv::opt_SSE4_1::`anonymous-namespace'::MorphFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MaxOp<double>,struct cv::opt_SSE4_1::A0xf3d25239::MorphNoVec>::MorphFilter
cv::opt_SSE4_1::`anonymous-namespace'::MorphFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MaxOp<float>,struct cv::opt_SSE4_1::A0xf3d25239::MorphVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMax<struct cv::hal_SSE4_1::v_float32x4> > >::MorphFilter
cv::opt_SSE4_1::`anonymous-namespace'::MorphFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MaxOp<short>,struct cv::opt_SSE4_1::A0xf3d25239::MorphVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMax<struct cv::hal_SSE4_1::v_int16x8> > >::MorphFilter
cv::opt_SSE4_1::`anonymous-namespace'::MorphFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MaxOp<unsigned short>,struct cv::opt_SSE4_1::A0xf3d25239::MorphVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMax<struct cv::hal_SSE4_1::v_uint16x8> > >::MorphFilter
cv::opt_SSE4_1::`anonymous-namespace'::MorphFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MaxOp<unsigned char>,struct cv::opt_SSE4_1::A0xf3d25239::MorphVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMax<struct cv::hal_SSE4_1::v_uint8x16> > >::MorphFilter
cv::opt_SSE4_1::`anonymous-namespace'::MorphFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MinOp<double>,struct cv::opt_SSE4_1::A0xf3d25239::MorphNoVec>::MorphFilter
cv::opt_SSE4_1::`anonymous-namespace'::MorphFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MinOp<float>,struct cv::opt_SSE4_1::A0xf3d25239::MorphVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMin<struct cv::hal_SSE4_1::v_float32x4> > >::MorphFilter
cv::opt_SSE4_1::`anonymous-namespace'::MorphFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MinOp<short>,struct cv::opt_SSE4_1::A0xf3d25239::MorphVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMin<struct cv::hal_SSE4_1::v_int16x8> > >::MorphFilter
cv::opt_SSE4_1::`anonymous-namespace'::MorphFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MinOp<unsigned short>,struct cv::opt_SSE4_1::A0xf3d25239::MorphVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMin<struct cv::hal_SSE4_1::v_uint16x8> > >::MorphFilter
cv::opt_SSE4_1::`anonymous-namespace'::MorphFilter<struct cv::opt_SSE4_1::`anonymous namespace'::MinOp<unsigned char>,struct cv::opt_SSE4_1::A0xf3d25239::MorphVec<struct cv::opt_SSE4_1::`anonymous namespace'::VMin<struct cv::hal_SSE4_1::v_uint8x16> > >::MorphFilter
void __cdecl cv::opt_SSE4_1::medianBlur_8u_O1(const class cv::Mat &,class cv::Mat &,int)
cv::opt_SSE4_1::medianBlur_8u_O1
void __cdecl cv::opt_SSE4_1::medianBlur_8u_Om(const class cv::Mat &,class cv::Mat &,int)
cv::opt_SSE4_1::medianBlur_8u_Om
void __cdecl cv::opt_SSE4_1::medianBlur(const class cv::Mat &,class cv::Mat &,int)
cv::opt_SSE4_1::medianBlur
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::medianBlur_SortNet<struct cv::opt_SSE4_1::`anonymous-namespace'::MinMax8u,struct cv::opt_SSE4_1::`anonymous-namespace'::MinMaxVec8u>(const class cv::Mat &,class cv::Mat &,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::medianBlur_SortNet<struct cv::opt_SSE4_1::`anonymous-namespace'::MinMax16u,struct cv::opt_SSE4_1::`anonymous-namespace'::MinMaxVec16u>(const class cv::Mat &,class cv::Mat &,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::medianBlur_SortNet<struct cv::opt_SSE4_1::`anonymous-namespace'::MinMax16s,struct cv::opt_SSE4_1::`anonymous-namespace'::MinMaxVec16s>(const class cv::Mat &,class cv::Mat &,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::medianBlur_SortNet<struct cv::opt_SSE4_1::`anonymous-namespace'::MinMax32f,struct cv::opt_SSE4_1::`anonymous-namespace'::MinMaxVec32f>(const class cv::Mat &,class cv::Mat &,int)
\t\n\v\f\r
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
cv::XMLEmitter::writeTag
An attempt to add element without a key to a map, or add element with key to sequence
A single _ is a reserved tag name
Closing tag should not include any attributes
Key should start with a letter or _
Key name may only contain alphanumeric characters [a-zA-Z0-9], '-' and '_'
nattr % 2 == 0
len0 > 0
cv::XMLEmitter::write
Null string pointer
The written string is too long
apos
quot
#x%02x
cv::XMLEmitter::writeScalar
elements with keys can not be written to sequence
cv::XMLEmitter::writeComment
Null comment
Double hyphen '--' is not allowed in the comments
<!-- %s -->
<!--
\n<!-- next stream -->\n
Comments are not allowed here
cv::XMLParser::skipSpaces
Invalid character in the stream
Unexpected end of line
cv::XMLParser::getBase64Row
Directive tags are not allowed here
cv::XMLParser::parseValue
Empty tags are not supported
tag_type == CV_XML_OPENING_TAG
Mismatched closing tag
There should be space between literals
Invalid numeric value (inconsistent explicit type specification?)
OpenCV persistence doesn't support very long lines
Literal " is not allowed within a string. Use &quot;
Closing " is expected
Literal ' or > are not allowed. Use &apos; or &gt;
Invalid numeric value in the string
Invalid character in the symbol entity name
Too long string literal
Unexpected end of the stream
cv::XMLParser::parseTag
Tag should start with '<'
Unknown tag type
Name should start with a letter or underscore
Closing tag should not contain any attributes
Attribute name should be followed by '='
Attribute value should be put into single or double quotes
type_name.empty()
Invalid closing tag for <?xml ...
There should be space between attributes
cv::XMLParser::parse
fs != 0
Valid XML should start with '<?xml ...?>'
opencv_storage
<opencv_storage> tag is missing
</opencv_storage> tag is missing
fs->eof()
cv::YAMLEmitter::startWriteStruct
Some collection type - FileNode::SEQ or FileNode::MAP, must be specified
!!binary |
!!%s %c
!!%s
cv::YAMLEmitter::write
x%02x
cv::YAMLEmitter::writeScalar
The key is an empty
The key is too long
Key must start with a letter or _
Key names may only contain alphanumeric characters [a-zA-Z0-9], '-', '_' and ' '
cv::YAMLEmitter::writeComment
...\n
---\n
Incorrect indentation
cv::YAMLParser::skipSpaces
Tabs are prohibited in YAML!
Invalid character
cv::YAMLParser::getBase64Row
Key may not start with '-'
cv::YAMLParser::parseKey
Missing ':'
An empty key
<tag:yaml.org,2002:
Empty type name
cv::YAMLParser::parseValue
The wrong closing bracket
Missing , between the elements
Complex keys are not supported
Multi-line text literals are not supported
Block sequence elements must be preceded with '-'
%YAML:1.
%YAML 1.
Unsupported YAML version (it must be 1.x)
cv::YAMLParser::parse
The YAML streams must start with '---', except the first one
Invalid or unsupported syntax
Only collections as YAML streams are supported by this parser
cv::JSONEmitter::startWriteStruct
cv::JSONEmitter::endWriteStruct
FileNode::isCollection(struct_flags)
cv::JSONEmitter::write
cv::JSONEmitter::writeScalar
cv::JSONEmitter::writeComment
Not supported escape character
cv::JSONParser::skipSpaces
Abort at parse time
Key must start with '"'
cv::JSONParser::parseKey
Key must end with '"'
Missing ':' between key and value
Key is empty
Currently, JSON parser does not support base64 data
cv::JSONParser::getBase64Row
Unexpected End-Of-File
cv::JSONParser::parseValue
$base64$
base64 data is not supported
'\uXXXX' currently not supported
Invalid escape character
'"' - right-quote of string is missing
Value 'null' is not supported by this parser
Unrecognized value
ptr is NULL
cv::JSONParser::parseSeq
'[' - left-brace of seq is missing
Unexpected character
']' - right-brace of seq is missing
cv::JSONParser::parseMap
'{' - left-brace of map is missing
'}' - right-brace of map is missing
left-brace of top level is missing
cv::JSONParser::parse
void __cdecl cv::hal::cpu_baseline::add8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::add8s(const signed char *,unsigned __int64,const signed char *,unsigned __int64,signed char *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::add16u(const unsigned short *,unsigned __int64,const unsigned short *,unsigned __int64,unsigned short *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::add16s(const short *,unsigned __int64,const short *,unsigned __int64,short *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::add32s(const int *,unsigned __int64,const int *,unsigned __int64,int *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::add32f(const float *,unsigned __int64,const float *,unsigned __int64,float *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::add64f(const double *,unsigned __int64,const double *,unsigned __int64,double *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::sub8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::sub8s(const signed char *,unsigned __int64,const signed char *,unsigned __int64,signed char *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::sub16u(const unsigned short *,unsigned __int64,const unsigned short *,unsigned __int64,unsigned short *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::sub16s(const short *,unsigned __int64,const short *,unsigned __int64,short *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::sub32s(const int *,unsigned __int64,const int *,unsigned __int64,int *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::sub32f(const float *,unsigned __int64,const float *,unsigned __int64,float *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::sub64f(const double *,unsigned __int64,const double *,unsigned __int64,double *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::min8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::min8s(const signed char *,unsigned __int64,const signed char *,unsigned __int64,signed char *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::min16u(const unsigned short *,unsigned __int64,const unsigned short *,unsigned __int64,unsigned short *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::min16s(const short *,unsigned __int64,const short *,unsigned __int64,short *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::min32s(const int *,unsigned __int64,const int *,unsigned __int64,int *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::min32f(const float *,unsigned __int64,const float *,unsigned __int64,float *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::min64f(const double *,unsigned __int64,const double *,unsigned __int64,double *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::max8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::max8s(const signed char *,unsigned __int64,const signed char *,unsigned __int64,signed char *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::max16u(const unsigned short *,unsigned __int64,const unsigned short *,unsigned __int64,unsigned short *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::max16s(const short *,unsigned __int64,const short *,unsigned __int64,short *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::max32s(const int *,unsigned __int64,const int *,unsigned __int64,int *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::max32f(const float *,unsigned __int64,const float *,unsigned __int64,float *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::max64f(const double *,unsigned __int64,const double *,unsigned __int64,double *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::absdiff8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::absdiff8s(const signed char *,unsigned __int64,const signed char *,unsigned __int64,signed char *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::absdiff16u(const unsigned short *,unsigned __int64,const unsigned short *,unsigned __int64,unsigned short *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::absdiff16s(const short *,unsigned __int64,const short *,unsigned __int64,short *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::absdiff32s(const int *,unsigned __int64,const int *,unsigned __int64,int *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::absdiff32f(const float *,unsigned __int64,const float *,unsigned __int64,float *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::absdiff64f(const double *,unsigned __int64,const double *,unsigned __int64,double *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::or8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::xor8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::and8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::not8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int)
void __cdecl cv::hal::cpu_baseline::cmp8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int)
void __cdecl cv::hal::cpu_baseline::cmp8s(const signed char *,unsigned __int64,const signed char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int)
void __cdecl cv::hal::cpu_baseline::cmp16u(const unsigned short *,unsigned __int64,const unsigned short *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int)
void __cdecl cv::hal::cpu_baseline::cmp16s(const short *,unsigned __int64,const short *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int)
void __cdecl cv::hal::cpu_baseline::cmp32s(const int *,unsigned __int64,const int *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int)
void __cdecl cv::hal::cpu_baseline::cmp32f(const float *,unsigned __int64,const float *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int)
void __cdecl cv::hal::cpu_baseline::cmp64f(const double *,unsigned __int64,const double *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int)
void __cdecl cv::hal::cpu_baseline::mul8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::cpu_baseline::mul8s(const signed char *,unsigned __int64,const signed char *,unsigned __int64,signed char *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::cpu_baseline::mul16u(const unsigned short *,unsigned __int64,const unsigned short *,unsigned __int64,unsigned short *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::cpu_baseline::mul16s(const short *,unsigned __int64,const short *,unsigned __int64,short *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::cpu_baseline::mul32f(const float *,unsigned __int64,const float *,unsigned __int64,float *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::cpu_baseline::mul32s(const int *,unsigned __int64,const int *,unsigned __int64,int *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::cpu_baseline::mul64f(const double *,unsigned __int64,const double *,unsigned __int64,double *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::cpu_baseline::div8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::cpu_baseline::div8s(const signed char *,unsigned __int64,const signed char *,unsigned __int64,signed char *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::cpu_baseline::div16u(const unsigned short *,unsigned __int64,const unsigned short *,unsigned __int64,unsigned short *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::cpu_baseline::div16s(const short *,unsigned __int64,const short *,unsigned __int64,short *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::cpu_baseline::div32s(const int *,unsigned __int64,const int *,unsigned __int64,int *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::cpu_baseline::div32f(const float *,unsigned __int64,const float *,unsigned __int64,float *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::cpu_baseline::div64f(const double *,unsigned __int64,const double *,unsigned __int64,double *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::cpu_baseline::addWeighted8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::cpu_baseline::addWeighted8s(const signed char *,unsigned __int64,const signed char *,unsigned __int64,signed char *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::cpu_baseline::addWeighted16u(const unsigned short *,unsigned __int64,const unsigned short *,unsigned __int64,unsigned short *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::cpu_baseline::addWeighted16s(const short *,unsigned __int64,const short *,unsigned __int64,short *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::cpu_baseline::addWeighted32s(const int *,unsigned __int64,const int *,unsigned __int64,int *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::cpu_baseline::addWeighted32f(const float *,unsigned __int64,const float *,unsigned __int64,float *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::cpu_baseline::addWeighted64f(const double *,unsigned __int64,const double *,unsigned __int64,double *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::cpu_baseline::recip8u(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::cpu_baseline::recip8s(const signed char *,unsigned __int64,signed char *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::cpu_baseline::recip16u(const unsigned short *,unsigned __int64,unsigned short *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::cpu_baseline::recip16s(const short *,unsigned __int64,short *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::cpu_baseline::recip32s(const int *,unsigned __int64,int *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::cpu_baseline::recip32f(const float *,unsigned __int64,float *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::cpu_baseline::recip64f(const double *,unsigned __int64,double *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::add8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::add8s(const signed char *,unsigned __int64,const signed char *,unsigned __int64,signed char *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::add16u(const unsigned short *,unsigned __int64,const unsigned short *,unsigned __int64,unsigned short *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::add16s(const short *,unsigned __int64,const short *,unsigned __int64,short *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::add32s(const int *,unsigned __int64,const int *,unsigned __int64,int *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::add32f(const float *,unsigned __int64,const float *,unsigned __int64,float *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::add64f(const double *,unsigned __int64,const double *,unsigned __int64,double *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::sub8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::sub8s(const signed char *,unsigned __int64,const signed char *,unsigned __int64,signed char *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::sub16u(const unsigned short *,unsigned __int64,const unsigned short *,unsigned __int64,unsigned short *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::sub16s(const short *,unsigned __int64,const short *,unsigned __int64,short *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::sub32s(const int *,unsigned __int64,const int *,unsigned __int64,int *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::sub32f(const float *,unsigned __int64,const float *,unsigned __int64,float *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::sub64f(const double *,unsigned __int64,const double *,unsigned __int64,double *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::min8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::min8s(const signed char *,unsigned __int64,const signed char *,unsigned __int64,signed char *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::min16u(const unsigned short *,unsigned __int64,const unsigned short *,unsigned __int64,unsigned short *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::min16s(const short *,unsigned __int64,const short *,unsigned __int64,short *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::min32s(const int *,unsigned __int64,const int *,unsigned __int64,int *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::min32f(const float *,unsigned __int64,const float *,unsigned __int64,float *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::min64f(const double *,unsigned __int64,const double *,unsigned __int64,double *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::max8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::max8s(const signed char *,unsigned __int64,const signed char *,unsigned __int64,signed char *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::max16u(const unsigned short *,unsigned __int64,const unsigned short *,unsigned __int64,unsigned short *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::max16s(const short *,unsigned __int64,const short *,unsigned __int64,short *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::max32s(const int *,unsigned __int64,const int *,unsigned __int64,int *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::max32f(const float *,unsigned __int64,const float *,unsigned __int64,float *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::max64f(const double *,unsigned __int64,const double *,unsigned __int64,double *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::absdiff8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::absdiff8s(const signed char *,unsigned __int64,const signed char *,unsigned __int64,signed char *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::absdiff16u(const unsigned short *,unsigned __int64,const unsigned short *,unsigned __int64,unsigned short *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::absdiff16s(const short *,unsigned __int64,const short *,unsigned __int64,short *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::absdiff32s(const int *,unsigned __int64,const int *,unsigned __int64,int *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::absdiff32f(const float *,unsigned __int64,const float *,unsigned __int64,float *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::absdiff64f(const double *,unsigned __int64,const double *,unsigned __int64,double *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::or8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::xor8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::and8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::not8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::cmp8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::cmp8s(const signed char *,unsigned __int64,const signed char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::cmp16u(const unsigned short *,unsigned __int64,const unsigned short *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::cmp16s(const short *,unsigned __int64,const short *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::cmp32s(const int *,unsigned __int64,const int *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::cmp32f(const float *,unsigned __int64,const float *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::cmp64f(const double *,unsigned __int64,const double *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::mul8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::mul8s(const signed char *,unsigned __int64,const signed char *,unsigned __int64,signed char *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::mul16u(const unsigned short *,unsigned __int64,const unsigned short *,unsigned __int64,unsigned short *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::mul16s(const short *,unsigned __int64,const short *,unsigned __int64,short *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::mul32f(const float *,unsigned __int64,const float *,unsigned __int64,float *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::mul32s(const int *,unsigned __int64,const int *,unsigned __int64,int *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::mul64f(const double *,unsigned __int64,const double *,unsigned __int64,double *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::div8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::div8s(const signed char *,unsigned __int64,const signed char *,unsigned __int64,signed char *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::div16u(const unsigned short *,unsigned __int64,const unsigned short *,unsigned __int64,unsigned short *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::div16s(const short *,unsigned __int64,const short *,unsigned __int64,short *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::div32s(const int *,unsigned __int64,const int *,unsigned __int64,int *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::div32f(const float *,unsigned __int64,const float *,unsigned __int64,float *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::div64f(const double *,unsigned __int64,const double *,unsigned __int64,double *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::addWeighted8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::addWeighted8s(const signed char *,unsigned __int64,const signed char *,unsigned __int64,signed char *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::addWeighted16u(const unsigned short *,unsigned __int64,const unsigned short *,unsigned __int64,unsigned short *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::addWeighted16s(const short *,unsigned __int64,const short *,unsigned __int64,short *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::addWeighted32s(const int *,unsigned __int64,const int *,unsigned __int64,int *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::addWeighted32f(const float *,unsigned __int64,const float *,unsigned __int64,float *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::addWeighted64f(const double *,unsigned __int64,const double *,unsigned __int64,double *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::recip8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::recip8s(const signed char *,unsigned __int64,const signed char *,unsigned __int64,signed char *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::recip16u(const unsigned short *,unsigned __int64,const unsigned short *,unsigned __int64,unsigned short *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::recip16s(const short *,unsigned __int64,const short *,unsigned __int64,short *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::recip32s(const int *,unsigned __int64,const int *,unsigned __int64,int *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::recip32f(const float *,unsigned __int64,const float *,unsigned __int64,float *,unsigned __int64,int,int,void *)
void __cdecl cv::hal::recip64f(const double *,unsigned __int64,const double *,unsigned __int64,double *,unsigned __int64,int,int,void *)
cv::hal::cpu_baseline::cmp_loop
cmpop == CMP_NE
OPENCV_LOG_LEVEL
DISABLED
FATAL
fatal
warning
WARNINGS
warnings
WARN
warn
info
DEBUG
VERBOSE
verbose
ERROR: Unexpected logging level value: 
[FATAL:
[ERROR:
[ WARN:
[ INFO:
[DEBUG:
\q[@Z
UiTDS!R
LyKdJQI@H1G$F
;$:19@8Q7d6y5
1!0D/i.
+@*q)
(q)@*
-i.D/!0
4y5d6Q7@819$:
E$F1G@HQIdJyK
Q!RDSiT
Y@Zq[
\t\n\v\f\r
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
OPENCV_KMEANS_PARALLEL_GRANULARITY
OPENCV_IO_MAX_IMAGE_PARAMS
OPENCV_IO_MAX_IMAGE_WIDTH
OPENCV_IO_MAX_IMAGE_HEIGHT
OPENCV_IO_MAX_IMAGE_PIXELS
cv::imwrite_
could not find a writer for the specified extension
image.channels() == 1 || image.channels() == 3 || image.channels() == 4
encoder->isFormatSupported(CV_8U)
params.size() <= CV_IO_MAX_IMAGE_PARAMS*2
'): can't write data: 
imwrite_('
'): can't write data: unknown exception
bool __cdecl cv::imwrite(const class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,const class cv::_InputArray &,const class std::vector<int,class std::allocator<int> > &)
cv::imwrite
!img_vec.empty()
OpenGL32.dll
IntGetProcAddress
Can't load OpenGL extension [%s]
glHint
glLineWidth
glPointSize
glPolygonMode
glScissor
glTexParameterf
glTexParameterfv
glTexParameteri
glTexParameteriv
glTexImage1D
glTexImage2D
glDrawBuffer
glClear
glClearColor
glClearStencil
glClearDepth
glStencilMask
glColorMask
glDepthMask
glDisable
glEnable
glFinish
glFlush
glBlendFunc
glLogicOp
glStencilFunc
glStencilOp
glPixelStoref
glPixelStorei
glReadBuffer
glReadPixels
glGetBooleanv
glGetDoublev
glGetError
glGetFloatv
glGetIntegerv
glGetString
glGetTexImage
glGetTexParameterfv
glGetTexParameteriv
glGetTexLevelParameterfv
glGetTexLevelParameteriv
glIsEnabled
glDepthRange
glViewport
glDrawArrays
glDrawElements
glGetPointerv
glPolygonOffset
glCopyTexImage1D
glCopyTexImage2D
glCopyTexSubImage1D
glCopyTexSubImage2D
glTexSubImage1D
glTexSubImage2D
glBindTexture
glDeleteTextures
glGenTextures
glIsTexture
glIndexub
glIndexubv
glEnableClientState
glDisableClientState
glVertexPointer
glNormalPointer
glColorPointer
glTexCoordPointer
glTexEnvi
glMatrixMode
glLoadIdentity
glOrtho
glColor3d
void __cdecl cv::hal::opt_SSE4_1::cvtBGRtoYUV(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,bool,bool)
void __cdecl cv::hal::opt_SSE4_1::cvtYUVtoBGR(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,bool,bool)
void __cdecl cv::hal::opt_SSE4_1::cvtTwoPlaneYUVtoBGR(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,bool,int)
void __cdecl cv::hal::opt_SSE4_1::cvtTwoPlaneYUVtoBGR(const unsigned char *,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,bool,int)
cv::hal::opt_SSE4_1::cvtTwoPlaneYUVtoBGR
void __cdecl cv::hal::opt_SSE4_1::cvtThreePlaneYUVtoBGR(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,bool,int)
cv::hal::opt_SSE4_1::cvtThreePlaneYUVtoBGR
void __cdecl cv::hal::opt_SSE4_1::cvtBGRtoThreePlaneYUV(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,bool,int)
void __cdecl cv::hal::opt_SSE4_1::cvtOnePlaneYUVtoBGR(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,bool,int,int)
cv::hal::opt_SSE4_1::cvtOnePlaneYUVtoBGR
void __cdecl cv::hal::opt_SSE4_1::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::opt_SSE4_1::`anonymous namespace'::YCrCb2RGB_f<float> >::operator ()(const class cv::Range &) const
void __cdecl cv::hal::opt_SSE4_1::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::opt_SSE4_1::`anonymous namespace'::YCrCb2RGB_i<unsigned short> >::operator ()(const class cv::Range &) const
void __cdecl cv::hal::opt_SSE4_1::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::opt_SSE4_1::`anonymous namespace'::YCrCb2RGB_i<unsigned char> >::operator ()(const class cv::Range &) const
void __cdecl cv::hal::opt_SSE4_1::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::opt_SSE4_1::`anonymous namespace'::RGB2YCrCb_f<float> >::operator ()(const class cv::Range &) const
void __cdecl cv::hal::opt_SSE4_1::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::opt_SSE4_1::`anonymous namespace'::RGB2YCrCb_i<unsigned short> >::operator ()(const class cv::Range &) const
void __cdecl cv::hal::opt_SSE4_1::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::opt_SSE4_1::`anonymous namespace'::RGB2YCrCb_i<unsigned char> >::operator ()(const class cv::Range &) const
cv::hal::opt_SSE4_1::`anonymous-namespace'::RGB2HSV_b::RGB2HSV_b
void __cdecl cv::hal::opt_SSE4_1::cvtBGRtoHSV(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,bool,bool,bool)
void __cdecl cv::hal::opt_SSE4_1::cvtHSVtoBGR(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,bool,bool,bool)
void __cdecl cv::hal::opt_SSE4_1::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::opt_SSE4_1::`anonymous namespace'::HLS2RGB_f>::operator ()(const class cv::Range &) const
void __cdecl cv::hal::opt_SSE4_1::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::opt_SSE4_1::`anonymous namespace'::HLS2RGB_b>::operator ()(const class cv::Range &) const
void __cdecl cv::hal::opt_SSE4_1::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::opt_SSE4_1::`anonymous namespace'::HSV2RGB_f>::operator ()(const class cv::Range &) const
void __cdecl cv::hal::opt_SSE4_1::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::opt_SSE4_1::`anonymous namespace'::HSV2RGB_b>::operator ()(const class cv::Range &) const
void __cdecl cv::hal::opt_SSE4_1::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::opt_SSE4_1::`anonymous namespace'::RGB2HLS_f>::operator ()(const class cv::Range &) const
void __cdecl cv::hal::opt_SSE4_1::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::opt_SSE4_1::`anonymous namespace'::RGB2HLS_b>::operator ()(const class cv::Range &) const
void __cdecl cv::hal::opt_SSE4_1::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::opt_SSE4_1::`anonymous namespace'::RGB2HSV_f>::operator ()(const class cv::Range &) const
void __cdecl cv::hal::opt_SSE4_1::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::opt_SSE4_1::`anonymous namespace'::RGB2HSV_b>::operator ()(const class cv::Range &) const
cv::hal::opt_SSE4_1::`anonymous-namespace'::RGB2Gray<unsigned char>::RGB2Gray
cv::hal::opt_SSE4_1::`anonymous-namespace'::RGB2Gray<unsigned short>::RGB2Gray
void __cdecl cv::hal::opt_SSE4_1::cvtBGRtoBGR(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,int,bool)
void __cdecl cv::hal::opt_SSE4_1::cvtBGRtoBGR5x5(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,bool,int)
void __cdecl cv::hal::opt_SSE4_1::cvtBGR5x5toBGR(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,bool,int)
void __cdecl cv::hal::opt_SSE4_1::cvtBGRtoGray(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int,bool)
void __cdecl cv::hal::opt_SSE4_1::cvtGraytoBGR(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int,int)
void __cdecl cv::hal::opt_SSE4_1::cvtBGR5x5toGray(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int)
void __cdecl cv::hal::opt_SSE4_1::cvtGraytoBGR5x5(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int)
void __cdecl cv::hal::opt_SSE4_1::cvtRGBAtoMultipliedRGBA(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::cvtMultipliedRGBAtoRGBA(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int)
cv::hal::opt_SSE4_1::`anonymous-namespace'::RGB2RGB<float>::RGB2RGB
cv::hal::opt_SSE4_1::`anonymous-namespace'::RGB2RGB<unsigned short>::RGB2RGB
cv::hal::opt_SSE4_1::`anonymous-namespace'::RGB2RGB<unsigned char>::RGB2RGB
void __cdecl cv::hal::opt_SSE4_1::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::opt_SSE4_1::`anonymous namespace'::mRGBA2RGBA<unsigned char> >::operator ()(const class cv::Range &) const
void __cdecl cv::hal::opt_SSE4_1::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::opt_SSE4_1::`anonymous namespace'::RGBA2mRGBA<unsigned char> >::operator ()(const class cv::Range &) const
void __cdecl cv::hal::opt_SSE4_1::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::opt_SSE4_1::`anonymous namespace'::Gray2RGB5x5>::operator ()(const class cv::Range &) const
void __cdecl cv::hal::opt_SSE4_1::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::opt_SSE4_1::`anonymous namespace'::RGB5x52Gray>::operator ()(const class cv::Range &) const
void __cdecl cv::hal::opt_SSE4_1::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::opt_SSE4_1::`anonymous namespace'::Gray2RGB<float> >::operator ()(const class cv::Range &) const
void __cdecl cv::hal::opt_SSE4_1::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::opt_SSE4_1::`anonymous namespace'::Gray2RGB<unsigned short> >::operator ()(const class cv::Range &) const
void __cdecl cv::hal::opt_SSE4_1::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::opt_SSE4_1::`anonymous namespace'::Gray2RGB<unsigned char> >::operator ()(const class cv::Range &) const
void __cdecl cv::hal::opt_SSE4_1::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::opt_SSE4_1::`anonymous namespace'::RGB2Gray<float> >::operator ()(const class cv::Range &) const
void __cdecl cv::hal::opt_SSE4_1::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::opt_SSE4_1::`anonymous namespace'::RGB2Gray<unsigned short> >::operator ()(const class cv::Range &) const
void __cdecl cv::hal::opt_SSE4_1::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::opt_SSE4_1::`anonymous namespace'::RGB2Gray<unsigned char> >::operator ()(const class cv::Range &) const
void __cdecl cv::hal::opt_SSE4_1::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::opt_SSE4_1::`anonymous namespace'::RGB5x52RGB>::operator ()(const class cv::Range &) const
void __cdecl cv::hal::opt_SSE4_1::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::opt_SSE4_1::`anonymous namespace'::RGB2RGB5x5>::operator ()(const class cv::Range &) const
void __cdecl cv::hal::opt_SSE4_1::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::opt_SSE4_1::`anonymous namespace'::RGB2RGB<float> >::operator ()(const class cv::Range &) const
void __cdecl cv::hal::opt_SSE4_1::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::opt_SSE4_1::`anonymous namespace'::RGB2RGB<unsigned short> >::operator ()(const class cv::Range &) const
void __cdecl cv::hal::opt_SSE4_1::`anonymous-namespace'::CvtColorLoop_Invoker<struct cv::hal::opt_SSE4_1::`anonymous namespace'::RGB2RGB<unsigned char> >::operator ()(const class cv::Range &) const
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::ColumnSum<int,unsigned char>::operator ()(const unsigned char **,unsigned char *,int,int,int)
cv::opt_SSE4_1::`anonymous-namespace'::ColumnSum<int,unsigned char>::operator ()
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::ColumnSum<unsigned short,unsigned char>::operator ()(const unsigned char **,unsigned char *,int,int,int)
cv::opt_SSE4_1::`anonymous-namespace'::ColumnSum<unsigned short,unsigned char>::operator ()
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::ColumnSum<int,short>::operator ()(const unsigned char **,unsigned char *,int,int,int)
cv::opt_SSE4_1::`anonymous-namespace'::ColumnSum<int,short>::operator ()
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::ColumnSum<int,unsigned short>::operator ()(const unsigned char **,unsigned char *,int,int,int)
cv::opt_SSE4_1::`anonymous-namespace'::ColumnSum<int,unsigned short>::operator ()
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::ColumnSum<int,int>::operator ()(const unsigned char **,unsigned char *,int,int,int)
cv::opt_SSE4_1::`anonymous-namespace'::ColumnSum<int,int>::operator ()
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::ColumnSum<int,float>::operator ()(const unsigned char **,unsigned char *,int,int,int)
cv::opt_SSE4_1::`anonymous-namespace'::ColumnSum<int,float>::operator ()
struct cv::Ptr<class cv::BaseRowFilter> __cdecl cv::opt_SSE4_1::getRowSumFilter(int,int,int,int)
cv::opt_SSE4_1::getRowSumFilter
struct cv::Ptr<class cv::BaseColumnFilter> __cdecl cv::opt_SSE4_1::getColumnSumFilter(int,int,int,int,double)
cv::opt_SSE4_1::getColumnSumFilter
struct cv::Ptr<class cv::FilterEngine> __cdecl cv::opt_SSE4_1::createBoxFilter(int,int,class cv::Size_<int>,class cv::Point_<int>,bool,int)
cv::opt_SSE4_1::getSqrRowSumFilter
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::SqrRowSum<double,double>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::SqrRowSum<float,double>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::SqrRowSum<short,double>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::SqrRowSum<unsigned short,double>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::SqrRowSum<unsigned char,double>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::SqrRowSum<unsigned char,int>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::ColumnSum<double,double>::operator ()(const unsigned char **,unsigned char *,int,int,int)
cv::opt_SSE4_1::`anonymous-namespace'::ColumnSum<double,double>::operator ()
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::ColumnSum<int,double>::operator ()(const unsigned char **,unsigned char *,int,int,int)
cv::opt_SSE4_1::`anonymous-namespace'::ColumnSum<int,double>::operator ()
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::ColumnSum<double,float>::operator ()(const unsigned char **,unsigned char *,int,int,int)
cv::opt_SSE4_1::`anonymous-namespace'::ColumnSum<double,float>::operator ()
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::ColumnSum<double,short>::operator ()(const unsigned char **,unsigned char *,int,int,int)
cv::opt_SSE4_1::`anonymous-namespace'::ColumnSum<double,short>::operator ()
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::ColumnSum<double,unsigned short>::operator ()(const unsigned char **,unsigned char *,int,int,int)
cv::opt_SSE4_1::`anonymous-namespace'::ColumnSum<double,unsigned short>::operator ()
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::ColumnSum<double,unsigned char>::operator ()(const unsigned char **,unsigned char *,int,int,int)
cv::opt_SSE4_1::`anonymous-namespace'::ColumnSum<double,unsigned char>::operator ()
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::RowSum<double,double>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::RowSum<float,double>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::RowSum<short,double>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::RowSum<int,int>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::RowSum<short,int>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::RowSum<unsigned short,double>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::RowSum<unsigned short,int>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::RowSum<unsigned char,double>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::RowSum<unsigned char,unsigned short>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::`anonymous-namespace'::RowSum<unsigned char,int>::operator ()(const unsigned char *,unsigned char *,int,int)
int __cdecl cv::opt_SSE4_1::FilterEngine__start(class cv::FilterEngine &,const class cv::Size_<int> &,const class cv::Size_<int> &,const class cv::Point_<int> &)
cv::opt_SSE4_1::FilterEngine__start
int __cdecl cv::opt_SSE4_1::FilterEngine__proceed(class cv::FilterEngine &,const unsigned char *,int,int,unsigned char *,int)
cv::opt_SSE4_1::FilterEngine__proceed
void __cdecl cv::opt_SSE4_1::FilterEngine__apply(class cv::FilterEngine &,const class cv::Mat &,class cv::Mat &,const class cv::Size_<int> &,const class cv::Point_<int> &)
int __cdecl cv::opt_SSE4_1::RowVec_8u32s::operator ()(const unsigned char *,unsigned char *,int,int) const
int __cdecl cv::opt_SSE4_1::SymmRowSmallVec_8u32s::operator ()(const unsigned char *,unsigned char *,int,int) const
cv::opt_SSE4_1::SymmColumnVec_32s8u::SymmColumnVec_32s8u
int __cdecl cv::opt_SSE4_1::SymmColumnVec_32s8u::operator ()(const unsigned char **,unsigned char *,int) const
cv::opt_SSE4_1::SymmColumnSmallVec_32s16s::SymmColumnSmallVec_32s16s
int __cdecl cv::opt_SSE4_1::SymmColumnSmallVec_32s16s::operator ()(const unsigned char **,unsigned char *,int) const
int __cdecl cv::opt_SSE4_1::RowVec_16s32f::operator ()(const unsigned char *,unsigned char *,int,int) const
cv::opt_SSE4_1::SymmColumnVec_32f16s::SymmColumnVec_32f16s
int __cdecl cv::opt_SSE4_1::SymmColumnVec_32f16s::operator ()(const unsigned char **,unsigned char *,int) const
int __cdecl cv::opt_SSE4_1::RowVec_32f::operator ()(const unsigned char *,unsigned char *,int,int) const
int __cdecl cv::opt_SSE4_1::SymmRowSmallVec_32f::operator ()(const unsigned char *,unsigned char *,int,int) const
cv::opt_SSE4_1::SymmColumnVec_32f::SymmColumnVec_32f
int __cdecl cv::opt_SSE4_1::SymmColumnVec_32f::operator ()(const unsigned char **,unsigned char *,int) const
cv::opt_SSE4_1::SymmColumnSmallVec_32f::SymmColumnSmallVec_32f
int __cdecl cv::opt_SSE4_1::SymmColumnSmallVec_32f::operator ()(const unsigned char **,unsigned char *,int) const
struct cv::Ptr<class cv::BaseRowFilter> __cdecl cv::opt_SSE4_1::getLinearRowFilter(int,int,const class cv::Mat &,int,int)
cv::opt_SSE4_1::getLinearRowFilter
struct cv::Ptr<class cv::BaseColumnFilter> __cdecl cv::opt_SSE4_1::getLinearColumnFilter(int,int,const class cv::Mat &,int,int,double,int)
cv::opt_SSE4_1::getLinearColumnFilter
void __cdecl cv::opt_SSE4_1::SymmColumnFilter<struct cv::opt_SSE4_1::Cast<double,double>,struct cv::opt_SSE4_1::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::ColumnFilter<struct cv::opt_SSE4_1::Cast<float,float>,struct cv::opt_SSE4_1::SymmColumnVec_32f>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::SymmColumnFilter<struct cv::opt_SSE4_1::Cast<float,float>,struct cv::opt_SSE4_1::SymmColumnVec_32f>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::SymmColumnFilter<struct cv::opt_SSE4_1::Cast<double,short>,struct cv::opt_SSE4_1::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::ColumnFilter<struct cv::opt_SSE4_1::Cast<float,short>,struct cv::opt_SSE4_1::SymmColumnVec_32f16s>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::SymmColumnFilter<struct cv::opt_SSE4_1::Cast<float,short>,struct cv::opt_SSE4_1::SymmColumnVec_32f16s>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::ColumnFilter<struct cv::opt_SSE4_1::Cast<int,short>,struct cv::opt_SSE4_1::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::SymmColumnFilter<struct cv::opt_SSE4_1::Cast<int,short>,struct cv::opt_SSE4_1::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::SymmColumnFilter<struct cv::opt_SSE4_1::Cast<double,unsigned short>,struct cv::opt_SSE4_1::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::SymmColumnFilter<struct cv::opt_SSE4_1::Cast<float,unsigned short>,struct cv::opt_SSE4_1::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::SymmColumnFilter<struct cv::opt_SSE4_1::Cast<double,unsigned char>,struct cv::opt_SSE4_1::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::SymmColumnFilter<struct cv::opt_SSE4_1::Cast<float,unsigned char>,struct cv::opt_SSE4_1::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::ColumnFilter<struct cv::opt_SSE4_1::Cast<float,float>,struct cv::opt_SSE4_1::SymmColumnSmallVec_32f>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::SymmColumnFilter<struct cv::opt_SSE4_1::Cast<float,float>,struct cv::opt_SSE4_1::SymmColumnSmallVec_32f>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::SymmColumnSmallFilter<struct cv::opt_SSE4_1::Cast<float,float>,struct cv::opt_SSE4_1::SymmColumnSmallVec_32f>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::ColumnFilter<struct cv::opt_SSE4_1::Cast<int,short>,struct cv::opt_SSE4_1::SymmColumnSmallVec_32s16s>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::SymmColumnFilter<struct cv::opt_SSE4_1::Cast<int,short>,struct cv::opt_SSE4_1::SymmColumnSmallVec_32s16s>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::SymmColumnSmallFilter<struct cv::opt_SSE4_1::Cast<int,short>,struct cv::opt_SSE4_1::SymmColumnSmallVec_32s16s>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::ColumnFilter<struct cv::opt_SSE4_1::FixedPtCastEx<int,unsigned char>,struct cv::opt_SSE4_1::SymmColumnVec_32s8u>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::SymmColumnFilter<struct cv::opt_SSE4_1::FixedPtCastEx<int,unsigned char>,struct cv::opt_SSE4_1::SymmColumnVec_32s8u>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::SymmColumnSmallFilter<struct cv::opt_SSE4_1::FixedPtCastEx<int,unsigned char>,struct cv::opt_SSE4_1::SymmColumnVec_32s8u>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::ColumnFilter<struct cv::opt_SSE4_1::Cast<double,double>,struct cv::opt_SSE4_1::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::ColumnFilter<struct cv::opt_SSE4_1::Cast<float,float>,struct cv::opt_SSE4_1::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::ColumnFilter<struct cv::opt_SSE4_1::Cast<double,short>,struct cv::opt_SSE4_1::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::ColumnFilter<struct cv::opt_SSE4_1::Cast<float,short>,struct cv::opt_SSE4_1::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::ColumnFilter<struct cv::opt_SSE4_1::Cast<double,unsigned short>,struct cv::opt_SSE4_1::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::ColumnFilter<struct cv::opt_SSE4_1::Cast<float,unsigned short>,struct cv::opt_SSE4_1::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::ColumnFilter<struct cv::opt_SSE4_1::Cast<double,unsigned char>,struct cv::opt_SSE4_1::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::ColumnFilter<struct cv::opt_SSE4_1::Cast<float,unsigned char>,struct cv::opt_SSE4_1::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::ColumnFilter<struct cv::opt_SSE4_1::FixedPtCastEx<int,unsigned char>,struct cv::opt_SSE4_1::ColumnNoVec>::operator ()(const unsigned char **,unsigned char *,int,int,int)
void __cdecl cv::opt_SSE4_1::RowFilter<double,double,struct cv::opt_SSE4_1::RowNoVec>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::RowFilter<float,double,struct cv::opt_SSE4_1::RowNoVec>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::RowFilter<float,float,struct cv::opt_SSE4_1::RowVec_32f>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::RowFilter<short,double,struct cv::opt_SSE4_1::RowNoVec>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::RowFilter<short,float,struct cv::opt_SSE4_1::RowVec_16s32f>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::RowFilter<unsigned short,double,struct cv::opt_SSE4_1::RowNoVec>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::RowFilter<unsigned short,float,struct cv::opt_SSE4_1::RowNoVec>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::RowFilter<unsigned char,double,struct cv::opt_SSE4_1::RowNoVec>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::RowFilter<unsigned char,float,struct cv::opt_SSE4_1::RowNoVec>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::RowFilter<unsigned char,int,struct cv::opt_SSE4_1::RowVec_8u32s>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::RowFilter<float,float,struct cv::opt_SSE4_1::SymmRowSmallVec_32f>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::SymmRowSmallFilter<float,float,struct cv::opt_SSE4_1::SymmRowSmallVec_32f>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::RowFilter<unsigned char,int,struct cv::opt_SSE4_1::SymmRowSmallVec_8u32s>::operator ()(const unsigned char *,unsigned char *,int,int)
void __cdecl cv::opt_SSE4_1::SymmRowSmallFilter<unsigned char,int,struct cv::opt_SSE4_1::SymmRowSmallVec_8u32s>::operator ()(const unsigned char *,unsigned char *,int,int)
cv::opt_SSE4_1::SymmColumnFilter<struct cv::opt_SSE4_1::Cast<float,float>,struct cv::opt_SSE4_1::SymmColumnVec_32f>::SymmColumnFilter
cv::opt_SSE4_1::SymmColumnFilter<struct cv::opt_SSE4_1::Cast<float,short>,struct cv::opt_SSE4_1::SymmColumnVec_32f16s>::SymmColumnFilter
cv::opt_SSE4_1::SymmColumnFilter<struct cv::opt_SSE4_1::Cast<int,short>,struct cv::opt_SSE4_1::ColumnNoVec>::SymmColumnFilter
cv::opt_SSE4_1::SymmColumnSmallFilter<struct cv::opt_SSE4_1::Cast<float,float>,struct cv::opt_SSE4_1::SymmColumnSmallVec_32f>::SymmColumnSmallFilter
cv::opt_SSE4_1::SymmColumnSmallFilter<struct cv::opt_SSE4_1::Cast<int,short>,struct cv::opt_SSE4_1::SymmColumnSmallVec_32s16s>::SymmColumnSmallFilter
cv::opt_SSE4_1::SymmColumnFilter<struct cv::opt_SSE4_1::FixedPtCastEx<int,unsigned char>,struct cv::opt_SSE4_1::SymmColumnVec_32s8u>::SymmColumnFilter
cv::opt_SSE4_1::SymmColumnSmallFilter<struct cv::opt_SSE4_1::FixedPtCastEx<int,unsigned char>,struct cv::opt_SSE4_1::SymmColumnVec_32s8u>::SymmColumnSmallFilter
cv::opt_SSE4_1::ColumnFilter<struct cv::opt_SSE4_1::Cast<double,double>,struct cv::opt_SSE4_1::ColumnNoVec>::ColumnFilter
cv::opt_SSE4_1::ColumnFilter<struct cv::opt_SSE4_1::Cast<float,float>,struct cv::opt_SSE4_1::ColumnNoVec>::ColumnFilter
cv::opt_SSE4_1::ColumnFilter<struct cv::opt_SSE4_1::Cast<double,short>,struct cv::opt_SSE4_1::ColumnNoVec>::ColumnFilter
cv::opt_SSE4_1::ColumnFilter<struct cv::opt_SSE4_1::Cast<float,short>,struct cv::opt_SSE4_1::ColumnNoVec>::ColumnFilter
cv::opt_SSE4_1::ColumnFilter<struct cv::opt_SSE4_1::Cast<double,unsigned short>,struct cv::opt_SSE4_1::ColumnNoVec>::ColumnFilter
cv::opt_SSE4_1::ColumnFilter<struct cv::opt_SSE4_1::Cast<float,unsigned short>,struct cv::opt_SSE4_1::ColumnNoVec>::ColumnFilter
cv::opt_SSE4_1::ColumnFilter<struct cv::opt_SSE4_1::Cast<double,unsigned char>,struct cv::opt_SSE4_1::ColumnNoVec>::ColumnFilter
cv::opt_SSE4_1::ColumnFilter<struct cv::opt_SSE4_1::Cast<float,unsigned char>,struct cv::opt_SSE4_1::ColumnNoVec>::ColumnFilter
cv::opt_SSE4_1::ColumnFilter<struct cv::opt_SSE4_1::FixedPtCastEx<int,unsigned char>,struct cv::opt_SSE4_1::ColumnNoVec>::ColumnFilter
cv::opt_SSE4_1::RowFilter<double,double,struct cv::opt_SSE4_1::RowNoVec>::RowFilter
cv::opt_SSE4_1::RowFilter<float,double,struct cv::opt_SSE4_1::RowNoVec>::RowFilter
cv::opt_SSE4_1::RowFilter<float,float,struct cv::opt_SSE4_1::RowVec_32f>::RowFilter
cv::opt_SSE4_1::RowFilter<short,double,struct cv::opt_SSE4_1::RowNoVec>::RowFilter
cv::opt_SSE4_1::RowFilter<short,float,struct cv::opt_SSE4_1::RowVec_16s32f>::RowFilter
cv::opt_SSE4_1::RowFilter<unsigned short,double,struct cv::opt_SSE4_1::RowNoVec>::RowFilter
cv::opt_SSE4_1::RowFilter<unsigned short,float,struct cv::opt_SSE4_1::RowNoVec>::RowFilter
cv::opt_SSE4_1::RowFilter<unsigned char,double,struct cv::opt_SSE4_1::RowNoVec>::RowFilter
cv::opt_SSE4_1::RowFilter<unsigned char,float,struct cv::opt_SSE4_1::RowNoVec>::RowFilter
cv::opt_SSE4_1::RowFilter<unsigned char,int,struct cv::opt_SSE4_1::RowVec_8u32s>::RowFilter
cv::opt_SSE4_1::SymmRowSmallFilter<float,float,struct cv::opt_SSE4_1::SymmRowSmallVec_32f>::SymmRowSmallFilter
cv::opt_SSE4_1::SymmRowSmallFilter<unsigned char,int,struct cv::opt_SSE4_1::SymmRowSmallVec_8u32s>::SymmRowSmallFilter
cv::opt_SSE4_1::ColumnFilter<struct cv::opt_SSE4_1::Cast<float,float>,struct cv::opt_SSE4_1::SymmColumnVec_32f>::ColumnFilter
cv::opt_SSE4_1::ColumnFilter<struct cv::opt_SSE4_1::Cast<float,short>,struct cv::opt_SSE4_1::SymmColumnVec_32f16s>::ColumnFilter
cv::opt_SSE4_1::ColumnFilter<struct cv::opt_SSE4_1::Cast<int,short>,struct cv::opt_SSE4_1::ColumnNoVec>::ColumnFilter
cv::opt_SSE4_1::SymmColumnFilter<struct cv::opt_SSE4_1::Cast<float,float>,struct cv::opt_SSE4_1::SymmColumnSmallVec_32f>::SymmColumnFilter
cv::opt_SSE4_1::SymmColumnFilter<struct cv::opt_SSE4_1::Cast<int,short>,struct cv::opt_SSE4_1::SymmColumnSmallVec_32s16s>::SymmColumnFilter
cv::opt_SSE4_1::ColumnFilter<struct cv::opt_SSE4_1::FixedPtCastEx<int,unsigned char>,struct cv::opt_SSE4_1::SymmColumnVec_32s8u>::ColumnFilter
cv::opt_SSE4_1::RowFilter<float,float,struct cv::opt_SSE4_1::SymmRowSmallVec_32f>::RowFilter
cv::opt_SSE4_1::RowFilter<unsigned char,int,struct cv::opt_SSE4_1::SymmRowSmallVec_8u32s>::RowFilter
cv::opt_SSE4_1::ColumnFilter<struct cv::opt_SSE4_1::Cast<float,float>,struct cv::opt_SSE4_1::SymmColumnSmallVec_32f>::ColumnFilter
cv::opt_SSE4_1::ColumnFilter<struct cv::opt_SSE4_1::Cast<int,short>,struct cv::opt_SSE4_1::SymmColumnSmallVec_32s16s>::ColumnFilter
int __cdecl cv::hal::LU32f(float *,unsigned __int64,int,float *,unsigned __int64,int)
int __cdecl cv::hal::LU64f(double *,unsigned __int64,int,double *,unsigned __int64,int)
bool __cdecl cv::hal::Cholesky32f(float *,unsigned __int64,int,float *,unsigned __int64,int)
bool __cdecl cv::hal::Cholesky64f(double *,unsigned __int64,int,double *,unsigned __int64,int)
int __cdecl cv::hal::QR32f(float *,unsigned __int64,int,int,int,float *,unsigned __int64,float *)
int __cdecl cv::hal::QR64f(double *,unsigned __int64,int,int,int,double *,unsigned __int64,double *)
void __cdecl cv::hal::opt_SSE4_1::add8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::add8s(const signed char *,unsigned __int64,const signed char *,unsigned __int64,signed char *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::add16u(const unsigned short *,unsigned __int64,const unsigned short *,unsigned __int64,unsigned short *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::add16s(const short *,unsigned __int64,const short *,unsigned __int64,short *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::add32s(const int *,unsigned __int64,const int *,unsigned __int64,int *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::add32f(const float *,unsigned __int64,const float *,unsigned __int64,float *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::add64f(const double *,unsigned __int64,const double *,unsigned __int64,double *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::sub8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::sub8s(const signed char *,unsigned __int64,const signed char *,unsigned __int64,signed char *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::sub16u(const unsigned short *,unsigned __int64,const unsigned short *,unsigned __int64,unsigned short *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::sub16s(const short *,unsigned __int64,const short *,unsigned __int64,short *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::sub32s(const int *,unsigned __int64,const int *,unsigned __int64,int *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::sub32f(const float *,unsigned __int64,const float *,unsigned __int64,float *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::sub64f(const double *,unsigned __int64,const double *,unsigned __int64,double *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::min8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::min8s(const signed char *,unsigned __int64,const signed char *,unsigned __int64,signed char *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::min16u(const unsigned short *,unsigned __int64,const unsigned short *,unsigned __int64,unsigned short *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::min16s(const short *,unsigned __int64,const short *,unsigned __int64,short *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::min32s(const int *,unsigned __int64,const int *,unsigned __int64,int *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::min32f(const float *,unsigned __int64,const float *,unsigned __int64,float *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::min64f(const double *,unsigned __int64,const double *,unsigned __int64,double *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::max8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::max8s(const signed char *,unsigned __int64,const signed char *,unsigned __int64,signed char *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::max16u(const unsigned short *,unsigned __int64,const unsigned short *,unsigned __int64,unsigned short *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::max16s(const short *,unsigned __int64,const short *,unsigned __int64,short *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::max32s(const int *,unsigned __int64,const int *,unsigned __int64,int *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::max32f(const float *,unsigned __int64,const float *,unsigned __int64,float *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::max64f(const double *,unsigned __int64,const double *,unsigned __int64,double *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::absdiff8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::absdiff8s(const signed char *,unsigned __int64,const signed char *,unsigned __int64,signed char *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::absdiff16u(const unsigned short *,unsigned __int64,const unsigned short *,unsigned __int64,unsigned short *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::absdiff16s(const short *,unsigned __int64,const short *,unsigned __int64,short *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::absdiff32s(const int *,unsigned __int64,const int *,unsigned __int64,int *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::absdiff32f(const float *,unsigned __int64,const float *,unsigned __int64,float *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::absdiff64f(const double *,unsigned __int64,const double *,unsigned __int64,double *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::or8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::xor8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::and8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::not8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int)
void __cdecl cv::hal::opt_SSE4_1::cmp8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int)
void __cdecl cv::hal::opt_SSE4_1::cmp8s(const signed char *,unsigned __int64,const signed char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int)
void __cdecl cv::hal::opt_SSE4_1::cmp16u(const unsigned short *,unsigned __int64,const unsigned short *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int)
void __cdecl cv::hal::opt_SSE4_1::cmp16s(const short *,unsigned __int64,const short *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int)
void __cdecl cv::hal::opt_SSE4_1::cmp32s(const int *,unsigned __int64,const int *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int)
void __cdecl cv::hal::opt_SSE4_1::cmp32f(const float *,unsigned __int64,const float *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int)
void __cdecl cv::hal::opt_SSE4_1::cmp64f(const double *,unsigned __int64,const double *,unsigned __int64,unsigned char *,unsigned __int64,int,int,int)
void __cdecl cv::hal::opt_SSE4_1::mul8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::opt_SSE4_1::mul8s(const signed char *,unsigned __int64,const signed char *,unsigned __int64,signed char *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::opt_SSE4_1::mul16u(const unsigned short *,unsigned __int64,const unsigned short *,unsigned __int64,unsigned short *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::opt_SSE4_1::mul16s(const short *,unsigned __int64,const short *,unsigned __int64,short *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::opt_SSE4_1::mul32f(const float *,unsigned __int64,const float *,unsigned __int64,float *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::opt_SSE4_1::mul32s(const int *,unsigned __int64,const int *,unsigned __int64,int *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::opt_SSE4_1::mul64f(const double *,unsigned __int64,const double *,unsigned __int64,double *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::opt_SSE4_1::div8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::opt_SSE4_1::div8s(const signed char *,unsigned __int64,const signed char *,unsigned __int64,signed char *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::opt_SSE4_1::div16u(const unsigned short *,unsigned __int64,const unsigned short *,unsigned __int64,unsigned short *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::opt_SSE4_1::div16s(const short *,unsigned __int64,const short *,unsigned __int64,short *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::opt_SSE4_1::div32s(const int *,unsigned __int64,const int *,unsigned __int64,int *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::opt_SSE4_1::div32f(const float *,unsigned __int64,const float *,unsigned __int64,float *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::opt_SSE4_1::div64f(const double *,unsigned __int64,const double *,unsigned __int64,double *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::opt_SSE4_1::addWeighted8u(const unsigned char *,unsigned __int64,const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::opt_SSE4_1::addWeighted8s(const signed char *,unsigned __int64,const signed char *,unsigned __int64,signed char *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::opt_SSE4_1::addWeighted16u(const unsigned short *,unsigned __int64,const unsigned short *,unsigned __int64,unsigned short *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::opt_SSE4_1::addWeighted16s(const short *,unsigned __int64,const short *,unsigned __int64,short *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::opt_SSE4_1::addWeighted32s(const int *,unsigned __int64,const int *,unsigned __int64,int *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::opt_SSE4_1::addWeighted32f(const float *,unsigned __int64,const float *,unsigned __int64,float *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::opt_SSE4_1::addWeighted64f(const double *,unsigned __int64,const double *,unsigned __int64,double *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::opt_SSE4_1::recip8u(const unsigned char *,unsigned __int64,unsigned char *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::opt_SSE4_1::recip8s(const signed char *,unsigned __int64,signed char *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::opt_SSE4_1::recip16u(const unsigned short *,unsigned __int64,unsigned short *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::opt_SSE4_1::recip16s(const short *,unsigned __int64,short *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::opt_SSE4_1::recip32s(const int *,unsigned __int64,int *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::opt_SSE4_1::recip32f(const float *,unsigned __int64,float *,unsigned __int64,int,int,const double *)
void __cdecl cv::hal::opt_SSE4_1::recip64f(const double *,unsigned __int64,double *,unsigned __int64,int,int,const double *)
cv::hal::opt_SSE4_1::cmp_loop
cv::BmpDecoder::readHeader
clrused >= 0 && clrused <= 256
cv::BmpDecoder::readData
((uint64)m_height * m_width * nch < (CV_BIG_UINT(1) << 30)) && "BMP reader implementation doesn't support large images >= 1Gb"
(size_t)sz < _src.size()
Invalid/unsupported mode
Windows bitmap (*.bmp;*.dib)
?~my
!Y?4
!I?u
!)?gX
?g^FT
?$"LT
?$"LT
m\r\t o
@C\v&
0Y\r@:i\r
9D)5:
@`|-A
PF SdF
 [@W:[
D]eV
"x@\f
z4I5z
cv::validateToInt
(size_t)valueInt == sz
E:\code\arcturus-xr\ext\opencv\miniopencv\modules\imgcodecs\src\bitstrm.cpp
cv::RBaseStream::readBlock
Unexpected end of input stream
cv::RBaseStream::open
buf.isContinuous()
cv::RBaseStream::setPos
isOpened() && pos >= 0
cv::RBaseStream::getPos
isOpened()
pos >= m_block_pos
pos >= 0
cv::RBaseStream::skip
bytes >= 0
m_current >= old
cv::RLByteStream::getByte
current < m_end
cv::RLByteStream::getBytes
count >= 0
cv::WBaseStream::writeBlock
cv::WLByteStream::putBytes
data && m_current && count >= 0
Raw image encoder error: 
cv::BaseImageEncoder::throwOnEror
out of memory
1.2.8
internal error: deflate stream corrupt
requested length does not fit in int
unexpected end of file
internal error: inflate stream corrupt
compressed data error
%s%s%s
 deflate 1.2.8 Copyright 1995-2013 Jean-loup Gailly and Mark Adler 
incorrect header check
unknown compression method
invalid window size
unknown header flags set
header crc mismatch
invalid block type
invalid stored block lengths
too many length or distance symbols
invalid code lengths set
invalid bit length repeat
invalid code -- missing end-of-block
invalid literal/lengths set
invalid distances set
invalid literal/length code
invalid distance code
invalid distance too far back
incorrect data check
incorrect length check
\t\t\n\n\v\v\f\f\f\f\r\r\r\r
\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r
 n;^
Qkkbal
3_L\n
>jm\r
Zjz\v
i]Wb
9a&g
MGiI
wn>Jj
#.zf
+o*7
Z* ,\t
H$6t
_~6\f
52F*
\t#jT$
\n=G\\vp
^6o}
[-&LMb#{'
)q\n>(
w+OQvr
\r}!b
R1h58
SKyu
)\ZEo^m/
ru&o
i8P/\f_
?(3w
wXR\r
H*0"ZOW
{kHw
)T`D
!AxU
l!;b\tF
:1X:
y9*O
kM`~
Vc0a
dQy/
lDa>
7~8A
C-Yn
gqr<
$/o|
f-=v
\rmj>zjZ
l6qnk
IiGM>nw
1A26b
i91k
ewh/?y
*5KS
\f6~_'
F*.f
1wsHp
-\n\v\G=
M8MF
Pe6^
#bML"
`F(>\nq-q
vQO+t
[h1R
XsBI
hPU3
^oEZ_
2%k_
w3Xc
[\n;g
/P8i
OZw3(?
Z"0*
fP~V
D`T\f
^GP~
b;!l
V_:X1:
NJ2"v
O*9y]
fu`z
/yQA
&]|v
need dictionary
stream end
file error
stream error
data error
insufficient memory
buffer error
incompatible version
 inflate 1.2.8 Copyright 1995-2013 Mark Adler 
GetFileInformationByHandleEx
SetFileInformationByHandle
InitializeConditionVariable
SleepConditionVariableCS
WakeAllConditionVariable
bad array new length
NO_ERROR
 (error code 
STWIN
Window_
glewInit failed: %s (%i)
OpenGL context creation failed: %s
OpenGL context creation failed: %s, (%d)
wglCreateContextAttribsARB extension is not supported on your environment
Could not create sharing-only OpenGL context: %s
WGL requires that OpenGL contexts being bound to a threadmust not be bound on any other thread. The OpenGL context you tried to bind is current on a different thread. We do not have aseamless, programmatic way around this yet.
, that: 
this: 
If3Q8
1:z8
9tzm
l&\n't
px]y
rlRN
K\fAd\rq
x$@#Q
IFEA
4I7-
WZTz-
YOQ=Nm}
(noLb5
`||-
87;y)5'
y\t|c
+e.w
Fv[Yu
=."6
!puhQ*
+p=I
GC$P
D<_|
),h2
5r?lt
9\nd;
):9ld
SAnT
=--E\nb
YT5K
v+W}
Pd#93-
I.S(ja
SY?gds
.text$di
.text$mn
.text$mn$00
.text$x
.text$yd
.idata$5
.00cfg
.CRT$XCA
.CRT$XCL
.CRT$XCU
.CRT$XCZ
.CRT$XDA
.CRT$XDZ
.CRT$XIA
.CRT$XIC
.CRT$XIZ
.CRT$XLA
.CRT$XLC
.CRT$XLD
.CRT$XLZ
.CRT$XPA
.CRT$XPZ
.CRT$XTA
.CRT$XTZ
.rdata
.rdata$T
.rdata$r
.rdata$zzzdbg
.rtc$IAA
.rtc$IZZ
.rtc$TAA
.rtc$TZZ
.tls
.tls$
.tls$ZZZ
.xdata
.xdata$x
.edata
.idata$2
.idata$3
.idata$4
.idata$6
.data
.data$r
.bss
.pdata
_RDATA
.rsrc$01
.rsrc$02
\fp\v`!
p09A
2\vp!
2\vp!
P09A
\fp\v0!
P09A
p09A
\np\t`
2\vp!
r\rp\f`\v0
r\rp\f`\v0
P09A
P09A
\fp\v`
\fp\v`
\rp\f`\v0
2\vp!
P09A
009A
P09A
2\vp!
R\rp\f`\v0
\fp\v`
R\rp\f`\v0
\rp\f`\v0
\rp\f`\v0
\rp\f`\v0
`09A
p\r`\f0
p09A
p\r`\fP\v0
p09A
P09A
2\v`!
P09A
p\r`\f0\vP
R\rp\f`\v0
R\rp\f`\v0
R\rp\f`\v0
009A
`!;\f
`09A
`09A
p09A
009A
009A
009A
009A
009A
009A
\fp\v`
2\v`!
P09A
P09A
009A
P09A
p\r`\fP\v0
\rp\f`\v0
p\r`\fP!
P09A
p09A
009A
`09A
2\vp!
p09A
r\rp\f`\v0
P09A
P09A
p09A
P09A
P09A
2\n0!
\np\t`
R\rp\f`\v0
\fp\v`!
R\rp\f`\v0
\fp\v`
p\r`\f0\vP
P09A
\rp\f`\v0
\rp\f`\v0
\rB\tp
\rB\tp
\rB\tp
\rB\tp
\rB\tp
\rp\f`\vP
p09A
p\r`\fP
009A
p\r`\fP
009A
\rp\f`
p\r`\f0
\fp\v`
009A
`09A
\rp\f`\v0
p09A
\np\t`
p09A
P09A
\rp\f`\v0
\fp\vP
\fp\v`!
\fp\v`
p09A
p09A
\rp\f`\v0
\fp\v`
p\r`\f0\vP
2\v`!
\fp\vP
P09A
\rp\f`\vP\n0
r\vp!
p\r`\fP
\fp\v`
009A
R\rp\f`\v0
`\r0\fP
\np\t`
\rp\f`\vP
p\r`\fP\v0
p\r`\fP\v0!
p\r`\f0\vP
\fp\v`
\rp\f`\v0
p\r0\fP!'
`\r0\fP!
\rp\f`\v0!
\rb\tp
\np\t`
\rp\f`\vP
\rp\f`\v0
\rB\tp
p09A
\fp\vP!
\fp\vP!
2\vp!
;\fe*4
P09A
`\r0\fP!D
;\fe*4
P09A
;\fe*4
P09A
;\fe*4
P09A
\np\t`
2\np!
`09A
p\r`\fP
`\r0\fP
p\r`\fP
\rp\f`\v0
\rp\f`\v0
P09A
P09A
P09A
\rp\f`\v0
\vp\n`\tP
\vp\n`\tP
p\r`\fP\v0
\vp\n`\t0
009A
\rp\f`\v0
\f0!v
p\r`\fP\v0
\rp\f`\v0
\fp\v`
\rp\f`\v0
\rB\tp
\rp\f`\v0
\rB\tp
2\vp!\r
P09A
\rp\f`\v0
\rB\tp
\rp\f`\v0
P09A
\np\t`
\fp\v`
\fp\v`
\np\t`
;\fe*4
P09A
\r0\fP!J
;\fe*4
P09A
;\fe*4
P09A
;\fe*4
P09A
\rp\f`\v0
R\rp\f`\v0
R\rp\f`\v0
\np\t`
p\r`\f0
\fp\v`
P09A
\fp\v`
\rp\f`\v0
\rp\f`\v0
P09A
\np\t`
\np\t`
\fp\vP
\np\t`
P09A
R\rp\f`\v0
\fp\v`
\rp\f`\v0
\rp\f`\v0
\np\t`
R\rp\f`\v0
P09A
p\r`\fP\v0
P09A
P09A
\fp\v`
\rp\f`\v0
\fp\v`
\fp\v`
\np\t0
\fp\v`
P09A
p\r`\fP\v0
P09A
P09A
\np\t`
\rp\f`\vP
\r`\f0
\rp\f`\v0
\rp\f`\v0
\rp\f`\v0
\fp\v`
p09A
\fp\v`
009A
P09A
p\r`\fP\v0
P09A
\rp\f`\vP
P09A
`\r0\fP!
p\r`\fP
p\r`\fP
\rp\f`\v0
\rp\f`\v0
\rp\f`\v0
\rp\f`\v0
\rp\f`\v0
2\vp!
009A
\fp\v`
P09A
\rp\f`\vP!
\fp\v`!
\fp\vP
P09A
`09A
P09A
\np\t`
R\vp!
R\vp!\r
P09A
r\v`!
P09A
R\v`!
0! \n
p09A
p09A
009A
P09A
P09A
009A
009A
009A
p09A
P09A
P09A
009A
p09A
\fp\v`
p09A
p09A
\vp09A
p09A
p09A
P09A
p\r`\f0\vP
r\rp\f`\v0
r\rp\f`\v0
\rp\f`\v0
p\r`\fP
P09A
p09A
\np\t`
p\r`\fP
p\r`\fP
\r0\fP
4\nU#
\fp\vP
\r0\fP
\np\t`
\np\t`
\np\t`
p09A
009A
009A
p09A
P09A
`09A
P09A
p09A
009A
009A
p09A
P09A
P09A
\fp\v`!
009A
p09A
`09A
p09A
P09A
P09A
p09A
p09A
P09A
`09A
009A
P09A
P09A
0!-\n
R\rp\f`\v0
\r`\fP\v0!
\fp\v`!
\fp\v`!
\fp\v`!
\fp\v`
009A
009A
p09A
R\vp!
P09A
`09A
P09A
009A
P09A
p09A
p\r`\fP\v0
P09A
P09A
p\r`\fP\v0!
P09A
P09A
P09A
P09A
P09A
009A
p09A
P09A
P09A
p09A
p09A
P09A
P09A
P09A
p09A
P09A
P09A
\rp\f`
\fp\v`
0!)\n
\np\t`
p\r`\fP\v0
009A
009A
009A
P09A
P09A
P09A
P09A
\np\t`
P09A
\np\t`
P09A
\vp\n`\tP
P09A
P09A
\np\t`
P09A
\np\t`
P09A
\vp\n`\tP
P09A
p\r`\fP
p\r`\fP
p\r`\fP
\np\t`
p\r`\fP
p\r`\fP
p\r`\fP
\np\t`
P09A
`09A
`09A
`09A
`09A
`09A
`09A
`09A
`09A
`09A
`09A
P09A
`!$\f
P09A
P09A
\vp\n`\t0
`\r0\fP
P09A
P!'\n
P09A
p09A
P09A
P09A
P09A
`09A
P09A
p09A
P09A
p09A
009A
p09A
009A
R\vp!
009A
p09A
\fp\v`
009A
\rp\f`\v0
\rp\f`\v0
P09A
P09A
P09A
P09A
009A
`09A
p09A
`09A
p09A
p09A
009A
0!4\n
\vp\n`
B\vp\n`
"\vp\n0
b\vp\n`
B\vp\n0
B\vp\n0
b\vp\n0
009A
p09A
P09A
\fp\vP
P09A
009A
P09A
\fP\v0!
\r`\fP\v0!)\f
p\r`\fP\v0!
p\r`\fP\v0
p\r`\fP\v0
\np\t`
\np\t0
\vp\n`\t0
P09A
P09A
\np\t`
009A
P09A
P09A
P09A
P09A
p\r`\fP\v0
p\r`\fP\v0
p\r`\fP\v0
p\r`\fP\v0
p\r`\fP\v0
009A
009A
009A
009A
009A
P09A
009A
009A
P09A
P09A
P09A
P09A
P09A
P09A
\np\t`
P09A
P09A
p\r`\fP\v0
009A
P09A
P09A
\rp\fP
P09A
P09A
P09A
P09A
P09A
P09A
P09A
P09A
\np\t`
p\r`\fP
%6t,
P09A
%6tB
P09A
P09A
P09A
P09A
P09A
009A
p\r`\fP
p\r`\fP
p\r`\fP
p\r`\fP
P09A
009A
009A
P09A
P09A
P09A
P09A
P09A
009A
009A
p\r`\fP
p\r`\fP\v0
009A
009A
p\r`\fP
p\r`\fP
p\r`\fP
p\r`\fP
p\r`\fP
009A
p\r`\fP
p\r`\fP
009A
p09A
p09A
p09A
p09A
p09A
p09A
`09A
\np\t`
009A
\np\t`
\np\t`
`09A
\np\t`
\np\t`
\np\t`
`09A
\np\t`
\np\t`
\np\t`
\np\t`
`09A
\np\t`
\np\t`
`09A
p\r`\f0\vP
009A
\vp\n`\tP
0!%\f
\np\t`
P!!\n
\np\t`
P!!\n
\np\t`
0!'\n
0!+\f
P09A
P09A
\r`\fP\v0!K
\rp\f`\vP!2
P09A
P09A
P09A
\fp\v`
\fp\v`
P09A
P09A
p\r`\fP\v0
`\rP\f0
p\r`\fP
P09A
R\f`!)
r\f`!0
R\fP!&
009A
009A
009A
`09A
`09A
`09A
\fp\v`
P09A
P09A
P09A
P09A
\np\t`
P09A
\np\t`
P09A
\vp\n`\tP
P09A
P09A
\np\t`
P09A
\np\t`
P09A
\vp\n`\tP
P09A
p\r`\fP
p\r`\fP
p\r`\fP
\np\t`
p\r`\fP
p\r`\fP
p\r`\fP
\np\t`
`09A
`09A
`09A
`09A
`09A
`09A
`09A
`09A
`09A
`09A
P09A
P09A
`09A
p09A
`09A
P09A
009A
P09A
P09A
P09A
009A
P09A
P09A
P09A
P09A
P09A
`09A
P09A
p09A
P09A
P09A
009A
009A
009A
009A
009A
009A
009A
\rp\f`! \n
`!.\n
\rP\f0! \n
\fP!!\n
`!K\n
`!N\n
p!(\n
\rp\f`\v0
p\r`\fP\v0!
0!#\n
0!(\f
\rp\fP!/\f
P!J\f
\r`\f0!8
\r`\f0!?
0!8\f
`\rP\f0
\r`\fP!+
p\r`\fP
P!9\f
p!(\n
P09A
009A
009A
p\r`\fP\v0
\np\t`
p\r`\fP
\rp\f`\vP!
P09A
P09A
009A
p\r`\fP
p\r`\fP
p\r`\fP
p\r`\fP
P09A
009A
P09A
p\r`\fP
p\r`\fP\v0
P09A
P09A
p\r`\fP
p\r`\fP
p\r`\fP
p\r`\fP
p\r`\fP
P09A
p\r`\fP
p\r`\fP
P09A
P09A
P09A
P09A
P09A
P09A
P09A
P09A
\np\t`
009A
\np\t`
\np\t`
P09A
\np\t`
\np\t`
\np\t`
P09A
\np\t`
\np\t`
\np\t`
\np\t`
P09A
\np\t`
\np\t`
P09A
009A
009A
009A
009A
009A
009A
009A
009A
009A
\fp\v`
p09A
009A
P09A
p09A
009A
2\vp!\n
\fp\v`
\rp\f`\v0\nP
2\v`!
2\n`!B
\fp\v`
`09A
p\r`\fP\v0
\rp\f`\v0
\rB\tp
ArcturusPerception.dll
??0Acceleration@ST@@QEAA@XZ
??0AccelerometerEvent@ST@@QEAA@AEBU01@@Z
??0AccelerometerEvent@ST@@QEAA@PEAUThat@01@@Z
??0AccelerometerEvent@ST@@QEAA@XZ
??0CSVFileWriter@ST@@QEAA@PEAUThat@01@@Z
??0CSVFileWriter@ST@@QEAA@W4OutputFormat@01@@Z
??0CaptureSession@ST@@QEAA@PEAUThat@01@@Z
??0CaptureSessionDelegate@ST@@QEAA@AEBU01@@Z
??0CaptureSessionDelegate@ST@@QEAA@XZ
??0CaptureSessionSensorInfo@ST@@QEAA@XZ
??0CaptureSessionSettings@ST@@QEAA@XZ
??0ColorFrame@ST@@QEAA@AEBU01@@Z
??0ColorFrame@ST@@QEAA@PEAUThat@01@@Z
??0ColorFrame@ST@@QEAA@XZ
??0ColorFrameContainer@PE@@QEAA@$$QEAU01@@Z
??0ColorFrameContainer@PE@@QEAA@AEBU01@@Z
??0ColorFrameContainer@PE@@QEAA@XZ
??0ConnectedSensorInfo@ST@@QEAA@XZ
??0DepthFrame@ST@@QEAA@AEBU01@@Z
??0DepthFrame@ST@@QEAA@PEAUThat@01@@Z
??0DepthFrame@ST@@QEAA@XZ
??0DepthFrameContainer@PE@@QEAA@$$QEAU01@@Z
??0DepthFrameContainer@PE@@QEAA@AEBU01@@Z
??0DepthFrameContainer@PE@@QEAA@XZ
??0DepthFromStereo@PE@@QEAA@PEAUThat@01@@Z
??0DepthFromStereo@PE@@QEAA@XZ
??0DepthFromStereoPreprocessor@PE@@QEAA@AEBV?$vector@UKBIntrinsics@ST@@V?$allocator@UKBIntrinsics@ST@@@std@@@std@@AEBV?$vector@UExtrinsics@ST@@V?$allocator@UExtrinsics@ST@@@std@@@3@MHHHH@Z
??0DepthFromStereoPreprocessor@PE@@QEAA@PEAUThat@01@@Z
??0DepthFromStereoPreprocessor@PE@@QEAA@XZ
??0Extrinsics@ST@@QEAA@AEBU01@@Z
??0Extrinsics@ST@@QEAA@PEAUThat@01@@Z
??0Extrinsics@ST@@QEAA@XZ
??0GyroscopeEvent@ST@@QEAA@AEBU01@@Z
??0GyroscopeEvent@ST@@QEAA@PEAUThat@01@@Z
??0GyroscopeEvent@ST@@QEAA@XZ
??0InfraredFrame@ST@@QEAA@AEBU01@@Z
??0InfraredFrame@ST@@QEAA@PEAUThat@01@@Z
??0InfraredFrame@ST@@QEAA@XZ
??0Intrinsics@ST@@QEAA@HHMMMMMMMMM@Z
??0Intrinsics@ST@@QEAA@XZ
??0KBIntrinsics@ST@@QEAA@AEBU01@@Z
??0KBIntrinsics@ST@@QEAA@PEAUThat@01@@Z
??0KBIntrinsics@ST@@QEAA@XZ
??0Matrix4@ST@@QEAA@AEBV?$array@M$0BA@@std@@@Z
??0Mesh@ST@@QEAA@AEBU01@@Z
??0Mesh@ST@@QEAA@PEAUThat@01@@Z
??0Mesh@ST@@QEAA@XZ
??0MeshSharedMemoryContainer@PE@@QEAA@XZ
??0MultiCameraColorFrame@ST@@QEAA@AEBU01@@Z
??0MultiCameraColorFrame@ST@@QEAA@PEAUThat@01@@Z
??0MultiCameraColorFrame@ST@@QEAA@XZ
??0MultiColorFrameContainer@PE@@QEAA@$$QEAU01@@Z
??0MultiColorFrameContainer@PE@@QEAA@AEBU01@@Z
??0MultiColorFrameContainer@PE@@QEAA@XZ
??0OCCFileWriter@ST@@QEAA@PEAUThat@01@@Z
??0OCCPlaybackSettings@CaptureSessionSettings@ST@@QEAA@XZ
??0OpenGLMesh@ST@@QEAA@PEAUThat@01@@Z
??0OpenGLMesh@ST@@QEAA@XZ
??0OpenGLTexture@ST@@QEAA@PEAUThat@01@@Z
??0PerceptionEngineInternalState@PE@@QEAA@PEAUThat@01@@Z
??0PerformanceMonitor@ST@@QEAA@PEAUThat@01@@Z
??0PerformanceMonitor@ST@@QEAA@XZ
??0PoseAndOpticalInertialState@ST@@QEAA@AEBU01@@Z
??0PoseAndOpticalInertialState@ST@@QEAA@PEAUThat@01@@Z
??0PoseAndOpticalInertialState@ST@@QEAA@XZ
??0PredictionContainer@PE@@QEAA@$$QEAU01@@Z
??0PredictionContainer@PE@@QEAA@AEBU01@@Z
??0PredictionContainer@PE@@QEAA@XZ
??0ProfilingFileLogger@ST@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEBD@Z
??0ProfilingFileLogger@ST@@QEAA@PEAUThat@01@@Z
??0RoomLayoutEstimation@PE@@QEAA@PEAUThat@01@@Z
??0RoomLayoutEstimation@PE@@QEAA@XZ
??0RotationRate@ST@@QEAA@XZ
??0ST_Intrinsics@@QEAA@XZ
??0ST_XRPose@@QEAA@XZ
??0ST_XRTrackingStatus@@QEAA@XZ
??0SharedMemoryBuffer@PE@@QEAA@PEAUThat@01@@Z
??0SharedMemoryBuffer@PE@@QEAA@W4InitializationMode@01@W4AccessType@01@W4SynchronizationMode@01@PEBD_K@Z
??0StructureCoreSettings@CaptureSessionSettings@ST@@QEAA@XZ
??0SystemWideActivity@PE@@QEAA@PEAUThat@01@@Z
??0SystemWideActivity@PE@@QEAA@PEBD@Z
??0SystemWideMutex@PE@@QEAA@PEAUThat@01@@Z
??0SystemWideMutex@PE@@QEAA@PEBD@Z
??0SystemWideMutexScopedLock@PE@@QEAA@PEAUSystemWideMutex@1@@Z
??0SystemWideMutexScopedLock@PE@@QEAA@PEAUThat@01@@Z
??0TimeCountDoNotUseDirectly@ST@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HN@Z
??0TimeCountDoNotUseDirectly@ST@@QEAA@PEAUThat@01@@Z
??0VisualInertialCalibration@ST@@QEAA@AEBU01@@Z
??0VisualInertialCalibration@ST@@QEAA@PEAUThat@01@@Z
??0VisualInertialCalibration@ST@@QEAA@XZ
??0WhiteBalanceGains@ST@@QEAA@AEBU01@@Z
??0WhiteBalanceGains@ST@@QEAA@PEAUThat@01@@Z
??0WhiteBalanceGains@ST@@QEAA@XZ
??0XRIPCClient@PE@@QEAA@PEAUThat@01@@Z
??0XRIPCClient@PE@@QEAA@V?$function@$$A6AXXZ@std@@@Z
??0XRIPCServer@PE@@QEAA@PEAUThat@01@@Z
??0XRPose@PE@@QEAA@XZ
??0XRSession@PE@@QEAA@PEAUThat@01@@Z
??0XRSession@PE@@QEAA@XZ
??0XRSessionSettings@PE@@QEAA@XZ
??0XRTrackingStatus@PE@@QEAA@XZ
??1AccelerometerEvent@ST@@QEAA@XZ
??1CSVFileWriter@ST@@QEAA@XZ
??1CaptureSessionDelegate@ST@@UEAA@XZ
??1ColorFrame@ST@@QEAA@XZ
??1ColorFrameContainer@PE@@QEAA@XZ
??1DepthFrame@ST@@QEAA@XZ
??1DepthFrameContainer@PE@@QEAA@XZ
??1DepthFromStereo@PE@@QEAA@XZ
??1DepthFromStereoPreprocessor@PE@@QEAA@XZ
??1Extrinsics@ST@@QEAA@XZ
??1GyroscopeEvent@ST@@QEAA@XZ
??1InfraredFrame@ST@@QEAA@XZ
??1KBIntrinsics@ST@@QEAA@XZ
??1Mesh@ST@@QEAA@XZ
??1MeshSharedMemoryContainer@PE@@QEAA@XZ
??1MultiCameraColorFrame@ST@@QEAA@XZ
??1MultiColorFrameContainer@PE@@QEAA@XZ
??1OpenGLMesh@ST@@QEAA@XZ
??1PerformanceMonitor@ST@@QEAA@XZ
??1PoseAndOpticalInertialState@ST@@QEAA@XZ
??1PredictionContainer@PE@@QEAA@XZ
??1ProfilingFileLogger@ST@@QEAA@XZ
??1SharedMemoryBuffer@PE@@QEAA@XZ
??1SystemWideActivity@PE@@QEAA@XZ
??1SystemWideMutex@PE@@QEAA@XZ
??1SystemWideMutexScopedLock@PE@@QEAA@XZ
??1TimeCountDoNotUseDirectly@ST@@QEAA@XZ
??1VisualInertialCalibration@ST@@QEAA@XZ
??1WhiteBalanceGains@ST@@QEAA@XZ
??1XRIPCClient@PE@@QEAA@XZ
??1XRSession@PE@@QEAA@XZ
??4Acceleration@ST@@QEAAAEAU01@$$QEAU01@@Z
??4Acceleration@ST@@QEAAAEAU01@AEBU01@@Z
??4AccelerometerEvent@ST@@QEAAAEAU01@AEBU01@@Z
??4CaptureSessionDelegate@ST@@QEAAAEAU01@AEBU01@@Z
??4CaptureSessionSample@ST@@QEAAAEAU01@AEBU01@@Z
??4CaptureSessionSensorInfo@ST@@QEAAAEAU01@$$QEAU01@@Z
??4CaptureSessionSensorInfo@ST@@QEAAAEAU01@AEBU01@@Z
??4CaptureSessionSettings@ST@@QEAAAEAU01@$$QEAU01@@Z
??4CaptureSessionSettings@ST@@QEAAAEAU01@AEBU01@@Z
??4ColorFrame@ST@@QEAAAEAU01@AEBU01@@Z
??4ColorFrameContainer@PE@@QEAAAEAU01@$$QEAU01@@Z
??4ColorFrameContainer@PE@@QEAAAEAU01@AEBU01@@Z
??4ConnectedSensorInfo@ST@@QEAAAEAU01@$$QEAU01@@Z
??4ConnectedSensorInfo@ST@@QEAAAEAU01@AEBU01@@Z
??4DepthFrame@ST@@QEAAAEAU01@AEBU01@@Z
??4DepthFrameContainer@PE@@QEAAAEAU01@$$QEAU01@@Z
??4DepthFrameContainer@PE@@QEAAAEAU01@AEBU01@@Z
??4Extrinsics@ST@@QEAAAEAU01@AEBU01@@Z
??4GyroscopeEvent@ST@@QEAAAEAU01@AEBU01@@Z
??4InfraredFrame@ST@@QEAAAEAU01@AEBU01@@Z
??4Intrinsics@ST@@QEAAAEAU01@AEBU01@@Z
??4KBIntrinsics@ST@@QEAAAEAU01@AEBU01@@Z
??4Matrix4@ST@@QEAAAEAU01@AEBU01@@Z
??4Mesh@ST@@QEAAAEAU01@AEBU01@@Z
??4MeshSharedMemoryContainer@PE@@QEAAAEAU01@AEBU01@@Z
??4MultiCameraColorFrame@ST@@QEAAAEAU01@AEBU01@@Z
??4MultiColorFrameContainer@PE@@QEAAAEAU01@$$QEAU01@@Z
??4MultiColorFrameContainer@PE@@QEAAAEAU01@AEBU01@@Z
??4OCCPlaybackSettings@CaptureSessionSettings@ST@@QEAAAEAU012@$$QEAU012@@Z
??4OCCPlaybackSettings@CaptureSessionSettings@ST@@QEAAAEAU012@AEBU012@@Z
??4PoseAndOpticalInertialState@ST@@QEAAAEAU01@AEBU01@@Z
??4PredictionContainer@PE@@QEAAAEAU01@$$QEAU01@@Z
??4PredictionContainer@PE@@QEAAAEAU01@AEBU01@@Z
??4RotationRate@ST@@QEAAAEAU01@$$QEAU01@@Z
??4RotationRate@ST@@QEAAAEAU01@AEBU01@@Z
??4ST_Intrinsics@@QEAAAEAU0@$$QEAU0@@Z
??4ST_Intrinsics@@QEAAAEAU0@AEBU0@@Z
??4ST_Matrix4@@QEAAAEAU0@$$QEAU0@@Z
??4ST_Matrix4@@QEAAAEAU0@AEBU0@@Z
??4ST_Vector2f@@QEAAAEAU0@$$QEAU0@@Z
??4ST_Vector2f@@QEAAAEAU0@AEBU0@@Z
??4ST_Vector3f@@QEAAAEAU0@$$QEAU0@@Z
??4ST_Vector3f@@QEAAAEAU0@AEBU0@@Z
??4ST_Vector4f@@QEAAAEAU0@$$QEAU0@@Z
??4ST_Vector4f@@QEAAAEAU0@AEBU0@@Z
??4ST_XRPerformanceMetrics@@QEAAAEAU0@$$QEAU0@@Z
??4ST_XRPerformanceMetrics@@QEAAAEAU0@AEBU0@@Z
??4ST_XRPose@@QEAAAEAU0@$$QEAU0@@Z
??4ST_XRPose@@QEAAAEAU0@AEBU0@@Z
??4ST_XRSessionSettings@@QEAAAEAU0@$$QEAU0@@Z
??4ST_XRSessionSettings@@QEAAAEAU0@AEBU0@@Z
??4ST_XRTrackingStatus@@QEAAAEAU0@$$QEAU0@@Z
??4ST_XRTrackingStatus@@QEAAAEAU0@AEBU0@@Z
??4SampleBuffer@ST@@QEAAAEAU01@$$QEAU01@@Z
??4SampleBuffer@ST@@QEAAAEAU01@AEBU01@@Z
??4StructureCoreSettings@CaptureSessionSettings@ST@@QEAAAEAU012@$$QEAU012@@Z
??4StructureCoreSettings@CaptureSessionSettings@ST@@QEAAAEAU012@AEBU012@@Z
??4VisualInertialCalibration@ST@@QEAAAEAU01@AEBU01@@Z
??4WhiteBalanceGains@ST@@QEAAAEAU01@AEBU01@@Z
??4XRPose@PE@@QEAAAEAU01@$$QEAU01@@Z
??4XRPose@PE@@QEAAAEAU01@AEBU01@@Z
??4XRSessionSettings@PE@@QEAAAEAU01@$$QEAU01@@Z
??4XRSessionSettings@PE@@QEAAAEAU01@AEBU01@@Z
??4XRTrackingStatus@PE@@QEAAAEAU01@$$QEAU01@@Z
??4XRTrackingStatus@PE@@QEAAAEAU01@AEBU01@@Z
??8Intrinsics@ST@@QEBA_NAEBU01@@Z
??9Intrinsics@ST@@QEBA_NAEBU01@@Z
??DMatrix4@ST@@QEBA?AU01@AEBU01@@Z
??DMatrix4@ST@@QEBA?AU?$Vector3@M@1@AEBU21@@Z
??DMatrix4@ST@@QEBA?AUVector4@1@AEBU21@@Z
??RDepthFrame@ST@@QEBAMHH@Z
??_7CaptureSessionDelegate@ST@@6B@
??_FCSVFileWriter@ST@@QEAAXXZ
??_FXRIPCClient@PE@@QEAAXXZ
?BlockForever@SharedMemoryBuffer@PE@@2KB
?Identity@Intrinsics@ST@@SA?BU12@HH@Z
?InvalidSize@SharedMemoryBuffer@PE@@2_KB
?Zero@Intrinsics@ST@@SA?BU12@XZ
?acceleration@AccelerometerEvent@ST@@QEBA?AUAcceleration@2@XZ
?acquireInputBuffer@SharedMemoryBuffer@PE@@QEAAPEBEK@Z
?acquireOutputBuffer@SharedMemoryBuffer@PE@@QEAAPEAE_KK@Z
?addSample@PerformanceMonitor@ST@@QEAAXN@Z
?addSampleWithTimestamp@PerformanceMonitor@ST@@QEAAXNN@Z
?angleBetweenPoses@Matrix4@ST@@QEBAMAEBU12@@Z
?applyExpensiveCorrection@DepthFrame@ST@@QEAA_NXZ
?areVisualLoggingWindowsShown@ST@@YA_NXZ
?arrivalTimestamp@AccelerometerEvent@ST@@QEBANXZ
?arrivalTimestamp@ColorFrame@ST@@QEBANXZ
?arrivalTimestamp@DepthFrame@ST@@QEBANXZ
?arrivalTimestamp@GyroscopeEvent@ST@@QEBANXZ
?arrivalTimestamp@InfraredFrame@ST@@QEBANXZ
?arrivalTimestamp@MultiCameraColorFrame@ST@@QEBANH@Z
?atRowCol@Matrix4@ST@@QEAAAEAMHH@Z
?atRowCol@Matrix4@ST@@QEBAAEBMHH@Z
?averageFpsFromFrameCount@PerformanceMonitor@ST@@QEBANXZ
?backgroundThreadHasResult@DepthFromStereo@PE@@QEBA_NXZ
?backgroundThreadIsProcessing@DepthFromStereo@PE@@QEBA_NXZ
?call_GetCurrentMetrics@XRIPCClient@PE@@QEAAXAEAUPerformanceMetrics@2@@Z
?call_GetCurrentPerceptionEngineInternalState@XRIPCClient@PE@@QEAAXAEAUPerceptionEngineInternalState@2@@Z
?call_GetDenseMap@XRIPCClient@PE@@QEAAXAEAUMesh@ST@@@Z
?call_GetGlobalSparseLineMap@XRIPCClient@PE@@QEAAXAEAUMesh@ST@@@Z
?call_GetNumericalProperty@XRIPCClient@PE@@QEAA?AW4XRStatus@2@W4XRNumericalProperty@2@PEAMAEAH@Z
?call_GetRoomLayout@XRIPCClient@PE@@QEAAXAEAUMesh@ST@@0@Z
?call_GetSparseMap@XRIPCClient@PE@@QEAAXAEAUMesh@ST@@0@Z
?call_IsRunning@XRIPCClient@PE@@QEAA_NXZ
?call_LastError@XRIPCClient@PE@@QEAAPEBDXZ
?call_PredictWorldPose@XRIPCClient@PE@@QEAAXW4XRFrameOfReference@2@NAEAUXRPose@2@@Z
?call_ReadLastDepthFrame@XRIPCClient@PE@@QEAA?AW4XRStatus@2@AEAUDepthFrame@ST@@N@Z
?call_ReadLastStereoPair@XRIPCClient@PE@@QEAA?AW4XRStatus@2@AEAUMultiCameraColorFrame@ST@@NW4RequestedImage@5@@Z
?call_ReadLastStereoPair@XRIPCClient@PE@@QEAAXNW4RequestedImage@ST@@P6AXW4XRStatus@2@PEBUMultiCameraColorFrame@4@PEAX@Z3@Z
?call_ReadLastVisibleFrame@XRIPCClient@PE@@QEAA?AW4XRStatus@2@AEAUColorFrame@ST@@N@Z
?call_ReadLastWorldPose@XRIPCClient@PE@@QEAA?AW4XRStatus@2@W4XRFrameOfReference@2@AEAUXRPose@2@N@Z
?call_ReadTrackingStatus@XRIPCClient@PE@@QEAAXAEAUXRTrackingStatus@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
?call_ReadWorldPoses@XRIPCClient@PE@@QEAAXW4XRFrameOfReference@2@P6AXAEBUXRPose@2@@Z@Z
?call_Reset@XRIPCClient@PE@@QEAAXXZ
?call_ResetPlaneDetection@XRIPCClient@PE@@QEAAXXZ
?call_SetDynamicOptions@XRIPCClient@PE@@QEAA?AW4XRStatus@2@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
?call_SetNumericalProperty@XRIPCClient@PE@@QEAA?AW4XRStatus@2@W4XRNumericalProperty@2@PEAMH@Z
?call_SetTrackerPaused@XRIPCClient@PE@@QEAAX_N@Z
?call_Start@XRIPCClient@PE@@QEAA_NAEBUXRSessionSettings@2@@Z
?call_Stop@XRIPCClient@PE@@QEAAXXZ
?call_UltraLowLatencyPredictWorldPose@XRIPCClient@PE@@QEAAXW4XRFrameOfReference@2@NAEAUXRPose@2@U42@@Z
?captureSessionDidDropPartiallySynchronizedSample@CaptureSessionDelegate@ST@@UEAAXPEAUCaptureSession@2@AEBUCaptureSessionSample@2@@Z
?captureSessionDidOutputEarlySample@CaptureSessionDelegate@ST@@UEAAXPEAUCaptureSession@2@AEBUCaptureSessionSample@2@@Z
?captureSessionEventDidOccur@CaptureSessionDelegate@ST@@UEAAXPEAUCaptureSession@2@W4CaptureSessionEventId@2@@Z
?cbcrData@ColorFrame@ST@@QEBAPEBEXZ
?cbcrSize@ColorFrame@ST@@QEBA_KXZ
?cleanGLContextIfNeededAndMakeSureThreadsAreFinished@DepthFromStereo@PE@@QEAAXXZ
?clear@MeshSharedMemoryContainer@PE@@QEAAXXZ
?closestRoundQVGALikeIntrinsics@Intrinsics@ST@@QEBA?AU12@XZ
?connectCallbacksInterface@DepthFromStereo@PE@@QEAAXPEAVIDepthAugmentedPassthroughCallbacks@2@@Z
?connectToServer@XRSession@PE@@QEAA?AW4XRStatus@2@AEBV?$function@$$A6AXXZ@std@@@Z
?convertDepthToRgba@DepthFrame@ST@@QEBAPEBEXZ
?convertDepthToUShortInMillimeters@DepthFrame@ST@@QEBAPEBGXZ
?convertKBToPH@MultiCameraColorFrame@ST@@QEBAX_N0N00@Z
?copyFromRawData@Mesh@ST@@QEAAXHPEBU?$Vector3@M@2@00PEBU?$Vector2@M@2@HPEBI@Z
?copyFullResRectifiedRGBATextureTo@DepthFromStereoPreprocessor@PE@@QEAAXII@Z
?copyLinesFromRawData@Mesh@ST@@QEAAXHPEBU?$Vector3@M@2@@Z
?copyRawTextureToTexture@DepthFromStereoPreprocessor@PE@@QEAAXIIHHHH@Z
?copyRectificationMesh@ColorFrame@ST@@QEBAXAEAUMesh@2@@Z
?createColorFrameFromRawData@ST@@YA?AUColorFrame@1@PEBE_K1N@Z
?createDirectories@ST@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
?createMCCFFromRawYUYVBuffer@DepthFromStereo@PE@@QEAAXAEAUMultiCameraColorFrame@ST@@PEAEHHNQEAUIntrinsics@4@QEAUKBIntrinsics@4@QEAUExtrinsics@4@QEAUMatrix4@4@_N@Z
?createMultiCameraColorFrame@ST@@YAXAEAUMultiCameraColorFrame@1@HHHPEBUSampleBuffer@1@PEBDNH@Z
?createMultiCameraColorFrameWithMetadata@ST@@YAXAEAUMultiCameraColorFrame@1@HPEBUIntrinsics@1@PEBUKBIntrinsics@1@PEBUExtrinsics@1@PEBM4PEBUWhiteBalanceGains@1@PEBUSampleBuffer@1@PEBDPEBN88H@Z
?createRectifiedDownsampledMultiCameraColorFrameWithMetadata@DepthFromStereoPreprocessor@PE@@QEAAXAEAUMultiCameraColorFrame@ST@@HPEBM1PEBUWhiteBalanceGains@4@PEBN33H@Z
?createdProfilingFolder@ST@@YAPEBDXZ
?currentTime@XRSession@PE@@SANXZ
?data@InfraredFrame@ST@@QEBAPEBGXZ
?debug_dumpToConsole@MeshSharedMemoryContainer@PE@@QEBAXPEBD@Z
?depthInMeters@DepthFrame@ST@@QEBAPEBMXZ
?depthInMillimeters@DepthFrame@ST@@QEBAPEBMXZ
?deserializeFromSharedMemory@ColorFrame@ST@@QEAA_KPEBE_KW4Ownership@2@@Z
?deserializeFromSharedMemory@DepthFrame@ST@@QEAA_KPEBE_KW4Ownership@2@@Z
?deserializeFromSharedMemory@MultiCameraColorFrame@ST@@QEAA_KPEBE_KW4Ownership@2@@Z
?destroy@DepthFromStereo@PE@@QEAAXXZ
?destroyGL@DepthFromStereoPreprocessor@PE@@QEAAXXZ
?deviceId@AccelerometerEvent@ST@@QEBA?AW4IMUDeviceId@2@XZ
?deviceId@GyroscopeEvent@ST@@QEBA?AW4IMUDeviceId@2@XZ
?disconnectFromServer@XRSession@PE@@QEAA?AW4XRStatus@2@XZ
?downsample2x@ColorFrame@ST@@QEAAXAEAU12@_N@Z
?downsample4x4InPlace@ColorFrame@ST@@QEAAX_N@Z
?downsample4x4InPlace@MultiCameraColorFrame@ST@@QEAAX_N@Z
?downsampleColorFrames2x@MultiCameraColorFrame@ST@@QEBAXAEAU12@_N@Z
?dumpMCCFToPng@DepthFromStereo@PE@@QEAAXAEBUMultiCameraColorFrame@ST@@PEBD@Z
?dumpYUYVToPng@DepthFromStereo@PE@@QEAAXPEBE_K1H@Z
?elapsedMsecs@TimeCountDoNotUseDirectly@ST@@QEBANAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
?elapsedMsecsNoPrint@TimeCountDoNotUseDirectly@ST@@QEBANXZ
?endOfExposureTimestamp@ColorFrame@ST@@QEBANXZ
?endOfExposureTimestamp@MultiCameraColorFrame@ST@@QEBANH@Z
?endOfPreprocessingTimestamp@ColorFrame@ST@@QEBANXZ
?endOfPreprocessingTimestamp@MultiCameraColorFrame@ST@@QEBANH@Z
?enqueueAllDataForFullProcessing@DepthFromStereo@PE@@QEAAXAEBUMultiCameraColorFrame@ST@@AEBUMatrix4@4@H11@Z
?enqueueGLTextureForUndistortAndRectification@DepthFromStereoPreprocessor@PE@@QEAAXII@Z
?enqueueMCCFDataAndPoseForProcessing@DepthFromStereo@PE@@QEAAXAEBUMultiCameraColorFrame@ST@@AEBUMatrix4@4@H@Z
?enqueuePoseDataForWarping@DepthFromStereo@PE@@QEAAXAEBUMatrix4@ST@@AEBM00@Z
?estimateClockOffset@ClockSynchronizerToHost@ST@@QEAAXXZ
?extrapolatePose@Matrix4@ST@@QEBA?AU12@AEAU?$Vector3@M@2@000N@Z
?fillExternalStereoCalibrationData@VisualInertialCalibration@ST@@QEAAXQEAUIntrinsics@2@QEAUKBIntrinsics@2@AEAUExtrinsics@2@@Z
?fillFrom@Intrinsics@ST@@QEAAXW4FillingStrategy@12@AEBU12@HH@Z
?fillRenderingInfoFromStereoRectificationData@DepthFromStereo@PE@@QEAAXAEAUMeshRenderingInfo@12@@Z
?finalizeWriting@CSVFileWriter@ST@@QEAAXXZ
?firstCameraFromCameraExtrinsic@ColorFrame@ST@@QEBA?AUMatrix4@2@XZ
?firstCameraFromCameraExtrinsic@MultiCameraColorFrame@ST@@QEBA?AUMatrix4@2@H@Z
?firstCameraFromRectifiedCameraExtrinsic@ColorFrame@ST@@QEBA?AUMatrix4@2@XZ
?firstCameraRawFromFirstCameraRectified@MultiCameraColorFrame@ST@@QEBA?AUMatrix4@2@XZ
?floatEquals@ST@@YA_NMM@Z
?formattedStringFromLocaltime@ST@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV23@@Z
?fromExtrinsics@Matrix4@ST@@QEAAXMMMMMMM@Z
?fromRotationVector@Matrix4@ST@@QEAAXAEBU?$Vector3@M@2@@Z
?getBlueGain@WhiteBalanceGains@ST@@QEBAMXZ
?getColorFrame@MultiCameraColorFrame@ST@@QEBA?AUColorFrame@2@H@Z
?getCurrentMetrics@XRSession@PE@@QEAA?AW4XRStatus@2@AEAUPerformanceMetrics@2@@Z
?getCurrentPerceptionEngineInternalState@XRSession@PE@@QEAA?AW4XRStatus@2@AEAUPerceptionEngineInternalState@2@@Z
?getCx@KBIntrinsics@ST@@QEBAMXZ
?getCy@KBIntrinsics@ST@@QEBAMXZ
?getDenseMap@XRSession@PE@@QEBA?AW4XRStatus@2@AEAUMesh@ST@@@Z
?getFx@KBIntrinsics@ST@@QEBAMXZ
?getFy@KBIntrinsics@ST@@QEBAMXZ
?getGlobalSparseLineMap@XRSession@PE@@QEBA?AW4XRStatus@2@AEAUMesh@ST@@@Z
?getGreenGain@WhiteBalanceGains@ST@@QEBAMXZ
?getGroundPlaneEquationInWorld@RoomLayoutEstimation@PE@@QEAA?AUVector4@ST@@XZ
?getHeight@KBIntrinsics@ST@@QEBAHXZ
?getK1@KBIntrinsics@ST@@QEBAMXZ
?getK2@KBIntrinsics@ST@@QEBAMXZ
?getK3@KBIntrinsics@ST@@QEBAMXZ
?getK4@KBIntrinsics@ST@@QEBAMXZ
?getNumberOfCameras@MultiCameraColorFrame@ST@@QEBAHXZ
?getNumericalProperty@XRSession@PE@@QEAA?AW4XRStatus@2@W4XRNumericalProperty@2@AEAH@Z
?getNumericalProperty@XRSession@PE@@QEAA?AW4XRStatus@2@W4XRNumericalProperty@2@AEAM@Z
?getNumericalProperty@XRSession@PE@@QEAA?AW4XRStatus@2@W4XRNumericalProperty@2@AEA_N@Z
?getNumericalProperty@XRSession@PE@@QEAA?AW4XRStatus@2@W4XRNumericalProperty@2@PEAMAEAH@Z
?getPhToKbFocalLengthMultiplier@DepthFromStereo@PE@@QEBAMXZ
?getQw@Extrinsics@ST@@QEBAMXZ
?getQx@Extrinsics@ST@@QEBAMXZ
?getQy@Extrinsics@ST@@QEBAMXZ
?getQz@Extrinsics@ST@@QEBAMXZ
?getRawCameraFromRectifiedCamera@DepthFromStereoPreprocessor@PE@@QEAA?AUMatrix4@ST@@H@Z
?getRawLeftCameraFromRectifiedLeftCamera@RoomLayoutEstimation@PE@@QEAA?AUMatrix4@ST@@AEBUMultiCameraColorFrame@4@@Z
?getRectifiedPHIntrinsics@DepthFromStereoPreprocessor@PE@@QEAA?AUIntrinsics@ST@@XZ
?getRedGain@WhiteBalanceGains@ST@@QEBAMXZ
?getRoomLayout@XRSession@PE@@QEAA?AW4XRStatus@2@AEAUMesh@ST@@0@Z
?getSparseMap@XRSession@PE@@QEBA?AW4XRStatus@2@AEAUMesh@ST@@0@Z
?getTimestampNow@ST@@YANXZ
?getTx@Extrinsics@ST@@QEBAMXZ
?getTy@Extrinsics@ST@@QEBAMXZ
?getTz@Extrinsics@ST@@QEBAMXZ
?getWidth@KBIntrinsics@ST@@QEBAHXZ
?glProjectionMatrix@ColorFrame@ST@@QEBA?AUMatrix4@2@XZ
?glProjectionMatrix@DepthFrame@ST@@QEBA?AUMatrix4@2@XZ
?hasNan@Matrix4@ST@@QEBA_NXZ
?hasPerVertexColors@Mesh@ST@@QEBA_NXZ
?hasPerVertexNormals@Mesh@ST@@QEBA_NXZ
?hasPerVertexUVTextureCoords@Mesh@ST@@QEBA_NXZ
?hasSameDistortionAs@Intrinsics@ST@@QEBA_NAEBU12@@Z
?height@ColorFrame@ST@@QEBAHXZ
?height@DepthFrame@ST@@QEBAHXZ
?height@InfraredFrame@ST@@QEBAHXZ
?height@MultiCameraColorFrame@ST@@QEBAHH@Z
?hideAllVisualLoggingWindows@ST@@YAXXZ
?hideVisualLoggingWindow@ST@@YAXH@Z
?identity@Matrix4@ST@@SA?AU12@XZ
?init@DepthFromStereo@PE@@QEAAX_N@Z
?initialize@OpenGLMesh@ST@@QEAAXPEAUWindowsOpenGLContextWrapper@@@Z
?initialize@SharedMemoryBuffer@PE@@QEAA_NXZ
?initialize@XRIPCClient@PE@@QEAA_NXZ
?initializeVisualLogging@ST@@YAXXZ
?interpolateBetweenPoses@Matrix4@ST@@QEBA?AU12@NAEBU12@@Z
?intrinsics@ColorFrame@ST@@QEBA?BUIntrinsics@2@XZ
?intrinsics@DepthFrame@ST@@QEBA?BUIntrinsics@2@XZ
?intrinsics@InfraredFrame@ST@@QEBA?BUIntrinsics@2@XZ
?inversed@Matrix4@ST@@QEBA?AU12@XZ
?inverted@Intrinsics@ST@@QEAA?AU12@XZ
?isApprox@Matrix4@ST@@QEBA_NAEBU12@@Z
?isConnectedToServer@XRSession@PE@@QEBA_NXZ
?isInitialized@SharedMemoryBuffer@PE@@QEBA_NXZ
?isRegisteredTo@DepthFrame@ST@@QEBA_NAEBUColorFrame@2@@Z
?isRunningInAnotherProcess@SystemWideActivity@PE@@QEBA_NXZ
?isRunningInAnyProcess@SystemWideActivity@PE@@QEBA_NXZ
?isRunningInThisProcess@SystemWideActivity@PE@@QEBA_NXZ
?isSupportedOnThisCpu@DepthFromStereo@PE@@SA_NXZ
?isTheServiceProcessCurrentlyRunning@XRSession@PE@@SA_NXZ
?isThereASessionRunningInAnotherProcess@XRSession@PE@@SA_NXZ
?isThereASessionRunningInAnyProcess@XRSession@PE@@SA_NXZ
?isTrackingRunning@XRSession@PE@@QEBA_NXZ
?isValid@ColorFrame@ST@@QEBA_NXZ
?isValid@DepthFrame@ST@@QEBA_NXZ
?isValid@InfraredFrame@ST@@QEBA_NXZ
?isValid@Intrinsics@ST@@QEBA_NXZ
?isValid@MultiCameraColorFrame@ST@@QEBA_NH@Z
?isValid@XRPose@PE@@QEBA_NXZ
?isZero@Matrix4@ST@@QEBA_NXZ
?k1k2k3p1p2AreZero@Intrinsics@ST@@QEBA_NXZ
?k3p1p2AreZero@Intrinsics@ST@@QEBA_NXZ
?lastSessionError@XRSession@PE@@QEBAPEBDXZ
?lock@SystemWideMutex@PE@@QEAAXXZ
?lookAt@Matrix4@ST@@SA?AU12@AEBU?$Vector3@M@2@00@Z
?maxPeriod@PerformanceMonitor@ST@@QEBANXZ
?maxSizeOfContainerInBytes@ColorFrameContainer@PE@@SA_KAEBUColorFrame@ST@@@Z
?maxSizeOfContainerInBytes@DepthFrameContainer@PE@@SA_KAEBUDepthFrame@ST@@@Z
?maxSizeOfContainerInBytes@PredictionContainer@PE@@SA_KAEBV?$vector@UTrackerPrediction@PE@@V?$allocator@UTrackerPrediction@PE@@@std@@@std@@@Z
?maxSizeOfSerializedContainerInBytes@MultiColorFrameContainer@PE@@SA_KAEBUMultiCameraColorFrame@ST@@HW4RequestedImage@4@@Z
?maxValue@PerformanceMonitor@ST@@QEBANXZ
?meanPeriod@PerformanceMonitor@ST@@QEBANXZ
?meanValue@PerformanceMonitor@ST@@QEBANXZ
?meshFaces@Mesh@ST@@QEBAPEBIH@Z
?meshLines@Mesh@ST@@QEBAPEBIH@Z
?meshPerVertexColors@Mesh@ST@@QEBAPEBU?$Vector3@M@2@H@Z
?meshPerVertexNormals@Mesh@ST@@QEBAPEBU?$Vector3@M@2@H@Z
?meshPerVertexUVTextureCoords@Mesh@ST@@QEBAPEBU?$Vector2@M@2@H@Z
?meshVertices@Mesh@ST@@QEBAPEBU?$Vector3@M@2@H@Z
?minPeriod@PerformanceMonitor@ST@@QEBANXZ
?minValue@PerformanceMonitor@ST@@QEBANXZ
?nan@Matrix4@ST@@SA?AU12@XZ
?numSamples@PerformanceMonitor@ST@@QEBAHXZ
?numberOfMeshFaces@Mesh@ST@@QEBAHH@Z
?numberOfMeshLines@Mesh@ST@@QEBAHH@Z
?numberOfMeshVertices@Mesh@ST@@QEBAHH@Z
?numberOfMeshes@Mesh@ST@@QEBAHXZ
?p1p2AreZero@Intrinsics@ST@@QEBA_NXZ
?path@CSVFileWriter@ST@@QEBAPEBDXZ
?pauseTracking@XRSession@PE@@QEBA?AW4XRStatus@2@XZ
?periodOfLastSample@PerformanceMonitor@ST@@QEBANXZ
?persistXRSessionSettings@XRSessionSettings@PE@@QEAAXXZ
?predictWorldFromCameraPose@XRSession@PE@@QEAA?AW4XRStatus@2@W4XRFrameOfReference@2@NAEAUXRPose@2@@Z
?prepareFrame@PE@@YAXPEAUMultiCameraColorFrame@ST@@W4FramePreparationStrategy@1@N0_N2@Z
?presentationTimestamp@ColorFrame@ST@@QEBANXZ
?printf@ProfilingFileLogger@ST@@QEAAXPEBDZZ
?projection@Matrix4@ST@@SA?AU12@MMMMW4Handedness@2@@Z
?provideFrameAndPose@RoomLayoutEstimation@PE@@QEAAXAEBUMultiCameraColorFrame@ST@@AEBUMatrix4@4@@Z
?rawFromRectified@ColorFrame@ST@@QEBA?AUMatrix4@2@XZ
?readByte@SharedMemoryBuffer@PE@@QEAA_NAEAEK@Z
?readData@SharedMemoryBuffer@PE@@QEAA_KPEAE_KK@Z
?readFromBufferAndAdvance@PE@@YA_KAEAPEBEAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
?readFromBufferAndAdvance@PE@@YA_KAEAPEBE_KAEAUColorFrameContainer@1@W4Ownership@ST@@@Z
?readFromBufferAndAdvance@PE@@YA_KAEAPEBE_KAEAUDepthFrameContainer@1@W4Ownership@ST@@@Z
?readFromBufferAndAdvance@PE@@YA_KAEAPEBE_KAEAUMeshSharedMemoryContainer@1@@Z
?readFromBufferAndAdvance@PE@@YA_KAEAPEBE_KAEAUMultiColorFrameContainer@1@W4Ownership@ST@@@Z
?readFromBufferAndAdvance@PE@@YA_KAEAPEBE_KAEAUPerformanceMetrics@1@@Z
?readFromBufferAndAdvance@PE@@YA_KAEAPEBE_KAEAUPredictionContainer@1@@Z
?readFromBufferAndAdvance@PE@@YA_KAEAPEBE_KAEAUXRTrackingStatus@1@@Z
?readFromFile@Mesh@ST@@QEAA_NPEBD@Z
?readFromJson@VisualInertialCalibration@ST@@QEAA_NPEBD0@Z
?readInteger@SharedMemoryBuffer@PE@@QEAA_NAEAHK@Z
?readLastDepthFrame@XRSession@PE@@QEAA?AW4XRStatus@2@AEAUDepthFrame@ST@@N@Z
?readLastStereoPair@XRSession@PE@@QEAA?AW4XRStatus@2@AEAUMultiCameraColorFrame@ST@@NW4RequestedImage@5@@Z
?readLastStereoPairWithoutCopy@XRSession@PE@@QEAAXNW4RequestedImage@ST@@P6AXW4XRStatus@2@PEBUMultiCameraColorFrame@4@PEAX@Z3@Z
?readLastVisibleFrame@XRSession@PE@@QEAA?AW4XRStatus@2@AEAUColorFrame@ST@@N@Z
?readLastWorldFromCameraPose@XRSession@PE@@QEAA?AW4XRStatus@2@W4XRFrameOfReference@2@AEAUXRPose@2@N@Z
?readPngImage@ST@@YAXPEBDPEAPEAEAEAH2@Z
?readRawDataAndAdvance@PE@@YA_KAEAPEBEPEAX_K@Z
?readSavedXRSessionSettings@XRSessionSettings@PE@@QEAAXXZ
?readTrackingStatus@XRSession@PE@@QEAA?AW4XRStatus@2@AEAUXRTrackingStatus@2@PEBD@Z
?readWorldFromCameraPoses@XRSession@PE@@QEAA?AW4XRStatus@2@W4XRFrameOfReference@2@P6AXAEBUXRPose@2@@Z@Z
?rectifiedIntrinsics@ColorFrame@ST@@QEBA?BUIntrinsics@2@XZ
?release@SharedMemoryBuffer@PE@@QEAA_NXZ
?releaseInputBuffer@SharedMemoryBuffer@PE@@QEAAXPEBE@Z
?releaseOutputBuffer@SharedMemoryBuffer@PE@@QEAAXPEAE@Z
?reset@RoomLayoutEstimation@PE@@QEAAXXZ
?resetPlaneDetection@XRSession@PE@@QEAA?AW4XRStatus@2@XZ
?resetTracking@XRSession@PE@@QEAA?AW4XRStatus@2@XZ
?resolveSmartPath@ST@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV23@@Z
?resumeTracking@XRSession@PE@@QEBA?AW4XRStatus@2@XZ
?rgbData@ColorFrame@ST@@QEBAPEBEXZ
?rgbSize@ColorFrame@ST@@QEBA_KXZ
?rotated@Matrix4@ST@@QEBA?AU12@AEBU?$Vector3@M@2@@Z
?rotated@Matrix4@ST@@QEBA?AU12@AEBUVector4@2@@Z
?rotationAsQuaternion@Matrix4@ST@@QEBA?AUVector4@2@XZ
?rotationAsZYXEuler@Matrix4@ST@@QEBA?AU?$Vector3@M@2@XZ
?rotationOnly@Matrix4@ST@@QEBA?AU12@XZ
?rotationRate@GyroscopeEvent@ST@@QEBA?AURotationRate@2@XZ
?rvecBetweenPoses@Matrix4@ST@@QEBA?AU?$Vector3@M@2@AEBU12@@Z
?samplingPeriodInSeconds@PerformanceMonitor@ST@@QEBANXZ
?saveImageToPngFile@ColorFrame@ST@@QEBAXPEBD@Z
?saveImageToPngFile@InfraredFrame@ST@@QEBAXPEBD@Z
?scaled@Matrix4@ST@@QEBA?AU12@MMM@Z
?serializeToSharedMemory@ColorFrame@ST@@QEBA_KPEAE_KW4RequestedImage@2@@Z
?serializeToSharedMemory@DepthFrame@ST@@QEBA_KPEAE_KW4RequestedImage@2@@Z
?serializeToSharedMemory@MultiCameraColorFrame@ST@@QEBA_KPEAE_KHW4RequestedImage@2@@Z
?setAccelEvent@AccelerometerEvent@ST@@QEAAXNNNNPEBDN@Z
?setAppUsageHint@XRSession@PE@@QEAA?AW4XRStatus@2@W4XRAppUsageHint@2@@Z
?setConsoleLoggingToWriteToFile@ST@@YAX_N@Z
?setConsoleLoggingVerbosity@ST@@YA_NH@Z
?setControllerMeshPath@DepthFromStereo@PE@@QEAAXAEBEPEBD@Z
?setDepthFromStereoConfig@DepthFromStereo@PE@@QEAAXPEBD_N@Z
?setDynamicOptions@XRSession@PE@@QEAA?AW4XRStatus@2@PEBD@Z
?setExtrinsics@Extrinsics@ST@@QEAAXMMMMMMM@Z
?setGyroEvent@GyroscopeEvent@ST@@QEAAXNNNNPEBD@Z
?setIdentity@Intrinsics@ST@@QEAAXHH@Z
?setKBIntrinsics@KBIntrinsics@ST@@QEAAXMMMMMMMMHH@Z
?setNumericalProperty@XRSession@PE@@QEAA?AW4XRStatus@2@W4XRNumericalProperty@2@H@Z
?setNumericalProperty@XRSession@PE@@QEAA?AW4XRStatus@2@W4XRNumericalProperty@2@M@Z
?setNumericalProperty@XRSession@PE@@QEAA?AW4XRStatus@2@W4XRNumericalProperty@2@PEAMH@Z
?setNumericalProperty@XRSession@PE@@QEAA?AW4XRStatus@2@W4XRNumericalProperty@2@_N@Z
?setOutputFormat@CSVFileWriter@ST@@QEAAXW4OutputFormat@12@@Z
?setSaturationThreshold@AccelerometerEvent@ST@@QEAAXN@Z
?setSaturationThreshold@GyroscopeEvent@ST@@QEAAXN@Z
?setUseDefaultDepth@DepthFromStereo@PE@@QEAAX_N@Z
?setVisibleExposureAndGain@XRSession@PE@@QEAA?AW4XRStatus@2@MM_N@Z
?setVisualLoggingVerbosity@ST@@YA_NH@Z
?setWhiteBalanceGains@WhiteBalanceGains@ST@@QEAAXMMM@Z
?setZeroDistortion@Intrinsics@ST@@QEAAXW4MatchingStrategy@12@AEBU12@@Z
?setZeroDistortion@Intrinsics@ST@@QEAAXXZ
?setZeroDistortionAndHorizontalFOV@Intrinsics@ST@@QEAAXM@Z
?showAllVisualLoggingWindows@ST@@YAXXZ
?showVisualLoggingWindow@ST@@YAXH@Z
?size@SharedMemoryBuffer@PE@@QEBA_KXZ
?sizeOfContainerInBytes@MeshSharedMemoryContainer@PE@@QEBAHXZ
?start@SystemWideActivity@PE@@QEAA_NXZ
?startNewSequenceFromLastSample@PerformanceMonitor@ST@@QEAAXXZ
?startThread@DepthFromStereo@PE@@QEAAXXZ
?startTracking@XRSession@PE@@QEAA?AW4XRStatus@2@AEBUXRSessionSettings@2@@Z
?startWritingToFile@CSVFileWriter@ST@@QEAA_NPEBD@Z
?stillProcessingLatestInput@DepthFromStereo@PE@@QEBA_NXZ
?stop@SystemWideActivity@PE@@QEAAXXZ
?stop@TimeCountDoNotUseDirectly@ST@@QEAANAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
?stopThread@DepthFromStereo@PE@@QEAAXXZ
?stopTracking@XRSession@PE@@QEAA?AW4XRStatus@2@XZ
?temperature@AccelerometerEvent@ST@@QEBANXZ
?timestamp@AccelerometerEvent@ST@@QEBANXZ
?timestamp@ColorFrame@ST@@QEBANXZ
?timestamp@DepthFrame@ST@@QEBANXZ
?timestamp@GyroscopeEvent@ST@@QEBANXZ
?timestamp@InfraredFrame@ST@@QEBANXZ
?timestamp@MultiCameraColorFrame@ST@@QEBANH@Z
?timestamp@PoseAndOpticalInertialState@ST@@QEBANXZ
?timestampOfFirstSample@PerformanceMonitor@ST@@QEBANXZ
?toString@Matrix4@ST@@QEBAXPEAD_K@Z
?transform@Mesh@ST@@QEAAXUMatrix4@2@@Z
?translated@Matrix4@ST@@QEBA?AU12@MMM@Z
?translation@Matrix4@ST@@QEBA?AU?$Vector3@M@2@XZ
?transposed@Matrix4@ST@@QEBA?AU12@XZ
?ultraLowLatencyPredictWorldFromCameraPose@XRSession@PE@@QEAA?AW4XRStatus@2@W4XRFrameOfReference@2@NAEAUXRPose@2@U52@@Z
?undistorted@ColorFrame@ST@@QEBA?AU12@XZ
?undistorted@MultiCameraColorFrame@ST@@QEBA?AUColorFrame@2@H@Z
?unlock@SystemWideMutex@PE@@QEAAXXZ
?unprojectPoint@DepthFrame@ST@@QEBA?AU?$Vector3@M@2@HH@Z
?upload@OpenGLMesh@ST@@QEAAXAEBUMesh@2@@Z
?useBackgroundProcessing@DepthFromStereo@PE@@QEBA_NXZ
?valueOfLastSample@PerformanceMonitor@ST@@QEBANXZ
?visibleCameraPoseInDepthCoordinateFrame@DepthFrame@ST@@QEBA?AUMatrix4@2@XZ
?width@ColorFrame@ST@@QEBAHXZ
?width@DepthFrame@ST@@QEBAHXZ
?width@InfraredFrame@ST@@QEBAHXZ
?width@MultiCameraColorFrame@ST@@QEBAHH@Z
?writeByte@SharedMemoryBuffer@PE@@QEAA_NEK@Z
?writeCameraPose@CSVFileWriter@ST@@QEAAXAEBUMatrix4@2@N@Z
?writeData@SharedMemoryBuffer@PE@@QEAA_KPEBE_KK@Z
?writeInteger@SharedMemoryBuffer@PE@@QEAA_NHK@Z
?writeMatrix4@CSVFileWriter@ST@@QEAAXAEBUMatrix4@2@N@Z
?writeMultiCameraColorFrame@ST@@YAXPEAUOCCFileWriter@1@AEBUMultiCameraColorFrame@1@@Z
?writeMultiCameraColorFrameAsPng@ST@@YAXPEBDAEBUMultiCameraColorFrame@1@HH@Z
?writeOpticalInertialState@ST@@YAXAEAUCSVFileWriter@1@AEBUPoseAndOpticalInertialState@1@@Z
?writeRawDataAndAdvance@PE@@YA_KAEAPEAEPEBX_K@Z
?writeToBufferAndAdvance@PE@@YA_KAEBUColorFrameContainer@1@AEAPEAEW4RequestedImage@ST@@@Z
?writeToBufferAndAdvance@PE@@YA_KAEBUDepthFrameContainer@1@AEAPEAEW4RequestedImage@ST@@@Z
?writeToBufferAndAdvance@PE@@YA_KAEBUMeshSharedMemoryContainer@1@AEAPEAE@Z
?writeToBufferAndAdvance@PE@@YA_KAEBUMultiColorFrameContainer@1@AEAPEAE_KHW4RequestedImage@ST@@@Z
?writeToBufferAndAdvance@PE@@YA_KAEBUPerformanceMetrics@1@AEAPEAE@Z
?writeToBufferAndAdvance@PE@@YA_KAEBUPredictionContainer@1@AEAPEAE@Z
?writeToBufferAndAdvance@PE@@YA_KAEBUXRTrackingStatus@1@AEAPEAE@Z
?writeToBufferAndAdvance@PE@@YA_KAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAPEAE@Z
?writeToFile@Mesh@ST@@QEAA_NPEBD@Z
?writeVector3f@CSVFileWriter@ST@@QEAAXAEBU?$Vector3@M@2@N@Z
?yData@ColorFrame@ST@@QEBAPEBEXZ
?ySize@ColorFrame@ST@@QEBA_KXZ
GdipAlloc
GdipFree
GdiplusStartup
GdiplusShutdown
GdipCloneImage
GdipDisposeImage
GdipSaveImageToStream
GdipGetImageWidth
GdipGetImageHeight
GdipCreateBitmapFromStream
GdipCreateBitmapFromScan0
GdipBitmapLockBits
GdipBitmapUnlockBits
GdipGetImageEncodersSize
GdipGetImageEncoders
gdiplus.dll
PathFindExtensionA
PathFindFileNameA
SHLWAPI.dll
glDisable
glEnable
glGetBooleanv
glReadPixels
glGetIntegerv
glGetString
wglGetCurrentDC
wglGetProcAddress
OPENGL32.dll
OutputDebugStringA
GetCurrentThreadId
GetModuleFileNameA
CloseHandle
GetLastError
ReleaseSemaphore
ReleaseMutex
WaitForSingleObject
CreateMutexA
CreateEventA
OpenEventA
MapViewOfFile
UnmapViewOfFile
FormatMessageA
OpenMutexA
CreateSemaphoreA
OpenSemaphoreA
CreateFileMappingA
OpenFileMappingA
GetCurrentThread
SetThreadPriority
RaiseException
InitializeCriticalSection
EnterCriticalSection
LeaveCriticalSection
TryEnterCriticalSection
DeleteCriticalSection
InitializeConditionVariable
SleepConditionVariableCS
Sleep
MultiByteToWideChar
SetEvent
GetProcAddress
LoadLibraryW
LocalAlloc
LocalFree
QueryPerformanceCounter
QueryPerformanceFrequency
GetTickCount
FreeLibrary
LoadLibraryA
SetHandleInformation
GetCurrentProcessId
WakeAllConditionVariable
WideCharToMultiByte
TlsAlloc
TlsGetValue
TlsSetValue
TlsFree
GetModuleHandleA
GetNativeSystemInfo
KERNEL32.dll
MessageBoxA
GetMessageA
TranslateMessage
DispatchMessageA
PeekMessageA
SendMessageA
DefWindowProcA
RegisterClassA
UnregisterClassA
CreateWindowExA
ShowWindow
MoveWindow
OpenClipboard
CloseClipboard
SetClipboardData
EmptyClipboard
SetFocus
GetKeyState
SetCapture
ReleaseCapture
GetDC
ReleaseDC
BeginPaint
EndPaint
InvalidateRect
GetWindowTextA
GetClientRect
GetWindowRect
SetCursor
ScreenToClient
SubtractRect
OffsetRect
GetWindowLongPtrA
SetWindowLongPtrA
GetClassLongPtrA
LoadCursorA
LoadIconA
MonitorFromPoint
MonitorFromRect
GetMonitorInfoA
USER32.dll
BitBlt
ChoosePixelFormat
CombineRgn
CreateCompatibleBitmap
CreateCompatibleDC
CreateRectRgn
DeleteDC
DeleteObject
FillRgn
GetCurrentObject
GetStockObject
SelectObject
SetPixelFormat
StretchBlt
SetStretchBltMode
CreateDIBSection
SetDIBColorTable
GetObjectA
GdiFlush
SwapBuffers
GDI32.dll
SHGetFolderPathA
SHELL32.dll
CoInitializeEx
StringFromIID
IIDFromString
CoTaskMemFree
ole32.dll
GetSaveFileNameA
COMDLG32.dll
InitializeSecurityDescriptor
SetSecurityDescriptorDacl
CryptAcquireContextA
CryptGenRandom
RegCloseKey
RegCreateKeyExA
RegDeleteKeyA
RegEnumKeyExA
RegOpenKeyExA
RegQueryValueExA
RegSetValueExA
ADVAPI32.dll
?uncaught_exception@std@@YA_NXZ
?_Xlength_error@std@@YAXPEBD@Z
?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z
?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_N@Z
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@M@Z
?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
?_Xbad_function_call@std@@YAXXZ
_Thrd_start
_Xtime_get_ticks
_Thrd_join
_Thrd_sleep
_Thrd_id
_Mtx_init
_Mtx_destroy
_Mtx_init_in_situ
_Mtx_destroy_in_situ
_Mtx_lock
_Mtx_unlock
_Cnd_init
_Cnd_destroy
_Cnd_wait
_Cnd_signal
_Cnd_do_broadcast_at_thread_exit
?_Throw_C_error@std@@YAXH@Z
?_Throw_Cpp_error@std@@YAXH@Z
??0_Lockit@std@@QEAA@H@Z
??1_Lockit@std@@QEAA@XZ
?_Xout_of_range@std@@YAXPEBD@Z
??Bid@locale@std@@QEAA_KXZ
?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ
?always_noconv@codecvt_base@std@@QEBA_NXZ
?in@?$codecvt@DDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEAD3AEAPEAD@Z
?out@?$codecvt@DDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEAD3AEAPEAD@Z
?unshift@?$codecvt@DDU_Mbstatet@@@std@@QEBAHAEAU_Mbstatet@@PEAD1AEAPEAD@Z
?_Getcat@?$codecvt@DDU_Mbstatet@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAA@XZ
??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEBA?AVlocale@2@XZ
?_Pninc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAPEADXZ
?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAAXXZ
?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z
?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z
??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
??0?$basic_ios@DU?$char_traits@D@std@@@std@@IEAA@XZ
??0?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
??1?$basic_ostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z
??0?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z
??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ
??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QEAA@PEAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z
??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UEAA@XZ
_Query_perf_counter
_Query_perf_frequency
?_Fiopen@std@@YAPEAU_iobuf@@PEBDHH@Z
?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAXXZ
?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAXXZ
?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z
?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAPEAV12@PEAD_J@Z
?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JXZ
?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ
?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A
?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z
?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
?write@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@PEBD_J@Z
?read@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@PEAD_J@Z
?seekg@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@_JH@Z
?tellg@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA?AV?$fpos@U_Mbstatet@@@2@XZ
?sbumpc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ
?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ
?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ
?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA_N_N@Z
?_Execute_once@std@@YAHAEAUonce_flag@1@P6AHPEAX1PEAPEAX@Z1@Z
?_Syserror_map@std@@YAPEBDH@Z
?_Winerror_map@std@@YAHH@Z
?_Winerror_message@std@@YAKKPEADK@Z
_Thrd_hardware_concurrency
_Mtx_current_owns
_Cnd_init_in_situ
_Cnd_destroy_in_situ
_Cnd_timedwait
_Cnd_broadcast
?getloc@ios_base@std@@QEBA?AVlocale@2@XZ
?put@?$time_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@QEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBUtm@@PEBD3@Z
?_Getcat@?$time_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
?id@?$time_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A
?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
?clear@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@N@Z
?id@?$ctype@D@std@@2V0locale@2@A
?_Fiopen@std@@YAPEAU_iobuf@@PEB_WHH@Z
?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@G@Z
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_J@Z
?__ExceptionPtrCreate@@YAXPEAX@Z
?__ExceptionPtrDestroy@@YAXPEAX@Z
?__ExceptionPtrCopy@@YAXPEAXPEBX@Z
?__ExceptionPtrAssign@@YAXPEAXPEBX@Z
?__ExceptionPtrCurrentException@@YAXPEAX@Z
?__ExceptionPtrRethrow@@YAXPEBX@Z
MSVCP140.dll
if_nametoindex
GetAdaptersAddresses
if_indextoname
IPHLPAPI.DLL
WSAPoll
WSASocketA
getnameinfo
WSACloseEvent
WSACreateEvent
WSAEventSelect
WSAWaitForMultipleEvents
WSAIoctl
getaddrinfo
freeaddrinfo
WS2_32.dll
?Free@Concurrency@@YAXPEAX@Z
?_CurrentContext@_Context@details@Concurrency@@SA?AV123@XZ
?_Yield@_Context@details@Concurrency@@SAXXZ
?_IsSynchronouslyBlocked@_Context@details@Concurrency@@QEBA_NXZ
?_GetNumberOfVirtualProcessors@_CurrentScheduler@details@Concurrency@@SAIXZ
?_UnderlyingYield@details@Concurrency@@YAXXZ
?Id@CurrentScheduler@Concurrency@@SAIXZ
?Get@CurrentScheduler@Concurrency@@SAPEAVScheduler@2@XZ
?Detach@CurrentScheduler@Concurrency@@SAXXZ
?_CheckTaskCollection@_UnrealizedChore@details@Concurrency@@IEAAXXZ
??1_StructuredTaskCollection@details@Concurrency@@QEAA@XZ
?_Schedule@_StructuredTaskCollection@details@Concurrency@@QEAAXPEAV_UnrealizedChore@23@@Z
?_RunAndWait@_StructuredTaskCollection@details@Concurrency@@QEAA?AW4_TaskCollectionStatus@23@PEAV_UnrealizedChore@23@@Z
??0_Cancellation_beacon@details@Concurrency@@QEAA@XZ
??1_Cancellation_beacon@details@Concurrency@@QEAA@XZ
?_Confirm_cancel@_Cancellation_beacon@details@Concurrency@@QEAA_NXZ
?_Trace_ppl_function@Concurrency@@YAXAEBU_GUID@@EW4ConcRT_EventType@1@@Z
?_SpinOnce@?$_SpinWait@$00@details@Concurrency@@QEAA_NXZ
?PPLParallelForEventGuid@Concurrency@@3U_GUID@@B
CONCRT140.dll
_purecall
__std_terminate
__std_exception_copy
__std_exception_destroy
_CxxThrowException
__CxxFrameHandler3
memcpy
memmove
memset
memcmp
__std_type_info_compare
memchr
__RTDynamicCast
strstr
__C_specific_handler
strrchr
strchr
__std_type_info_destroy_list
VCRUNTIME140.dll
_invalid_parameter_noinfo_noreturn
_fdtest
terminate
atan2
atan2f
sqrtf
tanf
_dtest
free
malloc
_get_stream_buffer_pointers
fclose
fflush
fgetc
fgetpos
fputc
fread
fsetpos
_fseeki64
fwrite
setvbuf
ungetc
_lock_file
_unlock_file
__stdio_common_vsprintf
__stdio_common_vsnprintf_s
abort
cosf
sinf
powf
tolower
fopen
__stdio_common_vfprintf
__acrt_iob_func
exit
realloc
atoi
strtod
strtol
sqrt
round
_errno
strtoul
acosf
atanf
fseek
_localtime64
_time64
fgets
__stdio_common_vsscanf
atof
strtok
ceilf
__stdio_common_vsprintf_s
roundf
floorf
rand
ftell
floor
ceil
logf
strncpy
log2
expf
strncmp
strerror
isdigit
isxdigit
isalnum
_beginthreadex
isalpha
getenv
set_terminate
feof
fputs
rewind
strnlen
isspace
toupper
strcpy_s
strcat_s
setlocale
wcstombs
_wopen
_lseeki64
___lc_codepage_func
_callnewh
_seh_filter_dll
_configure_narrow_argv
_initialize_narrow_environment
_initialize_onexit_table
_register_onexit_function
_execute_onexit_table
_crt_atexit
_cexit
_initterm
_initterm_e
_strdup
_close
_write
_read
_open
api-ms-win-crt-runtime-l1-1-0.dll
api-ms-win-crt-heap-l1-1-0.dll
api-ms-win-crt-math-l1-1-0.dll
api-ms-win-crt-stdio-l1-1-0.dll
api-ms-win-crt-filesystem-l1-1-0.dll
api-ms-win-crt-string-l1-1-0.dll
api-ms-win-crt-convert-l1-1-0.dll
api-ms-win-crt-time-l1-1-0.dll
api-ms-win-crt-utility-l1-1-0.dll
api-ms-win-crt-environment-l1-1-0.dll
api-ms-win-crt-locale-l1-1-0.dll
glBindTexture
glFlush
glTexParameteri
glTexSubImage2D
glViewport
glDeleteTextures
glClear
glClearColor
glGetFloatv
glBlendFunc
glCullFace
glDepthFunc
glDepthMask
glDrawElements
glFrontFace
glIsEnabled
glPolygonOffset
glGenTextures
glTexImage2D
wglCreateContext
wglDeleteContext
wglMakeCurrent
wglGetCurrentContext
wglShareLists
CreateDirectoryW
CreateFileW
DeleteFileW
FindClose
FindFirstFileExW
FindNextFileW
GetFileAttributesExW
GetFileInformationByHandle
RemoveDirectoryW
AreFileApisANSI
SetLastError
GetModuleHandleW
InitializeCriticalSectionAndSpinCount
ResetEvent
WaitForSingleObjectEx
CreateEventW
RtlCaptureContext
RtlLookupFunctionEntry
RtlVirtualUnwind
UnhandledExceptionFilter
SetUnhandledExceptionFilter
GetCurrentProcess
TerminateProcess
IsProcessorFeaturePresent
IsDebuggerPresent
GetSystemTimeAsFileTime
DisableThreadLibraryCalls
InitializeSListHead
DefWindowProcW
RegisterClassExA
DestroyWindow
WindowFromDC
LoadImageA
DescribePixelFormat
??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@K@Z
