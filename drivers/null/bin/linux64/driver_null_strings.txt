%d.%d.%d.%d
%d.%d.%d.%d:%u
%llu
%s
%s: __pos (which is %zu) > this->size() (which is %zu)
*Z13InitDriverLogPN2vr12IVRDriverLogEEUl9ELogLevelPKcPvE_
./obj_driver_null_linux64/release/driver_null.so
/data/src/common/vrcore/src/strtools_public.cpp
0123456789ABCDEF
14CNullHmdLatest
18CServerDriver_Null
<unknown>
ASSERT: "%s" at %s:%d.
CAssert::AddCallback(CAssertCallback*)
CAssert::AddCallback(CAssertCallback*) [clone .cold]
CAssert::AssertMsgImpl(char const*, unsigned int, bool, unsigned int, ...)
CAssert::AssertMsgImpl(char const*, unsigned int, bool, unsigned int, ...) [clone .cold]
CAssert::GetInstance()
CAssert::GetInstance() [clone .cold]
CAssert::RemoveCallback(CAssertCallback*)
CAssert::m_mutex
CAssert::m_pInstance
CAssertCallback::Initialize(std::function<void (char const*, char const*, unsigned int, bool, void*, bool*)>, void*)
CAssertCallback::Initialize(std::function<void (char const*, char const*, unsigned int, bool, void*, bool*)>, void*) [clone .cold]
CAssertCallback::~CAssertCallback()
CLog::AddCallback(CLogCallback*)
CLog::AddCallback(CLogCallback*) [clone .cold]
CLog::GetInstance()
CLog::GetInstance() [clone .cold]
CLog::Log(ELogLevel, char const*, ...)
CLog::Log(ELogLevel, char const*, __va_list_tag (&) [1])
CLog::Log(ELogLevel, char const*, __va_list_tag (&) [1]) [clone .cold]
CLog::RemoveCallback(CLogCallback*)
CLog::s_mutex
CLog::s_pInstance
CLogCallback::Initialize(std::function<void (ELogLevel, char const*, void*)>, void*)
CLogCallback::Initialize(std::function<void (ELogLevel, char const*, void*)>, void*) [clone .cold]
CLogCallback::~CLogCallback()
CNullHmdLatest::Activate(unsigned int)
CNullHmdLatest::CNullHmdLatest()
CNullHmdLatest::ComputeDistortion(vr::EVREye, float, float)
CNullHmdLatest::Deactivate()
CNullHmdLatest::DebugRequest(char const*, char*, unsigned int)
CNullHmdLatest::EnterStandby()
CNullHmdLatest::GetComponent(char const*)
CNullHmdLatest::GetEyeOutputViewport(vr::EVREye, unsigned int*, unsigned int*, unsigned int*, unsigned int*)
CNullHmdLatest::GetPose()
CNullHmdLatest::GetProjectionRaw(vr::EVREye, float*, float*, float*, float*)
CNullHmdLatest::GetRecommendedRenderTargetSize(unsigned int*, unsigned int*)
CNullHmdLatest::GetWindowBounds(int*, int*, unsigned int*, unsigned int*)
CNullHmdLatest::IsDisplayOnDesktop()
CNullHmdLatest::IsDisplayRealDisplay()
CNullHmdLatest::RunFrame() [clone .part.0]
CNullHmdLatest::~CNullHmdLatest()
CServerDriver_Null::Cleanup()
CServerDriver_Null::EnterStandby()
CServerDriver_Null::GetInterfaceVersions()
CServerDriver_Null::GetTrackedDeviceDriverVersion()
CServerDriver_Null::Init(vr::IVRDriverContext*)
CServerDriver_Null::Init(vr::IVRDriverContext*) [clone .cold]
CServerDriver_Null::LeaveStandby()
CServerDriver_Null::RunFrame()
CServerDriver_Null::ShouldBlockStandbyMode()
CXXABI_1.3
CXXABI_1.3.9
CharNeedsEscape_Component(char)
CharNeedsEscape_FullPath(char)
CleanupDriverLog()
DW.ref.__gxx_personality_v0
DebugDriverLog(char const*, ...)
DriverLog(char const*, ...)
DriverLogString(char const*)
DriverLogVarArgs(char const*, __va_list_tag*)
FbcE
Format string parse failure
Format(char const*, ...)
Format(char const*, ...) [clone .cold]
GCC: (SteamRT 10.3.0-3+steamrt3.1+bsrt3.1) 10.3.0
GLIBCXX_3.4
GLIBCXX_3.4.11
GLIBCXX_3.4.14
GLIBCXX_3.4.21
GLIBC_2.14
GLIBC_2.2.5
GNU
HmdDriverFactory
IServerTrackedDeviceProvider_004
ITrackedDeviceServerDriver_005
IVRCameraComponent_003
IVRCompositorPluginProvider_001
IVRDisplayComponent_002
IVRDriverDirectModeComponent_008
IVRDriverLog_001
IVRDriverManager_001
IVRProperties_001
IVRResources_001
IVRServerDriverHost_006
IVRSettings_003
IVRVirtualDisplay_002
IVRWatchdogProvider_001
InitDriverLog(vr::IVRDriverLog*)
InitDriverLog(vr::IVRDriverLog*) [clone .cold]
IpAndPortToString(unsigned int, unsigned short)
IpToString(unsigned int)
IsDriverLogActive()
Log(ELogLevel, char const*, ...)
Log(char const*, ...)
LogDirect(ELogLevel, char const*, __va_list_tag (&) [1])
N2vr19IVRDisplayComponentE
N2vr26ITrackedDeviceServerDriverE
N2vr28IServerTrackedDeviceProviderE
PFbcE
RepairUTF8(char const*, char const*, std::string&)
RepairUTF8(char const*, char const*, std::string&) [clone .cold]
RepairUTF8(std::string const&, std::string&)
ReturnStdString(std::string const&, char*, unsigned int)
St12codecvt_utf8IDiLm1114111ELSt12codecvt_mode0EE
St18codecvt_utf8_utf16IwLm1114111ELSt12codecvt_mode0EE
StringHasPrefix(std::string const&, std::string const&)
StringHasPrefixCaseSensitive(std::string const&, std::string const&)
StringHasSuffix(std::string const&, std::string const&)
StringHasSuffixCaseSensitive(std::string const&, std::string const&)
StringToLower(std::string const&)
StringToLower(std::string const&) [clone .cold]
StringToUint64(std::string const&)
StringToUpper(std::string const&)
StringToUpper(std::string const&) [clone .cold]
TokenizeString(std::string const&, char)
TokenizeString(std::string const&, char) [clone .cold]
TrimTrailingWhitespace(std::string const&)
UTF16to8(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&)
UTF16to8(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) [clone .cold]
UTF16to8(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&)::s_convert
UTF16to8(wchar_t const*)
UTF16to8(wchar_t const*) [clone .cold]
UTF8to16(char const*)
UTF8to16(char const*) [clone .cold]
UTF8to16(std::string const&)
UTF8to16(std::string const&) [clone .cold]
UTF8to16(std::string const&)::s_convert
Uint64ToString(unsigned long)
Using settings values
VTT for std::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >
V_StripExtension(std::string&)
V_URLDecode(char*, int, char const*, int)
V_URLDecodeInternal(char*, int, char const*, int, bool)
V_URLDecodeInternal(char*, int, char const*, int, bool) [clone .part.0]
V_URLDecodeNoPlusForSpace(char*, int, char const*, int)
V_URLEncode(char*, int, char const*, int)
V_URLEncode(char*, int, char const*, int) [clone .cold]
V_URLEncodeFullPath(char*, int, char const*, int)
V_URLEncodeFullPath(char*, int, char const*, int) [clone .cold]
V_URLEncodeInternal(char*, int, char const*, int, bool, std::function<bool (char)>)
V_URLEncodeNoPlusForSpace(char*, int, char const*, int)
V_URLEncodeNoPlusForSpace(char*, int, char const*, int) [clone .cold]
_DYNAMIC
_GLOBAL_OFFSET_TABLE_
_GLOBAL__sub_I_driver_null.cpp
_GLOBAL__sub_I_driverlog.cpp
_GLOBAL__sub_I_strtools_public.cpp
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
_Unwind_Backtrace
_Unwind_Backtrace.cold
_Unwind_DebugHook
_Unwind_DeleteException
_Unwind_FindEnclosingFunction
_Unwind_Find_FDE
_Unwind_Find_FDE.cold
_Unwind_ForcedUnwind
_Unwind_ForcedUnwind_Phase2
_Unwind_ForcedUnwind_Phase2.cold
_Unwind_GetCFA
_Unwind_GetDataRelBase
_Unwind_GetGR
_Unwind_GetGR.cold
_Unwind_GetIP
_Unwind_GetIPInfo
_Unwind_GetLanguageSpecificData
_Unwind_GetRegionStart
_Unwind_GetTextRelBase
_Unwind_IteratePhdrCallback
_Unwind_IteratePhdrCallback.cold
_Unwind_RaiseException
_Unwind_RaiseException.cold
_Unwind_RaiseException_Phase2
_Unwind_RaiseException_Phase2.cold
_Unwind_Resume
_Unwind_Resume.cold
_Unwind_Resume_or_Rethrow
_Unwind_Resume_or_Rethrow.cold
_Unwind_SetGR
_Unwind_SetGR.cold
_Unwind_SetIP
__FRAME_END__
__TMC_END__
__TMC_LIST__
__bss_start
__cxa_atexit
__cxa_begin_catch
__cxa_end_catch
__cxa_finalize
__cxa_guard_abort
__cxa_guard_acquire
__cxa_guard_release
__cxa_rethrow
__deregister_frame
__deregister_frame_info
__deregister_frame_info_bases
__do_global_dtors_aux
__do_global_dtors_aux_fini_array_entry
__dso_handle
__frame_dummy_init_array_entry
__frame_state_for
__gmon_start__
__gxx_personality_v0
__pthread_key_create
__register_frame
__register_frame_info
__register_frame_info_bases
__register_frame_info_table
__register_frame_info_table_bases
__register_frame_table
_edata
_end
_fini
_init
abort
add_fdes
add_fdes.cold
adds.1
any_objects_registered
basic_string::substr
bool std::__do_str_codecvt<std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >, char, std::codecvt<wchar_t, char, __mbstate_t>, __mbstate_t, std::codecvt_base::result (std::codecvt<wchar_t, char, __mbstate_t>::*)(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const>(char const*, char const*, std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >&, std::codecvt<wchar_t, char, __mbstate_t> const&, __mbstate_t&, unsigned long&, std::codecvt_base::result (std::codecvt<wchar_t, char, __mbstate_t>::*)(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const)
bool std::__do_str_codecvt<std::string, wchar_t, std::codecvt<wchar_t, char, __mbstate_t>, __mbstate_t, std::codecvt_base::result (std::codecvt<wchar_t, char, __mbstate_t>::*)(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const>(wchar_t const*, wchar_t const*, std::string&, std::codecvt<wchar_t, char, __mbstate_t> const&, __mbstate_t&, unsigned long&, std::codecvt_base::result (std::codecvt<wchar_t, char, __mbstate_t>::*)(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const)
cIntToHexDigit(int)
classify_object_over_fdes
classify_object_over_fdes.cold
completed.0
deregister_tm_clones
displayFrequency
dl_iterate_phdr
driver_null
driver_null: Display Frequency: %f
driver_null: IPD: %f
driver_null: Model Number: %s
driver_null: Render Target: %d %d
driver_null: Seconds from Vsync to Photons: %f
driver_null: Serial Number: %s
driver_null: Window: %d %d %d %d
execute_cfa_program
execute_cfa_program.cold
execute_stack_op
execute_stack_op.cold
fde_mixed_encoding_compare
fde_mixed_encoding_compare.cold
fde_single_encoding_compare
fde_single_encoding_compare.cold
fde_unencoded_compare
frame_downheap
frame_dummy
frame_hdr_cache
frame_hdr_cache_head
frame_heapsort
free
g_serverDriverNull
get_cie_encoding
guard variable for UTF16to8(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&)::s_convert
guard variable for UTF8to16(std::string const&)::s_convert
iHexCharToInt(char)
init_dwarf_reg_size_table
ipd
ld-linux-x86-64.so.2
libc.so.6
libstdc++.so.6
linear_search_fdes
linear_search_fdes.cold
malloc
marker.4
memcpy
memmove
memset
modelNumber
non-virtual thunk to CNullHmdLatest::ComputeDistortion(vr::EVREye, float, float)
non-virtual thunk to CNullHmdLatest::GetEyeOutputViewport(vr::EVREye, unsigned int*, unsigned int*, unsigned int*, unsigned int*)
non-virtual thunk to CNullHmdLatest::GetProjectionRaw(vr::EVREye, float*, float*, float*, float*)
non-virtual thunk to CNullHmdLatest::GetRecommendedRenderTargetSize(unsigned int*, unsigned int*)
non-virtual thunk to CNullHmdLatest::GetWindowBounds(int*, int*, unsigned int*, unsigned int*)
non-virtual thunk to CNullHmdLatest::IsDisplayOnDesktop()
non-virtual thunk to CNullHmdLatest::IsDisplayRealDisplay()
object_mutex
once_regsizes.0
operator delete(void*, unsigned long)
operator new(unsigned long)
pthread_mutex_lock
pthread_mutex_unlock
pthread_once
read_encoded_value
read_encoded_value.cold
read_encoded_value_with_base
read_encoded_value_with_base.cold
renderHeight
renderWidth
s_pLogCallback
s_pLogFile
search_object
search_object.cold
secondsFromVsyncToPhotons
serialNumber
snprintf
std::_Function_base::~_Function_base()
std::_Function_handler<bool (char), bool (*)(char)>::_M_invoke(std::_Any_data const&, char&&)
std::_Function_handler<bool (char), bool (*)(char)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
std::_Function_handler<void (ELogLevel, char const*, void*), InitDriverLog(vr::IVRDriverLog*)::{lambda(ELogLevel, char const*, void*)#1}>::_M_invoke(std::_Any_data const&, ELogLevel&&, char const*&&, void*&&)
std::_Function_handler<void (ELogLevel, char const*, void*), InitDriverLog(vr::IVRDriverLog*)::{lambda(ELogLevel, char const*, void*)#1}>::_M_manager(std::_Any_data&, std::_Function_handler<void (ELogLevel, char const*, void*), InitDriverLog(vr::IVRDriverLog*)::{lambda(ELogLevel, char const*, void*)#1}> const&, std::_Manager_operation)
std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::in(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const
std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::out(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const
std::__codecvt_utf8_base<char32_t>::do_always_noconv() const
std::__codecvt_utf8_base<char32_t>::do_encoding() const
std::__codecvt_utf8_base<char32_t>::do_in(__mbstate_t&, char const*, char const*, char const*&, char32_t*, char32_t*, char32_t*&) const
std::__codecvt_utf8_base<char32_t>::do_length(__mbstate_t&, char const*, char const*, unsigned long) const
std::__codecvt_utf8_base<char32_t>::do_max_length() const
std::__codecvt_utf8_base<char32_t>::do_out(__mbstate_t&, char32_t const*, char32_t const*, char32_t const*&, char*, char*, char*&) const
std::__codecvt_utf8_base<char32_t>::do_unshift(__mbstate_t&, char*, char*, char*&) const
std::__codecvt_utf8_base<char32_t>::~__codecvt_utf8_base()
std::__codecvt_utf8_utf16_base<wchar_t>::do_always_noconv() const
std::__codecvt_utf8_utf16_base<wchar_t>::do_encoding() const
std::__codecvt_utf8_utf16_base<wchar_t>::do_in(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const
std::__codecvt_utf8_utf16_base<wchar_t>::do_length(__mbstate_t&, char const*, char const*, unsigned long) const
std::__codecvt_utf8_utf16_base<wchar_t>::do_max_length() const
std::__codecvt_utf8_utf16_base<wchar_t>::do_out(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const
std::__codecvt_utf8_utf16_base<wchar_t>::do_unshift(__mbstate_t&, char*, char*, char*&) const
std::__codecvt_utf8_utf16_base<wchar_t>::~__codecvt_utf8_utf16_base()
std::__ioinit
std::__throw_bad_function_call()
std::__throw_length_error(char const*)
std::__throw_range_error(char const*)
std::__throw_system_error(int)
std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*)
std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char)
std::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_istringstream()
std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, unsigned long, std::allocator<char> const&)
std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::allocator<char> const&)
std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&)
std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long)
std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_M_leak_hard()
std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_M_destroy(std::allocator<wchar_t> const&)
std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_S_create(unsigned long, unsigned long, std::allocator<wchar_t> const&)
std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::_Rep::_S_empty_rep_storage
std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::basic_string(std::allocator<wchar_t> const&)
std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::basic_string(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&)
std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::resize(unsigned long, wchar_t)
std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::~basic_string()
std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::_M_sync(char*, unsigned long, unsigned long)
std::codecvt<wchar_t, char, __mbstate_t>::codecvt(unsigned long)
std::codecvt_utf8<char32_t, 1114111ul, (std::codecvt_mode)0>::~codecvt_utf8()
std::codecvt_utf8_utf16<wchar_t, 1114111ul, (std::codecvt_mode)0>::~codecvt_utf8_utf16()
std::ios_base::Init::Init()
std::ios_base::Init::~Init()
std::ios_base::ios_base()
std::ios_base::~ios_base()
std::locale::locale()
std::locale::~locale()
std::string::_M_leak_hard()
std::string::_Rep::_M_destroy(std::allocator<char> const&)
std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&)
std::string::_Rep::_S_empty_rep_storage
std::string::find_last_not_of(char const*, unsigned long, unsigned long) const
std::string::reserve(unsigned long)
std::string::resize(unsigned long, char)
std::string::rfind(char, unsigned long) const
std::unique_ptr<CLogCallback, std::default_delete<CLogCallback> >::~unique_ptr()
std::wstring_convert<std::codecvt_utf8_utf16<wchar_t, 1114111ul, (std::codecvt_mode)0>, wchar_t, std::allocator<wchar_t>, std::allocator<char> >::~wstring_convert()
steamvr
strcasecmp
strcpy_safe(char*, unsigned long, char const*)
stricmp(char const*, char const*)
strlen
strncasecmp
strncmp
strncpy
strnicmp(char const*, char const*, unsigned long)
strtoull
subs.2
terminator.3
tolower
toupper
typeinfo for CNullHmdLatest
typeinfo for CServerDriver_Null
typeinfo for InitDriverLog(vr::IVRDriverLog*)::{lambda(ELogLevel, char const*, void*)#1}
typeinfo for bool (*)(char)
typeinfo for bool (char)
typeinfo for std::__codecvt_utf8_base<char32_t>
typeinfo for std::__codecvt_utf8_utf16_base<wchar_t>
typeinfo for std::codecvt_utf8<char32_t, 1114111ul, (std::codecvt_mode)0>
typeinfo for std::codecvt_utf8_utf16<wchar_t, 1114111ul, (std::codecvt_mode)0>
typeinfo for vr::IServerTrackedDeviceProvider
typeinfo for vr::ITrackedDeviceServerDriver
typeinfo for vr::IVRDisplayComponent
typeinfo name for CNullHmdLatest
typeinfo name for CServerDriver_Null
typeinfo name for InitDriverLog(vr::IVRDriverLog*)::{lambda(ELogLevel, char const*, void*)#1}
typeinfo name for bool (*)(char)
typeinfo name for bool (char)
typeinfo name for std::codecvt_utf8<char32_t, 1114111ul, (std::codecvt_mode)0>
typeinfo name for std::codecvt_utf8_utf16<wchar_t, 1114111ul, (std::codecvt_mode)0>
typeinfo name for vr::IServerTrackedDeviceProvider
typeinfo name for vr::ITrackedDeviceServerDriver
typeinfo name for vr::IVRDisplayComponent
unseen_objects
uw_frame_state_for
uw_frame_state_for.cold
uw_init_context_1
uw_init_context_1.cold
uw_install_context_1
uw_install_context_1.cold
uw_update_context_1
uw_update_context_1.cold
vector::_M_realloc_insert
void std::vector<CAssertCallback*, std::allocator<CAssertCallback*> >::_M_realloc_insert<CAssertCallback* const&>(__gnu_cxx::__normal_iterator<CAssertCallback**, std::vector<CAssertCallback*, std::allocator<CAssertCallback*> > >, CAssertCallback* const&)
void std::vector<CLogCallback*, std::allocator<CLogCallback*> >::_M_realloc_insert<CLogCallback* const&>(__gnu_cxx::__normal_iterator<CLogCallback**, std::vector<CLogCallback*, std::allocator<CLogCallback*> > >, CLogCallback* const&)
void std::vector<std::string, std::allocator<std::string> >::_M_realloc_insert<std::string const&>(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string const&)
void std::vector<std::string, std::allocator<std::string> >::_M_realloc_insert<std::string>(__gnu_cxx::__normal_iterator<std::string*, std::vector<std::string, std::allocator<std::string> > >, std::string&&)
vr::OpenVRInternal_ModuleServerDriverContext()::ctx
vr::VRDriverContext()::pHost
vr::k_InterfaceVersions
vsnprintf
vtable for CNullHmdLatest
vtable for CServerDriver_Null
vtable for __cxxabiv1::__class_type_info
vtable for __cxxabiv1::__function_type_info
vtable for __cxxabiv1::__pointer_type_info
vtable for __cxxabiv1::__si_class_type_info
vtable for __cxxabiv1::__vmi_class_type_info
vtable for std::basic_ios<char, std::char_traits<char> >
vtable for std::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >
vtable for std::basic_streambuf<char, std::char_traits<char> >
vtable for std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >
vtable for std::codecvt_utf8<char32_t, 1114111ul, (std::codecvt_mode)0>
vtable for std::codecvt_utf8_utf16<wchar_t, 1114111ul, (std::codecvt_mode)0>
wcslen
windowHeight
windowWidth
windowX
windowY
wmemcpy
wstring_convert::from_bytes
wstring_convert::to_bytes
