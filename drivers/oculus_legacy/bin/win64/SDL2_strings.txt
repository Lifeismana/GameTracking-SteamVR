																									
        <requestedExecutionLevel level="asInvoker" uiAccess="false"></requestedExecutionLevel>
      </requestedPrivileges>
      <requestedPrivileges>
     precision mediump float;     uniform sampler2D u_texture;     uniform sampler2D u_texture_u;     uniform sampler2D u_texture_v;     uniform vec4 u_modulation;     varying vec2 v_texCoord;         void main()     {         mediump vec3 yuv;         lowp vec3 rgb;         yuv.x = texture2D(u_texture,   v_texCoord).r;         yuv.y = texture2D(u_texture_u, v_texCoord).r - 0.5;         yuv.z = texture2D(u_texture_v, v_texCoord).r - 0.5;         rgb = mat3( 1,        1,       1,                     0,       -0.39465, 2.03211,                     1.13983, -0.58060, 0) * yuv;         gl_FragColor = vec4(rgb, 1);         gl_FragColor *= u_modulation;     } 
     precision mediump float;     uniform sampler2D u_texture;     uniform sampler2D u_texture_u;     uniform vec4 u_modulation;     varying vec2 v_texCoord;         void main()     {         mediump vec3 yuv;         lowp vec3 rgb;         yuv.x = texture2D(u_texture,   v_texCoord).r;         yuv.yz = texture2D(u_texture_u, v_texCoord).ar - 0.5;         rgb = mat3( 1,        1,       1,                     0,       -0.39465, 2.03211,                     1.13983, -0.58060, 0) * yuv;         gl_FragColor = vec4(rgb, 1);         gl_FragColor *= u_modulation;     } 
     precision mediump float;     uniform sampler2D u_texture;     uniform sampler2D u_texture_u;     uniform vec4 u_modulation;     varying vec2 v_texCoord;         void main()     {         mediump vec3 yuv;         lowp vec3 rgb;         yuv.x = texture2D(u_texture,   v_texCoord).r;         yuv.yz = texture2D(u_texture_u, v_texCoord).ra - 0.5;         rgb = mat3( 1,        1,       1,                     0,       -0.39465, 2.03211,                     1.13983, -0.58060, 0) * yuv;         gl_FragColor = vec4(rgb, 1);         gl_FragColor *= u_modulation;     } 
     precision mediump float;     uniform sampler2D u_texture;     uniform vec4 u_modulation;     varying vec2 v_texCoord;         void main()     {         gl_FragColor = texture2D(u_texture, v_texCoord);         gl_FragColor *= u_modulation;     } 
     precision mediump float;     uniform sampler2D u_texture;     uniform vec4 u_modulation;     varying vec2 v_texCoord;         void main()     {         vec4 abgr = texture2D(u_texture, v_texCoord);         gl_FragColor = abgr;         gl_FragColor.a = 1.0;         gl_FragColor *= u_modulation;     } 
     precision mediump float;     uniform sampler2D u_texture;     uniform vec4 u_modulation;     varying vec2 v_texCoord;         void main()     {         vec4 abgr = texture2D(u_texture, v_texCoord);         gl_FragColor = abgr;         gl_FragColor.r = abgr.b;         gl_FragColor.b = abgr.r;         gl_FragColor *= u_modulation;     } 
     precision mediump float;     uniform sampler2D u_texture;     uniform vec4 u_modulation;     varying vec2 v_texCoord;         void main()     {         vec4 abgr = texture2D(u_texture, v_texCoord);         gl_FragColor = abgr;         gl_FragColor.r = abgr.b;         gl_FragColor.b = abgr.r;         gl_FragColor.a = 1.0;         gl_FragColor *= u_modulation;     } 
     precision mediump float;     uniform vec4 u_color;         void main()     {         gl_FragColor = u_color;     } 
     uniform mat4 u_projection;     attribute vec2 a_position;     attribute vec2 a_texCoord;     attribute float a_angle;     attribute vec2 a_center;     varying vec2 v_texCoord;         void main()     {         float angle = radians(a_angle);         float c = cos(angle);         float s = sin(angle);         mat2 rotationMatrix = mat2(c, -s, s, c);         vec2 position = rotationMatrix * (a_position - a_center) + a_center;         v_texCoord = a_texCoord;         gl_Position = u_projection * vec4(position, 0.0, 1.0);        gl_PointSize = 1.0;     } 
    * %s (%s:%d)
    * always ignore: %s.
    * triggered %u time%s.
    // Do the color transform 
    // Get the U and V values 
    // Get the Y value 
    // That was easy. :) 
    </security>
    <security>
    gl_FragColor = texture2D(tex0, v_texCoord) * v_color;
    gl_FragColor = v_color;
    gl_FragColor = vec4(rgb, 1.0) * v_color;
    gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;
    rgb.b = dot(yuv, Bcoeff);
    rgb.g = dot(yuv, Gcoeff);
    rgb.r = dot(yuv, Rcoeff);
    tcoord *= UVCoordScale;
    tcoord = v_texCoord;
    v_color = gl_Color;
    v_texCoord = vec2(gl_MultiTexCoord0);
    vec2 tcoord;
    vec3 yuv, rgb;
    yuv += offset;
    yuv.x = texture2D(tex0, tcoord).r;
    yuv.y = texture2D(tex1, tcoord).r;
    yuv.yz = texture2D(tex1, tcoord).ar;
    yuv.yz = texture2D(tex1, tcoord).ra;
    yuv.z = texture2D(tex2, tcoord).r;
  '%s'
  </trustInfo>
  <trustInfo xmlns="urn:schemas-microsoft-com:asm.v3">
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
 !"#$%******************************************&*******************'()*****
 "$&(*,.02468:<>@BDFHJLNPRTVXZ\^`bdfhjlnprtvxz|~
 $(,048<@DHLPUY]aeimquy}
 )19AJRZbjs{
 A\_^
 A]A\^
 A]A\_
 A]A\_^]
 A]][
 A^A\^
 A^A\_
 A^A]A\
 A^A]A\_^][
 A^A]_^]
 A_A]A\_^
 A_A]A\_^][
 A_A^A]A\^
 A_A^A]A\_
 A_A^A]A\_^]
 A_A^A]_^
 fffff
!	@Present()
!)@:F,@zj/@\G1@|
!This program cannot be run in DOS mode.
"3DUfw
"B "B!<
#D$,;
#define UVCoordScale 0.5
#define UVCoordScale 1.0
#define sampler2D sampler2DRect
#define texture2D texture2DRect
$<auI
$HcC(H
$IcD$(I
$McL$
%d bpp BMP files not supported
%s not available
%s%s%s
%s() DirectX error 0x%8.8lx
%s,%s,%s
%s: %s
%s: %s (%d): %s %s
%s: %s (%d): %s %s (0x%X)
%s: Unknown DirectSound error: 0x%x
(A\_^[
(A_A]_]
(A_A^A]A\^]
(A_A^A]A\_^][
(A_A^_^][
(D$ H
(D$ L
(D$0D
(D$0H
(D$PH
(D$PI
(D$pE
(L$ A
(L$ D
(L$ H
(L$@D
(L$`D
(L$pD
(T$ A
(T$0D
(T$PA
(T$PD
(T$`A
(T$`D
(T$pD
(T$pL
(\$ A
(\$ L
(\$@A
(\$@D
(\$PA
(\$PD
(\$PH
(\$`D
(\$p3
(d$0D
(d$@D
(d$PA
(d$PD
(d$`D
(d$pA
(d$pD
(l$ D
(l$0D
(l$@D
(l$PD
(l$`D
(l$pD
(null)
(t$ D
(t$ H
(t$ I+
(t$ L
(t$0+
(t$0A
(t$0D
(t$0H
(t$0L
(t$0M
(t$@A
(t$@D
(t$@E3
(t$@H
(t$PA
(t$PD
(t$PH
(t$`D
(t$`E
(t$`H
(t$pA
(t$pD
(t$pt
(|$ A
(|$ D
(|$ E
(|$ H
(|$ L
(|$0D
(|$@A
(|$@D
(|$@H
(|$PD
(|$`H
(|$`L
(|$`fA
(|$pD
)<$fA
)D$0D
)D$0E
)D$PH
)D$pA
)D$pD
)L$ A
)L$ D
)L$0Ic
)L$@D
)L$@H
)L$`f
)L$`ff
)L$pD
)L$pH
)L$pfff
)L$pfffff
)T$PD
)T$pD
)\$@D
)\$`D
)\$`I
)\$pD
)d$0D
)d$0G
)d$@O
)d$PD
)d$PI
)d$`fD
)d$pD
)l$ D
)l$ J
)l$0D
)l$0Hc
)l$@A
)l$@D
)l$@E
)l$PD
)l$`D
)l$pD
)t$ A
)t$ H
)t$ H+
)t$ f
)t$ fA
)t$0D
)t$0Hc
)t$0I
)t$0M
)t$@3
)t$@H
)t$@Ic
)t$PD
)t$PL
)t$PO
)t$`D
)t$`F
)t$`O
)t$pD
)|$ E
)|$ G
)|$ H
)|$ I+
)|$ J
)|$ L
)|$ f
)|$0H
)|$0f
)|$@D
)|$@L
)|$`A
)|$`D
)|$`t-
)|$pO
******
********
*********
***********
*******************
****************************************************************************
+L$DD+L$@
-NV21t
..\..\src\render\opengl\SDL_render_gl.c
..\..\src\render\opengles2\SDL_render_gles2.c
.pdata
.text
/-NV12t#
// RGB coefficients 
// YUV offset 
0-NV12t$
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ0x
0123456789abcdef
0A\_^
0A]A\^
0A]A\_
0A]A\_^]
0A]_]
0A^A]A\
0A^A]A\_^
0A_A]]
0A_A^A\^]
0A_A^A]
0A_A^A]A\_
0A_A^A]A\_^]
0Hc\$`L
0tID;
25090500000000000000504944564944,PS3 DualShock,a:b2,b:b1,back:b9,dpdown:h0.8,dpleft:h0.4,dpright:h0.2,dpup:h0.1,guide:,leftshoulder:b6,leftstick:b10,lefttrigger:b4,leftx:a0,lefty:a1,rightshoulder:b7,rightstick:b11,righttrigger:b5,rightx:a2,righty:a3,start:b8,x:b0,y:b3,
33333
341a3608000000000000504944564944,Afterglow PS3 Controller,a:b1,b:b2,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:b12,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b0,y:b3,
4Afffff
4c056802000000000000504944564944,PS3 Controller,a:b14,b:b13,back:b0,dpdown:b6,dpleft:b7,dpright:b5,dpup:b4,guide:b16,leftshoulder:b10,leftstick:b1,lefttrigger:b8,leftx:a0,lefty:a1,rightshoulder:b11,rightstick:b2,righttrigger:b9,rightx:a2,righty:a3,start:b3,x:b15,y:b12,
4c05c405000000000000504944564944,PS4 Controller,a:b1,b:b2,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:b12,leftshoulder:b4,leftstick:b10,lefttrigger:a3,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:a4,rightx:a2,righty:a5,start:b9,x:b0,y:b3,
4d6963726f736f66742050432d6a6f79,OUYA Controller,a:b0,b:b3,dpdown:b9,dpleft:b10,dpright:b11,dpup:b8,guide:b14,leftshoulder:b4,leftstick:b6,lefttrigger:b12,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b7,righttrigger:b13,rightx:a5,righty:a4,x:b1,y:b2,
5cjMT
6d0416c2000000000000504944564944,Generic DirectInput Controller,a:b1,b:b2,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b0,y:b3,
6d0419c2000000000000504944564944,Logitech F710 Gamepad,a:b1,b:b2,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b0,y:b3,
8859-1
88880803000000000000504944564944,PS3 Controller,a:b2,b:b1,back:b8,dpdown:h0.8,dpleft:h0.4,dpright:h0.2,dpup:h0.1,guide:b12,leftshoulder:b4,leftstick:b9,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b10,righttrigger:b7,rightx:a3,righty:a4,start:b11,x:b0,y:b3,
8A_A^A]A\_^][
8A_A^A]^
8A__^[
9+~aL
98v&H
99~9L
9;t]L
9\$8~+
9k4t0A
9k\ta
9s(u(9{,u#H
9w,txH
9x|uQH
:@:F<@Z
;GL_OUT_OF_MEMORY
;IYUVH
;YV12H
;\$8|
;\$`r
;\$`sTD
;_<t>
;l$P}
;|$h|1H;^Xu
< rl<
<$HcD$
<$IcA
<-t	<0u
</assembly>PAPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPAD
<0ti<1teH
<Hu	M
<Pfff
<Qt3A
<assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0">
<qsort.c gjm 1.12 1998-03-19>
=@zj?@L~@@\GA@l
=IYUV
=IYUVt
=IYUVti=UYVY
=IYUVu H
=IYUVup
=JUNKt
=LISTt
=NV12t
=NV21
=NV21A
=NV21w%tM=
=NV21w2t)=
=UYVY
=WAVE
=YUY2t
=YV12A
=YV12t
=YV12td=YUY2tO=YVYUt:=IYUVt)=UYVYt
=YV12t~=YUY2t
=YVYUt
=bextt
=fmt t
>H9=%4
?/lj,D
?>UUUUU
?Created renderer: %s
?ERROR: NumPoints = %i
?IUUUUU
?LUUUUU
?Unable to lock source surface
?Unsupported YUV format
?nearest
?v<y5
?|TfA
@ %z8
@ BMH
@.data
@.reloc
@.rsrc
@88t5H
@8k%u
@8{$tUH
@A\][
@A\_[
@A\_^
@A\_^][
@A]A\^
@A]A\_
@A]A\_^]
@A^A\^
@A^A\_
@A^A]A\
@A^A]A\_]
@A^_^
@A_A^A]
@A_A^A]A\_
@A_A^A]_^][
@Couldn't open %s
@C|2A
@SATAVAWH
@SATH
@SAVH
@SAWH
@SUATH
@SUAUH
@SUVWATAUAVAWH
@SUVWATH
@SUVWAVAWH
@SUVWAVH
@SUWATAUH
@SUWH
@SVAUH
@SVWATH
@SVWAWH
@SWATH
@SWAUAWH
@UATH
@UAUAWH
@USAUAVAWH
@UUUUUU
@UVATAUAVAWH
@UVATAVH
@UVAVH
@UVAWH
@UVWATAUAVH
@UVWATAUH
@UVWAUAVH
@UVWH
@UWAUAVH
@UWAUAWH
@UWAUH
@VATAUH
@VATH
@VAUAVAWH
@VWATH
@WATAVAWH
@WATH
@WAVH
A+@HA+@@
A+@LA+@D
A8,$u
A84$u
A9Cxu
A9C|t
A9] ~II
A;] |
A@@u13
A@H+A0
AC Back
AC Bookmarks
AC Forward
AC Home
AC Refresh
AC Search
AC Stop
ANo displays available
APassed NULL destination surface
ASCII
ATAUAVAW
ATAVH
AUAVAWH
AVAWH
A\_^][
A]A\]
A]A\^[
A]A\_
A]A\_][
A]A\_^]
A]^][
A^A\_
A^A\_^]
A^A]A\
A^A]A\_
A^A]A\_]
A^A]A\_^
A^A]A\_^]
A^A]A\_^][
A^A]]
A^A]_
A^A]_]
A_A]A\_^
A_A]_^]
A_A^A\^]
A_A^A]A\
A_A^A]A\]
A_A^A]A\_
A_A^A]A\_^]
A_A^A]A\_^][
A_A^A][]
A_A^]
A_A^_]
A_A^_^[]
A_A^_^]
Abort
Acquiring DirectInput device
AdjustWindowRectEx
Again
All SDL assertions between last init/quit:
AltErase
Always Ignore
Application
Application didn't initialize properly, did you include SDL_main.h in the file containing your main() function?
Application not compiled with SDL %d.%d
Assertion Failed
Assertion failure at %s (%s:%d), triggered %u %s:
AttachConsole
Audio device already open
Audio device has a callback, queueing not allowed
Audio device in use
Audio device is already opened
Audio subsystem is not initialized
Audio target '%s' not available
AudioMute
AudioNext
AudioPlay
AudioPrev
AudioStop
AuthenticAMD
Axis index too large: %d
B0fff
B@<4w
Backspace
BeginScene()
BitBlt
Blit combination not supported
Break
BrightnessDown
BrightnessUp
Button index too large: %d
Button name too large: %s
C @8p
C D9=Q
C H9h(u$H
C&fA;
C(HcC0
C(fA;
C,fA;
C0ffffff
C2fA;
C6fA;
C8HcC@
CH;C(u=L
CHHcC
CINTLGNT.IME
CONFLICTINGRENDERSTATE
CONFLICTINGTEXTUREFILTER
CONFLICTINGTEXTUREPALETTE
CRITICAL
C`D9s
Calculator
CallWindowProcW
Caller doesn't have priority
Can't create renderer for NULL surface
Can't write to read-only memory
Cancel
CapsLock
ChangeDisplaySettingsEx() failed: %s
ChangeDisplaySettingsExW
ChoosePixelFormat
Clear
Clear / Again
Clear()
ClientToScreen
ClipCursor
CloseClipboard
CloseHandle
CloseTouchInputHandle
CoCreateInstance
CoInitialize
CoInitializeEx
CoUninitialize
Coinitialize
CombineRgn
CompareStringA
Complex WAVE files not supported
Compressed BMP files not supported
Computer
Control requested is not available
Could not allocate space to read DB into memory
Could not create EGL context
Could not create EGL context (context attributes are not supported)
Could not create GL context
Could not create GLES window surface
Could not get EGL display
Could not initialize EGL
Could not initialize OpenGL / GLES library
Could not load EGL library
Could not make EGL context current
Could not read DB
Could not retrieve EGL function eglBindAPI
Could not retrieve EGL function eglChooseConfig
Could not retrieve EGL function eglCreateContext
Could not retrieve EGL function eglCreateWindowSurface
Could not retrieve EGL function eglDestroyContext
Could not retrieve EGL function eglDestroySurface
Could not retrieve EGL function eglGetConfigAttrib
Could not retrieve EGL function eglGetDisplay
Could not retrieve EGL function eglGetProcAddress
Could not retrieve EGL function eglInitialize
Could not retrieve EGL function eglMakeCurrent
Could not retrieve EGL function eglQueryString
Could not retrieve EGL function eglSwapBuffers
Could not retrieve EGL function eglSwapInterval
Could not retrieve EGL function eglTerminate
Could not retrieve EGL function eglWaitGL
Could not retrieve EGL function eglWaitNative
Could not retrieve OpenGL functions
Couldn't convert image to %d bpp
Couldn't create XInput haptic mutex
Couldn't create XInput haptic thread
Couldn't create a prefpath.
Couldn't create audio thread
Couldn't create mixer lock
Couldn't create semaphore
Couldn't create window
Couldn't find GetModuleFileNameExW
Couldn't find any displays
Couldn't find display mode match
Couldn't find dummy surface for window
Couldn't find joystick in haptic device list
Couldn't find mapping for device (%d)
Couldn't find matching EGL config
Couldn't find matching render driver
Couldn't get clipboard data
Couldn't load GL function %s: %s
Couldn't load GLES2 function %s: %s
Couldn't load psapi.dll
Couldn't locate our .exe
Couldn't locate our prefpath
Couldn't lock event queue
Couldn't open clipboard
Couldn't parse %s
Couldn't parse GUID from %s
Couldn't parse name from %s
Couldn't register application class
Couldn't set clipboard data
CrSel
CreateBitmap
CreateCompatibleBitmap
CreateCompatibleDC
CreateDCW
CreateDIBSection
CreateDXGIFactory
CreateDevice()
CreateDirectoryW
CreateFileW
CreateFontIndirectW
CreateIconFromResource
CreateIconIndirect
CreateIconIndirect()
CreateOffscreenPlainSurface()
CreatePixelShader()
CreateRectRgn
CreateSemaphoreW
CreateSystemCursor is not currently supported
CreateTexture(D3DPOOL_DEFAULT)
CreateTexture(D3DPOOL_SYSTEMMEM)
CreateThread
CreateWindowExW
Creating DirectInput device
CurrencySubUnit
CurrencyUnit
Cursor hot spot doesn't lie within cursor
Cursor not associated with the current mouse
Cursors are not currently supported
D$ =factt
D$ E3
D$ E;
D$ Hc
D$ HcA
D$ I;
D$ Ic
D$ IcD$
D$ L;
D$ M;
D$ Mc
D$ f9
D$ fA
D$ fff
D$ t#
D$ t<
D$"L;
D$"fA
D$"fD
D$$fA
D$&I;
D$(+G(
D$(9C,A
D$(A+
D$(D;
D$(H;
D$(HcA
D$(HcF
D$(HcI
D$(IcD$
D$(M;
D$(f#
D$(fA
D$,+G,
D$,+L$ 
D$,A+
D$,M;
D$,fA
D$.H;
D$0$0
D$0D;
D$0H+
D$0Hc
D$0HcA
D$0HcI
D$0IcD$
D$0Lc
D$0M;
D$0fA
D$0fD#
D$0ffff
D$1D:
D$4fA
D$8#0
D$8D;
D$8H;
D$8HcF
D$8Ic
D$8M;
D$8fA
D$;:C
D$<:C
D$=:C
D$>:C
D$?:C
D$@"0
D$@E3
D$@Hc
D$@HcD$HL
D$@Ic
D$@M;
D$@ffff
D$H!0
D$HIc
D$HIcD$
D$LA9
D$PE3
D$PHc
D$PHcA
D$Pfffff
D$`E3
D$`H;
D$`Hc
D$`Ic
D$`ff
D$b"D$`"D$a"Eh<
D$hE3
D$hHcD$p
D$hIc
D$ht)
D$lE3
D$p=WAVEu	D
D$pE+
D$pE3
D$pHc
D$pHc@
D$pHcD$x
D$pL#
D$pt#
D$xA+
D$xD;
D$xD;S
D$xE+
D$xHcF
D$xL#
D$xfA
D$xtE
D+\$PE
D+cpD+ktE
D+l$$A
D+t$D
D3D9.DLL
D8|$:
D9&uPD9f
D9[`~
D9d$hu
D9n t
D9{(t:
D9{|u
D;"uU;j
D;d$(
D;d$`
DEBUG
DEVICELOST
DEVICENOTRESET
DISABLED
DISP_CHANGE_BADFLAGS
DISP_CHANGE_BADMODE
DISP_CHANGE_BADPARAM
DISP_CHANGE_FAILED
DRIVERINTERNALERROR
DRIVERINVALIDCALL
DSOUND.DLL
DXGI.DLL
DecimalSeparator
DefWindowProcW
Delete
DeleteCriticalSection
DeleteDC
DeleteObject
DescribePixelFormat
DestroyIcon
DestroyWindow
Device doesn't support rumble
DialogBoxIndirectParamW
Direct3DCreate9
DirectSound
DirectSound CreateSoundBuffer
DirectSound GetCurrentPosition
DirectSound Lock
DirectSound SetCooperativeLevel
DirectSound: System doesn't appear to have DX8.
DirectSound: Unsupported audio format
DirectSound: failed to load DSOUND.DLL
DirectSoundCaptureEnumerateW
DirectSoundCreate
DirectSoundCreate8
DirectSoundEnumerateW
DispatchMessageW
DisplaySwitch
DragAcceptFiles
DragFinish
DragQueryFileW
DrawPrimitiveUP()
DrawTextW
E,8E@
E84$u
E9Y H
E9i H
EGL implementation does not support sRGB system framebuffers
EGL not initialized
EGL_KHR_create_context
EGL_KHR_gl_colorspace
ENABLED
ERROR
Eject
Empty destination palette
EmptyClipboard
Enabling actuators
EndDialog
EnterCriticalSection
EnumDisplayDevicesW
EnumDisplayMonitors
EnumDisplaySettingsW
Enumerating DirectInput devices
Enumerating supported effects
Error reading from BMP
Error reading from datastream
Error seeking in datastream
Error writing to datastream
Escape
Event queue is full (%d events)
ExSel
Execute
ExitProcess
F32LSB
F32MSB
F32SYS
FOURCC pixel formats are not supported
Failed getting OpenGL glGetError entry point
Failed getting OpenGL glGetFramebufferAttachmentParameteriv entry point
Failed getting OpenGL glGetIntegerv entry point
Failed getting OpenGL glGetString entry point
Failed loading 
Failed to compile shader:
Failed to create message window for joystick autodetect
Failed to create register class for joystick autodetect
Failed to link shader program
Failed to load the shader
Failed to load the shader: %s
Failed to obtain XInput device capabilities. Device disconnected?
Fc?u(5
File is not a Windows BMP file
FormatMessageW
FreeLibrary
Function not supported
GD$pA
GD$xA
GD3G@
GDI32.dll
GL 3.x is not supported
GL$pA
GL$xA
GLES2_CreateTexture
GLES2_DestroyRenderer
GLES2_RenderCopy
GLES2_RenderCopyEx
GLES2_RenderDrawLines
GLES2_RenderFillRects
GLES2_ResetState
GLES2_UpdateTexture
GLES2_UpdateTextureYUV
GLES2_UpdateViewport
GL_ARB_debug_output
GL_ARB_fragment_shader
GL_ARB_multitexture
GL_ARB_shader_objects
GL_ARB_shading_language_100
GL_ARB_texture_non_power_of_two
GL_ARB_texture_rectangle
GL_ARB_vertex_shader
GL_CreateTexture
GL_DestroyRenderer
GL_EXT_framebuffer_object
GL_EXT_texture_rectangle
GL_INVALID_ENUM
GL_INVALID_OPERATION
GL_INVALID_VALUE
GL_NO_ERROR
GL_RenderCopy
GL_RenderCopyEx
GL_RenderDrawLines
GL_RenderFillRects
GL_RenderReadPixels
GL_ResetState
GL_STACK_OVERFLOW
GL_STACK_UNDERFLOW
GL_TABLE_TOO_LARGE
GL_UpdateTexture
GL_UpdateTextureYUV
GL_UpdateViewport
GenuineIntel
GetAsyncKeyState
GetClassInfoW
GetClientRect
GetClipboardData
GetClipboardSequenceNumber
GetCurrentProcess
GetCurrentThread
GetCurrentThreadId
GetCursorPos
GetDC
GetDIBits
GetDesc()
GetDesktopWindow
GetDeviceCaps
GetDeviceGammaRamp
GetDeviceGammaRamp()
GetDoubleClickTime
GetDpiForMonitor
GetEnvironmentVariableA
GetFileSizeEx
GetFileVersionInfoA
GetFileVersionInfoSizeA
GetFocus
GetKeyState
GetKeyboardLayout
GetLastError
GetMenu
GetMessageExtraInfo
GetMessageW
GetModuleFileNameExW
GetModuleHandle() failed with error code %lu.
GetModuleHandleW
GetPixelFormat
GetPresentParameters()
GetProcAddress
GetPropW
GetRawInputData
GetRawInputDeviceInfoA
GetRawInputDeviceList
GetReadingString
GetRenderTargetData()
GetStdHandle
GetSurfaceLevel()
GetSwapChain()
GetSystemInfo
GetSystemPowerStatus
GetTextMetricsW
GetTickCount
GetTouchInputInfo
GetUpdateRect
GetVersionExA
GetWindowLongPtrW
GetWindowLongW
GetWindowRect
GetWindowTextLengthW
GetWindowTextW
Getting device axes
Getting effect status
GlobalAlloc
GlobalLock
GlobalMemoryStatusEx
GlobalUnlock
H)}PH;
H9S u
H9t(Ht
H9x H
H9x(H
H9xHu
H9~HA
H;5#!
H;J(t
H;KXu	H
H;Z(t
H;^Xt
H;_ u
H;n w
H;z(u
HA_A^
HA_A^A\_
Haptic error %s
Haptic: Autocenter must be between 0 and 100.
Haptic: Device does not support setting autocenter.
Haptic: Device does not support setting gain.
Haptic: Device does not support setting pausing.
Haptic: Device does not support status queries.
Haptic: Device has no free space left.
Haptic: Effect not supported by haptic device.
Haptic: Gain must be between 0 and 100.
Haptic: Internal error on finding supported effects.
Haptic: Invalid effect identifier.
Haptic: Invalid haptic device identifier
Haptic: Joystick isn't a haptic device.
Haptic: Joystick isn't valid.
Haptic: Mouse isn't a haptic device.
Haptic: Rumble effect not initialized on haptic device
Haptic: SubSystem already open.
Haptic: There are %d haptic devices available
Haptic: Unknown direction type.
Haptic: Unknown effect type.
Haptic: Updating effect type is illegal.
Hat index too large: %d
HcAPL+
HcD$ D
HcD$ M
HcD$$D
HcD$$M
HcD$(D
HcD$(M
HcD$0D
HcD$0M
HcD$8H
HcD$8M
HcD$@I
HcD$@L
HcD$PL
HcD$XH
HcD$xH
HcD$xL
HcF(H
HcG(H
HcI,H
HcI,Hc
HcL$H
HcL$`
HcL$`Ic
HcT$x
HcY,A
Hc\$PH
Hci,L
Hcq,H
Hcq,L
Hcy,H
I$A_A^A]A\
I9KXt
I9X u
I9[ u
IDirectInput::CreateDevice
IDirectInput::Initialize
IDirectInputDevice8::Acquire
IDirectInputDevice8::GetCapabilities
IDirectInputDevice8::QueryInterface
IDirectInputDevice8::SetCooperativeLevel
IDirectInputDevice8::SetDataFormat
IDirectInputDevice8::SetProperty
IDirectInputDevice8::Unacquire
IMA ADPCM decoder can only handle %u channels
IMM32.dll
INVALIDCALL
INVALIDDEVICE
IP9Qht
IPD9Aht
ISO-8859-1
IYUVt
IYUVt&
IYUVtL
IYUVu
Ic	Mc
Ic4$H
Ic@(I
IcA(A
IcA(I
IcB(I
IcC(I
IcD$(I
IcE(I
Ignore
ImmAssociateContext
ImmGetCandidateListW
ImmGetCompositionStringW
ImmGetContext
ImmGetIMEFileNameA
ImmLockIMC
ImmLockIMCC
ImmNotifyIME
ImmReleaseContext
ImmSetCompositionStringW
ImmSetCompositionWindow
ImmUnlockIMC
ImmUnlockIMCC
Indexed pixel formats not supported
InitializeCriticalSectionAndSpinCount
Initializing DirectInput device
Insert
Invalid RWops
Invalid audio device ID
Invalid call for the current state
Invalid destination blit rectangle
Invalid destination format
Invalid display index
Invalid parameter
Invalid renderer
Invalid source blit rectangle
Invalid source format
Invalid target pixel format
Invalid texture
Invalid texture format
Invalid window
IsClipboardFormatAvailable
IsIconic
IsRectEmpty
Joystick button name too large: %s
Joystick hasn't been opened yet
Joystick only has %d axes
Joystick only has %d balls
Joystick only has %d buttons
Joystick only has %d hats
K H9i u-H
KBDIllumDown
KBDIllumToggle
KBDIllumUp
KERNEL32.dll
KLD;C u
KP9qhH
KPD9Aht
KTD;C(u
K`H;KXu
Keypad !
Keypad #
Keypad %
Keypad &
Keypad &&
Keypad (
Keypad )
Keypad *
Keypad +
Keypad +/-
Keypad ,
Keypad -
Keypad .
Keypad /
Keypad 0
Keypad 00
Keypad 000
Keypad 1
Keypad 2
Keypad 3
Keypad 4
Keypad 5
Keypad 6
Keypad 7
Keypad 8
Keypad 9
Keypad :
Keypad <
Keypad =
Keypad = (AS400)
Keypad >
Keypad @
Keypad A
Keypad B
Keypad Backspace
Keypad Binary
Keypad C
Keypad Clear
Keypad ClearEntry
Keypad D
Keypad Decimal
Keypad E
Keypad Enter
Keypad F
Keypad Hexadecimal
Keypad MemAdd
Keypad MemClear
Keypad MemDivide
Keypad MemMultiply
Keypad MemRecall
Keypad MemStore
Keypad MemSubtract
Keypad Octal
Keypad Space
Keypad Tab
Keypad XOR
Keypad ^
Keypad {
Keypad |
Keypad ||
Keypad }
L$ E3
L$ HcM
L$ Hi
L$ IcE(I
L$ SH
L$ SUAUH
L$ SUAVH
L$ SWH
L$ UATAUAVAWH
L$ VWAUAVAW
L$ fD
L$$M;
L$$fA
L$$fD
L$&fE
L$(A;
L$(HcM
L$(fE
L$0E3
L$0H+
L$0M;
L$6E3
L$8E3
L$8HcM
L$8fE
L$@E3
L$@Hc
L$HH+
L$HH;
L$HHcM
L$HfD
L$PHc
L$XH+
L$`E3
L$`HcG
L$hE3
L$hHc
L$hI;
L$pD+
L$pE;
L9	u0H
L9	u?L
L9	uDH
L9G u
L9O u
L9` H
L9`(H
L9h H
L9h(H
L9h8t
L9h@t
L;A u'L
L;A(u$H
LC_ALL
LC_CTYPE
LC_MESSAGES
Lc!Lci
Lc1Lcy
LcC 3
LcC03
LcC@3
LcCDH
LcD$`Ic
LcD$hIc
LcQ,D
Lc\$PE
Lca,D
Lca,Hc
Lca,L
Lcy,H
LeaveCriticalSection
Left Alt
Left Ctrl
Left GUI
Left Shift
Left Windows
LoadCursorW
LoadImageW
LoadLibraryA
LoadLibraryW
LockRect()
M9C u
M9u0tH
MOREDATA
MPEG Layer 3 data not supported
MSSCIPYA.IME
MSTCIPHA.IME
MapVirtualKeyW
MediaSelect
Missing desired mode or closest mode parameter
Mixing buffer was lost
ModeSwitch
MulDiv
N@fff
NEJ(~
NOTAVAILABLE
NOTFOUND
NV12H
NV12t
NV12t	A
NV21u
Negative swap interval unsupported in this GL
No GL driver has been loaded
No OpenGL context has been made current
No OpenGL support in video driver
No audio device found
No available audio device
No available video device
No buffer allocated for conversion
No capture support
No conversion available for these formats
No conversion available for these rates
No dynamic GL support in video driver
No hardware accelerated renderers available
No matching GL pixel format available
No message system available
No shader matching the requested characteristics was found
No such device
No such device.
No video mode large enough for %dx%d
No window has focus
No window texture data
Not enough resources to create thread
Numlock
OLEAUT32.dll
OPENGL32.DLL
OUTOFVIDEOMEMORY
Only works with same format surfaces
OpenClipboard
OpenGL ES context already created
OpenGL error: %08X
OpenGL error: GL_INVALID_ENUM
OpenGL error: GL_INVALID_VALUE
OpenGL library already loaded
OpenGL not initialized
OpenGL shaders: %s
Out of memory
OutputDebugStringW
PA\][
PA\_[
PA]A\_
PA]^[
PA]_]
PA^_^][
PA_A^A]_^][
PIDVID^
PIDVIDp
PINTLGNT.IME
PageDown
PageUp
Palettized textures are not supported
Parameter '%s' is invalid
Passed NULL cursor surface
Passed a NULL condition variable
Passed a NULL mutex
Passed a NULL sem
Paste
Path too long.
Pause
Pausing the device
PeekMessageW
Power
PrintScreen
Prior
Q0Lci
QueryPerformanceCounter
QueryPerformanceFrequency
Querying DirectInput interface
RSDS@
ReadFile
RegisterClassExW
RegisterClassW
RegisterDeviceNotificationW
RegisterRawInputDevices
RegisterTouchWindow
ReleaseDC
ReleaseSemaphore
ReleaseSemaphore() failed
RemovePropW
Removing effect from the device
Renderer already associated with window
Renderer does not support RenderCopyEx
Renderer doesn't support querying output size
Renderer is not a D3D renderer
Reset()
Resetting device
Retry
Return
Right
Right Alt
Right Ctrl
Right GUI
Right Shift
Right Windows
Running the effect
S16LSB
S16MSB
S16SYS
S32LSB
S32MSB
S32SYS
SAUAVH
SDL EVENT QUEUE: Maximum events in-flight: %d
SDL Windows video driver
SDL assertion report.
SDL dummy audio driver
SDL dummy video driver
SDL not compiled with stdio support
SDL2.dll
SDLAudioDev%d
SDLTimer
SDLXInputDev%d
SDL_ALLOW_TOPMOST
SDL_ASSERT
SDL_AUDIODRIVER
SDL_AUDIO_CHANNELS
SDL_AUDIO_DEVICE_NAME
SDL_AUDIO_FORMAT
SDL_AUDIO_FREQUENCY
SDL_AUDIO_SAMPLES
SDL_AddEventWatch
SDL_AddHintCallback
SDL_AddTimer
SDL_AllocFormat
SDL_AllocPalette
SDL_AllocRW
SDL_AtomicAdd
SDL_AtomicCAS
SDL_AtomicCASPtr
SDL_AtomicGet
SDL_AtomicGetPtr
SDL_AtomicLock
SDL_AtomicSet
SDL_AtomicSetPtr
SDL_AtomicTryLock
SDL_AtomicUnlock
SDL_AudioInit
SDL_AudioQuit
SDL_BLIT_CPU_FEATURES
SDL_BlendFillRects(): Unsupported surface format
SDL_BlendLines(): Passed NULL destination surface
SDL_BlendLines(): Unsupported surface format
SDL_BlendPoint(): Unsupported surface format
SDL_BlendPoints(): Unsupported surface format
SDL_BuildAudioCVT
SDL_CalculateGammaRamp
SDL_CaptureMouse
SDL_ClearError
SDL_ClearHints
SDL_ClearQueuedAudio
SDL_CloseAudio
SDL_CloseAudioDevice
SDL_CondBroadcast
SDL_CondSignal
SDL_CondWait
SDL_CondWaitTimeout
SDL_ConvertAudio
SDL_ConvertPixels
SDL_ConvertSurface
SDL_ConvertSurfaceFormat
SDL_CreateColorCursor
SDL_CreateCond
SDL_CreateCursor
SDL_CreateMutex
SDL_CreateRGBSurface
SDL_CreateRGBSurfaceFrom
SDL_CreateRenderer
SDL_CreateSemaphore
SDL_CreateShapedWindow
SDL_CreateSoftwareRenderer
SDL_CreateSystemCursor
SDL_CreateTexture
SDL_CreateTextureFromSurface
SDL_CreateTextureFromSurface() passed NULL surface
SDL_CreateThread
SDL_CreateWindow
SDL_CreateWindowAndRenderer
SDL_CreateWindowFrom
SDL_DISKAUDIODELAY
SDL_DISKAUDIOFILE
SDL_DXGIGetOutputInfo
SDL_DYNAMIC_API
SDL_DYNAPI_entry
SDL_DelEventWatch
SDL_DelHintCallback
SDL_Delay
SDL_DestroyCond
SDL_DestroyMutex
SDL_DestroyRenderer
SDL_DestroySemaphore
SDL_DestroyTexture
SDL_DestroyWindow
SDL_DetachThread
SDL_Direct3D9GetAdapterIndex
SDL_DisableScreenSaver
SDL_DrawLines(): Passed NULL destination surface
SDL_DrawLines(): Unsupported surface format
SDL_DrawPoint(): Unsupported surface format
SDL_DrawPoints(): Unsupported surface format
SDL_EVENT_QUEUE_STATISTICS
SDL_EnableScreenSaver
SDL_EnclosePoints
SDL_Error
SDL_EventState
SDL_FRAMEBUFFER_ACCELERATION
SDL_FillRect
SDL_FillRect(): Unsupported surface format
SDL_FillRect(): You must lock the surface
SDL_FillRects
SDL_FillRects() passed NULL rects
SDL_FilterEvents
SDL_FlushEvent
SDL_FlushEvents
SDL_FreeCursor
SDL_FreeFormat
SDL_FreePalette
SDL_FreeRW
SDL_FreeSurface
SDL_FreeWAV
SDL_GAMECONTROLLERCONFIG
SDL_GL_BindTexture
SDL_GL_CreateContext
SDL_GL_DeleteContext
SDL_GL_ExtensionSupported
SDL_GL_GetAttribute
SDL_GL_GetCurrentContext
SDL_GL_GetCurrentWindow
SDL_GL_GetDrawableSize
SDL_GL_GetProcAddress
SDL_GL_GetSwapInterval
SDL_GL_LoadLibrary
SDL_GL_MakeCurrent
SDL_GL_ResetAttributes
SDL_GL_SetAttribute
SDL_GL_SetSwapInterval
SDL_GL_SwapWindow
SDL_GL_UnbindTexture
SDL_GL_UnloadLibrary
SDL_GameControllerAddMapping
SDL_GameControllerAddMappingsFromRW
SDL_GameControllerClose
SDL_GameControllerEventState
SDL_GameControllerGetAttached
SDL_GameControllerGetAxis
SDL_GameControllerGetAxisFromString
SDL_GameControllerGetBindForAxis
SDL_GameControllerGetBindForButton
SDL_GameControllerGetButton
SDL_GameControllerGetButtonFromString
SDL_GameControllerGetJoystick
SDL_GameControllerGetStringForAxis
SDL_GameControllerGetStringForButton
SDL_GameControllerMapping
SDL_GameControllerMappingForGUID
SDL_GameControllerName
SDL_GameControllerNameForIndex
SDL_GameControllerOpen
SDL_GameControllerUpdate
SDL_GetAssertionHandler
SDL_GetAssertionReport
SDL_GetAudioDeviceName
SDL_GetAudioDeviceStatus
SDL_GetAudioDriver
SDL_GetAudioStatus
SDL_GetBasePath
SDL_GetCPUCacheLineSize
SDL_GetCPUCount
SDL_GetClipRect
SDL_GetClipboardText
SDL_GetClosestDisplayMode
SDL_GetColorKey
SDL_GetCurrentAudioDriver
SDL_GetCurrentDisplayMode
SDL_GetCurrentVideoDriver
SDL_GetCursor
SDL_GetDefaultAssertionHandler
SDL_GetDefaultCursor
SDL_GetDesktopDisplayMode
SDL_GetDisplayBounds
SDL_GetDisplayDPI
SDL_GetDisplayMode
SDL_GetDisplayName
SDL_GetError
SDL_GetEventFilter
SDL_GetGlobalMouseState
SDL_GetGrabbedWindow
SDL_GetHint
SDL_GetKeyFromName
SDL_GetKeyFromScancode
SDL_GetKeyName
SDL_GetKeyboardFocus
SDL_GetKeyboardState
SDL_GetModState
SDL_GetMouseFocus
SDL_GetMouseState
SDL_GetNumAudioDevices
SDL_GetNumAudioDrivers
SDL_GetNumDisplayModes
SDL_GetNumRenderDrivers
SDL_GetNumTouchDevices
SDL_GetNumTouchFingers
SDL_GetNumVideoDisplays
SDL_GetNumVideoDrivers
SDL_GetPerformanceCounter
SDL_GetPerformanceFrequency
SDL_GetPixelFormatName
SDL_GetPlatform
SDL_GetPowerInfo
SDL_GetPrefPath
SDL_GetQueuedAudioSize
SDL_GetRGB
SDL_GetRGBA
SDL_GetRelativeMouseMode
SDL_GetRelativeMouseState
SDL_GetRenderDrawBlendMode
SDL_GetRenderDrawColor
SDL_GetRenderDriverInfo
SDL_GetRenderTarget
SDL_GetRenderer
SDL_GetRendererInfo
SDL_GetRendererOutputSize
SDL_GetRevision
SDL_GetRevisionNumber
SDL_GetScancodeFromKey
SDL_GetScancodeFromName
SDL_GetScancodeName
SDL_GetShapedWindowMode
SDL_GetSurfaceAlphaMod
SDL_GetSurfaceBlendMode
SDL_GetSurfaceColorMod
SDL_GetSystemRAM
SDL_GetTextureAlphaMod
SDL_GetTextureBlendMode
SDL_GetTextureColorMod
SDL_GetThreadID
SDL_GetThreadName
SDL_GetTicks
SDL_GetTouchDevice
SDL_GetTouchFinger
SDL_GetVersion
SDL_GetVideoDriver
SDL_GetWindowBrightness
SDL_GetWindowData
SDL_GetWindowDisplayIndex
SDL_GetWindowDisplayMode
SDL_GetWindowFlags
SDL_GetWindowFromID
SDL_GetWindowGammaRamp
SDL_GetWindowGrab
SDL_GetWindowID
SDL_GetWindowMaximumSize
SDL_GetWindowMinimumSize
SDL_GetWindowPixelFormat
SDL_GetWindowPosition
SDL_GetWindowSize
SDL_GetWindowSurface
SDL_GetWindowTitle
SDL_GetWindowWMInfo
SDL_HAPTIC_GAIN_MAX
SDL_HapticClose
SDL_HapticDestroyEffect
SDL_HapticEffectSupported
SDL_HapticGetEffectStatus
SDL_HapticIndex
SDL_HapticName
SDL_HapticNewEffect
SDL_HapticNumAxes
SDL_HapticNumEffects
SDL_HapticNumEffectsPlaying
SDL_HapticOpen
SDL_HapticOpenFromJoystick
SDL_HapticOpenFromMouse
SDL_HapticOpened
SDL_HapticPause
SDL_HapticQuery
SDL_HapticRumbleInit
SDL_HapticRumblePlay
SDL_HapticRumbleStop
SDL_HapticRumbleSupported
SDL_HapticRunEffect
SDL_HapticSetAutocenter
SDL_HapticSetGain
SDL_HapticStopAll
SDL_HapticStopEffect
SDL_HapticUnpause
SDL_HapticUpdateEffect
SDL_Has3DNow
SDL_HasAVX
SDL_HasAVX2
SDL_HasAltiVec
SDL_HasClipboardText
SDL_HasEvent
SDL_HasEvents
SDL_HasIntersection
SDL_HasMMX
SDL_HasRDTSC
SDL_HasSSE
SDL_HasSSE2
SDL_HasSSE3
SDL_HasSSE41
SDL_HasSSE42
SDL_HasScreenKeyboardSupport
SDL_HideWindow
SDL_Init
SDL_InitSubSystem
SDL_IntersectRect
SDL_IntersectRectAndLine
SDL_IsGameController
SDL_IsScreenKeyboardShown
SDL_IsScreenSaverEnabled
SDL_IsShapedWindow
SDL_IsTextInputActive
SDL_JOYSTICK_ALLOW_BACKGROUND_EVENTS
SDL_JoystickClose
SDL_JoystickCurrentPowerLevel
SDL_JoystickEventState
SDL_JoystickGetAttached
SDL_JoystickGetAxis
SDL_JoystickGetBall
SDL_JoystickGetButton
SDL_JoystickGetDeviceGUID
SDL_JoystickGetGUID
SDL_JoystickGetGUIDFromString
SDL_JoystickGetGUIDString
SDL_JoystickGetHat
SDL_JoystickInstanceID
SDL_JoystickIsHaptic
SDL_JoystickName
SDL_JoystickNameForIndex
SDL_JoystickNumAxes
SDL_JoystickNumBalls
SDL_JoystickNumButtons
SDL_JoystickNumHats
SDL_JoystickOpen
SDL_JoystickUpdate
SDL_LoadBMP_RW
SDL_LoadDollarTemplates
SDL_LoadFunction
SDL_LoadObject
SDL_LoadWAV_RW
SDL_LockAudio
SDL_LockAudioDevice
SDL_LockMutex
SDL_LockSurface
SDL_LockTexture
SDL_LockTexture(): texture must be streaming
SDL_Log
SDL_LogCritical
SDL_LogDebug
SDL_LogError
SDL_LogGetOutputFunction
SDL_LogGetPriority
SDL_LogInfo
SDL_LogMessage
SDL_LogMessageV
SDL_LogResetPriorities
SDL_LogSetAllPriority
SDL_LogSetOutputFunction
SDL_LogSetPriority
SDL_LogVerbose
SDL_LogWarn
SDL_LowerBlit
SDL_LowerBlitScaled
SDL_MOUSE_RELATIVE_MODE_WARP
SDL_MapRGB
SDL_MapRGBA
SDL_MasksToPixelFormatEnum
SDL_MaximizeWindow
SDL_MinimizeWindow
SDL_MixAudio
SDL_MixAudio(): unknown audio format
SDL_MixAudioFormat
SDL_MouseIsHaptic
SDL_NO_SIGNAL_HANDLERS
SDL_NumHaptics
SDL_NumJoysticks
SDL_OPENGL_LIBRARY
SDL_OpenAudio
SDL_OpenAudioDevice
SDL_PIXELFORMAT_ABGR1555
SDL_PIXELFORMAT_ABGR4444
SDL_PIXELFORMAT_ABGR8888
SDL_PIXELFORMAT_ARGB1555
SDL_PIXELFORMAT_ARGB2101010
SDL_PIXELFORMAT_ARGB4444
SDL_PIXELFORMAT_ARGB8888
SDL_PIXELFORMAT_BGR24
SDL_PIXELFORMAT_BGR555
SDL_PIXELFORMAT_BGR565
SDL_PIXELFORMAT_BGR888
SDL_PIXELFORMAT_BGRA4444
SDL_PIXELFORMAT_BGRA5551
SDL_PIXELFORMAT_BGRA8888
SDL_PIXELFORMAT_BGRX8888
SDL_PIXELFORMAT_INDEX1LSB
SDL_PIXELFORMAT_INDEX1MSB
SDL_PIXELFORMAT_INDEX4LSB
SDL_PIXELFORMAT_INDEX4MSB
SDL_PIXELFORMAT_INDEX8
SDL_PIXELFORMAT_IYUV
SDL_PIXELFORMAT_NV12
SDL_PIXELFORMAT_NV21
SDL_PIXELFORMAT_RGB24
SDL_PIXELFORMAT_RGB332
SDL_PIXELFORMAT_RGB444
SDL_PIXELFORMAT_RGB555
SDL_PIXELFORMAT_RGB565
SDL_PIXELFORMAT_RGB888
SDL_PIXELFORMAT_RGBA4444
SDL_PIXELFORMAT_RGBA5551
SDL_PIXELFORMAT_RGBA8888
SDL_PIXELFORMAT_RGBX8888
SDL_PIXELFORMAT_UNKNOWN
SDL_PIXELFORMAT_UYVY
SDL_PIXELFORMAT_YUY2
SDL_PIXELFORMAT_YV12
SDL_PIXELFORMAT_YVYU
SDL_PauseAudio
SDL_PauseAudioDevice
SDL_PeepEvents
SDL_PixelFormatEnumToMasks
SDL_PollEvent
SDL_PumpEvents
SDL_PushEvent
SDL_QueryTexture
SDL_QueueAudio
SDL_Quit
SDL_QuitSubSystem
SDL_RENDER_DIRECT3D_THREADSAFE
SDL_RENDER_DRIVER
SDL_RENDER_OPENGL_SHADERS
SDL_RENDER_SCALE_QUALITY
SDL_RENDER_VSYNC
SDL_RWFromConstMem
SDL_RWFromFP
SDL_RWFromFile
SDL_RWFromFile(): No file or no mode specified
SDL_RWFromMem
SDL_RaiseWindow
SDL_ReadBE16
SDL_ReadBE32
SDL_ReadBE64
SDL_ReadLE16
SDL_ReadLE32
SDL_ReadLE64
SDL_ReadU8
SDL_RecordGesture
SDL_RegisterApp
SDL_RegisterEvents
SDL_RemoveTimer
SDL_RenderClear
SDL_RenderCopy
SDL_RenderCopyEx
SDL_RenderDrawLine
SDL_RenderDrawLines
SDL_RenderDrawLines(): Passed NULL points
SDL_RenderDrawPoint
SDL_RenderDrawPoints
SDL_RenderDrawPoints(): Passed NULL points
SDL_RenderDrawRect
SDL_RenderDrawRects
SDL_RenderDrawRects(): Passed NULL rects
SDL_RenderFillRect
SDL_RenderFillRects
SDL_RenderFillRects(): Passed NULL rects
SDL_RenderGetClipRect
SDL_RenderGetD3D9Device
SDL_RenderGetLogicalSize
SDL_RenderGetScale
SDL_RenderGetViewport
SDL_RenderIsClipEnabled
SDL_RenderPresent
SDL_RenderReadPixels
SDL_RenderSetClipRect
SDL_RenderSetLogicalSize
SDL_RenderSetScale
SDL_RenderSetViewport
SDL_RenderTargetSupported
SDL_ReportAssertion
SDL_ResetAssertionReport
SDL_RestoreWindow
SDL_SaveAllDollarTemplates
SDL_SaveBMP_RW
SDL_SaveDollarTemplate
SDL_SemPost
SDL_SemTryWait
SDL_SemValue
SDL_SemWait
SDL_SemWaitTimeout
SDL_SetAssertionHandler
SDL_SetClipRect
SDL_SetClipboardText
SDL_SetColorKey
SDL_SetCursor
SDL_SetError
SDL_SetEventFilter
SDL_SetHint
SDL_SetHintWithPriority
SDL_SetMainReady
SDL_SetModState
SDL_SetPaletteColors
SDL_SetPixelFormatPalette
SDL_SetPixelFormatPalette() passed NULL format
SDL_SetPixelFormatPalette() passed a palette that doesn't match the format
SDL_SetRelativeMouseMode
SDL_SetRenderDrawBlendMode
SDL_SetRenderDrawColor
SDL_SetRenderTarget
SDL_SetSurfaceAlphaMod
SDL_SetSurfaceBlendMode
SDL_SetSurfaceColorMod
SDL_SetSurfacePalette
SDL_SetSurfacePalette() passed a NULL surface
SDL_SetSurfaceRLE
SDL_SetTextInputRect
SDL_SetTextureAlphaMod
SDL_SetTextureBlendMode
SDL_SetTextureColorMod
SDL_SetThreadPriority
SDL_SetWindowBordered
SDL_SetWindowBrightness
SDL_SetWindowData
SDL_SetWindowDisplayMode
SDL_SetWindowFullscreen
SDL_SetWindowGammaRamp
SDL_SetWindowGrab
SDL_SetWindowHitTest
SDL_SetWindowIcon
SDL_SetWindowMaximumSize
SDL_SetWindowMinimumSize
SDL_SetWindowPosition
SDL_SetWindowShape
SDL_SetWindowSize
SDL_SetWindowTitle
SDL_SetWindowsMessageHook
SDL_ShowCursor
SDL_ShowMessageBox
SDL_ShowSimpleMessageBox
SDL_ShowWindow
SDL_SoftStretch
SDL_StartTextInput
SDL_StopTextInput
SDL_TIMER_RESOLUTION
SDL_TLSCreate
SDL_TLSGet
SDL_TLSSet
SDL_ThreadID
SDL_TryLockMutex
SDL_UnionRect
SDL_UnloadObject
SDL_UnlockAudio
SDL_UnlockAudioDevice
SDL_UnlockMutex
SDL_UnlockSurface
SDL_UnlockTexture
SDL_UnregisterApp
SDL_UpdateTexture
SDL_UpdateWindowSurface
SDL_UpdateWindowSurfaceRects
SDL_UpdateYUVTexture
SDL_UpperBlit
SDL_UpperBlit: passed a NULL surface
SDL_UpperBlitScaled
SDL_UpperBlitScaled: passed a NULL surface
SDL_VIDEODRIVER
SDL_VIDEO_ALLOW_SCREENSAVER
SDL_VIDEO_DUMMY_SAVE_FRAMES
SDL_VIDEO_EGL_DRIVER
SDL_VIDEO_GL_DRIVER
SDL_VIDEO_HIGHDPI_DISABLED
SDL_VIDEO_MINIMIZE_ON_FOCUS_LOSS
SDL_VIDEO_WINDOW_SHARE_PIXEL_FORMAT
SDL_VIDEO_WIN_D3DCOMPILER
SDL_VideoInit
SDL_VideoQuit
SDL_WINDOWS_ENABLE_MESSAGELOOP
SDL_WINDOWS_NO_CLOSE_ON_ALT_F4
SDL_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN
SDL_WaitEvent
SDL_WaitEventTimeout
SDL_WaitThread
SDL_WarpMouseGlobal
SDL_WarpMouseInWindow
SDL_WasInit
SDL_WriteBE16
SDL_WriteBE32
SDL_WriteBE64
SDL_WriteLE16
SDL_WriteLE32
SDL_WriteLE64
SDL_WriteU8
SDL_XINPUT_ENABLED
SDL_XINPUT_USE_OLD_JOYSTICK_MAPPING
SDL_abs
SDL_acos
SDL_app
SDL_asin
SDL_atan
SDL_atan2
SDL_atof
SDL_atoi
SDL_calloc
SDL_ceil
SDL_copysign
SDL_cos
SDL_cosf
SDL_fabs
SDL_floor
SDL_free
SDL_getenv
SDL_iconv
SDL_iconv_close
SDL_iconv_open
SDL_iconv_string
SDL_isdigit
SDL_isspace
SDL_itoa
SDL_joystick
SDL_lltoa
SDL_log
SDL_ltoa
SDL_malloc
SDL_memcmp
SDL_memcpy
SDL_memmove
SDL_memset
SDL_pow
SDL_qsort
SDL_realloc
SDL_scalbn
SDL_setenv
SDL_sin
SDL_sinf
SDL_snprintf
SDL_sqrt
SDL_sqrtf
SDL_sscanf
SDL_strcasecmp
SDL_strchr
SDL_strcmp
SDL_strdup
SDL_strlcat
SDL_strlcpy
SDL_strlen
SDL_strlwr
SDL_strncasecmp
SDL_strncmp
SDL_strrchr
SDL_strrev
SDL_strstr
SDL_strtod
SDL_strtol
SDL_strtoll
SDL_strtoul
SDL_strtoull
SDL_strupr
SDL_tan
SDL_tanf
SDL_tolower
SDL_toupper
SDL_uitoa
SDL_ulltoa
SDL_ultoa
SDL_utf8strlcpy
SDL_vsnprintf
SDL_vsscanf
SDL_wcslcat
SDL_wcslcpy
SDL_wcslen
SDL_window%d-%8.8d.bmp
SHCORE.DLL
SHELL32.dll
SHGetFolderPathW
SUATAVH
SUATH
SUVAUH
SUVWATAUAVAWH
SUVWATAUAVH
SUVWATAUAWH
SUVWATH
SUVWAUAVAWH
SUVWH
SUWATAUAVAWH
SUWAVAWH
SVATAUH
SVAUH
SVWAVAWH
SWATAUAWH
ScreenToClient
ScrollLock
Select
SelectObject
SendMessageW
Separator
SetClipboardData
SetCursor
SetCursorPos
SetDeviceGammaRamp
SetDeviceGammaRamp()
SetEnvironmentVariableA
SetErrorMode
SetFilePointer
SetFilePointerEx
SetPixelFormat
SetPixelFormat()
SetProp() failed
SetPropW
SetRenderTarget()
SetScissor()
SetShader()
SetTexture()
SetThreadPriority
SetThreadPriority()
SetWindowLongPtrW
SetWindowLongW
SetWindowPos
SetWindowRgn
SetWindowTextW
Setting autocenter
Setting cooperative level to exclusive
Setting data format
Setting gain
Setting the swap interval is not supported
ShowReadingWindow
ShowWindow
Sleep
Software renderer doesn't have an output surface
Sound buffer size must be between %d and %d
Source or destination channels is zero
Source or destination rate is zero
Space
Stopping the device
Surfaces must not be locked during blit
SwapBuffers
SysReq
System audio capture device
System audio output device
SystemParametersInfoA
SystemParametersInfoW
T$ Hi
T$ I;
T$ fD
T$ t83
T$$IcF(I
T$&fD
T$(E3
T$(H;T$8
T$(f#
T$(fD
T$*Lc
T$+Hc
T$,9F
T$0E3
T$2E:
T$>H;
T$@E3
T$@L;
T$DE3
T$HA;
T$PE3
T$PH;
T$PL;
T$XMc
T$`E3
T$`Ic
T$hE+
T$hE3
T$hMc
T$pA+
T$pH;
T$pL;
T<huPI
TINTLGNT.IME
TOOMANYOPERATIONS
Texture dimensions are limited to %dx%d
Texture dimensions can't be 0
Texture format %s not supported by OpenGL
Texture format must by YV12 or IYUV
Texture format not supported
Texture is not currently available
Texture not created with SDL_TEXTUREACCESS_TARGET
Texture was not created with this renderer
That operation is not supported
The event system has been shut down
The specified shader cannot be loaded on the current platform
The specified window has not been made current
The specified window isn't an OpenGL window
The video driver did not add any displays
There are %d joysticks available
ThousandsSeparator
TlsAlloc
TlsGetValue
TlsSetValue
TlsSetValue() failed
Too many open audio devices
TrackMouseEvent
TranslateMessage
Tried to read outside of surface bounds
TryEnterCriticalSection
U16LSB
U16MSB
U16SYS
UATAUAVAWH
UATAUH
UAVAWH
UCS-2
UCS-2-INTERNAL
UCS-2BE
UCS-2LE
UCS-4
UCS-4-INTERNAL
UCS-4BE
UCS-4LE
UNKNOWN
UNSUPPORTEDALPHAARG
UNSUPPORTEDALPHAOPERATION
UNSUPPORTEDCOLORARG
UNSUPPORTEDCOLOROPERATION
UNSUPPORTEDFACTORVALUE
UNSUPPORTEDTEXTUREFILTER
US-ASCII
USER32.DLL
USER32.dll
USVWATAVAWH
USVWAVAWH
USVWH
UTF-16
UTF-16BE
UTF-16LE
UTF-32
UTF-32BE
UTF-32LE
UTF-8
UTF16
UTF16BE
UTF16LE
UTF32
UTF32BE
UTF32LE
UUUUU
UVATAVAWH
UVWATAUAVAWH
UVWATAUH
UVWATAVAW
UVWAUAVAW
UVWAVAWH
UWATAUAVH
UWAVAWH
UYVYt
UYVYt)A
UYVYuSH
Unable to create DIB
Unable to create DXGI interface
Unable to create Direct3D interface
Unable to create Helper Window
Unable to create Helper Window Class
Unable to create effect
Unable to destroy Helper Window
Unable to destroy Helper Window Class
Unable to lock destination surface
Unable to make EGL context current
Unable to stop effect
Unable to update effect
Unknown
Unknown %d-bit PCM data format
Unknown FOURCC pixel format
Unknown OpenGL attribute
Unknown OpenGL context flag %d
Unknown OpenGL context profile %d
Unknown SDL error
Unknown WAVE data format: 0x%.4x
Unknown gestureId
Unknown pixel format
Unknown reason
Unknown set of MS_ADPCM coefficients
Unknown texture format
Unknown touch device
Unknown touch finger
Unknown value for 'whence'
UnlockRect()
Unrecognized file type (not WAVE)
UnregisterClassW
UnregisterDeviceNotification
Unsupported YUV destination format
Unsupported YUV format in copy
Unsupported audio format
Unsupported interface -- Is DirectX 8.0 or later installed?
Unsupported number of audio channels.
Unsupported texture format
UpdateTexture()
Upitch
Uplane
VATAUAVAWH
VATAUH
VERBOSE
VERSION.dll
VUUUA
VWATAUAVH
VWATAUAWH
VWATH
VWAUAVAWH
VWAUAVH
ValidateRect
VerQueryValueA
VerSetConditionMask
VerifyVersionInfoW
Video driver doesn't support changing display mode
Video subsystem has not been initialized
Video subsystem must be initialized to check clipboard text
Video subsystem must be initialized to get clipboard text
Video subsystem must be initialized to set clipboard text
VirtualAlloc
VirtualFree
VirtualQuery
VolumeDown
VolumeUp
Vpitch
Vplane
WARNING: Ignoring SDL_GL_SetSwapInterval call due to ANGLE bug
WASSTILLDRAWING
WATAUAVAWH
WATAUH
WGL_ARB_context_flush_control
WGL_ARB_pixel_format
WGL_EXT_create_context_es2_profile
WGL_EXT_swap_control
WGL_EXT_swap_control_tear
WINMM.dll
WRONGTEXTUREFORMAT
WaitForSingleObject
WaitForSingleObject() failed
WideCharToMultiByte
Window is too large.
Window surface is invalid, please call SDL_GetWindowSurface() to get a new surface
WindowFromPoint
Windows
Windows Waveform Audio
WriteConsoleW
WriteFile
X-Box
X360 Controller #%u
XA^A\^]
XA_A^_^][
XAudio2
XAudio2: SDL was built without XAudio2 support (old DirectX SDK).
XInput ArcadePad #%u
XInput ArcadeStick #%u
XInput Controller #%u
XInput DancePad #%u
XInput Device #%u
XInput DrumKit #%u
XInput FlightStick #%u
XInput Guitar #%u
XInput Wheel #%u
XInputGetBatteryInformation
XInputGetCapabilities
XInputGetState
XInputSetState
XL$0fD
XT$8fE
YD$0H
YUY2t
YUY2t2A
YUY2t6
YUY2w tJA
YUY2wGt=
YV12 and IYUV textures only support full surface locks
YV12t
YV12t	A
YV12t4
YV12t>
YV12tT
YV12u
YVYUt
YVYUt A
YVYUt#A
YVYUt(
YVYUt.
YVYUu
Ypitch
Yplane
ZD$@I
\$ A;
\$ L;
\$ UVWATAUAVAW
\$ UVWATAUH
\$ UVWATAVH
\$ UVWAUAWH
\$ UVWH
\$ UWAUH
\$ VATAUH
\$ VATAVH
\$ VWI
\$ WATAVH
\$ WH
\$ t2I
\$ tEH
\$$Hc
\$(A_A^A]A\
\$,fE
\$0A;
\$0E3
\$0Hc
\$0L;\$@
\$0_^
\$0ff
\$8A;
\$8HcF
\$8fD
\$@A_A^A]_^]
\$@fA
\$HA_A^A\_^]
\$PE3
\$PHc
\$PMc
\$PfE
\$XA_A^A]A\_^]
\$XH;|$P
\$`Lc
\$hE3
\$pE;
\$pI+
\$xHc
\$xMc
\$xfA
](<0|
_SDL_DummySurface
_SDL_WindowRenderData
_SDL_WindowTextureData
`.rdata
`< t\<,u;3
`A]A\_^]
`A^A][
`A^][
`A^^]
`A_A^A\_^[]
`A_A^A]A\_][
`A_A^_][
aRich
a_angle
a_center
a_position
a_texCoord
abort
adapterIndex
always_ignore
break
c:\buildslave\sdl_win32\build\dev\VisualC\x64\Release\SDL2.pdb
cUUUUU
c`D9cdtKH
callback
const vec3 Bcoeff = vec3(1.164,  2.018,  0.000);
const vec3 Gcoeff = vec3(1.164, -0.391, -0.813);
const vec3 Rcoeff = vec3(1.164,  0.000,  1.596);
const vec3 offset = vec3(-0.0627451017, -0.501960814, -0.501960814);
could not read any dollar gesture from rwops
count
d$ UAUAVH
d$ UH
d$$H;
d$(L+
d$(L9
d$0A+
d$0IcG
d$6D:
d$HE3
d$PIc
d$h;\$`uDH
d$pA9V
d$pD9m
d$pE;
d+t$@D
d3dcompiler_43.dll
d3dcompiler_46.dll
dNtsq
direct-to-disk audio
direct3d
directsound
displayIndex must be in the range 0 - %d
dpdown
dpleft
dpright
dst_pitch
dummy
e8206058000000000000504944564944,Cideko AK08b,a:b2,b:b1,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b3,y:b0,
eFlv!@r
eglBindAPI
eglChooseConfig
eglCreateContext
eglCreateWindowSurface
eglDestroyContext
eglDestroySurface
eglGetConfigAttrib
eglGetDisplay
eglGetProcAddress
eglInitialize
eglMakeCurrent
eglQueryString
eglSwapBuffers
eglSwapInterval
eglTerminate
eglWaitGL
eglWaitNative
emscripten
f9<SH
f9TMpu*
fD9s u
fD9s"u
fD9s$
fD9s&
fD9s&u
fD9s*
fD9s0u
fD9s4
ffff0000000000000000504944564944,GameStop Gamepad,a:b0,b:b1,back:b8,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:,leftshoulder:b4,leftstick:b10,lefttrigger:b6,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b11,righttrigger:b7,rightx:a2,righty:a3,start:b9,x:b2,y:b3,
fffff
ffffff
fffffff
format
gamma
generic
given touch id not found
glActiveTexture
glActiveTextureARB
glAttachObjectARB
glAttachShader
glBegin
glBindAttribLocation
glBindBuffer
glBindFramebuffer
glBindFramebufferEXT
glBindTexture
glBlendFunc
glBlendFuncSeparate
glBufferData
glBufferSubData
glCheckFramebufferStatus
glCheckFramebufferStatusEXT
glClear
glClearColor
glColor3fv
glColor4f
glCompileShader
glCompileShaderARB
glCreateProgram
glCreateProgramObjectARB
glCreateShader
glCreateShaderObjectARB
glDebugMessageCallbackARB
glDeleteFramebuffers
glDeleteFramebuffersEXT
glDeleteObjectARB
glDeleteProgram
glDeleteShader
glDeleteTextures
glDepthFunc
glDisable
glDisableVertexAttribArray
glDrawArrays
glDrawPixels
glEnable
glEnableVertexAttribArray
glEnd
glFinish
glFramebufferTexture2D
glFramebufferTexture2D() failed
glFramebufferTexture2DEXT
glFramebufferTexture2DEXT() failed
glGenBuffers
glGenFramebuffers
glGenFramebuffersEXT
glGenTextures
glGenTextures()
glGenTexures()
glGetAttribLocation
glGetBooleanv
glGetError
glGetFramebufferAttachmentParameteriv
glGetInfoLogARB
glGetIntegerv
glGetObjectParameterivARB
glGetPointerv
glGetProgramInfoLog
glGetProgramiv
glGetShaderInfoLog
glGetShaderiv
glGetString
glGetStringi
glGetUniformLocation
glGetUniformLocationARB
glLineWidth
glLinkProgram
glLinkProgramARB
glLoadIdentity
glMatrixMode
glOrtho
glPixelStorei
glPointSize
glPopMatrix
glPushMatrix
glRasterPos2i
glReadBuffer
glReadPixels
glReadPixels()
glRectf
glRotated
glRotatef
glScissor
glShadeModel
glShaderBinary
glShaderSource
glShaderSourceARB
glTexCoord2f
glTexEnvf
glTexImage2D
glTexImage2D()
glTexParameteri
glTexSubImage2D
glTexSubImage2D()
glTranslatef
glUniform1fARB
glUniform1i
glUniform1iARB
glUniform4f
glUniformMatrix4fv
glUseProgram
glUseProgramObjectARB
glVertex2f
glVertex3fv
glVertexAttribPointer
glViewport
guide
hA^A\][
hA^A]_^
hA_A]_[
hA_A^A\[
h_^][
height
hg-0:aaaaaaaaaaah
i Lca(H;
ignore
imm32.dll
index must be -1 or in the range of 0 - %d
index must be in the range of 0 - %d
l$ ATAUAV
l$ ATAUD
l$ ATH
l$ VATAUH
l$ VATAVH
l$ VAUAVD
l$ VH
l$ VWATAUAVAWL
l$ VWATAUAVH
l$ VWATH
l$ VWAVH
l$ VWH
l$ WATAUH
l$ WAUAVD
l$ WH
l$(A\
l$(E3
l$(H+
l$(Ic@(I
l$(Lcl$`
l$+Lc
l$0A]A\
l$0E+
l$4A;
l$8A^A]A\
l$8A^A]^
l$8A^A]_
l$8Hc
l$@A_A^A]_^
l$HE3
l$PA_A^A]A\_^
l$PE3
l$X9o
l$XHc
l$`D9v
l$hD9u
l$ht*
l$p=YV12
l$pD3
l$pD9+
l$pD9v
l$pE3
l$xE;
leftshoulder
leftstick
lefttrigger
leftx
lefty
libEGL.dll
libGLES_CM.dll
libGLESv1_CM.dll
libGLESv2.dll
lstrcatW
lstrlenW
mappingString
max_h
max_w
messageboxdata
min_h
min_w
n5Failed to create notify device for joystick autodetect
n@HfE
n@XfA
n@\fE
nJlfE
nL$pfA
nPLfE
nR<fE
nRlfE
nZ@fA
nZ`fA
nZpfE
n\$`f
n`@fA
nb fA
nb0fA
nb@fA
nb@fE
nb`fA
nbpfE
ncolors
nd$ fA
njDfA
njdfA
nmP:F
no gesture touch devices registered
nr$fE
nr4fE
nrDfE
nrdfE
nt$hf
numrects
ole32.dll
opengl
opengles2
outputIndex
p?ramp
pA]][
pA^A]A\_^][
pA_A]A\_[
pA_A^_^[
palette
pitch
pixels
platform:
points
q$Hci
r/ffffff
r5fffff
rIfffff
rQffffff
rects
result
retry
rgfff
ri7f>
rightshoulder
rightstick
righttrigger
rightx
righty
s*fffff
s,ffff
s,ffffff
s3ffff
sEfff
sJA;T$
sRffffff
scancode
sdlaudio.raw
software
start
surface
t"ffffff
t$ A+
t$ ATAUE3
t$ ATH
t$ E3
t$ H;
t$ IcT$
t$ L+
t$ WATAUAVAWH
t$ WATAUAVAWL
t$ WATAUAVH
t$ WATAUH
t$ WATAVH
t$ WAUAVH
t$ WD
t$ WH
t$ WM
t$ tF
t$(I;
t$(L+
t$(Lc
t$0A]A\
t$0L+
t$0Lc
t$0Mc
t$4A:
t$8E:
t$8L+
t$@E3
t$H9p t
t$HA+
t$HA9l$
t$HA_A^A]A\_
t$HE3
t$PI+
t$XA+
t$XHc
t$`9k0
t$`E3
t$`Lc
t$h;8u>
t$hA+
t$hIc@
t$h}A
t$xD+
t$xHc
t$xMc
t%ffff
t'D9{(t
t'fff
t)ffffff
t,fffff
t1H;)u
t1HcC
t6fffff
t8H;C
t8H;G
t8I;A
t8I;B
t;ffffff
tAffff
tLffff
tNH9\$ uGH9\$(u@
tNffff
tPIc@
tTD9u
tUpH+
tX-J6
tXD95
tZffffff
t\~lA
tefff
tex%d
timeBeginPeriod
timeEndPeriod
timeGetTime
times
tq<:u
u6H9|$8w/3
u;IcJ
uAE9Y H
uAE9i H
uVIcJ
u_color
u_modulation
u_projection
u_texture
u_texture_u
u_texture_v
uniform sampler2D tex0;
uniform sampler2D tex0; // Y 
uniform sampler2D tex1; // U 
uniform sampler2D tex1; // U/V 
uniform sampler2D tex2; // V 
urffff
uxD9{(t
v@GLES2_RenderReadPixels
varying vec2 v_texCoord;
varying vec4 v_color;
void main()
w8t-A
waveInClose
waveInGetDevCapsW
waveInGetNumDevs
waveInOpen
waveOutClose
waveOutGetDevCapsW
waveOutGetErrorTextW
waveOutGetNumDevs
waveOutOpen
waveOutOpen()
waveOutPrepareHeader
waveOutPrepareHeader()
waveOutUnprepareHeader
waveOutWrite
wglChoosePixelFormatARB
wglCreateContext
wglCreateContextAttribsARB
wglDeleteContext
wglGetExtensionsStringARB
wglGetPixelFormatAttribivARB
wglGetProcAddress
wglGetSwapIntervalEXT
wglMakeCurrent
wglMakeCurrent()
wglShareLists
wglSwapIntervalEXT
wglSwapIntervalEXT()
width
windows
windows_file_seek
windows_file_seek: Unknown value for 'whence'
windows_file_seek: invalid context/file not opened
windows_file_size
windows_file_size: invalid context/file not opened
winmm
x ATAUAVH
xA_A^A]A\_^][
xH90u	H
x_^[]
xaudio2
xinpf
xinput
xinput,XInput Controller,a:b0,b:b1,back:b6,dpdown:h0.4,dpleft:h0.8,dpright:h0.2,dpup:h0.1,guide:b10,leftshoulder:b4,leftstick:b8,lefttrigger:a2,leftx:a0,lefty:a1,rightshoulder:b5,rightstick:b9,righttrigger:a5,rightx:a3,righty:a4,start:b7,x:b2,y:b3,
z0u.H
z3u13
z5u3E
{@9{8t
| HcO
|$ AT
|$ ATAU
|$ ATAUAV
|$ ATAUAVAW
|$ ATAUAVAWL
|$ ATAUAVD
|$ ATAUAVH
|$ ATAUD
|$ ATAUH
|$ ATAUL
|$ ATD
|$ ATH
|$ ATL
|$ dataH
|$ ff
|$$Hc
|$(A\
|$,E;
|$,fD
|$0A+
|$0A]A\
|$0E3
|$0H+
|$0Hc
|$0Hc=
|$0L+
|$8A^A]A\
|$8ffff
|$8uGH
|$@A_A^A]A\
|$@E3
|$@M;
|$@fA
|$@t|D
|$HA+
|$HHc
|$HI+
|$Xfff
|$`Hc
|$`t8H
|$hHc
|$hHcD$p
|$hHcL$`
|$hIc
|$hfffff
|$pLcD$hM
|$xE3
|$xHc
|;IcM
|TIcN
|uIcH
}h><PE
~/ffff
~3fff
~5ffff
~;Lct$x
~ifff
