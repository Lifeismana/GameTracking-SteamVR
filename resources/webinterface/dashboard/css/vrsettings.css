						/* checkered effect */
						linear-gradient(to bottom, var(--checker-color-a) 50%, var(--checker-color-b) 50%);
						linear-gradient(to right, var(--checker-color-a) 50%, var(--checker-color-b) 50%),
						linear-gradient(to right, var(--color-value), var(--color-value)),
				opacity var(--settings-sidebar-transition-time) ease-out;
			var(--settings-subsection-background-a)
			var(--settings-subsection-background-rgb),
		#00F calc(65.27% * (1 - var(--percent-white))),
		#0F0 calc(32.64% * (1 - var(--percent-white))),
		#0FF calc(48.95% * (1 - var(--percent-white))),
		#25282E 100%
		#32373F 0%,
		#F00 0%,
		#F00 calc(100% * (1 - var(--percent-white))),
		#F0F calc(81.6% * (1 - var(--percent-white))),
		#FF0 calc(16.31% * (1 - var(--percent-white))),
		#FFF 100%
		#FFF calc(100% * (1 - var(--percent-white))),
		) 0%,
		) 100%
		135deg,
		background: var(--settings-control-activated-background);
		background: var(--settings-control-hover-background);
		circle at top left,
		opacity: 0;
		opacity: 1;
		rgb( var(--settings-control-track-background-rgb) ) 0%,
		rgba(
		to right,
		transform: scale(0.5);
		transform: scale(0.7);
		transform: scale(1);
		transform: translateX(-100%);
		transform: translateX(100%);
		transparent 0px,
		transparent var(--size),
		var(--background) var(--size));
		var(--settings-subsection-background-a)
		var(--settings-subsection-background-rgb),
		var(--slider-color) 100%
		z-index: -1;
		z-index: initial;
	            background var(--settings-control-hover-fade-duration) var(--settings-control-hover-fade-ease),
	            box-shadow var(--settings-control-hover-fade-duration) var(--settings-control-hover-fade-ease);
	            box-shadow var(--settings-control-hover-fade-duration);
	           scaleY(var(--toggle-control-scale-y));
	         var(--settings-subsection-padding-h);
	--checker-color-a: white;
	--checker-color-b: black;
	--color-value: rgba(var(--color-value-rgb), var(--color-value-a));
	--disabledtext: rgb(144, 147, 150);
	--grid-item-spacing: 0.8rem;
	--grid-item-width: calc(var(--grid-width) / 3);
	--grid-width: 30rem;
	--icon-margin: 0.5em;
	--item-count: 1;
	--item-value-index: 0;
	--margin: calc( -1 * var(--settings-content-padding));
	--percent-white: 0.03;
	--settings-control-activated-background: var(--settings-advanced-control-background-color);
	--settings-control-active-background: var(--settings-advanced-control-active-background-color);
	--settings-control-background: #22252a;
	--settings-control-hover-background: var(--settings-advanced-control-hover-background-color);
	--settings-right-column-width-adjustment: 300px;
	--settings-subsection-padding-v: 0.5em;
	--size: 0.8em;
	--size: 3rem;
	--size: 40%;
	--size: calc( 0.2 * var(--settings-control-default-height) );
	--size: calc(var(--settings-control-default-height) * 1.33);
	--size: var(--settings-subsection-border-radius);
	--text-color: #DEE2E5;
	--thickness: 0.15em;
	--tile-size: 9rem;
	--toggle-control-scale-y: 0.9;
	--toggle-control-scale-y: 1;
	--toggle-control-translate-x-direction: 0;
	--toggle-control-translate-x-inward: 0%;
	--toggle-control-translate-x-standard: calc( 100% *var(--item-value-index) );
	--toggle-control-width: calc(100% / var(--item-count));
	/* Last 2.5% of hue slider is white */
	/* This doesn't work, presumably because the specifier is less specific */
	/* You can't do a negative border-radius with css, but you can make a transparent radial gradient! Hah. */
	/* padding: 5px; */
	/* top: 1rem; */
	0% {
	100% {
	50% {
	99% {
	Modal children must be either Subsection.Top, Subsection.Body, or Subsection.Bottom.
	align-items: center;
	align-self: center;
	align-self: flex-start;
	align-self: stretch;
	animation-delay: 0.5s;
	animation-fill-mode: both;
	animation-iteration-count: 1;
	animation: RestartBannerShimmerAnimation 1s ease-in;
	animation: RestartBannerSlideUpAnimation 0.3s;
	animation: RestartButtonFlashAnimation 0.3s ease-in;
	animation: SettingsDropdownPopoverFadeIn var(--settings-modal-animation-duration) var(--control-switch-overshoot-ease);
	animation: SettingsLoadingLabelFadeIn 1s;
	animation: SettingsModalFadeIn var(--settings-modal-animation-duration) var(--control-switch-overshoot-ease);
	animation: none;
	background-blend-mode: normal, difference, normal;
	background-clip: content-box;
	background-color: #333333;
	background-color: #55555580;
	background-color: black;
	background-color: red;
	background-color: rgb( var(--settings-control-background-new-rgb) );
	background-color: rgb(66, 75, 88);
	background-color: rgb(var(--settings-subsection-background-rgb));
	background-color: var( --selectedtext );
	background-color: var(--button-backgroundalt);
	background-color: var(--button-backgroundalt-hover);
	background-color: var(--dropdown-popover-background-color);
	background-color: var(--dropdown-popover-selected-background-color);
	background-color: var(--selectedtext);
	background-color: var(--settings-control-activated-background);
	background-color: var(--settings-control-active-background);
	background-color: var(--settings-control-hover-background);
	background-color: var(--visualizerclick);
	background-image: /* tint image */
	background-image: var(--background-image);
	background-image: var(--background-url-value);
	background-position: bottom center;
	background-position: center center;
	background-position: center;
	background-position: left center;
	background-repeat: no-repeat;
	background-size: 10% 100%;
	background-size: contain;
	background-size: cover;
	background: #0fba0f;
	background: grey;
	background: linear-gradient(
	background: linear-gradient(to left, var(--settings-side-nav-gradient-b) 0%, var(--settings-side-nav-gradient-a) 100%);
	background: linear-gradient(to right,
	background: linear-gradient(to right, transparent 0%, #b4b4b43b 50%, transparent 100%);
	background: none;
	background: radial-gradient(
	background: rgb(var(--settings-subsection-background-rgb));
	background: rgba(255, 255, 255, 0.08);
	background: transparent;
	background: var(--modalbackground);
	background: var(--settings-advanced-sidenav-control-background-color);
	background: var(--settings-control-activated-background);
	background: var(--settings-control-background);
	background: var(--settings-control-background-hover-background);
	background: var(--settings-control-background-new);
	background: var(--settings-control-background-new-hover);
	background: var(--settings-control-hover-background);
	background: var(--settings-side-nav-gradient-a);
	background: var(--settings-side-nav-gradient-b);
	border-bottom-left-radius: 0;
	border-bottom-left-radius: var(--settings-border-radius);
	border-bottom-left-radius: var(--settings-control-inner-border-radius);
	border-bottom-right-radius: var(--settings-border-radius);
	border-bottom-right-radius: var(--settings-control-inner-border-radius);
	border-color:  var(--selectedtext);
	border-color: #25282E;
	border-color: rgb(var(--settings-subsection-background-rgb));
	border-color: rgba(100, 100, 100, 0.121);
	border-color: var( --selectedtext );
	border-color: var(--button-background-hover);
	border-color: var(--selectedtext);
	border-color: var(--tabborderbottomselected);
	border-radius: 0.1rem;
	border-radius: 0.3rem;
	border-radius: 0;
	border-radius: 2px;
	border-radius: 50%;
	border-radius: calc(0.7 * var(--settings-control-inner-border-radius));
	border-radius: var(--settings-border-radius);
	border-radius: var(--settings-button-border-radius);
	border-radius: var(--settings-button-image-border-radius);
	border-radius: var(--settings-control-inner-border-radius);
	border-radius: var(--settings-control-outer-border-radius);
	border-radius: var(--settings-subsection-border-radius);
	border-style: solid;
	border-top-left-radius: 0;
	border-top-left-radius: var(--settings-border-radius);
	border-top-left-radius: var(--settings-control-inner-border-radius);
	border-top-right-radius: 0;
	border-top-right-radius: var(--settings-border-radius);
	border-top-right-radius: var(--settings-control-inner-border-radius);
	border-top-right-radius: var(--settings-subsection-border-radius);
	border-top: solid 1px var(--settings-control-hover-background);
	border-width: 0 var(--thickness) var(--thickness) 0;
	border-width: 2px;
	border-width: 4px;
	border-width: thin;
	border: 0.2rem solid transparent;
	border: 0.2rem solid var(--button-background);
	border: 1px solid var(--bordercolor);
	border: none;
	border: solid  4px white;
	border: solid 0.18em #932222;
	border: solid var(--text-color);
	bottom: 0.15rem;
	bottom: 0.75rem;
	bottom: 0;
	bottom: 0px;
	bottom: 1.8rem;
	bottom: 30vh;
	bottom: 4rem;
	bottom: 6rem;
	bottom: var(--settings-control-image-padding);
	box-shadow: 0 0 15px #0000006b;
	box-shadow: 0px 1px 18px 4px #00000021;
	box-shadow: 0px 6px 20px #00000033;
	box-shadow: none;
	box-shadow: var(--settings-control-box-active-shadow);
	box-shadow: var(--settings-control-box-hover-shadow);
	box-sizing: border-box;
	color: #ffff35;
	color: lightcoral;
	color: rgb(197, 175, 48);
	color: rgb(200, 200, 200);
	color: rgb(220, 220, 220);
	color: rgb(40, 207, 40);
	color: var( --button-background );
	color: var( --button-background-hover );
	color: var( --button-text );
	color: var(--bindinglistdetails);
	color: var(--bindinglistheaders);
	color: var(--disabledtext);
	color: var(--settings-advanced-sidenav-text-color);
	color: var(--text-color);
	color: white;
	contain: layout;
	content: '';
	content: none;
	cursor: default;
	cursor: pointer;
	display: block;
	display: flex;
	display: grid;
	display: inline-block;
	display: inline-flex;
	display: inline;
	display: none;
	fill: rgb( var(--settings-control-track-background-rgb) );
	fill: var(--button-background-hover )
	fill: var(--button-background-hover);
	fill: var(--text-color);
	filter: brightness(130%);
	flex-direction: column;
	flex-direction: row;
	flex-grow: 0;
	flex-grow: 10000;
	flex-grow: 1;
	flex-grow: 9001;
	flex-shrink: 0;
	flex-shrink: 1;
	flex-wrap: wrap;
	flex: 1 1;
	font-size: 0.8em;
	font-size: 0.95em;
	font-size: 0.9rem;
	font-size: 1.0rem;
	font-size: 1.2rem;
	font-size: 1.4rem;
	font-size: 1.5rem;
	font-size: 1em;
	font-size: 1rem;
	font-size: var(--settings-font-size);
	font-style: italic;
	font-variant-numeric: tabular-nums;
	font-weight: 100;
	font-weight: 200;
	font-weight: 400;
	font-weight: bold;
	font-weight: normal;
	font-weight: var(--settings-font-weight);
	from {
	from { opacity: 0; }
	grid-area: 1 / 1 / 2 / 2;
	grid-area: 1 / 1 / 2 / 3;
	grid-area: 1 / 2 / 2 / 3;
	grid-area: 2 / 1 / 3 / 3;
	grid-auto-columns: 1fr;
	grid-auto-flow: column;
	grid-column-gap: 0px;
	grid-row-gap: 0px;
	grid-template-columns: 1fr 1fr var(--settings-right-column-computed-width);
	grid-template-columns: 1fr var(--settings-right-column-computed-width);
	grid-template-rows: repeat(2, 1fr);
	height: 0.3rem;
	height: 1.5rem;
	height: 100%;
	height: 10rem;
	height: 1em;
	height: 2.3rem;
	height: 3.6rem;
	height: 4rem;
	height: 6rem;
	height: 8rem;
	height: auto;
	height: calc( var(--dashboard-primary-width) / var(--dashboard-primary-aspect-ratio) );
	height: calc( var(--tile-size) * 0.8 );
	height: fit-content;
	height: var(--settings-sidebar-button-max-height);
	height: var(--size);
	height: var(--tile-size);
	justify-content: center;
	justify-content: flex-end;
	justify-content: space-between;
	justify-self: right;
	left: -0.15rem;
	left: -0.75rem;
	left: 0;
	left: 2.5rem;
	left: 30vw;
	left: calc(-1 * var(--settings-sidebar-button-expansion));
	left: calc(-1 * var(--size));
	left: var(--settings-control-image-padding);
	margin-bottom: 0.5rem;
	margin-bottom: 0;
	margin-bottom: 1em;
	margin-bottom: 1rem;
	margin-bottom: 3em;
	margin-bottom: auto;
	margin-bottom: calc( -1 * ( var(--settings-subsection-stem-padding) + var(--settings-subsection-stem-bottom-padding) ) );
	margin-bottom: calc(-1 * var(--grid-item-spacing));
	margin-bottom: var(--grid-item-spacing);
	margin-bottom: var(--settings-content-padding);
	margin-bottom: var(--settings-control-spacing);
	margin-left: 0.2rem;
	margin-left: 0.8em;
	margin-left: 0;
	margin-left: 1.5em;
	margin-left: 1.5rem;
	margin-left: 2rem;
	margin-left: auto;
	margin-left: calc( 1em + var(--icon-margin) );
	margin-left: calc(0.3 * var(--size));
	margin-left: var(--margin);
	margin-left: var(--settings-control-margin);
	margin-left: var(--settings-control-spacing);
	margin-left: var(--settings-sidebar-side-margin);
	margin-right: 0.2em;
	margin-right: 0.2rem;
	margin-right: 0.5rem;
	margin-right: 1rem;
	margin-right: 4px;
	margin-right: auto;
	margin-right: calc( -1 * var(--settings-subsection-stem-padding) );
	margin-right: calc( -1 * var(--settings-subsection-stem-padding));
	margin-right: calc(-1 * var(--grid-item-spacing));
	margin-right: var(--grid-item-spacing);
	margin-right: var(--icon-margin);
	margin-right: var(--margin);
	margin-top: 0;
	margin-top: 1rem;
	margin-top: 2em;
	margin-top: 30px;
	margin-top: auto;
	margin-top: calc( -1 * var(--settings-subsection-stem-padding) );
	margin-top: calc( 0.5 * var(--settings-control-spacing) );
	margin-top: calc( 1 * ( var(--settings-subsection-stem-padding) + var(--settings-subsection-stem-bottom-padding) ) );
	margin-top: calc(1.0 * var(--settings-control-margin));
	margin-top: calc(var(--settings-control-margin) + 0.5em);
	margin-top: calc(var(--settings-control-spacing) * -0.5);
	margin-top: var(--margin);
	margin-top: var(--settings-control-spacing);
	margin: 0 20%;
	margin: 0 2rem;
	margin: 0.2rem;
	margin: 0.3rem;
	margin: 0.5rem 0;
	margin: 0.5rem;
	margin: 0;
	margin: 1.2rem 0;
	margin: 1rem;
	margin: 3em auto;
	margin: auto;
	margin: var(--controller-image-margin) auto;
	max-height: 45vh;
	max-width: 100%;
	max-width: 26rem;
	max-width: 50%;
	max-width: calc( 2 * var(--settings-right-column-computed-width));
	max-width: var(--settings-sidebar-max-width);
	min-height: 0rem;
	min-height: 10px;
	min-height: 20rem;
	min-height: 31rem;
	min-height: var(--settings-control-default-height);
	min-width: 15rem;
	min-width: 20rem;
	min-width: 25rem;
	min-width: 27rem;
	min-width: 30rem;
	min-width: 33rem;
	min-width: var(--settings-sidebar-min-width);
	object-fit: contain;
	opacity: 0.4;
	opacity: 0.5;
	opacity: 0.65;
	opacity: 0.6;
	opacity: 0.75;
	opacity: 0.9;
	opacity: 0;
	opacity: 1.0;
	opacity: 1;
	opacity: calc( 0.4 + var(--color-value-a));
	opacity: var(--settings-control-background-new-a);
	opacity: var(--settings-control-background-new-hover-a);
	overflow-x: hidden;
	overflow: hidden;
	overflow: none;
	padding-bottom: 0.2rem;
	padding-bottom: 0.5em;
	padding-bottom: 0.5rem;
	padding-bottom: 0;
	padding-bottom: calc( var(--settings-subsection-stem-padding) + var(--settings-subsection-stem-bottom-padding) );
	padding-bottom: var(--settings-sidebar-side-margin);
	padding-left: 0;
	padding-left: 5%;
	padding-left: calc( var(--settings-subsection-stem-padding) + var(--settings-control-button-min-padding-h) );
	padding-left: var(--settings-sidebar-side-margin);
	padding-right: 0;
	padding-right: 5%
	padding-right: 5px;
	padding-right: calc( var(--settings-subsection-stem-padding) + var(--settings-control-button-min-padding-h) );
	padding-right: var(--settings-right-column-left-margin);
	padding-right: var(--settings-subsection-padding-h);
	padding-top: 30px;
	padding-top: 50%;
	padding-top: 75%;
	padding: 0 0.5em;
	padding: 0 var(--settings-left-outer-margin);
	padding: 0 var(--settings-sidebar-side-margin);
	padding: 0.2em 0.5em;
	padding: 0.3em 0.8em;
	padding: 0.5em;
	padding: 0;
	padding: 1rem 0.3rem;
	padding: 1rem;
	padding: 2px;
	padding: 2rem;
	padding: var(--settings-content-padding);
	padding: var(--settings-control-button-min-padding-v) 2em;
	padding: var(--settings-control-button-min-padding-v) var(--settings-control-button-min-padding-h);
	padding: var(--settings-control-image-padding);
	padding: var(--settings-control-spacing);
	padding: var(--settings-subsection-padding-v)
	padding: var(--settings-subsection-stem-padding);
	pointer-events: none;
	position: absolute;
	position: fixed;
	position: relative;
	position: sticky;
	right: 0.15rem;
	right: 0.75rem;
	right: 0;
	right: 30vw;
	right: 4rem;
	right: calc(-1 * var(--settings-sidebar-button-expansion));
	right: var(--settings-control-image-padding);
	stroke: var(--settings-side-nav-gradient-a);
	text-align: center;
	text-align: left;
	text-overflow: ellipsis;
	text-transform: uppercase;
	to   { opacity: 1; }
	to {
	top: -0.15rem;
	top: -0.75rem;
	top: -1.8rem;
	top: 0;
	top: 0px;
	top: 30vh;
	top: 8rem;
	top: var(--settings-control-image-padding);
	transform: scale(0.93);
	transform: scale(1);
	transform: scaleY(-1);
	transform: translateX(calc(var(--toggle-control-translate-x-standard) + var(--toggle-control-translate-x-inward)))
	transform: translateY(-20%) rotate(45deg);
	transition-duration: var(--button-fade-time);
	transition-property: background-color, border-color;
	transition-property: border;
	transition-property: fill;
	transition-timing-function: ease-out;
	transition: background var(--settings-control-hover-fade-duration);
	transition: background-color var(--settings-control-hover-fade-duration),
	transition: color var( --button-fade-time );
	transition: fill var(--button-fade-time);
	transition: opacity 0.3s;
	transition: opacity var(--button-fade-time);
	transition: opacity var(--control-switch-animation-time) var(--control-switch-overshoot-ease);
	transition: opacity var(--control-switch-animation-time);
	transition: opacity var(--settings-control-hover-fade-duration) var(--settings-control-hover-fade-ease);
	transition: transform 1s, opacity 1s;
	transition: transform var(--control-switch-animation-time) var(--control-switch-overshoot-ease),
	transition: transform var(--settings-sidebar-transition-time) ease-out,
	white-space: nowrap;
	width: 0.3rem;
	width: 1.2rem;
	width: 1.5rem;
	width: 100%;
	width: 10rem;
	width: 11em;
	width: 15rem;
	width: 1em;
	width: 2.3rem;
	width: 200%;
	width: 25rem;
	width: 3000px;
	width: 30rem;
	width: 37rem;
	width: 4rem;
	width: 50%;
	width: 7rem;
	width: 80%;
	width: 8rem;
	width: 90%;
	width: auto;
	width: calc( 100% - 2rem );
	width: calc( var(--dashboard-primary-width) + ( var(--settings-left-outer-margin) * 2 ) );
	width: calc( var(--tile-size) * 0.8 );
	width: calc(var(--grid-item-width) - var(--grid-item-spacing));
	width: calc(var(--settings-right-column-computed-width) * 0.5);
	width: calc(var(--settings-right-column-width) - var(--settings-subsection-padding-h));
	width: fit-content;
	width: var(--dashboard-primary-width);
	width: var(--grid-width);
	width: var(--settings-right-column-computed-width);
	width: var(--settings-right-column-width);
	width: var(--settings-sidebar-min-width);
	width: var(--size);
	width: var(--tile-size);
	width: var(--toggle-control-width);
	word-break: break-word;
	z-index: -1;
	z-index: 0;
	z-index: 10000;
	z-index: 10;
	z-index: 1;
	z-index: 20;
	z-index: 2;
	z-index: 3;
	z-index: 9001;
    --background: rgba(
    --toggle-control-translate-x-inward: calc(1% * var(--toggle-control-translate-x-direction) * var(--item-count));
    align-items: center;
    background: rgba(
    border-top-left-radius: var(--settings-subsection-border-radius);
    bottom: 20%;
    content: '';
    display: block;
    left: 0;
    margin-top: 0.5rem;
    padding: 0.5rem;
    position: absolute;
    text-align: right;
    top: 20%;
    width: 100%;
    width: 1px;
#settingsRoot
#settingsRoot:empty
.BackgroundSelector {
.BindingEntry {
.BindingPoseLineSVG, .BindingPosePointSVG
.CalibrateButton
.CalibrateButtonRow
.CalibrateThumbstickItem
.CalibrateThumbstickItem .Label
.CenteredBox {
.ChaperoneSelector > div {
.ChaperoneSelectorPreview > svg {
.ChaperoneSelectorPreview {
.ColorIndicator {
.ColorRanges {
.ControllerVisualizer
.ControllerVisualizerEntries
.ControllerVisualizerWrapper
.DashboardPanel .SettingsPageContainer {
.DeadzoneInner
.DeadzoneOuter
.DeviceTabs
.FlexRow .SettingsItem {
.InSubpage .SettingsNavigationContainer,
.InSubpage .SettingsTextLinks {
.LegacyDebuggerButtonName
.LegacyDebuggerController
.LegacyDebuggerGroup
.LegacyDebuggerWrapper
.MenuSVG
.MenuSVG, .BindingPosePointSVG, .BindingPoseLineSVG
.MenuSVGVisible
.SettingsAppSelectorButton {
.SettingsBackgroundOption {
.SettingsBackgroundOption.Selected {
.SettingsBodyContainer {
.SettingsCheckboxContainer input {
.SettingsCloseButton > svg {
.SettingsCloseButton circle {
.SettingsCloseButton {
.SettingsCloseButton:hover circle {
.SettingsColumn {
.SettingsFrame {
.SettingsItem + .SettingsItemValueLabel {
.SettingsItem .Label,
.SettingsItem .Label.Resolution
.SettingsItem .Label.Resolution .Dimensions
.SettingsItem .Label.Resolution .Dimensions,
.SettingsItem .Label.Resolution .Percentage
.SettingsItem .Label.Resolution.SubsectionStem
.SettingsItem .Label:first-child {
.SettingsItem.Label {
.SettingsItem.RadioButtons .RadioButton .Label {
.SettingsItem.RadioButtons .RadioButton {
.SettingsItem.RadioButtons .RadioButton.Selected .Label {
.SettingsItem.RadioButtons .RadioButton.Selected {
.SettingsItem.RadioButtons .RadioButton.Selected:after {
.SettingsItem.RadioButtons .RadioButton:hover,
.SettingsItem.RadioButtons .RadioButton:not(.Selected):active {
.SettingsItem.RadioButtons .RadioButton:not(.Selected):hover {
.SettingsItem.RadioButtons .RadioButtonsSet {
.SettingsItem.RadioButtons {
.SettingsItem.SegmentedControl .SegmentedControlGroup {
.SettingsItem.SegmentedControl .SegmentedControlGroup.DualValue:not(:hover) .SegmentedControlGroupOption:not(.Active) > span {
.SettingsItem.SegmentedControl .SegmentedControlGroup::after {
.SettingsItem.SegmentedControl .SegmentedControlGroup::before {
.SettingsItem.SegmentedControl .SegmentedControlGroup:active::after {
.SettingsItem.SegmentedControl .SegmentedControlGroup:hover::after {
.SettingsItem.SegmentedControl .SegmentedControlGroup:hover::before {
.SettingsItem.SegmentedControl .SegmentedControlGroup:not(.DualValue) .SegmentedControlGroupOption.Active {
.SettingsItem.SegmentedControl .SegmentedControlGroup:not(.DualValue) .SegmentedControlGroupOption:not(.Active):not(:hover) > span,
.SettingsItem.SegmentedControl .SegmentedControlGroupOption > span {
.SettingsItem.SegmentedControl .SegmentedControlGroupOption {
.SettingsItem.SegmentedControl .SegmentedControlGroupOption.Active > span {
.SettingsItem.SegmentedControl .SegmentedControlGroupOption:first-child {
.SettingsItem.SegmentedControl .SegmentedControlGroupOption:last-child {
.SettingsItem.SegmentedControl .SegmentedControlGroupOption:not(.Active) + .SegmentedControlGroupOption:not(.Active)::before {
.SettingsItem.SegmentedControl .SegmentedControlGroupOption:not(:first-child)::before {
.SettingsItem.Slider .Handle > .RangeLabel {
.SettingsItem.Slider > .RangeLabel {
.SettingsItem.Slider {
.SettingsItem.Slider.Alpha .SliderControl.Color .Track {
.SettingsItem.Slider.Hue .SliderControl.Color .Track {
.SettingsItemValueLabel + .SettingsItem {
.SettingsItemValueLabel {
.SettingsItemValueLabel.Fixed {
.SettingsMain .BindingButtonRow .ButtonControl.WithIcon > span
.SettingsMain .ButtonControl
.SettingsMain .ButtonControl + .ButtonControl
.SettingsMain .ButtonControl > .Badge
.SettingsMain .ButtonControl > .Badge.DriversBlocked,
.SettingsMain .ButtonControl.Disabled,
.SettingsMain .ButtonControl.Disabled:hover
.SettingsMain .ButtonControl.Dropdown
.SettingsMain .ButtonControl.Dropdown > span
.SettingsMain .ButtonControl.Dropdown::after
.SettingsMain .ButtonControl.WithIcon
.SettingsMain .ButtonControl.WithIcon > .Icon
.SettingsMain .ButtonControl.WithIcon > .Icon path
.SettingsMain .ButtonControl.WithIcon > span
.SettingsMain .ButtonControl:not(.Disabled):active
.SettingsMain .ButtonControl:not(.Disabled):hover
.SettingsMain .CameraStatus.Evaluating
.SettingsMain .CameraStatus.Failure
.SettingsMain .CameraStatus.Success
.SettingsMain .CameraTestLabel
.SettingsMain .CameraTestStatusItem
.SettingsMain .CameraTestSummary
.SettingsMain .Dropdown.Popover
.SettingsMain .Dropdown.Popover .Separator
.SettingsMain .Dropdown.Popover > .ScrollPanel
.SettingsMain .Dropdown.Popover,
.SettingsMain .DropdownPopoverButton
.SettingsMain .DropdownPopoverButton.Selected
.SettingsMain .DropdownPopoverButton:active
.SettingsMain .DropdownPopoverButton:hover
.SettingsMain .Modal .Body > .Spacer
.SettingsMain .Modal .ModalPlaceholder
.SettingsMain .Modal .Subsection .BlockedSubheader
.SettingsMain .Modal .Subsection .BlockedSubheader .ButtonControl
.SettingsMain .Modal .Subsection .BlockedSubheader .Label
.SettingsMain .Modal > .Subsection .Label
.SettingsMain .Modal > .Subsection.Body
.SettingsMain .Modal > .Subsection.Bottom
.SettingsMain .Modal > .Subsection.Top,
.SettingsMain .Modal > .Subsection.Top.Subheader
.SettingsMain .Modal hr {
.SettingsMain .Modal {
.SettingsMain .Modal.AppVideoModal
.SettingsMain .Modal.Backgrounds
.SettingsMain .Modal.Backgrounds .BackgroundsGrid
.SettingsMain .Modal.Backgrounds .ButtonControl.Background
.SettingsMain .Modal.Backgrounds .ButtonControl.Background.Selected
.SettingsMain .Modal.Backgrounds .ButtonControl.Background.Selected:hover
.SettingsMain .Modal.Backgrounds .ButtonControl.Background::before
.SettingsMain .Modal.BindingsModal
.SettingsMain .Modal.CameraTest .Body
.SettingsMain .Modal.CameraTest .Label.CameraStatus
.SettingsMain .Modal.CameraTest img
.SettingsMain .Modal.OverlayAutoLaunchModal
.SettingsMain .SettingsItem .Subsection
.SettingsMain .SettingsItem > *:nth-child(3),
.SettingsMain .SettingsItem > .Label:not(.Spanning) + *:nth-child(2):not(.Subsection)
.SettingsMain .SettingsItem > .Label:not(.Spanning) + .Label:nth-child(2)
.SettingsMain .SettingsItem > .Label:not(.Spanning):first-child
.SettingsMain .SettingsItem > .Spanning
.SettingsMain .SettingsItem > .Spanning + .SubsectionStem .ButtonControl {
.SettingsMain .SettingsItem > .Spanning + .SubsectionStem,
.SettingsMain .SettingsItem > .Spanning + :last-child
.SettingsMain .SettingsItem > .Subsection,
.SettingsMain .SettingsItem > .Subsection:first-child
.SettingsMain .SettingsItem > .SubsectionStem,
.SettingsMain .SettingsItem > .SubsectionStem.Hidden > :only-child
.SettingsMain .SettingsItem > :only-child,
.SettingsMain .SettingsItem.Advanced
.SettingsMain .SettingsItem.Background .ButtonControl.Background
.SettingsMain .SettingsItem.Background .ButtonControl.Background::before
.SettingsMain .SettingsItem.ButtonRow
.SettingsMain .SettingsItem.ButtonRow > .ButtonControl
.SettingsMain .SettingsItem.ButtonRow > :not(:first-child)
.SettingsMain .SettingsItem.ColorPicker .ButtonControl
.SettingsMain .SettingsItem.ColorPicker .ButtonControl::before
.SettingsMain .SettingsItem.ColorPicker .ButtonControl:not(:hover)::before
.SettingsMain .SettingsItem.ResetDefaultButton
.SettingsMain .SettingsItem:not(.Label)
.SettingsMain .SettingsItem:not(:last-child)
.SettingsMain .SettingsMainPanel {
.SettingsMain .SettingsPageContainer > .Subsection.Top
.SettingsMain .SettingsPageContainer hr {
.SettingsMain .SettingsSidebar .AdvancedSettingsSegmentedControl .Label{
.SettingsMain .SettingsSidebar .AdvancedSettingsSegmentedControl .SegmentedControlGroup
.SettingsMain .SettingsSidebar .AdvancedSettingsSegmentedControl .SegmentedControlGroup.Fadable:not(:hover)
.SettingsMain .SettingsSidebar .AdvancedSettingsSegmentedControl .SegmentedControlGroup.On::after
.SettingsMain .SettingsSidebar .SettingsItem .Label {
.SettingsMain .SettingsSidebar .SettingsItem .SegmentedControlGroup {
.SettingsMain .SettingsSidebar .SettingsItem {
.SettingsMain .Subsection
.SettingsMain .Subsection > .ButtonControl
.SettingsMain .Subsection > .ButtonControl:not(:first-child)
.SettingsMain .Subsection > .ButtonRow > .ButtonControl
.SettingsMain .Subsection > .ButtonRow > .ButtonControl:only-child
.SettingsMain .Subsection > .ButtonRow > .Spacer
.SettingsMain .Subsection {
.SettingsMain .Subsection.WithStem {
.SettingsMain .Subsection:not(:first-child)
.SettingsMain .SubsectionStem.Label {
.SettingsMain .SubsectionStem:not(.Hidden) {
.SettingsMain .SubsectionStem:not(.Hidden),
.SettingsMain .SubsectionStem:not(.Hidden)::before {
.SettingsMain .SubsectionStem:not(:first-child) .ButtonControl {
.SettingsMain .TrackerEditorModal
.SettingsMain .TrackerEditorModal .TrackerEntry > .Label
.SettingsMain .TrackerEditorModal .TrackerEntry > .Label .TrackerConnectionIndicator
.SettingsMain .TrackerEditorModal .TrackerEntry > .Label .TrackerConnectionIndicator.Connected
.SettingsMain .TrackerEditorModal .TrackerEntry > .Label .TrackerConnectionIndicator.Disconnected
.SettingsMain .TrackerEditorModal .TrackerEntry:not(:last-child)
.SettingsMain .TrackerPath
.SettingsMain h1
.SettingsMain h1:last-child
.SettingsMain {
.SettingsMain.Desktop .SettingsRestartRequiredBanner {
.SettingsMain.Desktop .SettingsRestartRequiredBanner:not(.Shown) {
.SettingsMain.Desktop .SettingsSidebar .AdvancedSettingsSegmentedControl .Label{
.SettingsMain.Desktop .SettingsSidebar .Header {
.SettingsMain.Desktop .SettingsSidebarButton::before {
.SettingsMain.Loading > .Label
.SettingsMain.Loading,
.SettingsMain.Overlay .Modal.BindingsModal
.SettingsMain.Overlay .SettingsMainPanel {
.SettingsMain.Overlay .SettingsPageContainer hr {
.SettingsMain.Overlay .SettingsRestartRequiredBanner {
.SettingsMain.Overlay .SettingsRestartRequiredBanner.Shown {
.SettingsMain.Overlay .SettingsRestartRequiredBanner::before {
.SettingsMain.Overlay .SettingsRestartRequiredBanner:not(.Shown) {
.SettingsMain.Overlay .SettingsSidebar::before {
.SettingsMain.Overlay .SettingsSidebarPageContainer {
.SettingsNavigationContainer .SettingsHeader .Label {
.SettingsNavigationContainer .SettingsHeader path {
.SettingsNavigationContainer .SettingsHeader svg {
.SettingsNavigationContainer .SettingsHeader {
.SettingsNavigationContainer .SettingsHeader:hover
.SettingsNavigationContainer .SettingsHeader:hover path  {
.SettingsNavigationContainer > div {
.SettingsNavigationContainer {
.SettingsNavigationContainer,
.SettingsPageContainer > .Bottom {
.SettingsPageContainer > .SettingsItem {
.SettingsPageContainer {
.SettingsRestartRequiredBanner .ButtonControl {
.SettingsRestartRequiredBanner .Label {
.SettingsRestartRequiredBanner {
.SettingsRestartRequiredBanner.ReShimmer .ButtonControl {
.SettingsRestartRequiredBanner.ReShimmer::before {
.SettingsRestartRequiredBanner::before {
.SettingsRootContainer {
.SettingsSidebar .Bottom {
.SettingsSidebar .Header {
.SettingsSidebar .Spacer {
.SettingsSidebar {
.SettingsSidebar::before {
.SettingsSidebar:empty {
.SettingsSidebarButton .Label {
.SettingsSidebarButton {
.SettingsSidebarButton.Active .Label {
.SettingsSidebarButton.Active::before {
.SettingsSidebarButton::before {
.SettingsSidebarButton:hover .Label {
.SettingsSidebarButton:not(.Active):active .Label {
.SettingsSidebarPageContainer {
.SettingsSidebarPageModalContainer {
.SettingsSubTitle {
.SettingsTextLinks > div {
.SettingsTextLinks > div:hover {
.SettingsTextLinks {
.SettingsTitle .Title
.SettingsTitle .Title {
.SettingsTitle /{
.ThumbstickAngle
.ThumbstickAngleIcon
.ThumbstickCalibrateBody
.ThumbstickContainer
.ThumbstickContainer svg
.ThumbstickContainer svg circle
.ThumbstickContainer svg polyline
.ThumbstickDeadzoneItem
.TrackpadPosition
.TrackpadVisualizerBackground
.TrackpadVisualizerContainer
.TrackpadVisualizerForce
.TrackpadVisualizerForceBackground
.TrackpadVisualizerPip
.TrackpadVisualizerPip.Clicked
.TrackpadVisualizerPipContainer
.TriggerBar
.TriggerBarBackground
.TriggerForce .TriggerBarContent
.TriggerValue .TriggerBarContent
.TriggerVisualizerContainer
.TriggerVisualizerContainer.HasClick
.TriggerVisualizerContainer.HasForce
.VisualizerButtonBase
.VisualizerButtonBase,
.VisualizerButtonBase.Clicked
.VisualizerButtonBase.Touched
.VisualizerButtonClick,
.VisualizerButtonContainer
.VisualizerButtonTouch
.VisualizerControl
.VisualizerControl .MenuSVG
.VisualizerImage
.VisualizerImageContainer
.VisualizerLabel
.VisualizerSectionHeader
/* .VisualizerControlName
/* Bottom, spanning section of settings item */
/* Left side of settings item */
/* Right side of settings item */
/* Sole spanning child of settings item */
@keyframes RestartBannerShimmerAnimation {
@keyframes RestartBannerSlideUpAnimation {
@keyframes RestartButtonFlashAnimation {
@keyframes SettingsDropdownPopoverFadeIn {
@keyframes SettingsLoadingLabelFadeIn {
@keyframes SettingsModalFadeIn {
body {
