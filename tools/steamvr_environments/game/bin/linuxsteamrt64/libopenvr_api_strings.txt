__gmon_start__
_init
_fini
_ITM_deregisterTMCloneTable
_ITM_registerTMCloneTable
__cxa_finalize
_Jv_RegisterClasses
std::string::_Rep::_M_destroy(std::allocator<char> const&)
VR_GetInitToken
VR_ShutdownInternal
std::__throw_system_error(int)
__gxx_personality_v0
std::string::_Rep::_S_empty_rep_storage
std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(char const*, std::allocator<char> const&)
VR_InitInternal2
VR_InitInternal
VR_GetGenericInterface
VR_IsInterfaceVersionValid
VR_IsHmdPresent
VR_IsRuntimeInstalled
VR_GetRuntimePath
VR_RuntimePath
VR_GetVRInitErrorAsSymbol
VR_GetVRInitErrorAsEnglishDescription
VR_GetStringForHmdError
__pthread_key_create
pthread_mutex_unlock
pthread_mutex_lock
VRDashboardManager
VRControlPanel
VRCompositorSystemInternal
VRRenderModelsInternal
VRTrackedCameraInternal
VRVirtualDisplay
VROculusDirect
LiquidVR
VRPaths
VROverlayView
VRSceneGraph
__sprintf_chk
dladdr
readlink
__stack_chk_fail
getcwd
strlen
std::string::assign(char const*, unsigned long)
chdir
getenv
std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::string const&)
std::string::_M_leak_hard()
std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(unsigned long, char, std::allocator<char> const&)
std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::string const&, unsigned long, unsigned long)
std::string::append(std::string const&)
std::string::insert(unsigned long, char const*, unsigned long)
std::string::_M_mutate(unsigned long, unsigned long, unsigned long)
std::__throw_out_of_range_fmt(char const*, ...)
std::string::replace(unsigned long, unsigned long, char const*, unsigned long)
strcmp
std::string::erase(__gnu_cxx::__normal_iterator<char*, std::string>, __gnu_cxx::__normal_iterator<char*, std::string>)
__xstat
fopen
fseek
ftell
operator new[](unsigned long)
fread
operator delete[](void*)
fclose
fwrite
std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(char const*, unsigned long, std::allocator<char> const&)
chmod
fputs
std::string::append(char const*, unsigned long)
rename
std::string::swap(std::string&)
strncasecmp
unlink
std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&)
memcpy
std::string::rfind(char, unsigned long) const
strcasecmp
dlopen
dlsym
dlclose
typeinfo for bool (*)(char)
std::__codecvt_utf8_base<wchar_t>::~__codecvt_utf8_base()
operator delete(void*)
std::__codecvt_utf8_base<char32_t>::~__codecvt_utf8_base()
std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>::_Rep::_M_destroy(std::allocator<wchar_t> const&)
strncmp
std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>::_Rep::_S_empty_rep_storage
operator new(unsigned long)
std::codecvt<wchar_t, char, __mbstate_t>::codecvt(unsigned long)
wcslen
std::basic_string<char, std::char_traits<char>, std::allocator<char>>::basic_string(std::allocator<char> const&)
std::string::resize(unsigned long, char)
std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long)
std::__throw_logic_error(char const*)
__cxa_begin_catch
__cxa_end_catch
std::__throw_length_error(char const*)
std::__throw_range_error(char const*)
std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>::basic_string(std::allocator<wchar_t> const&)
std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>::resize(unsigned long, wchar_t)
std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>::_M_leak_hard()
std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>::_Rep::_S_create(unsigned long, unsigned long, std::allocator<wchar_t> const&)
std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>::_M_replace_safe(unsigned long, unsigned long, wchar_t const*, unsigned long)
std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>::basic_string(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>> const&)
std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>::_M_mutate(unsigned long, unsigned long, unsigned long)
strncpy
std::string::reserve(unsigned long)
toupper
tolower
__snprintf_chk
strtoull
std::__throw_bad_function_call()
std::__codecvt_utf8_base<char32_t>::do_in(__mbstate_t&, char const*, char const*, char const*&, char32_t*, char32_t*, char32_t*&) const
void std::vector<std::string, std::allocator<std::string>>::_M_emplace_back_aux<std::string const&>(std::string const&)
__cxa_rethrow
std::ios_base::ios_base()
vtable for std::basic_ios<char, std::char_traits<char>>
VTT for std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>>
std::basic_ios<char, std::char_traits<char>>::init(std::basic_streambuf<char, std::char_traits<char>>*)
vtable for std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>>
vtable for std::basic_streambuf<char, std::char_traits<char>>
std::locale::locale()
vtable for std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>
std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>::_M_sync(char*, unsigned long, unsigned long)
std::basic_istream<char, std::char_traits<char>>& std::getline<char, std::char_traits<char>, std::allocator<char>>(std::basic_istream<char, std::char_traits<char>>&, std::basic_string<char, std::char_traits<char>, std::allocator<char>>&, char)
std::locale::~locale()
std::ios_base::~ios_base()
std::basic_istringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_istringstream()
std::ios_base::Init::Init()
std::ios_base::Init::~Init()
__cxa_atexit
typeinfo name for bool (char)
typeinfo for bool (char)
vtable for __cxxabiv1::__function_type_info
vtable for __cxxabiv1::__si_class_type_info
typeinfo for std::__codecvt_utf8_base<wchar_t>
typeinfo for std::__codecvt_utf8_base<char32_t>
typeinfo name for bool (*)(char)
vtable for __cxxabiv1::__pointer_type_info
std::__codecvt_utf8_base<wchar_t>::do_out(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const
std::__codecvt_utf8_base<wchar_t>::do_unshift(__mbstate_t&, char*, char*, char*&) const
std::__codecvt_utf8_base<wchar_t>::do_in(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const
std::__codecvt_utf8_base<wchar_t>::do_encoding() const
std::__codecvt_utf8_base<wchar_t>::do_always_noconv() const
std::__codecvt_utf8_base<wchar_t>::do_length(__mbstate_t&, char const*, char const*, unsigned long) const
std::__codecvt_utf8_base<wchar_t>::do_max_length() const
std::__codecvt_utf8_base<char32_t>::do_out(__mbstate_t&, char32_t const*, char32_t const*, char32_t const*&, char*, char*, char*&) const
std::__codecvt_utf8_base<char32_t>::do_unshift(__mbstate_t&, char*, char*, char*&) const
std::__codecvt_utf8_base<char32_t>::do_encoding() const
std::__codecvt_utf8_base<char32_t>::do_always_noconv() const
std::__codecvt_utf8_base<char32_t>::do_length(__mbstate_t&, char const*, char const*, unsigned long) const
std::__codecvt_utf8_base<char32_t>::do_max_length() const
std::string::assign(std::string const&)
std::__throw_bad_alloc()
stderr
__fprintf_chk
memcmp
std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
memmove
std::__throw_bad_cast()
vsnprintf
std::ctype<char>::_M_widen_init() const
sscanf
__memcpy_chk
VTT for std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>
vtable for std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>
std::ostream::operator<<(std::basic_streambuf<char, std::char_traits<char>>*)
std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::~basic_ostringstream()
std::istream& std::istream::_M_extract<double>(double&)
vtable for __cxxabiv1::__class_type_info
std::exception::~exception()
std::_Rb_tree_increment(std::_Rb_tree_node_base*)
__cxa_allocate_exception
__cxa_throw
__cxa_free_exception
malloc
std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char>>::basic_ostringstream(std::_Ios_Openmode)
std::basic_ostream<char, std::char_traits<char>>& std::operator<< <std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>>&, char const*)
std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>::str() const
free
std::_Rb_tree_increment(std::_Rb_tree_node_base const*)
std::_Rb_tree_decrement(std::_Rb_tree_node_base const*)
modf
std::string::compare(char const*) const
std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
void std::vector<std::string, std::allocator<std::string>>::_M_emplace_back_aux<std::string>(std::string&&)
strchr
typeinfo for std::exception
std::basic_ostream<char, std::char_traits<char>>& std::__ostream_insert<char, std::char_traits<char>>(std::basic_ostream<char, std::char_traits<char>>&, char const*, long)
std::ostream::operator<<(int)
strpbrk
__cxa_pure_virtual
mkdir
__errno_location
strtol
unsetenv
libm.so.6
libdl.so.2
libstdc++.so.6
ld-linux-x86-64.so.2
libpthread.so.0
abort
pthread_once
dl_iterate_phdr
libc.so.6
_edata
__bss_start
_end
GLIBC_2.2.5
GLIBCXX_3.4.14
GLIBCXX_3.4.9
CXXABI_1.3
GLIBCXX_3.4.11
GLIBCXX_3.4.20
GLIBCXX_3.4.21
GLIBCXX_3.4
GLIBC_2.14
GLIBC_2.4
GLIBC_2.3.4
linux64
vrclient.so
VRClientCoreFactory
IVRClientCore_003
IVRDashboardManager_001
IVRControlPanel_006
IVRRenderModelsInternal_001
IVRTrackedCameraInternal_001
IVRVirtualDisplay_002
IVROculusDirect_001
ILiquidVR_001
IVRPaths_001
IVROverlayView_002
IVRSceneGraph_001
IVRCompositorSystemInternal_001
VRInitError_None
VRInitError_Unknown
VRInitError_Init_FileNotFound
VRInitError_Init_HmdNotFound
VRInitError_Init_NoConfigPath
VRInitError_Init_NoLogPath
VRInitError_Init_Retry
VRInitError_Init_ShuttingDown
VRInitError_Init_Internal
VRInitError_Driver_Failed
VRInitError_Driver_Unknown
VRInitError_Driver_HmdUnknown
VRInitError_Driver_NotLoaded
VRInitError_Driver_HmdInUse
VRInitError_IPC_ConnectFailed
VRInitError_IPC_Failed
VRInitError_Compositor_Failed
Unknown error (%d)
No Error (0)
Installation Not Found (100)
Installation Corrupt (101)
File Not Found (103)
Interface Not Found (105)
Invalid Interface (106)
Hmd Not Found (108)
Not Initialized (109)
Internal Retry (115)
User Canceled Init (116)
VR system shutting down (119)
vrserver internal error (124)
Hmd DriverId is invalid (125)
VR Monitor Not Found (127)
VR Dashboard Not Found (133)
VR Home Not Found (135)
VR home startup failed (136)
Rebooting In Progress (137)
USB Service Busy (140)
Driver Failed (200)
Driver Not Known (201)
HMD Not Known (202)
Driver Not Loaded (203)
VR Server Init Failed (300)
Shared IPC Failed (305)
VRInitError_Init_InstallationNotFound
VRInitError_Init_InstallationCorrupt
VRInitError_Init_VRClientDLLNotFound
VRInitError_Init_FactoryNotFound
VRInitError_Init_InterfaceNotFound
VRInitError_Init_InvalidInterface
VRInitError_Init_UserConfigDirectoryInvalid
VRInitError_Init_NotInitialized
VRInitError_Init_PathRegistryNotFound
VRInitError_Init_PathRegistryNotWritable
VRInitError_Init_AppInfoInitFailed
VRInitError_Init_InitCanceledByUser
VRInitError_Init_AnotherAppLaunching
VRInitError_Init_SettingsInitFailed
VRInitError_Init_TooManyObjects
VRInitError_Init_NoServerForBackgroundApp
VRInitError_Init_NotSupportedWithCompositor
VRInitError_Init_NotAvailableToUtilityApps
VRInitError_Init_HmdDriverIdIsNone
VRInitError_Init_HmdNotFoundPresenceFailed
VRInitError_Init_VRMonitorNotFound
VRInitError_Init_VRMonitorStartupFailed
VRInitError_Init_LowPowerWatchdogNotSupported
VRInitError_Init_InvalidApplicationType
VRInitError_Init_NotAvailableToWatchdogApps
VRInitError_Init_WatchdogDisabledInSettings
VRInitError_Init_VRDashboardNotFound
VRInitError_Init_VRDashboardStartupFailed
VRInitError_Init_VRHomeNotFound
VRInitError_Init_VRHomeStartupFailed
VRInitError_Init_RebootingBusy
VRInitError_Init_FirmwareUpdateBusy
VRInitError_Init_FirmwareRecoveryBusy
VRInitError_Init_USBServiceBusy
VRInitError_Init_VRWebHelperStartupFailed
VRInitError_Init_TrackerManagerInitFailed
VRInitError_Init_AlreadyRunning
VRInitError_Init_FailedForVrMonitor
VRInitError_Init_PropertyManagerInitFailed
VRInitError_Init_WebServerFailed
VRInitError_Driver_RuntimeOutOfDate
VRInitError_Driver_NotCalibrated
VRInitError_Driver_CalibrationInvalid
VRInitError_Driver_HmdDisplayNotFound
VRInitError_Driver_TrackedDeviceInterfaceUnknown
VRInitError_Driver_HmdDriverIdOutOfBounds
VRInitError_Driver_HmdDisplayMirrored
VRInitError_Driver_HmdDisplayNotFoundLaptop
VRInitError_IPC_ServerInitFailed
VRInitError_IPC_SharedStateInitFailed
VRInitError_IPC_CompositorInitFailed
VRInitError_IPC_MutexInitFailed
VRInitError_IPC_CompositorConnectFailed
VRInitError_IPC_CompositorInvalidConnectResponse
VRInitError_IPC_ConnectFailedAfterMultipleAttempts
VRInitError_IPC_ConnectFailedAfterTargetExited
VRInitError_IPC_NamespaceUnavailable
VRInitError_Compositor_D3D11HardwareRequired
VRInitError_Compositor_FirmwareRequiresUpdate
VRInitError_Compositor_OverlayInitFailed
VRInitError_Compositor_ScreenshotsInitFailed
VRInitError_Compositor_UnableToCreateDevice
VRInitError_Compositor_SharedStateIsNull
VRInitError_Compositor_NotificationManagerIsNull
VRInitError_Compositor_ResourceManagerClientIsNull
VRInitError_Compositor_MessageOverlaySharedStateInitFailure
VRInitError_Compositor_PropertiesInterfaceIsNull
VRInitError_Compositor_CreateFullscreenWindowFailed
VRInitError_Compositor_SettingsInterfaceIsNull
VRInitError_Compositor_FailedToShowWindow
VRInitError_Compositor_DistortInterfaceIsNull
VRInitError_Compositor_DisplayFrequencyFailure
VRInitError_Compositor_RendererInitializationFailed
VRInitError_Compositor_DXGIFactoryInterfaceIsNull
VRInitError_Compositor_DXGIFactoryCreateFailed
VRInitError_Compositor_DXGIFactoryQueryFailed
VRInitError_Compositor_InvalidAdapterDesktop
VRInitError_Compositor_InvalidHmdAttachment
VRInitError_Compositor_InvalidOutputDesktop
VRInitError_Compositor_InvalidDeviceProvided
VRInitError_Compositor_D3D11RendererInitializationFailed
VRInitError_Compositor_FailedToFindDisplayMode
VRInitError_Compositor_FailedToCreateSwapChain
VRInitError_Compositor_FailedToGetBackBuffer
VRInitError_Compositor_FailedToCreateRenderTarget
VRInitError_Compositor_FailedToCreateDXGI2SwapChain
VRInitError_Compositor_FailedtoGetDXGI2BackBuffer
VRInitError_Compositor_FailedToCreateDXGI2RenderTarget
VRInitError_Compositor_FailedToGetDXGIDeviceInterface
VRInitError_Compositor_SelectDisplayMode
VRInitError_Compositor_FailedToCreateNvAPIRenderTargets
VRInitError_Compositor_NvAPISetDisplayMode
VRInitError_Compositor_FailedToCreateDirectModeDisplay
VRInitError_Compositor_InvalidHmdPropertyContainer
VRInitError_Compositor_UpdateDisplayFrequency
VRInitError_Compositor_CreateRasterizerState
VRInitError_Compositor_CreateWireframeRasterizerState
VRInitError_Compositor_CreateSamplerState
VRInitError_Compositor_CreateClampToBorderSamplerState
VRInitError_Compositor_CreateAnisoSamplerState
VRInitError_Compositor_CreateOverlaySamplerState
VRInitError_Compositor_CreatePanoramaSamplerState
VRInitError_Compositor_CreateFontSamplerState
VRInitError_Compositor_CreateNoBlendState
VRInitError_Compositor_CreateBlendState
VRInitError_Compositor_CreateAlphaBlendState
VRInitError_Compositor_CreateBlendStateMaskR
VRInitError_Compositor_CreateBlendStateMaskG
VRInitError_Compositor_CreateBlendStateMaskB
VRInitError_Compositor_CreateDepthStencilState
VRInitError_Compositor_CreateDepthStencilStateNoWrite
VRInitError_Compositor_CreateDepthStencilStateNoDepth
VRInitError_Compositor_CreateFlushTexture
VRInitError_Compositor_CreateDistortionSurfaces
VRInitError_Compositor_CreateConstantBuffer
VRInitError_Compositor_CreateHmdPoseConstantBuffer
VRInitError_Compositor_CreateHmdPoseStagingConstantBuffer
VRInitError_Compositor_CreateSharedFrameInfoConstantBuffer
VRInitError_Compositor_CreateOverlayConstantBuffer
VRInitError_Compositor_CreateSceneTextureIndexConstantBuffer
VRInitError_Compositor_CreateReadableSceneTextureIndexConstantBuffer
VRInitError_Compositor_CreateLayerGraphicsTextureIndexConstantBuffer
VRInitError_Compositor_CreateLayerComputeTextureIndexConstantBuffer
VRInitError_Compositor_CreateLayerComputeSceneTextureIndexConstantBuffer
VRInitError_Compositor_CreateComputeHmdPoseConstantBuffer
VRInitError_Compositor_CreateGeomConstantBuffer
VRInitError_Compositor_CreatePanelMaskConstantBuffer
VRInitError_Compositor_CreatePixelSimUBO
VRInitError_Compositor_CreateMSAARenderTextures
VRInitError_Compositor_CreateResolveRenderTextures
VRInitError_Compositor_CreateComputeResolveRenderTextures
VRInitError_Compositor_CreateDriverDirectModeResolveTextures
VRInitError_Compositor_OpenDriverDirectModeResolveTextures
VRInitError_Compositor_CreateFallbackSyncTexture
VRInitError_Compositor_ShareFallbackSyncTexture
VRInitError_Compositor_CreateOverlayIndexBuffer
VRInitError_Compositor_CreateOverlayVertextBuffer
VRInitError_Compositor_CreateTextVertexBuffer
VRInitError_Compositor_CreateTextIndexBuffer
VRInitError_Compositor_CreateMirrorTextures
VRInitError_Compositor_CreateLastFrameRenderTexture
VRInitError_Compositor_CreateMirrorOverlay
VRInitError_Compositor_FailedToCreateVirtualDisplayBackbuffer
VRInitError_Compositor_DisplayModeNotSupported
VRInitError_VendorSpecific_UnableToConnectToOculusRuntime
VRInitError_VendorSpecific_WindowsNotInDevMode
VRInitError_VendorSpecific_OculusRuntimeBadInstall
VRInitError_VendorSpecific_HmdFound_CantOpenDevice
VRInitError_VendorSpecific_HmdFound_UnableToRequestConfigStart
VRInitError_VendorSpecific_HmdFound_NoStoredConfig
VRInitError_VendorSpecific_HmdFound_ConfigFailedSanityCheck
VRInitError_VendorSpecific_HmdFound_ConfigTooBig
VRInitError_VendorSpecific_HmdFound_ConfigTooSmall
VRInitError_VendorSpecific_HmdFound_UnableToInitZLib
VRInitError_VendorSpecific_HmdFound_CantReadFirmwareVersion
VRInitError_VendorSpecific_HmdFound_UnableToSendUserDataStart
VRInitError_VendorSpecific_HmdFound_UnableToGetUserDataStart
VRInitError_VendorSpecific_HmdFound_UnableToGetUserDataNext
VRInitError_VendorSpecific_HmdFound_UserDataAddressRange
VRInitError_VendorSpecific_HmdFound_UserDataError
VRInitError_Steam_SteamInstallationNotFound
vrclient Shared Lib Not Found (102)
Factory Function Not Found (104)
User Config Directory Invalid (107)
Installation path could not be located (110)
Config path could not be located (111)
Log path could not be located (112)
Unable to write path registry (113)
App info manager init failed (114)
Another app was already launching (117)
Settings manager init failed (118)
Too many tracked objects (120)
Not starting vrserver for background app (121)
The requested interface is incompatible with the compositor and the compositor is running (122)
This interface is not available to utility applications (123)
Hmd Not Found Presence Failed (126)
VR Monitor startup failed (128)
Low Power Watchdog Not Supported (129)
Invalid Application Type (130)
Not available to watchdog apps (131)
Watchdog disabled in settings (132)
VR Dashboard startup failed (134)
Firmware Update In Progress (138)
Firmware Recovery In Progress (139)
Driver runtime is out of date (204)
HMD already in use by another application (205)
Device is not calibrated (206)
Device Calibration is invalid (207)
HMD detected over USB, but Monitor not found (208)
Driver Tracked Device Interface unknown (209)
Hmd DriverId is our of bounds (211)
HMD detected over USB, but Monitor may be mirrored instead of extended (212)
On laptop, HMD detected over USB, but Monitor not found (213)
Connect to VR Server Failed (301)
Shared IPC State Init Failed (302)
Shared IPC Compositor Init Failed (303)
Shared IPC Mutex Init Failed (304)
Shared IPC Compositor Connect Failed (306)
Shared IPC Compositor Invalid Connect Response (307)
Shared IPC Connect Failed After Multiple Attempts (308)
Shared IPC Connect Failed After Target Exited (309)
Shared IPC Namespace Unavailable (310)
Compositor failed to initialize (400)
Compositor failed to find DX11 hardware (401)
Compositor requires mandatory firmware update (402)
Compositor initialization succeeded, but overlay init failed (403)
Compositor initialization succeeded, but screenshot init failed (404)
Compositor unable to create graphics device (405)
Unable to connect to Oculus Runtime (1000)
Unable to connect to Oculus Runtime, possible bad install (1114)
HMD found, but can not open device (1101)
HMD found, but unable to request config (1102)
HMD found, but no stored config (1103)
HMD found, but failed configuration check (1113)
HMD found, but config too big (1104)
HMD found, but config too small (1105)
HMD found, but unable to init ZLib (1106)
HMD found, but problems with the data (1107)
HMD found, but problems with the data (1108)
HMD found, but problems with the data (1109)
HMD found, but problems with the data (1110)
HMD found, but problems with the data (1111)
HMD found, but problems with the data (1112)
Unable to find Steam installation (2000)
/proc/self/exe
TMPDIR
basic_string::erase
.tmp
http://
https://
vr-input-workshop://
file://
%s: __pos (which is %zu) > this->size() (which is %zu)
basic_string::substr
wstring_convert::to_bytes
wstring_convert::from_bytes
%llu
0123456789ABCDEF
basic_string::_M_replace_dispatch
basic_string::_S_construct null not valid
FbcE
St12codecvt_utf8IwLm1114111ELSt12codecvt_mode0EE
St12codecvt_utf8IDiLm1114111ELSt12codecvt_mode0EE
PFbcE
XDG_CONFIG_HOME
.config
openvr
VR_PATHREG_OVERRIDE
openvrpaths.vrpath
vector::reserve
Unable to parse %s: %s\n
runtime
external_drivers
VR_OVERRIDE
VR_CONFIG_PATH
VR_LOG_PATH
version
vrpathreg
jsonid
VR Path Registry node %s is not an array\n
Unable to determine VR Path Registry filename\n
Unable to read VR Path Registry from %s\n
exception thrown in JSON library
Unable to create path registry directory %s\n
Unable to write VR path registry to %s\n
Line %d, Column %d
nfinity
allowComments
strictRoot
allowDroppedNullPlaceholders
allowNumericKeys
allowSingleQuotes
stackLimit
failIfExtra
rejectDupKeys
allowSpecialFloats
collectComments
See 
 for detail.\n
Bad escape sequence in string
Unable to parse token length
' is not a number.
keylength >= 2^30
Duplicate key: '
Error from reader: %s
Bad unicode escape sequence in string: four digits expected.
Bad unicode escape sequence in string: hexadecimal digit expected.
additional six characters expected to parse unicode surrogate pair.
expecting another \u token to begin the second half of a unicode surrogate pair
Empty escape sequence in string
deque::_M_new_elements_at_back
Missing '}' or object member name
Missing ':' after object member name
Missing ',' or '}' in object declaration
Exceeded stackLimit in readValue().
Syntax error: value, object or array expected.
Missing ',' or ']' in array declaration
Extra non-whitespace after JSON value.
A valid JSON document must be either an array or an object value.
N4Json10CharReader7FactoryE
N4Json10CharReaderE
N4Json17CharReaderBuilderE
N4Json13OurCharReaderE
assert json failed
true
false
ConstIterator to Iterator should never be allowed.
in Json::Value::duplicateAndPrefixStringValue(): length too big for prefixing
in Json::Value::duplicateAndPrefixStringValue(): Failed to allocate string value buffer
in Json::Value::setComment(): Comments must start with /
in Json::Value::duplicateStringValue(): Failed to allocate string value buffer
in Json::Value::asCString(): requires stringValue
in Json::Value::clear(): requires complex value
in Json::Value::operator[](ArrayIndex)const: requires arrayValue
in Json::Value::operator[](int index) const: index cannot be negative
in Json::Value::find(key, end, found): requires objectValue or nullValue
in Json::Value::removeMember(): requires objectValue
in Json::Value::operator[](ArrayIndex): requires arrayValue
in Json::Value::resize(): requires arrayValue
in Json::Value::operator[](int index): index cannot be negative
in Json::Value::resolveReference(): requires objectValue
in Json::Value::resolveReference(key, end): requires objectValue
N4Json9ExceptionE
N4Json12RuntimeErrorE
N4Json10LogicErrorE
?%%.%dg
commentStyle
indentation
enableYAMLCompatibility
dropNullPlaceholders
useSpecialFloats
precision
null
\f\n\r\t
commentStyle must be 'All' or 'None'
N4Json12StreamWriter7FactoryE
N4Json12StreamWriterE
N4Json19StreamWriterBuilderE
N4Json6WriterE
N4Json10FastWriterE
N4Json12StyledWriterE
N4Json23BuiltStyledStreamWriterE
basic_string::at: __n (which is %zu) >= this->size() (which is %zu)
GetEnvironmentVariableAsBool(%s): Unable to parse value '%s', using default %d\n
call_gmon_start
__JCR_LIST__
deregister_tm_clones
register_tm_clones
__do_global_dtors_aux
completed.7521
__do_global_dtors_aux_fini_array_entry
frame_dummy
__frame_dummy_init_array_entry
std::string::_Rep::_M_dispose(std::allocator<char> const&) (.part.0)
vr::g_nVRToken
vr::g_mutexSystem
vr::g_pHmdSystem
vr::g_pVRModule
VR_RuntimePath::rchBuffer
_GLOBAL__sub_I_openvr_api.cpp
GetIDForVRInitError(vr::EVRInitError)::buf
std::string::_Rep::_M_dispose(std::allocator<char> const&) (.part.2)
CharNeedsEscape_Component(char)
CharNeedsEscape_FullPath(char)
std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t>>::_Rep::_M_dispose(std::allocator<wchar_t> const&) (.part.10)
std::string::_Rep::_M_dispose(std::allocator<char> const&) (.part.9)
V_URLDecodeInternal(char*, int, char const*, int, bool) (.part.19)
_GLOBAL__sub_I_strtools_public.cpp
std::__ioinit
StringListToJson(std::vector<std::string, std::allocator<std::string>> const&, Json::Value&, char const*) (.constprop.35)
ParseStringListFromJson(std::vector<std::string, std::allocator<std::string>>*, Json::Value const&, char const*) (.constprop.36)
std::string::_Rep::_M_dispose(std::allocator<char> const&) (.part.8)
std::_Deque_base<Json::OurReader::ErrorInfo, std::allocator<Json::OurReader::ErrorInfo>>::_M_create_nodes(Json::OurReader::ErrorInfo**, Json::OurReader::ErrorInfo**) (.isra.103)
std::_Deque_base<Json::Reader::ErrorInfo, std::allocator<Json::Reader::ErrorInfo>>::_M_create_nodes(Json::Reader::ErrorInfo**, Json::Reader::ErrorInfo**) (.isra.86)
Json::normalizeEOL(char const*, char const*)
std::deque<Json::Reader::ErrorInfo, std::allocator<Json::Reader::ErrorInfo>>::_M_default_append(unsigned long) (.part.151)
std::deque<Json::OurReader::ErrorInfo, std::allocator<Json::OurReader::ErrorInfo>>::_M_default_append(unsigned long) (.part.153)
stackDepth_g
std::string::_Rep::_M_dispose(std::allocator<char> const&) (.part.5)
Json::Value::Value(Json::ValueType) (.part.55)
Json::duplicateAndPrefixStringValue(char const*, unsigned int)
std::piecewise_construct
_GLOBAL__sub_I_json_value.cpp
Json::kNull
std::string::_Rep::_M_dispose(std::allocator<char> const&) (.part.7)
Json::BuiltStyledStreamWriter::writeIndent() (.part.18) (.constprop.76)
Json::valueToQuotedStringN(char const*, unsigned int)
std::string::_Rep::_M_dispose(std::allocator<char> const&) (.part.1)
read_encoded_value_with_base
base_of_encoded_value
execute_cfa_program
init_dwarf_reg_size_table
dwarf_reg_size_table
uw_frame_state_for
execute_stack_op
uw_update_context_1
uw_init_context_1
once_regsizes.9654
uw_update_context
_Unwind_RaiseException_Phase2
_Unwind_ForcedUnwind_Phase2
uw_install_context_1
_Unwind_DebugHook
fde_unencoded_compare
frame_downheap
frame_heapsort
size_of_encoded_value
base_from_object
base_from_cb_data
fde_single_encoding_compare
get_cie_encoding
linear_search_fdes
_Unwind_IteratePhdrCallback
adds.9552
subs.9553
frame_hdr_cache
frame_hdr_cache_head
fde_mixed_encoding_compare
classify_object_over_fdes
add_fdes
search_object
terminator.9396
marker.9290
__register_frame_info.part.4
object_mutex
unseen_objects
seen_objects
set_fast_math
__FRAME_END__
__JCR_END__
vtable for Json::StreamWriter::Factory
Json::PathArgument::PathArgument(std::string const&)
Json::Value::CZString::~CZString()
Json::Value::Value(std::string const&)
Json::LogicError::~LogicError()
void std::deque<Json::Value*, std::allocator<Json::Value*>>::emplace_back<Json::Value*>(Json::Value*&&)
Json::Reader::getStructuredErrors() const
std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value>>, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value>>>::_M_erase(std::_Rb_tree_node<std::pair<Json::Value::CZString const, Json::Value>>*)
Json::Value::end() const
Json::Value::operator!() const
Json::ValueIterator::ValueIterator(std::_Rb_tree_iterator<std::pair<Json::Value::CZString const, Json::Value>> const&)
Json::ValueConstIterator::ValueConstIterator(Json::ValueIterator const&)
typeinfo name for std::codecvt_utf8<wchar_t, 1114111ul, (std::codecvt_mode)0>
DW.ref.__gxx_personality_v0
Json::OurReader::recoverFromError(Json::OurReader::TokenType)
Json::OurReader::readStringSingleQuote()
std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::in(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const
Json::Exception::~Exception()
Json::StyledWriter::hasCommentForValue(Json::Value const&)
std::_Deque_base<Json::Reader::ErrorInfo, std::allocator<Json::Reader::ErrorInfo>>::_M_initialize_map(unsigned long)
Json::StyledWriter::writeIndent()
Json::BuiltStyledStreamWriter::writeCommentAfterValueOnSameLine(Json::Value const&)
Json::Value::operator[](std::string const&) const
__register_frame_info
Path_MakeAbsolute(std::string const&, std::string const&)
Json::StyledStreamWriter::writeCommentAfterValueOnSameLine(Json::Value const&)
Json::ValueConstIterator::ValueConstIterator(Json::ValueIterator const&)
Json::OurReader::getLocationLineAndColumn(char const*, int&, int&) const
vtable for Json::BuiltStyledStreamWriter
CVRPathRegistry_Public::GetVRPathRegistryFilename()
Path_GetTemporaryDirectory()
vr::g_pVRVirtualDisplay
Json::ValueIteratorBase::name() const
std::deque<Json::OurReader::ErrorInfo, std::allocator<Json::OurReader::ErrorInfo>>::_M_new_elements_at_back(unsigned long)
Json::OurReader::decodeUnicodeEscapeSequence(Json::OurReader::Token&, char const*&, char const*, unsigned int&)
Json::Reader::readObject(Json::Reader::Token&)
Json::Value::CZString::data() const
CVRPathRegistry_Public::ToJsonString(std::string&)
__deregister_frame
Json::Value::Value(long long)
Json::ValueIteratorBase::copy(Json::ValueIteratorBase const&)
Json::BuiltStyledStreamWriter::~BuiltStyledStreamWriter()
Json::OurReader::decodeString(Json::OurReader::Token&, std::string&)
V_URLDecodeNoPlusForSpace(char*, int, char const*, int)
std::_Deque_base<Json::Value*, std::allocator<Json::Value*>>::~_Deque_base()
void std::vector<Json::PathArgument, std::allocator<Json::PathArgument>>::_M_emplace_back_aux<Json::PathArgument const&>(Json::PathArgument const&)
std::pair<Json::Value::CZString const, Json::Value>::~pair()
Json::StreamWriterBuilder::setDefaults(Json::Value*)
Json::ValueIterator::operator=(Json::ValueIterator const&)
vr::g_pVROverlayView
Json::valueToString(unsigned int)
__register_frame_table
V_URLEncodeInternal(char*, int, char const*, int, bool, std::function<bool (char)>)
Json::Value::Value(Json::Value&&)
std::pair<std::_Rb_tree_iterator<std::string>, bool> std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string>>::_M_insert_unique<std::string>(std::string&&)
typeinfo name for Json::StyledWriter
Json::Value::operator[](unsigned int) const
__register_frame_info_table_bases
Json::Value::Value(int)
Json::ValueIterator::ValueIterator(std::_Rb_tree_iterator<std::pair<Json::Value::CZString const, Json::Value>> const&)
Path_IsAppBundle(std::string const&)
Json::BuiltStyledStreamWriter::hasCommentForValue(Json::Value const&)
std::deque<Json::OurReader::ErrorInfo, std::allocator<Json::OurReader::ErrorInfo>>::_M_destroy_data_aux(std::_Deque_iterator<Json::OurReader::ErrorInfo, Json::OurReader::ErrorInfo&, Json::OurReader::ErrorInfo*>, std::_Deque_iterator<Json::OurReader::ErrorInfo, Json::OurReader::ErrorInfo&, Json::OurReader::ErrorInfo*>)
typeinfo for std::codecvt_utf8<wchar_t, 1114111ul, (std::codecvt_mode)0>
Path_RemoveTrailingSlash(std::string const&, char)
_Unwind_GetGR
Json::ValueIterator::ValueIterator(Json::ValueIterator const&)
Json::BuiltStyledStreamWriter::~BuiltStyledStreamWriter()
Path_StripDirectory(std::string const&, char)
Json::Value::maxUInt64
Json::LogicError::LogicError(std::string const&)
Json::Reader::decodeString(Json::Reader::Token&, std::string&)
Path_Exists(std::string const&)
Json::FastWriter::FastWriter()
vr::g_pVRDashboardManager
Json::Reader::decodeUnicodeCodePoint(Json::Reader::Token&, char const*&, char const*, unsigned int&)
Path_UrlToFilePath(std::string const&)
_Unwind_Resume_or_Rethrow
Json::Reader::readString()
Json::Value::isValidIndex(unsigned int) const
typeinfo name for Json::CharReaderBuilder
Json::ValueIterator::ValueIterator(Json::ValueConstIterator const&)
Json::LogicError::~LogicError()
Json::BuiltStyledStreamWriter::pushValue(std::string const&)
Json::ValueIteratorBase::index() const
std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>::~basic_stringbuf()
Json::ValueIterator::ValueIterator()
Json::StreamWriter::Factory::~Factory()
Json::Value::setOffsetLimit(unsigned long)
std::vector<std::string, std::allocator<std::string>>::operator=(std::vector<std::string, std::allocator<std::string>> const&)
Path_GetWorkingDirectory()
Json::CharReaderBuilder::operator[](std::string)
Json::FastWriter::~FastWriter()
typeinfo for Json::RuntimeError
typeinfo for Json::Exception
Json::Value::swapPayload(Json::Value&)
GetUserDocumentsPath()
typeinfo for Json::StreamWriter::Factory
Json::Value::maxLargestInt
std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value>>, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value>>>::_M_get_insert_unique_pos(Json::Value::CZString const&)
Json::Value::operator=(Json::Value)
Json::OurReader::addErrorAndRecover(std::string const&, Json::OurReader::Token&, Json::OurReader::TokenType)
Json::OurReader::decodeDouble(Json::OurReader::Token&)
vtable for Json::OurCharReader
Json::RuntimeError::~RuntimeError()
vr::g_pLiquidVR
typeinfo for Json::CharReader
Json::Value::Value(char const*, char const*)
std::codecvt_utf8<wchar_t, 1114111ul, (std::codecvt_mode)0>::~codecvt_utf8()
std::pair<Json::Value::CZString const, Json::Value>::~pair()
Json::Value::minLargestInt
Json::CharReaderBuilder::~CharReaderBuilder()
CVRPathRegistry_Public::GetPaths(std::string*, std::string*, std::string*, char const*, char const*, std::vector<std::string, std::allocator<std::string>>*)
void std::vector<Json::PathArgument, std::allocator<Json::PathArgument>>::emplace_back<Json::PathArgument>(Json::PathArgument&&)
Json::CharReaderBuilder::CharReaderBuilder()
Json::Features::Features()
vr::g_pVRControlPanel
Json::StreamWriter::StreamWriter()
typeinfo for Json::Writer
vr::g_pVRTrackedCameraInternal
std::codecvt_utf8<char32_t, 1114111ul, (std::codecvt_mode)0>::~codecvt_utf8()
Json::OurReader::readString()
Json::Value::minInt64
void std::deque<Json::OurReader::ErrorInfo, std::allocator<Json::OurReader::ErrorInfo>>::_M_push_back_aux<Json::OurReader::ErrorInfo const&>(Json::OurReader::ErrorInfo const&)
typeinfo name for Json::CharReader::Factory
typeinfo name for Json::StreamWriterBuilder
std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value>>, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value>>>::equal_range(Json::Value::CZString const&)
typeinfo name for Json::StreamWriter
std::codecvt_utf8<wchar_t, 1114111ul, (std::codecvt_mode)0>::~codecvt_utf8()
Json::Value::isNumeric() const
Json::Exception::~Exception()
Json::Value::isMember(char const*, char const*) const
Json::Reader::recoverFromError(Json::Reader::TokenType)
Json::BuiltStyledStreamWriter::writeIndent()
Json::OurReader::addComment(char const*, char const*, Json::CommentPlacement)
Json::Reader::readCppStyleComment()
Json::Value::asLargestInt() const
Path_StripFilename(std::string const&, char)
Json::Reader::currentValue()
Json::ValueIteratorBase::deref() const
Json::Value::Value(int)
void std::deque<Json::Reader::ErrorInfo, std::allocator<Json::Reader::ErrorInfo>>::_M_push_back_aux<Json::Reader::ErrorInfo const&>(Json::Reader::ErrorInfo const&)
Json::Value::Value(unsigned long long)
Json::Value::isIntegral() const
std::_Rb_tree_iterator<std::pair<Json::Value::CZString const, Json::Value>> std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value>>, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value>>>::_M_insert_unique_<std::pair<Json::Value::CZString const, Json::Value>&, std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value>>, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value>>>::_Alloc_node>(std::_Rb_tree_const_iterator<std::pair<Json::Value::CZString const, Json::Value>>, std::pair<Json::Value::CZString const, Json::Value>&, std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value>>, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value>>>::_Alloc_node&)
_Unwind_RaiseException
Json::OurReader::getLocationLineAndColumn(char const*) const
void std::vector<Json::OurReader::StructuredError, std::allocator<Json::OurReader::StructuredError>>::_M_emplace_back_aux<Json::OurReader::StructuredError const&>(Json::OurReader::StructuredError const&)
__deregister_frame_info_bases
Json::Value::CZString::swap(Json::Value::CZString&)
Json::Value::CZString::CZString(unsigned int)
Json::StyledWriter::StyledWriter()
char* std::string::_S_construct<char*>(char*, char*, std::allocator<char> const&, std::forward_iterator_tag)
Json::Reader::getLocationLineAndColumn(char const*, int&, int&) const
vtable for std::codecvt_utf8<char32_t, 1114111ul, (std::codecvt_mode)0>
Json::Value::isUInt64() const
Json::Value::setComment(std::string const&, Json::CommentPlacement)
_GLOBAL_OFFSET_TABLE_
Json::StyledWriter::~StyledWriter()
Json::Value::hasComment(Json::CommentPlacement) const
Json::StreamWriter::~StreamWriter()
Json::Value::type() const
Path_ReadBinaryFile(std::string const&, unsigned char*, unsigned int)
Json::Reader::getLocationLineAndColumn(char const*) const
StringHasPrefixCaseSensitive(std::string const&, std::string const&)
Json::valueToQuotedString(char const*)
Json::OurReader::readObject(Json::OurReader::Token&)
Json::Value::removeMember(std::string const&, Json::Value*)
Path_WriteStringToTextFileAtomic(std::string const&, char const*)
Json::Value::isDouble() const
Json::PathArgument::PathArgument(char const*)
Json::StyledWriter::unindent()
Json::StreamWriterBuilder::~StreamWriterBuilder()
typeinfo for Json::BuiltStyledStreamWriter
BCreateDirectory(char const*)
Json::StreamWriterBuilder::StreamWriterBuilder()
Json::OurReader::OurReader(Json::OurFeatures const&)
Json::StyledWriter::~StyledWriter()
Json::Value::isConvertibleTo(Json::ValueType) const
vr::g_pVROculusDirect
Json::BuiltStyledStreamWriter::indent()
std::_Function_base::_Base_manager<bool (*)(char)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
Json::ValueIteratorBase::key() const
Json::ValueConstIterator::ValueConstIterator()
Json::Value::isInt64() const
Json::StyledStreamWriter::writeArrayValue(Json::Value const&)
Json::FastWriter::write(Json::Value const&)
typeinfo name for Json::OurCharReader
Json::StyledStreamWriter::pushValue(std::string const&)
std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>::~basic_stringbuf()
Json::Value::isArray() const
Json::StyledWriter::StyledWriter()
Json::Value::isMember(char const*) const
CVRPathRegistry_Public::CVRPathRegistry_Public()
vtable for Json::Exception
Json::ValueIteratorBase::ValueIteratorBase(std::_Rb_tree_iterator<std::pair<Json::Value::CZString const, Json::Value>> const&)
Json::Value::removeMember(char const*)
Json::Value::CZString::CZString(Json::Value::CZString&&)
typeinfo name for Json::BuiltStyledStreamWriter
Json::writeString(Json::StreamWriter::Factory const&, Json::Value const&)
Json::Value::Value(unsigned long long)
Json::Path::resolve(Json::Value const&, Json::Value const&) const
_Unwind_GetCFA
Json::valueToString(int)
Json::StreamWriterBuilder::StreamWriterBuilder()
Json::Value::Value(double)
Json::Value::initBasic(Json::ValueType, bool)
void std::vector<Json::PathArgument, std::allocator<Json::PathArgument>>::_M_emplace_back_aux<Json::PathArgument>(Json::PathArgument&&)
Json::StreamWriterBuilder::~StreamWriterBuilder()
Json::Value::Value(Json::Value&&)
Json::Value::operator[](int) const
Json::StyledWriter::writeCommentBeforeValue(Json::Value const&)
Json::CharReaderBuilder::validate(Json::Value*) const
Json::PathArgument::PathArgument(unsigned int)
Json::valueToString(unsigned long long)
Json::Value::begin()
Json::Value::clear()
Json::PathArgument::PathArgument()
Path_StripExtension(std::string const&)
Json::ValueIteratorBase::ValueIteratorBase()
Json::Value::asFloat() const
Json::FastWriter::writeValue(Json::Value const&)
typeinfo for Json::StreamWriter
Json::StyledWriter::isMultineArray(Json::Value const&)
_Unwind_Backtrace
void std::vector<Json::PathArgument const*, std::allocator<Json::PathArgument const*>>::_M_emplace_back_aux<Json::PathArgument const*>(Json::PathArgument const*&&)
Json::Reader::decodeDouble(Json::Reader::Token&)
Json::valueToString(double, bool, unsigned int)
Json::Path::make(Json::Value&) const
Json::OurReader::readArray(Json::OurReader::Token&)
Json::Reader::addError(std::string const&, Json::Reader::Token&, char const*)
Json::OurReader::getNextChar()
std::_Function_handler<bool (char), bool (*)(char)>::_M_invoke(std::_Any_data const&, char&&)
Json::Reader::Reader()
Json::StyledStreamWriter::isMultineArray(Json::Value const&)
GetEnvironmentVariableAsBool(char const*, bool)
vr::VR_LoadHmdSystemInternal()
Json::RuntimeError::~RuntimeError()
cIntToHexDigit(int)
Json::BuiltStyledStreamWriter::writeArrayValue(Json::Value const&)
void std::vector<Json::PathArgument, std::allocator<Json::PathArgument>>::_M_emplace_back_aux<Json::PathArgument const&>(Json::PathArgument const&)
Json::OurCharReader::~OurCharReader()
Json::Value::operator[](std::string const&)
void std::deque<Json::Value*, std::allocator<Json::Value*>>::emplace_back<Json::Value*>(Json::Value*&&)
Path_UnlinkFile(std::string const&)
Json::Exception::Exception(std::string const&)
CVRPathRegistry_Public::CVRPathRegistry_Public()
Json::Value::empty() const
Json::Features::strictMode()
_Unwind_GetLanguageSpecificData
Json::OurReader::parse(char const*, char const*, Json::Value&, bool)
CVRPathRegistry_Public::~CVRPathRegistry_Public()
Json::PathArgument::PathArgument(char const*)
Json::Value::operator[](char const*)
Path_Join(std::string const&, std::string const&, std::string const&, char)
Json::CharReaderBuilder::~CharReaderBuilder()
typeinfo for std::codecvt_utf8<char32_t, 1114111ul, (std::codecvt_mode)0>
std::__codecvt_abstract_base<wchar_t, char, __mbstate_t>::out(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const
Json::CharReaderBuilder::CharReaderBuilder()
Json::Reader::decodeDouble(Json::Reader::Token&, Json::Value&)
Json::RuntimeError::RuntimeError(std::string const&)
typeinfo name for Json::Exception
Json::OurReader::decodeNumber(Json::OurReader::Token&, Json::Value&)
vtable for Json::StreamWriterBuilder
Json::Value::isString() const
Json::Value::asCString() const
Json::StyledWriter::writeValue(Json::Value const&)
Path_FindParentSubDirectoryRecursively(std::string const&, std::string const&)
Json::OurReader::skipSpaces()
Json::Reader::readValue()
SetEnvironmentVariable(char const*, char const*)
void std::vector<Json::PathArgument const*, std::allocator<Json::PathArgument const*>>::emplace_back<Json::PathArgument const*>(Json::PathArgument const*&&)
_Unwind_Resume
Json::Value::resize(unsigned int)
Json::Value::operator[](Json::StaticString const&)
__register_frame_info_table
Json::ValueConstIterator::ValueConstIterator()
Uint64ToString(unsigned long)
Json::StyledWriter::indent()
typeinfo for Json::LogicError
std::deque<Json::OurReader::ErrorInfo, std::allocator<Json::OurReader::ErrorInfo>>::_M_reallocate_map(unsigned long, bool)
Json::Value::resolveReference(char const*, char const*)
Json::OurReader::readValue()
Json::Value::operator>=(Json::Value const&) const
Json::Value::find(char const*, char const*) const
Json::Value::getMemberNames() const
Json::Path::invalidPath(std::string const&, int)
Json::OurReader::readNumber(bool)
Json::Value::Value(bool)
Json::Reader::parse(char const*, char const*, Json::Value&, bool)
Json::Reader::pushError(Json::Value const&, std::string const&, Json::Value const&)
Path_Join(std::string const&, std::string const&, std::string const&, std::string const&, std::string const&, char)
typeinfo name for Json::FastWriter
Path_Compact(std::string const&, char)
void std::deque<Json::Value*, std::allocator<Json::Value*>>::_M_push_back_aux<Json::Value*>(Json::Value*&&)
Json::Value::Value(Json::Value const&)
Json::Value::Value(float)
ReturnStdString(std::string const&, char*, unsigned int)
Json::valueToString(double)
Json::Value::maxLargestUInt
Json::Value::maxUInt
Json::Reader::decodeNumber(Json::Reader::Token&)
std::wstring_convert<std::codecvt_utf8<wchar_t, 1114111ul, (std::codecvt_mode)0>, wchar_t, std::allocator<wchar_t>, std::allocator<char>>::~wstring_convert()
Json::Value::Value(unsigned int)
Json::Reader::Reader(Json::Features const&)
Path_GetThisModulePath()
Path_Join(std::string const&, std::string const&, std::string const&, std::string const&, char)
Json::OurReader::getStructuredErrors() const
Json::Reader::readNumber()
Json::Value::CommentInfo::~CommentInfo()
StringHasSuffix(std::string const&, std::string const&)
Json::ValueIterator::ValueIterator(Json::ValueConstIterator const&)
Json::Value::CZString::operator==(Json::Value::CZString const&) const
Json::Value::Value(long long)
typeinfo for Json::CharReader::Factory
Json::Value::getOffsetStart() const
Json::Value::asUInt64() const
_Unwind_FindEnclosingFunction
std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value>>, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value>>>::find(Json::Value::CZString const&)
Json::Value::asLargestUInt() const
Json::Value::~Value()
Json::Value::operator<=(Json::Value const&) const
Json::Value::Value(Json::StaticString const&)
GetEnglishStringForHmdError(vr::EVRInitError)
std::_Deque_base<Json::Value*, std::allocator<Json::Value*>>::~_Deque_base()
UTF8to16(char const*)
void std::vector<Json::Reader::StructuredError, std::allocator<Json::Reader::StructuredError>>::_M_emplace_back_aux<Json::Reader::StructuredError const&>(Json::Reader::StructuredError const&)
CVRPathRegistry_Public::BSaveToFile() const
Json::BuiltStyledStreamWriter::writeWithIndent(std::string const&)
Json::Writer::~Writer()
Json::Value::CZString::CZString(Json::Value::CZString const&)
Json::Reader::skipSpaces()
Json::Value::removeMember(char const*, char const*, Json::Value*)
Json::BuiltStyledStreamWriter::writeValue(Json::Value const&)
Json::Value::size() const
Json::CharReaderBuilder::newCharReader() const
StringToUpper(std::string const&)
typeinfo name for std::codecvt_utf8<char32_t, 1114111ul, (std::codecvt_mode)0>
__TMC_END__
Json::CharReaderBuilder::~CharReaderBuilder()
Path_IsSamePath(std::string const&, std::string const&)
Json::Value::toStyledString() const
Json::Exception::Exception(std::string const&)
Json::Value::CommentInfo::CommentInfo()
__register_frame_info_bases
Json::Features::Features()
Json::Value::end()
Json::Value::get(unsigned int, Json::Value const&) const
Path_SetWorkingDirectory(std::string const&)
GetIDForVRInitError(vr::EVRInitError)
Json::Value::Value(Json::Value const&)
Json::Value::CZString::CZString(char const*, unsigned int, Json::Value::CZString::DuplicationPolicy)
Json::StyledStreamWriter::writeCommentBeforeValue(Json::Value const&)
Json::OurReader::pushError(Json::Value const&, std::string const&)
V_URLEncodeFullPath(char*, int, char const*, int)
__dso_handle
Json::ValueIteratorBase::isEqual(Json::ValueIteratorBase const&) const
TokenizeString(std::string const&, char)
V_StripExtension(std::string&)
Json::StreamWriter::Factory::~Factory()
void std::vector<Json::PathArgument const*, std::allocator<Json::PathArgument const*>>::_M_emplace_back_aux<Json::PathArgument const*>(Json::PathArgument const*&&)
CVRPathRegistry_Public::GetConfigPath() const
Json::Value::CZString::operator<(Json::Value::CZString const&) const
Json::StyledWriter::writeArrayValue(Json::Value const&)
std::_Rb_tree_iterator<std::pair<Json::Value::CZString const, Json::Value>> std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value>>, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value>>>::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<Json::Value::CZString const&>, std::tuple<>>(std::_Rb_tree_const_iterator<std::pair<Json::Value::CZString const, Json::Value>>, std::piecewise_construct_t const&, std::tuple<Json::Value::CZString const&>&&, std::tuple<>&&)
Json::Reader::decodeNumber(Json::Reader::Token&, Json::Value&)
Json::StreamWriterBuilder::newStreamWriter() const
Path_ReadTextFile(std::string const&)
Json::Reader::getFormatedErrorMessages() const
Json::throwRuntimeError(std::string const&)
Json::OurReader::decodeNumber(Json::OurReader::Token&)
_Unwind_DeleteException
std::vector<std::string, std::allocator<std::string>>::~vector()
vr::g_pVRRenderModelsInternal
Json::OurReader::addError(std::string const&, Json::OurReader::Token&, char const*)
Json::throwLogicError(std::string const&)
std::deque<Json::Reader::ErrorInfo, std::allocator<Json::Reader::ErrorInfo>>::_M_reallocate_map(unsigned long, bool)
Json::Value::removeMember(std::string const&)
Json::valueToString(long long)
Json::BuiltStyledStreamWriter::BuiltStyledStreamWriter(std::string const&, Json::CommentStyle::Enum, std::string const&, std::string const&, std::string const&, bool, unsigned int)
std::wstring_convert<std::codecvt_utf8<wchar_t, 1114111ul, (std::codecvt_mode)0>, wchar_t, std::allocator<wchar_t>, std::allocator<char>>::~wstring_convert()
StringHasPrefix(std::string const&, std::string const&)
Json::Value::operator[](char const*) const
Json::PathArgument::PathArgument()
Json::LogicError::~LogicError()
Json::StyledStreamWriter::write(std::ostream&, Json::Value const&)
void std::vector<Json::Reader::StructuredError, std::allocator<Json::Reader::StructuredError>>::_M_emplace_back_aux<Json::Reader::StructuredError const&>(Json::Reader::StructuredError const&)
_Unwind_GetTextRelBase
Json::Value::removeIndex(unsigned int, Json::Value*)
Json::kNullRef
Json::Value::asInt() const
std::codecvt_utf8<char32_t, 1114111ul, (std::codecvt_mode)0>::~codecvt_utf8()
Json::Value::getOffsetLimit() const
Path_GetExtension(std::string const&)
CVRPathRegistry_Public::BLoadFromFile()
Json::Value::maxInt64
Json::FastWriter::~FastWriter()
Json::BuiltStyledStreamWriter::write(Json::Value const&, std::ostream*)
Json::Value::Value(std::string const&)
Path_WriteStringToTextFile(std::string const&, char const*)
Json::PathArgument::PathArgument(unsigned int)
vtable for Json::CharReaderBuilder
_Unwind_SetIP
Json::Value::CZString::operator=(Json::Value::CZString)
Path_GetExecutablePath()
Json::Value::setComment(char const*, unsigned long, Json::CommentPlacement)
StringHasSuffixCaseSensitive(std::string const&, std::string const&)
Json::Value::Value(char const*, char const*)
Json::Value::getComment(Json::CommentPlacement) const
Json::Value::compare(Json::Value const&) const
Json::Value::CZString::CZString(Json::Value::CZString const&)
Json::Value::isInt() const
Json::ValueIteratorBase::ValueIteratorBase()
Json::Value::setComment(char const*, Json::CommentPlacement)
Json::OurCharReader::~OurCharReader()
Json::Value::getString(char const**, char const**) const
Json::StyledWriter::writeWithIndent(std::string const&)
void std::vector<std::string, std::allocator<std::string>>::_M_emplace_back_aux<std::string>(std::string&&)
Json::parseFromStream(Json::CharReader::Factory const&, std::istream&, Json::Value*, std::string*)
Json::BuiltStyledStreamWriter::writeCommentBeforeValue(Json::Value const&)
vtable for std::codecvt_utf8<wchar_t, 1114111ul, (std::codecvt_mode)0>
void std::deque<Json::Value*, std::allocator<Json::Value*>>::_M_push_back_aux<Json::Value*>(Json::Value*&&)
Json::Value::asUInt() const
Json::Value::CZString::~CZString()
void std::vector<Json::PathArgument const*, std::allocator<Json::PathArgument const*>>::emplace_back<Json::PathArgument const*>(Json::PathArgument const*&&)
void std::deque<Json::OurReader::ErrorInfo, std::allocator<Json::OurReader::ErrorInfo>>::_M_push_back_aux<Json::OurReader::ErrorInfo const&>(Json::OurReader::ErrorInfo const&)
Json::Exception::what() const
Json::ValueIteratorBase::memberName(char const**) const
Json::StyledStreamWriter::StyledStreamWriter(std::string)
Path_FindParentDirectoryRecursively(std::string const&, std::string const&)
Json::StyledStreamWriter::StyledStreamWriter(std::string)
Json::OurReader::decodeDouble(Json::OurReader::Token&, Json::Value&)
Json::StreamWriterBuilder::~StreamWriterBuilder()
void std::vector<std::string, std::allocator<std::string>>::_M_emplace_back_aux<std::string const&>(std::string const&)
Json::Value::begin() const
UTF16to8(wchar_t const*)
Json::Exception::~Exception()
Json::OurReader::good() const
Json::RuntimeError::RuntimeError(std::string const&)
vr::g_pVRSceneGraph
RepairUTF8(char const*, char const*, std::string&)
Json::Value::minInt
Json::Value::asInt64() const
typeinfo name for Json::RuntimeError
Path_FixSlashes(std::string const&, char)
std::vector<std::string, std::allocator<std::string>>::reserve(unsigned long)
Json::Reader::readArray(Json::Reader::Token&)
Json::StyledStreamWriter::indent()
Json::Reader::getFormattedErrorMessages() const
Json::PathArgument::PathArgument(std::string const&)
Json::StreamWriterBuilder::validate(Json::Value*) const
__register_frame
std::basic_string<char, std::char_traits<char>, std::allocator<char>> std::operator+<char, std::char_traits<char>, std::allocator<char>>(char const*, std::basic_string<char, std::char_traits<char>, std::allocator<char>> const&)
typeinfo name for Json::Writer
Json::OurCharReader::parse(char const*, char const*, Json::Value*, std::string*)
vr::g_pVRPaths
typeinfo for Json::StyledWriter
Json::ValueIteratorBase::decrement()
Json::Value::Value(char const*)
Json::OurFeatures::all()
Json::Features::all()
Json::OurReader::skipCommentTokens(Json::OurReader::Token&)
Json::operator<<(std::ostream&, Json::Value const&)
Json::BuiltStyledStreamWriter::unindent()
Path_IsAbsolute(std::string const&)
std::_Rb_tree<std::string, std::string, std::_Identity<std::string>, std::less<std::string>, std::allocator<std::string>>::_M_erase(std::_Rb_tree_node<std::string>*)
V_URLDecode(char*, int, char const*, int)
Path_IsDirectory(std::string const&)
Json::ValueIterator::ValueIterator()
Json::ValueConstIterator::operator=(Json::ValueIteratorBase const&)
vtable for Json::LogicError
Json::ValueIteratorBase::memberName() const
Path_WriteBinaryFile(std::string const&, unsigned char*, unsigned int)
Json::OurReader::currentValue()
Json::StyledWriter::writeCommentAfterValueOnSameLine(Json::Value const&)
Json::StreamWriter::~StreamWriter()
Json::Value::operator[](unsigned int)
Json::StyledStreamWriter::hasCommentForValue(Json::Value const&)
Json::Reader::readToken(Json::Reader::Token&)
Json::Value::isBool() const
Json::StreamWriter::Factory::~Factory()
SharedLib_GetFunction(void*, char const*)
Json::Writer::~Writer()
vr::g_pVRCompositorSystemInternal
void std::vector<Json::OurReader::StructuredError, std::allocator<Json::OurReader::StructuredError>>::_M_emplace_back_aux<Json::OurReader::StructuredError const&>(Json::OurReader::StructuredError const&)
Json::OurReader::readCStyleComment()
Json::Value::null
Json::Reader::good() const
Json::Reader::readComment()
Json::Value::operator>(Json::Value const&) const
std::_Deque_base<Json::Value*, std::allocator<Json::Value*>>::_M_initialize_map(unsigned long)
std::_Rb_tree_iterator<std::pair<Json::Value::CZString const, Json::Value>> std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value>>, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value>>>::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<Json::Value::CZString const&>, std::tuple<>>(std::_Rb_tree_const_iterator<std::pair<Json::Value::CZString const, Json::Value>>, std::piecewise_construct_t const&, std::tuple<Json::Value::CZString const&>&&, std::tuple<>&&)
__frame_state_for
Json::ValueIterator::ValueIterator(Json::ValueIterator const&)
Json::FastWriter::FastWriter()
_Unwind_ForcedUnwind
CVRPathRegistry_Public::~CVRPathRegistry_Public()
StringToLower(std::string const&)
Json::BuiltStyledStreamWriter::~BuiltStyledStreamWriter()
Json::Path::addPathInArg(std::string const&, std::vector<Json::PathArgument const*, std::allocator<Json::PathArgument const*>> const&, __gnu_cxx::__normal_iterator<Json::PathArgument const* const*, std::vector<Json::PathArgument const*, std::allocator<Json::PathArgument const*>>>&, Json::PathArgument::Kind)
Json::OurReader::readToken(Json::OurReader::Token&)
Json::Value::maxInt
vtable for Json::FastWriter
Json::Value::CommentInfo::CommentInfo()
Json::Value::asDouble() const
Json::StyledWriter::write(Json::Value const&)
char* std::string::_S_construct<__gnu_cxx::__normal_iterator<char const*, std::string>>(__gnu_cxx::__normal_iterator<char const*, std::string>, __gnu_cxx::__normal_iterator<char const*, std::string>, std::allocator<char> const&, std::forward_iterator_tag)
Json::Value::asString() const
Json::OurCharReader::~OurCharReader()
Json::Value::CommentInfo::~CommentInfo()
Json::FastWriter::enableYAMLCompatibility()
Json::StreamWriter::StreamWriter()
Json::Reader::readCStyleComment()
std::deque<Json::Reader::ErrorInfo, std::allocator<Json::Reader::ErrorInfo>>::_M_destroy_data_aux(std::_Deque_iterator<Json::Reader::ErrorInfo, Json::Reader::ErrorInfo&, Json::Reader::ErrorInfo*>, std::_Deque_iterator<Json::Reader::ErrorInfo, Json::Reader::ErrorInfo&, Json::Reader::ErrorInfo*>)
Json::Reader::getNextChar()
Json::LogicError::LogicError(std::string const&)
CVRPathRegistry_Public::GetOpenVRConfigPath()
Json::Path::Path(std::string const&, Json::PathArgument const&, Json::PathArgument const&, Json::PathArgument const&, Json::PathArgument const&, Json::PathArgument const&)
Json::StyledWriter::~StyledWriter()
iHexCharToInt(char)
Json::FastWriter::~FastWriter()
Json::FastWriter::dropNullPlaceholders()
typeinfo for Json::OurCharReader
Json::Reader::getLocationSnippet(char const*) const
Json::OurReader::readComment()
typeinfo name for Json::LogicError
Json::Value::Value(float)
Json::OurReader::readCppStyleComment()
Json::Value::get(char const*, Json::Value const&) const
Json::Value::Value(bool)
Json::ValueConstIterator::ValueConstIterator(std::_Rb_tree_iterator<std::pair<Json::Value::CZString const, Json::Value>> const&)
_Unwind_GetDataRelBase
Json::Value::isMember(std::string const&) const
Json::CharReaderBuilder::strictMode(Json::Value*)
Json::Reader::Reader(Json::Features const&)
Json::StyledStreamWriter::writeValue(Json::Value const&)
Json::Value::Value(unsigned int)
_Unwind_GetRegionStart
Json::Value::operator<(Json::Value const&) const
Json::ValueIteratorBase::ValueIteratorBase(std::_Rb_tree_iterator<std::pair<Json::Value::CZString const, Json::Value>> const&)
Json::Reader::match(char const*, int)
Json::Value::isObject() const
Path_MakeWritable(std::string const&)
Json::BuiltStyledStreamWriter::BuiltStyledStreamWriter(std::string const&, Json::CommentStyle::Enum, std::string const&, std::string const&, std::string const&, bool, unsigned int)
void std::deque<Json::Reader::ErrorInfo, std::allocator<Json::Reader::ErrorInfo>>::_M_push_back_aux<Json::Reader::ErrorInfo const&>(Json::Reader::ErrorInfo const&)
Json::Value::removeMember(char const*, Json::Value*)
Json::Value::CZString::CZString(Json::Value::CZString&&)
BCreateDirectoryRecursive(char const*)
strcpy_safe(char*, unsigned long, char const*)
GetEnvironmentVariable(char const*)
Json::StreamWriter::~StreamWriter()
Json::Value::~Value()
std::deque<Json::Reader::ErrorInfo, std::allocator<Json::Reader::ErrorInfo>>::_M_new_elements_at_back(unsigned long)
Json::Value::swap(Json::Value&)
Json::StyledStreamWriter::unindent()
Json::StyledStreamWriter::writeWithIndent(std::string const&)
Json::Value::get(char const*, char const*, Json::Value const&) const
_Unwind_SetGR
vtable for Json::RuntimeError
Json::Value::Value(Json::StaticString const&)
Json::Reader::decodeUnicodeEscapeSequence(Json::Reader::Token&, char const*&, char const*, unsigned int&)
typeinfo for Json::FastWriter
SharedLib_Unload(void*)
Json::OurReader::decodeString(Json::OurReader::Token&)
Json::BuiltStyledStreamWriter::isMultineArray(Json::Value const&)
std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char>>::~basic_stringbuf()
Json::Writer::~Writer()
Json::Value::operator!=(Json::Value const&) const
Path_ReadBinaryFile(std::string const&, int*)
Json::StyledStreamWriter::writeIndent()
Json::Reader::parse(std::string const&, Json::Value&, bool)
vr::CleanupInternalInterfaces()
Json::Value::CommentInfo::setComment(char const*, unsigned long)
Json::Value::CZString::index() const
_Unwind_Find_FDE
Json::OurReader::pushError(Json::Value const&, std::string const&, Json::Value const&)
Json::Reader::skipCommentTokens(Json::Reader::Token&)
std::vector<std::string, std::allocator<std::string>>::~vector()
Json::Value::resolveReference(char const*)
Json::Value::Value(Json::ValueType)
Json::Path::resolve(Json::Value const&) const
Json::Value::CZString::CZString(unsigned int)
typeinfo name for Json::CharReader
Json::OurReader::getFormattedErrorMessages() const
Json::ValueIteratorBase::computeDistance(Json::ValueIteratorBase const&) const
Json::StreamWriterBuilder::operator[](std::string)
Json::operator>>(std::istream&, Json::Value&)
Json::Value::CZString::isStaticString() const
std::codecvt_utf8<wchar_t, 1114111ul, (std::codecvt_mode)0>::~codecvt_utf8()
Json::Value::nullRef
Json::StyledWriter::pushValue(std::string const&)
Path_Join(std::string const&, std::string const&, char)
Json::Reader::addErrorAndRecover(std::string const&, Json::Reader::Token&, Json::Reader::TokenType)
Json::Value::Value(double)
_Unwind_GetIPInfo
V_URLEncode(char*, int, char const*, int)
Json::Reader::pushError(Json::Value const&, std::string const&)
std::_Rb_tree_node<std::pair<Json::Value::CZString const, Json::Value>>* std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value>>, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value>>>::_M_copy<std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value>>, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value>>>::_Alloc_node>(std::_Rb_tree_node<std::pair<Json::Value::CZString const, Json::Value>> const*, std::_Rb_tree_node<std::pair<Json::Value::CZString const, Json::Value>>*, std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value>>, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value>>>::_Alloc_node&)
StringToUint64(std::string const&)
Json::Path::makePath(std::string const&, std::vector<Json::PathArgument const*, std::allocator<Json::PathArgument const*>> const&)
Path_GetSlash()
std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value>>, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value>>>::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<Json::Value::CZString const, Json::Value>>, Json::Value::CZString const&)
Path_FilePathToUrl(std::string const&, std::string const&)
Json::Reader::decodeString(Json::Reader::Token&)
_Unwind_GetIP
std::_Rb_tree<Json::Value::CZString, std::pair<Json::Value::CZString const, Json::Value>, std::_Select1st<std::pair<Json::Value::CZString const, Json::Value>>, std::less<Json::Value::CZString>, std::allocator<std::pair<Json::Value::CZString const, Json::Value>>>::_M_erase_aux(std::_Rb_tree_const_iterator<std::pair<Json::Value::CZString const, Json::Value>>)
Json::Value::get(std::string const&, Json::Value const&) const
typeinfo name for Json::StreamWriter::Factory
Json::OurReader::decodeUnicodeCodePoint(Json::OurReader::Token&, char const*&, char const*, unsigned int&)
vtable for Json::StreamWriter
vtable for Json::Writer
Json::Value::asBool() const
Json::Value::setOffsetStart(unsigned long)
Json::OurReader::OurReader(Json::OurFeatures const&)
Json::Reader::parse(std::istream&, Json::Value&, bool)
Json::valueToString(bool)
Json::FastWriter::omitEndingLineFeed()
Json::Value::append(Json::Value const&)
std::codecvt_utf8<char32_t, 1114111ul, (std::codecvt_mode)0>::~codecvt_utf8()
typeinfo for Json::StreamWriterBuilder
Json::ValueConstIterator::ValueConstIterator(std::_Rb_tree_iterator<std::pair<Json::Value::CZString const, Json::Value>> const&)
V_URLEncodeNoPlusForSpace(char*, int, char const*, int)
Json::OurReader::match(char const*, int)
Json::RuntimeError::~RuntimeError()
Json::Value::CZString::CZString(char const*, unsigned int, Json::Value::CZString::DuplicationPolicy)
CVRPathRegistry_Public::GetLogPath() const
void std::vector<Json::PathArgument, std::allocator<Json::PathArgument>>::_M_emplace_back_aux<Json::PathArgument>(Json::PathArgument&&)
void std::vector<Json::PathArgument, std::allocator<Json::PathArgument>>::emplace_back<Json::PathArgument>(Json::PathArgument&&)
SharedLib_Load(char const*)
Json::Value::isUInt() const
Json::Reader::addComment(char const*, char const*, Json::CommentPlacement)
Json::Reader::Reader()
Json::Value::Value(char const*)
vtable for Json::StyledWriter
std::ctype<char>::do_widen(char) const
Json::Path::Path(std::string const&, Json::PathArgument const&, Json::PathArgument const&, Json::PathArgument const&, Json::PathArgument const&, Json::PathArgument const&)
Json::Value::operator[](int)
V_URLDecodeInternal(char*, int, char const*, int, bool)
_DYNAMIC
Json::Value::Value(Json::ValueType)
Json::Value::operator==(Json::Value const&) const
Json::CharReaderBuilder::setDefaults(Json::Value*)
CVRPathRegistry_Public::GetRuntimePath() const
std::string __gnu_cxx::__to_xstring<std::string, char>(int (*)(char*, unsigned long, char const*, __va_list_tag*), unsigned long, char const*, ...)
typeinfo for Json::CharReaderBuilder
Json::Value::CZString::length() const
__deregister_frame_info
Json::ValueIteratorBase::increment()
Json::Value::isNull() const
RepairUTF8(std::string const&, std::string&)
VROculusDirect
chmod@@GLIBC_2.2.5
_ZNSs6appendEPKcm@@GLIBCXX_3.4
_ZNKSt19__codecvt_utf8_baseIwE9do_lengthER11__mbstate_tPKcS4_m@@GLIBCXX_3.4.21
_ZSt20__throw_length_errorPKc@@GLIBCXX_3.4
VR_GetRuntimePath
_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RSbIS4_S5_T1_ES4_@@GLIBCXX_3.4
VR_InitInternal
chdir@@GLIBC_2.2.5
_ZNSolsEi@@GLIBCXX_3.4
VRDashboardManager
ftell@@GLIBC_2.2.5
_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base@@GLIBCXX_3.4
_ZTVSt15basic_stringbufIcSt11char_traitsIcESaIcEE@@GLIBCXX_3.4
wcslen@@GLIBC_2.2.5
_ZSt16__throw_bad_castv@@GLIBCXX_3.4
_ZNSbIwSt11char_traitsIwESaIwEE4_Rep9_S_createEmmRKS1_@@GLIBCXX_3.4
_ZTVSt9basic_iosIcSt11char_traitsIcEE@@GLIBCXX_3.4
_ZSt19__throw_range_errorPKc@@GLIBCXX_3.4
_ZSt24__throw_out_of_range_fmtPKcz@@GLIBCXX_3.4.20
_ZNSbIwSt11char_traitsIwESaIwEE15_M_replace_safeEmmPKwm@@GLIBCXX_3.4
_ZTVSt19basic_ostringstreamIcSt11char_traitsIcESaIcEE@@GLIBCXX_3.4
_ZNSs9_M_mutateEmmm@@GLIBCXX_3.4
abort@@GLIBC_2.2.5
_ZNSt8ios_baseC2Ev@@GLIBCXX_3.4
_ZNSsC1EPKcmRKSaIcE@@GLIBCXX_3.4
__fprintf_chk@@GLIBC_2.3.4
_ZNSolsEPSt15basic_streambufIcSt11char_traitsIcEE@@GLIBCXX_3.4
_ZNSs7replaceEmmPKcm@@GLIBCXX_3.4
__gmon_start__
_Jv_RegisterClasses
_ZSt20__throw_system_errori@@GLIBCXX_3.4.11
_Znam@@GLIBCXX_3.4
VR_InitInternal2
fseek@@GLIBC_2.2.5
_ZdlPv@@GLIBCXX_3.4
_ZNSs7reserveEm@@GLIBCXX_3.4
toupper@@GLIBC_2.2.5
_ZNKSs5rfindEcm@@GLIBCXX_3.4
_ZNKSt5ctypeIcE13_M_widen_initEv@@GLIBCXX_3.4.11
strcasecmp@@GLIBC_2.2.5
_ZTTSt19basic_istringstreamIcSt11char_traitsIcESaIcEE@@GLIBCXX_3.4
_fini
__cxa_rethrow@@CXXABI_1.3
_ZNSt8ios_base4InitC1Ev@@GLIBCXX_3.4
strpbrk@@GLIBC_2.2.5
_ZTVN10__cxxabiv120__function_type_infoE@@CXXABI_1.3
VRSceneGraph
strncmp@@GLIBC_2.2.5
malloc@@GLIBC_2.2.5
fopen@@GLIBC_2.2.5
VR_IsRuntimeInstalled
unlink@@GLIBC_2.2.5
_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@@GLIBCXX_3.4
_ZNSs4_Rep9_S_createEmmRKSaIcE@@GLIBCXX_3.4
_ZNSs15_M_replace_safeEmmPKcm@@GLIBCXX_3.4
typeinfo for bool (char)
__memcpy_chk@@GLIBC_2.3.4
_ZNSsC1ERKSs@@GLIBCXX_3.4
__cxa_atexit@@GLIBC_2.2.5
_ZNKSt19__codecvt_utf8_baseIDiE6do_outER11__mbstate_tPKDiS4_RS4_PcS6_RS6_@@GLIBCXX_3.4.21
_ZTTSt19basic_ostringstreamIcSt11char_traitsIcESaIcEE@@GLIBCXX_3.4
_ZNSt8ios_base4InitD1Ev@@GLIBCXX_3.4
_ITM_deregisterTMCloneTable
_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@@GLIBCXX_3.4
VRControlPanel
_ZNKSt19__codecvt_utf8_baseIDiE10do_unshiftER11__mbstate_tPcS3_RS3_@@GLIBCXX_3.4.21
_ZNSbIwSt11char_traitsIwESaIwEE6resizeEmw@@GLIBCXX_3.4
_ZNSsC1EmcRKSaIcE@@GLIBCXX_3.4
free@@GLIBC_2.2.5
VR_GetVRInitErrorAsEnglishDescription
strlen@@GLIBC_2.2.5
_ITM_registerTMCloneTable
VRTrackedCameraInternal
_ZNSs4_Rep10_M_destroyERKSaIcE@@GLIBCXX_3.4
__xstat@@GLIBC_2.2.5
typeinfo for bool (*)(char)
_ZTISt19__codecvt_utf8_baseIwE@@GLIBCXX_3.4.21
_ZNSi10_M_extractIdEERSiRT_@@GLIBCXX_3.4.9
typeinfo name for bool (char)
__cxa_finalize@@GLIBC_2.2.5
_ZTVN10__cxxabiv117__class_type_infoE@@CXXABI_1.3
VR_GetGenericInterface
_ZNKSt19__codecvt_utf8_baseIwE6do_outER11__mbstate_tPKwS4_RS4_PcS6_RS6_@@GLIBCXX_3.4.21
void std::vector<std::string, std::allocator<std::string>>::_M_emplace_back_aux<std::string>(std::string&&)
_ZNKSt19__codecvt_utf8_baseIDiE16do_always_noconvEv@@GLIBCXX_3.4.21
VR_IsInterfaceVersionValid
sscanf@@GLIBC_2.2.5
VR_RuntimePath
_ZNSs6insertEmPKcm@@GLIBCXX_3.4
_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base@@GLIBCXX_3.4
void std::vector<std::string, std::allocator<std::string>>::_M_emplace_back_aux<std::string const&>(std::string const&)
dlclose@@GLIBC_2.2.5
_ZNSbIwSt11char_traitsIwESaIwEE4_Rep10_M_destroyERKS1_@@GLIBCXX_3.4
_ZNSbIwSt11char_traitsIwESaIwEE4_Rep20_S_empty_rep_storageE@@GLIBCXX_3.4
_ZNKSs7compareEPKc@@GLIBCXX_3.4
_ZNSsC1EPKcRKSaIcE@@GLIBCXX_3.4
_ZNSbIwSt11char_traitsIwESaIwEE12_M_leak_hardEv@@GLIBCXX_3.4
fputs@@GLIBC_2.2.5
strtol@@GLIBC_2.2.5
readlink@@GLIBC_2.2.5
_ZNSt6localeC1Ev@@GLIBCXX_3.4
VR_GetInitToken
VROverlayView
VRPaths
_ZNKSt19__codecvt_utf8_baseIwE10do_unshiftER11__mbstate_tPcS3_RS3_@@GLIBCXX_3.4.21
__cxa_pure_virtual@@CXXABI_1.3
VR_GetStringForHmdError
VR_ShutdownInternal
VRCompositorSystemInternal
_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l@@GLIBCXX_3.4.9
_ZNSt19basic_istringstreamIcSt11char_traitsIcESaIcEED1Ev@@GLIBCXX_3.4
memmove@@GLIBC_2.2.5
strchr@@GLIBC_2.2.5
vsnprintf@@GLIBC_2.2.5
fread@@GLIBC_2.2.5
_ZNSt19__codecvt_utf8_baseIDiED2Ev@@GLIBCXX_3.4.21
setenv@@GLIBC_2.2.5
_ZTISt9exception@@GLIBCXX_3.4
getenv@@GLIBC_2.2.5
_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E@@GLIBCXX_3.4
_ZNKSt19__codecvt_utf8_baseIwE11do_encodingEv@@GLIBCXX_3.4.21
VRVirtualDisplay
dl_iterate_phdr@@GLIBC_2.2.5
__errno_location@@GLIBC_2.2.5
_ZNKSt19__codecvt_utf8_baseIwE13do_max_lengthEv@@GLIBCXX_3.4.21
_ZNKSt19__codecvt_utf8_baseIwE16do_always_noconvEv@@GLIBCXX_3.4.21
_ZNKSt19__codecvt_utf8_baseIDiE13do_max_lengthEv@@GLIBCXX_3.4.21
__bss_start
_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@@GLIBCXX_3.4
VRRenderModelsInternal
LiquidVR
_ZTVN10__cxxabiv120__si_class_type_infoE@@CXXABI_1.3
_ZSt25__throw_bad_function_callv@@GLIBCXX_3.4.14
_ZTISt19__codecvt_utf8_baseIDiE@@GLIBCXX_3.4.21
strncasecmp@@GLIBC_2.2.5
__stack_chk_fail@@GLIBC_2.4
_ZNSt8ios_baseD2Ev@@GLIBCXX_3.4
_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEED1Ev@@GLIBCXX_3.4
_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_@@GLIBCXX_3.4
strcmp@@GLIBC_2.2.5
tolower@@GLIBC_2.2.5
__cxa_allocate_exception@@CXXABI_1.3
_ZNSt7codecvtIwc11__mbstate_tEC2Em@@GLIBCXX_3.4
getcwd@@GLIBC_2.2.5
_ZNSs6assignEPKcm@@GLIBCXX_3.4
_ZNSt9exceptionD2Ev@@GLIBCXX_3.4
__cxa_free_exception@@CXXABI_1.3
_ZNKSt19__codecvt_utf8_baseIwE5do_inER11__mbstate_tPKcS4_RS4_PwS6_RS6_@@GLIBCXX_3.4.21
_ZNSt15basic_stringbufIcSt11char_traitsIcESaIcEE7_M_syncEPcmm@@GLIBCXX_3.4
_ZNSs6assignERKSs@@GLIBCXX_3.4
_ZNSt19__codecvt_utf8_baseIwED2Ev@@GLIBCXX_3.4.21
_ZNKSt19__codecvt_utf8_baseIDiE11do_encodingEv@@GLIBCXX_3.4.21
_ZSt19__throw_logic_errorPKc@@GLIBCXX_3.4
dladdr@@GLIBC_2.2.5
_ZdaPv@@GLIBCXX_3.4
pthread_once@@GLIBC_2.2.5
memcmp@@GLIBC_2.2.5
_ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEES2_@@GLIBCXX_3.4
__cxa_throw@@CXXABI_1.3
_end
_ZNKSt15basic_stringbufIcSt11char_traitsIcESaIcEE3strEv@@GLIBCXX_3.4
fclose@@GLIBC_2.2.5
dlopen@@GLIBC_2.2.5
strncpy@@GLIBC_2.2.5
_ZNSbIwSt11char_traitsIwESaIwEEC1ERKS1_@@GLIBCXX_3.4
_ZTVSt15basic_streambufIcSt11char_traitsIcEE@@GLIBCXX_3.4
strtoull@@GLIBC_2.2.5
dlsym@@GLIBC_2.2.5
typeinfo name for bool (*)(char)
_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@@GLIBCXX_3.4
__cxa_end_catch@@CXXABI_1.3
_ZSt17__throw_bad_allocv@@GLIBCXX_3.4
unsetenv@@GLIBC_2.2.5
_ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3.4
_ZNKSt19__codecvt_utf8_baseIDiE9do_lengthER11__mbstate_tPKcS4_m@@GLIBCXX_3.4.21
_ZTVSt19basic_istringstreamIcSt11char_traitsIcESaIcEE@@GLIBCXX_3.4
__sprintf_chk@@GLIBC_2.3.4
_ZNSs6resizeEmc@@GLIBCXX_3.4
stderr@@GLIBC_2.2.5
__snprintf_chk@@GLIBC_2.3.4
_ZNSbIwSt11char_traitsIwESaIwEEC1ERKS2_@@GLIBCXX_3.4
modf@@GLIBC_2.2.5
__pthread_key_create@@GLIBC_2.2.5
__cxa_begin_catch@@CXXABI_1.3
fwrite@@GLIBC_2.2.5
pthread_mutex_lock@@GLIBC_2.2.5
_edata
__gxx_personality_v0@@CXXABI_1.3
_ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEEC1ESt13_Ios_Openmode@@GLIBCXX_3.4
VR_GetVRInitErrorAsSymbol
_ZTVN10__cxxabiv119__pointer_type_infoE@@CXXABI_1.3
_Znwm@@GLIBCXX_3.4
_ZNSsC1ERKSsmm@@GLIBCXX_3.4
_ZNSsC1ERKSaIcE@@GLIBCXX_3.4
VR_IsHmdPresent
_ZNSt6localeD1Ev@@GLIBCXX_3.4
pthread_mutex_unlock@@GLIBC_2.2.5
_ZNSs12_M_leak_hardEv@@GLIBCXX_3.4
_ZNSs4swapERSs@@GLIBCXX_3.4
memcpy@@GLIBC_2.14
_ZNSs6appendERKSs@@GLIBCXX_3.4
_ZNKSt19__codecvt_utf8_baseIDiE5do_inER11__mbstate_tPKcS4_RS4_PDiS6_RS6_@@GLIBCXX_3.4.21
rename@@GLIBC_2.2.5
mkdir@@GLIBC_2.2.5
_ZNSbIwSt11char_traitsIwESaIwEE9_M_mutateEmmm@@GLIBCXX_3.4
_init
GCC: (SteamRT 5.4.0-7.really.6+steamrt1.2+srt2) 5.4.1 20160803
xZ4%
