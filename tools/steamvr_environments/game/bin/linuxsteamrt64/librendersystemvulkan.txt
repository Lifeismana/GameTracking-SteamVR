 A __bss_start
 A _edata
 A _end
 AssertMsg_ConditionFailed
 B glslang::PoolIndex
 B glslang::ThreadInitializeIndex
 B yydebug
 CMemAllocSystemInitialize
 CThreadEvent::CThreadEvent(bool)
 CThreadEvent::Set()
 CThreadFastMutex::Lock(unsigned long long, unsigned int) volatile
 CThreadMultiWaitEvent::CThreadMultiWaitEvent(bool)
 CThreadMultiWaitEvent::Set()
 CThreadMultiWaitEvent::~CThreadMultiWaitEvent()
 CThreadRWLock::LockForWrite()
 CThreadRWLock::UnlockWrite()
 CThreadRWLock::WaitForRead()
 CThreadRWLock_FastRead::CThreadRWLock_FastRead()
 CThreadRWLock_FastRead::HandleFirstWriteLockTransition()
 CThreadRWLock_FastRead::UnlockReadAccounting(unsigned int)
 CThreadRWLock_FastRead::WaitForReadLockTransition(unsigned int)
 CThreadSemaphore::Release(int, int*)
 CThreadSemaphore::~CThreadSemaphore()
 CThreadSpinRWLock::LockForRead()
 CThreadSpinRWLock::SpinLockForWrite(unsigned long long)
 CThreadSpinRWLock::UnlockRead()
 CThreadSpinRWLock::UnlockWrite()
 CThreadSyncObject::Wait(unsigned int)
 CThreadSyncObject::WaitImpl(unsigned int)
 CThreadSyncObject::~CThreadSyncObject()
 CVProfNode::EnterScope()
 CVProfNode::ExitScope()
 CVProfNode::GetSubNode(char const*, int, char const*, int)
 CommandLine
 ConMsg(char const*, ...)
 CreateSimpleThread
 D glslang::PureOperatorBuiltins
 D glslang::binop
 D glslang::unop
 DevMsg
 DevMsg(char const*, ...)
 DevWarning(char const*, ...)
 EarlyInit_Tier0
 GetCPUInformation
 HangWatchdogInternal_BeginScope
 HangWatchdogInternal_EndScope
 KeyValuesSystem
 LOG_GENERAL
 LoggingSystem_IsChannelEnabled
 LoggingSystem_IsChannelEnabled(int, LoggingVerbosity_t)
 LoggingSystem_Log
 LoggingSystem_Log(int, LoggingSeverity_t, Color, char const*, ...)
 LoggingSystem_Log(int, LoggingSeverity_t, LeafCodeInfo_t const&, char const*, ...)
 LoggingSystem_RegisterLoggingChannel
 MemAlloc_AllocFunc
 MemAlloc_FreeFunc
 Msg
 Plat_DebugPrint
 Plat_ExitProcess
 Plat_FloatTime
 Plat_GetCPUFrequency
 Plat_GetClockStart
 Plat_GetDefaultMonitorIndex
 Plat_GetDesktopResolution
 Plat_GetEnv
 Plat_GetModuleFilename
 Plat_GetMonitorResolution
 Plat_GetOSType
 Plat_GetPlatformError
 Plat_GetThreadIndex
 Plat_GetWindowClientSize
 Plat_GetWindowMonitorIndex
 Plat_GlobalMemoryStatus
 Plat_IsHighDPI
 Plat_IsInDebugSessionRaw
 Plat_MessageBox
 Plat_NeedsLowFragmentation
 Plat_OsSpecificHandleToPlatWindow
 Plat_ReconfigureWindow
 Plat_RelativeTicks
 Plat_RequireSDL
 Plat_ShouldCollectMiniDumpsForFatalErrors
 Plat_TicksAfterSecsF
 Plat_VirtualAlloc
 Plat_VirtualFree
 Plat_WindowToOsSpecificHandle
 Plat_getwd
 R glslang::TAllocation::guardBlockBeginVal
 R glslang::TAllocation::guardBlockEndVal
 R glslang::TAllocation::guardBlockSize
 R glslang::TAllocation::userDataFill
 RandomFloat
 RandomSeed
 RegisterStringToken
 ReleaseThreadHandle
 SeriousWarning
 T BinaryProperties_GetValue
 T ConstructBindings()
 T ConstructCompiler(EShLanguage, int)
 T ConstructLinker(EShExecutable, int)
 T ConstructUniformMap()
 T CreateInterface
 T DeleteBindingList(TShHandleBase*)
 T DeleteCompiler(TCompiler*)
 T DeleteLinker(TShHandleBase*)
 T DeleteUniformMap(TUniformMap*)
 T GetResourceManifestCount
 T GetResourceManifests
 T InstallSchemaBindings
 T ShCompile
 T ShConstructCompiler
 T ShConstructLinker
 T ShConstructUniformMap
 T ShDestruct
 T ShExcludeAttributes
 T ShFinalize
 T ShGetExecutable
 T ShGetInfoLog
 T ShGetUniformLocation
 T ShInitialize
 T ShLinkExt
 T ShSetEncryptionMethod
 T ShSetFixedAttributeBindings
 T ShSetVirtualAttributeBindings
 T StageName
 T TGenericCompiler::compile(TIntermNode*, int, EProfile)
 T _fini
 T _init
 T glslang::DetachProcess()
 T glslang::DetachThread()
 T glslang::FinalizeProcess()
 T glslang::FreeGlobalPools()
 T glslang::FreePoolIndex()
 T glslang::GetEsslVersionString()
 T glslang::GetGlobalLock()
 T glslang::GetGlslVersionString()
 T glslang::GetKhronosToolId()
 T glslang::GetThreadPoolAllocator()
 T glslang::HlslGrammar::acceptAnnotations(glslang::TQualifier&)
 T glslang::HlslGrammar::acceptArguments(glslang::TFunction*, glslang::TIntermTyped*&)
 T glslang::HlslGrammar::acceptArraySpecifier(glslang::TArraySizes*&)
 T glslang::HlslGrammar::acceptAssignmentExpression(glslang::TIntermTyped*&)
 T glslang::HlslGrammar::acceptAttributes(glslang::TAttributeMap&)
 T glslang::HlslGrammar::acceptBinaryExpression(glslang::TIntermTyped*&, glslang::PrecedenceLevel)
 T glslang::HlslGrammar::acceptCaseLabel(TIntermNode*&)
 T glslang::HlslGrammar::acceptCompilationUnit()
 T glslang::HlslGrammar::acceptCompoundStatement(TIntermNode*&)
 T glslang::HlslGrammar::acceptConditionalExpression(glslang::TIntermTyped*&)
 T glslang::HlslGrammar::acceptConstructor(glslang::TIntermTyped*&)
 T glslang::HlslGrammar::acceptControlDeclaration(TIntermNode*&)
 T glslang::HlslGrammar::acceptDeclaration(TIntermNode*&)
 T glslang::HlslGrammar::acceptDeclarationList(TIntermNode*&)
 T glslang::HlslGrammar::acceptDefaultLabel(TIntermNode*&)
 T glslang::HlslGrammar::acceptDefaultParameterDeclaration(glslang::TType const&, glslang::TIntermTyped*&)
 T glslang::HlslGrammar::acceptExpression(glslang::TIntermTyped*&)
 T glslang::HlslGrammar::acceptFullySpecifiedType(glslang::TType&)
 T glslang::HlslGrammar::acceptFullySpecifiedType(glslang::TType&, TIntermNode*&)
 T glslang::HlslGrammar::acceptFunctionBody(glslang::TFunctionDeclarator&, TIntermNode*&)
 T glslang::HlslGrammar::acceptFunctionDefinition(glslang::TFunctionDeclarator&, TIntermNode*&, glslang::TVector<glslang::HlslToken>*)
 T glslang::HlslGrammar::acceptFunctionParameters(glslang::TFunction&)
 T glslang::HlslGrammar::acceptIdentifier(glslang::HlslToken&)
 T glslang::HlslGrammar::acceptInitializer(glslang::TIntermTyped*&)
 T glslang::HlslGrammar::acceptIterationStatement(TIntermNode*&)
 T glslang::HlslGrammar::acceptJumpStatement(TIntermNode*&)
 T glslang::HlslGrammar::acceptLayoutQualifierList(glslang::TQualifier&)
 T glslang::HlslGrammar::acceptLiteral(glslang::TIntermTyped*&)
 T glslang::HlslGrammar::acceptMatrixTemplateType(glslang::TType&)
 T glslang::HlslGrammar::acceptOutputPrimitiveGeometry(glslang::TLayoutGeometry&)
 T glslang::HlslGrammar::acceptParameterDeclaration(glslang::TFunction&)
 T glslang::HlslGrammar::acceptParenExpression(glslang::TIntermTyped*&)
 T glslang::HlslGrammar::acceptPostDecls(glslang::TQualifier&)
 T glslang::HlslGrammar::acceptPostfixExpression(glslang::TIntermTyped*&)
 T glslang::HlslGrammar::acceptQualifier(glslang::TQualifier&)
 T glslang::HlslGrammar::acceptSamplerDeclarationDX9(glslang::TType&)
 T glslang::HlslGrammar::acceptSamplerState()
 T glslang::HlslGrammar::acceptSamplerType(glslang::TType&)
 T glslang::HlslGrammar::acceptScopedCompoundStatement(TIntermNode*&)
 T glslang::HlslGrammar::acceptScopedStatement(TIntermNode*&)
 T glslang::HlslGrammar::acceptSelectionStatement(TIntermNode*&)
 T glslang::HlslGrammar::acceptStatement(TIntermNode*&)
 T glslang::HlslGrammar::acceptStreamOutTemplateType(glslang::TType&, glslang::TLayoutGeometry&)
 T glslang::HlslGrammar::acceptStruct(glslang::TType&, TIntermNode*&)
 T glslang::HlslGrammar::acceptStructBufferType(glslang::TType&)
 T glslang::HlslGrammar::acceptStructDeclarationList(glslang::TVector<glslang::TTypeLoc>*&, TIntermNode*&, glslang::TVector<glslang::TFunctionDeclarator>&)
 T glslang::HlslGrammar::acceptSwitchStatement(TIntermNode*&)
 T glslang::HlslGrammar::acceptTemplateVecMatBasicType(glslang::TBasicType&)
 T glslang::HlslGrammar::acceptTessellationDeclType(glslang::TBuiltInVariable&)
 T glslang::HlslGrammar::acceptTessellationPatchTemplateType(glslang::TType&)
 T glslang::HlslGrammar::acceptTextureType(glslang::TType&)
 T glslang::HlslGrammar::acceptType(glslang::TType&)
 T glslang::HlslGrammar::acceptType(glslang::TType&, TIntermNode*&)
 T glslang::HlslGrammar::acceptUnaryExpression(glslang::TIntermTyped*&)
 T glslang::HlslGrammar::acceptVectorTemplateType(glslang::TType&)
 T glslang::HlslGrammar::captureBlockTokens(glslang::TVector<glslang::HlslToken>&)
 T glslang::HlslGrammar::expected(char const*)
 T glslang::HlslGrammar::parse()
 T glslang::HlslGrammar::unimplemented(char const*)
 T glslang::HlslOpMap::assignment(glslang::EHlslTokenClass)
 T glslang::HlslOpMap::binary(glslang::EHlslTokenClass)
 T glslang::HlslOpMap::postUnary(glslang::EHlslTokenClass)
 T glslang::HlslOpMap::preUnary(glslang::EHlslTokenClass)
 T glslang::HlslOpMap::precedenceLevel(glslang::TOperator)
 T glslang::HlslParseContext::addConstructor(glslang::TSourceLoc const&, glslang::TIntermTyped*, glslang::TType const&)
 T glslang::HlslParseContext::addInputArgumentConversions(glslang::TFunction const&, glslang::TIntermTyped*&)
 T glslang::HlslParseContext::addInterstageIoToLinkage()
 T glslang::HlslParseContext::addOutputArgumentConversions(glslang::TFunction const&, glslang::TIntermOperator&)
 T glslang::HlslParseContext::addPatchConstantInvocation()
 T glslang::HlslParseContext::addSwitch(glslang::TSourceLoc const&, glslang::TIntermTyped*, glslang::TIntermAggregate*)
 T glslang::HlslParseContext::arrayDimMerge(glslang::TType&, glslang::TArraySizes const*)
 T glslang::HlslParseContext::arraySizeCheck(glslang::TSourceLoc const&, glslang::TIntermTyped*, glslang::TArraySize&)
 T glslang::HlslParseContext::arraySizeRequiredCheck(glslang::TSourceLoc const&, glslang::TArraySizes const&)
 T glslang::HlslParseContext::assignLocations(glslang::TVariable&)
 T glslang::HlslParseContext::builtInOpCheck(glslang::TSourceLoc const&, glslang::TFunction const&, glslang::TIntermOperator&)
 T glslang::HlslParseContext::checkIndex(glslang::TSourceLoc const&, glslang::TType const&, int&)
 T glslang::HlslParseContext::clearUniform(glslang::TQualifier&)
 T glslang::HlslParseContext::clearUniformInputOutput(glslang::TQualifier&)
 T glslang::HlslParseContext::computeSamplerTypeIndex(glslang::TSampler&)
 T glslang::HlslParseContext::constantValueCheck(glslang::TIntermTyped*, char const*)
 T glslang::HlslParseContext::constructAggregate(TIntermNode*, glslang::TType const&, int, glslang::TSourceLoc const&)
 T glslang::HlslParseContext::constructBuiltIn(glslang::TType const&, glslang::TOperator, glslang::TIntermTyped*, glslang::TSourceLoc const&, bool)
 T glslang::HlslParseContext::constructorError(glslang::TSourceLoc const&, TIntermNode*, glslang::TFunction&, glslang::TOperator, glslang::TType&)
 T glslang::HlslParseContext::constructorTextureSamplerError(glslang::TSourceLoc const&, glslang::TFunction const&)
 T glslang::HlslParseContext::convertConditionalExpression(glslang::TSourceLoc const&, glslang::TIntermTyped*, bool)
 T glslang::HlslParseContext::convertInitializerList(glslang::TSourceLoc const&, glslang::TType const&, glslang::TIntermTyped*, glslang::TIntermTyped*)
 T glslang::HlslParseContext::correctInput(glslang::TQualifier&)
 T glslang::HlslParseContext::correctOutput(glslang::TQualifier&)
 T glslang::HlslParseContext::correctUniform(glslang::TQualifier&)
 T glslang::HlslParseContext::decomposeGeometryMethods(glslang::TSourceLoc const&, glslang::TIntermTyped*&, TIntermNode*)
 T glslang::HlslParseContext::decomposeIntrinsic(glslang::TSourceLoc const&, glslang::TIntermTyped*&, TIntermNode*)
 T glslang::HlslParseContext::decomposeSampleMethods(glslang::TSourceLoc const&, glslang::TIntermTyped*&, TIntermNode*)
 T glslang::HlslParseContext::decomposeStructBufferMethods(glslang::TSourceLoc const&, glslang::TIntermTyped*&, TIntermNode*)
 T glslang::HlslParseContext::executeInitializer(glslang::TSourceLoc const&, glslang::TIntermTyped*, glslang::TVariable*)
 T glslang::HlslParseContext::findFunction(glslang::TSourceLoc const&, glslang::TFunction&, bool&, glslang::TIntermTyped*&)
 T glslang::HlslParseContext::findLinkageSymbol(glslang::TBuiltInVariable) const
 T glslang::HlslParseContext::finish()
 T glslang::HlslParseContext::fixBlockLocations(glslang::TSourceLoc const&, glslang::TQualifier&, glslang::TVector<glslang::TTypeLoc>&, bool, bool)
 T glslang::HlslParseContext::fixBlockUniformOffsets(glslang::TQualifier const&, glslang::TVector<glslang::TTypeLoc>&)
 T glslang::HlslParseContext::fixBlockXfbOffsets(glslang::TQualifier&, glslang::TVector<glslang::TTypeLoc>&)
 T glslang::HlslParseContext::fixBuiltInIoType(glslang::TType&)
 T glslang::HlslParseContext::flatten(glslang::TSourceLoc const&, glslang::TVariable const&)
 T glslang::HlslParseContext::flattenAccess(glslang::TIntermTyped*, int)
 T glslang::HlslParseContext::getLayoutFromTxType(glslang::TSourceLoc const&, glslang::TType const&)
 T glslang::HlslParseContext::getMatrixComponentsColumn(int, glslang::TSwizzleSelectors<glslang::TMatrixSelector> const&)
 T glslang::HlslParseContext::getSplitIoVar(glslang::TIntermTyped const*) const
 T glslang::HlslParseContext::getSplitIoVar(glslang::TVariable const*) const
 T glslang::HlslParseContext::getSplitIoVar(int) const
 T glslang::HlslParseContext::getStructBufferContentType(glslang::TType const&) const
 T glslang::HlslParseContext::getStructBufferCounter(glslang::TSourceLoc const&, glslang::TIntermTyped*)
 T glslang::HlslParseContext::globalCheck(glslang::TSourceLoc const&, char const*)
 T glslang::HlslParseContext::globalQualifierFix(glslang::TSourceLoc const&, glslang::TQualifier&)
 T glslang::HlslParseContext::handleAssign(glslang::TSourceLoc const&, glslang::TOperator, glslang::TIntermTyped*, glslang::TIntermTyped*)
 T glslang::HlslParseContext::handleAssignToMatrixSwizzle(glslang::TSourceLoc const&, glslang::TOperator, glslang::TIntermTyped*, glslang::TIntermTyped*)
 T glslang::HlslParseContext::handleBinaryMath(glslang::TSourceLoc const&, char const*, glslang::TOperator, glslang::TIntermTyped*, glslang::TIntermTyped*)
 T glslang::HlslParseContext::handleBracketDereference(glslang::TSourceLoc const&, glslang::TIntermTyped*, glslang::TIntermTyped*)
 T glslang::HlslParseContext::handleBracketOperator(glslang::TSourceLoc const&, glslang::TIntermTyped*, glslang::TIntermTyped*)
 T glslang::HlslParseContext::handleConstructor(glslang::TSourceLoc const&, glslang::TIntermTyped*, glslang::TType const&)
 T glslang::HlslParseContext::handleEntryPointAttributes(glslang::TSourceLoc const&, glslang::TAttributeMap const&)
 T glslang::HlslParseContext::handleFunctionArgument(glslang::TFunction*, glslang::TIntermTyped*&, glslang::TIntermTyped*)
 T glslang::HlslParseContext::handleFunctionBody(glslang::TSourceLoc const&, glslang::TFunction&, TIntermNode*, TIntermNode*&)
 T glslang::HlslParseContext::handleFunctionCall(glslang::TSourceLoc const&, glslang::TFunction*, glslang::TIntermTyped*)
 T glslang::HlslParseContext::handleFunctionDeclarator(glslang::TSourceLoc const&, glslang::TFunction&, bool)
 T glslang::HlslParseContext::handleFunctionDefinition(glslang::TSourceLoc const&, glslang::TFunction&, glslang::TAttributeMap const&, TIntermNode*&)
 T glslang::HlslParseContext::handleInputGeometry(glslang::TSourceLoc const&, glslang::TLayoutGeometry const&)
 T glslang::HlslParseContext::handleLvalue(glslang::TSourceLoc const&, char const*, glslang::TIntermTyped*)
 T glslang::HlslParseContext::handleOutputGeometry(glslang::TSourceLoc const&, glslang::TLayoutGeometry const&)
 T glslang::HlslParseContext::handleReturnValue(glslang::TSourceLoc const&, glslang::TIntermTyped*)
 T glslang::HlslParseContext::handleSamplerTextureCombine(glslang::TSourceLoc const&, glslang::TIntermTyped*, glslang::TIntermTyped*)
 T glslang::HlslParseContext::handleUnaryMath(glslang::TSourceLoc const&, char const*, glslang::TOperator, glslang::TIntermTyped*)
 T glslang::HlslParseContext::hasInput(glslang::TQualifier const&) const
 T glslang::HlslParseContext::hasOutput(glslang::TQualifier const&) const
 T glslang::HlslParseContext::hasUniform(glslang::TQualifier const&) const
 T glslang::HlslParseContext::indexStructBufferContent(glslang::TSourceLoc const&, glslang::TIntermTyped*) const
 T glslang::HlslParseContext::inheritGlobalDefaults(glslang::TQualifier&) const
 T glslang::HlslParseContext::initializeExtensionBehavior()
 T glslang::HlslParseContext::integerCheck(glslang::TIntermTyped const*, char const*)
 T glslang::HlslParseContext::isInputBuiltIn(glslang::TQualifier const&) const
 T glslang::HlslParseContext::isOutputBuiltIn(glslang::TQualifier const&) const
 T glslang::HlslParseContext::isScalarConstructor(TIntermNode const*)
 T glslang::HlslParseContext::lValueErrorCheck(glslang::TSourceLoc const&, char const*, glslang::TIntermTyped*)
 T glslang::HlslParseContext::lengthenList(glslang::TSourceLoc const&, glslang::TVector<TIntermNode*>&, int, glslang::TIntermTyped*)
 T glslang::HlslParseContext::makeConstructorCall(glslang::TSourceLoc const&, glslang::TType const&)
 T glslang::HlslParseContext::makeIntegerIndex(glslang::TIntermTyped*)
 T glslang::HlslParseContext::makeInternalVariable(char const*, glslang::TType const&) const
 T glslang::HlslParseContext::makeInternalVariableNode(glslang::TSourceLoc const&, char const*, glslang::TType const&) const
 T glslang::HlslParseContext::mapAtomicOp(glslang::TSourceLoc const&, glslang::TOperator, bool)
 T glslang::HlslParseContext::mergeObjectLayoutQualifiers(glslang::TQualifier&, glslang::TQualifier const&, bool)
 T glslang::HlslParseContext::mergeQualifiers(glslang::TQualifier&, glslang::TQualifier const&)
 T glslang::HlslParseContext::paramFix(glslang::TType&)
 T glslang::HlslParseContext::parseShaderStrings(glslang::TPpContext&, glslang::TInputScanner&, bool)
 T glslang::HlslParseContext::popNamespace()
 T glslang::HlslParseContext::pushThisScope(glslang::TType const&)
 T glslang::HlslParseContext::remapEntryPointIO(glslang::TFunction&, glslang::TVariable*&, glslang::TVector<glslang::TVariable*>&, glslang::TVector<glslang::TVariable*>&)
 T glslang::HlslParseContext::remapNonEntryPointIO(glslang::TFunction&)
 T glslang::HlslParseContext::removeUnusedStructBufferCounters()
 T glslang::HlslParseContext::setLimits(TBuiltInResource const&)
 T glslang::HlslParseContext::shareStructBufferType(glslang::TType&)
 T glslang::HlslParseContext::shouldConvertLValue(TIntermNode const*) const
 T glslang::HlslParseContext::shouldFlattenUniform(glslang::TType const&) const
 T glslang::HlslParseContext::specializationCheck(glslang::TSourceLoc const&, glslang::TType const&, char const*)
 T glslang::HlslParseContext::split(glslang::TIntermTyped*)
 T glslang::HlslParseContext::split(glslang::TVariable const&)
 T glslang::HlslParseContext::splitAccessArray(glslang::TSourceLoc const&, glslang::TIntermTyped*, glslang::TIntermTyped*)
 T glslang::HlslParseContext::splitAccessStruct(glslang::TSourceLoc const&, glslang::TIntermTyped*&, int&)
 T glslang::HlslParseContext::structArrayCheck(glslang::TSourceLoc const&, glslang::TType const&)
 T glslang::HlslParseContext::trackLinkage(glslang::TSymbol&)
 T glslang::HlslParseContext::transformEntryPoint(glslang::TSourceLoc const&, glslang::TFunction&, glslang::TAttributeMap const&)
 T glslang::HlslParseContext::updateImplicitArraySize(glslang::TSourceLoc const&, TIntermNode*, int)
 T glslang::HlslParseContext::updateStandaloneQualifierDefaults(glslang::TSourceLoc const&, glslang::TPublicType const&)
 T glslang::HlslParseContext::variableCheck(glslang::TIntermTyped*&)
 T glslang::HlslParseContext::wasFlattened(glslang::TIntermTyped const*) const
 T glslang::HlslParseContext::wasSplit(glslang::TIntermTyped const*) const
 T glslang::HlslParseContext::wrapupSwitchSubsequence(glslang::TIntermAggregate*, TIntermNode*)
 T glslang::HlslParseContext::~HlslParseContext()
 T glslang::HlslScanContext::deleteKeywordMap()
 T glslang::HlslScanContext::fillInKeywordMap()
 T glslang::HlslScanContext::identifierOrType()
 T glslang::HlslScanContext::mapSemantic(char const*)
 T glslang::HlslScanContext::reservedWord()
 T glslang::HlslScanContext::tokenize(glslang::HlslToken&)
 T glslang::HlslScanContext::tokenizeClass(glslang::HlslToken&)
 T glslang::HlslScanContext::tokenizeIdentifier()
 T glslang::HlslTokenStream::acceptTokenClass(glslang::EHlslTokenClass)
 T glslang::HlslTokenStream::advanceToken()
 T glslang::HlslTokenStream::peek() const
 T glslang::HlslTokenStream::peekTokenClass(glslang::EHlslTokenClass) const
 T glslang::HlslTokenStream::popPreToken()
 T glslang::HlslTokenStream::popTokenBuffer()
 T glslang::HlslTokenStream::popTokenStream()
 T glslang::HlslTokenStream::pushPreToken(glslang::HlslToken const&)
 T glslang::HlslTokenStream::pushTokenBuffer(glslang::HlslToken const&)
 T glslang::HlslTokenStream::pushTokenStream(glslang::TVector<glslang::HlslToken> const*)
 T glslang::HlslTokenStream::recedeToken()
 T glslang::InitGlobalLock()
 T glslang::InitProcess()
 T glslang::InitThread()
 T glslang::InitializeMemoryPools()
 T glslang::InitializePoolIndex()
 T glslang::InitializeProcess()
 T glslang::OS_AllocTLSIndex()
 T glslang::OS_CleanupThreadData()
 T glslang::OS_DumpMemoryCounters()
 T glslang::OS_FreeTLSIndex(void*)
 T glslang::OS_GetTLSValue(void*)
 T glslang::OS_SetTLSValue(void*, void*)
 T glslang::PropagateNoContraction(glslang::TIntermediate const&)
 T glslang::ReleaseGlobalLock()
 T glslang::RemoveAllTreeNodes(TIntermNode*)
 T glslang::SetThreadPoolAllocator(glslang::TPoolAllocator&)
 T glslang::TAllocation::checkAllocList() const
 T glslang::TAllocation::checkGuardBlock(unsigned char*, unsigned char, char const*) const
 T glslang::TAnonMember::clone() const
 T glslang::TAnonMember::dump(TInfoSink&) const
 T glslang::TAttributeMap::operator[](glslang::TAttributeType) const
 T glslang::TBuiltInParseables::TBuiltInParseables()
 T glslang::TBuiltInParseables::~TBuiltInParseables()
 T glslang::TBuiltInParseablesHlsl::TBuiltInParseablesHlsl()
 T glslang::TBuiltInParseablesHlsl::createMatTimesMat()
 T glslang::TBuiltInParseablesHlsl::identifyBuiltIns(int, EProfile, glslang::SpvVersion const&, EShLanguage, glslang::TSymbolTable&)
 T glslang::TBuiltInParseablesHlsl::identifyBuiltIns(int, EProfile, glslang::SpvVersion const&, EShLanguage, glslang::TSymbolTable&, TBuiltInResource const&)
 T glslang::TBuiltInParseablesHlsl::initialize(TBuiltInResource const&, int, EProfile, glslang::SpvVersion const&, EShLanguage)
 T glslang::TBuiltInParseablesHlsl::initialize(int, EProfile, glslang::SpvVersion const&)
 T glslang::TBuiltIns::TBuiltIns()
 T glslang::TBuiltIns::add2ndGenerationSamplingImaging(int, EProfile, glslang::SpvVersion const&)
 T glslang::TBuiltIns::identifyBuiltIns(int, EProfile, glslang::SpvVersion const&, EShLanguage, glslang::TSymbolTable&)
 T glslang::TBuiltIns::identifyBuiltIns(int, EProfile, glslang::SpvVersion const&, EShLanguage, glslang::TSymbolTable&, TBuiltInResource const&)
 T glslang::TBuiltIns::initialize(TBuiltInResource const&, int, EProfile, glslang::SpvVersion const&, EShLanguage)
 T glslang::TBuiltIns::initialize(int, EProfile, glslang::SpvVersion const&)
 T glslang::TBuiltIns::~TBuiltIns()
 T glslang::TConstTraverser::visitAggregate(glslang::TVisit, glslang::TIntermAggregate*)
 T glslang::TConstTraverser::visitConstantUnion(glslang::TIntermConstantUnion*)
 T glslang::TFunction::TFunction(glslang::TFunction const&)
 T glslang::TFunction::clone() const
 T glslang::TFunction::dump(TInfoSink&) const
 T glslang::TFunction::~TFunction()
 T glslang::TIndexTraverser::visitAggregate(glslang::TVisit, glslang::TIntermAggregate*)
 T glslang::TIndexTraverser::visitSymbol(glslang::TIntermSymbol*)
 T glslang::TInductiveTraverser::visitAggregate(glslang::TVisit, glslang::TIntermAggregate*)
 T glslang::TInductiveTraverser::visitBinary(glslang::TVisit, glslang::TIntermBinary*)
 T glslang::TInductiveTraverser::visitUnary(glslang::TVisit, glslang::TIntermUnary*)
 T glslang::TInfoSinkBase::append(char const*)
 T glslang::TInfoSinkBase::append(int, char)
 T glslang::TInputScanner::consumeComment()
 T glslang::TInputScanner::consumeWhiteSpace(bool&)
 T glslang::TInputScanner::consumeWhitespaceComment(bool&)
 T glslang::TInputScanner::scanVersion(int&, EProfile&, bool&)
 T glslang::TIntermAggregate::traverse(glslang::TIntermTraverser*)
 T glslang::TIntermBinary::traverse(glslang::TIntermTraverser*)
 T glslang::TIntermBinary::updatePrecision()
 T glslang::TIntermBranch::traverse(glslang::TIntermTraverser*)
 T glslang::TIntermConstantUnion::fold(glslang::TOperator, glslang::TIntermTyped const*) const
 T glslang::TIntermConstantUnion::fold(glslang::TOperator, glslang::TType const&) const
 T glslang::TIntermConstantUnion::traverse(glslang::TIntermTraverser*)
 T glslang::TIntermLoop::traverse(glslang::TIntermTraverser*)
 T glslang::TIntermMethod::traverse(glslang::TIntermTraverser*)
 T glslang::TIntermOperator::isConstructor() const
 T glslang::TIntermOperator::modifiesState() const
 T glslang::TIntermSelection::traverse(glslang::TIntermTraverser*)
 T glslang::TIntermSwitch::traverse(glslang::TIntermTraverser*)
 T glslang::TIntermSymbol::traverse(glslang::TIntermTraverser*)
 T glslang::TIntermTyped::propagatePrecision(glslang::TPrecisionQualifier)
 T glslang::TIntermUnary::traverse(glslang::TIntermTraverser*)
 T glslang::TIntermUnary::updatePrecision()
 T glslang::TIntermediate::addAssign(glslang::TOperator, glslang::TIntermTyped*, glslang::TIntermTyped*, glslang::TSourceLoc)
 T glslang::TIntermediate::addBiShapeConversion(glslang::TOperator, glslang::TIntermTyped*&, glslang::TIntermTyped*&)
 T glslang::TIntermediate::addBinaryMath(glslang::TOperator, glslang::TIntermTyped*, glslang::TIntermTyped*, glslang::TSourceLoc)
 T glslang::TIntermediate::addBinaryNode(glslang::TOperator, glslang::TIntermTyped*, glslang::TIntermTyped*, glslang::TSourceLoc) const
 T glslang::TIntermediate::addBinaryNode(glslang::TOperator, glslang::TIntermTyped*, glslang::TIntermTyped*, glslang::TSourceLoc, glslang::TType const&) const
 T glslang::TIntermediate::addBranch(glslang::TOperator, glslang::TIntermTyped*, glslang::TSourceLoc const&)
 T glslang::TIntermediate::addBranch(glslang::TOperator, glslang::TSourceLoc const&)
 T glslang::TIntermediate::addBuiltInFunctionCall(glslang::TSourceLoc const&, glslang::TOperator, bool, TIntermNode*, glslang::TType const&)
 T glslang::TIntermediate::addComma(glslang::TIntermTyped*, glslang::TIntermTyped*, glslang::TSourceLoc const&)
 T glslang::TIntermediate::addConstantUnion(bool, glslang::TSourceLoc const&, bool) const
 T glslang::TIntermediate::addConstantUnion(double, glslang::TBasicType, glslang::TSourceLoc const&, bool) const
 T glslang::TIntermediate::addConstantUnion(glslang::TConstUnionArray const&, glslang::TType const&, glslang::TSourceLoc const&, bool) const
 T glslang::TIntermediate::addConstantUnion(int, glslang::TSourceLoc const&, bool) const
 T glslang::TIntermediate::addConstantUnion(long long, glslang::TSourceLoc const&, bool) const
 T glslang::TIntermediate::addConstantUnion(unsigned int, glslang::TSourceLoc const&, bool) const
 T glslang::TIntermediate::addConstantUnion(unsigned long long, glslang::TSourceLoc const&, bool) const
 T glslang::TIntermediate::addConversion(glslang::TOperator, glslang::TType const&, glslang::TIntermTyped*) const
 T glslang::TIntermediate::addForLoop(TIntermNode*, TIntermNode*, glslang::TIntermTyped*, glslang::TIntermTyped*, bool, glslang::TSourceLoc const&)
 T glslang::TIntermediate::addIndex(glslang::TOperator, glslang::TIntermTyped*, glslang::TIntermTyped*, glslang::TSourceLoc)
 T glslang::TIntermediate::addLoop(TIntermNode*, glslang::TIntermTyped*, glslang::TIntermTyped*, bool, glslang::TSourceLoc const&)
 T glslang::TIntermediate::addSelection(glslang::TIntermTyped*, glslang::TIntermNodePair, glslang::TSourceLoc const&)
 T glslang::TIntermediate::addSelection(glslang::TIntermTyped*, glslang::TIntermTyped*, glslang::TIntermTyped*, glslang::TSourceLoc const&)
 T glslang::TIntermediate::addShapeConversion(glslang::TType const&, glslang::TIntermTyped*)
 T glslang::TIntermediate::addSymbol(glslang::TIntermSymbol const&)
 T glslang::TIntermediate::addSymbol(glslang::TType const&, glslang::TSourceLoc const&)
 T glslang::TIntermediate::addSymbol(glslang::TVariable const&)
 T glslang::TIntermediate::addSymbol(glslang::TVariable const&, glslang::TSourceLoc const&)
 T glslang::TIntermediate::addSymbolLinkageNode(glslang::TIntermAggregate*&, glslang::TSymbol const&)
 T glslang::TIntermediate::addSymbolLinkageNodes(glslang::TIntermAggregate*&, EShLanguage, glslang::TSymbolTable&)
 T glslang::TIntermediate::addUnaryMath(glslang::TOperator, glslang::TIntermTyped*, glslang::TSourceLoc)
 T glslang::TIntermediate::addUnaryNode(glslang::TOperator, glslang::TIntermTyped*, glslang::TSourceLoc) const
 T glslang::TIntermediate::addUnaryNode(glslang::TOperator, glslang::TIntermTyped*, glslang::TSourceLoc, glslang::TType const&) const
 T glslang::TIntermediate::addUniShapeConversion(glslang::TOperator, glslang::TType const&, glslang::TIntermTyped*)
 T glslang::TIntermediate::addUsedConstantId(int)
 T glslang::TIntermediate::addUsedLocation(glslang::TQualifier const&, glslang::TType const&, bool&)
 T glslang::TIntermediate::addUsedOffsets(int, int, int)
 T glslang::TIntermediate::addXfbBufferOffset(glslang::TType const&)
 T glslang::TIntermediate::areAllChildConst(glslang::TIntermAggregate*)
 T glslang::TIntermediate::canImplicitlyPromote(glslang::TBasicType, glslang::TBasicType, glslang::TOperator) const
 T glslang::TIntermediate::checkCallGraphBodies(TInfoSink&, bool)
 T glslang::TIntermediate::checkCallGraphCycles(TInfoSink&)
 T glslang::TIntermediate::checkLocationRange(int, glslang::TIoRange const&, glslang::TType const&, bool&)
 T glslang::TIntermediate::computeTypeLocationSize(glslang::TType const&) const
 T glslang::TIntermediate::computeTypeXfbSize(glslang::TType const&, bool&) const
 T glslang::TIntermediate::convertToBasicType(glslang::TOperator, glslang::TBasicType, glslang::TIntermTyped*) const
 T glslang::TIntermediate::error(TInfoSink&, char const*)
 T glslang::TIntermediate::finalCheck(TInfoSink&, bool)
 T glslang::TIntermediate::findLValueBase(glslang::TIntermTyped const*, bool)
 T glslang::TIntermediate::findLinkerObjects() const
 T glslang::TIntermediate::fold(glslang::TIntermAggregate*)
 T glslang::TIntermediate::foldConstructor(glslang::TIntermAggregate*)
 T glslang::TIntermediate::foldDereference(glslang::TIntermTyped*, int, glslang::TSourceLoc const&)
 T glslang::TIntermediate::foldSwizzle(glslang::TIntermTyped*, glslang::TSwizzleSelectors<int>&, glslang::TSourceLoc const&)
 T glslang::TIntermediate::getBaseAlignment(glslang::TType const&, int&, int&, bool, bool)
 T glslang::TIntermediate::getBaseAlignmentScalar(glslang::TType const&, int&)
 T glslang::TIntermediate::growAggregate(TIntermNode*, TIntermNode*)
 T glslang::TIntermediate::growAggregate(TIntermNode*, TIntermNode*, glslang::TSourceLoc const&)
 T glslang::TIntermediate::improperStraddle(glslang::TType const&, int, int)
 T glslang::TIntermediate::inOutLocationCheck(TInfoSink&)
 T glslang::TIntermediate::isSpecializationOperation(glslang::TIntermOperator const&) const
 T glslang::TIntermediate::makeAggregate(TIntermNode*)
 T glslang::TIntermediate::makeAggregate(TIntermNode*, glslang::TSourceLoc const&)
 T glslang::TIntermediate::makeAggregate(glslang::TSourceLoc const&)
 T glslang::TIntermediate::mapTypeToConstructorOp(glslang::TType const&) const
 T glslang::TIntermediate::merge(TInfoSink&, glslang::TIntermediate&)
 T glslang::TIntermediate::mergeBodies(TInfoSink&, glslang::TVector<TIntermNode*>&, glslang::TVector<TIntermNode*> const&)
 T glslang::TIntermediate::mergeErrorCheck(TInfoSink&, glslang::TIntermSymbol const&, glslang::TIntermSymbol const&, bool)
 T glslang::TIntermediate::mergeImplicitArraySizes(glslang::TType&, glslang::TType const&)
 T glslang::TIntermediate::mergeLinkerObjects(TInfoSink&, glslang::TVector<TIntermNode*>&, glslang::TVector<TIntermNode*> const&)
 T glslang::TIntermediate::output(TInfoSink&, bool)
 T glslang::TIntermediate::parseConstTree(TIntermNode*, glslang::TConstUnionArray, glslang::TOperator, glslang::TType const&, bool)
 T glslang::TIntermediate::postProcess(TIntermNode*, EShLanguage)
 T glslang::TIntermediate::promote(glslang::TIntermOperator*)
 T glslang::TIntermediate::promoteAggregate(glslang::TIntermAggregate&)
 T glslang::TIntermediate::promoteBinary(glslang::TIntermBinary&)
 T glslang::TIntermediate::promoteConstantUnion(glslang::TBasicType, glslang::TIntermConstantUnion*) const
 T glslang::TIntermediate::promoteUnary(glslang::TIntermUnary&)
 T glslang::TIntermediate::pushSelector(glslang::TVector<TIntermNode*>&, glslang::TMatrixSelector const&, glslang::TSourceLoc const&)
 T glslang::TIntermediate::pushSelector(glslang::TVector<TIntermNode*>&, int const&, glslang::TSourceLoc const&)
 T glslang::TIntermediate::removeTree()
 T glslang::TIntermediate::setAggregateOperator(TIntermNode*, glslang::TOperator, glslang::TType const&, glslang::TSourceLoc)
 T glslang::TIntermediate::specConstantPropagates(glslang::TIntermTyped const&, glslang::TIntermTyped const&)
 T glslang::TIntermediate::userOutputUsed() const
 T glslang::TIntermediate::warn(TInfoSink&, char const*)
 T glslang::TIoMapper::addStage(EShLanguage, glslang::TIntermediate&, TInfoSink&, glslang::TIoMapResolver*)
 T glslang::TOutputTraverser::visitAggregate(glslang::TVisit, glslang::TIntermAggregate*)
 T glslang::TOutputTraverser::visitBinary(glslang::TVisit, glslang::TIntermBinary*)
 T glslang::TOutputTraverser::visitBranch(glslang::TVisit, glslang::TIntermBranch*)
 T glslang::TOutputTraverser::visitConstantUnion(glslang::TIntermConstantUnion*)
 T glslang::TOutputTraverser::visitLoop(glslang::TVisit, glslang::TIntermLoop*)
 T glslang::TOutputTraverser::visitSelection(glslang::TVisit, glslang::TIntermSelection*)
 T glslang::TOutputTraverser::visitSwitch(glslang::TVisit, glslang::TIntermSwitch*)
 T glslang::TOutputTraverser::visitSymbol(glslang::TIntermSymbol*)
 T glslang::TOutputTraverser::visitUnary(glslang::TVisit, glslang::TIntermUnary*)
 T glslang::TParseContext::TParseContext(glslang::TSymbolTable&, glslang::TIntermediate&, bool, int, EProfile, glslang::SpvVersion const&, EShLanguage, TInfoSink&, bool, EShMessages)
 T glslang::TParseContext::addConstructor(glslang::TSourceLoc const&, TIntermNode*, glslang::TType const&)
 T glslang::TParseContext::addInputArgumentConversions(glslang::TFunction const&, TIntermNode*&) const
 T glslang::TParseContext::addOutputArgumentConversions(glslang::TFunction const&, glslang::TIntermAggregate&) const
 T glslang::TParseContext::addSwitch(glslang::TSourceLoc const&, glslang::TIntermTyped*, glslang::TIntermAggregate*)
 T glslang::TParseContext::arrayDimCheck(glslang::TSourceLoc const&, glslang::TArraySizes const*, glslang::TArraySizes const*)
 T glslang::TParseContext::arrayDimCheck(glslang::TSourceLoc const&, glslang::TType const*, glslang::TArraySizes const*)
 T glslang::TParseContext::arrayDimMerge(glslang::TType&, glslang::TArraySizes const*)
 T glslang::TParseContext::arrayError(glslang::TSourceLoc const&, glslang::TType const&)
 T glslang::TParseContext::arrayObjectCheck(glslang::TSourceLoc const&, glslang::TType const&, char const*)
 T glslang::TParseContext::arrayOfArrayVersionCheck(glslang::TSourceLoc const&)
 T glslang::TParseContext::arrayQualifierError(glslang::TSourceLoc const&, glslang::TQualifier const&)
 T glslang::TParseContext::arraySizeCheck(glslang::TSourceLoc const&, glslang::TIntermTyped*, glslang::TArraySize&)
 T glslang::TParseContext::arraySizeRequiredCheck(glslang::TSourceLoc const&, glslang::TArraySizes const&)
 T glslang::TParseContext::arrayUnsizedCheck(glslang::TSourceLoc const&, glslang::TQualifier const&, glslang::TArraySizes const*, bool, bool)
 T glslang::TParseContext::blockQualifierCheck(glslang::TSourceLoc const&, glslang::TQualifier const&, bool)
 T glslang::TParseContext::blockStageIoCheck(glslang::TSourceLoc const&, glslang::TQualifier const&)
 T glslang::TParseContext::boolCheck(glslang::TSourceLoc const&, glslang::TIntermTyped const*)
 T glslang::TParseContext::boolCheck(glslang::TSourceLoc const&, glslang::TPublicType const&)
 T glslang::TParseContext::builtInOpCheck(glslang::TSourceLoc const&, glslang::TFunction const&, glslang::TIntermOperator&)
 T glslang::TParseContext::checkIndex(glslang::TSourceLoc const&, glslang::TType const&, int&)
 T glslang::TParseContext::checkIoArraysConsistency(glslang::TSourceLoc const&, bool)
 T glslang::TParseContext::checkLocation(glslang::TSourceLoc const&, glslang::TOperator)
 T glslang::TParseContext::checkNoShaderLayouts(glslang::TSourceLoc const&, glslang::TShaderQualifiers const&)
 T glslang::TParseContext::checkPrecisionQualifier(glslang::TSourceLoc const&, glslang::TPrecisionQualifier)
 T glslang::TParseContext::computeBuiltinPrecisions(glslang::TIntermTyped&, glslang::TFunction const&)
 T glslang::TParseContext::computeSamplerTypeIndex(glslang::TSampler&)
 T glslang::TParseContext::constantIndexExpressionCheck(TIntermNode*)
 T glslang::TParseContext::constantValueCheck(glslang::TIntermTyped*, char const*)
 T glslang::TParseContext::constructAggregate(TIntermNode*, glslang::TType const&, int, glslang::TSourceLoc const&)
 T glslang::TParseContext::constructBuiltIn(glslang::TType const&, glslang::TOperator, glslang::TIntermTyped*, glslang::TSourceLoc const&, bool)
 T glslang::TParseContext::constructorError(glslang::TSourceLoc const&, TIntermNode*, glslang::TFunction&, glslang::TOperator, glslang::TType&)
 T glslang::TParseContext::constructorTextureSamplerError(glslang::TSourceLoc const&, glslang::TFunction const&)
 T glslang::TParseContext::containsFieldWithBasicType(glslang::TType const&, glslang::TBasicType)
 T glslang::TParseContext::convertInitializerList(glslang::TSourceLoc const&, glslang::TType const&, glslang::TIntermTyped*)
 T glslang::TParseContext::declareTypeDefaults(glslang::TSourceLoc const&, glslang::TPublicType const&)
 T glslang::TParseContext::executeInitializer(glslang::TSourceLoc const&, glslang::TIntermTyped*, glslang::TVariable*)
 T glslang::TParseContext::findFunction(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)
 T glslang::TParseContext::findFunction120(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)
 T glslang::TParseContext::findFunction400(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)
 T glslang::TParseContext::findFunctionExact(glslang::TSourceLoc const&, glslang::TFunction const&, bool&)
 T glslang::TParseContext::finish()
 T glslang::TParseContext::fixBlockLocations(glslang::TSourceLoc const&, glslang::TQualifier&, glslang::TVector<glslang::TTypeLoc>&, bool, bool)
 T glslang::TParseContext::fixBlockUniformOffsets(glslang::TQualifier&, glslang::TVector<glslang::TTypeLoc>&)
 T glslang::TParseContext::fixBlockXfbOffsets(glslang::TQualifier&, glslang::TVector<glslang::TTypeLoc>&)
 T glslang::TParseContext::fixIoArraySize(glslang::TSourceLoc const&, glslang::TType&)
 T glslang::TParseContext::fixOffset(glslang::TSourceLoc const&, glslang::TSymbol&)
 T glslang::TParseContext::getDefaultPrecision(glslang::TPublicType&)
 T glslang::TParseContext::getIoArrayImplicitSize() const
 T glslang::TParseContext::globalCheck(glslang::TSourceLoc const&, char const*)
 T glslang::TParseContext::globalQualifierFixCheck(glslang::TSourceLoc const&, glslang::TQualifier&)
 T glslang::TParseContext::globalQualifierTypeCheck(glslang::TSourceLoc const&, glslang::TQualifier const&, glslang::TPublicType const&)
 T glslang::TParseContext::handleBinaryMath(glslang::TSourceLoc const&, char const*, glslang::TOperator, glslang::TIntermTyped*, glslang::TIntermTyped*)
 T glslang::TParseContext::handleBracketDereference(glslang::TSourceLoc const&, glslang::TIntermTyped*, glslang::TIntermTyped*)
 T glslang::TParseContext::handleBuiltInFunctionCall(glslang::TSourceLoc, TIntermNode&, glslang::TFunction const&)
 T glslang::TParseContext::handleConstructorCall(glslang::TSourceLoc const&, glslang::TPublicType const&)
 T glslang::TParseContext::handleFunctionCall(glslang::TSourceLoc const&, glslang::TFunction*, TIntermNode*)
 T glslang::TParseContext::handleFunctionDeclarator(glslang::TSourceLoc const&, glslang::TFunction&, bool)
 T glslang::TParseContext::handleFunctionDefinition(glslang::TSourceLoc const&, glslang::TFunction&)
 T glslang::TParseContext::handleIndexLimits(glslang::TSourceLoc const&, glslang::TIntermTyped*, glslang::TIntermTyped*)
 T glslang::TParseContext::handleIoResizeArrayAccess(glslang::TSourceLoc const&, glslang::TIntermTyped*)
 T glslang::TParseContext::handleLengthMethod(glslang::TSourceLoc const&, glslang::TFunction*, TIntermNode*)
 T glslang::TParseContext::handlePrecisionQualifier(glslang::TSourceLoc const&, glslang::TQualifier&, glslang::TPrecisionQualifier)
 T glslang::TParseContext::handleReturnValue(glslang::TSourceLoc const&, glslang::TIntermTyped*)
 T glslang::TParseContext::handleUnaryMath(glslang::TSourceLoc const&, char const*, glslang::TOperator, glslang::TIntermTyped*)
 T glslang::TParseContext::inductiveLoopBodyCheck(TIntermNode*, int, glslang::TSymbolTable&)
 T glslang::TParseContext::inductiveLoopCheck(glslang::TSourceLoc const&, TIntermNode*, glslang::TIntermLoop*)
 T glslang::TParseContext::inheritGlobalDefaults(glslang::TQualifier&) const
 T glslang::TParseContext::integerCheck(glslang::TIntermTyped const*, char const*)
 T glslang::TParseContext::invariantCheck(glslang::TSourceLoc const&, glslang::TQualifier const&)
 T glslang::TParseContext::isIoResizeArray(glslang::TType const&) const
 T glslang::TParseContext::lValueErrorCheck(glslang::TSourceLoc const&, char const*, glslang::TIntermTyped*)
 T glslang::TParseContext::layoutObjectCheck(glslang::TSourceLoc const&, glslang::TSymbol const&)
 T glslang::TParseContext::layoutQualifierCheck(glslang::TSourceLoc const&, glslang::TQualifier const&)
 T glslang::TParseContext::layoutTypeCheck(glslang::TSourceLoc const&, glslang::TType const&)
 T glslang::TParseContext::limitCheck(glslang::TSourceLoc const&, int, char const*, char const*)
 T glslang::TParseContext::lineContinuationCheck(glslang::TSourceLoc const&, bool)
 T glslang::TParseContext::lineDirectiveShouldSetNextLine() const
 T glslang::TParseContext::makeEditable(glslang::TSymbol*&)
 T glslang::TParseContext::makeInternalVariable(char const*, glslang::TType const&) const
 T glslang::TParseContext::mergeObjectLayoutQualifiers(glslang::TQualifier&, glslang::TQualifier const&, bool)
 T glslang::TParseContext::mergeQualifiers(glslang::TSourceLoc const&, glslang::TQualifier&, glslang::TQualifier const&, bool)
 T glslang::TParseContext::nestedBlockCheck(glslang::TSourceLoc const&)
 T glslang::TParseContext::nestedStructCheck(glslang::TSourceLoc const&)
 T glslang::TParseContext::nonOpBuiltInCheck(glslang::TSourceLoc const&, glslang::TFunction const&, glslang::TIntermAggregate&)
 T glslang::TParseContext::opaqueCheck(glslang::TSourceLoc const&, glslang::TType const&, char const*)
 T glslang::TParseContext::paramCheckFix(glslang::TSourceLoc const&, glslang::TQualifier const&, glslang::TType&)
 T glslang::TParseContext::paramCheckFix(glslang::TSourceLoc const&, glslang::TStorageQualifier const&, glslang::TType&)
 T glslang::TParseContext::parameterTypeCheck(glslang::TSourceLoc const&, glslang::TStorageQualifier, glslang::TType const&)
 T glslang::TParseContext::parseShaderStrings(glslang::TPpContext&, glslang::TInputScanner&, bool)
 T glslang::TParseContext::parserError(char const*)
 T glslang::TParseContext::precisionQualifierCheck(glslang::TSourceLoc const&, glslang::TBasicType, glslang::TQualifier&)
 T glslang::TParseContext::rValueErrorCheck(glslang::TSourceLoc const&, char const*, glslang::TIntermTyped*)
 T glslang::TParseContext::reservedPpErrorCheck(glslang::TSourceLoc const&, char const*, char const*)
 T glslang::TParseContext::samplerConstructorLocationCheck(glslang::TSourceLoc const&, char const*, TIntermNode*)
 T glslang::TParseContext::setDefaultPrecision(glslang::TSourceLoc const&, glslang::TPublicType&, glslang::TPrecisionQualifier)
 T glslang::TParseContext::setLimits(TBuiltInResource const&)
 T glslang::TParseContext::setPrecisionDefaults()
 T glslang::TParseContext::specializationCheck(glslang::TSourceLoc const&, glslang::TType const&, char const*)
 T glslang::TParseContext::structArrayCheck(glslang::TSourceLoc const&, glslang::TType const&)
 T glslang::TParseContext::structTypeCheck(glslang::TSourceLoc const&, glslang::TPublicType&)
 T glslang::TParseContext::updateImplicitArraySize(glslang::TSourceLoc const&, TIntermNode*, int)
 T glslang::TParseContext::updateStandaloneQualifierDefaults(glslang::TSourceLoc const&, glslang::TPublicType const&)
 T glslang::TParseContext::userFunctionCallCheck(glslang::TSourceLoc const&, glslang::TIntermAggregate&)
 T glslang::TParseContext::variableCheck(glslang::TIntermTyped*&)
 T glslang::TParseContext::wrapupSwitchSubsequence(glslang::TIntermAggregate*, TIntermNode*)
 T glslang::TParseContext::~TParseContext()
 T glslang::TParseContextBase::error(glslang::TSourceLoc const&, char const*, char const*, char const*, ...)
 T glslang::TParseContextBase::finish()
 T glslang::TParseContextBase::getEditableVariable(char const*)
 T glslang::TParseContextBase::lValueErrorCheck(glslang::TSourceLoc const&, char const*, glslang::TIntermTyped*)
 T glslang::TParseContextBase::makeEditable(glslang::TSymbol*&)
 T glslang::TParseContextBase::outputMessage(glslang::TSourceLoc const&, char const*, char const*, char const*, glslang::TPrefixType, __va_list_tag*)
 T glslang::TParseContextBase::ppError(glslang::TSourceLoc const&, char const*, char const*, char const*, ...)
 T glslang::TParseContextBase::ppWarn(glslang::TSourceLoc const&, char const*, char const*, char const*, ...)
 T glslang::TParseContextBase::rValueErrorCheck(glslang::TSourceLoc const&, char const*, glslang::TIntermTyped*)
 T glslang::TParseContextBase::trackLinkage(glslang::TSymbol&)
 T glslang::TParseContextBase::warn(glslang::TSourceLoc const&, char const*, char const*, char const*, ...)
 T glslang::TParseVersions::checkDeprecated(glslang::TSourceLoc const&, int, int, char const*)
 T glslang::TParseVersions::checkExtensionsRequested(glslang::TSourceLoc const&, int, char const* const*, char const*)
 T glslang::TParseVersions::doubleCheck(glslang::TSourceLoc const&, char const*)
 T glslang::TParseVersions::extensionTurnedOn(char const*)
 T glslang::TParseVersions::extensionsTurnedOn(int, char const* const*)
 T glslang::TParseVersions::float16Check(glslang::TSourceLoc const&, char const*, bool)
 T glslang::TParseVersions::fullIntegerCheck(glslang::TSourceLoc const&, char const*)
 T glslang::TParseVersions::getExtensionBehavior(char const*)
 T glslang::TParseVersions::initializeExtensionBehavior()
 T glslang::TParseVersions::int64Check(glslang::TSourceLoc const&, char const*, bool)
 T glslang::TParseVersions::ppRequireExtensions(glslang::TSourceLoc const&, int, char const* const*, char const*)
 T glslang::TParseVersions::profileRequires(glslang::TSourceLoc const&, int, int, char const*, char const*)
 T glslang::TParseVersions::profileRequires(glslang::TSourceLoc const&, int, int, int, char const* const*, char const*)
 T glslang::TParseVersions::requireExtensions(glslang::TSourceLoc const&, int, char const* const*, char const*)
 T glslang::TParseVersions::requireNotRemoved(glslang::TSourceLoc const&, int, int, char const*)
 T glslang::TParseVersions::requireProfile(glslang::TSourceLoc const&, int, char const*)
 T glslang::TParseVersions::requireSpv(glslang::TSourceLoc const&, char const*)
 T glslang::TParseVersions::requireStage(glslang::TSourceLoc const&, EShLanguage, char const*)
 T glslang::TParseVersions::requireStage(glslang::TSourceLoc const&, EShLanguageMask, char const*)
 T glslang::TParseVersions::requireVulkan(glslang::TSourceLoc const&, char const*)
 T glslang::TParseVersions::spvRemoved(glslang::TSourceLoc const&, char const*)
 T glslang::TParseVersions::updateExtensionBehavior(char const*, glslang::TExtensionBehavior)
 T glslang::TParseVersions::updateExtensionBehavior(int, char const*, char const*)
 T glslang::TParseVersions::vulkanRemoved(glslang::TSourceLoc const&, char const*)
 T glslang::TPoolAllocator::TPoolAllocator(int, int)
 T glslang::TPoolAllocator::allocate(unsigned long)
 T glslang::TPoolAllocator::pop()
 T glslang::TPoolAllocator::popAll()
 T glslang::TPoolAllocator::push()
 T glslang::TPoolAllocator::~TPoolAllocator()
 T glslang::TPpContext::CPPdefine(glslang::TPpToken*)
 T glslang::TPpContext::CPPelse(int, glslang::TPpToken*)
 T glslang::TPpContext::CPPerror(glslang::TPpToken*)
 T glslang::TPpContext::CPPextension(glslang::TPpToken*)
 T glslang::TPpContext::CPPif(glslang::TPpToken*)
 T glslang::TPpContext::CPPifdef(int, glslang::TPpToken*)
 T glslang::TPpContext::CPPinclude(glslang::TPpToken*)
 T glslang::TPpContext::CPPline(glslang::TPpToken*)
 T glslang::TPpContext::CPPpragma(glslang::TPpToken*)
 T glslang::TPpContext::CPPundef(glslang::TPpToken*)
 T glslang::TPpContext::CPPversion(glslang::TPpToken*)
 T glslang::TPpContext::MacroExpand(glslang::TPpToken*, bool, bool)
 T glslang::TPpContext::PrescanMacroArg(glslang::TPpContext::TokenStream&, glslang::TPpToken*, bool)
 T glslang::TPpContext::TokenStream::getSubtoken()
 T glslang::TPpContext::TokenStream::getToken(glslang::TParseContextBase&, glslang::TPpToken*)
 T glslang::TPpContext::TokenStream::peekTokenizedPasting(bool)
 T glslang::TPpContext::TokenStream::peekUntokenizedPasting()
 T glslang::TPpContext::TokenStream::putSubtoken(char)
 T glslang::TPpContext::TokenStream::putToken(int, glslang::TPpToken*)
 T glslang::TPpContext::TokenStream::ungetSubtoken()
 T glslang::TPpContext::UngetToken(int, glslang::TPpToken*)
 T glslang::TPpContext::characterLiteral(glslang::TPpToken*)
 T glslang::TPpContext::eval(int, int, bool, int&, bool&, glslang::TPpToken*)
 T glslang::TPpContext::evalToToken(int, bool, int&, bool&, glslang::TPpToken*)
 T glslang::TPpContext::extraTokenCheck(int, glslang::TPpToken*, int)
 T glslang::TPpContext::lFloatConst(int, int, glslang::TPpToken*)
 T glslang::TPpContext::missingEndifCheck()
 T glslang::TPpContext::pushTokenStreamInput(glslang::TPpContext::TokenStream&, bool)
 T glslang::TPpContext::readCPPline(glslang::TPpToken*)
 T glslang::TPpContext::scanHeaderName(glslang::TPpToken*, char)
 T glslang::TPpContext::setInput(glslang::TInputScanner&, bool)
 T glslang::TPpContext::tMacroInput::scan(glslang::TPpToken*)
 T glslang::TPpContext::tStringInput::scan(glslang::TPpToken*)
 T glslang::TPpContext::tUngotTokenInput::scan(glslang::TPpToken*)
 T glslang::TPpContext::tZeroInput::scan(glslang::TPpToken*)
 T glslang::TPpContext::tokenPaste(int, glslang::TPpToken&)
 T glslang::TPpContext::tokenize(glslang::TPpToken&)
 T glslang::TPpContext::~TPpContext()
 T glslang::TProgram::TProgram()
 T glslang::TProgram::buildReflection()
 T glslang::TProgram::dumpReflection()
 T glslang::TProgram::getAttributeName(int) const
 T glslang::TProgram::getAttributeTType(int) const
 T glslang::TProgram::getAttributeType(int) const
 T glslang::TProgram::getInfoDebugLog()
 T glslang::TProgram::getInfoLog()
 T glslang::TProgram::getLocalSize(int) const
 T glslang::TProgram::getNumLiveAttributes() const
 T glslang::TProgram::getNumLiveUniformBlocks() const
 T glslang::TProgram::getNumLiveUniformVariables() const
 T glslang::TProgram::getUniformArraySize(int) const
 T glslang::TProgram::getUniformBlockCounterIndex(int) const
 T glslang::TProgram::getUniformBlockIndex(int) const
 T glslang::TProgram::getUniformBlockName(int) const
 T glslang::TProgram::getUniformBlockSize(int) const
 T glslang::TProgram::getUniformBlockTType(int) const
 T glslang::TProgram::getUniformBufferOffset(int) const
 T glslang::TProgram::getUniformIndex(char const*) const
 T glslang::TProgram::getUniformName(int) const
 T glslang::TProgram::getUniformTType(int) const
 T glslang::TProgram::getUniformType(int) const
 T glslang::TProgram::link(EShMessages)
 T glslang::TProgram::linkStage(EShLanguage, EShMessages)
 T glslang::TProgram::mapIO(glslang::TIoMapResolver*)
 T glslang::TProgram::~TProgram()
 T glslang::TReflection::addStage(EShLanguage, glslang::TIntermediate const&)
 T glslang::TReflection::buildAttributeReflection(EShLanguage, glslang::TIntermediate const&)
 T glslang::TReflection::buildCounterIndices()
 T glslang::TReflection::dump()
 T glslang::TReflectionTraverser::visitBinary(glslang::TVisit, glslang::TIntermBinary*)
 T glslang::TReflectionTraverser::visitSymbol(glslang::TIntermSymbol*)
 T glslang::TScanContext::dMat()
 T glslang::TScanContext::deleteKeywordMap()
 T glslang::TScanContext::es30ReservedFromGLSL(int)
 T glslang::TScanContext::fillInKeywordMap()
 T glslang::TScanContext::firstGenerationImage(bool)
 T glslang::TScanContext::identifierOrReserved(bool)
 T glslang::TScanContext::identifierOrType()
 T glslang::TScanContext::matNxM()
 T glslang::TScanContext::nonreservedKeyword(int, int)
 T glslang::TScanContext::precisionKeyword()
 T glslang::TScanContext::reservedWord()
 T glslang::TScanContext::secondGenerationImage()
 T glslang::TScanContext::tokenize(glslang::TPpContext*, glslang::TParserToken&)
 T glslang::TScanContext::tokenizeIdentifier()
 T glslang::TShader::TShader(EShLanguage)
 T glslang::TShader::getInfoDebugLog()
 T glslang::TShader::getInfoLog()
 T glslang::TShader::parse(TBuiltInResource const*, int, EProfile, bool, bool, EShMessages, glslang::TShader::Includer&)
 T glslang::TShader::parse(TBuiltInResource const*, int, bool, EShMessages)
 T glslang::TShader::setAutoMapBindings(bool)
 T glslang::TShader::setEntryPoint(char const*)
 T glslang::TShader::setFlattenUniformArrays(bool)
 T glslang::TShader::setHlslIoMapping(bool)
 T glslang::TShader::setNoStorageFormat(bool)
 T glslang::TShader::setShiftCbufferBinding(unsigned int)
 T glslang::TShader::setShiftImageBinding(unsigned int)
 T glslang::TShader::setShiftSamplerBinding(unsigned int)
 T glslang::TShader::setShiftSsboBinding(unsigned int)
 T glslang::TShader::setShiftTextureBinding(unsigned int)
 T glslang::TShader::setShiftUavBinding(unsigned int)
 T glslang::TShader::setShiftUboBinding(unsigned int)
 T glslang::TShader::setSourceEntryPoint(char const*)
 T glslang::TShader::setStrings(char const* const*, int)
 T glslang::TShader::setStringsWithLengths(char const* const*, int const*, int)
 T glslang::TShader::setStringsWithLengthsAndNames(char const* const*, int const*, char const* const*, int)
 T glslang::TShader::~TShader()
 T glslang::TStringAtomMap::TStringAtomMap()
 T glslang::TSymbol::TSymbol(glslang::TSymbol const&)
 T glslang::TSymbolTable::copyTable(glslang::TSymbolTable const&)
 T glslang::TSymbolTable::dump(TInfoSink&) const
 T glslang::TSymbolTableLevel::clone() const
 T glslang::TSymbolTableLevel::dump(TInfoSink&) const
 T glslang::TSymbolTableLevel::readOnly()
 T glslang::TSymbolTableLevel::relateToOperator(char const*, glslang::TOperator)
 T glslang::TSymbolTableLevel::setFunctionExtensions(char const*, int, char const* const*)
 T glslang::TSymbolTableLevel::~TSymbolTableLevel()
 T glslang::TVariable::TVariable(glslang::TVariable const&)
 T glslang::TVariable::clone() const
 T glslang::TVariable::dump(TInfoSink&) const
 T spv::Builder::Builder(unsigned int, spv::SpvBuildLogger*)
 T spv::Builder::If::If(unsigned int, spv::Builder&)
 T spv::Builder::If::makeBeginElse()
 T spv::Builder::If::makeEndIf()
 T spv::Builder::accessChainGetInferredType()
 T spv::Builder::accessChainGetLValue()
 T spv::Builder::accessChainLoad(spv::Decoration, unsigned int)
 T spv::Builder::accessChainStore(unsigned int)
 T spv::Builder::addDecoration(unsigned int, spv::Decoration, int)
 T spv::Builder::addEntryPoint(spv::ExecutionModel, spv::Function*, char const*)
 T spv::Builder::addExecutionMode(spv::Function*, spv::ExecutionMode, int, int, int)
 T spv::Builder::addLine(unsigned int, unsigned int, int, int)
 T spv::Builder::addMemberDecoration(unsigned int, unsigned int, spv::Decoration, int)
 T spv::Builder::addMemberName(unsigned int, int, char const*)
 T spv::Builder::addName(unsigned int, char const*)
 T spv::Builder::addSwitchBreak()
 T spv::Builder::clearAccessChain()
 T spv::Builder::closeLoop()
 T spv::Builder::collapseAccessChain()
 T spv::Builder::createAndSetNoPredecessorBlock(char const*)
 T spv::Builder::createArrayLength(unsigned int, unsigned int)
 T spv::Builder::createBinOp(spv::Op, unsigned int, unsigned int, unsigned int)
 T spv::Builder::createBranch(spv::Block*)
 T spv::Builder::createCompositeCompare(spv::Decoration, unsigned int, unsigned int, bool)
 T spv::Builder::createCompositeExtract(unsigned int, unsigned int, unsigned int)
 T spv::Builder::createCompositeInsert(unsigned int, unsigned int, unsigned int, unsigned int)
 T spv::Builder::createConditionalBranch(unsigned int, spv::Block*, spv::Block*)
 T spv::Builder::createControlBarrier(spv::Scope, spv::Scope, spv::MemorySemanticsMask)
 T spv::Builder::createLoad(unsigned int)
 T spv::Builder::createLoopContinue()
 T spv::Builder::createLoopExit()
 T spv::Builder::createLoopMerge(spv::Block*, spv::Block*, unsigned int)
 T spv::Builder::createMemoryBarrier(unsigned int, unsigned int)
 T spv::Builder::createNoResultOp(spv::Op)
 T spv::Builder::createNoResultOp(spv::Op, unsigned int)
 T spv::Builder::createSelectionMerge(spv::Block*, unsigned int)
 T spv::Builder::createStore(unsigned int, unsigned int)
 T spv::Builder::createTextureCall(spv::Decoration, unsigned int, bool, bool, bool, bool, bool, spv::Builder::TextureParameters const&)
 T spv::Builder::createTextureQueryCall(spv::Op, spv::Builder::TextureParameters const&, bool)
 T spv::Builder::createTriOp(spv::Op, unsigned int, unsigned int, unsigned int, unsigned int)
 T spv::Builder::createUnaryOp(spv::Op, unsigned int, unsigned int)
 T spv::Builder::createUndefined(unsigned int)
 T spv::Builder::createVariable(spv::StorageClass, unsigned int, char const*)
 T spv::Builder::createVectorExtractDynamic(unsigned int, unsigned int, unsigned int)
 T spv::Builder::createVectorInsertDynamic(unsigned int, unsigned int, unsigned int, unsigned int)
 T spv::Builder::eliminateDeadDecorations()
 T spv::Builder::findScalarConstant(spv::Op, spv::Op, unsigned int, unsigned int) const
 T spv::Builder::findScalarConstant(spv::Op, spv::Op, unsigned int, unsigned int, unsigned int) const
 T spv::Builder::getContainedTypeId(unsigned int) const
 T spv::Builder::getContainedTypeId(unsigned int, int) const
 T spv::Builder::getDerefTypeId(unsigned int) const
 T spv::Builder::getMostBasicTypeClass(unsigned int) const
 T spv::Builder::getNumTypeConstituents(unsigned int) const
 T spv::Builder::getScalarTypeId(unsigned int) const
 T spv::Builder::import(char const*)
 T spv::Builder::isConstantOpCode(spv::Op) const
 T spv::Builder::isSpecConstantOpCode(spv::Op) const
 T spv::Builder::leaveFunction()
 T spv::Builder::makeArrayType(unsigned int, unsigned int, int)
 T spv::Builder::makeBoolConstant(bool, bool)
 T spv::Builder::makeBoolType()
 T spv::Builder::makeDiscard()
 T spv::Builder::makeDoubleConstant(double, bool)
 T spv::Builder::makeEntryPoint(char const*)
 T spv::Builder::makeFloat16Constant(float, bool)
 T spv::Builder::makeFloatConstant(float, bool)
 T spv::Builder::makeFloatType(int)
 T spv::Builder::makeImageType(unsigned int, spv::Dim, bool, bool, bool, unsigned int, spv::ImageFormat)
 T spv::Builder::makeInt64Constant(unsigned int, unsigned long long, bool)
 T spv::Builder::makeIntConstant(unsigned int, unsigned int, bool)
 T spv::Builder::makeIntegerType(int, bool)
 T spv::Builder::makeMatrixType(unsigned int, int, int)
 T spv::Builder::makeNewBlock()
 T spv::Builder::makeNewLoop()
 T spv::Builder::makePointer(spv::StorageClass, unsigned int)
 T spv::Builder::makeReturn(bool, unsigned int)
 T spv::Builder::makeRuntimeArray(unsigned int)
 T spv::Builder::makeSampledImageType(unsigned int)
 T spv::Builder::makeSamplerType()
 T spv::Builder::makeStructResultType(unsigned int, unsigned int)
 T spv::Builder::makeVectorType(unsigned int, int)
 T spv::Builder::makeVoidType()
 T spv::Builder::promoteScalar(spv::Decoration, unsigned int&, unsigned int&)
 T spv::Builder::simplifyAccessChainSwizzle()
 T spv::Builder::smearScalar(spv::Decoration, unsigned int, unsigned int)
 T spv::Builder::transferAccessChainSwizzle(bool)
 T spv::Builder::~Builder()
 T spv::SpvBuildLogger::getAllMessages() const
 T yylex(YYSTYPE*, glslang::TParseContext&)
 T yyparse(glslang::TParseContext*)
 ThreadGetCurrentId
 ThreadInterlockedExchange64
 ThreadJoin
 ThreadMultiWait
 ThreadSleep
 ThreadYield
 V typeinfo for TCompiler
 V typeinfo for TGenericCompiler
 V typeinfo for TGenericLinker
 V typeinfo for TIntermNode
 V typeinfo for TLinker
 V typeinfo for TShHandleBase
 V typeinfo for TUniformLinkedMap
 V typeinfo for TUniformMap
 V typeinfo for glslang::HlslGrammar
 V typeinfo for glslang::HlslParseContext
 V typeinfo for glslang::HlslScanContext
 V typeinfo for glslang::HlslTokenStream
 V typeinfo for glslang::TAnonMember
 V typeinfo for glslang::TBuiltInParseables
 V typeinfo for glslang::TBuiltInParseablesHlsl
 V typeinfo for glslang::TBuiltIns
 V typeinfo for glslang::TConstTraverser
 V typeinfo for glslang::TConstUnionArray
 V typeinfo for glslang::TDefaultHlslIoResolver
 V typeinfo for glslang::TDefaultIoResolver
 V typeinfo for glslang::TDefaultIoResolverBase
 V typeinfo for glslang::TDeferredCompiler
 V typeinfo for glslang::TFunction
 V typeinfo for glslang::TIndexTraverser
 V typeinfo for glslang::TInductiveTraverser
 V typeinfo for glslang::TInputScanner
 V typeinfo for glslang::TIntermAggregate
 V typeinfo for glslang::TIntermBinary
 V typeinfo for glslang::TIntermBranch
 V typeinfo for glslang::TIntermConstantUnion
 V typeinfo for glslang::TIntermLoop
 V typeinfo for glslang::TIntermMethod
 V typeinfo for glslang::TIntermOperator
 V typeinfo for glslang::TIntermSelection
 V typeinfo for glslang::TIntermSwitch
 V typeinfo for glslang::TIntermSymbol
 V typeinfo for glslang::TIntermTraverser
 V typeinfo for glslang::TIntermTyped
 V typeinfo for glslang::TIntermUnary
 V typeinfo for glslang::TIoMapResolver
 V typeinfo for glslang::TIoMapper
 V typeinfo for glslang::TLiveTraverser
 V typeinfo for glslang::TOutputTraverser
 V typeinfo for glslang::TParseContext
 V typeinfo for glslang::TParseContextBase
 V typeinfo for glslang::TParseVersions
 V typeinfo for glslang::TPpContext
 V typeinfo for glslang::TPpContext::TokenizableIncludeFile
 V typeinfo for glslang::TPpContext::tInput
 V typeinfo for glslang::TPpContext::tMacroInput
 V typeinfo for glslang::TPpContext::tMarkerInput
 V typeinfo for glslang::TPpContext::tStringInput
 V typeinfo for glslang::TPpContext::tTokenInput
 V typeinfo for glslang::TPpContext::tUngotTokenInput
 V typeinfo for glslang::TPpContext::tZeroInput
 V typeinfo for glslang::TPrecisionManager
 V typeinfo for glslang::TProgram
 V typeinfo for glslang::TReflection
 V typeinfo for glslang::TReflectionTraverser
 V typeinfo for glslang::TRemoveTraverser
 V typeinfo for glslang::TScanContext
 V typeinfo for glslang::TShader
 V typeinfo for glslang::TShader::ForbidIncluder
 V typeinfo for glslang::TShader::Includer
 V typeinfo for glslang::TSmallArrayVector
 V typeinfo for glslang::TSymbol
 V typeinfo for glslang::TType
 V typeinfo for glslang::TVarGatherTraverser
 V typeinfo for glslang::TVarSetTraverser
 V typeinfo for glslang::TVariable
 V typeinfo for spv::Block
 V typeinfo for spv::Builder
 V typeinfo for spv::Function
 V typeinfo for spv::Instruction
 V typeinfo for spv::Module
 V typeinfo name for TCompiler
 V typeinfo name for TGenericCompiler
 V typeinfo name for TGenericLinker
 V typeinfo name for TIntermNode
 V typeinfo name for TLinker
 V typeinfo name for TShHandleBase
 V typeinfo name for TUniformLinkedMap
 V typeinfo name for TUniformMap
 V typeinfo name for glslang::HlslGrammar
 V typeinfo name for glslang::HlslParseContext
 V typeinfo name for glslang::HlslScanContext
 V typeinfo name for glslang::HlslTokenStream
 V typeinfo name for glslang::TAnonMember
 V typeinfo name for glslang::TBuiltInParseables
 V typeinfo name for glslang::TBuiltInParseablesHlsl
 V typeinfo name for glslang::TBuiltIns
 V typeinfo name for glslang::TConstTraverser
 V typeinfo name for glslang::TConstUnionArray
 V typeinfo name for glslang::TDefaultHlslIoResolver
 V typeinfo name for glslang::TDefaultIoResolver
 V typeinfo name for glslang::TDefaultIoResolverBase
 V typeinfo name for glslang::TDeferredCompiler
 V typeinfo name for glslang::TFunction
 V typeinfo name for glslang::TIndexTraverser
 V typeinfo name for glslang::TInductiveTraverser
 V typeinfo name for glslang::TInputScanner
 V typeinfo name for glslang::TIntermAggregate
 V typeinfo name for glslang::TIntermBinary
 V typeinfo name for glslang::TIntermBranch
 V typeinfo name for glslang::TIntermConstantUnion
 V typeinfo name for glslang::TIntermLoop
 V typeinfo name for glslang::TIntermMethod
 V typeinfo name for glslang::TIntermOperator
 V typeinfo name for glslang::TIntermSelection
 V typeinfo name for glslang::TIntermSwitch
 V typeinfo name for glslang::TIntermSymbol
 V typeinfo name for glslang::TIntermTraverser
 V typeinfo name for glslang::TIntermTyped
 V typeinfo name for glslang::TIntermUnary
 V typeinfo name for glslang::TIoMapResolver
 V typeinfo name for glslang::TIoMapper
 V typeinfo name for glslang::TLiveTraverser
 V typeinfo name for glslang::TOutputTraverser
 V typeinfo name for glslang::TParseContext
 V typeinfo name for glslang::TParseContextBase
 V typeinfo name for glslang::TParseVersions
 V typeinfo name for glslang::TPpContext
 V typeinfo name for glslang::TPpContext::TokenizableIncludeFile
 V typeinfo name for glslang::TPpContext::tInput
 V typeinfo name for glslang::TPpContext::tMacroInput
 V typeinfo name for glslang::TPpContext::tMarkerInput
 V typeinfo name for glslang::TPpContext::tStringInput
 V typeinfo name for glslang::TPpContext::tTokenInput
 V typeinfo name for glslang::TPpContext::tUngotTokenInput
 V typeinfo name for glslang::TPpContext::tZeroInput
 V typeinfo name for glslang::TPrecisionManager
 V typeinfo name for glslang::TProgram
 V typeinfo name for glslang::TReflection
 V typeinfo name for glslang::TReflectionTraverser
 V typeinfo name for glslang::TRemoveTraverser
 V typeinfo name for glslang::TScanContext
 V typeinfo name for glslang::TShader
 V typeinfo name for glslang::TShader::ForbidIncluder
 V typeinfo name for glslang::TShader::Includer
 V typeinfo name for glslang::TSmallArrayVector
 V typeinfo name for glslang::TSymbol
 V typeinfo name for glslang::TType
 V typeinfo name for glslang::TVarGatherTraverser
 V typeinfo name for glslang::TVarSetTraverser
 V typeinfo name for glslang::TVariable
 V typeinfo name for spv::Block
 V typeinfo name for spv::Builder
 V typeinfo name for spv::Function
 V typeinfo name for spv::Instruction
 V typeinfo name for spv::Module
 V vtable for TCompiler
 V vtable for TGenericCompiler
 V vtable for TGenericLinker
 V vtable for TIntermNode
 V vtable for TLinker
 V vtable for TShHandleBase
 V vtable for TUniformLinkedMap
 V vtable for TUniformMap
 V vtable for glslang::HlslGrammar
 V vtable for glslang::HlslParseContext
 V vtable for glslang::HlslScanContext
 V vtable for glslang::HlslTokenStream
 V vtable for glslang::TAnonMember
 V vtable for glslang::TBuiltInParseables
 V vtable for glslang::TBuiltInParseablesHlsl
 V vtable for glslang::TBuiltIns
 V vtable for glslang::TConstTraverser
 V vtable for glslang::TConstUnionArray
 V vtable for glslang::TDefaultHlslIoResolver
 V vtable for glslang::TDefaultIoResolver
 V vtable for glslang::TDefaultIoResolverBase
 V vtable for glslang::TDeferredCompiler
 V vtable for glslang::TFunction
 V vtable for glslang::TIndexTraverser
 V vtable for glslang::TInductiveTraverser
 V vtable for glslang::TInputScanner
 V vtable for glslang::TIntermAggregate
 V vtable for glslang::TIntermBinary
 V vtable for glslang::TIntermBranch
 V vtable for glslang::TIntermConstantUnion
 V vtable for glslang::TIntermLoop
 V vtable for glslang::TIntermMethod
 V vtable for glslang::TIntermOperator
 V vtable for glslang::TIntermSelection
 V vtable for glslang::TIntermSwitch
 V vtable for glslang::TIntermSymbol
 V vtable for glslang::TIntermTraverser
 V vtable for glslang::TIntermTyped
 V vtable for glslang::TIntermUnary
 V vtable for glslang::TIoMapResolver
 V vtable for glslang::TIoMapper
 V vtable for glslang::TLiveTraverser
 V vtable for glslang::TOutputTraverser
 V vtable for glslang::TParseContext
 V vtable for glslang::TParseContextBase
 V vtable for glslang::TParseVersions
 V vtable for glslang::TPpContext
 V vtable for glslang::TPpContext::TokenizableIncludeFile
 V vtable for glslang::TPpContext::tInput
 V vtable for glslang::TPpContext::tMacroInput
 V vtable for glslang::TPpContext::tMarkerInput
 V vtable for glslang::TPpContext::tStringInput
 V vtable for glslang::TPpContext::tTokenInput
 V vtable for glslang::TPpContext::tUngotTokenInput
 V vtable for glslang::TPpContext::tZeroInput
 V vtable for glslang::TPrecisionManager
 V vtable for glslang::TProgram
 V vtable for glslang::TReflection
 V vtable for glslang::TReflectionTraverser
 V vtable for glslang::TRemoveTraverser
 V vtable for glslang::TScanContext
 V vtable for glslang::TShader
 V vtable for glslang::TShader::ForbidIncluder
 V vtable for glslang::TShader::Includer
 V vtable for glslang::TSmallArrayVector
 V vtable for glslang::TSymbol
 V vtable for glslang::TType
 V vtable for glslang::TVarGatherTraverser
 V vtable for glslang::TVarSetTraverser
 V vtable for glslang::TVariable
 V vtable for spv::Block
 V vtable for spv::Builder
 V vtable for spv::Function
 V vtable for spv::Instruction
 V vtable for spv::Module
 VTT for std::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >@@GLIBCXX_3.4
 VTT for std::basic_ofstream<char, std::char_traits<char> >@@GLIBCXX_3.4
 VTT for std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >@@GLIBCXX_3.4
 VTT for std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >@@GLIBCXX_3.4
 V_CopyMemory3D
 V_FixDoubleSlashes
 V_FixSlashes
 V_GetErrno
 V_GetFileExtension
 V_IsAbsolutePath
 V_PathContainsPath
 V_RemoveDotSlashes
 V_SetErrno
 V_StrTrim
 V_StripFilename
 V_StripTrailingSlash
 V_UTF16ToUTF8
 V_UTF32ToUTF8
 V_UTF8CharsToUTF16
 V_UTF8ToUTF32
 V_UnicodeCaseConvert(char const*, char*, int, int, EStringConvertErrorPolicy)
 V_UnicodeLength(char const*)
 V_UnqualifiedFileName
 V_acos
 V_acosf
 V_asinf
 V_atan2f
 V_atanf
 V_atof
 V_atoi
 V_cosf
 V_expf
 V_fclose
 V_fmodf
 V_fopen
 V_fprintf
 V_localeconv
 V_log2
 V_logf
 V_pow
 V_powf
 V_pretifynum
 V_qsort
 V_qsort_s
 V_sinf
 V_snprintf
 V_snwprintf
 V_sscanf
 V_stricmp_fast
 V_stristr_fast(char const*, char const*)
 V_strlower_fast
 V_strspn
 V_strtod
 V_strtoi64
 V_strtoui64
 V_strupper_fast
 V_swscanf
 V_tan
 V_tanf
 V_vscprintf
 V_vsnprintf
 V_vsnprintfRet
 V_vsnprintfSize
 V_wcstod
 V_wcstoi64
 W TCompiler::getAsCompiler()
 W TCompiler::getInfoSink()
 W TCompiler::linkable()
 W TCompiler::~TCompiler()
 W TGenericCompiler::~TGenericCompiler()
 W TGenericLinker::getAttributeBindings(ShBindingTable const**) const
 W TGenericLinker::link(glslang::TVector<TCompiler*>&, TUniformMap*)
 W TGenericLinker::~TGenericLinker()
 W TInfoSink::~TInfoSink()
 W TIntermNode::getAsAggregate()
 W TIntermNode::getAsAggregate() const
 W TIntermNode::getAsBinaryNode()
 W TIntermNode::getAsBinaryNode() const
 W TIntermNode::getAsBranchNode()
 W TIntermNode::getAsBranchNode() const
 W TIntermNode::getAsConstantUnion()
 W TIntermNode::getAsConstantUnion() const
 W TIntermNode::getAsMethodNode()
 W TIntermNode::getAsMethodNode() const
 W TIntermNode::getAsOperator()
 W TIntermNode::getAsOperator() const
 W TIntermNode::getAsSelectionNode()
 W TIntermNode::getAsSelectionNode() const
 W TIntermNode::getAsSwitchNode()
 W TIntermNode::getAsSwitchNode() const
 W TIntermNode::getAsSymbolNode()
 W TIntermNode::getAsSymbolNode() const
 W TIntermNode::getAsTyped()
 W TIntermNode::getAsTyped() const
 W TIntermNode::getAsUnaryNode()
 W TIntermNode::getAsUnaryNode() const
 W TIntermNode::getLoc() const
 W TIntermNode::setLoc(glslang::TSourceLoc const&)
 W TIntermNode::~TIntermNode()
 W TLinker::getAsLinker()
 W TLinker::getInfoSink()
 W TLinker::getObjectCode() const
 W TLinker::getUniformBindings() const
 W TLinker::link(glslang::TVector<TShHandleBase*>&)
 W TLinker::setAppAttributeBindings(ShBindingTable const*)
 W TLinker::setExcludedAttributes(int const*, int)
 W TLinker::setFixedAttributeBindings(ShBindingTable const*)
 W TLinker::~TLinker()
 W TShHandleBase::getAsCompiler()
 W TShHandleBase::getAsLinker()
 W TShHandleBase::getAsUniformMap()
 W TShHandleBase::~TShHandleBase()
 W TUniformLinkedMap::getLocation(char const*)
 W TUniformLinkedMap::~TUniformLinkedMap()
 W TUniformMap::getAsUniformMap()
 W TUniformMap::getInfoSink()
 W TUniformMap::~TUniformMap()
 W _ZSt6removeIN9__gnu_cxx17__normal_iteratorIPP11TIntermNodeSt6vectorIS3_N7glslang14pool_allocatorIS3_EEEEEDnET_SC_SC_RKT0_
 W __gnu_cxx::__normal_iterator<TIntermNode**, std::vector<TIntermNode*, glslang::pool_allocator<TIntermNode*> > > std::vector<TIntermNode*, glslang::pool_allocator<TIntermNode*> >::emplace<TIntermNode*>(__gnu_cxx::__normal_iterator<TIntermNode**, std::vector<TIntermNode*, glslang::pool_allocator<TIntermNode*> > >, TIntermNode*&&)
 W bool glslang::TType::contains<glslang::TType::containsBasicType(glslang::TBasicType) const::{lambda(glslang::TType const*)#1}>(glslang::TType::containsBasicType(glslang::TBasicType) const::{lambda(glslang::TType const*)#1}) const
 W bool glslang::TType::contains<glslang::TType::containsBuiltInInterstageIO(EShLanguage) const::{lambda(glslang::TType const*)#1}>(glslang::TType::containsBuiltInInterstageIO(EShLanguage) const::{lambda(glslang::TType const*)#1}) const
 W bool glslang::TType::contains<glslang::TType::containsStructure() const::{lambda(glslang::TType const*)#1}>(glslang::TType::containsStructure() const::{lambda(glslang::TType const*)#1}) const
 W glslang::GetBuiltInVariableString(glslang::TBuiltInVariable)
 W glslang::GetStorageQualifierString(glslang::TStorageQualifier)
 W glslang::HlslGrammar::~HlslGrammar()
 W glslang::HlslParseContext::getGlobalUniformBlockName() const
 W glslang::HlslParseContext::lineContinuationCheck(glslang::TSourceLoc const&, bool)
 W glslang::HlslParseContext::lineDirectiveShouldSetNextLine() const
 W glslang::HlslParseContext::reservedPpErrorCheck(glslang::TSourceLoc const&, char const*, char const*)
 W glslang::HlslParseContext::setUniformBlockDefaults(glslang::TType&) const
 W glslang::HlslScanContext::~HlslScanContext()
 W glslang::HlslTokenStream::~HlslTokenStream()
 W glslang::NewPoolTString(char const*)
 W glslang::SameSpecializationConstants(glslang::TIntermTyped*, glslang::TIntermTyped*)
 W glslang::TAnonMember::getAnonContainer() const
 W glslang::TAnonMember::getAnonId() const
 W glslang::TAnonMember::getAsAnonMember() const
 W glslang::TAnonMember::getMemberNumber() const
 W glslang::TAnonMember::getType() const
 W glslang::TAnonMember::getWritableType()
 W glslang::TAnonMember::~TAnonMember()
 W glslang::TBuiltInParseables::getCommonString() const
 W glslang::TBuiltInParseables::getStageString(EShLanguage) const
 W glslang::TBuiltInParseablesHlsl::~TBuiltInParseablesHlsl()
 W glslang::TCall::~TCall()
 W glslang::TConstTraverser::~TConstTraverser()
 W glslang::TConstUnionArray::TConstUnionArray(int, glslang::TConstUnion const&)
 W glslang::TConstUnionArray::~TConstUnionArray()
 W glslang::TDefaultHlslIoResolver::resolveBinding(EShLanguage, char const*, glslang::TType const&, bool)
 W glslang::TDefaultHlslIoResolver::validateBinding(EShLanguage, char const*, glslang::TType const&, bool)
 W glslang::TDefaultHlslIoResolver::~TDefaultHlslIoResolver()
 W glslang::TDefaultIoResolver::resolveBinding(EShLanguage, char const*, glslang::TType const&, bool)
 W glslang::TDefaultIoResolver::validateBinding(EShLanguage, char const*, glslang::TType const&, bool)
 W glslang::TDefaultIoResolver::~TDefaultIoResolver()
 W glslang::TDefaultIoResolverBase::getFreeSlot(int, int)
 W glslang::TDefaultIoResolverBase::resolveInOutComponent(EShLanguage, char const*, glslang::TType const&, bool)
 W glslang::TDefaultIoResolverBase::resolveInOutIndex(EShLanguage, char const*, glslang::TType const&, bool)
 W glslang::TDefaultIoResolverBase::resolveInOutLocation(EShLanguage, char const*, glslang::TType const&, bool)
 W glslang::TDefaultIoResolverBase::resolveSet(EShLanguage, char const*, glslang::TType const&, bool)
 W glslang::TDefaultIoResolverBase::validateInOut(EShLanguage, char const*, glslang::TType const&, bool)
 W glslang::TDefaultIoResolverBase::~TDefaultIoResolverBase()
 W glslang::TDeferredCompiler::compile(TIntermNode*, int, EProfile)
 W glslang::TDeferredCompiler::~TDeferredCompiler()
 W glslang::TFunction::addParameter(glslang::TParameter&)
 W glslang::TFunction::addPrefix(char const*)
 W glslang::TFunction::addThisParameter(glslang::TType&, char const*)
 W glslang::TFunction::getAsFunction()
 W glslang::TFunction::getAsFunction() const
 W glslang::TFunction::getBuiltInOp() const
 W glslang::TFunction::getDeclaredBuiltInType() const
 W glslang::TFunction::getDefaultParamCount() const
 W glslang::TFunction::getFixedParamCount() const
 W glslang::TFunction::getMangledName() const
 W glslang::TFunction::getParamCount() const
 W glslang::TFunction::getType() const
 W glslang::TFunction::getWritableType()
 W glslang::TFunction::hasIllegalImplicitThis() const
 W glslang::TFunction::hasImplicitThis() const
 W glslang::TFunction::isDefined() const
 W glslang::TFunction::isPrototyped() const
 W glslang::TFunction::operator[](int)
 W glslang::TFunction::operator[](int) const
 W glslang::TFunction::relateToOperator(glslang::TOperator)
 W glslang::TFunction::setDefined()
 W glslang::TFunction::setIllegalImplicitThis()
 W glslang::TFunction::setImplicitThis()
 W glslang::TFunction::setPrototyped()
 W glslang::TIndexTraverser::~TIndexTraverser()
 W glslang::TInductiveTraverser::~TInductiveTraverser()
 W glslang::TInfoSinkBase::message(glslang::TPrefixType, char const*)
 W glslang::TInfoSinkBase::operator<<(int)
 W glslang::TInfoSinkBase::prefix(glslang::TPrefixType)
 W glslang::TInputScanner::TInputScanner(int, char const* const*, unsigned long*, char const* const*, int, int, bool)
 W glslang::TInputScanner::get()
 W glslang::TInputScanner::getLastValidSourceIndex() const
 W glslang::TInputScanner::unget()
 W glslang::TInputScanner::~TInputScanner()
 W glslang::TIntermAggregate::TIntermAggregate()
 W glslang::TIntermAggregate::TIntermAggregate(glslang::TOperator)
 W glslang::TIntermAggregate::getAsAggregate()
 W glslang::TIntermAggregate::getAsAggregate() const
 W glslang::TIntermAggregate::getName() const
 W glslang::TIntermAggregate::getQualifierList()
 W glslang::TIntermAggregate::getQualifierList() const
 W glslang::TIntermAggregate::getSequence()
 W glslang::TIntermAggregate::getSequence() const
 W glslang::TIntermAggregate::isUserDefined()
 W glslang::TIntermAggregate::setOperator(glslang::TOperator)
 W glslang::TIntermAggregate::setUserDefined()
 W glslang::TIntermAggregate::~TIntermAggregate()
 W glslang::TIntermBinary::getAsBinaryNode()
 W glslang::TIntermBinary::getAsBinaryNode() const
 W glslang::TIntermBinary::getLeft() const
 W glslang::TIntermBinary::getRight() const
 W glslang::TIntermBinary::setLeft(glslang::TIntermTyped*)
 W glslang::TIntermBinary::setRight(glslang::TIntermTyped*)
 W glslang::TIntermBinary::~TIntermBinary()
 W glslang::TIntermBranch::getAsBranchNode()
 W glslang::TIntermBranch::getAsBranchNode() const
 W glslang::TIntermBranch::~TIntermBranch()
 W glslang::TIntermConstantUnion::getAsConstantUnion()
 W glslang::TIntermConstantUnion::getAsConstantUnion() const
 W glslang::TIntermConstantUnion::~TIntermConstantUnion()
 W glslang::TIntermLoop::~TIntermLoop()
 W glslang::TIntermMethod::getAsMethodNode()
 W glslang::TIntermMethod::getAsMethodNode() const
 W glslang::TIntermMethod::getMethodName() const
 W glslang::TIntermMethod::getObject() const
 W glslang::TIntermMethod::~TIntermMethod()
 W glslang::TIntermOperator::getAsOperator()
 W glslang::TIntermOperator::getAsOperator() const
 W glslang::TIntermOperator::~TIntermOperator()
 W glslang::TIntermSelection::getAsSelectionNode()
 W glslang::TIntermSelection::getAsSelectionNode() const
 W glslang::TIntermSelection::getCondition() const
 W glslang::TIntermSelection::getFalseBlock() const
 W glslang::TIntermSelection::getTrueBlock() const
 W glslang::TIntermSelection::~TIntermSelection()
 W glslang::TIntermSwitch::getAsSwitchNode()
 W glslang::TIntermSwitch::getAsSwitchNode() const
 W glslang::TIntermSwitch::getBody() const
 W glslang::TIntermSwitch::getCondition() const
 W glslang::TIntermSwitch::~TIntermSwitch()
 W glslang::TIntermSymbol::getAsSymbolNode()
 W glslang::TIntermSymbol::getAsSymbolNode() const
 W glslang::TIntermSymbol::getId() const
 W glslang::TIntermSymbol::getName() const
 W glslang::TIntermSymbol::~TIntermSymbol()
 W glslang::TIntermTraverser::visitAggregate(glslang::TVisit, glslang::TIntermAggregate*)
 W glslang::TIntermTraverser::visitBinary(glslang::TVisit, glslang::TIntermBinary*)
 W glslang::TIntermTraverser::visitBranch(glslang::TVisit, glslang::TIntermBranch*)
 W glslang::TIntermTraverser::visitConstantUnion(glslang::TIntermConstantUnion*)
 W glslang::TIntermTraverser::visitLoop(glslang::TVisit, glslang::TIntermLoop*)
 W glslang::TIntermTraverser::visitSelection(glslang::TVisit, glslang::TIntermSelection*)
 W glslang::TIntermTraverser::visitSwitch(glslang::TVisit, glslang::TIntermSwitch*)
 W glslang::TIntermTraverser::visitSymbol(glslang::TIntermSymbol*)
 W glslang::TIntermTraverser::visitUnary(glslang::TVisit, glslang::TIntermUnary*)
 W glslang::TIntermTraverser::~TIntermTraverser()
 W glslang::TIntermTyped* glslang::TIntermediate::addSwizzle<glslang::TMatrixSelector>(glslang::TSwizzleSelectors<glslang::TMatrixSelector>&, glslang::TSourceLoc const&)
 W glslang::TIntermTyped* glslang::TIntermediate::addSwizzle<int>(glslang::TSwizzleSelectors<int>&, glslang::TSourceLoc const&)
 W glslang::TIntermTyped::TIntermTyped(glslang::TBasicType)
 W glslang::TIntermTyped::TIntermTyped(glslang::TType const&)
 W glslang::TIntermTyped::getAsTyped()
 W glslang::TIntermTyped::getAsTyped() const
 W glslang::TIntermTyped::getBasicType() const
 W glslang::TIntermTyped::getMatrixCols() const
 W glslang::TIntermTyped::getMatrixRows() const
 W glslang::TIntermTyped::getQualifier()
 W glslang::TIntermTyped::getQualifier() const
 W glslang::TIntermTyped::getType() const
 W glslang::TIntermTyped::getVectorSize() const
 W glslang::TIntermTyped::getWritableType()
 W glslang::TIntermTyped::isArray() const
 W glslang::TIntermTyped::isMatrix() const
 W glslang::TIntermTyped::isScalar() const
 W glslang::TIntermTyped::isStruct() const
 W glslang::TIntermTyped::isVector() const
 W glslang::TIntermTyped::setType(glslang::TType const&)
 W glslang::TIntermTyped::~TIntermTyped()
 W glslang::TIntermUnary::getAsUnaryNode()
 W glslang::TIntermUnary::getAsUnaryNode() const
 W glslang::TIntermUnary::getOperand()
 W glslang::TIntermUnary::getOperand() const
 W glslang::TIntermUnary::setOperand(glslang::TIntermTyped*)
 W glslang::TIntermUnary::~TIntermUnary()
 W glslang::TIntermediate::TIntermediate(EShLanguage, int, EProfile)
 W glslang::TIntermediate::~TIntermediate()
 W glslang::TIoMapResolver::~TIoMapResolver()
 W glslang::TIoMapper::~TIoMapper()
 W glslang::TLiveTraverser::visitAggregate(glslang::TVisit, glslang::TIntermAggregate*)
 W glslang::TLiveTraverser::visitSelection(glslang::TVisit, glslang::TIntermSelection*)
 W glslang::TLiveTraverser::~TLiveTraverser()
 W glslang::TOutputTraverser::~TOutputTraverser()
 W glslang::TParseContextBase::finalizeGlobalUniformBlockLayout(glslang::TVariable&)
 W glslang::TParseContextBase::getGlobalUniformBlockName() const
 W glslang::TParseContextBase::notifyErrorDirective(int, char const*)
 W glslang::TParseContextBase::notifyExtensionDirective(int, char const*, char const*)
 W glslang::TParseContextBase::notifyLineDirective(int, int, bool, int, char const*)
 W glslang::TParseContextBase::notifyVersion(int, int, char const*)
 W glslang::TParseContextBase::setUniformBlockDefaults(glslang::TType&) const
 W glslang::TParseContextBase::~TParseContextBase()
 W glslang::TParseVersions::~TParseVersions()
 W glslang::TPpContext::TokenizableIncludeFile::getch()
 W glslang::TPpContext::TokenizableIncludeFile::notifyActivated()
 W glslang::TPpContext::TokenizableIncludeFile::notifyDeleted()
 W glslang::TPpContext::TokenizableIncludeFile::scan(glslang::TPpToken*)
 W glslang::TPpContext::TokenizableIncludeFile::ungetch()
 W glslang::TPpContext::TokenizableIncludeFile::~TokenizableIncludeFile()
 W glslang::TPpContext::pushInput(glslang::TPpContext::tInput*)
 W glslang::TPpContext::scanToken(glslang::TPpToken*)
 W glslang::TPpContext::tInput::endOfReplacementList()
 W glslang::TPpContext::tInput::notifyActivated()
 W glslang::TPpContext::tInput::notifyDeleted()
 W glslang::TPpContext::tInput::peekPasting()
 W glslang::TPpContext::tInput::~tInput()
 W glslang::TPpContext::tMacroInput::endOfReplacementList()
 W glslang::TPpContext::tMacroInput::getch()
 W glslang::TPpContext::tMacroInput::peekPasting()
 W glslang::TPpContext::tMacroInput::ungetch()
 W glslang::TPpContext::tMacroInput::~tMacroInput()
 W glslang::TPpContext::tMarkerInput::getch()
 W glslang::TPpContext::tMarkerInput::scan(glslang::TPpToken*)
 W glslang::TPpContext::tMarkerInput::ungetch()
 W glslang::TPpContext::tMarkerInput::~tMarkerInput()
 W glslang::TPpContext::tStringInput::getch()
 W glslang::TPpContext::tStringInput::ungetch()
 W glslang::TPpContext::tStringInput::~tStringInput()
 W glslang::TPpContext::tTokenInput::getch()
 W glslang::TPpContext::tTokenInput::peekPasting()
 W glslang::TPpContext::tTokenInput::scan(glslang::TPpToken*)
 W glslang::TPpContext::tTokenInput::ungetch()
 W glslang::TPpContext::tTokenInput::~tTokenInput()
 W glslang::TPpContext::tUngotTokenInput::getch()
 W glslang::TPpContext::tUngotTokenInput::ungetch()
 W glslang::TPpContext::tUngotTokenInput::~tUngotTokenInput()
 W glslang::TPpContext::tZeroInput::getch()
 W glslang::TPpContext::tZeroInput::ungetch()
 W glslang::TPpContext::tZeroInput::~tZeroInput()
 W glslang::TPrecisionManager::~TPrecisionManager()
 W glslang::TPublicType::init(glslang::TSourceLoc const&, bool)
 W glslang::TQualifier::getBlendEquationString(glslang::TBlendEquationShift)
 W glslang::TQualifier::getGeometryString(glslang::TLayoutGeometry)
 W glslang::TQualifier::getLayoutFormatString(glslang::TLayoutFormat)
 W glslang::TQualifier::hasLayout() const
 W glslang::TQualifier::isMemory() const
 W glslang::TQualifier::makeTemporary()
 W glslang::TReflection::~TReflection()
 W glslang::TReflectionTraverser::addDereferencedUniform(glslang::TIntermBinary*)
 W glslang::TReflectionTraverser::getBlockSize(glslang::TType const&)
 W glslang::TReflectionTraverser::mapToGlType(glslang::TType const&)
 W glslang::TReflectionTraverser::~TReflectionTraverser()
 W glslang::TRemoveTraverser::visitAggregate(glslang::TVisit, glslang::TIntermAggregate*)
 W glslang::TRemoveTraverser::visitBinary(glslang::TVisit, glslang::TIntermBinary*)
 W glslang::TRemoveTraverser::visitBranch(glslang::TVisit, glslang::TIntermBranch*)
 W glslang::TRemoveTraverser::visitConstantUnion(glslang::TIntermConstantUnion*)
 W glslang::TRemoveTraverser::visitLoop(glslang::TVisit, glslang::TIntermLoop*)
 W glslang::TRemoveTraverser::visitSelection(glslang::TVisit, glslang::TIntermSelection*)
 W glslang::TRemoveTraverser::visitSwitch(glslang::TVisit, glslang::TIntermSwitch*)
 W glslang::TRemoveTraverser::visitSymbol(glslang::TIntermSymbol*)
 W glslang::TRemoveTraverser::visitUnary(glslang::TVisit, glslang::TIntermUnary*)
 W glslang::TRemoveTraverser::~TRemoveTraverser()
 W glslang::TSampler::getString() const
 W glslang::TScanContext::~TScanContext()
 W glslang::TShader::ForbidIncluder::releaseInclude(glslang::TShader::Includer::IncludeResult*)
 W glslang::TShader::ForbidIncluder::~ForbidIncluder()
 W glslang::TShader::Includer::includeLocal(char const*, char const*, unsigned long)
 W glslang::TShader::Includer::includeSystem(char const*, char const*, unsigned long)
 W glslang::TShader::Includer::~Includer()
 W glslang::TShaderQualifiers::merge(glslang::TShaderQualifiers const&)
 W glslang::TSmallArrayVector::push_back(unsigned int, glslang::TIntermTyped*)
 W glslang::TSmallArrayVector::~TSmallArrayVector()
 W glslang::TSourceLoc::getStringNameOrNum(bool) const
 W glslang::TStringAtomMap::getAtom(char const*) const
 W glslang::TSymbol::addPrefix(char const*)
 W glslang::TSymbol::getAsAnonMember() const
 W glslang::TSymbol::getAsFunction()
 W glslang::TSymbol::getAsFunction() const
 W glslang::TSymbol::getAsVariable()
 W glslang::TSymbol::getAsVariable() const
 W glslang::TSymbol::getExtensions() const
 W glslang::TSymbol::getMangledName() const
 W glslang::TSymbol::getName() const
 W glslang::TSymbol::getNumExtensions() const
 W glslang::TSymbol::getUniqueId() const
 W glslang::TSymbol::isReadOnly() const
 W glslang::TSymbol::makeReadOnly()
 W glslang::TSymbol::setExtensions(int, char const* const*)
 W glslang::TSymbol::setUniqueId(int)
 W glslang::TSymbol::~TSymbol()
 W glslang::TSymbolTable::insert(glslang::TSymbol&)
 W glslang::TSymbolTable::pop(glslang::TPrecisionQualifier*)
 W glslang::TSymbolTable::push()
 W glslang::TSymbolTable::relateToOperator(char const*, glslang::TOperator)
 W glslang::TSymbolTable::setFunctionExtensions(char const*, int, char const* const*)
 W glslang::TSymbolTable::setVariableExtensions(char const*, int, char const* const*)
 W glslang::TSymbolTable::~TSymbolTable()
 W glslang::TSymbolTableLevel::insert(glslang::TSymbol&, bool)
 W glslang::TType::TType(glslang::TBasicType, glslang::TStorageQualifier, glslang::TPrecisionQualifier, int, int, int, bool)
 W glslang::TType::TType(glslang::TBasicType, glslang::TStorageQualifier, int, int, int, bool)
 W glslang::TType::TType(glslang::TPublicType const&)
 W glslang::TType::TType(glslang::TType const&, int, bool)
 W glslang::TType::adoptImplicitArraySizes()
 W glslang::TType::computeNumComponents() const
 W glslang::TType::containsArray() const
 W glslang::TType::containsBasicType(glslang::TBasicType) const
 W glslang::TType::containsBuiltInInterstageIO(EShLanguage) const
 W glslang::TType::containsImplicitlySizedArray() const
 W glslang::TType::containsNonOpaque() const
 W glslang::TType::containsOpaque() const
 W glslang::TType::containsSpecializationSize() const
 W glslang::TType::containsStructure() const
 W glslang::TType::getArraySizes()
 W glslang::TType::getArraySizes() const
 W glslang::TType::getBasicString(glslang::TBasicType)
 W glslang::TType::getBasicType() const
 W glslang::TType::getBasicTypeString() const
 W glslang::TType::getCompleteString() const
 W glslang::TType::getCompleteString() const::{lambda(int)#3}::operator()(int) const
 W glslang::TType::getCompleteString() const::{lambda(unsigned int)#2}::operator()(unsigned int) const
 W glslang::TType::getCumulativeArraySize() const
 W glslang::TType::getFieldName() const
 W glslang::TType::getImplicitArraySize() const
 W glslang::TType::getMatrixCols() const
 W glslang::TType::getMatrixRows() const
 W glslang::TType::getOuterArrayNode() const
 W glslang::TType::getOuterArraySize() const
 W glslang::TType::getQualifier()
 W glslang::TType::getQualifier() const
 W glslang::TType::getSampler() const
 W glslang::TType::getTypeName() const
 W glslang::TType::getVectorSize() const
 W glslang::TType::hiddenMember() const
 W glslang::TType::hideMember()
 W glslang::TType::isArray() const
 W glslang::TType::isArrayOfArrays() const
 W glslang::TType::isBuiltInInterstageIO(EShLanguage) const
 W glslang::TType::isExplicitlySizedArray() const
 W glslang::TType::isFloatingDomain() const
 W glslang::TType::isImage() const
 W glslang::TType::isImplicitlySizedArray() const
 W glslang::TType::isLooseAndBuiltIn(EShLanguage) const
 W glslang::TType::isMatrix() const
 W glslang::TType::isOpaque() const
 W glslang::TType::isPerVertexAndBuiltIn(EShLanguage) const
 W glslang::TType::isRuntimeSizedArray() const
 W glslang::TType::isScalar() const
 W glslang::TType::isScalarOrVec1() const
 W glslang::TType::isStruct() const
 W glslang::TType::isSubpass() const
 W glslang::TType::isVector() const
 W glslang::TType::mergeType(glslang::TPublicType const&)
 W glslang::TType::operator==(glslang::TType const&) const
 W glslang::TType::sameElementShape(glslang::TType const&) const
 W glslang::TType::sameStructType(glslang::TType const&) const
 W glslang::TType::shallowCopy(glslang::TType const&)
 W glslang::TType::~TType()
 W glslang::TVarGatherTraverser::visitSymbol(glslang::TIntermSymbol*)
 W glslang::TVarGatherTraverser::~TVarGatherTraverser()
 W glslang::TVarSetTraverser::visitSymbol(glslang::TIntermSymbol*)
 W glslang::TVarSetTraverser::~TVarSetTraverser()
 W glslang::TVariable::getAnonId() const
 W glslang::TVariable::getAsVariable()
 W glslang::TVariable::getAsVariable() const
 W glslang::TVariable::getConstArray() const
 W glslang::TVariable::getConstSubtree() const
 W glslang::TVariable::getType() const
 W glslang::TVariable::getWritableConstArray()
 W glslang::TVariable::getWritableType()
 W glslang::TVariable::isUserType() const
 W glslang::TVariable::setAnonId(int)
 W glslang::TVariable::setConstArray(glslang::TConstUnionArray const&)
 W glslang::TVariable::setConstSubtree(glslang::TIntermTyped*)
 W glslang::TVariable::~TVariable()
 W spv::Block::Block(unsigned int, spv::Function&)
 W spv::Block::~Block()
 W spv::Builder::AccessChain::~AccessChain()
 W spv::Builder::addExtension(char const*)
 W spv::Builder::makeInt64Constant(long long, bool)
 W spv::Builder::makeIntConstant(int, bool)
 W spv::Builder::makeUint64Constant(unsigned long long, bool)
 W spv::Builder::makeUintConstant(unsigned int, bool)
 W spv::Function::~Function()
 W spv::Instruction::addStringOperand(char const*)
 W spv::Instruction::~Instruction()
 W spv::Module::mapInstruction(spv::Instruction*)
 W spv::Module::~Module()
 W spv::SpvBuildLogger::~SpvBuildLogger()
 W std::_Rb_tree_iterator<std::pair<glslang::TVector<glslang::TTypeLoc> const* const, glslang::HlslParseContext::tIoKinds> > std::_Rb_tree<glslang::TVector<glslang::TTypeLoc> const*, std::pair<glslang::TVector<glslang::TTypeLoc> const* const, glslang::HlslParseContext::tIoKinds>, std::_Select1st<std::pair<glslang::TVector<glslang::TTypeLoc> const* const, glslang::HlslParseContext::tIoKinds> >, std::less<glslang::TVector<glslang::TTypeLoc> const*>, glslang::pool_allocator<std::pair<glslang::TVector<glslang::TTypeLoc> const* const, glslang::HlslParseContext::tIoKinds> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<glslang::TVector<glslang::TTypeLoc> const*&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<glslang::TVector<glslang::TTypeLoc> const* const, glslang::HlslParseContext::tIoKinds> >, std::piecewise_construct_t const&, std::tuple<glslang::TVector<glslang::TTypeLoc> const*&&>&&, std::tuple<>&&)
 W std::_Rb_tree_iterator<std::pair<glslang::TVector<glslang::TTypeLoc>* const, glslang::TVector<glslang::TTypeLoc>*> > std::_Rb_tree<glslang::TVector<glslang::TTypeLoc>*, std::pair<glslang::TVector<glslang::TTypeLoc>* const, glslang::TVector<glslang::TTypeLoc>*>, std::_Select1st<std::pair<glslang::TVector<glslang::TTypeLoc>* const, glslang::TVector<glslang::TTypeLoc>*> >, std::less<glslang::TVector<glslang::TTypeLoc>*>, glslang::pool_allocator<std::pair<glslang::TVector<glslang::TTypeLoc>* const, glslang::TVector<glslang::TTypeLoc>*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<glslang::TVector<glslang::TTypeLoc>* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<glslang::TVector<glslang::TTypeLoc>* const, glslang::TVector<glslang::TTypeLoc>*> >, std::piecewise_construct_t const&, std::tuple<glslang::TVector<glslang::TTypeLoc>* const&>&&, std::tuple<>&&)
 W std::_Rb_tree_iterator<std::pair<int const, glslang::HlslParseContext::TFlattenData> > std::_Rb_tree<int, std::pair<int const, glslang::HlslParseContext::TFlattenData>, std::_Select1st<std::pair<int const, glslang::HlslParseContext::TFlattenData> >, std::less<int>, glslang::pool_allocator<std::pair<int const, glslang::HlslParseContext::TFlattenData> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, glslang::HlslParseContext::TFlattenData> >, std::piecewise_construct_t const&, std::tuple<int&&>&&, std::tuple<>&&)
 W std::_Rb_tree_iterator<std::pair<int const, glslang::TPpContext::MacroSymbol> > std::_Rb_tree<int, std::pair<int const, glslang::TPpContext::MacroSymbol>, std::_Select1st<std::pair<int const, glslang::TPpContext::MacroSymbol> >, std::less<int>, glslang::pool_allocator<std::pair<int const, glslang::TPpContext::MacroSymbol> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, glslang::TPpContext::MacroSymbol> >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&)
 W std::_Rb_tree_iterator<std::pair<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const, bool> > std::_Rb_tree<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> >, std::pair<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const, bool>, std::_Select1st<std::pair<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const, bool> >, std::less<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > >, glslang::pool_allocator<std::pair<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const, bool> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const, bool> >, std::piecewise_construct_t const&, std::tuple<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const&>&&, std::tuple<>&&)
 W std::_Rb_tree_iterator<std::pair<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const, glslang::TBuiltInVariable> > std::_Rb_tree<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> >, std::pair<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const, glslang::TBuiltInVariable>, std::_Select1st<std::pair<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const, glslang::TBuiltInVariable> >, std::less<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > >, glslang::pool_allocator<std::pair<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const, glslang::TBuiltInVariable> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const, glslang::TBuiltInVariable> >, std::piecewise_construct_t const&, std::tuple<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const&>&&, std::tuple<>&&)
 W std::_Rb_tree_iterator<std::pair<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const, glslang::TExtensionBehavior> > std::_Rb_tree<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> >, std::pair<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const, glslang::TExtensionBehavior>, std::_Select1st<std::pair<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const, glslang::TExtensionBehavior> >, std::less<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > >, glslang::pool_allocator<std::pair<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const, glslang::TExtensionBehavior> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> >&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const, glslang::TExtensionBehavior> >, std::piecewise_construct_t const&, std::tuple<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> >&&>&&, std::tuple<>&&)
 W std::_Rb_tree_iterator<std::pair<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const, int> > std::_Rb_tree<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> >, std::pair<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const, int>, std::_Select1st<std::pair<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const, int> >, std::less<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > >, std::allocator<std::pair<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const, int> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const, int> >, std::piecewise_construct_t const&, std::tuple<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const&>&&, std::tuple<>&&)
 W std::_Rb_tree_node<std::pair<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const, std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > > >* std::_Rb_tree<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> >, std::pair<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const, std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > >, std::_Select1st<std::pair<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const, std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > > >, std::less<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > >, glslang::pool_allocator<std::pair<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const, std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > > > >::_M_create_node<std::pair<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const, std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > > const&>(std::pair<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const, std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > > const&)
 W std::_Tuple_impl<0ul, std::unordered_multimap<std::string, glslang::TIntermOperator*, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::pair<std::string const, glslang::TIntermOperator*> > >, std::unordered_map<glslang::TIntermTyped*, std::string, std::hash<glslang::TIntermTyped*>, std::equal_to<glslang::TIntermTyped*>, std::allocator<std::pair<glslang::TIntermTyped* const, std::string> > >, std::unordered_set<std::string, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::string> >, std::unordered_set<glslang::TIntermBranch*, std::hash<glslang::TIntermBranch*>, std::equal_to<glslang::TIntermBranch*>, std::allocator<glslang::TIntermBranch*> > >::~_Tuple_impl()
 W std::_Tuple_impl<1ul, std::unordered_map<glslang::TIntermTyped*, std::string, std::hash<glslang::TIntermTyped*>, std::equal_to<glslang::TIntermTyped*>, std::allocator<std::pair<glslang::TIntermTyped* const, std::string> > >, std::unordered_set<std::string, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::string> >, std::unordered_set<glslang::TIntermBranch*, std::hash<glslang::TIntermBranch*>, std::equal_to<glslang::TIntermBranch*>, std::allocator<glslang::TIntermBranch*> > >::~_Tuple_impl()
 W std::_Tuple_impl<2ul, std::unordered_set<std::string, std::hash<std::string>, std::equal_to<std::string>, std::allocator<std::string> >, std::unordered_set<glslang::TIntermBranch*, std::hash<glslang::TIntermBranch*>, std::equal_to<glslang::TIntermBranch*>, std::allocator<glslang::TIntermBranch*> > >::~_Tuple_impl()
 W std::__detail::_Hash_node<std::pair<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const, int>, true>* std::_Hashtable<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> >, std::pair<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const, int>, glslang::pool_allocator<std::pair<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const, int> >, std::__detail::_Select1st, std::equal_to<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > >, std::hash<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_allocate_node<std::pair<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> >, int> >(std::pair<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> >, int>&&)
 W void std::deque<spv::Block*, std::allocator<spv::Block*> >::_M_push_back_aux<spv::Block* const&>(spv::Block* const&)
 W void std::deque<spv::Builder::LoopBlocks, std::allocator<spv::Builder::LoopBlocks> >::_M_push_back_aux<spv::Builder::LoopBlocks const&>(spv::Builder::LoopBlocks const&)
 W void std::vector<TIntermNode*, glslang::pool_allocator<TIntermNode*> >::_M_emplace_back_aux<TIntermNode* const&>(TIntermNode* const&)
 W void std::vector<TIntermNode*, glslang::pool_allocator<TIntermNode*> >::_M_emplace_back_aux<TIntermNode*>(TIntermNode*&&)
 W void std::vector<TIntermNode*, glslang::pool_allocator<TIntermNode*> >::emplace_back<TIntermNode*>(TIntermNode*&&)
 W void std::vector<TIntermNode*, std::allocator<TIntermNode*> >::_M_emplace_back_aux<TIntermNode* const&>(TIntermNode* const&)
 W void std::vector<TIntermNode*, std::allocator<TIntermNode*> >::_M_emplace_back_aux<TIntermNode*>(TIntermNode*&&)
 W void std::vector<TShHandleBase*, glslang::pool_allocator<TShHandleBase*> >::_M_emplace_back_aux<TShHandleBase*>(TShHandleBase*&&)
 W void std::vector<char const*, std::allocator<char const*> >::_M_emplace_back_aux<char const* const&>(char const* const&)
 W void std::vector<glslang::HlslParseContext::tInterstageIoData, std::allocator<glslang::HlslParseContext::tInterstageIoData> >::_M_emplace_back_aux<glslang::HlslParseContext::tInterstageIoData const&>(glslang::HlslParseContext::tInterstageIoData const&)
 W void std::vector<glslang::HlslToken, glslang::pool_allocator<glslang::HlslToken> >::_M_emplace_back_aux<glslang::HlslToken const&>(glslang::HlslToken const&)
 W void std::vector<glslang::TArraySize, glslang::pool_allocator<glslang::TArraySize> >::_M_emplace_back_aux<glslang::TArraySize const&>(glslang::TArraySize const&)
 W void std::vector<glslang::TConstUnionArray, glslang::pool_allocator<glslang::TConstUnionArray> >::_M_emplace_back_aux<glslang::TConstUnionArray const&>(glslang::TConstUnionArray const&)
 W void std::vector<glslang::TFunction const*, glslang::pool_allocator<glslang::TFunction const*> >::_M_emplace_back_aux<glslang::TFunction const*>(glslang::TFunction const*&&)
 W void std::vector<glslang::TIntermTyped*, glslang::pool_allocator<glslang::TIntermTyped*> >::_M_emplace_back_aux<glslang::TIntermTyped* const&>(glslang::TIntermTyped* const&)
 W void std::vector<glslang::TIoRange, std::allocator<glslang::TIoRange> >::_M_emplace_back_aux<glslang::TIoRange const&>(glslang::TIoRange const&)
 W void std::vector<glslang::TObjectReflection, std::allocator<glslang::TObjectReflection> >::_M_emplace_back_aux<glslang::TObjectReflection>(glslang::TObjectReflection&&)
 W void std::vector<glslang::TObjectReflection, std::allocator<glslang::TObjectReflection> >::emplace_back<glslang::TObjectReflection>(glslang::TObjectReflection&&)
 W void std::vector<glslang::TOffsetRange, std::allocator<glslang::TOffsetRange> >::_M_emplace_back_aux<glslang::TOffsetRange const&>(glslang::TOffsetRange const&)
 W void std::vector<glslang::TParameter, glslang::pool_allocator<glslang::TParameter> >::_M_emplace_back_aux<glslang::TParameter const&>(glslang::TParameter const&)
 W void std::vector<glslang::TParameter, glslang::pool_allocator<glslang::TParameter> >::_M_insert_aux<glslang::TParameter const&>(__gnu_cxx::__normal_iterator<glslang::TParameter*, std::vector<glslang::TParameter, glslang::pool_allocator<glslang::TParameter> > >, glslang::TParameter const&)
 W void std::vector<glslang::TParameter, glslang::pool_allocator<glslang::TParameter> >::_M_insert_aux<glslang::TParameter>(__gnu_cxx::__normal_iterator<glslang::TParameter*, std::vector<glslang::TParameter, glslang::pool_allocator<glslang::TParameter> > >, glslang::TParameter&&)
 W void std::vector<glslang::TPoolAllocator::tAllocState, std::allocator<glslang::TPoolAllocator::tAllocState> >::_M_emplace_back_aux<glslang::TPoolAllocator::tAllocState const&>(glslang::TPoolAllocator::tAllocState const&)
 W void std::vector<glslang::TPpContext::tInput*, std::allocator<glslang::TPpContext::tInput*> >::_M_emplace_back_aux<glslang::TPpContext::tInput* const&>(glslang::TPpContext::tInput* const&)
 W void std::vector<glslang::TRange, std::allocator<glslang::TRange> >::_M_emplace_back_aux<glslang::TRange const&>(glslang::TRange const&)
 W void std::vector<glslang::TSymbol*, glslang::pool_allocator<glslang::TSymbol*> >::_M_emplace_back_aux<glslang::TSymbol* const&>(glslang::TSymbol* const&)
 W void std::vector<glslang::TSymbol*, glslang::pool_allocator<glslang::TSymbol*> >::_M_emplace_back_aux<glslang::TSymbol*>(glslang::TSymbol*&&)
 W void std::vector<glslang::TSymbolTableLevel*, std::allocator<glslang::TSymbolTableLevel*> >::_M_emplace_back_aux<glslang::TSymbolTableLevel* const&>(glslang::TSymbolTableLevel* const&)
 W void std::vector<glslang::TSymbolTableLevel*, std::allocator<glslang::TSymbolTableLevel*> >::_M_emplace_back_aux<glslang::TSymbolTableLevel*>(glslang::TSymbolTableLevel*&&)
 W void std::vector<glslang::TType const*, std::allocator<glslang::TType const*> >::_M_emplace_back_aux<glslang::TType const*>(glslang::TType const*&&)
 W void std::vector<glslang::TType*, glslang::pool_allocator<glslang::TType*> >::_M_emplace_back_aux<glslang::TType* const&>(glslang::TType* const&)
 W void std::vector<glslang::TTypeLoc, glslang::pool_allocator<glslang::TTypeLoc> >::_M_emplace_back_aux<glslang::TTypeLoc const&>(glslang::TTypeLoc const&)
 W void std::vector<glslang::TVarEntryInfo, std::allocator<glslang::TVarEntryInfo> >::_M_insert_aux<glslang::TVarEntryInfo const&>(__gnu_cxx::__normal_iterator<glslang::TVarEntryInfo*, std::vector<glslang::TVarEntryInfo, std::allocator<glslang::TVarEntryInfo> > >, glslang::TVarEntryInfo const&)
 W void std::vector<glslang::TVarEntryInfo, std::allocator<glslang::TVarEntryInfo> >::_M_insert_aux<glslang::TVarEntryInfo>(__gnu_cxx::__normal_iterator<glslang::TVarEntryInfo*, std::vector<glslang::TVarEntryInfo, std::allocator<glslang::TVarEntryInfo> > >, glslang::TVarEntryInfo&&)
 W void std::vector<glslang::TVariable*, glslang::pool_allocator<glslang::TVariable*> >::_M_emplace_back_aux<glslang::TVariable* const&>(glslang::TVariable* const&)
 W void std::vector<glslang::TVariable*, glslang::pool_allocator<glslang::TVariable*> >::_M_emplace_back_aux<glslang::TVariable*>(glslang::TVariable*&&)
 W void std::vector<glslang::TVector<glslang::HlslToken> const*, glslang::pool_allocator<glslang::TVector<glslang::HlslToken> const*> >::_M_emplace_back_aux<glslang::TVector<glslang::HlslToken> const* const&>(glslang::TVector<glslang::HlslToken> const* const&)
 W void std::vector<int, glslang::pool_allocator<int> >::_M_emplace_back_aux<int const&>(int const&)
 W void std::vector<int, glslang::pool_allocator<int> >::_M_emplace_back_aux<int>(int&&)
 W void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int const&>(int const&)
 W void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&)
 W void std::vector<int, std::allocator<int> >::_M_insert_aux<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
 W void std::vector<spv::Block*, std::allocator<spv::Block*> >::_M_emplace_back_aux<spv::Block* const&>(spv::Block* const&)
 W void std::vector<spv::Block*, std::allocator<spv::Block*> >::_M_emplace_back_aux<spv::Block*>(spv::Block*&&)
 W void std::vector<spv::Builder::AccessChain, std::allocator<spv::Builder::AccessChain> >::_M_emplace_back_aux<spv::Builder::AccessChain>(spv::Builder::AccessChain&&)
 W void std::vector<spv::Decoration, std::allocator<spv::Decoration> >::_M_emplace_back_aux<spv::Decoration>(spv::Decoration&&)
 W void std::vector<spv::Function*, std::allocator<spv::Function*> >::_M_emplace_back_aux<spv::Function* const&>(spv::Function* const&)
 W void std::vector<spv::Instruction*, std::allocator<spv::Instruction*> >::_M_emplace_back_aux<spv::Instruction* const&>(spv::Instruction* const&)
 W void std::vector<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> >*, glslang::pool_allocator<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> >*> >::_M_emplace_back_aux<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> >* const&>(std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> >* const&)
 W void std::vector<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> >, glslang::pool_allocator<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > > >::_M_emplace_back_aux<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > >(std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> >&&)
 W void std::vector<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> >, glslang::pool_allocator<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > > >::_M_emplace_back_aux<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const&>(std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > const&)
 W void std::vector<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> >, glslang::pool_allocator<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > > >::emplace_back<std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> > >(std::basic_string<char, std::char_traits<char>, glslang::pool_allocator<char> >&&)
 W void std::vector<std::string, std::allocator<std::string> >::_M_emplace_back_aux<std::string const&>(std::string const&)
 W void std::vector<std::unique_ptr<spv::Function, std::default_delete<spv::Function> >, std::allocator<std::unique_ptr<spv::Function, std::default_delete<spv::Function> > > >::_M_emplace_back_aux<std::unique_ptr<spv::Function, std::default_delete<spv::Function> > >(std::unique_ptr<spv::Function, std::default_delete<spv::Function> >&&)
 W void std::vector<std::unique_ptr<spv::Instruction, std::default_delete<spv::Instruction> >, std::allocator<std::unique_ptr<spv::Instruction, std::default_delete<spv::Instruction> > > >::_M_emplace_back_aux<std::unique_ptr<spv::Instruction, std::default_delete<spv::Instruction> > >(std::unique_ptr<spv::Instruction, std::default_delete<spv::Instruction> >&&)
 W void std::vector<std::unique_ptr<spv::Instruction, std::default_delete<spv::Instruction> >, std::allocator<std::unique_ptr<spv::Instruction, std::default_delete<spv::Instruction> > > >::emplace_back<std::unique_ptr<spv::Instruction, std::default_delete<spv::Instruction> > >(std::unique_ptr<spv::Instruction, std::default_delete<spv::Instruction> >&&)
 W void std::vector<unsigned int, std::allocator<unsigned int> >::_M_emplace_back_aux<unsigned int const&>(unsigned int const&)
 W void std::vector<unsigned int, std::allocator<unsigned int> >::_M_emplace_back_aux<unsigned int>(unsigned int&&)
 W void std::vector<unsigned int, std::allocator<unsigned int> >::emplace_back<unsigned int>(unsigned int&&)
 Warning
 _ITM_deregisterTMCloneTable
 _ITM_registerTMCloneTable
 _Jv_RegisterClasses
 _V_ComposeFileName
 _V_ExtractFileExtension
 _V_ExtractFilePath
 _V_FileBase
 _V_FixupPathName
 _V_GetFirstDir
 _V_MakeAbsolutePath
 _V_MakeRelativePath
 _V_SetExtension
 _V_StringAfterPrefix
 _V_StripExtension
 _V_StripLastDir
 _V_strcspn
 _V_strncat
 _V_strncpy
 _V_strnicmp_fast
 _V_strnistr_fast
 __ctype_b_loc@@GLIBC_2.3
 __ctype_toupper_loc@@GLIBC_2.3
 __cxa_atexit@@GLIBC_2.2.5
 __cxa_begin_catch@@CXXABI_1.3
 __cxa_call_unexpected@@CXXABI_1.3
 __cxa_end_catch@@CXXABI_1.3
 __cxa_finalize@@GLIBC_2.2.5
 __cxa_guard_abort@@CXXABI_1.3
 __cxa_guard_acquire@@CXXABI_1.3
 __cxa_guard_release@@CXXABI_1.3
 __cxa_pure_virtual@@CXXABI_1.3
 __cxa_rethrow@@CXXABI_1.3
 __fprintf_chk@@GLIBC_2.3.4
 __gmon_start__
 __gxx_personality_v0@@CXXABI_1.3
 __longjmp_chk@@GLIBC_2.11
 __memcpy_chk@@GLIBC_2.3.4
 __memset_chk@@GLIBC_2.3.4
 __printf_chk@@GLIBC_2.3.4
 __pthread_key_create@@GLIBC_2.2.5
 __snprintf_chk@@GLIBC_2.3.4
 __sprintf_chk@@GLIBC_2.3.4
 __stack_chk_fail@@GLIBC_2.4
 __strcpy_chk@@GLIBC_2.3.4
 __vsnprintf_chk@@GLIBC_2.3.4
 _setjmp@@GLIBC_2.2.5
 abort@@GLIBC_2.2.5
 acos@@GLIBC_2.2.5
 asin@@GLIBC_2.2.5
 atan2@@GLIBC_2.2.5
 atan@@GLIBC_2.2.5
 calloc@@GLIBC_2.2.5
 ceil@@GLIBC_2.2.5
 ceilf@@GLIBC_2.2.5
 cos@@GLIBC_2.2.5
 dl_iterate_phdr@@GLIBC_2.2.5
 exit@@GLIBC_2.2.5
 exp@@GLIBC_2.2.5
 floor@@GLIBC_2.2.5
 floorf@@GLIBC_2.2.5
 fprintf@@GLIBC_2.2.5
 fputc@@GLIBC_2.2.5
 fread@@GLIBC_2.2.5
 free@@GLIBC_2.2.5
 frexp@@GLIBC_2.2.5
 fwrite@@GLIBC_2.2.5
 g_Mathlib_GammaToLinearByteTable
 g_Tier1_CRC32Table
 g_Tier1_CRC64Table
 g_VProfCurrentProfile
 g_pMemAlloc
 g_pThreadPool
 getenv@@GLIBC_2.2.5
 isalpha@@GLIBC_2.2.5
 localtime@@GLIBC_2.2.5
 log@@GLIBC_2.2.5
 logf@@GLIBC_2.2.5
 longjmp@@GLIBC_2.2.5
 malloc@@GLIBC_2.2.5
 memchr@@GLIBC_2.2.5
 memcmp@@GLIBC_2.2.5
 memcpy@@GLIBC_2.14
 memmove@@GLIBC_2.2.5
 memset@@GLIBC_2.2.5
 mktime@@GLIBC_2.2.5
 modf@@GLIBC_2.2.5
 operator delete(void*, std::nothrow_t const&)@@GLIBCXX_3.4
 operator new(unsigned long, std::nothrow_t const&)@@GLIBCXX_3.4
 pow@@GLIBC_2.2.5
 powf@@GLIBC_2.2.5
 pthread_getspecific@@GLIBC_2.2.5
 pthread_key_create@@GLIBC_2.2.5
 pthread_key_delete@@GLIBC_2.2.5
 pthread_mutex_destroy@@GLIBC_2.2.5
 pthread_mutex_init@@GLIBC_2.2.5
 pthread_mutex_lock@@GLIBC_2.2.5
 pthread_mutex_unlock@@GLIBC_2.2.5
 pthread_mutexattr_init@@GLIBC_2.2.5
 pthread_mutexattr_settype@@GLIBC_2.2.5
 pthread_once@@GLIBC_2.2.5
 pthread_setcancelstate@@GLIBC_2.2.5
 pthread_setcanceltype@@GLIBC_2.2.5
 pthread_setspecific@@GLIBC_2.2.5
 realloc@@GLIBC_2.2.5
 sin@@GLIBC_2.2.5
 sincosf@@GLIBC_2.2.5
 snprintf@@GLIBC_2.2.5
 sqrt@@GLIBC_2.2.5
 sqrtf@@GLIBC_2.2.5
 sscanf@@GLIBC_2.2.5
 std::_Hash_bytes(void const*, unsigned long, unsigned long)@@CXXABI_1.3.5
 std::_Rb_tree_decrement(std::_Rb_tree_node_base*)@@GLIBCXX_3.4
 std::_Rb_tree_increment(std::_Rb_tree_node_base const*)@@GLIBCXX_3.4
 std::_Rb_tree_increment(std::_Rb_tree_node_base*)@@GLIBCXX_3.4
 std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)@@GLIBCXX_3.4
 std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)@@GLIBCXX_3.4
 std::__basic_file<char>::~__basic_file()@@GLIBCXX_3.4
 std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)@@GLIBCXX_3.4.15
 std::__detail::_List_node_base::_M_transfer(std::__detail::_List_node_base*, std::__detail::_List_node_base*)@@GLIBCXX_3.4.15
 std::__detail::_List_node_base::_M_unhook()@@GLIBCXX_3.4.15
 std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned long, unsigned long, unsigned long) const@@GLIBCXX_3.4.18
 std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned long) const@@GLIBCXX_3.4.18
 std::__throw_bad_alloc()@@GLIBCXX_3.4
 std::__throw_bad_cast()@@GLIBCXX_3.4
 std::__throw_bad_function_call()@@GLIBCXX_3.4.14
 std::__throw_length_error(char const*)@@GLIBCXX_3.4
 std::__throw_logic_error(char const*)@@GLIBCXX_3.4
 std::__throw_out_of_range(char const*)@@GLIBCXX_3.4
 std::basic_filebuf<char, std::char_traits<char> >::basic_filebuf()@@GLIBCXX_3.4
 std::basic_filebuf<char, std::char_traits<char> >::close()@@GLIBCXX_3.4
 std::basic_filebuf<char, std::char_traits<char> >::open(char const*, std::_Ios_Openmode)@@GLIBCXX_3.4
 std::basic_filebuf<char, std::char_traits<char> >::~basic_filebuf()@@GLIBCXX_3.4
 std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)@@GLIBCXX_3.4
 std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*)@@GLIBCXX_3.4
 std::basic_iostream<char, std::char_traits<char> >::~basic_iostream()@@GLIBCXX_3.4
 std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char)@@GLIBCXX_3.4
 std::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_istringstream()@@GLIBCXX_3.4
 std::basic_ofstream<char, std::char_traits<char> >::~basic_ofstream()@@GLIBCXX_3.4
 std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@@GLIBCXX_3.4.9
 std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@@GLIBCXX_3.4
 std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)@@GLIBCXX_3.4
 std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >::basic_ostringstream(std::_Ios_Openmode)@@GLIBCXX_3.4
 std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_ostringstream()@@GLIBCXX_3.4
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)@@GLIBCXX_3.4
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, unsigned long, std::allocator<char> const&)@@GLIBCXX_3.4
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&)@@GLIBCXX_3.4
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::string const&, unsigned long, unsigned long)@@GLIBCXX_3.4
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(unsigned long, char, std::allocator<char> const&)@@GLIBCXX_3.4
 std::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()@@GLIBCXX_3.4
 std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::_M_sync(char*, unsigned long, unsigned long)@@GLIBCXX_3.4
 std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::str() const@@GLIBCXX_3.4
 std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::basic_stringstream(std::_Ios_Openmode)@@GLIBCXX_3.4
 std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_stringstream()@@GLIBCXX_3.4
 std::ctype<char>::_M_widen_init() const@@GLIBCXX_3.4.11
 std::ios_base::Init::Init()@@GLIBCXX_3.4
 std::ios_base::Init::~Init()@@GLIBCXX_3.4
 std::ios_base::ios_base()@@GLIBCXX_3.4
 std::ios_base::~ios_base()@@GLIBCXX_3.4
 std::locale::locale()@@GLIBCXX_3.4
 std::locale::~locale()@@GLIBCXX_3.4
 std::nothrow@@GLIBCXX_3.4
 std::ostream& std::ostream::_M_insert<bool>(bool)@@GLIBCXX_3.4.9
 std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@@GLIBCXX_3.4.9
 std::ostream::flush()@@GLIBCXX_3.4
 std::ostream::operator<<(int)@@GLIBCXX_3.4
 std::ostream::put(char)@@GLIBCXX_3.4
 std::ostream::write(char const*, long)@@GLIBCXX_3.4
 std::string::_M_mutate(unsigned long, unsigned long, unsigned long)@@GLIBCXX_3.4
 std::string::_Rep::_M_destroy(std::allocator<char> const&)@@GLIBCXX_3.4
 std::string::_Rep::_M_dispose(std::allocator<char> const&)@@GLIBCXX_3.4
 std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator<char> const&)@@GLIBCXX_3.4
 std::string::_Rep::_S_empty_rep_storage@@GLIBCXX_3.4
 std::string::append(char const*)@@GLIBCXX_3.4
 std::string::append(char const*, unsigned long)@@GLIBCXX_3.4
 std::string::append(std::string const&)@@GLIBCXX_3.4
 std::string::append(unsigned long, char)@@GLIBCXX_3.4
 std::string::assign(char const*, unsigned long)@@GLIBCXX_3.4
 std::string::assign(std::string const&)@@GLIBCXX_3.4
 std::string::compare(char const*) const@@GLIBCXX_3.4
 std::string::erase(unsigned long, unsigned long)@@GLIBCXX_3.4
 std::string::find(char const*, unsigned long) const@@GLIBCXX_3.4
 std::string::find(char const*, unsigned long, unsigned long) const@@GLIBCXX_3.4
 std::string::find(char, unsigned long) const@@GLIBCXX_3.4
 std::string::insert(unsigned long, char const*, unsigned long)@@GLIBCXX_3.4
 std::string::replace(unsigned long, unsigned long, char const*, unsigned long)@@GLIBCXX_3.4
 std::string::reserve(unsigned long)@@GLIBCXX_3.4
 std::string::swap(std::string&)@@GLIBCXX_3.4
 std::terminate()@@GLIBCXX_3.4
 stderr@@GLIBC_2.2.5
 stdout@@GLIBC_2.2.5
 stpcpy@@GLIBC_2.2.5
 strchr@@GLIBC_2.2.5
 strcmp@@GLIBC_2.2.5
 strcpy@@GLIBC_2.2.5
 strdup@@GLIBC_2.2.5
 strlen@@GLIBC_2.2.5
 strncat@@GLIBC_2.2.5
 strncmp@@GLIBC_2.2.5
 strncpy@@GLIBC_2.2.5
 strnlen@@GLIBC_2.2.5
 strstr@@GLIBC_2.2.5
 strtod@@GLIBC_2.2.5
 strtol@@GLIBC_2.2.5
 strtoll@@GLIBC_2.2.5
 strtoul@@GLIBC_2.2.5
 strtoull@@GLIBC_2.2.5
 tan@@GLIBC_2.2.5
 time@@GLIBC_2.2.5
 tolower@@GLIBC_2.2.5
 toupper@@GLIBC_2.2.5
 trunc@@GLIBC_2.2.5
 typeinfo for CThreadSyncObject
 vkAllocateCommandBuffers
 vkAllocateDescriptorSets
 vkAllocateMemory
 vkBeginCommandBuffer
 vkBindBufferMemory
 vkBindImageMemory
 vkCmdBeginQuery
 vkCmdBeginRenderPass
 vkCmdBindDescriptorSets
 vkCmdBindIndexBuffer
 vkCmdBindPipeline
 vkCmdBindVertexBuffers
 vkCmdBlitImage
 vkCmdClearAttachments
 vkCmdCopyBuffer
 vkCmdCopyBufferToImage
 vkCmdCopyImage
 vkCmdCopyImageToBuffer
 vkCmdCopyQueryPoolResults
 vkCmdDispatch
 vkCmdDispatchIndirect
 vkCmdDraw
 vkCmdDrawIndexed
 vkCmdEndQuery
 vkCmdEndRenderPass
 vkCmdExecuteCommands
 vkCmdFillBuffer
 vkCmdPipelineBarrier
 vkCmdResetQueryPool
 vkCmdResolveImage
 vkCmdSetBlendConstants
 vkCmdSetDepthBias
 vkCmdSetScissor
 vkCmdSetStencilCompareMask
 vkCmdSetStencilReference
 vkCmdSetStencilWriteMask
 vkCmdSetViewport
 vkCmdWriteTimestamp
 vkCreateBuffer
 vkCreateBufferView
 vkCreateCommandPool
 vkCreateComputePipelines
 vkCreateDescriptorPool
 vkCreateDescriptorSetLayout
 vkCreateDevice
 vkCreateFence
 vkCreateFramebuffer
 vkCreateGraphicsPipelines
 vkCreateImage
 vkCreateImageView
 vkCreateInstance
 vkCreatePipelineCache
 vkCreatePipelineLayout
 vkCreateQueryPool
 vkCreateRenderPass
 vkCreateSampler
 vkCreateSemaphore
 vkCreateShaderModule
 vkCreateXcbSurfaceKHR
 vkDestroyBuffer
 vkDestroyBufferView
 vkDestroyCommandPool
 vkDestroyDescriptorPool
 vkDestroyDescriptorSetLayout
 vkDestroyDevice
 vkDestroyFence
 vkDestroyFramebuffer
 vkDestroyImage
 vkDestroyImageView
 vkDestroyInstance
 vkDestroyPipeline
 vkDestroyPipelineCache
 vkDestroyPipelineLayout
 vkDestroyQueryPool
 vkDestroyRenderPass
 vkDestroySampler
 vkDestroySemaphore
 vkDestroyShaderModule
 vkDeviceWaitIdle
 vkEndCommandBuffer
 vkEnumerateDeviceExtensionProperties
 vkEnumerateInstanceExtensionProperties
 vkEnumerateInstanceLayerProperties
 vkEnumeratePhysicalDevices
 vkFlushMappedMemoryRanges
 vkFreeCommandBuffers
 vkFreeMemory
 vkGetBufferMemoryRequirements
 vkGetDeviceProcAddr
 vkGetDeviceQueue
 vkGetFenceStatus
 vkGetImageMemoryRequirements
 vkGetInstanceProcAddr
 vkGetPhysicalDeviceFeatures
 vkGetPhysicalDeviceFormatProperties
 vkGetPhysicalDeviceImageFormatProperties
 vkGetPhysicalDeviceMemoryProperties
 vkGetPhysicalDeviceProperties
 vkGetPhysicalDeviceQueueFamilyProperties
 vkGetPipelineCacheData
 vkGetQueryPoolResults
 vkMapMemory
 vkQueueSubmit
 vkQueueWaitIdle
 vkResetCommandBuffer
 vkResetDescriptorPool
 vkUnmapMemory
 vkUpdateDescriptorSets
 vkWaitForFences
 vsnprintf@@GLIBC_2.2.5
 vtable for __cxxabiv1::__class_type_info@@CXXABI_1.3
 vtable for __cxxabiv1::__si_class_type_info@@CXXABI_1.3
 vtable for __cxxabiv1::__vmi_class_type_info@@CXXABI_1.3
 vtable for std::basic_filebuf<char, std::char_traits<char> >@@GLIBCXX_3.4
 vtable for std::basic_ios<char, std::char_traits<char> >@@GLIBCXX_3.4
 vtable for std::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >@@GLIBCXX_3.4
 vtable for std::basic_ofstream<char, std::char_traits<char> >@@GLIBCXX_3.4
 vtable for std::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >@@GLIBCXX_3.4
 vtable for std::basic_streambuf<char, std::char_traits<char> >@@GLIBCXX_3.4
 vtable for std::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >@@GLIBCXX_3.4
 vtable for std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >@@GLIBCXX_3.4
 wcslen@@GLIBC_2.2.5
 xcb_connect
