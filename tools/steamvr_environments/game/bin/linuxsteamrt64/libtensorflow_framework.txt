 A __bss_start
 A _edata
 A _end
 B FLAGS_stream_executor_cpu_real_clock_rate
 B google_initializer_module_host_platform
 B google_initializer_module_multi_platform_manager
 B je_arena_bin_info
 B je_arena_maxrun
 B je_arenas
 B je_chunk_npages
 B je_chunks_rtree
 B je_chunksize
 B je_chunksize_mask
 B je_in_valgrind
 B je_large_maxclass
 B je_lg_prof_sample
 B je_malloc_message
 B je_map_bias
 B je_map_misc_offset
 B je_narenas_auto
 B je_ncpus
 B je_nhbins
 B je_nhclasses
 B je_nlclasses
 B je_opt_abort
 B je_opt_junk_alloc
 B je_opt_junk_free
 B je_opt_lg_chunk
 B je_opt_narenas
 B je_opt_prof
 B je_opt_prof_accum
 B je_opt_prof_final
 B je_opt_prof_gdump
 B je_opt_prof_leak
 B je_opt_prof_prefix
 B je_opt_purge
 B je_opt_quarantine
 B je_opt_redzone
 B je_opt_stats_print
 B je_opt_utrace
 B je_opt_xmalloc
 B je_opt_zero
 B je_prof_active
 B je_prof_gdump_val
 B je_prof_interval
 B je_stats_cactive
 B je_tcache_bin_info
 B je_tcache_maxclass
 B je_tcaches
 B je_tsd_booted
 B je_tsd_tsd
 B nsync::nsync_malloc_ptr_
 B perftools::gputools::PluginRegistry::instance_
 B perftools::gputools::StreamExecutor::static_mu_
 B perftools::gputools::internal::MakeHostExecutorImplementation
 B tensorflow::DebugGraphDecoratorRegistry::factory_
 B tensorflow::DebuggerStateRegistry::factory_
 B tensorflow::DeviceName<Eigen::ThreadPoolDevice>::value[abi:cxx11]
 B tensorflow::LogMemory::kLogMemoryLabel[abi:cxx11]
 B tensorflow::Node::kNodeClassTable[abi:cxx11]
 B tensorflow::ProcessState::instance_
 B tensorflow::_AllocationDescription_default_instance_
 B tensorflow::_AllocationRecord_default_instance_
 B tensorflow::_AllocatorMemoryUsed_default_instance_
 B tensorflow::_ApiDef_Arg_default_instance_
 B tensorflow::_ApiDef_Attr_default_instance_
 B tensorflow::_ApiDef_Endpoint_default_instance_
 B tensorflow::_ApiDef_default_instance_
 B tensorflow::_ApiDefs_default_instance_
 B tensorflow::_AssetFileDef_default_instance_
 B tensorflow::_AttrValue_ListValue_default_instance_
 B tensorflow::_AttrValue_default_instance_
 B tensorflow::_AutoParallelOptions_default_instance_
 B tensorflow::_AvailableDeviceInfo_default_instance_
 B tensorflow::_BenchmarkEntries_default_instance_
 B tensorflow::_BenchmarkEntry_ExtrasEntry_default_instance_
 B tensorflow::_BenchmarkEntry_default_instance_
 B tensorflow::_BuildConfiguration_default_instance_
 B tensorflow::_BundleEntryProto_default_instance_
 B tensorflow::_BundleHeaderProto_default_instance_
 B tensorflow::_BytesList_default_instance_
 B tensorflow::_CPUInfo_CacheSizeEntry_default_instance_
 B tensorflow::_CPUInfo_default_instance_
 B tensorflow::_ClusterDef_default_instance_
 B tensorflow::_CollectionDef_AnyList_default_instance_
 B tensorflow::_CollectionDef_BytesList_default_instance_
 B tensorflow::_CollectionDef_FloatList_default_instance_
 B tensorflow::_CollectionDef_Int64List_default_instance_
 B tensorflow::_CollectionDef_NodeList_default_instance_
 B tensorflow::_CollectionDef_default_instance_
 B tensorflow::_CommitId_default_instance_
 B tensorflow::_CondContextDef_default_instance_
 B tensorflow::_ConfigProto_DeviceCountEntry_default_instance_
 B tensorflow::_ConfigProto_default_instance_
 B tensorflow::_CostGraphDef_Node_InputInfo_default_instance_
 B tensorflow::_CostGraphDef_Node_OutputInfo_default_instance_
 B tensorflow::_CostGraphDef_Node_default_instance_
 B tensorflow::_CostGraphDef_default_instance_
 B tensorflow::_DebugOptions_default_instance_
 B tensorflow::_DebugTensorWatch_default_instance_
 B tensorflow::_DebuggedSourceFile_default_instance_
 B tensorflow::_DebuggedSourceFiles_default_instance_
 B tensorflow::_DeviceAttributes_default_instance_
 B tensorflow::_DeviceLocality_default_instance_
 B tensorflow::_DeviceProperties_EnvironmentEntry_default_instance_
 B tensorflow::_DeviceProperties_default_instance_
 B tensorflow::_DeviceStepStats_default_instance_
 B tensorflow::_EntryValue_default_instance_
 B tensorflow::_Event_default_instance_
 B tensorflow::_ExampleParserConfiguration_FeatureMapEntry_default_instance_
 B tensorflow::_ExampleParserConfiguration_default_instance_
 B tensorflow::_Example_default_instance_
 B tensorflow::_FeatureConfiguration_default_instance_
 B tensorflow::_FeatureList_default_instance_
 B tensorflow::_FeatureLists_FeatureListEntry_default_instance_
 B tensorflow::_FeatureLists_default_instance_
 B tensorflow::_Feature_default_instance_
 B tensorflow::_Features_FeatureEntry_default_instance_
 B tensorflow::_Features_default_instance_
 B tensorflow::_FixedLenFeatureProto_default_instance_
 B tensorflow::_FloatList_default_instance_
 B tensorflow::_FunctionDefLibrary_default_instance_
 B tensorflow::_FunctionDef_AttrEntry_default_instance_
 B tensorflow::_FunctionDef_RetEntry_default_instance_
 B tensorflow::_FunctionDef_default_instance_
 B tensorflow::_GPUInfo_default_instance_
 B tensorflow::_GPUOptions_default_instance_
 B tensorflow::_GradientDef_default_instance_
 B tensorflow::_GraphDef_default_instance_
 B tensorflow::_GraphOptions_default_instance_
 B tensorflow::_GraphTransferInfo_ConstNodeInfo_default_instance_
 B tensorflow::_GraphTransferInfo_GraphInputNodeInfo_default_instance_
 B tensorflow::_GraphTransferInfo_GraphOutputNodeInfo_default_instance_
 B tensorflow::_GraphTransferInfo_NodeInfo_default_instance_
 B tensorflow::_GraphTransferInfo_NodeInputInfo_default_instance_
 B tensorflow::_GraphTransferInfo_NodeInput_default_instance_
 B tensorflow::_GraphTransferInfo_NodeOutputInfo_default_instance_
 B tensorflow::_GraphTransferInfo_default_instance_
 B tensorflow::_HistogramProto_default_instance_
 B tensorflow::_Int64List_default_instance_
 B tensorflow::_IteratorStateMetadata_default_instance_
 B tensorflow::_JobDef_TasksEntry_default_instance_
 B tensorflow::_JobDef_default_instance_
 B tensorflow::_KernelDef_AttrConstraint_default_instance_
 B tensorflow::_KernelDef_default_instance_
 B tensorflow::_LogMessage_default_instance_
 B tensorflow::_MachineConfiguration_default_instance_
 B tensorflow::_MemmappedFileSystemDirectoryElement_default_instance_
 B tensorflow::_MemmappedFileSystemDirectory_default_instance_
 B tensorflow::_MemoryInfo_default_instance_
 B tensorflow::_MemoryLogRawAllocation_default_instance_
 B tensorflow::_MemoryLogRawDeallocation_default_instance_
 B tensorflow::_MemoryLogStep_default_instance_
 B tensorflow::_MemoryLogTensorAllocation_default_instance_
 B tensorflow::_MemoryLogTensorDeallocation_default_instance_
 B tensorflow::_MemoryLogTensorOutput_default_instance_
 B tensorflow::_MemoryStats_default_instance_
 B tensorflow::_MetaGraphDef_CollectionDefEntry_default_instance_
 B tensorflow::_MetaGraphDef_MetaInfoDef_default_instance_
 B tensorflow::_MetaGraphDef_SignatureDefEntry_default_instance_
 B tensorflow::_MetaGraphDef_default_instance_
 B tensorflow::_NameAttrList_AttrEntry_default_instance_
 B tensorflow::_NameAttrList_default_instance_
 B tensorflow::_NamedDevice_default_instance_
 B tensorflow::_NamedTensorProto_default_instance_
 B tensorflow::_NodeDef_AttrEntry_default_instance_
 B tensorflow::_NodeDef_default_instance_
 B tensorflow::_NodeExecStats_default_instance_
 B tensorflow::_NodeOutput_default_instance_
 B tensorflow::_OpDef_ArgDef_default_instance_
 B tensorflow::_OpDef_AttrDef_default_instance_
 B tensorflow::_OpDef_default_instance_
 B tensorflow::_OpDeprecation_default_instance_
 B tensorflow::_OpList_default_instance_
 B tensorflow::_OptimizerOptions_default_instance_
 B tensorflow::_PlatformInfo_default_instance_
 B tensorflow::_QueueRunnerDef_default_instance_
 B tensorflow::_RPCOptions_default_instance_
 B tensorflow::_ReaderBaseState_default_instance_
 B tensorflow::_RemoteFusedGraphExecuteInfo_TensorShapeTypeProto_default_instance_
 B tensorflow::_RemoteFusedGraphExecuteInfo_default_instance_
 B tensorflow::_ResourceHandleProto_default_instance_
 B tensorflow::_RewriterConfig_default_instance_
 B tensorflow::_RunConfiguration_default_instance_
 B tensorflow::_RunMetadata_default_instance_
 B tensorflow::_RunOptions_default_instance_
 B tensorflow::_SaveSliceInfoDef_default_instance_
 B tensorflow::_SavedModel_default_instance_
 B tensorflow::_SavedSliceMeta_default_instance_
 B tensorflow::_SavedSlice_default_instance_
 B tensorflow::_SavedTensorSliceMeta_default_instance_
 B tensorflow::_SavedTensorSlices_default_instance_
 B tensorflow::_SaverDef_default_instance_
 B tensorflow::_SequenceExample_default_instance_
 B tensorflow::_ServerDef_default_instance_
 B tensorflow::_SessionLog_default_instance_
 B tensorflow::_SignatureDef_InputsEntry_default_instance_
 B tensorflow::_SignatureDef_OutputsEntry_default_instance_
 B tensorflow::_SignatureDef_default_instance_
 B tensorflow::_StepStats_default_instance_
 B tensorflow::_SummaryDescription_default_instance_
 B tensorflow::_SummaryMetadata_PluginData_default_instance_
 B tensorflow::_SummaryMetadata_default_instance_
 B tensorflow::_Summary_Audio_default_instance_
 B tensorflow::_Summary_Image_default_instance_
 B tensorflow::_Summary_Value_default_instance_
 B tensorflow::_Summary_default_instance_
 B tensorflow::_TaggedRunMetadata_default_instance_
 B tensorflow::_TensorDescription_default_instance_
 B tensorflow::_TensorInfo_CooSparse_default_instance_
 B tensorflow::_TensorInfo_default_instance_
 B tensorflow::_TensorProto_default_instance_
 B tensorflow::_TensorShapeProto_Dim_default_instance_
 B tensorflow::_TensorShapeProto_default_instance_
 B tensorflow::_TensorSliceProto_Extent_default_instance_
 B tensorflow::_TensorSliceProto_default_instance_
 B tensorflow::_TestResults_default_instance_
 B tensorflow::_ThreadPoolOptionProto_default_instance_
 B tensorflow::_ValuesDef_ExternalValuesEntry_default_instance_
 B tensorflow::_ValuesDef_default_instance_
 B tensorflow::_VarLenFeatureProto_default_instance_
 B tensorflow::_VariableDef_default_instance_
 B tensorflow::_VariantTensorDataProto_default_instance_
 B tensorflow::_VersionDef_default_instance_
 B tensorflow::_WhileContextDef_default_instance_
 B tensorflow::error::protobuf_tensorflow_2fcore_2flib_2fcore_2ferror_5fcodes_2eproto::static_descriptor_initializer
 B tensorflow::gtl::nullopt_t::init
 B tensorflow::port::Tracing::category_id_
 B tensorflow::port::Tracing::event_mask_
 B tensorflow::port::Tracing::name_map_[abi:cxx11]
 B tensorflow::port::Tracing::tracing_engine_
 B tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fexample_2ffeature_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fframework_2fallocation_5fdescription_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fframework_2ffunction_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fframework_2fiterator_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fframework_2flog_5fmemory_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fframework_2freader_5fbase_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fframework_2fsummary_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fslice_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftypes_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fframework_2fvariable_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fframework_2fversions_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcluster_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fconfig_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fnamed_5ftensor_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fqueue_5frunner_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaved_5fmodel_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaver_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensorflow_5fserver_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2futil_2fevent_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2futil_2fmemmapped_5ffile_5fsystem_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2futil_2fsaved_5ftensor_5fslice_2eproto::static_descriptor_initializer
 B tensorflow::protobuf_tensorflow_2fcore_2futil_2ftest_5flog_2eproto::static_descriptor_initializer
 D je_chunk_hooks_default
 D je_dss_prec_names
 D je_opt_decay_time
 D je_opt_dss
 D je_opt_junk
 D je_opt_lg_dirty_mult
 D je_opt_lg_prof_interval
 D je_opt_lg_prof_sample
 D je_opt_lg_tcache_max
 D je_opt_prof_active
 D je_opt_prof_thread_active_init
 D je_opt_tcache
 D je_purge_mode_names
 D je_tsd_tls
 D jpeg_std_message_table
 D nsync::nsync_counter_waitable_funcs
 D nsync::nsync_cv_waitable_funcs
 D nsync::nsync_note_waitable_funcs
 D nsync::nsync_reader_type_
 D nsync::nsync_writer_type_
 D perftools::gputools::DeviceDescription::kUndefinedString
 D perftools::gputools::PluginConfig::kDefault
 D perftools::gputools::cuda::kCudaPlatformId
 D perftools::gputools::host::kHostPlatformId
 D png_IDAT
 D png_IEND
 D png_IHDR
 D png_PLTE
 D png_bKGD
 D png_cHRM
 D png_gAMA
 D png_hIST
 D png_iCCP
 D png_iTXt
 D png_oFFs
 D png_pCAL
 D png_pHYs
 D png_sBIT
 D png_sCAL
 D png_sPLT
 D png_sRGB
 D png_tEXt
 D png_tIME
 D png_tRNS
 D png_zTXt
 D re2::perl_groups
 D re2::posix_groups
 D re2::unicode_groups
 D tensorflow::DEVICE_CPU
 D tensorflow::DEVICE_GPU
 D tensorflow::DEVICE_SYCL
 D tensorflow::LocalDevice::use_global_threadpool_
 D tensorflow::SessionState::kTensorHandleResourceTypeName
 D tensorflow::kColocationAttrName
 D tensorflow::kColocationGroupPrefix
 D tensorflow::kHeaderEntryKey
 D tensorflow::kProtobufInt64Typename
 D tensorflow::kProtobufUint64Typename
 D z_errmsg
 R GifAsciiTable8x8
 R _dist_code
 R _length_code
 R deflate_copyright
 R inflate_copyright
 R jconst_fancy_upsample_sse2
 R jconst_fdct_float_sse
 R jconst_fdct_ifast_sse2
 R jconst_fdct_islow_sse2
 R jconst_huff_encode_one_block
 R jconst_idct_float_sse2
 R jconst_idct_ifast_sse2
 R jconst_idct_islow_sse2
 R jconst_idct_red_sse2
 R jconst_merged_upsample_sse2
 R jconst_rgb_gray_convert_sse2
 R jconst_rgb_ycc_convert_sse2
 R jconst_ycc_rgb_convert_sse2
 R je_index2size_tab
 R je_pind2sz_tab
 R je_size2index_tab
 R jpeg_aritab
 R jpeg_natural_order
 R nsync::nsync_time_no_deadline
 R nsync::nsync_time_zero
 R perftools::gputools::CudaPtxInMemory::kMinimumCapability
 R perftools::gputools::kNullPlugin
 R png_libpng_ver
 R png_pass_dsp_mask
 R png_pass_inc
 R png_pass_mask
 R png_pass_start
 R png_pass_yinc
 R png_pass_ystart
 R png_sig
 R re2::RE2::Options::kDefaultMaxMem
 R re2::StringPiece::npos
 R re2::num_perl_groups
 R re2::num_posix_groups
 R re2::num_unicode_casefold
 R re2::num_unicode_groups
 R re2::num_unicode_tolower
 R re2::unicode_casefold
 R re2::unicode_tolower
 R tensorflow::AllocationDescription::kAllocatedBytesFieldNumber
 R tensorflow::AllocationDescription::kAllocationIdFieldNumber
 R tensorflow::AllocationDescription::kAllocatorNameFieldNumber
 R tensorflow::AllocationDescription::kHasSingleReferenceFieldNumber
 R tensorflow::AllocationDescription::kPtrFieldNumber
 R tensorflow::AllocationDescription::kRequestedBytesFieldNumber
 R tensorflow::AllocationRecord::kAllocBytesFieldNumber
 R tensorflow::AllocationRecord::kAllocMicrosFieldNumber
 R tensorflow::Allocator::kAllocatorAlignment
 R tensorflow::AllocatorMemoryUsed::kAllocationRecordsFieldNumber
 R tensorflow::AllocatorMemoryUsed::kAllocatorBytesInUseFieldNumber
 R tensorflow::AllocatorMemoryUsed::kAllocatorNameFieldNumber
 R tensorflow::AllocatorMemoryUsed::kLiveBytesFieldNumber
 R tensorflow::AllocatorMemoryUsed::kPeakBytesFieldNumber
 R tensorflow::AllocatorMemoryUsed::kTotalBytesFieldNumber
 R tensorflow::ApiDef::DEFAULT_VISIBILITY
 R tensorflow::ApiDef::HIDDEN
 R tensorflow::ApiDef::SKIP
 R tensorflow::ApiDef::VISIBLE
 R tensorflow::ApiDef::Visibility_ARRAYSIZE
 R tensorflow::ApiDef::Visibility_MAX
 R tensorflow::ApiDef::Visibility_MIN
 R tensorflow::ApiDef::kArgOrderFieldNumber
 R tensorflow::ApiDef::kAttrFieldNumber
 R tensorflow::ApiDef::kDescriptionFieldNumber
 R tensorflow::ApiDef::kDescriptionPrefixFieldNumber
 R tensorflow::ApiDef::kDescriptionSuffixFieldNumber
 R tensorflow::ApiDef::kEndpointFieldNumber
 R tensorflow::ApiDef::kGraphOpNameFieldNumber
 R tensorflow::ApiDef::kInArgFieldNumber
 R tensorflow::ApiDef::kOutArgFieldNumber
 R tensorflow::ApiDef::kSummaryFieldNumber
 R tensorflow::ApiDef::kVisibilityFieldNumber
 R tensorflow::ApiDef_Arg::kDescriptionFieldNumber
 R tensorflow::ApiDef_Arg::kNameFieldNumber
 R tensorflow::ApiDef_Arg::kRenameToFieldNumber
 R tensorflow::ApiDef_Attr::kDefaultValueFieldNumber
 R tensorflow::ApiDef_Attr::kDescriptionFieldNumber
 R tensorflow::ApiDef_Attr::kNameFieldNumber
 R tensorflow::ApiDef_Attr::kRenameToFieldNumber
 R tensorflow::ApiDef_Endpoint::kDeprecationVersionFieldNumber
 R tensorflow::ApiDef_Endpoint::kNameFieldNumber
 R tensorflow::ApiDefs::kOpFieldNumber
 R tensorflow::AssetFileDef::kFilenameFieldNumber
 R tensorflow::AssetFileDef::kTensorInfoFieldNumber
 R tensorflow::AttrValue::kBFieldNumber
 R tensorflow::AttrValue::kFFieldNumber
 R tensorflow::AttrValue::kFuncFieldNumber
 R tensorflow::AttrValue::kIFieldNumber
 R tensorflow::AttrValue::kListFieldNumber
 R tensorflow::AttrValue::kPlaceholderFieldNumber
 R tensorflow::AttrValue::kSFieldNumber
 R tensorflow::AttrValue::kShapeFieldNumber
 R tensorflow::AttrValue::kTensorFieldNumber
 R tensorflow::AttrValue::kTypeFieldNumber
 R tensorflow::AttrValue_ListValue::kBFieldNumber
 R tensorflow::AttrValue_ListValue::kFFieldNumber
 R tensorflow::AttrValue_ListValue::kFuncFieldNumber
 R tensorflow::AttrValue_ListValue::kIFieldNumber
 R tensorflow::AttrValue_ListValue::kSFieldNumber
 R tensorflow::AttrValue_ListValue::kShapeFieldNumber
 R tensorflow::AttrValue_ListValue::kTensorFieldNumber
 R tensorflow::AttrValue_ListValue::kTypeFieldNumber
 R tensorflow::AutoParallelOptions::kEnableFieldNumber
 R tensorflow::AutoParallelOptions::kNumReplicasFieldNumber
 R tensorflow::AvailableDeviceInfo::kMemoryLimitFieldNumber
 R tensorflow::AvailableDeviceInfo::kNameFieldNumber
 R tensorflow::AvailableDeviceInfo::kPhysicalDescriptionFieldNumber
 R tensorflow::AvailableDeviceInfo::kTypeFieldNumber
 R tensorflow::BenchmarkEntries::kEntryFieldNumber
 R tensorflow::BenchmarkEntry::kCpuTimeFieldNumber
 R tensorflow::BenchmarkEntry::kExtrasFieldNumber
 R tensorflow::BenchmarkEntry::kItersFieldNumber
 R tensorflow::BenchmarkEntry::kNameFieldNumber
 R tensorflow::BenchmarkEntry::kThroughputFieldNumber
 R tensorflow::BenchmarkEntry::kWallTimeFieldNumber
 R tensorflow::BuildConfiguration::kCcFlagsFieldNumber
 R tensorflow::BuildConfiguration::kModeFieldNumber
 R tensorflow::BuildConfiguration::kOptsFieldNumber
 R tensorflow::BundleEntryProto::kCrc32CFieldNumber
 R tensorflow::BundleEntryProto::kDtypeFieldNumber
 R tensorflow::BundleEntryProto::kOffsetFieldNumber
 R tensorflow::BundleEntryProto::kShapeFieldNumber
 R tensorflow::BundleEntryProto::kShardIdFieldNumber
 R tensorflow::BundleEntryProto::kSizeFieldNumber
 R tensorflow::BundleEntryProto::kSlicesFieldNumber
 R tensorflow::BundleHeaderProto::BIG
 R tensorflow::BundleHeaderProto::Endianness_ARRAYSIZE
 R tensorflow::BundleHeaderProto::Endianness_MAX
 R tensorflow::BundleHeaderProto::Endianness_MIN
 R tensorflow::BundleHeaderProto::LITTLE
 R tensorflow::BundleHeaderProto::kEndiannessFieldNumber
 R tensorflow::BundleHeaderProto::kNumShardsFieldNumber
 R tensorflow::BundleHeaderProto::kVersionFieldNumber
 R tensorflow::BytesList::kValueFieldNumber
 R tensorflow::CPUInfo::kCacheSizeFieldNumber
 R tensorflow::CPUInfo::kCpuGovernorFieldNumber
 R tensorflow::CPUInfo::kCpuInfoFieldNumber
 R tensorflow::CPUInfo::kMhzPerCpuFieldNumber
 R tensorflow::CPUInfo::kNumCoresAllowedFieldNumber
 R tensorflow::CPUInfo::kNumCoresFieldNumber
 R tensorflow::CancellationManager::kInvalidToken
 R tensorflow::ClusterDef::kJobFieldNumber
 R tensorflow::CollectionDef::kAnyListFieldNumber
 R tensorflow::CollectionDef::kBytesListFieldNumber
 R tensorflow::CollectionDef::kFloatListFieldNumber
 R tensorflow::CollectionDef::kInt64ListFieldNumber
 R tensorflow::CollectionDef::kNodeListFieldNumber
 R tensorflow::CollectionDef_AnyList::kValueFieldNumber
 R tensorflow::CollectionDef_BytesList::kValueFieldNumber
 R tensorflow::CollectionDef_FloatList::kValueFieldNumber
 R tensorflow::CollectionDef_Int64List::kValueFieldNumber
 R tensorflow::CollectionDef_NodeList::kValueFieldNumber
 R tensorflow::CommitId::kChangelistFieldNumber
 R tensorflow::CommitId::kHashFieldNumber
 R tensorflow::CommitId::kPendingChangelistFieldNumber
 R tensorflow::CommitId::kSnapshotFieldNumber
 R tensorflow::CondContextDef::kBranchFieldNumber
 R tensorflow::CondContextDef::kContextNameFieldNumber
 R tensorflow::CondContextDef::kPivotNameFieldNumber
 R tensorflow::CondContextDef::kPredNameFieldNumber
 R tensorflow::CondContextDef::kValuesDefFieldNumber
 R tensorflow::ConfigProto::kAllowSoftPlacementFieldNumber
 R tensorflow::ConfigProto::kClusterDefFieldNumber
 R tensorflow::ConfigProto::kDeviceCountFieldNumber
 R tensorflow::ConfigProto::kDeviceFiltersFieldNumber
 R tensorflow::ConfigProto::kGpuOptionsFieldNumber
 R tensorflow::ConfigProto::kGraphOptionsFieldNumber
 R tensorflow::ConfigProto::kInterOpParallelismThreadsFieldNumber
 R tensorflow::ConfigProto::kIntraOpParallelismThreadsFieldNumber
 R tensorflow::ConfigProto::kIsolateSessionStateFieldNumber
 R tensorflow::ConfigProto::kLogDevicePlacementFieldNumber
 R tensorflow::ConfigProto::kOperationTimeoutInMsFieldNumber
 R tensorflow::ConfigProto::kPlacementPeriodFieldNumber
 R tensorflow::ConfigProto::kRpcOptionsFieldNumber
 R tensorflow::ConfigProto::kSessionInterOpThreadPoolFieldNumber
 R tensorflow::ConfigProto::kUsePerSessionThreadsFieldNumber
 R tensorflow::CostGraphDef::kNodeFieldNumber
 R tensorflow::CostGraphDef_Node::kComputeCostFieldNumber
 R tensorflow::CostGraphDef_Node::kComputeTimeFieldNumber
 R tensorflow::CostGraphDef_Node::kControlInputFieldNumber
 R tensorflow::CostGraphDef_Node::kDeviceFieldNumber
 R tensorflow::CostGraphDef_Node::kDevicePersistentMemorySizeFieldNumber
 R tensorflow::CostGraphDef_Node::kDeviceTempMemorySizeFieldNumber
 R tensorflow::CostGraphDef_Node::kHostPersistentMemorySizeFieldNumber
 R tensorflow::CostGraphDef_Node::kHostTempMemorySizeFieldNumber
 R tensorflow::CostGraphDef_Node::kIdFieldNumber
 R tensorflow::CostGraphDef_Node::kInputInfoFieldNumber
 R tensorflow::CostGraphDef_Node::kIsFinalFieldNumber
 R tensorflow::CostGraphDef_Node::kMemoryTimeFieldNumber
 R tensorflow::CostGraphDef_Node::kNameFieldNumber
 R tensorflow::CostGraphDef_Node::kOutputInfoFieldNumber
 R tensorflow::CostGraphDef_Node::kTemporaryMemorySizeFieldNumber
 R tensorflow::CostGraphDef_Node_InputInfo::kPrecedingNodeFieldNumber
 R tensorflow::CostGraphDef_Node_InputInfo::kPrecedingPortFieldNumber
 R tensorflow::CostGraphDef_Node_OutputInfo::kAliasInputPortFieldNumber
 R tensorflow::CostGraphDef_Node_OutputInfo::kDtypeFieldNumber
 R tensorflow::CostGraphDef_Node_OutputInfo::kShapeFieldNumber
 R tensorflow::CostGraphDef_Node_OutputInfo::kSizeFieldNumber
 R tensorflow::DebugOptions::kDebugTensorWatchOptsFieldNumber
 R tensorflow::DebugOptions::kGlobalStepFieldNumber
 R tensorflow::DebugTensorWatch::kDebugOpsFieldNumber
 R tensorflow::DebugTensorWatch::kDebugUrlsFieldNumber
 R tensorflow::DebugTensorWatch::kNodeNameFieldNumber
 R tensorflow::DebugTensorWatch::kOutputSlotFieldNumber
 R tensorflow::DebugTensorWatch::kTolerateDebugOpCreationFailuresFieldNumber
 R tensorflow::DebuggedSourceFile::kBytesFieldNumber
 R tensorflow::DebuggedSourceFile::kFilePathFieldNumber
 R tensorflow::DebuggedSourceFile::kHostFieldNumber
 R tensorflow::DebuggedSourceFile::kLastModifiedFieldNumber
 R tensorflow::DebuggedSourceFile::kLinesFieldNumber
 R tensorflow::DebuggedSourceFiles::kSourceFilesFieldNumber
 R tensorflow::DeviceAttributes::kDeviceTypeFieldNumber
 R tensorflow::DeviceAttributes::kIncarnationFieldNumber
 R tensorflow::DeviceAttributes::kLocalityFieldNumber
 R tensorflow::DeviceAttributes::kMemoryLimitFieldNumber
 R tensorflow::DeviceAttributes::kNameFieldNumber
 R tensorflow::DeviceAttributes::kPhysicalDeviceDescFieldNumber
 R tensorflow::DeviceLocality::kBusIdFieldNumber
 R tensorflow::DeviceProperties::kBandwidthFieldNumber
 R tensorflow::DeviceProperties::kEnvironmentFieldNumber
 R tensorflow::DeviceProperties::kFrequencyFieldNumber
 R tensorflow::DeviceProperties::kL1CacheSizeFieldNumber
 R tensorflow::DeviceProperties::kL2CacheSizeFieldNumber
 R tensorflow::DeviceProperties::kL3CacheSizeFieldNumber
 R tensorflow::DeviceProperties::kMemorySizeFieldNumber
 R tensorflow::DeviceProperties::kModelFieldNumber
 R tensorflow::DeviceProperties::kNumCoresFieldNumber
 R tensorflow::DeviceProperties::kNumRegistersFieldNumber
 R tensorflow::DeviceProperties::kSharedMemorySizePerMultiprocessorFieldNumber
 R tensorflow::DeviceProperties::kTypeFieldNumber
 R tensorflow::DeviceProperties::kVendorFieldNumber
 R tensorflow::DeviceStepStats::kDeviceFieldNumber
 R tensorflow::DeviceStepStats::kNodeStatsFieldNumber
 R tensorflow::EntryValue::kDoubleValueFieldNumber
 R tensorflow::EntryValue::kStringValueFieldNumber
 R tensorflow::Event::kFileVersionFieldNumber
 R tensorflow::Event::kGraphDefFieldNumber
 R tensorflow::Event::kLogMessageFieldNumber
 R tensorflow::Event::kMetaGraphDefFieldNumber
 R tensorflow::Event::kSessionLogFieldNumber
 R tensorflow::Event::kStepFieldNumber
 R tensorflow::Event::kSummaryFieldNumber
 R tensorflow::Event::kTaggedRunMetadataFieldNumber
 R tensorflow::Event::kWallTimeFieldNumber
 R tensorflow::Example::kFeaturesFieldNumber
 R tensorflow::ExampleParserConfiguration::kFeatureMapFieldNumber
 R tensorflow::Feature::kBytesListFieldNumber
 R tensorflow::Feature::kFloatListFieldNumber
 R tensorflow::Feature::kInt64ListFieldNumber
 R tensorflow::FeatureConfiguration::kFixedLenFeatureFieldNumber
 R tensorflow::FeatureConfiguration::kVarLenFeatureFieldNumber
 R tensorflow::FeatureList::kFeatureFieldNumber
 R tensorflow::FeatureLists::kFeatureListFieldNumber
 R tensorflow::Features::kFeatureFieldNumber
 R tensorflow::FixedLenFeatureProto::kDefaultValueFieldNumber
 R tensorflow::FixedLenFeatureProto::kDtypeFieldNumber
 R tensorflow::FixedLenFeatureProto::kShapeFieldNumber
 R tensorflow::FixedLenFeatureProto::kValuesOutputTensorNameFieldNumber
 R tensorflow::FloatList::kValueFieldNumber
 R tensorflow::FunctionDef::kAttrFieldNumber
 R tensorflow::FunctionDef::kNodeDefFieldNumber
 R tensorflow::FunctionDef::kRetFieldNumber
 R tensorflow::FunctionDef::kSignatureFieldNumber
 R tensorflow::FunctionDefLibrary::kFunctionFieldNumber
 R tensorflow::FunctionDefLibrary::kGradientFieldNumber
 R tensorflow::GPUInfo::kBusIdFieldNumber
 R tensorflow::GPUInfo::kModelFieldNumber
 R tensorflow::GPUInfo::kUuidFieldNumber
 R tensorflow::GPUOptions::kAllocatorTypeFieldNumber
 R tensorflow::GPUOptions::kAllowGrowthFieldNumber
 R tensorflow::GPUOptions::kDeferredDeletionBytesFieldNumber
 R tensorflow::GPUOptions::kForceGpuCompatibleFieldNumber
 R tensorflow::GPUOptions::kPerProcessGpuMemoryFractionFieldNumber
 R tensorflow::GPUOptions::kPollingActiveDelayUsecsFieldNumber
 R tensorflow::GPUOptions::kPollingInactiveDelayMsecsFieldNumber
 R tensorflow::GPUOptions::kVisibleDeviceListFieldNumber
 R tensorflow::GradientDef::kFunctionNameFieldNumber
 R tensorflow::GradientDef::kGradientFuncFieldNumber
 R tensorflow::Graph::kControlSlot
 R tensorflow::GraphDef::kLibraryFieldNumber
 R tensorflow::GraphDef::kNodeFieldNumber
 R tensorflow::GraphDef::kVersionFieldNumber
 R tensorflow::GraphDef::kVersionsFieldNumber
 R tensorflow::GraphOptions::kBuildCostModelAfterFieldNumber
 R tensorflow::GraphOptions::kBuildCostModelFieldNumber
 R tensorflow::GraphOptions::kEnableBfloat16SendrecvFieldNumber
 R tensorflow::GraphOptions::kEnableRecvSchedulingFieldNumber
 R tensorflow::GraphOptions::kInferShapesFieldNumber
 R tensorflow::GraphOptions::kOptimizerOptionsFieldNumber
 R tensorflow::GraphOptions::kPlacePrunedGraphFieldNumber
 R tensorflow::GraphOptions::kRewriteOptionsFieldNumber
 R tensorflow::GraphOptions::kTimelineStepFieldNumber
 R tensorflow::GraphTransferInfo::Destination_ARRAYSIZE
 R tensorflow::GraphTransferInfo::Destination_MAX
 R tensorflow::GraphTransferInfo::Destination_MIN
 R tensorflow::GraphTransferInfo::HEXAGON
 R tensorflow::GraphTransferInfo::NOP
 R tensorflow::GraphTransferInfo::kConstNodeInfoFieldNumber
 R tensorflow::GraphTransferInfo::kDestinationFieldNumber
 R tensorflow::GraphTransferInfo::kGraphInputNodeInfoFieldNumber
 R tensorflow::GraphTransferInfo::kGraphOutputNodeInfoFieldNumber
 R tensorflow::GraphTransferInfo::kNodeInfoFieldNumber
 R tensorflow::GraphTransferInfo::kNodeInputInfoFieldNumber
 R tensorflow::GraphTransferInfo::kNodeOutputInfoFieldNumber
 R tensorflow::GraphTransferInfo_ConstNodeInfo::kDataFieldNumber
 R tensorflow::GraphTransferInfo_ConstNodeInfo::kDtypeFieldNumber
 R tensorflow::GraphTransferInfo_ConstNodeInfo::kNameFieldNumber
 R tensorflow::GraphTransferInfo_ConstNodeInfo::kNodeIdFieldNumber
 R tensorflow::GraphTransferInfo_ConstNodeInfo::kShapeFieldNumber
 R tensorflow::GraphTransferInfo_GraphInputNodeInfo::kDtypeFieldNumber
 R tensorflow::GraphTransferInfo_GraphInputNodeInfo::kNameFieldNumber
 R tensorflow::GraphTransferInfo_GraphInputNodeInfo::kShapeFieldNumber
 R tensorflow::GraphTransferInfo_GraphOutputNodeInfo::kDtypeFieldNumber
 R tensorflow::GraphTransferInfo_GraphOutputNodeInfo::kNameFieldNumber
 R tensorflow::GraphTransferInfo_GraphOutputNodeInfo::kShapeFieldNumber
 R tensorflow::GraphTransferInfo_NodeInfo::kInputCountFieldNumber
 R tensorflow::GraphTransferInfo_NodeInfo::kNameFieldNumber
 R tensorflow::GraphTransferInfo_NodeInfo::kNodeIdFieldNumber
 R tensorflow::GraphTransferInfo_NodeInfo::kOutputCountFieldNumber
 R tensorflow::GraphTransferInfo_NodeInfo::kPaddingIdFieldNumber
 R tensorflow::GraphTransferInfo_NodeInfo::kSocOpIdFieldNumber
 R tensorflow::GraphTransferInfo_NodeInfo::kTypeNameFieldNumber
 R tensorflow::GraphTransferInfo_NodeInput::kNodeIdFieldNumber
 R tensorflow::GraphTransferInfo_NodeInput::kOutputPortFieldNumber
 R tensorflow::GraphTransferInfo_NodeInputInfo::kNodeIdFieldNumber
 R tensorflow::GraphTransferInfo_NodeInputInfo::kNodeInputFieldNumber
 R tensorflow::GraphTransferInfo_NodeOutputInfo::kMaxByteSizeFieldNumber
 R tensorflow::GraphTransferInfo_NodeOutputInfo::kNodeIdFieldNumber
 R tensorflow::HistogramProto::kBucketFieldNumber
 R tensorflow::HistogramProto::kBucketLimitFieldNumber
 R tensorflow::HistogramProto::kMaxFieldNumber
 R tensorflow::HistogramProto::kMinFieldNumber
 R tensorflow::HistogramProto::kNumFieldNumber
 R tensorflow::HistogramProto::kSumFieldNumber
 R tensorflow::HistogramProto::kSumSquaresFieldNumber
 R tensorflow::Int64List::kValueFieldNumber
 R tensorflow::IteratorStateMetadata::kKeysFieldNumber
 R tensorflow::IteratorStateMetadata::kVersionFieldNumber
 R tensorflow::JobDef::kNameFieldNumber
 R tensorflow::JobDef::kTasksFieldNumber
 R tensorflow::KernelDef::kConstraintFieldNumber
 R tensorflow::KernelDef::kDeviceTypeFieldNumber
 R tensorflow::KernelDef::kHostMemoryArgFieldNumber
 R tensorflow::KernelDef::kLabelFieldNumber
 R tensorflow::KernelDef::kOpFieldNumber
 R tensorflow::KernelDef_AttrConstraint::kAllowedValuesFieldNumber
 R tensorflow::KernelDef_AttrConstraint::kNameFieldNumber
 R tensorflow::LogMessage::DEBUGGING
 R tensorflow::LogMessage::ERROR
 R tensorflow::LogMessage::FATAL
 R tensorflow::LogMessage::INFO
 R tensorflow::LogMessage::Level_ARRAYSIZE
 R tensorflow::LogMessage::Level_MAX
 R tensorflow::LogMessage::Level_MIN
 R tensorflow::LogMessage::UNKNOWN
 R tensorflow::LogMessage::WARN
 R tensorflow::LogMessage::kLevelFieldNumber
 R tensorflow::LogMessage::kMessageFieldNumber
 R tensorflow::MachineConfiguration::kAvailableDeviceInfoFieldNumber
 R tensorflow::MachineConfiguration::kCpuInfoFieldNumber
 R tensorflow::MachineConfiguration::kDeviceInfoFieldNumber
 R tensorflow::MachineConfiguration::kHostnameFieldNumber
 R tensorflow::MachineConfiguration::kMemoryInfoFieldNumber
 R tensorflow::MachineConfiguration::kPlatformInfoFieldNumber
 R tensorflow::MachineConfiguration::kSerialIdentifierFieldNumber
 R tensorflow::MemmappedFileSystem::kMemmappedPackageDefaultGraphDef
 R tensorflow::MemmappedFileSystem::kMemmappedPackagePrefix
 R tensorflow::MemmappedFileSystemDirectory::kElementFieldNumber
 R tensorflow::MemmappedFileSystemDirectoryElement::kNameFieldNumber
 R tensorflow::MemmappedFileSystemDirectoryElement::kOffsetFieldNumber
 R tensorflow::MemoryInfo::kAvailableFieldNumber
 R tensorflow::MemoryInfo::kTotalFieldNumber
 R tensorflow::MemoryLogRawAllocation::kAllocationIdFieldNumber
 R tensorflow::MemoryLogRawAllocation::kAllocatorNameFieldNumber
 R tensorflow::MemoryLogRawAllocation::kNumBytesFieldNumber
 R tensorflow::MemoryLogRawAllocation::kOperationFieldNumber
 R tensorflow::MemoryLogRawAllocation::kPtrFieldNumber
 R tensorflow::MemoryLogRawAllocation::kStepIdFieldNumber
 R tensorflow::MemoryLogRawDeallocation::kAllocationIdFieldNumber
 R tensorflow::MemoryLogRawDeallocation::kAllocatorNameFieldNumber
 R tensorflow::MemoryLogRawDeallocation::kDeferredFieldNumber
 R tensorflow::MemoryLogRawDeallocation::kOperationFieldNumber
 R tensorflow::MemoryLogRawDeallocation::kStepIdFieldNumber
 R tensorflow::MemoryLogStep::kHandleFieldNumber
 R tensorflow::MemoryLogStep::kStepIdFieldNumber
 R tensorflow::MemoryLogTensorAllocation::kKernelNameFieldNumber
 R tensorflow::MemoryLogTensorAllocation::kStepIdFieldNumber
 R tensorflow::MemoryLogTensorAllocation::kTensorFieldNumber
 R tensorflow::MemoryLogTensorDeallocation::kAllocationIdFieldNumber
 R tensorflow::MemoryLogTensorDeallocation::kAllocatorNameFieldNumber
 R tensorflow::MemoryLogTensorOutput::kIndexFieldNumber
 R tensorflow::MemoryLogTensorOutput::kKernelNameFieldNumber
 R tensorflow::MemoryLogTensorOutput::kStepIdFieldNumber
 R tensorflow::MemoryLogTensorOutput::kTensorFieldNumber
 R tensorflow::MemoryStats::kDevicePersistentMemorySizeFieldNumber
 R tensorflow::MemoryStats::kDevicePersistentTensorAllocIdsFieldNumber
 R tensorflow::MemoryStats::kDeviceTempMemorySizeFieldNumber
 R tensorflow::MemoryStats::kHostPersistentMemorySizeFieldNumber
 R tensorflow::MemoryStats::kHostPersistentTensorAllocIdsFieldNumber
 R tensorflow::MemoryStats::kHostTempMemorySizeFieldNumber
 R tensorflow::MetaGraphDef::kAssetFileDefFieldNumber
 R tensorflow::MetaGraphDef::kCollectionDefFieldNumber
 R tensorflow::MetaGraphDef::kGraphDefFieldNumber
 R tensorflow::MetaGraphDef::kMetaInfoDefFieldNumber
 R tensorflow::MetaGraphDef::kSaverDefFieldNumber
 R tensorflow::MetaGraphDef::kSignatureDefFieldNumber
 R tensorflow::MetaGraphDef_MetaInfoDef::kAnyInfoFieldNumber
 R tensorflow::MetaGraphDef_MetaInfoDef::kMetaGraphVersionFieldNumber
 R tensorflow::MetaGraphDef_MetaInfoDef::kStrippedOpListFieldNumber
 R tensorflow::MetaGraphDef_MetaInfoDef::kTagsFieldNumber
 R tensorflow::MetaGraphDef_MetaInfoDef::kTensorflowGitVersionFieldNumber
 R tensorflow::MetaGraphDef_MetaInfoDef::kTensorflowVersionFieldNumber
 R tensorflow::NameAttrList::kAttrFieldNumber
 R tensorflow::NameAttrList::kNameFieldNumber
 R tensorflow::NamedDevice::kNameFieldNumber
 R tensorflow::NamedDevice::kPropertiesFieldNumber
 R tensorflow::NamedTensorProto::kNameFieldNumber
 R tensorflow::NamedTensorProto::kTensorFieldNumber
 R tensorflow::NodeDef::kAttrFieldNumber
 R tensorflow::NodeDef::kDeviceFieldNumber
 R tensorflow::NodeDef::kInputFieldNumber
 R tensorflow::NodeDef::kNameFieldNumber
 R tensorflow::NodeDef::kOpFieldNumber
 R tensorflow::NodeExecStats::kAllEndRelMicrosFieldNumber
 R tensorflow::NodeExecStats::kAllStartMicrosFieldNumber
 R tensorflow::NodeExecStats::kMemoryFieldNumber
 R tensorflow::NodeExecStats::kMemoryStatsFieldNumber
 R tensorflow::NodeExecStats::kNodeNameFieldNumber
 R tensorflow::NodeExecStats::kOpEndRelMicrosFieldNumber
 R tensorflow::NodeExecStats::kOpStartRelMicrosFieldNumber
 R tensorflow::NodeExecStats::kOutputFieldNumber
 R tensorflow::NodeExecStats::kReferencedTensorFieldNumber
 R tensorflow::NodeExecStats::kScheduledMicrosFieldNumber
 R tensorflow::NodeExecStats::kThreadIdFieldNumber
 R tensorflow::NodeExecStats::kTimelineLabelFieldNumber
 R tensorflow::NodeOutput::kSlotFieldNumber
 R tensorflow::NodeOutput::kTensorDescriptionFieldNumber
 R tensorflow::OpDef::kAllowsUninitializedInputFieldNumber
 R tensorflow::OpDef::kAttrFieldNumber
 R tensorflow::OpDef::kDeprecationFieldNumber
 R tensorflow::OpDef::kDescriptionFieldNumber
 R tensorflow::OpDef::kInputArgFieldNumber
 R tensorflow::OpDef::kIsAggregateFieldNumber
 R tensorflow::OpDef::kIsCommutativeFieldNumber
 R tensorflow::OpDef::kIsStatefulFieldNumber
 R tensorflow::OpDef::kNameFieldNumber
 R tensorflow::OpDef::kOutputArgFieldNumber
 R tensorflow::OpDef::kSummaryFieldNumber
 R tensorflow::OpDef_ArgDef::kDescriptionFieldNumber
 R tensorflow::OpDef_ArgDef::kIsRefFieldNumber
 R tensorflow::OpDef_ArgDef::kNameFieldNumber
 R tensorflow::OpDef_ArgDef::kNumberAttrFieldNumber
 R tensorflow::OpDef_ArgDef::kTypeAttrFieldNumber
 R tensorflow::OpDef_ArgDef::kTypeFieldNumber
 R tensorflow::OpDef_ArgDef::kTypeListAttrFieldNumber
 R tensorflow::OpDef_AttrDef::kAllowedValuesFieldNumber
 R tensorflow::OpDef_AttrDef::kDefaultValueFieldNumber
 R tensorflow::OpDef_AttrDef::kDescriptionFieldNumber
 R tensorflow::OpDef_AttrDef::kHasMinimumFieldNumber
 R tensorflow::OpDef_AttrDef::kMinimumFieldNumber
 R tensorflow::OpDef_AttrDef::kNameFieldNumber
 R tensorflow::OpDef_AttrDef::kTypeFieldNumber
 R tensorflow::OpDeprecation::kExplanationFieldNumber
 R tensorflow::OpDeprecation::kVersionFieldNumber
 R tensorflow::OpList::kOpFieldNumber
 R tensorflow::OptimizerOptions::DEFAULT
 R tensorflow::OptimizerOptions::GlobalJitLevel_ARRAYSIZE
 R tensorflow::OptimizerOptions::GlobalJitLevel_MAX
 R tensorflow::OptimizerOptions::GlobalJitLevel_MIN
 R tensorflow::OptimizerOptions::L0
 R tensorflow::OptimizerOptions::L1
 R tensorflow::OptimizerOptions::Level_ARRAYSIZE
 R tensorflow::OptimizerOptions::Level_MAX
 R tensorflow::OptimizerOptions::Level_MIN
 R tensorflow::OptimizerOptions::OFF
 R tensorflow::OptimizerOptions::ON_1
 R tensorflow::OptimizerOptions::ON_2
 R tensorflow::OptimizerOptions::kDoCommonSubexpressionEliminationFieldNumber
 R tensorflow::OptimizerOptions::kDoConstantFoldingFieldNumber
 R tensorflow::OptimizerOptions::kDoFunctionInliningFieldNumber
 R tensorflow::OptimizerOptions::kGlobalJitLevelFieldNumber
 R tensorflow::OptimizerOptions::kMaxFoldedConstantInBytesFieldNumber
 R tensorflow::OptimizerOptions::kOptLevelFieldNumber
 R tensorflow::PlatformInfo::kBitsFieldNumber
 R tensorflow::PlatformInfo::kLinkageFieldNumber
 R tensorflow::PlatformInfo::kMachineFieldNumber
 R tensorflow::PlatformInfo::kReleaseFieldNumber
 R tensorflow::PlatformInfo::kSystemFieldNumber
 R tensorflow::PlatformInfo::kVersionFieldNumber
 R tensorflow::ProcessFunctionLibraryRuntime::kDefaultFLRDevice
 R tensorflow::QueueRunnerDef::kCancelOpNameFieldNumber
 R tensorflow::QueueRunnerDef::kCloseOpNameFieldNumber
 R tensorflow::QueueRunnerDef::kEnqueueOpNameFieldNumber
 R tensorflow::QueueRunnerDef::kQueueClosedExceptionTypesFieldNumber
 R tensorflow::QueueRunnerDef::kQueueNameFieldNumber
 R tensorflow::RPCOptions::kUseRpcForInprocessMasterFieldNumber
 R tensorflow::ReaderBaseState::kCurrentWorkFieldNumber
 R tensorflow::ReaderBaseState::kNumRecordsProducedFieldNumber
 R tensorflow::ReaderBaseState::kWorkFinishedFieldNumber
 R tensorflow::ReaderBaseState::kWorkStartedFieldNumber
 R tensorflow::RemoteFusedGraphExecuteInfo::BORDER_INPUT
 R tensorflow::RemoteFusedGraphExecuteInfo::BORDER_OUTPUT
 R tensorflow::RemoteFusedGraphExecuteInfo::FUSED_NODE
 R tensorflow::RemoteFusedGraphExecuteInfo::GRAPH_INPUT
 R tensorflow::RemoteFusedGraphExecuteInfo::GRAPH_OUTPUT
 R tensorflow::RemoteFusedGraphExecuteInfo::NodeType_ARRAYSIZE
 R tensorflow::RemoteFusedGraphExecuteInfo::NodeType_MAX
 R tensorflow::RemoteFusedGraphExecuteInfo::NodeType_MIN
 R tensorflow::RemoteFusedGraphExecuteInfo::UNUSED
 R tensorflow::RemoteFusedGraphExecuteInfo::kDefaultGraphInputTensorShapeFieldNumber
 R tensorflow::RemoteFusedGraphExecuteInfo::kDefaultGraphOutputTensorShapeFieldNumber
 R tensorflow::RemoteFusedGraphExecuteInfo::kExecutorNameFieldNumber
 R tensorflow::RemoteFusedGraphExecuteInfo::kGraphInputNodeNameFieldNumber
 R tensorflow::RemoteFusedGraphExecuteInfo::kGraphOutputNodeNameFieldNumber
 R tensorflow::RemoteFusedGraphExecuteInfo::kRemoteGraphFieldNumber
 R tensorflow::RemoteFusedGraphExecuteInfo::kSerializedExecutorParametersFieldNumber
 R tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::kDtypeFieldNumber
 R tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::kShapeFieldNumber
 R tensorflow::ResourceHandleProto::kContainerFieldNumber
 R tensorflow::ResourceHandleProto::kDeviceFieldNumber
 R tensorflow::ResourceHandleProto::kHashCodeFieldNumber
 R tensorflow::ResourceHandleProto::kMaybeTypeNameFieldNumber
 R tensorflow::ResourceHandleProto::kNameFieldNumber
 R tensorflow::RewriterConfig::AGGRESSIVE
 R tensorflow::RewriterConfig::DEFAULT
 R tensorflow::RewriterConfig::DEFAULT_MEM_OPT
 R tensorflow::RewriterConfig::HEURISTICS
 R tensorflow::RewriterConfig::MANUAL
 R tensorflow::RewriterConfig::MemOptType_ARRAYSIZE
 R tensorflow::RewriterConfig::MemOptType_MAX
 R tensorflow::RewriterConfig::MemOptType_MIN
 R tensorflow::RewriterConfig::NO_MEM_OPT
 R tensorflow::RewriterConfig::OFF
 R tensorflow::RewriterConfig::ON
 R tensorflow::RewriterConfig::RECOMPUTATION_HEURISTICS
 R tensorflow::RewriterConfig::SWAPPING_HEURISTICS
 R tensorflow::RewriterConfig::Toggle_ARRAYSIZE
 R tensorflow::RewriterConfig::Toggle_MAX
 R tensorflow::RewriterConfig::Toggle_MIN
 R tensorflow::RewriterConfig::kArithmeticOptimizationFieldNumber
 R tensorflow::RewriterConfig::kAutoParallelFieldNumber
 R tensorflow::RewriterConfig::kConstantFoldingFieldNumber
 R tensorflow::RewriterConfig::kDependencyOptimizationFieldNumber
 R tensorflow::RewriterConfig::kDisableModelPruningFieldNumber
 R tensorflow::RewriterConfig::kLayoutOptimizerFieldNumber
 R tensorflow::RewriterConfig::kMemoryOptimizationFieldNumber
 R tensorflow::RewriterConfig::kMemoryOptimizerTargetNodeNamePrefixFieldNumber
 R tensorflow::RewriterConfig::kOptimizersFieldNumber
 R tensorflow::RunConfiguration::kArgumentFieldNumber
 R tensorflow::RunMetadata::kCostGraphFieldNumber
 R tensorflow::RunMetadata::kPartitionGraphsFieldNumber
 R tensorflow::RunMetadata::kStepStatsFieldNumber
 R tensorflow::RunOptions::FULL_TRACE
 R tensorflow::RunOptions::HARDWARE_TRACE
 R tensorflow::RunOptions::NO_TRACE
 R tensorflow::RunOptions::SOFTWARE_TRACE
 R tensorflow::RunOptions::TraceLevel_ARRAYSIZE
 R tensorflow::RunOptions::TraceLevel_MAX
 R tensorflow::RunOptions::TraceLevel_MIN
 R tensorflow::RunOptions::kDebugOptionsFieldNumber
 R tensorflow::RunOptions::kInterOpThreadPoolFieldNumber
 R tensorflow::RunOptions::kOutputPartitionGraphsFieldNumber
 R tensorflow::RunOptions::kReportTensorAllocationsUponOomFieldNumber
 R tensorflow::RunOptions::kTimeoutInMsFieldNumber
 R tensorflow::RunOptions::kTraceLevelFieldNumber
 R tensorflow::SaveSliceInfoDef::kFullNameFieldNumber
 R tensorflow::SaveSliceInfoDef::kFullShapeFieldNumber
 R tensorflow::SaveSliceInfoDef::kVarOffsetFieldNumber
 R tensorflow::SaveSliceInfoDef::kVarShapeFieldNumber
 R tensorflow::SavedModel::kMetaGraphsFieldNumber
 R tensorflow::SavedModel::kSavedModelSchemaVersionFieldNumber
 R tensorflow::SavedSlice::kDataFieldNumber
 R tensorflow::SavedSlice::kNameFieldNumber
 R tensorflow::SavedSlice::kSliceFieldNumber
 R tensorflow::SavedSliceMeta::kNameFieldNumber
 R tensorflow::SavedSliceMeta::kShapeFieldNumber
 R tensorflow::SavedSliceMeta::kSliceFieldNumber
 R tensorflow::SavedSliceMeta::kTypeFieldNumber
 R tensorflow::SavedTensorSliceMeta::kTensorFieldNumber
 R tensorflow::SavedTensorSliceMeta::kVersionsFieldNumber
 R tensorflow::SavedTensorSlices::kDataFieldNumber
 R tensorflow::SavedTensorSlices::kMetaFieldNumber
 R tensorflow::SaverDef::CheckpointFormatVersion_ARRAYSIZE
 R tensorflow::SaverDef::CheckpointFormatVersion_MAX
 R tensorflow::SaverDef::CheckpointFormatVersion_MIN
 R tensorflow::SaverDef::LEGACY
 R tensorflow::SaverDef::V1
 R tensorflow::SaverDef::V2
 R tensorflow::SaverDef::kFilenameTensorNameFieldNumber
 R tensorflow::SaverDef::kKeepCheckpointEveryNHoursFieldNumber
 R tensorflow::SaverDef::kMaxToKeepFieldNumber
 R tensorflow::SaverDef::kRestoreOpNameFieldNumber
 R tensorflow::SaverDef::kSaveTensorNameFieldNumber
 R tensorflow::SaverDef::kShardedFieldNumber
 R tensorflow::SaverDef::kVersionFieldNumber
 R tensorflow::SequenceExample::kContextFieldNumber
 R tensorflow::SequenceExample::kFeatureListsFieldNumber
 R tensorflow::ServerDef::kClusterFieldNumber
 R tensorflow::ServerDef::kDefaultSessionConfigFieldNumber
 R tensorflow::ServerDef::kJobNameFieldNumber
 R tensorflow::ServerDef::kProtocolFieldNumber
 R tensorflow::ServerDef::kTaskIndexFieldNumber
 R tensorflow::SessionLog::CHECKPOINT
 R tensorflow::SessionLog::START
 R tensorflow::SessionLog::STATUS_UNSPECIFIED
 R tensorflow::SessionLog::STOP
 R tensorflow::SessionLog::SessionStatus_ARRAYSIZE
 R tensorflow::SessionLog::SessionStatus_MAX
 R tensorflow::SessionLog::SessionStatus_MIN
 R tensorflow::SessionLog::kCheckpointPathFieldNumber
 R tensorflow::SessionLog::kMsgFieldNumber
 R tensorflow::SessionLog::kStatusFieldNumber
 R tensorflow::SignatureDef::kInputsFieldNumber
 R tensorflow::SignatureDef::kMethodNameFieldNumber
 R tensorflow::SignatureDef::kOutputsFieldNumber
 R tensorflow::StepStats::kDevStatsFieldNumber
 R tensorflow::StringPiece::npos
 R tensorflow::Summary::kValueFieldNumber
 R tensorflow::SummaryDescription::kTypeHintFieldNumber
 R tensorflow::SummaryMetadata::kDisplayNameFieldNumber
 R tensorflow::SummaryMetadata::kPluginDataFieldNumber
 R tensorflow::SummaryMetadata::kSummaryDescriptionFieldNumber
 R tensorflow::SummaryMetadata_PluginData::kContentFieldNumber
 R tensorflow::SummaryMetadata_PluginData::kPluginNameFieldNumber
 R tensorflow::Summary_Audio::kContentTypeFieldNumber
 R tensorflow::Summary_Audio::kEncodedAudioStringFieldNumber
 R tensorflow::Summary_Audio::kLengthFramesFieldNumber
 R tensorflow::Summary_Audio::kNumChannelsFieldNumber
 R tensorflow::Summary_Audio::kSampleRateFieldNumber
 R tensorflow::Summary_Image::kColorspaceFieldNumber
 R tensorflow::Summary_Image::kEncodedImageStringFieldNumber
 R tensorflow::Summary_Image::kHeightFieldNumber
 R tensorflow::Summary_Image::kWidthFieldNumber
 R tensorflow::Summary_Value::kAudioFieldNumber
 R tensorflow::Summary_Value::kHistoFieldNumber
 R tensorflow::Summary_Value::kImageFieldNumber
 R tensorflow::Summary_Value::kMetadataFieldNumber
 R tensorflow::Summary_Value::kNodeNameFieldNumber
 R tensorflow::Summary_Value::kObsoleteOldStyleHistogramFieldNumber
 R tensorflow::Summary_Value::kSimpleValueFieldNumber
 R tensorflow::Summary_Value::kTagFieldNumber
 R tensorflow::Summary_Value::kTensorFieldNumber
 R tensorflow::TaggedRunMetadata::kRunMetadataFieldNumber
 R tensorflow::TaggedRunMetadata::kTagFieldNumber
 R tensorflow::TensorDescription::kAllocationDescriptionFieldNumber
 R tensorflow::TensorDescription::kDtypeFieldNumber
 R tensorflow::TensorDescription::kShapeFieldNumber
 R tensorflow::TensorInfo::kCooSparseFieldNumber
 R tensorflow::TensorInfo::kDtypeFieldNumber
 R tensorflow::TensorInfo::kNameFieldNumber
 R tensorflow::TensorInfo::kTensorShapeFieldNumber
 R tensorflow::TensorInfo_CooSparse::kDenseShapeTensorNameFieldNumber
 R tensorflow::TensorInfo_CooSparse::kIndicesTensorNameFieldNumber
 R tensorflow::TensorInfo_CooSparse::kValuesTensorNameFieldNumber
 R tensorflow::TensorProto::kBoolValFieldNumber
 R tensorflow::TensorProto::kDcomplexValFieldNumber
 R tensorflow::TensorProto::kDoubleValFieldNumber
 R tensorflow::TensorProto::kDtypeFieldNumber
 R tensorflow::TensorProto::kFloatValFieldNumber
 R tensorflow::TensorProto::kHalfValFieldNumber
 R tensorflow::TensorProto::kInt64ValFieldNumber
 R tensorflow::TensorProto::kIntValFieldNumber
 R tensorflow::TensorProto::kResourceHandleValFieldNumber
 R tensorflow::TensorProto::kScomplexValFieldNumber
 R tensorflow::TensorProto::kStringValFieldNumber
 R tensorflow::TensorProto::kTensorContentFieldNumber
 R tensorflow::TensorProto::kTensorShapeFieldNumber
 R tensorflow::TensorProto::kUint32ValFieldNumber
 R tensorflow::TensorProto::kUint64ValFieldNumber
 R tensorflow::TensorProto::kVariantValFieldNumber
 R tensorflow::TensorProto::kVersionNumberFieldNumber
 R tensorflow::TensorShapeProto::kDimFieldNumber
 R tensorflow::TensorShapeProto::kUnknownRankFieldNumber
 R tensorflow::TensorShapeProto_Dim::kNameFieldNumber
 R tensorflow::TensorShapeProto_Dim::kSizeFieldNumber
 R tensorflow::TensorSlice::kFullExtent
 R tensorflow::TensorSliceProto::kExtentFieldNumber
 R tensorflow::TensorSliceProto_Extent::kLengthFieldNumber
 R tensorflow::TensorSliceProto_Extent::kStartFieldNumber
 R tensorflow::TestResults::ANDROID_BENCHMARK
 R tensorflow::TestResults::BenchmarkType_ARRAYSIZE
 R tensorflow::TestResults::BenchmarkType_MAX
 R tensorflow::TestResults::BenchmarkType_MIN
 R tensorflow::TestResults::CPP_MICROBENCHMARK
 R tensorflow::TestResults::PYTHON_BENCHMARK
 R tensorflow::TestResults::UNKNOWN
 R tensorflow::TestResults::kBenchmarkTypeFieldNumber
 R tensorflow::TestResults::kBuildConfigurationFieldNumber
 R tensorflow::TestResults::kCommitIdFieldNumber
 R tensorflow::TestResults::kEntriesFieldNumber
 R tensorflow::TestResults::kMachineConfigurationFieldNumber
 R tensorflow::TestResults::kNameFieldNumber
 R tensorflow::TestResults::kRunConfigurationFieldNumber
 R tensorflow::TestResults::kRunModeFieldNumber
 R tensorflow::TestResults::kRunTimeFieldNumber
 R tensorflow::TestResults::kStartTimeFieldNumber
 R tensorflow::TestResults::kTargetFieldNumber
 R tensorflow::ThreadPoolOptionProto::kGlobalNameFieldNumber
 R tensorflow::ThreadPoolOptionProto::kNumThreadsFieldNumber
 R tensorflow::ValuesDef::kExternalValuesFieldNumber
 R tensorflow::ValuesDef::kValuesFieldNumber
 R tensorflow::VarLenFeatureProto::kDtypeFieldNumber
 R tensorflow::VarLenFeatureProto::kIndicesOutputTensorNameFieldNumber
 R tensorflow::VarLenFeatureProto::kShapesOutputTensorNameFieldNumber
 R tensorflow::VarLenFeatureProto::kValuesOutputTensorNameFieldNumber
 R tensorflow::VariableDef::kInitialValueNameFieldNumber
 R tensorflow::VariableDef::kInitializerNameFieldNumber
 R tensorflow::VariableDef::kIsResourceFieldNumber
 R tensorflow::VariableDef::kSaveSliceInfoDefFieldNumber
 R tensorflow::VariableDef::kSnapshotNameFieldNumber
 R tensorflow::VariableDef::kVariableNameFieldNumber
 R tensorflow::VariantTensorDataProto::kMetadataFieldNumber
 R tensorflow::VariantTensorDataProto::kTensorsFieldNumber
 R tensorflow::VariantTensorDataProto::kTypeNameFieldNumber
 R tensorflow::VersionDef::kBadConsumersFieldNumber
 R tensorflow::VersionDef::kMinConsumerFieldNumber
 R tensorflow::VersionDef::kProducerFieldNumber
 R tensorflow::WhileContextDef::kBackPropFieldNumber
 R tensorflow::WhileContextDef::kContextNameFieldNumber
 R tensorflow::WhileContextDef::kLoopEnterNamesFieldNumber
 R tensorflow::WhileContextDef::kLoopExitNamesFieldNumber
 R tensorflow::WhileContextDef::kMaximumIterationsNameFieldNumber
 R tensorflow::WhileContextDef::kParallelIterationsFieldNumber
 R tensorflow::WhileContextDef::kPivotForBodyNameFieldNumber
 R tensorflow::WhileContextDef::kPivotForPredNameFieldNumber
 R tensorflow::WhileContextDef::kPivotNameFieldNumber
 R tensorflow::WhileContextDef::kSwapMemoryFieldNumber
 R tensorflow::WhileContextDef::kValuesDefFieldNumber
 R tensorflow::checkpoint::kSavedTensorSlicesKey
 R tensorflow::error::protobuf_tensorflow_2fcore_2flib_2fcore_2ferror_5fcodes_2eproto::TableStruct::aux
 R tensorflow::error::protobuf_tensorflow_2fcore_2flib_2fcore_2ferror_5fcodes_2eproto::TableStruct::entries
 R tensorflow::error::protobuf_tensorflow_2fcore_2flib_2fcore_2ferror_5fcodes_2eproto::TableStruct::offsets
 R tensorflow::error::protobuf_tensorflow_2fcore_2flib_2fcore_2ferror_5fcodes_2eproto::TableStruct::schema
 R tensorflow::gtl::nullopt
 R tensorflow::io::compression::kGzip
 R tensorflow::io::compression::kNone
 R tensorflow::kTensorBundleMinConsumer
 R tensorflow::kTensorBundleMinProducer
 R tensorflow::kTensorBundleVersion
 R tensorflow::profile_utils::CpuUtils::INVALID_FREQUENCY
 R tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fexample_2ffeature_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fexample_2ffeature_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fexample_2ffeature_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fexample_2ffeature_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fallocation_5fdescription_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fallocation_5fdescription_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fallocation_5fdescription_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fallocation_5fdescription_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2ffunction_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2ffunction_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2ffunction_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2ffunction_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fiterator_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fiterator_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fiterator_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fiterator_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2flog_5fmemory_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2flog_5fmemory_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2flog_5fmemory_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2flog_5fmemory_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2freader_5fbase_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2freader_5fbase_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2freader_5fbase_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2freader_5fbase_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fsummary_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fsummary_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fsummary_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fsummary_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fslice_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fslice_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fslice_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fslice_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftypes_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftypes_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftypes_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftypes_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fvariable_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fvariable_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fvariable_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fvariable_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fversions_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fversions_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fversions_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fframework_2fversions_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcluster_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcluster_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcluster_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcluster_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fconfig_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fconfig_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fconfig_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fconfig_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fnamed_5ftensor_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fnamed_5ftensor_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fnamed_5ftensor_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fnamed_5ftensor_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fqueue_5frunner_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fqueue_5frunner_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fqueue_5frunner_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fqueue_5frunner_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaved_5fmodel_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaved_5fmodel_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaved_5fmodel_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaved_5fmodel_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaver_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaver_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaver_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaver_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensorflow_5fserver_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensorflow_5fserver_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensorflow_5fserver_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensorflow_5fserver_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2futil_2fevent_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2futil_2fevent_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2futil_2fevent_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2futil_2fevent_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2futil_2fmemmapped_5ffile_5fsystem_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2futil_2fmemmapped_5ffile_5fsystem_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2futil_2fmemmapped_5ffile_5fsystem_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2futil_2fmemmapped_5ffile_5fsystem_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2futil_2fsaved_5ftensor_5fslice_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2futil_2fsaved_5ftensor_5fslice_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2futil_2fsaved_5ftensor_5fslice_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2futil_2fsaved_5ftensor_5fslice_2eproto::TableStruct::schema
 R tensorflow::protobuf_tensorflow_2fcore_2futil_2ftest_5flog_2eproto::TableStruct::aux
 R tensorflow::protobuf_tensorflow_2fcore_2futil_2ftest_5flog_2eproto::TableStruct::entries
 R tensorflow::protobuf_tensorflow_2fcore_2futil_2ftest_5flog_2eproto::TableStruct::offsets
 R tensorflow::protobuf_tensorflow_2fcore_2futil_2ftest_5flog_2eproto::TableStruct::schema
 R tensorflow::shape_inference::InferenceContext::kUnknownDim
 R tensorflow::shape_inference::InferenceContext::kUnknownRank
 T AnnotateBenignRace
 T AnnotateBenignRaceSized
 T AnnotateEnableRaceDetection
 T AnnotateIgnoreReadsBegin
 T AnnotateIgnoreReadsEnd
 T AnnotateIgnoreWritesBegin
 T AnnotateIgnoreWritesEnd
 T AnnotateMemoryIsInitialized
 T AnnotateMemoryIsUninitialized
 T AnnotateRWLockAcquired
 T AnnotateRWLockCreate
 T AnnotateRWLockDestroy
 T AnnotateRWLockReleased
 T AnnotateThreadName
 T DGifCloseFile
 T DGifExtensionToGCB
 T DGifGetCode
 T DGifGetCodeNext
 T DGifGetExtension
 T DGifGetExtensionNext
 T DGifGetImageDesc
 T DGifGetLZCodes
 T DGifGetLine
 T DGifGetPixel
 T DGifGetRecordType
 T DGifGetScreenDesc
 T DGifOpen
 T DGifOpenFileHandle
 T DGifOpenFileName
 T DGifSavedExtensionToGCB
 T DGifSlurp
 T EGifCloseFile
 T EGifGCBToExtension
 T EGifGCBToSavedExtension
 T EGifGetGifVersion
 T EGifOpen
 T EGifOpenFileHandle
 T EGifOpenFileName
 T EGifPutCode
 T EGifPutCodeNext
 T EGifPutComment
 T EGifPutExtension
 T EGifPutExtensionBlock
 T EGifPutExtensionLeader
 T EGifPutExtensionTrailer
 T EGifPutImageDesc
 T EGifPutLine
 T EGifPutPixel
 T EGifPutScreenDesc
 T EGifSetGifVersion
 T EGifSpew
 T Eigen::GpuDevice const& tensorflow::OpKernelContext::eigen_device<Eigen::GpuDevice>() const
 T Eigen::ThreadPoolDevice const& tensorflow::OpKernelContext::eigen_device<Eigen::ThreadPoolDevice>() const
 T FreeLastSavedImage
 T GifAddExtensionBlock
 T GifApplyTranslation
 T GifBitSize
 T GifDrawBox
 T GifDrawBoxedText8x8
 T GifDrawRectangle
 T GifDrawText8x8
 T GifErrorString
 T GifFreeExtensions
 T GifFreeMapObject
 T GifFreeSavedImages
 T GifMakeMapObject
 T GifMakeSavedImage
 T GifQuantizeBuffer
 T GifUnionColorMap
 T RunningOnValgrind
 T SipHash13C
 T SipHashC
 T ValgrindSlowdown
 T _ClearHashTable
 T _ExistsHashTable
 T _InitHashTable
 T _InsertHashTable
 T _fini
 T _init
 T _tr_align
 T _tr_flush_bits
 T _tr_flush_block
 T _tr_init
 T _tr_stored_block
 T _tr_tally
 T absl::base_internal::ClearCurrentThreadIdentity()
 T absl::base_internal::CurrentThreadIdentityIfPresent()
 T absl::base_internal::CycleClock::Frequency()
 T absl::base_internal::CycleClock::Now()
 T absl::base_internal::GetTID()
 T absl::base_internal::NominalCPUFrequency()
 T absl::base_internal::NumCPUs()
 T absl::base_internal::RegisterSpinLockProfiler(void (*)(void const*, long))
 T absl::base_internal::SetCurrentThreadIdentity(absl::base_internal::ThreadIdentity*, void (*)(void*))
 T absl::base_internal::SpinLock::DecodeWaitCycles(unsigned int)
 T absl::base_internal::SpinLock::EncodeWaitCycles(long, long)
 T absl::base_internal::SpinLock::InitLinkerInitializedAndCooperative()
 T absl::base_internal::SpinLock::SlowLock()
 T absl::base_internal::SpinLock::SlowUnlock(unsigned int)
 T absl::base_internal::SpinLock::SpinLock(absl::base_internal::LinkerInitialized, absl::base_internal::SchedulingMode)
 T absl::base_internal::SpinLock::SpinLock(absl::base_internal::SchedulingMode)
 T absl::base_internal::SpinLock::SpinLoop(long, unsigned int*)
 T absl::base_internal::SpinLockSuggestedDelayNS(int)
 T absl::base_internal::SpinLockWait(std::atomic<unsigned int>*, int, absl::base_internal::SpinLockWaitTransition const*, absl::base_internal::SchedulingMode)
 T absl::base_internal::UnscaledCycleClock::Frequency()
 T absl::base_internal::UnscaledCycleClock::Now()
 T absl::raw_logging_internal::RawLog(absl::LogSeverity, char const*, int, char const*, ...)
 T absl::raw_logging_internal::RawLoggingFullySupported()
 T absl::raw_logging_internal::SafeWriteToStderr(char const*, unsigned long)
 T adler32
 T adler32_combine
 T adler32_combine64
 T bitrv2
 T bitrv208
 T bitrv208neg
 T bitrv216
 T bitrv216neg
 T bitrv2conj
 T bool tensorflow::DecodeVariant<tensorflow::VariantTensorDataProto>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::VariantTensorDataProto*)
 T bool tensorflow::DecodeVariant<tensorflow::VariantTensorDataProto>(tensorflow::VariantTensorData const&, tensorflow::VariantTensorDataProto*)
 T bool tensorflow::HasFeature<>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Features const&)
 T bool tensorflow::HasFeature<float>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Features const&)
 T bool tensorflow::HasFeature<long>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Features const&)
 T bool tensorflow::HasFeature<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Features const&)
 T cdft
 T cftb040
 T cftb1st
 T cftbsub
 T cftf040
 T cftf081
 T cftf082
 T cftf161
 T cftf162
 T cftf1st
 T cftfsub
 T cftfx41
 T cftleaf
 T cftmdl1
 T cftmdl2
 T cftrec4
 T cfttree
 T cftx020
 T compress
 T compress2
 T compressBound
 T crc32
 T crc32_combine
 T crc32_combine64
 T dctsub
 T ddct
 T ddst
 T deflate
 T deflateBound
 T deflateCopy
 T deflateEnd
 T deflateInit2_
 T deflateInit_
 T deflateParams
 T deflatePending
 T deflatePrime
 T deflateReset
 T deflateResetKeep
 T deflateSetDictionary
 T deflateSetHeader
 T deflateTune
 T dfct
 T dfst
 T dstsub
 T farmhashcc::CityHash128WithSeed(char const*, unsigned long, std::pair<unsigned long, unsigned long>)
 T farmhashcc::Fingerprint128(char const*, unsigned long)
 T farmhashcc::Hash32(char const*, unsigned long)
 T farmhashcc::Hash32WithSeed(char const*, unsigned long, unsigned int)
 T farmhashmk::Hash32(char const*, unsigned long)
 T farmhashmk::Hash32WithSeed(char const*, unsigned long, unsigned int)
 T farmhashna::Hash64(char const*, unsigned long)
 T farmhashna::Hash64WithSeed(char const*, unsigned long, unsigned long)
 T farmhashna::Hash64WithSeeds(char const*, unsigned long, unsigned long, unsigned long)
 T farmhashnt::Hash32(char const*, unsigned long)
 T farmhashnt::Hash32WithSeed(char const*, unsigned long, unsigned int)
 T farmhashsa::Hash32(char const*, unsigned long)
 T farmhashsa::Hash32WithSeed(char const*, unsigned long, unsigned int)
 T farmhashsu::Hash32(char const*, unsigned long)
 T farmhashsu::Hash32WithSeed(char const*, unsigned long, unsigned int)
 T farmhashte::Hash64(char const*, unsigned long)
 T farmhashte::Hash64WithSeed(char const*, unsigned long, unsigned long)
 T farmhashte::Hash64WithSeeds(char const*, unsigned long, unsigned long, unsigned long)
 T farmhashuo::Hash64(char const*, unsigned long)
 T farmhashuo::Hash64WithSeed(char const*, unsigned long, unsigned long)
 T farmhashuo::Hash64WithSeeds(char const*, unsigned long, unsigned long, unsigned long)
 T farmhashxo::Hash64(char const*, unsigned long)
 T farmhashxo::Hash64WithSeed(char const*, unsigned long, unsigned long)
 T farmhashxo::Hash64WithSeeds(char const*, unsigned long, unsigned long, unsigned long)
 T get_crc_table
 T gz_error
 T gzbuffer
 T gzclearerr
 T gzclose
 T gzclose_r
 T gzclose_w
 T gzdirect
 T gzdopen
 T gzeof
 T gzerror
 T gzflush
 T gzgetc
 T gzgetc_
 T gzgets
 T gzoffset
 T gzoffset64
 T gzopen
 T gzopen64
 T gzprintf
 T gzputc
 T gzputs
 T gzread
 T gzrewind
 T gzseek
 T gzseek64
 T gzsetparams
 T gztell
 T gztell64
 T gzungetc
 T gzvprintf
 T gzwrite
 T highwayhash::Cpuid(unsigned int, unsigned int, unsigned int*)
 T inflate
 T inflateBack
 T inflateBackEnd
 T inflateBackInit_
 T inflateCopy
 T inflateEnd
 T inflateGetDictionary
 T inflateGetHeader
 T inflateInit2_
 T inflateInit_
 T inflateMark
 T inflatePrime
 T inflateReset
 T inflateReset2
 T inflateResetKeep
 T inflateSetDictionary
 T inflateSync
 T inflateSyncPoint
 T inflateUndermine
 T inflate_fast
 T inflate_table
 T jcopy_block_row
 T jcopy_sample_rows
 T jdiv_round_up
 T je_a0dalloc
 T je_a0get
 T je_a0malloc
 T je_aligned_alloc
 T je_arena_alloc_junk_small
 T je_arena_basic_stats_merge
 T je_arena_boot
 T je_arena_choose_hard
 T je_arena_chunk_alloc_huge
 T je_arena_chunk_cache_maybe_insert
 T je_arena_chunk_cache_maybe_remove
 T je_arena_chunk_dalloc_huge
 T je_arena_chunk_ralloc_huge_expand
 T je_arena_chunk_ralloc_huge_shrink
 T je_arena_chunk_ralloc_huge_similar
 T je_arena_cleanup
 T je_arena_dalloc_bin
 T je_arena_dalloc_bin_junked_locked
 T je_arena_dalloc_junk_large
 T je_arena_dalloc_junk_small
 T je_arena_dalloc_large
 T je_arena_dalloc_large_junked_locked
 T je_arena_dalloc_small
 T je_arena_decay_time_default_get
 T je_arena_decay_time_default_set
 T je_arena_decay_time_get
 T je_arena_decay_time_set
 T je_arena_dss_prec_get
 T je_arena_dss_prec_set
 T je_arena_extent_sn_next
 T je_arena_init
 T je_arena_lg_dirty_mult_default_get
 T je_arena_lg_dirty_mult_default_set
 T je_arena_lg_dirty_mult_get
 T je_arena_lg_dirty_mult_set
 T je_arena_malloc_hard
 T je_arena_malloc_large
 T je_arena_maybe_purge
 T je_arena_migrate
 T je_arena_new
 T je_arena_node_alloc
 T je_arena_node_dalloc
 T je_arena_nthreads_dec
 T je_arena_nthreads_get
 T je_arena_nthreads_inc
 T je_arena_palloc
 T je_arena_postfork_child
 T je_arena_postfork_parent
 T je_arena_prefork0
 T je_arena_prefork1
 T je_arena_prefork2
 T je_arena_prefork3
 T je_arena_prof_promoted
 T je_arena_purge
 T je_arena_quarantine_junk_small
 T je_arena_ralloc
 T je_arena_ralloc_no_move
 T je_arena_reset
 T je_arena_stats_merge
 T je_arena_tcache_fill_small
 T je_arena_tdata_get_hard
 T je_arenas_tdata_bypass_cleanup
 T je_arenas_tdata_cleanup
 T je_base_alloc
 T je_base_boot
 T je_base_postfork_child
 T je_base_postfork_parent
 T je_base_prefork
 T je_base_stats_get
 T je_bitmap_info_init
 T je_bitmap_init
 T je_bitmap_size
 T je_bootstrap_calloc
 T je_bootstrap_free
 T je_bootstrap_malloc
 T je_bt_init
 T je_buferror
 T je_calloc
 T je_chunk_alloc_base
 T je_chunk_alloc_cache
 T je_chunk_alloc_dss
 T je_chunk_alloc_mmap
 T je_chunk_alloc_wrapper
 T je_chunk_boot
 T je_chunk_dalloc_cache
 T je_chunk_dalloc_mmap
 T je_chunk_dalloc_wrapper
 T je_chunk_deregister
 T je_chunk_dss_boot
 T je_chunk_dss_mergeable
 T je_chunk_dss_prec_get
 T je_chunk_dss_prec_set
 T je_chunk_hooks_get
 T je_chunk_hooks_set
 T je_chunk_in_dss
 T je_chunk_purge_wrapper
 T je_chunk_register
 T je_ckh_count
 T je_ckh_delete
 T je_ckh_insert
 T je_ckh_iter
 T je_ckh_new
 T je_ckh_pointer_hash
 T je_ckh_pointer_keycomp
 T je_ckh_remove
 T je_ckh_search
 T je_ckh_string_hash
 T je_ckh_string_keycomp
 T je_ctl_boot
 T je_ctl_bymib
 T je_ctl_byname
 T je_ctl_nametomib
 T je_ctl_postfork_child
 T je_ctl_postfork_parent
 T je_ctl_prefork
 T je_dallocx
 T je_extent_tree_ad_destroy
 T je_extent_tree_ad_destroy_recurse
 T je_extent_tree_ad_empty
 T je_extent_tree_ad_first
 T je_extent_tree_ad_insert
 T je_extent_tree_ad_iter
 T je_extent_tree_ad_iter_recurse
 T je_extent_tree_ad_iter_start
 T je_extent_tree_ad_last
 T je_extent_tree_ad_new
 T je_extent_tree_ad_next
 T je_extent_tree_ad_nsearch
 T je_extent_tree_ad_prev
 T je_extent_tree_ad_psearch
 T je_extent_tree_ad_remove
 T je_extent_tree_ad_reverse_iter
 T je_extent_tree_ad_reverse_iter_recurse
 T je_extent_tree_ad_reverse_iter_start
 T je_extent_tree_ad_search
 T je_extent_tree_szsnad_destroy
 T je_extent_tree_szsnad_destroy_recurse
 T je_extent_tree_szsnad_empty
 T je_extent_tree_szsnad_first
 T je_extent_tree_szsnad_insert
 T je_extent_tree_szsnad_iter
 T je_extent_tree_szsnad_iter_recurse
 T je_extent_tree_szsnad_iter_start
 T je_extent_tree_szsnad_last
 T je_extent_tree_szsnad_new
 T je_extent_tree_szsnad_next
 T je_extent_tree_szsnad_nsearch
 T je_extent_tree_szsnad_prev
 T je_extent_tree_szsnad_psearch
 T je_extent_tree_szsnad_remove
 T je_extent_tree_szsnad_reverse_iter
 T je_extent_tree_szsnad_reverse_iter_recurse
 T je_extent_tree_szsnad_reverse_iter_start
 T je_extent_tree_szsnad_search
 T je_huge_aalloc
 T je_huge_dalloc
 T je_huge_malloc
 T je_huge_palloc
 T je_huge_prof_tctx_get
 T je_huge_prof_tctx_reset
 T je_huge_prof_tctx_set
 T je_huge_ralloc
 T je_huge_ralloc_no_move
 T je_huge_salloc
 T je_iarena_cleanup
 T je_jemalloc_postfork_child
 T je_jemalloc_postfork_parent
 T je_jemalloc_prefork
 T je_mallctl
 T je_mallctlbymib
 T je_mallctlnametomib
 T je_malloc_cprintf
 T je_malloc_mutex_boot
 T je_malloc_mutex_init
 T je_malloc_mutex_postfork_child
 T je_malloc_mutex_postfork_parent
 T je_malloc_mutex_prefork
 T je_malloc_printf
 T je_malloc_snprintf
 T je_malloc_stats_print
 T je_malloc_strtoumax
 T je_malloc_tsd_boot0
 T je_malloc_tsd_boot1
 T je_malloc_tsd_cleanup_register
 T je_malloc_tsd_dalloc
 T je_malloc_tsd_malloc
 T je_malloc_tsd_no_cleanup
 T je_malloc_usable_size
 T je_malloc_vcprintf
 T je_malloc_vsnprintf
 T je_malloc_write
 T je_mallocx
 T je_memalign
 T je_nallocx
 T je_narenas_tdata_cleanup
 T je_narenas_total_get
 T je_nstime_add
 T je_nstime_compare
 T je_nstime_copy
 T je_nstime_divide
 T je_nstime_idivide
 T je_nstime_imultiply
 T je_nstime_init
 T je_nstime_init2
 T je_nstime_monotonic
 T je_nstime_ns
 T je_nstime_nsec
 T je_nstime_sec
 T je_nstime_subtract
 T je_nstime_update
 T je_pages_boot
 T je_pages_commit
 T je_pages_decommit
 T je_pages_huge
 T je_pages_map
 T je_pages_nohuge
 T je_pages_purge
 T je_pages_trim
 T je_pages_unmap
 T je_prof_active_get
 T je_prof_active_set
 T je_prof_alloc_rollback
 T je_prof_backtrace
 T je_prof_boot0
 T je_prof_boot1
 T je_prof_boot2
 T je_prof_free_sampled_object
 T je_prof_gdump
 T je_prof_gdump_get
 T je_prof_gdump_set
 T je_prof_idump
 T je_prof_lookup
 T je_prof_malloc_sample_object
 T je_prof_mdump
 T je_prof_postfork_child
 T je_prof_postfork_parent
 T je_prof_prefork0
 T je_prof_prefork1
 T je_prof_reset
 T je_prof_sample_threshold_update
 T je_prof_tdata_cleanup
 T je_prof_tdata_init
 T je_prof_tdata_reinit
 T je_prof_thread_active_get
 T je_prof_thread_active_init_get
 T je_prof_thread_active_init_set
 T je_prof_thread_active_set
 T je_prof_thread_name_get
 T je_prof_thread_name_set
 T je_quarantine
 T je_quarantine_alloc_hook_work
 T je_quarantine_cleanup
 T je_rallocx
 T je_rtree_child_read_hard
 T je_rtree_delete
 T je_rtree_new
 T je_rtree_subtree_read_hard
 T je_sallocx
 T je_sdallocx
 T je_stats_print
 T je_tcache_alloc_small_hard
 T je_tcache_arena_reassociate
 T je_tcache_bin_flush_large
 T je_tcache_bin_flush_small
 T je_tcache_boot
 T je_tcache_cleanup
 T je_tcache_create
 T je_tcache_enabled_cleanup
 T je_tcache_event_hard
 T je_tcache_get_hard
 T je_tcache_salloc
 T je_tcache_stats_merge
 T je_tcaches_create
 T je_tcaches_destroy
 T je_tcaches_flush
 T je_thread_allocated_cleanup
 T je_thread_deallocated_cleanup
 T je_tsd_cleanup
 T je_valloc
 T je_witness_fork_cleanup
 T je_witness_init
 T je_witness_lock_error
 T je_witness_lockless_error
 T je_witness_not_owner_error
 T je_witness_owner_error
 T je_witness_postfork_child
 T je_witness_postfork_parent
 T je_witness_prefork
 T je_witnesses_cleanup
 T je_xallocx
 T jemalloc_free
 T jemalloc_malloc
 T jemalloc_posix_memalign
 T jemalloc_realloc
 T jinit_1pass_quantizer
 T jinit_2pass_quantizer
 T jinit_arith_decoder
 T jinit_arith_encoder
 T jinit_c_coef_controller
 T jinit_c_main_controller
 T jinit_c_master_control
 T jinit_c_prep_controller
 T jinit_color_converter
 T jinit_color_deconverter
 T jinit_compress_master
 T jinit_d_coef_controller
 T jinit_d_main_controller
 T jinit_d_post_controller
 T jinit_downsampler
 T jinit_forward_dct
 T jinit_huff_decoder
 T jinit_huff_encoder
 T jinit_input_controller
 T jinit_inverse_dct
 T jinit_marker_reader
 T jinit_marker_writer
 T jinit_master_decompress
 T jinit_memory_mgr
 T jinit_merged_upsampler
 T jinit_phuff_decoder
 T jinit_phuff_encoder
 T jinit_upsampler
 T jpeg_CreateCompress
 T jpeg_CreateDecompress
 T jpeg_abort
 T jpeg_abort_compress
 T jpeg_abort_decompress
 T jpeg_add_quant_table
 T jpeg_alloc_huff_table
 T jpeg_alloc_quant_table
 T jpeg_calc_output_dimensions
 T jpeg_consume_input
 T jpeg_copy_critical_parameters
 T jpeg_crop_scanline
 T jpeg_default_colorspace
 T jpeg_destroy
 T jpeg_destroy_compress
 T jpeg_destroy_decompress
 T jpeg_fdct_float
 T jpeg_fdct_ifast
 T jpeg_fdct_islow
 T jpeg_fill_bit_buffer
 T jpeg_finish_compress
 T jpeg_finish_decompress
 T jpeg_finish_output
 T jpeg_free_large
 T jpeg_free_small
 T jpeg_gen_optimal_table
 T jpeg_get_large
 T jpeg_get_small
 T jpeg_has_multiple_scans
 T jpeg_huff_decode
 T jpeg_idct_10x10
 T jpeg_idct_11x11
 T jpeg_idct_12x12
 T jpeg_idct_13x13
 T jpeg_idct_14x14
 T jpeg_idct_15x15
 T jpeg_idct_16x16
 T jpeg_idct_1x1
 T jpeg_idct_2x2
 T jpeg_idct_3x3
 T jpeg_idct_4x4
 T jpeg_idct_5x5
 T jpeg_idct_6x6
 T jpeg_idct_7x7
 T jpeg_idct_9x9
 T jpeg_idct_float
 T jpeg_idct_ifast
 T jpeg_idct_islow
 T jpeg_input_complete
 T jpeg_make_c_derived_tbl
 T jpeg_make_d_derived_tbl
 T jpeg_mem_available
 T jpeg_mem_dest
 T jpeg_mem_init
 T jpeg_mem_src
 T jpeg_mem_term
 T jpeg_new_colormap
 T jpeg_open_backing_store
 T jpeg_quality_scaling
 T jpeg_read_coefficients
 T jpeg_read_header
 T jpeg_read_raw_data
 T jpeg_read_scanlines
 T jpeg_resync_to_restart
 T jpeg_save_markers
 T jpeg_set_colorspace
 T jpeg_set_defaults
 T jpeg_set_linear_quality
 T jpeg_set_marker_processor
 T jpeg_set_quality
 T jpeg_simple_progression
 T jpeg_skip_scanlines
 T jpeg_start_compress
 T jpeg_start_decompress
 T jpeg_start_output
 T jpeg_std_error
 T jpeg_stdio_dest
 T jpeg_stdio_src
 T jpeg_suppress_tables
 T jpeg_write_coefficients
 T jpeg_write_m_byte
 T jpeg_write_m_header
 T jpeg_write_marker
 T jpeg_write_raw_data
 T jpeg_write_scanlines
 T jpeg_write_tables
 T jround_up
 T jsimd_can_convsamp
 T jsimd_can_convsamp_float
 T jsimd_can_fdct_float
 T jsimd_can_fdct_ifast
 T jsimd_can_fdct_islow
 T jsimd_can_h2v1_downsample
 T jsimd_can_h2v1_fancy_upsample
 T jsimd_can_h2v1_merged_upsample
 T jsimd_can_h2v1_upsample
 T jsimd_can_h2v2_downsample
 T jsimd_can_h2v2_fancy_upsample
 T jsimd_can_h2v2_merged_upsample
 T jsimd_can_h2v2_upsample
 T jsimd_can_huff_encode_one_block
 T jsimd_can_idct_2x2
 T jsimd_can_idct_4x4
 T jsimd_can_idct_float
 T jsimd_can_idct_ifast
 T jsimd_can_idct_islow
 T jsimd_can_quantize
 T jsimd_can_quantize_float
 T jsimd_can_rgb_gray
 T jsimd_can_rgb_ycc
 T jsimd_can_ycc_rgb
 T jsimd_can_ycc_rgb565
 T jsimd_convsamp
 T jsimd_convsamp_float
 T jsimd_convsamp_float_sse2
 T jsimd_convsamp_sse2
 T jsimd_extbgr_gray_convert_sse2
 T jsimd_extbgr_ycc_convert_sse2
 T jsimd_extbgrx_gray_convert_sse2
 T jsimd_extbgrx_ycc_convert_sse2
 T jsimd_extrgb_gray_convert_sse2
 T jsimd_extrgb_ycc_convert_sse2
 T jsimd_extrgbx_gray_convert_sse2
 T jsimd_extrgbx_ycc_convert_sse2
 T jsimd_extxbgr_gray_convert_sse2
 T jsimd_extxbgr_ycc_convert_sse2
 T jsimd_extxrgb_gray_convert_sse2
 T jsimd_extxrgb_ycc_convert_sse2
 T jsimd_fdct_float
 T jsimd_fdct_float_sse
 T jsimd_fdct_ifast
 T jsimd_fdct_ifast_sse2
 T jsimd_fdct_islow
 T jsimd_fdct_islow_sse2
 T jsimd_h2v1_downsample
 T jsimd_h2v1_downsample_sse2
 T jsimd_h2v1_extbgr_merged_upsample_sse2
 T jsimd_h2v1_extbgrx_merged_upsample_sse2
 T jsimd_h2v1_extrgb_merged_upsample_sse2
 T jsimd_h2v1_extrgbx_merged_upsample_sse2
 T jsimd_h2v1_extxbgr_merged_upsample_sse2
 T jsimd_h2v1_extxrgb_merged_upsample_sse2
 T jsimd_h2v1_fancy_upsample
 T jsimd_h2v1_fancy_upsample_sse2
 T jsimd_h2v1_merged_upsample
 T jsimd_h2v1_merged_upsample_sse2
 T jsimd_h2v1_upsample
 T jsimd_h2v1_upsample_sse2
 T jsimd_h2v2_downsample
 T jsimd_h2v2_downsample_sse2
 T jsimd_h2v2_extbgr_merged_upsample_sse2
 T jsimd_h2v2_extbgrx_merged_upsample_sse2
 T jsimd_h2v2_extrgb_merged_upsample_sse2
 T jsimd_h2v2_extrgbx_merged_upsample_sse2
 T jsimd_h2v2_extxbgr_merged_upsample_sse2
 T jsimd_h2v2_extxrgb_merged_upsample_sse2
 T jsimd_h2v2_fancy_upsample
 T jsimd_h2v2_fancy_upsample_sse2
 T jsimd_h2v2_merged_upsample
 T jsimd_h2v2_merged_upsample_sse2
 T jsimd_h2v2_upsample
 T jsimd_h2v2_upsample_sse2
 T jsimd_huff_encode_one_block
 T jsimd_huff_encode_one_block_sse2
 T jsimd_idct_2x2
 T jsimd_idct_2x2_sse2
 T jsimd_idct_4x4
 T jsimd_idct_4x4_sse2
 T jsimd_idct_float
 T jsimd_idct_float_sse2
 T jsimd_idct_ifast
 T jsimd_idct_ifast_sse2
 T jsimd_idct_islow
 T jsimd_idct_islow_sse2
 T jsimd_quantize
 T jsimd_quantize_float
 T jsimd_quantize_float_sse2
 T jsimd_quantize_sse2
 T jsimd_rgb_gray_convert
 T jsimd_rgb_gray_convert_sse2
 T jsimd_rgb_ycc_convert
 T jsimd_rgb_ycc_convert_sse2
 T jsimd_ycc_extbgr_convert_sse2
 T jsimd_ycc_extbgrx_convert_sse2
 T jsimd_ycc_extrgb_convert_sse2
 T jsimd_ycc_extrgbx_convert_sse2
 T jsimd_ycc_extxbgr_convert_sse2
 T jsimd_ycc_extxrgb_convert_sse2
 T jsimd_ycc_rgb565_convert
 T jsimd_ycc_rgb_convert
 T jsimd_ycc_rgb_convert_sse2
 T jzero_far
 T makect
 T makeipt
 T makewt
 T nsync::nsync_counter_add(nsync::nsync_counter_s_*, int)
 T nsync::nsync_counter_free(nsync::nsync_counter_s_*)
 T nsync::nsync_counter_new(unsigned int)
 T nsync::nsync_counter_value(nsync::nsync_counter_s_*)
 T nsync::nsync_counter_wait(nsync::nsync_counter_s_*, timespec)
 T nsync::nsync_cv_broadcast(nsync::nsync_cv_s_*)
 T nsync::nsync_cv_debug_state(nsync::nsync_cv_s_*, char*, int)
 T nsync::nsync_cv_debug_state_and_waiters(nsync::nsync_cv_s_*, char*, int)
 T nsync::nsync_cv_debugger(nsync::nsync_cv_s_*)
 T nsync::nsync_cv_init(nsync::nsync_cv_s_*)
 T nsync::nsync_cv_signal(nsync::nsync_cv_s_*)
 T nsync::nsync_cv_wait(nsync::nsync_cv_s_*, nsync::nsync_mu_s_*)
 T nsync::nsync_cv_wait_with_deadline(nsync::nsync_cv_s_*, nsync::nsync_mu_s_*, timespec, nsync::nsync_note_s_*)
 T nsync::nsync_cv_wait_with_deadline_generic(nsync::nsync_cv_s_*, void*, void (*)(void*), void (*)(void*), timespec, nsync::nsync_note_s_*)
 T nsync::nsync_dll_first_(nsync::nsync_dll_element_s_*)
 T nsync::nsync_dll_init_(nsync::nsync_dll_element_s_*, void*)
 T nsync::nsync_dll_is_empty_(nsync::nsync_dll_element_s_*)
 T nsync::nsync_dll_last_(nsync::nsync_dll_element_s_*)
 T nsync::nsync_dll_make_first_in_list_(nsync::nsync_dll_element_s_*, nsync::nsync_dll_element_s_*)
 T nsync::nsync_dll_make_last_in_list_(nsync::nsync_dll_element_s_*, nsync::nsync_dll_element_s_*)
 T nsync::nsync_dll_next_(nsync::nsync_dll_element_s_*, nsync::nsync_dll_element_s_*)
 T nsync::nsync_dll_nsync_waiter_(nsync::nsync_dll_element_s_*)
 T nsync::nsync_dll_prev_(nsync::nsync_dll_element_s_*, nsync::nsync_dll_element_s_*)
 T nsync::nsync_dll_remove_(nsync::nsync_dll_element_s_*, nsync::nsync_dll_element_s_*)
 T nsync::nsync_dll_splice_after_(nsync::nsync_dll_element_s_*, nsync::nsync_dll_element_s_*)
 T nsync::nsync_dll_waiter_(nsync::nsync_dll_element_s_*)
 T nsync::nsync_dll_waiter_samecond_(nsync::nsync_dll_element_s_*)
 T nsync::nsync_from_time_point_(std::chrono::time_point<std::chrono::_V2::system_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > >)
 T nsync::nsync_maybe_merge_conditions_(nsync::nsync_dll_element_s_*, nsync::nsync_dll_element_s_*)
 T nsync::nsync_mu_assert_held(nsync::nsync_mu_s_ const*)
 T nsync::nsync_mu_debug_state(nsync::nsync_mu_s_*, char*, int)
 T nsync::nsync_mu_debug_state_and_waiters(nsync::nsync_mu_s_*, char*, int)
 T nsync::nsync_mu_debugger(nsync::nsync_mu_s_*)
 T nsync::nsync_mu_init(nsync::nsync_mu_s_*)
 T nsync::nsync_mu_is_reader(nsync::nsync_mu_s_ const*)
 T nsync::nsync_mu_lock(nsync::nsync_mu_s_*)
 T nsync::nsync_mu_lock_slow_(nsync::nsync_mu_s_*, nsync::waiter*, unsigned int, nsync::lock_type_s*)
 T nsync::nsync_mu_rassert_held(nsync::nsync_mu_s_ const*)
 T nsync::nsync_mu_rlock(nsync::nsync_mu_s_*)
 T nsync::nsync_mu_rtrylock(nsync::nsync_mu_s_*)
 T nsync::nsync_mu_runlock(nsync::nsync_mu_s_*)
 T nsync::nsync_mu_semaphore_init(nsync::nsync_semaphore_s_*)
 T nsync::nsync_mu_semaphore_p(nsync::nsync_semaphore_s_*)
 T nsync::nsync_mu_semaphore_p_with_deadline(nsync::nsync_semaphore_s_*, timespec)
 T nsync::nsync_mu_semaphore_v(nsync::nsync_semaphore_s_*)
 T nsync::nsync_mu_trylock(nsync::nsync_mu_s_*)
 T nsync::nsync_mu_unlock(nsync::nsync_mu_s_*)
 T nsync::nsync_mu_unlock_slow_(nsync::nsync_mu_s_*, nsync::lock_type_s*)
 T nsync::nsync_mu_unlock_without_wakeup(nsync::nsync_mu_s_*)
 T nsync::nsync_mu_wait(nsync::nsync_mu_s_*, int (*)(void const*), void const*, int (*)(void const*, void const*))
 T nsync::nsync_mu_wait_with_deadline(nsync::nsync_mu_s_*, int (*)(void const*), void const*, int (*)(void const*, void const*), timespec, nsync::nsync_note_s_*)
 T nsync::nsync_note_expiry(nsync::nsync_note_s_*)
 T nsync::nsync_note_free(nsync::nsync_note_s_*)
 T nsync::nsync_note_is_notified(nsync::nsync_note_s_*)
 T nsync::nsync_note_new(nsync::nsync_note_s_*, timespec)
 T nsync::nsync_note_notified_deadline_(nsync::nsync_note_s_*)
 T nsync::nsync_note_notify(nsync::nsync_note_s_*)
 T nsync::nsync_note_wait(nsync::nsync_note_s_*, timespec)
 T nsync::nsync_panic_(char const*)
 T nsync::nsync_per_thread_waiter_(void (*)(void*))
 T nsync::nsync_remove_from_mu_queue_(nsync::nsync_dll_element_s_*, nsync::nsync_dll_element_s_*)
 T nsync::nsync_run_once(std::atomic<unsigned int>*, void (*)())
 T nsync::nsync_run_once_arg(std::atomic<unsigned int>*, void (*)(void*), void*)
 T nsync::nsync_run_once_arg_spin(std::atomic<unsigned int>*, void (*)(void*), void*)
 T nsync::nsync_run_once_spin(std::atomic<unsigned int>*, void (*)())
 T nsync::nsync_sem_wait_with_cancel_(nsync::waiter*, timespec, nsync::nsync_note_s_*)
 T nsync::nsync_set_per_thread_waiter_(void*, void (*)(void*))
 T nsync::nsync_spin_delay_(unsigned int)
 T nsync::nsync_spin_test_and_set_(std::atomic<unsigned int>*, unsigned int, unsigned int, unsigned int)
 T nsync::nsync_time_add(timespec, timespec)
 T nsync::nsync_time_cmp(timespec, timespec)
 T nsync::nsync_time_ms(unsigned int)
 T nsync::nsync_time_now()
 T nsync::nsync_time_s_ns(long, unsigned int)
 T nsync::nsync_time_sleep(timespec)
 T nsync::nsync_time_sub(timespec, timespec)
 T nsync::nsync_time_us(unsigned int)
 T nsync::nsync_to_time_point_(timespec)
 T nsync::nsync_wait_n(void*, void (*)(void*), void (*)(void*), timespec, int, nsync::nsync_waitable_s**)
 T nsync::nsync_waiter_free_(nsync::waiter*)
 T nsync::nsync_waiter_new_()
 T nsync::nsync_yield_()
 T perftools::gputools::CalculateDimensionality(perftools::gputools::DeviceDescription const&, unsigned long long, unsigned long long*, unsigned long long*)
 T perftools::gputools::CalculateOccupancy(perftools::gputools::DeviceDescription const&, unsigned long long, unsigned long long, perftools::gputools::ThreadDim const&)
 T perftools::gputools::CalculateRegisterLimitForTargetOccupancy(perftools::gputools::DeviceDescription const&, unsigned long long, perftools::gputools::ThreadDim const&, unsigned long long)
 T perftools::gputools::CheckPlatformKindIsValid(perftools::gputools::PlatformKind)
 T perftools::gputools::CompareComputeCapability(std::tuple<int, int> const&, std::tuple<int, int> const&)
 T perftools::gputools::CudaCubinInMemory::CudaCubinInMemory(char const*, tensorflow::StringPiece)
 T perftools::gputools::CudaCubinOnDisk::CudaCubinOnDisk(tensorflow::StringPiece, tensorflow::StringPiece)
 T perftools::gputools::CudaPtxInMemory::CudaPtxInMemory(std::initializer_list<std::tuple<int, int, tensorflow::StringPiece> > const&, tensorflow::StringPiece, bool)
 T perftools::gputools::CudaPtxInMemory::CudaPtxInMemory(tensorflow::StringPiece, tensorflow::StringPiece, bool)
 T perftools::gputools::CudaPtxInMemory::DecompressPtx[abi:cxx11](char const*)
 T perftools::gputools::CudaPtxInMemory::default_text() const
 T perftools::gputools::CudaPtxInMemory::original_default_text() const
 T perftools::gputools::CudaPtxInMemory::original_text(int, int) const
 T perftools::gputools::CudaPtxInMemory::text(int, int) const
 T perftools::gputools::CudaPtxOnDisk::CudaPtxOnDisk(tensorflow::StringPiece, tensorflow::StringPiece)
 T perftools::gputools::DeviceDescription::DeviceDescription()
 T perftools::gputools::DeviceDescription::ToMap[abi:cxx11]() const
 T perftools::gputools::DeviceDescription::cuda_compute_capability(int*, int*) const
 T perftools::gputools::DivideCeil(unsigned long long, unsigned long long)
 T perftools::gputools::Event::Event(perftools::gputools::StreamExecutor*)
 T perftools::gputools::Event::Init()
 T perftools::gputools::Event::PollForStatus()
 T perftools::gputools::Event::~Event()
 T perftools::gputools::ExecutorCache::DestroyAllExecutors()
 T perftools::gputools::ExecutorCache::Entry::~Entry()
 T perftools::gputools::ExecutorCache::Get(perftools::gputools::StreamExecutorConfig const&)
 T perftools::gputools::ExecutorCache::GetOrCreate(perftools::gputools::StreamExecutorConfig const&, std::function<perftools::gputools::port::StatusOr<std::unique_ptr<perftools::gputools::StreamExecutor, std::default_delete<perftools::gputools::StreamExecutor> > > ()> const&)
 T perftools::gputools::KernelBase::Arity() const
 T perftools::gputools::KernelBase::GetPreferredCacheConfig() const
 T perftools::gputools::KernelBase::KernelBase(perftools::gputools::StreamExecutor*)
 T perftools::gputools::KernelBase::KernelBase(perftools::gputools::StreamExecutor*, perftools::gputools::internal::KernelInterface*)
 T perftools::gputools::KernelBase::SetPreferredCacheConfig(perftools::gputools::KernelCacheConfig)
 T perftools::gputools::KernelBase::set_name(tensorflow::StringPiece)
 T perftools::gputools::KernelBase::~KernelBase()
 T perftools::gputools::KernelLoaderSpec::KernelLoaderSpec(tensorflow::StringPiece)
 T perftools::gputools::KernelMetadata::registers_per_thread(int*) const
 T perftools::gputools::KernelMetadata::set_registers_per_thread(int)
 T perftools::gputools::KernelMetadata::set_shared_memory_bytes(int)
 T perftools::gputools::KernelMetadata::shared_memory_bytes(int*) const
 T perftools::gputools::MultiKernelLoaderSpec::AddCudaCompressedPtxInMemory(std::initializer_list<std::tuple<int, int, tensorflow::StringPiece> >, tensorflow::StringPiece)
 T perftools::gputools::MultiKernelLoaderSpec::AddCudaCompressedPtxInMemory(tensorflow::StringPiece, tensorflow::StringPiece)
 T perftools::gputools::MultiKernelLoaderSpec::AddCudaCubinInMemory(char const*, tensorflow::StringPiece)
 T perftools::gputools::MultiKernelLoaderSpec::AddCudaCubinOnDisk(tensorflow::StringPiece, tensorflow::StringPiece)
 T perftools::gputools::MultiKernelLoaderSpec::AddCudaPtxInMemory(std::initializer_list<std::tuple<int, int, tensorflow::StringPiece> >, tensorflow::StringPiece)
 T perftools::gputools::MultiKernelLoaderSpec::AddCudaPtxInMemory(tensorflow::StringPiece, tensorflow::StringPiece)
 T perftools::gputools::MultiKernelLoaderSpec::AddCudaPtxOnDisk(tensorflow::StringPiece, tensorflow::StringPiece)
 T perftools::gputools::MultiKernelLoaderSpec::AddOpenCLBinaryOnDisk(tensorflow::StringPiece, tensorflow::StringPiece)
 T perftools::gputools::MultiKernelLoaderSpec::AddOpenCLTextInMemory(tensorflow::StringPiece, tensorflow::StringPiece)
 T perftools::gputools::MultiKernelLoaderSpec::AddOpenCLTextOnDisk(tensorflow::StringPiece, tensorflow::StringPiece)
 T perftools::gputools::MultiKernelLoaderSpec::MultiKernelLoaderSpec(unsigned long)
 T perftools::gputools::MultiPlatformManager::ClearPlatformRegistry()
 T perftools::gputools::MultiPlatformManager::PlatformWithId(void* const&)
 T perftools::gputools::MultiPlatformManager::PlatformWithName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T perftools::gputools::MultiPlatformManager::RegisterPlatform(std::unique_ptr<perftools::gputools::Platform, std::default_delete<perftools::gputools::Platform> >)
 T perftools::gputools::OnDiskKernelLoaderSpec::OnDiskKernelLoaderSpec(tensorflow::StringPiece, tensorflow::StringPiece)
 T perftools::gputools::OneTimeScratchAllocator::AllocateBytes(perftools::gputools::Stream*, long long)
 T perftools::gputools::OneTimeScratchAllocator::GetMemoryLimitInBytes(perftools::gputools::Stream*)
 T perftools::gputools::OneTimeScratchAllocator::OneTimeScratchAllocator()
 T perftools::gputools::OneTimeScratchAllocator::~OneTimeScratchAllocator()
 T perftools::gputools::OpenCLBinaryOnDisk::OpenCLBinaryOnDisk(tensorflow::StringPiece, tensorflow::StringPiece)
 T perftools::gputools::OpenCLTextInMemory::OpenCLTextInMemory(tensorflow::StringPiece, tensorflow::StringPiece)
 T perftools::gputools::OpenCLTextOnDisk::OpenCLTextOnDisk(tensorflow::StringPiece, tensorflow::StringPiece)
 T perftools::gputools::Platform::EnablePeerAccess()
 T perftools::gputools::Platform::ForceExecutorShutdown()
 T perftools::gputools::Platform::GetPeerAccessMap()
 T perftools::gputools::Platform::~Platform()
 T perftools::gputools::PlatformIsRunnable(perftools::gputools::PlatformKind)
 T perftools::gputools::PlatformIsRunnableOnDevice(perftools::gputools::PlatformKind)
 T perftools::gputools::PlatformKindFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 T perftools::gputools::PlatformKindString[abi:cxx11](perftools::gputools::PlatformKind)
 T perftools::gputools::PluginConfig::PluginConfig()
 T perftools::gputools::PluginConfig::SetBlas(void*)
 T perftools::gputools::PluginConfig::SetDnn(void*)
 T perftools::gputools::PluginConfig::SetFft(void*)
 T perftools::gputools::PluginConfig::SetRng(void*)
 T perftools::gputools::PluginConfig::operator==(perftools::gputools::PluginConfig const&) const
 T perftools::gputools::PluginKindString[abi:cxx11](perftools::gputools::PluginKind)
 T perftools::gputools::PluginRegistry::DefaultFactories::DefaultFactories()
 T perftools::gputools::PluginRegistry::HasFactory(perftools::gputools::PluginRegistry::PluginFactories const&, perftools::gputools::PluginKind, void*) const
 T perftools::gputools::PluginRegistry::HasFactory(void*, perftools::gputools::PluginKind, void*) const
 T perftools::gputools::PluginRegistry::Instance()
 T perftools::gputools::PluginRegistry::MapPlatformKindToId(perftools::gputools::PlatformKind, void*)
 T perftools::gputools::PluginRegistry::PluginRegistry()
 T perftools::gputools::PluginRegistry::SetDefaultFactory(void*, perftools::gputools::PluginKind, void*)
 T perftools::gputools::ScratchAllocator::~ScratchAllocator()
 T perftools::gputools::Stream::BlockHostUntilDone()
 T perftools::gputools::Stream::BlockHostUntilDoneWithStatus()
 T perftools::gputools::Stream::GetOrCreateSubStream()
 T perftools::gputools::Stream::Init()
 T perftools::gputools::Stream::InitTimer(perftools::gputools::Timer*)
 T perftools::gputools::Stream::InitWithTimer(perftools::gputools::Timer*)
 T perftools::gputools::Stream::ReturnSubStream(perftools::gputools::Stream*)
 T perftools::gputools::Stream::Stream(perftools::gputools::StreamExecutor*)
 T perftools::gputools::Stream::Stream(perftools::gputools::StreamExecutor*, perftools::gputools::internal::StreamInterface*)
 T perftools::gputools::Stream::ThenActivate(perftools::gputools::dnn::ActivationMode, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenActivateWithOptions(perftools::gputools::dnn::ActivationMode, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float>*, unsigned long long)
 T perftools::gputools::Stream::ThenBatchNormalizationBackward(perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, double, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenBatchNormalizationBackward(perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, double, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenBatchNormalizationForward(perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, double, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, bool, std::function<perftools::gputools::DeviceMemory<float> const& ()>, std::function<void ()>)
 T perftools::gputools::Stream::ThenBatchNormalizationForward(perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, double, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, bool, std::function<perftools::gputools::DeviceMemory<float> const& ()>, std::function<void ()>)
 T perftools::gputools::Stream::ThenBiasAdd(perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenBlasAsum(unsigned long long, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*)
 T perftools::gputools::Stream::ThenBlasAsum(unsigned long long, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenBlasAsum(unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<double>*)
 T perftools::gputools::Stream::ThenBlasAsum(unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenBlasAxpy(unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*, int)
 T perftools::gputools::Stream::ThenBlasAxpy(unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*, int)
 T perftools::gputools::Stream::ThenBlasAxpy(unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 T perftools::gputools::Stream::ThenBlasAxpy(unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 T perftools::gputools::Stream::ThenBlasCopy(unsigned long long, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*, int)
 T perftools::gputools::Stream::ThenBlasCopy(unsigned long long, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*, int)
 T perftools::gputools::Stream::ThenBlasCopy(unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 T perftools::gputools::Stream::ThenBlasCopy(unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 T perftools::gputools::Stream::ThenBlasDot(unsigned long long, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*)
 T perftools::gputools::Stream::ThenBlasDot(unsigned long long, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenBlasDotc(unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*)
 T perftools::gputools::Stream::ThenBlasDotc(unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*)
 T perftools::gputools::Stream::ThenBlasDotu(unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*)
 T perftools::gputools::Stream::ThenBlasDotu(unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*)
 T perftools::gputools::Stream::ThenBlasGbmv(perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double> const&, int, double, perftools::gputools::DeviceMemory<double>*, int)
 T perftools::gputools::Stream::ThenBlasGbmv(perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float> const&, int, float, perftools::gputools::DeviceMemory<float>*, int)
 T perftools::gputools::Stream::ThenBlasGbmv(perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 T perftools::gputools::Stream::ThenBlasGbmv(perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 T perftools::gputools::Stream::ThenBlasGemm(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double> const&, int, double, perftools::gputools::DeviceMemory<double>*, int)
 T perftools::gputools::Stream::ThenBlasGemm(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<Eigen::half> const&, int, perftools::gputools::DeviceMemory<Eigen::half> const&, int, float, perftools::gputools::DeviceMemory<Eigen::half>*, int)
 T perftools::gputools::Stream::ThenBlasGemm(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float> const&, int, float, perftools::gputools::DeviceMemory<float>*, int)
 T perftools::gputools::Stream::ThenBlasGemm(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 T perftools::gputools::Stream::ThenBlasGemm(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 T perftools::gputools::Stream::ThenBlasGemmBatched(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, double, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<double>*> const&, int, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<double>*> const&, int, double, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<double>*> const&, int, int)
 T perftools::gputools::Stream::ThenBlasGemmBatched(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, float, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<float>*> const&, int, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<float>*> const&, int, float, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<float>*> const&, int, int)
 T perftools::gputools::Stream::ThenBlasGemmBatched(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, std::complex<double>, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<std::complex<double> >*> const&, int, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<std::complex<double> >*> const&, int, std::complex<double>, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<std::complex<double> >*> const&, int, int)
 T perftools::gputools::Stream::ThenBlasGemmBatched(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, std::complex<float>, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<std::complex<float> >*> const&, int, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<std::complex<float> >*> const&, int, std::complex<float>, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<std::complex<float> >*> const&, int, int)
 T perftools::gputools::Stream::ThenBlasGemmBatchedWithScratch(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, double, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<double>*> const&, int, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<double>*> const&, int, double, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<double>*> const&, int, int, perftools::gputools::ScratchAllocator*)
 T perftools::gputools::Stream::ThenBlasGemmBatchedWithScratch(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, float, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<float>*> const&, int, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<float>*> const&, int, float, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<float>*> const&, int, int, perftools::gputools::ScratchAllocator*)
 T perftools::gputools::Stream::ThenBlasGemmBatchedWithScratch(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, std::complex<double>, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<std::complex<double> >*> const&, int, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<std::complex<double> >*> const&, int, std::complex<double>, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<std::complex<double> >*> const&, int, int, perftools::gputools::ScratchAllocator*)
 T perftools::gputools::Stream::ThenBlasGemmBatchedWithScratch(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, std::complex<float>, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<std::complex<float> >*> const&, int, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<std::complex<float> >*> const&, int, std::complex<float>, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<std::complex<float> >*> const&, int, int, perftools::gputools::ScratchAllocator*)
 T perftools::gputools::Stream::ThenBlasGemmWithAlgorithm(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, Eigen::half const&, perftools::gputools::DeviceMemory<Eigen::half> const&, int, perftools::gputools::DeviceMemory<Eigen::half> const&, int, Eigen::half const&, perftools::gputools::DeviceMemory<Eigen::half>*, int, perftools::gputools::blas::ComputationType, long long, perftools::gputools::blas::ProfileResult*)
 T perftools::gputools::Stream::ThenBlasGemmWithAlgorithm(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double> const&, int, double, perftools::gputools::DeviceMemory<double>*, int, perftools::gputools::blas::ComputationType, long long, perftools::gputools::blas::ProfileResult*)
 T perftools::gputools::Stream::ThenBlasGemmWithAlgorithm(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float> const&, int, float, perftools::gputools::DeviceMemory<float>*, int, perftools::gputools::blas::ComputationType, long long, perftools::gputools::blas::ProfileResult*)
 T perftools::gputools::Stream::ThenBlasGemmWithAlgorithm(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, int, perftools::gputools::DeviceMemory<signed char> const&, int, perftools::gputools::DeviceMemory<signed char> const&, int, int, perftools::gputools::DeviceMemory<int>*, int, perftools::gputools::blas::ComputationType, long long, perftools::gputools::blas::ProfileResult*)
 T perftools::gputools::Stream::ThenBlasGemmWithAlgorithm(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> >*, int, perftools::gputools::blas::ComputationType, long long, perftools::gputools::blas::ProfileResult*)
 T perftools::gputools::Stream::ThenBlasGemmWithAlgorithm(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> >*, int, perftools::gputools::blas::ComputationType, long long, perftools::gputools::blas::ProfileResult*)
 T perftools::gputools::Stream::ThenBlasGemmWithProfiling(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double> const&, int, double, perftools::gputools::DeviceMemory<double>*, int, perftools::gputools::blas::ProfileResult*)
 T perftools::gputools::Stream::ThenBlasGemmWithProfiling(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<Eigen::half> const&, int, perftools::gputools::DeviceMemory<Eigen::half> const&, int, float, perftools::gputools::DeviceMemory<Eigen::half>*, int, perftools::gputools::blas::ProfileResult*)
 T perftools::gputools::Stream::ThenBlasGemmWithProfiling(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float> const&, int, float, perftools::gputools::DeviceMemory<float>*, int, perftools::gputools::blas::ProfileResult*)
 T perftools::gputools::Stream::ThenBlasGemmWithProfiling(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> >*, int, perftools::gputools::blas::ProfileResult*)
 T perftools::gputools::Stream::ThenBlasGemmWithProfiling(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> >*, int, perftools::gputools::blas::ProfileResult*)
 T perftools::gputools::Stream::ThenBlasGemv(perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double> const&, int, double, perftools::gputools::DeviceMemory<double>*, int)
 T perftools::gputools::Stream::ThenBlasGemv(perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float> const&, int, float, perftools::gputools::DeviceMemory<float>*, int)
 T perftools::gputools::Stream::ThenBlasGemv(perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 T perftools::gputools::Stream::ThenBlasGemv(perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 T perftools::gputools::Stream::ThenBlasGemvWithProfiling(perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double> const&, int, double, perftools::gputools::DeviceMemory<double>*, int, perftools::gputools::blas::ProfileResult*)
 T perftools::gputools::Stream::ThenBlasGemvWithProfiling(perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float> const&, int, float, perftools::gputools::DeviceMemory<float>*, int, perftools::gputools::blas::ProfileResult*)
 T perftools::gputools::Stream::ThenBlasGemvWithProfiling(perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> >*, int, perftools::gputools::blas::ProfileResult*)
 T perftools::gputools::Stream::ThenBlasGemvWithProfiling(perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> >*, int, perftools::gputools::blas::ProfileResult*)
 T perftools::gputools::Stream::ThenBlasGer(unsigned long long, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*, int)
 T perftools::gputools::Stream::ThenBlasGer(unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*, int)
 T perftools::gputools::Stream::ThenBlasGerc(unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 T perftools::gputools::Stream::ThenBlasGerc(unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 T perftools::gputools::Stream::ThenBlasGeru(unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 T perftools::gputools::Stream::ThenBlasGeru(unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 T perftools::gputools::Stream::ThenBlasHbmv(perftools::gputools::blas::UpperLower, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 T perftools::gputools::Stream::ThenBlasHbmv(perftools::gputools::blas::UpperLower, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 T perftools::gputools::Stream::ThenBlasHemm(perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 T perftools::gputools::Stream::ThenBlasHemm(perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 T perftools::gputools::Stream::ThenBlasHemv(perftools::gputools::blas::UpperLower, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 T perftools::gputools::Stream::ThenBlasHemv(perftools::gputools::blas::UpperLower, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 T perftools::gputools::Stream::ThenBlasHer(perftools::gputools::blas::UpperLower, unsigned long long, double, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 T perftools::gputools::Stream::ThenBlasHer(perftools::gputools::blas::UpperLower, unsigned long long, float, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 T perftools::gputools::Stream::ThenBlasHer2(perftools::gputools::blas::UpperLower, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 T perftools::gputools::Stream::ThenBlasHer2(perftools::gputools::blas::UpperLower, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 T perftools::gputools::Stream::ThenBlasHer2k(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, double, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 T perftools::gputools::Stream::ThenBlasHer2k(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, float, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 T perftools::gputools::Stream::ThenBlasHerk(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, double, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, double, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 T perftools::gputools::Stream::ThenBlasHerk(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, float, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 T perftools::gputools::Stream::ThenBlasHpmv(perftools::gputools::blas::UpperLower, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 T perftools::gputools::Stream::ThenBlasHpmv(perftools::gputools::blas::UpperLower, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 T perftools::gputools::Stream::ThenBlasHpr(perftools::gputools::blas::UpperLower, unsigned long long, double, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*)
 T perftools::gputools::Stream::ThenBlasHpr(perftools::gputools::blas::UpperLower, unsigned long long, float, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*)
 T perftools::gputools::Stream::ThenBlasHpr2(perftools::gputools::blas::UpperLower, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*)
 T perftools::gputools::Stream::ThenBlasHpr2(perftools::gputools::blas::UpperLower, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*)
 T perftools::gputools::Stream::ThenBlasIamax(unsigned long long, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<int>*)
 T perftools::gputools::Stream::ThenBlasIamax(unsigned long long, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<int>*)
 T perftools::gputools::Stream::ThenBlasIamax(unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<int>*)
 T perftools::gputools::Stream::ThenBlasIamax(unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<int>*)
 T perftools::gputools::Stream::ThenBlasIamin(unsigned long long, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<int>*)
 T perftools::gputools::Stream::ThenBlasIamin(unsigned long long, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<int>*)
 T perftools::gputools::Stream::ThenBlasIamin(unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<int>*)
 T perftools::gputools::Stream::ThenBlasIamin(unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<int>*)
 T perftools::gputools::Stream::ThenBlasNrm2(unsigned long long, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*)
 T perftools::gputools::Stream::ThenBlasNrm2(unsigned long long, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenBlasNrm2(unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<double>*)
 T perftools::gputools::Stream::ThenBlasNrm2(unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenBlasRot(unsigned long long, perftools::gputools::DeviceMemory<double>*, int, perftools::gputools::DeviceMemory<double>*, int, double, double)
 T perftools::gputools::Stream::ThenBlasRot(unsigned long long, perftools::gputools::DeviceMemory<float>*, int, perftools::gputools::DeviceMemory<float>*, int, float, float)
 T perftools::gputools::Stream::ThenBlasRot(unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> >*, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int, double, double)
 T perftools::gputools::Stream::ThenBlasRot(unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> >*, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int, float, float)
 T perftools::gputools::Stream::ThenBlasRotg(perftools::gputools::DeviceMemory<double>*, perftools::gputools::DeviceMemory<double>*, perftools::gputools::DeviceMemory<double>*, perftools::gputools::DeviceMemory<double>*)
 T perftools::gputools::Stream::ThenBlasRotg(perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenBlasRotg(perftools::gputools::DeviceMemory<std::complex<double> >*, perftools::gputools::DeviceMemory<std::complex<double> >*, perftools::gputools::DeviceMemory<double>*, perftools::gputools::DeviceMemory<std::complex<double> >*)
 T perftools::gputools::Stream::ThenBlasRotg(perftools::gputools::DeviceMemory<std::complex<float> >*, perftools::gputools::DeviceMemory<std::complex<float> >*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<std::complex<float> >*)
 T perftools::gputools::Stream::ThenBlasRotm(unsigned long long, perftools::gputools::DeviceMemory<double>*, int, perftools::gputools::DeviceMemory<double>*, int, perftools::gputools::DeviceMemory<double> const&)
 T perftools::gputools::Stream::ThenBlasRotm(unsigned long long, perftools::gputools::DeviceMemory<float>*, int, perftools::gputools::DeviceMemory<float>*, int, perftools::gputools::DeviceMemory<float> const&)
 T perftools::gputools::Stream::ThenBlasRotmg(perftools::gputools::DeviceMemory<double>*, perftools::gputools::DeviceMemory<double>*, perftools::gputools::DeviceMemory<double>*, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::DeviceMemory<double>*)
 T perftools::gputools::Stream::ThenBlasRotmg(perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenBlasSbmv(perftools::gputools::blas::UpperLower, unsigned long long, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double> const&, int, double, perftools::gputools::DeviceMemory<double>*, int)
 T perftools::gputools::Stream::ThenBlasSbmv(perftools::gputools::blas::UpperLower, unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float> const&, int, float, perftools::gputools::DeviceMemory<float>*, int)
 T perftools::gputools::Stream::ThenBlasScal(unsigned long long, double, perftools::gputools::DeviceMemory<double>*, int)
 T perftools::gputools::Stream::ThenBlasScal(unsigned long long, double, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 T perftools::gputools::Stream::ThenBlasScal(unsigned long long, float, perftools::gputools::DeviceMemory<float>*, int)
 T perftools::gputools::Stream::ThenBlasScal(unsigned long long, float, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 T perftools::gputools::Stream::ThenBlasScal(unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 T perftools::gputools::Stream::ThenBlasScal(unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 T perftools::gputools::Stream::ThenBlasSpmv(perftools::gputools::blas::UpperLower, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::DeviceMemory<double> const&, int, double, perftools::gputools::DeviceMemory<double>*, int)
 T perftools::gputools::Stream::ThenBlasSpmv(perftools::gputools::blas::UpperLower, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, int, float, perftools::gputools::DeviceMemory<float>*, int)
 T perftools::gputools::Stream::ThenBlasSpr(perftools::gputools::blas::UpperLower, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*)
 T perftools::gputools::Stream::ThenBlasSpr(perftools::gputools::blas::UpperLower, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenBlasSpr2(perftools::gputools::blas::UpperLower, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*)
 T perftools::gputools::Stream::ThenBlasSpr2(perftools::gputools::blas::UpperLower, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenBlasSwap(unsigned long long, perftools::gputools::DeviceMemory<double>*, int, perftools::gputools::DeviceMemory<double>*, int)
 T perftools::gputools::Stream::ThenBlasSwap(unsigned long long, perftools::gputools::DeviceMemory<float>*, int, perftools::gputools::DeviceMemory<float>*, int)
 T perftools::gputools::Stream::ThenBlasSwap(unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> >*, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 T perftools::gputools::Stream::ThenBlasSwap(unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> >*, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 T perftools::gputools::Stream::ThenBlasSymm(perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, unsigned long long, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double> const&, int, double, perftools::gputools::DeviceMemory<double>*, int)
 T perftools::gputools::Stream::ThenBlasSymm(perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float> const&, int, float, perftools::gputools::DeviceMemory<float>*, int)
 T perftools::gputools::Stream::ThenBlasSymm(perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 T perftools::gputools::Stream::ThenBlasSymm(perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 T perftools::gputools::Stream::ThenBlasSymv(perftools::gputools::blas::UpperLower, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double> const&, int, double, perftools::gputools::DeviceMemory<double>*, int)
 T perftools::gputools::Stream::ThenBlasSymv(perftools::gputools::blas::UpperLower, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float> const&, int, float, perftools::gputools::DeviceMemory<float>*, int)
 T perftools::gputools::Stream::ThenBlasSyr(perftools::gputools::blas::UpperLower, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*, int)
 T perftools::gputools::Stream::ThenBlasSyr(perftools::gputools::blas::UpperLower, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*, int)
 T perftools::gputools::Stream::ThenBlasSyr2(perftools::gputools::blas::UpperLower, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*, int)
 T perftools::gputools::Stream::ThenBlasSyr2(perftools::gputools::blas::UpperLower, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*, int)
 T perftools::gputools::Stream::ThenBlasSyr2k(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double> const&, int, double, perftools::gputools::DeviceMemory<double>*, int)
 T perftools::gputools::Stream::ThenBlasSyr2k(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float> const&, int, float, perftools::gputools::DeviceMemory<float>*, int)
 T perftools::gputools::Stream::ThenBlasSyr2k(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 T perftools::gputools::Stream::ThenBlasSyr2k(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 T perftools::gputools::Stream::ThenBlasSyrk(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, double, perftools::gputools::DeviceMemory<double>*, int)
 T perftools::gputools::Stream::ThenBlasSyrk(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, float, perftools::gputools::DeviceMemory<float>*, int)
 T perftools::gputools::Stream::ThenBlasSyrk(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 T perftools::gputools::Stream::ThenBlasSyrk(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 T perftools::gputools::Stream::ThenBlasTbmv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*, int)
 T perftools::gputools::Stream::ThenBlasTbmv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*, int)
 T perftools::gputools::Stream::ThenBlasTbmv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 T perftools::gputools::Stream::ThenBlasTbmv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 T perftools::gputools::Stream::ThenBlasTbsv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*, int)
 T perftools::gputools::Stream::ThenBlasTbsv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*, int)
 T perftools::gputools::Stream::ThenBlasTbsv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 T perftools::gputools::Stream::ThenBlasTbsv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 T perftools::gputools::Stream::ThenBlasTpmv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::DeviceMemory<double>*, int)
 T perftools::gputools::Stream::ThenBlasTpmv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float>*, int)
 T perftools::gputools::Stream::ThenBlasTpmv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 T perftools::gputools::Stream::ThenBlasTpmv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 T perftools::gputools::Stream::ThenBlasTpsv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::DeviceMemory<double>*, int)
 T perftools::gputools::Stream::ThenBlasTpsv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float>*, int)
 T perftools::gputools::Stream::ThenBlasTpsv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 T perftools::gputools::Stream::ThenBlasTpsv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 T perftools::gputools::Stream::ThenBlasTrmm(perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*, int)
 T perftools::gputools::Stream::ThenBlasTrmm(perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*, int)
 T perftools::gputools::Stream::ThenBlasTrmm(perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 T perftools::gputools::Stream::ThenBlasTrmm(perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 T perftools::gputools::Stream::ThenBlasTrmv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*, int)
 T perftools::gputools::Stream::ThenBlasTrmv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*, int)
 T perftools::gputools::Stream::ThenBlasTrmv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 T perftools::gputools::Stream::ThenBlasTrmv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 T perftools::gputools::Stream::ThenBlasTrsm(perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*, int)
 T perftools::gputools::Stream::ThenBlasTrsm(perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*, int)
 T perftools::gputools::Stream::ThenBlasTrsm(perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 T perftools::gputools::Stream::ThenBlasTrsm(perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 T perftools::gputools::Stream::ThenBlasTrsv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*, int)
 T perftools::gputools::Stream::ThenBlasTrsv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*, int)
 T perftools::gputools::Stream::ThenBlasTrsv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 T perftools::gputools::Stream::ThenBlasTrsv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 T perftools::gputools::Stream::ThenConvolve(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenConvolveBackwardBias(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>*)
 T perftools::gputools::Stream::ThenConvolveBackwardBias(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<double>*)
 T perftools::gputools::Stream::ThenConvolveBackwardBias(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenConvolveBackwardData(perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenConvolveBackwardDataWithAlgorithm(perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::ScratchAllocator*, perftools::gputools::dnn::AlgorithmConfig const&, perftools::gputools::dnn::ProfileResult*)
 T perftools::gputools::Stream::ThenConvolveBackwardDataWithAlgorithm(perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*, perftools::gputools::ScratchAllocator*, perftools::gputools::dnn::AlgorithmConfig const&, perftools::gputools::dnn::ProfileResult*)
 T perftools::gputools::Stream::ThenConvolveBackwardDataWithScratch(perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::ScratchAllocator*)
 T perftools::gputools::Stream::ThenConvolveBackwardDataWithScratch(perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*, perftools::gputools::ScratchAllocator*)
 T perftools::gputools::Stream::ThenConvolveBackwardFilter(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenConvolveBackwardFilterWithAlgorithm(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::ScratchAllocator*, perftools::gputools::dnn::AlgorithmConfig const&, perftools::gputools::dnn::ProfileResult*)
 T perftools::gputools::Stream::ThenConvolveBackwardFilterWithAlgorithm(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<float>*, perftools::gputools::ScratchAllocator*, perftools::gputools::dnn::AlgorithmConfig const&, perftools::gputools::dnn::ProfileResult*)
 T perftools::gputools::Stream::ThenConvolveBackwardFilterWithScratch(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::ScratchAllocator*)
 T perftools::gputools::Stream::ThenConvolveBackwardFilterWithScratch(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<float>*, perftools::gputools::ScratchAllocator*)
 T perftools::gputools::Stream::ThenConvolveQuantized(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<short> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenConvolveQuantized(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<signed char> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenConvolveWithAlgorithm(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::ScratchAllocator*, perftools::gputools::dnn::AlgorithmConfig const&, perftools::gputools::dnn::ProfileResult*)
 T perftools::gputools::Stream::ThenConvolveWithAlgorithm(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*, perftools::gputools::ScratchAllocator*, perftools::gputools::dnn::AlgorithmConfig const&, perftools::gputools::dnn::ProfileResult*)
 T perftools::gputools::Stream::ThenConvolveWithScratch(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::ScratchAllocator*)
 T perftools::gputools::Stream::ThenConvolveWithScratch(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*, perftools::gputools::ScratchAllocator*)
 T perftools::gputools::Stream::ThenCopyDevice2HostBuffer(perftools::gputools::DeviceMemory<float> const&, perftools::gputools::HostBuffer*)
 T perftools::gputools::Stream::ThenCopyHostBuffer2Device(perftools::gputools::HostBuffer*, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenDepthConcatenate(tensorflow::gtl::ArraySlice<perftools::gputools::dnn::BatchDescriptor>, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<float> const*>, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenDepthToSpace(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::DepthToSpaceLayout const&, int, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenDoHostCallback(std::function<void ()>)
 T perftools::gputools::Stream::ThenDoHostCallbackForTest(std::function<void ()>)
 T perftools::gputools::Stream::ThenElementwiseOperate(perftools::gputools::dnn::ElementwiseOperation, tensorflow::gtl::ArraySlice<perftools::gputools::dnn::BatchDescriptor>, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<float> const*>, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenElementwiseOperateScaledQuantized(perftools::gputools::dnn::ElementwiseOperation, tensorflow::gtl::ArraySlice<int>, int, tensorflow::gtl::ArraySlice<perftools::gputools::dnn::BatchDescriptor>, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<float> const*>, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenEnqueueOnBackgroundThread(std::function<void (perftools::gputools::StreamExecutor*)>)
 T perftools::gputools::Stream::ThenFft(perftools::gputools::fft::Plan*, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::DeviceMemory<std::complex<double> >*)
 T perftools::gputools::Stream::ThenFft(perftools::gputools::fft::Plan*, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<std::complex<float> >*)
 T perftools::gputools::Stream::ThenFft(perftools::gputools::fft::Plan*, perftools::gputools::DeviceMemory<std::complex<double> > const&, perftools::gputools::DeviceMemory<double>*)
 T perftools::gputools::Stream::ThenFft(perftools::gputools::fft::Plan*, perftools::gputools::DeviceMemory<std::complex<double> > const&, perftools::gputools::DeviceMemory<std::complex<double> >*)
 T perftools::gputools::Stream::ThenFft(perftools::gputools::fft::Plan*, perftools::gputools::DeviceMemory<std::complex<float> > const&, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenFft(perftools::gputools::fft::Plan*, perftools::gputools::DeviceMemory<std::complex<float> > const&, perftools::gputools::DeviceMemory<std::complex<float> >*)
 T perftools::gputools::Stream::ThenFusedConvolve(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<signed char> const&, float, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<signed char> const&, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::DeviceMemory<signed char> const&, float, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::ActivationMode, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<signed char>*)
 T perftools::gputools::Stream::ThenFusedConvolveWithAlgorithm(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, float, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, float, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::ActivationMode, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::ScratchAllocator*, perftools::gputools::dnn::AlgorithmConfig const&, perftools::gputools::dnn::ProfileResult*)
 T perftools::gputools::Stream::ThenFusedConvolveWithAlgorithm(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, float, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::DeviceMemory<float> const&, float, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::ActivationMode, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*, perftools::gputools::ScratchAllocator*, perftools::gputools::dnn::AlgorithmConfig const&, perftools::gputools::dnn::ProfileResult*)
 T perftools::gputools::Stream::ThenFusedConvolveWithAlgorithm(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<signed char> const&, float, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<signed char> const&, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::DeviceMemory<signed char> const&, float, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::ActivationMode, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<signed char>*, perftools::gputools::ScratchAllocator*, perftools::gputools::dnn::AlgorithmConfig const&, perftools::gputools::dnn::ProfileResult*)
 T perftools::gputools::Stream::ThenFusedConvolveWithScratch(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, float, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, float, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::ActivationMode, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::ScratchAllocator*)
 T perftools::gputools::Stream::ThenFusedConvolveWithScratch(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, float, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::DeviceMemory<float> const&, float, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::ActivationMode, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*, perftools::gputools::ScratchAllocator*)
 T perftools::gputools::Stream::ThenFusedConvolveWithScratch(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<signed char> const&, float, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<signed char> const&, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::DeviceMemory<signed char> const&, float, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::ActivationMode, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<signed char>*, perftools::gputools::ScratchAllocator*)
 T perftools::gputools::Stream::ThenMatMul(perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenMatMulQuantized(perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<short> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenMatMulQuantized(perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<signed char> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenMemZero(perftools::gputools::DeviceMemoryBase*, unsigned long long)
 T perftools::gputools::Stream::ThenMemcpy(perftools::gputools::DeviceMemoryBase*, perftools::gputools::DeviceMemoryBase const&, unsigned long long)
 T perftools::gputools::Stream::ThenMemcpy(perftools::gputools::DeviceMemoryBase*, void const*, unsigned long long)
 T perftools::gputools::Stream::ThenMemcpy(void*, perftools::gputools::DeviceMemoryBase const&, unsigned long long)
 T perftools::gputools::Stream::ThenMemcpyD2HQuantized(perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::QuantizedActivationMode, void*, unsigned long long)
 T perftools::gputools::Stream::ThenMemcpyH2DQuantized(void const*, unsigned long long, perftools::gputools::dnn::QuantizedActivationMode, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenMemset32(perftools::gputools::DeviceMemoryBase*, unsigned int, unsigned long long)
 T perftools::gputools::Stream::ThenNormalize(perftools::gputools::dnn::NormalizeDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenNormalizeBackwardWithDimensions(perftools::gputools::dnn::NormalizeDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenNormalizeWithDimensions(perftools::gputools::dnn::NormalizeDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenPoolBackward(perftools::gputools::dnn::PoolingDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::DeviceMemory<Eigen::half>*)
 T perftools::gputools::Stream::ThenPoolBackward(perftools::gputools::dnn::PoolingDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::DeviceMemory<double>*)
 T perftools::gputools::Stream::ThenPoolBackward(perftools::gputools::dnn::PoolingDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenPoolForward(perftools::gputools::dnn::PoolingDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>*)
 T perftools::gputools::Stream::ThenPoolForward(perftools::gputools::dnn::PoolingDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<double>*)
 T perftools::gputools::Stream::ThenPoolForward(perftools::gputools::dnn::PoolingDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenPopulateRandGaussian(double, double, perftools::gputools::DeviceMemory<double>*)
 T perftools::gputools::Stream::ThenPopulateRandGaussian(float, float, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenPopulateRandUniform(perftools::gputools::DeviceMemory<double>*)
 T perftools::gputools::Stream::ThenPopulateRandUniform(perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenPopulateRandUniform(perftools::gputools::DeviceMemory<std::complex<double> >*)
 T perftools::gputools::Stream::ThenPopulateRandUniform(perftools::gputools::DeviceMemory<std::complex<float> >*)
 T perftools::gputools::Stream::ThenRecordEvent(perftools::gputools::Event*)
 T perftools::gputools::Stream::ThenReshape(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenRnnBackward(perftools::gputools::dnn::RnnDescriptor const&, perftools::gputools::dnn::RnnSequenceTensorDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::RnnSequenceTensorDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::DeviceMemory<unsigned char>*, perftools::gputools::ScratchAllocator*)
 T perftools::gputools::Stream::ThenRnnBackward(perftools::gputools::dnn::RnnDescriptor const&, perftools::gputools::dnn::RnnSequenceTensorDescriptor const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::dnn::RnnSequenceTensorDescriptor const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::DeviceMemory<double>*, perftools::gputools::DeviceMemory<double>*, perftools::gputools::DeviceMemory<double>*, perftools::gputools::DeviceMemory<double>*, perftools::gputools::DeviceMemory<unsigned char>*, perftools::gputools::ScratchAllocator*)
 T perftools::gputools::Stream::ThenRnnBackward(perftools::gputools::dnn::RnnDescriptor const&, perftools::gputools::dnn::RnnSequenceTensorDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::RnnSequenceTensorDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<unsigned char>*, perftools::gputools::ScratchAllocator*)
 T perftools::gputools::Stream::ThenRnnForward(perftools::gputools::dnn::RnnDescriptor const&, perftools::gputools::dnn::RnnSequenceTensorDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::RnnSequenceTensorDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>*, bool, perftools::gputools::ScratchAllocator*, perftools::gputools::ScratchAllocator*)
 T perftools::gputools::Stream::ThenRnnForward(perftools::gputools::dnn::RnnDescriptor const&, perftools::gputools::dnn::RnnSequenceTensorDescriptor const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::dnn::RnnSequenceTensorDescriptor const&, perftools::gputools::DeviceMemory<double>*, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<double>*, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<double>*, bool, perftools::gputools::ScratchAllocator*, perftools::gputools::ScratchAllocator*)
 T perftools::gputools::Stream::ThenRnnForward(perftools::gputools::dnn::RnnDescriptor const&, perftools::gputools::dnn::RnnSequenceTensorDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::RnnSequenceTensorDescriptor const&, perftools::gputools::DeviceMemory<float>*, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<float>*, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<float>*, bool, perftools::gputools::ScratchAllocator*, perftools::gputools::ScratchAllocator*)
 T perftools::gputools::Stream::ThenSeparableConvolve(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::FilterDescriptor const&, int, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenSetRngSeed(unsigned char const*, unsigned long long)
 T perftools::gputools::Stream::ThenSpaceConcatenate(tensorflow::gtl::ArraySlice<perftools::gputools::dnn::BatchDescriptor>, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<float> const*>, perftools::gputools::DeviceMemory<float>*, perftools::gputools::dnn::SpaceConcatenateMode)
 T perftools::gputools::Stream::ThenSpaceToDepth(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::DepthToSpaceLayout const&, int, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenStartTimer(perftools::gputools::Timer*)
 T perftools::gputools::Stream::ThenStopTimer(perftools::gputools::Timer*)
 T perftools::gputools::Stream::ThenTransformTensor(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::dnn::DataType, perftools::gputools::DeviceMemoryBase const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::dnn::DataType, float, perftools::gputools::DeviceMemoryBase*)
 T perftools::gputools::Stream::ThenWaitFor(perftools::gputools::Event*)
 T perftools::gputools::Stream::ThenWaitFor(perftools::gputools::Stream*)
 T perftools::gputools::Stream::ThenXYBroadcast(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, long long, long long, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenXYPad(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, long long, long long, long long, long long, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::ThenXYSlice(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, long long, long long, long long, long long, perftools::gputools::DeviceMemory<float>*)
 T perftools::gputools::Stream::~Stream()
 T perftools::gputools::StreamExecutor::Allocate(unsigned long long)
 T perftools::gputools::StreamExecutor::AllocateEvent(perftools::gputools::Event*)
 T perftools::gputools::StreamExecutor::AllocateStream(perftools::gputools::Stream*)
 T perftools::gputools::StreamExecutor::AllocateTimer(perftools::gputools::Timer*)
 T perftools::gputools::StreamExecutor::AsBlas()
 T perftools::gputools::StreamExecutor::AsDnn()
 T perftools::gputools::StreamExecutor::AsFft()
 T perftools::gputools::StreamExecutor::AsRng()
 T perftools::gputools::StreamExecutor::BlockHostUntilDone(perftools::gputools::Stream*)
 T perftools::gputools::StreamExecutor::CanEnablePeerAccessTo(perftools::gputools::StreamExecutor*)
 T perftools::gputools::StreamExecutor::CreateAllocRecord(void*, unsigned long long)
 T perftools::gputools::StreamExecutor::CreateStreamDependency(perftools::gputools::Stream*, perftools::gputools::Stream*)
 T perftools::gputools::StreamExecutor::Deallocate(perftools::gputools::DeviceMemoryBase*)
 T perftools::gputools::StreamExecutor::DeallocateEvent(perftools::gputools::Event*)
 T perftools::gputools::StreamExecutor::DeallocateStream(perftools::gputools::Stream*)
 T perftools::gputools::StreamExecutor::DeallocateTimer(perftools::gputools::Timer*)
 T perftools::gputools::StreamExecutor::DeviceMemoryUsage(long long*, long long*) const
 T perftools::gputools::StreamExecutor::EnablePeerAccessTo(perftools::gputools::StreamExecutor*)
 T perftools::gputools::StreamExecutor::EnableTracing(bool)
 T perftools::gputools::StreamExecutor::EnqueueOnBackgroundThread(std::function<void ()>)
 T perftools::gputools::StreamExecutor::EraseAllocRecord(void*)
 T perftools::gputools::StreamExecutor::GetBlasGemmAlgorithms(std::vector<long long, std::allocator<long long> >*)
 T perftools::gputools::StreamExecutor::GetConvolveAlgorithms(bool, std::vector<perftools::gputools::dnn::AlgorithmDesc, std::allocator<perftools::gputools::dnn::AlgorithmDesc> >*)
 T perftools::gputools::StreamExecutor::GetConvolveBackwardDataAlgorithms(bool, std::vector<perftools::gputools::dnn::AlgorithmDesc, std::allocator<perftools::gputools::dnn::AlgorithmDesc> >*)
 T perftools::gputools::StreamExecutor::GetConvolveBackwardFilterAlgorithms(bool, std::vector<perftools::gputools::dnn::AlgorithmDesc, std::allocator<perftools::gputools::dnn::AlgorithmDesc> >*)
 T perftools::gputools::StreamExecutor::GetDeviceDescription() const
 T perftools::gputools::StreamExecutor::GetDeviceLoad() const
 T perftools::gputools::StreamExecutor::GetDeviceSharedMemoryConfig()
 T perftools::gputools::StreamExecutor::GetKernel(perftools::gputools::MultiKernelLoaderSpec const&, perftools::gputools::KernelBase*)
 T perftools::gputools::StreamExecutor::GetMemAllocs(std::map<void*, perftools::gputools::AllocRecord, std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::AllocRecord> > >*)
 T perftools::gputools::StreamExecutor::GetSymbol(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void**, unsigned long*)
 T perftools::gputools::StreamExecutor::HostCallback(perftools::gputools::Stream*, std::function<void ()>)
 T perftools::gputools::StreamExecutor::HostMemoryAllocate(unsigned long long)
 T perftools::gputools::StreamExecutor::HostMemoryDeallocate(void*)
 T perftools::gputools::StreamExecutor::HostMemoryRegister(void*, unsigned long long)
 T perftools::gputools::StreamExecutor::HostMemoryUnregister(void*)
 T perftools::gputools::StreamExecutor::Init()
 T perftools::gputools::StreamExecutor::Init(int, perftools::gputools::DeviceOptions)
 T perftools::gputools::StreamExecutor::Launch(perftools::gputools::Stream*, perftools::gputools::ThreadDim const&, perftools::gputools::BlockDim const&, perftools::gputools::KernelBase const&, perftools::gputools::KernelArgsArrayBase const&)
 T perftools::gputools::StreamExecutor::MemZero(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, unsigned long long)
 T perftools::gputools::StreamExecutor::Memcpy(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, void const*, unsigned long long)
 T perftools::gputools::StreamExecutor::Memcpy(perftools::gputools::Stream*, void*, perftools::gputools::DeviceMemoryBase const&, unsigned long long)
 T perftools::gputools::StreamExecutor::MemcpyDeviceToDevice(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, perftools::gputools::DeviceMemoryBase const&, unsigned long long)
 T perftools::gputools::StreamExecutor::Memset32(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, unsigned int, unsigned long long)
 T perftools::gputools::StreamExecutor::PlatformDeviceCount() const
 T perftools::gputools::StreamExecutor::PollForEventStatus(perftools::gputools::Event*)
 T perftools::gputools::StreamExecutor::PopulateDeviceDescription() const
 T perftools::gputools::StreamExecutor::RecordEvent(perftools::gputools::Stream*, perftools::gputools::Event*)
 T perftools::gputools::StreamExecutor::RegisterTraceListener(perftools::gputools::TraceListener*)
 T perftools::gputools::StreamExecutor::SetDeviceSharedMemoryConfig(perftools::gputools::SharedMemoryConfig)
 T perftools::gputools::StreamExecutor::StartTimer(perftools::gputools::Stream*, perftools::gputools::Timer*)
 T perftools::gputools::StreamExecutor::StopTimer(perftools::gputools::Stream*, perftools::gputools::Timer*)
 T perftools::gputools::StreamExecutor::StreamExecutor(perftools::gputools::Platform const*, std::unique_ptr<perftools::gputools::internal::StreamExecutorInterface, std::default_delete<perftools::gputools::internal::StreamExecutorInterface> >)
 T perftools::gputools::StreamExecutor::StreamExecutor(perftools::gputools::PlatformKind, perftools::gputools::PluginConfig const&)
 T perftools::gputools::StreamExecutor::SupportsBlas() const
 T perftools::gputools::StreamExecutor::SupportsDnn() const
 T perftools::gputools::StreamExecutor::SupportsRng() const
 T perftools::gputools::StreamExecutor::SynchronizeAllActivity()
 T perftools::gputools::StreamExecutor::SynchronousMemSet(perftools::gputools::DeviceMemoryBase*, int, unsigned long long)
 T perftools::gputools::StreamExecutor::SynchronousMemZero(perftools::gputools::DeviceMemoryBase*, unsigned long long)
 T perftools::gputools::StreamExecutor::SynchronousMemcpy(perftools::gputools::DeviceMemoryBase*, perftools::gputools::DeviceMemoryBase const&, unsigned long long)
 T perftools::gputools::StreamExecutor::SynchronousMemcpy(perftools::gputools::DeviceMemoryBase*, void const*, unsigned long long)
 T perftools::gputools::StreamExecutor::SynchronousMemcpy(void*, perftools::gputools::DeviceMemoryBase const&, unsigned long long)
 T perftools::gputools::StreamExecutor::SynchronousMemcpyD2H(perftools::gputools::DeviceMemoryBase const&, long long, void*)
 T perftools::gputools::StreamExecutor::SynchronousMemcpyH2D(void const*, long long, perftools::gputools::DeviceMemoryBase*)
 T perftools::gputools::StreamExecutor::UnloadKernel(perftools::gputools::KernelBase const*)
 T perftools::gputools::StreamExecutor::UnregisterTraceListener(perftools::gputools::TraceListener*)
 T perftools::gputools::StreamExecutor::WaitForEvent(perftools::gputools::Stream*, perftools::gputools::Event*)
 T perftools::gputools::StreamExecutor::createRnnDescriptor(int, int, int, perftools::gputools::dnn::RnnInputMode, perftools::gputools::dnn::RnnDirectionMode, perftools::gputools::dnn::RnnMode, perftools::gputools::dnn::DataType, float, unsigned long long, perftools::gputools::ScratchAllocator*)
 T perftools::gputools::StreamExecutor::createRnnSequenceTensorDescriptor(int, int, int, perftools::gputools::dnn::DataType)
 T perftools::gputools::StreamExecutor::createRnnStateTensorDescriptor(int, int, int, perftools::gputools::dnn::DataType)
 T perftools::gputools::StreamExecutor::implementation()
 T perftools::gputools::StreamExecutor::~StreamExecutor()
 T perftools::gputools::StreamExecutorConfig::StreamExecutorConfig()
 T perftools::gputools::StreamExecutorConfig::StreamExecutorConfig(int)
 T perftools::gputools::TemporaryDeviceMemoryBase::Finalize()
 T perftools::gputools::TemporaryDeviceMemoryBase::IsAllocated() const
 T perftools::gputools::TemporaryDeviceMemoryBase::IsFinalized() const
 T perftools::gputools::TemporaryDeviceMemoryBase::TemporaryDeviceMemoryBase(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase, unsigned long long)
 T perftools::gputools::TemporaryDeviceMemoryBase::device_memory() const
 T perftools::gputools::TemporaryDeviceMemoryBase::mutable_device_memory()
 T perftools::gputools::TemporaryDeviceMemoryBase::~TemporaryDeviceMemoryBase()
 T perftools::gputools::ThreadDimOk(perftools::gputools::DeviceDescription const&, perftools::gputools::ThreadDim const&)
 T perftools::gputools::Timer::Microseconds() const
 T perftools::gputools::Timer::Nanoseconds() const
 T perftools::gputools::Timer::Timer(perftools::gputools::StreamExecutor*)
 T perftools::gputools::Timer::~Timer()
 T perftools::gputools::blas::AlgorithmConfig::ToString[abi:cxx11]() const
 T perftools::gputools::blas::ComputationTypeString[abi:cxx11](perftools::gputools::blas::ComputationType)
 T perftools::gputools::blas::DiagonalString[abi:cxx11](perftools::gputools::blas::Diagonal)
 T perftools::gputools::blas::SideString[abi:cxx11](perftools::gputools::blas::Side)
 T perftools::gputools::blas::TransposeString[abi:cxx11](perftools::gputools::blas::Transpose)
 T perftools::gputools::blas::UpperLowerString[abi:cxx11](perftools::gputools::blas::UpperLower)
 T perftools::gputools::dnn::ActivationModeString[abi:cxx11](perftools::gputools::dnn::ActivationMode)
 T perftools::gputools::dnn::AlgorithmConfig::ToString[abi:cxx11]() const
 T perftools::gputools::dnn::BatchDescriptor::BatchDescriptor()
 T perftools::gputools::dnn::BatchDescriptor::BatchDescriptor(int)
 T perftools::gputools::dnn::BatchDescriptor::CloneFrom(perftools::gputools::dnn::BatchDescriptor const&)
 T perftools::gputools::dnn::BatchDescriptor::DepthConcatenateOutputDescriptor(tensorflow::gtl::ArraySlice<perftools::gputools::dnn::BatchDescriptor>)
 T perftools::gputools::dnn::BatchDescriptor::ElementCount() const
 T perftools::gputools::dnn::BatchDescriptor::FullyConnectedBiasCount(perftools::gputools::dnn::BatchDescriptor const&)
 T perftools::gputools::dnn::BatchDescriptor::FullyConnectedWeightCount(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&)
 T perftools::gputools::dnn::BatchDescriptor::NodesAcrossFeatureMaps() const
 T perftools::gputools::dnn::BatchDescriptor::NodesPerFeatureMap() const
 T perftools::gputools::dnn::BatchDescriptor::ToShortString[abi:cxx11]() const
 T perftools::gputools::dnn::BatchDescriptor::ToString[abi:cxx11]() const
 T perftools::gputools::dnn::BatchDescriptor::full_dims(perftools::gputools::dnn::DataLayout const&) const
 T perftools::gputools::dnn::BatchDescriptor::full_strides(perftools::gputools::dnn::DataLayout const&) const
 T perftools::gputools::dnn::ConvolutionDescriptor::ConvolutionDescriptor()
 T perftools::gputools::dnn::ConvolutionDescriptor::ConvolutionDescriptor(int)
 T perftools::gputools::dnn::ConvolutionDescriptor::ToShortString[abi:cxx11]() const
 T perftools::gputools::dnn::ConvolutionDescriptor::ToString[abi:cxx11]() const
 T perftools::gputools::dnn::ConvolutionDescriptor::~ConvolutionDescriptor()
 T perftools::gputools::dnn::DataLayoutString[abi:cxx11](perftools::gputools::dnn::DataLayout)
 T perftools::gputools::dnn::DnnSupport::GetConvolveAlgorithms(bool, int, int, std::vector<perftools::gputools::dnn::AlgorithmDesc, std::allocator<perftools::gputools::dnn::AlgorithmDesc> >*)
 T perftools::gputools::dnn::DnnSupport::GetConvolveBackwardDataAlgorithms(bool, int, int, std::vector<perftools::gputools::dnn::AlgorithmDesc, std::allocator<perftools::gputools::dnn::AlgorithmDesc> >*)
 T perftools::gputools::dnn::DnnSupport::GetConvolveBackwardFilterAlgorithms(bool, int, int, std::vector<perftools::gputools::dnn::AlgorithmDesc, std::allocator<perftools::gputools::dnn::AlgorithmDesc> >*)
 T perftools::gputools::dnn::ElementwiseOperationString[abi:cxx11](perftools::gputools::dnn::ElementwiseOperation)
 T perftools::gputools::dnn::FilterDescriptor::CloneFrom(perftools::gputools::dnn::FilterDescriptor const&)
 T perftools::gputools::dnn::FilterDescriptor::ComputeWeightCount() const
 T perftools::gputools::dnn::FilterDescriptor::FilterDescriptor()
 T perftools::gputools::dnn::FilterDescriptor::FilterDescriptor(int)
 T perftools::gputools::dnn::FilterDescriptor::ToShortString[abi:cxx11]() const
 T perftools::gputools::dnn::FilterDescriptor::ToString[abi:cxx11]() const
 T perftools::gputools::dnn::FilterDescriptor::~FilterDescriptor()
 T perftools::gputools::dnn::FilterLayoutString[abi:cxx11](perftools::gputools::dnn::FilterLayout)
 T perftools::gputools::dnn::GetDimIndices(perftools::gputools::dnn::DataLayout const&, int)
 T perftools::gputools::dnn::NormalizeDescriptor::CloneFrom(perftools::gputools::dnn::NormalizeDescriptor const&)
 T perftools::gputools::dnn::NormalizeDescriptor::NormalizeDescriptor()
 T perftools::gputools::dnn::NormalizeDescriptor::ToShortString[abi:cxx11]() const
 T perftools::gputools::dnn::NormalizeDescriptor::ToString[abi:cxx11]() const
 T perftools::gputools::dnn::PadAlignmentString[abi:cxx11](perftools::gputools::dnn::PadAlignment)
 T perftools::gputools::dnn::PoolingDescriptor::CloneFrom(perftools::gputools::dnn::PoolingDescriptor const&)
 T perftools::gputools::dnn::PoolingDescriptor::PoolingDescriptor()
 T perftools::gputools::dnn::PoolingDescriptor::PoolingDescriptor(int)
 T perftools::gputools::dnn::PoolingDescriptor::ToShortString[abi:cxx11]() const
 T perftools::gputools::dnn::PoolingDescriptor::ToString[abi:cxx11]() const
 T perftools::gputools::dnn::QuantizedActivationModeString[abi:cxx11](perftools::gputools::dnn::QuantizedActivationMode)
 T perftools::gputools::dnn::ReorderDims(std::vector<long long, std::allocator<long long> > const&, perftools::gputools::dnn::DataLayout const&, perftools::gputools::dnn::DataLayout const&)
 T perftools::gputools::dnn::ShortPoolingModeString[abi:cxx11](perftools::gputools::dnn::PoolingMode)
 T perftools::gputools::host::AsHostStream(perftools::gputools::Stream*)
 T perftools::gputools::host::HostExecutor::Allocate(unsigned long long)
 T perftools::gputools::host::HostExecutor::AllocateStream(perftools::gputools::Stream*)
 T perftools::gputools::host::HostExecutor::AllocateSubBuffer(perftools::gputools::DeviceMemoryBase*, unsigned long long, unsigned long long)
 T perftools::gputools::host::HostExecutor::BlockHostUntilDoneWithStatus(perftools::gputools::Stream*)
 T perftools::gputools::host::HostExecutor::CreateBlas()
 T perftools::gputools::host::HostExecutor::CreateFft()
 T perftools::gputools::host::HostExecutor::CreateRng()
 T perftools::gputools::host::HostExecutor::CreateStreamDependency(perftools::gputools::Stream*, perftools::gputools::Stream*)
 T perftools::gputools::host::HostExecutor::Deallocate(perftools::gputools::DeviceMemoryBase*)
 T perftools::gputools::host::HostExecutor::DeallocateStream(perftools::gputools::Stream*)
 T perftools::gputools::host::HostExecutor::HostCallback(perftools::gputools::Stream*, std::function<void ()>)
 T perftools::gputools::host::HostExecutor::HostExecutor(perftools::gputools::PluginConfig const&)
 T perftools::gputools::host::HostExecutor::MemZero(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, unsigned long long)
 T perftools::gputools::host::HostExecutor::Memcpy(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, void const*, unsigned long long)
 T perftools::gputools::host::HostExecutor::Memcpy(perftools::gputools::Stream*, void*, perftools::gputools::DeviceMemoryBase const&, unsigned long long)
 T perftools::gputools::host::HostExecutor::MemcpyDeviceToDevice(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, perftools::gputools::DeviceMemoryBase const&, unsigned long long)
 T perftools::gputools::host::HostExecutor::Memset(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, unsigned char, unsigned long long)
 T perftools::gputools::host::HostExecutor::Memset32(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, unsigned int, unsigned long long)
 T perftools::gputools::host::HostExecutor::PopulateDeviceDescription() const
 T perftools::gputools::host::HostExecutor::StartTimer(perftools::gputools::Stream*, perftools::gputools::Timer*)
 T perftools::gputools::host::HostExecutor::StopTimer(perftools::gputools::Stream*, perftools::gputools::Timer*)
 T perftools::gputools::host::HostExecutor::SupportsBlas() const
 T perftools::gputools::host::HostExecutor::SupportsFft() const
 T perftools::gputools::host::HostExecutor::SupportsRng() const
 T perftools::gputools::host::HostExecutor::SynchronousMemSet(perftools::gputools::DeviceMemoryBase*, int, unsigned long long)
 T perftools::gputools::host::HostExecutor::SynchronousMemZero(perftools::gputools::DeviceMemoryBase*, unsigned long long)
 T perftools::gputools::host::HostExecutor::SynchronousMemcpy(perftools::gputools::DeviceMemoryBase*, void const*, unsigned long long)
 T perftools::gputools::host::HostExecutor::SynchronousMemcpy(void*, perftools::gputools::DeviceMemoryBase const&, unsigned long long)
 T perftools::gputools::host::HostExecutor::SynchronousMemcpyDeviceToDevice(perftools::gputools::DeviceMemoryBase*, perftools::gputools::DeviceMemoryBase const&, unsigned long long)
 T perftools::gputools::host::HostExecutor::~HostExecutor()
 T perftools::gputools::host::HostPlatform::ExecutorForDevice(int)
 T perftools::gputools::host::HostPlatform::ExecutorForDeviceWithPluginConfig(int, perftools::gputools::PluginConfig const&)
 T perftools::gputools::host::HostPlatform::GetExecutor(perftools::gputools::StreamExecutorConfig const&)
 T perftools::gputools::host::HostPlatform::GetUncachedExecutor(perftools::gputools::StreamExecutorConfig const&)
 T perftools::gputools::host::HostPlatform::HostPlatform()
 T perftools::gputools::host::HostPlatform::Name[abi:cxx11]() const
 T perftools::gputools::host::HostPlatform::RegisterTraceListener(std::unique_ptr<perftools::gputools::TraceListener, std::default_delete<perftools::gputools::TraceListener> >)
 T perftools::gputools::host::HostPlatform::UnregisterTraceListener(perftools::gputools::TraceListener*)
 T perftools::gputools::host::HostPlatform::VisibleDeviceCount() const
 T perftools::gputools::host::HostPlatform::id() const
 T perftools::gputools::host::HostPlatform::~HostPlatform()
 T perftools::gputools::host::HostStream::BlockUntilDone()
 T perftools::gputools::host::HostStream::EnqueueTask(std::function<void ()>)
 T perftools::gputools::host::HostStream::HostStream()
 T perftools::gputools::host::HostStream::~HostStream()
 T perftools::gputools::host::HostTimer::Microseconds() const
 T perftools::gputools::host::HostTimer::Nanoseconds() const
 T perftools::gputools::host::HostTimer::Start(perftools::gputools::Stream*)
 T perftools::gputools::host::HostTimer::StartNow()
 T perftools::gputools::host::HostTimer::Stop(perftools::gputools::Stream*)
 T perftools::gputools::host::HostTimer::StopNow()
 T perftools::gputools::internal::CachedDsoLoader::FetchHandleResult(std::function<tensorflow::Status (void**)>)
 T perftools::gputools::internal::CachedDsoLoader::GetCublasDsoHandle()
 T perftools::gputools::internal::CachedDsoLoader::GetCudnnDsoHandle()
 T perftools::gputools::internal::CachedDsoLoader::GetCufftDsoHandle()
 T perftools::gputools::internal::CachedDsoLoader::GetCurandDsoHandle()
 T perftools::gputools::internal::CachedDsoLoader::GetLibcudaDsoHandle()
 T perftools::gputools::internal::CachedDsoLoader::GetLibcuptiDsoHandle()
 T perftools::gputools::internal::DeviceDescriptionBuilder::DeviceDescriptionBuilder()
 T perftools::gputools::internal::DsoLoader::FindDsoPath[abi:cxx11](tensorflow::StringPiece, tensorflow::StringPiece)
 T perftools::gputools::internal::DsoLoader::GetBinaryDirectory[abi:cxx11](bool)
 T perftools::gputools::internal::DsoLoader::GetCublasDsoHandle(void**)
 T perftools::gputools::internal::DsoLoader::GetCudaCuptiLibraryPath[abi:cxx11]()
 T perftools::gputools::internal::DsoLoader::GetCudaDriverLibraryPath[abi:cxx11]()
 T perftools::gputools::internal::DsoLoader::GetCudaLibraryDirPath[abi:cxx11]()
 T perftools::gputools::internal::DsoLoader::GetCudnnDsoHandle(void**)
 T perftools::gputools::internal::DsoLoader::GetCufftDsoHandle(void**)
 T perftools::gputools::internal::DsoLoader::GetCurandDsoHandle(void**)
 T perftools::gputools::internal::DsoLoader::GetDsoHandle(tensorflow::StringPiece, void**, perftools::gputools::internal::DsoLoader::LoadKind)
 T perftools::gputools::internal::DsoLoader::GetLibcudaDsoHandle(void**)
 T perftools::gputools::internal::DsoLoader::GetLibcuptiDsoHandle(void**)
 T perftools::gputools::internal::DsoLoader::GetRpaths[abi:cxx11]()
 T perftools::gputools::internal::DsoLoader::RegisterRpath(tensorflow::StringPiece)
 T perftools::gputools::internal::DsoLoader::TrySymbolicDereference(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T perftools::gputools::internal::GetCudaVersion[abi:cxx11]()
 T perftools::gputools::internal::GetCudnnVersion[abi:cxx11]()
 T perftools::gputools::internal::MakeCUDAExecutorImplementation()
 T perftools::gputools::internal::MakeOpenCLExecutorImplementation()
 T perftools::gputools::internal::TemporaryMemoryManager::AllocateArrayBase(unsigned long long, unsigned long long)
 T perftools::gputools::internal::TemporaryMemoryManager::DeallocateFinalizedTemporaries()
 T perftools::gputools::internal::TemporaryMemoryManager::ForceDeallocateAll()
 T perftools::gputools::internal::TemporaryMemoryManager::HasAllocated(perftools::gputools::DeviceMemoryBase const&, unsigned long long) const
 T perftools::gputools::internal::TemporaryMemoryManager::IsFinalized(perftools::gputools::DeviceMemoryBase const&, unsigned long long) const
 T perftools::gputools::internal::TemporaryMemoryManager::MarkFinalized(perftools::gputools::DeviceMemoryBase const&, unsigned long long, bool)
 T perftools::gputools::port::Demangle[abi:cxx11](char const*)
 T perftools::gputools::port::GetCurrentDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T perftools::gputools::port::Hostname[abi:cxx11]()
 T perftools::gputools::port::StatusOr<perftools::gputools::blas::BlasSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> perftools::gputools::PluginRegistry::GetFactory<perftools::gputools::blas::BlasSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>(perftools::gputools::PlatformKind, void*)
 T perftools::gputools::port::StatusOr<perftools::gputools::blas::BlasSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> perftools::gputools::PluginRegistry::GetFactory<perftools::gputools::blas::BlasSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>(void*, void*)
 T perftools::gputools::port::StatusOr<perftools::gputools::dnn::DnnSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> perftools::gputools::PluginRegistry::GetFactory<perftools::gputools::dnn::DnnSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>(perftools::gputools::PlatformKind, void*)
 T perftools::gputools::port::StatusOr<perftools::gputools::dnn::DnnSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> perftools::gputools::PluginRegistry::GetFactory<perftools::gputools::dnn::DnnSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>(void*, void*)
 T perftools::gputools::port::StatusOr<perftools::gputools::fft::FftSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> perftools::gputools::PluginRegistry::GetFactory<perftools::gputools::fft::FftSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>(perftools::gputools::PlatformKind, void*)
 T perftools::gputools::port::StatusOr<perftools::gputools::fft::FftSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> perftools::gputools::PluginRegistry::GetFactory<perftools::gputools::fft::FftSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>(void*, void*)
 T perftools::gputools::port::StatusOr<perftools::gputools::rng::RngSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> perftools::gputools::PluginRegistry::GetFactory<perftools::gputools::rng::RngSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>(perftools::gputools::PlatformKind, void*)
 T perftools::gputools::port::StatusOr<perftools::gputools::rng::RngSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> perftools::gputools::PluginRegistry::GetFactory<perftools::gputools::rng::RngSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>(void*, void*)
 T perftools::gputools::port::internal::JoinPathImpl[abi:cxx11](std::initializer_list<tensorflow::StringPiece>)
 T perftools::gputools::port::safe_strto32(char const*, int*)
 T perftools::gputools::port::safe_strto32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int*)
 T perftools::gputools::rng::RngSupport::CheckSeed(unsigned char const*, unsigned long long)
 T png_64bit_product
 T png_access_version_number
 T png_build_gamma_table
 T png_build_grayscale_palette
 T png_calculate_crc
 T png_calloc
 T png_check_IHDR
 T png_check_cHRM_fixed
 T png_check_chunk_name
 T png_check_keyword
 T png_check_sig
 T png_chunk_error
 T png_chunk_warning
 T png_combine_row
 T png_convert_from_struct_tm
 T png_convert_from_time_t
 T png_convert_to_rfc1123
 T png_crc_error
 T png_crc_finish
 T png_crc_read
 T png_create_info_struct
 T png_create_read_struct
 T png_create_read_struct_2
 T png_create_struct
 T png_create_struct_2
 T png_create_write_struct
 T png_create_write_struct_2
 T png_data_freer
 T png_decompress_chunk
 T png_default_flush
 T png_default_read_data
 T png_default_write_data
 T png_destroy_info_struct
 T png_destroy_read_struct
 T png_destroy_struct
 T png_destroy_struct_2
 T png_destroy_write_struct
 T png_do_background
 T png_do_bgr
 T png_do_chop
 T png_do_dither
 T png_do_expand
 T png_do_expand_palette
 T png_do_gamma
 T png_do_gray_to_rgb
 T png_do_invert
 T png_do_pack
 T png_do_packswap
 T png_do_read_filler
 T png_do_read_interlace
 T png_do_read_intrapixel
 T png_do_read_invert_alpha
 T png_do_read_swap_alpha
 T png_do_read_transformations
 T png_do_rgb_to_gray
 T png_do_shift
 T png_do_strip_filler
 T png_do_swap
 T png_do_unpack
 T png_do_unshift
 T png_do_write_interlace
 T png_do_write_intrapixel
 T png_do_write_invert_alpha
 T png_do_write_swap_alpha
 T png_do_write_transformations
 T png_error
 T png_flush
 T png_free
 T png_free_data
 T png_free_default
 T png_get_IHDR
 T png_get_PLTE
 T png_get_asm_flagmask
 T png_get_asm_flags
 T png_get_bKGD
 T png_get_bit_depth
 T png_get_cHRM
 T png_get_cHRM_fixed
 T png_get_channels
 T png_get_color_type
 T png_get_compression_buffer_size
 T png_get_compression_type
 T png_get_copyright
 T png_get_error_ptr
 T png_get_filter_type
 T png_get_gAMA
 T png_get_gAMA_fixed
 T png_get_hIST
 T png_get_header_ver
 T png_get_header_version
 T png_get_iCCP
 T png_get_image_height
 T png_get_image_width
 T png_get_int_32
 T png_get_interlace_type
 T png_get_io_ptr
 T png_get_libpng_ver
 T png_get_mem_ptr
 T png_get_mmx_bitdepth_threshold
 T png_get_mmx_flagmask
 T png_get_mmx_rowbytes_threshold
 T png_get_oFFs
 T png_get_pCAL
 T png_get_pHYs
 T png_get_pixel_aspect_ratio
 T png_get_pixels_per_meter
 T png_get_progressive_ptr
 T png_get_rgb_to_gray_status
 T png_get_rowbytes
 T png_get_rows
 T png_get_sBIT
 T png_get_sCAL
 T png_get_sPLT
 T png_get_sRGB
 T png_get_signature
 T png_get_tIME
 T png_get_tRNS
 T png_get_text
 T png_get_uint_16
 T png_get_uint_31
 T png_get_uint_32
 T png_get_unknown_chunks
 T png_get_user_chunk_ptr
 T png_get_user_height_max
 T png_get_user_transform_ptr
 T png_get_user_width_max
 T png_get_valid
 T png_get_x_offset_microns
 T png_get_x_offset_pixels
 T png_get_x_pixels_per_meter
 T png_get_y_offset_microns
 T png_get_y_offset_pixels
 T png_get_y_pixels_per_meter
 T png_handle_IEND
 T png_handle_IHDR
 T png_handle_PLTE
 T png_handle_as_unknown
 T png_handle_bKGD
 T png_handle_cHRM
 T png_handle_gAMA
 T png_handle_hIST
 T png_handle_iCCP
 T png_handle_oFFs
 T png_handle_pCAL
 T png_handle_pHYs
 T png_handle_sBIT
 T png_handle_sCAL
 T png_handle_sPLT
 T png_handle_sRGB
 T png_handle_tEXt
 T png_handle_tIME
 T png_handle_tRNS
 T png_handle_unknown
 T png_handle_zTXt
 T png_info_destroy
 T png_info_init
 T png_info_init_3
 T png_init_io
 T png_init_read_transformations
 T png_malloc
 T png_malloc_default
 T png_malloc_warn
 T png_memcpy_check
 T png_memset_check
 T png_mmx_support
 T png_permit_empty_plte
 T png_permit_mng_features
 T png_process_IDAT_data
 T png_process_data
 T png_process_some_data
 T png_progressive_combine_row
 T png_push_crc_finish
 T png_push_crc_skip
 T png_push_fill_buffer
 T png_push_have_end
 T png_push_have_info
 T png_push_have_row
 T png_push_process_row
 T png_push_read_IDAT
 T png_push_read_chunk
 T png_push_read_sig
 T png_push_restore_buffer
 T png_push_save_buffer
 T png_read_chunk_header
 T png_read_data
 T png_read_destroy
 T png_read_end
 T png_read_filter_row
 T png_read_finish_row
 T png_read_image
 T png_read_info
 T png_read_init
 T png_read_init_2
 T png_read_init_3
 T png_read_png
 T png_read_push_finish_row
 T png_read_row
 T png_read_rows
 T png_read_start_row
 T png_read_transform_info
 T png_read_update_info
 T png_reset_crc
 T png_reset_zstream
 T png_save_int_32
 T png_save_uint_16
 T png_save_uint_32
 T png_set_IHDR
 T png_set_PLTE
 T png_set_add_alpha
 T png_set_asm_flags
 T png_set_bKGD
 T png_set_background
 T png_set_bgr
 T png_set_cHRM
 T png_set_cHRM_fixed
 T png_set_compression_buffer_size
 T png_set_compression_level
 T png_set_compression_mem_level
 T png_set_compression_method
 T png_set_compression_strategy
 T png_set_compression_window_bits
 T png_set_crc_action
 T png_set_dither
 T png_set_error_fn
 T png_set_expand
 T png_set_expand_gray_1_2_4_to_8
 T png_set_filler
 T png_set_filter
 T png_set_filter_heuristics
 T png_set_flush
 T png_set_gAMA
 T png_set_gAMA_fixed
 T png_set_gamma
 T png_set_gray_1_2_4_to_8
 T png_set_gray_to_rgb
 T png_set_hIST
 T png_set_iCCP
 T png_set_interlace_handling
 T png_set_invalid
 T png_set_invert_alpha
 T png_set_invert_mono
 T png_set_keep_unknown_chunks
 T png_set_mem_fn
 T png_set_mmx_thresholds
 T png_set_oFFs
 T png_set_pCAL
 T png_set_pHYs
 T png_set_packing
 T png_set_packswap
 T png_set_palette_to_rgb
 T png_set_progressive_read_fn
 T png_set_read_fn
 T png_set_read_status_fn
 T png_set_read_user_chunk_fn
 T png_set_read_user_transform_fn
 T png_set_rgb_to_gray
 T png_set_rgb_to_gray_fixed
 T png_set_rows
 T png_set_sBIT
 T png_set_sCAL
 T png_set_sPLT
 T png_set_sRGB
 T png_set_sRGB_gAMA_and_cHRM
 T png_set_shift
 T png_set_sig_bytes
 T png_set_strip_16
 T png_set_strip_alpha
 T png_set_strip_error_numbers
 T png_set_swap
 T png_set_swap_alpha
 T png_set_tIME
 T png_set_tRNS
 T png_set_tRNS_to_alpha
 T png_set_text
 T png_set_text_2
 T png_set_unknown_chunk_location
 T png_set_unknown_chunks
 T png_set_user_limits
 T png_set_user_transform_info
 T png_set_write_fn
 T png_set_write_status_fn
 T png_set_write_user_transform_fn
 T png_sig_cmp
 T png_start_read_image
 T png_warning
 T png_write_IDAT
 T png_write_IEND
 T png_write_IHDR
 T png_write_PLTE
 T png_write_bKGD
 T png_write_cHRM
 T png_write_cHRM_fixed
 T png_write_chunk
 T png_write_chunk_data
 T png_write_chunk_end
 T png_write_chunk_start
 T png_write_data
 T png_write_destroy
 T png_write_end
 T png_write_filtered_row
 T png_write_find_filter
 T png_write_finish_row
 T png_write_flush
 T png_write_gAMA
 T png_write_gAMA_fixed
 T png_write_hIST
 T png_write_iCCP
 T png_write_image
 T png_write_info
 T png_write_info_before_PLTE
 T png_write_init
 T png_write_init_2
 T png_write_init_3
 T png_write_oFFs
 T png_write_pCAL
 T png_write_pHYs
 T png_write_png
 T png_write_row
 T png_write_rows
 T png_write_sBIT
 T png_write_sCAL
 T png_write_sPLT
 T png_write_sRGB
 T png_write_sig
 T png_write_start_row
 T png_write_tEXt
 T png_write_tIME
 T png_write_tRNS
 T png_write_zTXt
 T png_zalloc
 T png_zfree
 T rdft
 T re2::ApplyFold(re2::CaseFold const*, int)
 T re2::BitState::BitState(re2::Prog*)
 T re2::BitState::GrowStack()
 T re2::BitState::Push(int, char const*, int)
 T re2::BitState::Search(re2::StringPiece const&, re2::StringPiece const&, bool, bool, re2::StringPiece*, int)
 T re2::BitState::TrySearch(int, char const*)
 T re2::BitState::~BitState()
 T re2::Bitmap256::FindNextSetBit(int) const
 T re2::ByteMapBuilder::Build(unsigned char*, int*)
 T re2::ByteMapBuilder::Mark(int, int)
 T re2::ByteMapBuilder::Merge()
 T re2::ByteMapBuilder::Recolor(int)
 T re2::CEscape[abi:cxx11](re2::StringPiece const&)
 T re2::CharClass::Contains(int)
 T re2::CharClass::Delete()
 T re2::CharClass::Negate()
 T re2::CharClass::New(int)
 T re2::CharClassBuilder::AddCharClass(re2::CharClassBuilder*)
 T re2::CharClassBuilder::AddRange(int, int)
 T re2::CharClassBuilder::AddRangeFlags(int, int, re2::Regexp::ParseFlags)
 T re2::CharClassBuilder::CharClassBuilder()
 T re2::CharClassBuilder::Contains(int)
 T re2::CharClassBuilder::Copy()
 T re2::CharClassBuilder::FoldsASCII()
 T re2::CharClassBuilder::GetCharClass()
 T re2::CharClassBuilder::Negate()
 T re2::CharClassBuilder::RemoveAbove(int)
 T re2::CoalesceWalker::CanCoalesce(re2::Regexp*, re2::Regexp*)
 T re2::CoalesceWalker::Copy(re2::Regexp*)
 T re2::CoalesceWalker::DoCoalesce(re2::Regexp**, re2::Regexp**)
 T re2::CoalesceWalker::PostVisit(re2::Regexp*, re2::Regexp*, re2::Regexp*, re2::Regexp**, int)
 T re2::CoalesceWalker::ShortVisit(re2::Regexp*, re2::Regexp*)
 T re2::Compiler::AddRuneRange(int, int, bool)
 T re2::Compiler::AddRuneRangeLatin1(int, int, bool)
 T re2::Compiler::AddRuneRangeUTF8(int, int, bool)
 T re2::Compiler::AddSuffix(int)
 T re2::Compiler::AddSuffixRecursive(int, int)
 T re2::Compiler::Add_80_10ffff()
 T re2::Compiler::AllocInst(int)
 T re2::Compiler::Alt(re2::Frag, re2::Frag)
 T re2::Compiler::BeginRange()
 T re2::Compiler::ByteRange(int, int, bool)
 T re2::Compiler::ByteRangeEqual(int, int)
 T re2::Compiler::CachedRuneByteSuffix(unsigned char, unsigned char, bool, int)
 T re2::Compiler::Capture(re2::Frag, int)
 T re2::Compiler::Cat(re2::Frag, re2::Frag)
 T re2::Compiler::Compile(re2::Regexp*, bool, long)
 T re2::Compiler::CompileSet(re2::Regexp*, re2::RE2::Anchor, long)
 T re2::Compiler::Compiler()
 T re2::Compiler::Copy(re2::Frag)
 T re2::Compiler::DotStar()
 T re2::Compiler::EmptyWidth(re2::EmptyOp)
 T re2::Compiler::EndRange()
 T re2::Compiler::FindByteRange(int, int)
 T re2::Compiler::Finish()
 T re2::Compiler::IsCachedRuneByteSuffix(int)
 T re2::Compiler::Literal(int, bool)
 T re2::Compiler::Match(int)
 T re2::Compiler::NoMatch()
 T re2::Compiler::Nop()
 T re2::Compiler::Plus(re2::Frag, bool)
 T re2::Compiler::PostVisit(re2::Regexp*, re2::Frag, re2::Frag, re2::Frag*, int)
 T re2::Compiler::PreVisit(re2::Regexp*, re2::Frag, bool*)
 T re2::Compiler::Quest(re2::Frag, bool)
 T re2::Compiler::Setup(re2::Regexp::ParseFlags, long, re2::RE2::Anchor)
 T re2::Compiler::ShortVisit(re2::Regexp*, re2::Frag)
 T re2::Compiler::Star(re2::Frag, bool)
 T re2::Compiler::UncachedRuneByteSuffix(unsigned char, unsigned char, bool, int)
 T re2::Compiler::~Compiler()
 T re2::ConvertLatin1ToUTF8(re2::StringPiece const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T re2::CycleFoldRune(int)
 T re2::DFA::AddToQueue(re2::DFA::Workq*, int, unsigned int)
 T re2::DFA::AnalyzeSearch(re2::DFA::SearchParams*)
 T re2::DFA::AnalyzeSearchHelper(re2::DFA::SearchParams*, re2::DFA::StartInfo*, unsigned int)
 T re2::DFA::BuildAllStates(std::function<void (int const*, bool)> const&)
 T re2::DFA::CachedState(int*, int, unsigned int)
 T re2::DFA::ClearCache()
 T re2::DFA::DFA(re2::Prog*, re2::Prog::MatchKind, long)
 T re2::DFA::DumpState[abi:cxx11](re2::DFA::State*)
 T re2::DFA::DumpWorkq[abi:cxx11](re2::DFA::Workq*)
 T re2::DFA::FastSearchLoop(re2::DFA::SearchParams*)
 T re2::DFA::PossibleMatchRange(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, int)
 T re2::DFA::RWLocker::LockForWriting()
 T re2::DFA::RWLocker::RWLocker(re2::Mutex*)
 T re2::DFA::RWLocker::~RWLocker()
 T re2::DFA::ResetCache(re2::DFA::RWLocker*)
 T re2::DFA::RunStateOnByte(re2::DFA::State*, int)
 T re2::DFA::RunStateOnByteUnlocked(re2::DFA::State*, int)
 T re2::DFA::RunWorkqOnByte(re2::DFA::Workq*, re2::DFA::Workq*, int, unsigned int, bool*)
 T re2::DFA::RunWorkqOnEmptyString(re2::DFA::Workq*, re2::DFA::Workq*, unsigned int)
 T re2::DFA::Search(re2::StringPiece const&, re2::StringPiece const&, bool, bool, bool, bool*, char const**, re2::SparseSetT<void>*)
 T re2::DFA::SearchFFF(re2::DFA::SearchParams*)
 T re2::DFA::SearchFFT(re2::DFA::SearchParams*)
 T re2::DFA::SearchFTF(re2::DFA::SearchParams*)
 T re2::DFA::SearchFTT(re2::DFA::SearchParams*)
 T re2::DFA::SearchTFF(re2::DFA::SearchParams*)
 T re2::DFA::SearchTFT(re2::DFA::SearchParams*)
 T re2::DFA::SearchTTF(re2::DFA::SearchParams*)
 T re2::DFA::SearchTTT(re2::DFA::SearchParams*)
 T re2::DFA::SlowSearchLoop(re2::DFA::SearchParams*)
 T re2::DFA::StateSaver::Restore()
 T re2::DFA::StateSaver::StateSaver(re2::DFA*, re2::DFA::State*)
 T re2::DFA::StateSaver::~StateSaver()
 T re2::DFA::StateToWorkq(re2::DFA::State*, re2::DFA::Workq*)
 T re2::DFA::WorkqToCachedState(re2::DFA::Workq*, re2::DFA::Workq*, unsigned int)
 T re2::DFA::~DFA()
 T re2::EmptyStringWalker::PostVisit(re2::Regexp*, bool, bool, bool*, int)
 T re2::FilteredRE2::Add(re2::StringPiece const&, re2::RE2::Options const&, int*)
 T re2::FilteredRE2::AllMatches(re2::StringPiece const&, std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> >*) const
 T re2::FilteredRE2::AllPotentials(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> >*) const
 T re2::FilteredRE2::Compile(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)
 T re2::FilteredRE2::FilteredRE2()
 T re2::FilteredRE2::FilteredRE2(int)
 T re2::FilteredRE2::FirstMatch(re2::StringPiece const&, std::vector<int, std::allocator<int> > const&) const
 T re2::FilteredRE2::PrintPrefilter(int)
 T re2::FilteredRE2::RegexpsGivenStrings(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> >*)
 T re2::FilteredRE2::SlowFirstMatch(re2::StringPiece const&) const
 T re2::FilteredRE2::~FilteredRE2()
 T re2::LookupCaseFold(re2::CaseFold const*, int, int)
 T re2::MaybeParsePerlCCEscape(re2::StringPiece*, re2::Regexp::ParseFlags)
 T re2::NFA::AddToThreadq(re2::SparseArray<re2::NFA::Thread*>*, int, int, int, char const*, re2::NFA::Thread*)
 T re2::NFA::FormatCapture[abi:cxx11](char const**)
 T re2::NFA::NFA(re2::Prog*)
 T re2::NFA::Search(re2::StringPiece const&, re2::StringPiece const&, bool, bool, re2::StringPiece*, int)
 T re2::NFA::~NFA()
 T re2::OnePass_Checks()
 T re2::PCREWalker::PostVisit(re2::Regexp*, bool, bool, bool*, int)
 T re2::ParseUnicodeGroup(re2::StringPiece*, re2::Regexp::ParseFlags, re2::CharClassBuilder*, re2::RegexpStatus*)
 T re2::PatchList::Append(re2::Prog::Inst*, re2::PatchList, re2::PatchList)
 T re2::PatchList::Deref(re2::Prog::Inst*, re2::PatchList)
 T re2::PatchList::Mk(unsigned int)
 T re2::PatchList::Patch(re2::Prog::Inst*, re2::PatchList, unsigned int)
 T re2::Prefilter::And(re2::Prefilter*, re2::Prefilter*)
 T re2::Prefilter::AndOr(re2::Prefilter::Op, re2::Prefilter*, re2::Prefilter*)
 T re2::Prefilter::BuildInfo(re2::Regexp*)
 T re2::Prefilter::DebugString[abi:cxx11]() const
 T re2::Prefilter::FromRE2(re2::RE2 const*)
 T re2::Prefilter::FromRegexp(re2::Regexp*)
 T re2::Prefilter::FromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T re2::Prefilter::Info::Alt(re2::Prefilter::Info*, re2::Prefilter::Info*)
 T re2::Prefilter::Info::And(re2::Prefilter::Info*, re2::Prefilter::Info*)
 T re2::Prefilter::Info::AnyChar()
 T re2::Prefilter::Info::AnyMatch()
 T re2::Prefilter::Info::CClass(re2::CharClass*, bool)
 T re2::Prefilter::Info::Concat(re2::Prefilter::Info*, re2::Prefilter::Info*)
 T re2::Prefilter::Info::EmptyString()
 T re2::Prefilter::Info::Info()
 T re2::Prefilter::Info::Literal(int)
 T re2::Prefilter::Info::LiteralLatin1(int)
 T re2::Prefilter::Info::NoMatch()
 T re2::Prefilter::Info::Plus(re2::Prefilter::Info*)
 T re2::Prefilter::Info::Quest(re2::Prefilter::Info*)
 T re2::Prefilter::Info::Star(re2::Prefilter::Info*)
 T re2::Prefilter::Info::TakeMatch()
 T re2::Prefilter::Info::ToString[abi:cxx11]()
 T re2::Prefilter::Info::Walker::PostVisit(re2::Regexp*, re2::Prefilter::Info*, re2::Prefilter::Info*, re2::Prefilter::Info**, int)
 T re2::Prefilter::Info::Walker::ShortVisit(re2::Regexp*, re2::Prefilter::Info*)
 T re2::Prefilter::Info::~Info()
 T re2::Prefilter::Or(re2::Prefilter*, re2::Prefilter*)
 T re2::Prefilter::OrStrings(std::set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)
 T re2::Prefilter::Prefilter(re2::Prefilter::Op)
 T re2::Prefilter::Simplify()
 T re2::Prefilter::~Prefilter()
 T re2::PrefilterTree::Add(re2::Prefilter*)
 T re2::PrefilterTree::AssignUniqueIds(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)
 T re2::PrefilterTree::CanonicalNode(re2::Prefilter*)
 T re2::PrefilterTree::Compile(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)
 T re2::PrefilterTree::DebugNodeString[abi:cxx11](re2::Prefilter*) const
 T re2::PrefilterTree::KeepNode(re2::Prefilter*) const
 T re2::PrefilterTree::NodeString[abi:cxx11](re2::Prefilter*) const
 T re2::PrefilterTree::PrefilterTree()
 T re2::PrefilterTree::PrefilterTree(int)
 T re2::PrefilterTree::PrintDebugInfo()
 T re2::PrefilterTree::PrintPrefilter(int)
 T re2::PrefilterTree::PropagateMatch(std::vector<int, std::allocator<int> > const&, re2::SparseArray<int>*) const
 T re2::PrefilterTree::RegexpsGivenStrings(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> >*) const
 T re2::PrefilterTree::~PrefilterTree()
 T re2::PrefixSuccessor(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T re2::Prog::BuildEntireDFA(re2::Prog::MatchKind, std::function<void (int const*, bool)> const&)
 T re2::Prog::CompileSet(re2::Regexp*, re2::RE2::Anchor, long)
 T re2::Prog::ComputeByteMap()
 T re2::Prog::ComputeFirstByte()
 T re2::Prog::DeleteDFA(re2::DFA*)
 T re2::Prog::DumpByteMap[abi:cxx11]()
 T re2::Prog::DumpUnanchored[abi:cxx11]()
 T re2::Prog::Dump[abi:cxx11]()
 T re2::Prog::EmitList(int, re2::SparseArray<int>*, std::vector<re2::Prog::Inst, std::allocator<re2::Prog::Inst> >*, re2::SparseSetT<void>*, std::vector<int, std::allocator<int> >*)
 T re2::Prog::EmptyFlags(re2::StringPiece const&, char const*)
 T re2::Prog::Fanout(re2::SparseArray<int>*)
 T re2::Prog::Flatten()
 T re2::Prog::GetDFA(re2::Prog::MatchKind)
 T re2::Prog::Inst::Dump[abi:cxx11]()
 T re2::Prog::Inst::InitAlt(unsigned int, unsigned int)
 T re2::Prog::Inst::InitByteRange(int, int, int, unsigned int)
 T re2::Prog::Inst::InitCapture(int, unsigned int)
 T re2::Prog::Inst::InitEmptyWidth(re2::EmptyOp, unsigned int)
 T re2::Prog::Inst::InitFail()
 T re2::Prog::Inst::InitMatch(int)
 T re2::Prog::Inst::InitNop(unsigned int)
 T re2::Prog::IsOnePass()
 T re2::Prog::MarkDominator(int, re2::SparseArray<int>*, re2::SparseArray<int>*, std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >*, re2::SparseSetT<void>*, std::vector<int, std::allocator<int> >*)
 T re2::Prog::MarkSuccessors(re2::SparseArray<int>*, re2::SparseArray<int>*, std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >*, re2::SparseSetT<void>*, std::vector<int, std::allocator<int> >*)
 T re2::Prog::Optimize()
 T re2::Prog::PossibleMatchRange(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, int)
 T re2::Prog::Prog()
 T re2::Prog::SearchBitState(re2::StringPiece const&, re2::StringPiece const&, re2::Prog::Anchor, re2::Prog::MatchKind, re2::StringPiece*, int)
 T re2::Prog::SearchDFA(re2::StringPiece const&, re2::StringPiece const&, re2::Prog::Anchor, re2::Prog::MatchKind, re2::StringPiece*, bool*, re2::SparseSetT<void>*)
 T re2::Prog::SearchNFA(re2::StringPiece const&, re2::StringPiece const&, re2::Prog::Anchor, re2::Prog::MatchKind, re2::StringPiece*, int)
 T re2::Prog::SearchOnePass(re2::StringPiece const&, re2::StringPiece const&, re2::Prog::Anchor, re2::Prog::MatchKind, re2::StringPiece*, int)
 T re2::Prog::TEST_dfa_should_bail_when_slow(bool)
 T re2::Prog::first_byte()
 T re2::Prog::~Prog()
 T re2::RE2::Arg::parse_char(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_double(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_float(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_int(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_int_cradix(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_int_hex(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_int_octal(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_int_radix(char const*, unsigned long, void*, int)
 T re2::RE2::Arg::parse_long(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_long_cradix(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_long_hex(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_long_octal(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_long_radix(char const*, unsigned long, void*, int)
 T re2::RE2::Arg::parse_longlong(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_longlong_cradix(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_longlong_hex(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_longlong_octal(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_longlong_radix(char const*, unsigned long, void*, int)
 T re2::RE2::Arg::parse_null(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_schar(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_short(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_short_cradix(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_short_hex(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_short_octal(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_short_radix(char const*, unsigned long, void*, int)
 T re2::RE2::Arg::parse_string(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_stringpiece(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_uchar(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_uint(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_uint_cradix(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_uint_hex(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_uint_octal(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_uint_radix(char const*, unsigned long, void*, int)
 T re2::RE2::Arg::parse_ulong(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_ulong_cradix(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_ulong_hex(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_ulong_octal(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_ulong_radix(char const*, unsigned long, void*, int)
 T re2::RE2::Arg::parse_ulonglong(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_ulonglong_cradix(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_ulonglong_hex(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_ulonglong_octal(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_ulonglong_radix(char const*, unsigned long, void*, int)
 T re2::RE2::Arg::parse_ushort(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_ushort_cradix(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_ushort_hex(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_ushort_octal(char const*, unsigned long, void*)
 T re2::RE2::Arg::parse_ushort_radix(char const*, unsigned long, void*, int)
 T re2::RE2::CapturingGroupNames[abi:cxx11]() const
 T re2::RE2::CheckRewriteString(re2::StringPiece const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const
 T re2::RE2::ConsumeN(re2::StringPiece*, re2::RE2 const&, re2::RE2::Arg const* const*, int)
 T re2::RE2::DoMatch(re2::StringPiece const&, re2::RE2::Anchor, unsigned long*, re2::RE2::Arg const* const*, int) const
 T re2::RE2::Extract(re2::StringPiece const&, re2::RE2 const&, re2::StringPiece const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T re2::RE2::FindAndConsumeN(re2::StringPiece*, re2::RE2 const&, re2::RE2::Arg const* const*, int)
 T re2::RE2::FullMatchN(re2::StringPiece const&, re2::RE2 const&, re2::RE2::Arg const* const*, int)
 T re2::RE2::GlobalReplace(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, re2::RE2 const&, re2::StringPiece const&)
 T re2::RE2::Init(re2::StringPiece const&, re2::RE2::Options const&)
 T re2::RE2::Match(re2::StringPiece const&, unsigned long, unsigned long, re2::RE2::Anchor, re2::StringPiece*, int) const
 T re2::RE2::MaxSubmatch(re2::StringPiece const&)
 T re2::RE2::NamedCapturingGroups[abi:cxx11]() const
 T re2::RE2::NumberOfCapturingGroups() const
 T re2::RE2::Options::Options(re2::RE2::CannedOptions)
 T re2::RE2::Options::ParseFlags() const
 T re2::RE2::PartialMatchN(re2::StringPiece const&, re2::RE2 const&, re2::RE2::Arg const* const*, int)
 T re2::RE2::PossibleMatchRange(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, int) const
 T re2::RE2::ProgramFanout(std::map<int, int, std::less<int>, std::allocator<std::pair<int const, int> > >*) const
 T re2::RE2::ProgramSize() const
 T re2::RE2::QuoteMeta[abi:cxx11](re2::StringPiece const&)
 T re2::RE2::RE2(char const*)
 T re2::RE2::RE2(re2::StringPiece const&)
 T re2::RE2::RE2(re2::StringPiece const&, re2::RE2::Options const&)
 T re2::RE2::RE2(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T re2::RE2::Replace(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, re2::RE2 const&, re2::StringPiece const&)
 T re2::RE2::ReverseProg() const
 T re2::RE2::Rewrite(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, re2::StringPiece const&, re2::StringPiece const*, int) const
 T re2::RE2::Set::Add(re2::StringPiece const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T re2::RE2::Set::Compile()
 T re2::RE2::Set::Match(re2::StringPiece const&, std::vector<int, std::allocator<int> >*) const
 T re2::RE2::Set::Set(re2::RE2::Options const&, re2::RE2::Anchor)
 T re2::RE2::Set::~Set()
 T re2::RE2::~RE2()
 T re2::Regexp::AddRuneToString(int)
 T re2::Regexp::Alternate(re2::Regexp**, int, re2::Regexp::ParseFlags)
 T re2::Regexp::AlternateNoFactor(re2::Regexp**, int, re2::Regexp::ParseFlags)
 T re2::Regexp::Capture(re2::Regexp*, re2::Regexp::ParseFlags, int)
 T re2::Regexp::CaptureNames[abi:cxx11]()
 T re2::Regexp::CompileToProg(long)
 T re2::Regexp::CompileToReverseProg(long)
 T re2::Regexp::ComputeSimple()
 T re2::Regexp::Concat(re2::Regexp**, int, re2::Regexp::ParseFlags)
 T re2::Regexp::ConcatOrAlternate(re2::RegexpOp, re2::Regexp**, int, re2::Regexp::ParseFlags, bool)
 T re2::Regexp::Decref()
 T re2::Regexp::Destroy()
 T re2::Regexp::Equal(re2::Regexp*, re2::Regexp*)
 T re2::Regexp::FactorAlternation(re2::Regexp**, int, re2::Regexp::ParseFlags)
 T re2::Regexp::FactorAlternationRecursive(re2::Regexp**, int, re2::Regexp::ParseFlags, int)
 T re2::Regexp::HaveMatch(int, re2::Regexp::ParseFlags)
 T re2::Regexp::Incref()
 T re2::Regexp::LeadingRegexp(re2::Regexp*)
 T re2::Regexp::LeadingString(re2::Regexp*, int*, re2::Regexp::ParseFlags*)
 T re2::Regexp::LiteralString(int*, int, re2::Regexp::ParseFlags)
 T re2::Regexp::MimicsPCRE()
 T re2::Regexp::NamedCaptures[abi:cxx11]()
 T re2::Regexp::NewCharClass(re2::CharClass*, re2::Regexp::ParseFlags)
 T re2::Regexp::NewLiteral(int, re2::Regexp::ParseFlags)
 T re2::Regexp::NumCaptures()
 T re2::Regexp::Parse(re2::StringPiece const&, re2::Regexp::ParseFlags, re2::RegexpStatus*)
 T re2::Regexp::ParseState::DoAlternation()
 T re2::Regexp::ParseState::DoCollapse(re2::RegexpOp)
 T re2::Regexp::ParseState::DoConcatenation()
 T re2::Regexp::ParseState::DoFinish()
 T re2::Regexp::ParseState::DoLeftParen(re2::StringPiece const&)
 T re2::Regexp::ParseState::DoLeftParenNoCapture()
 T re2::Regexp::ParseState::DoRightParen()
 T re2::Regexp::ParseState::DoVerticalBar()
 T re2::Regexp::ParseState::FinishRegexp(re2::Regexp*)
 T re2::Regexp::ParseState::IsMarker(re2::RegexpOp)
 T re2::Regexp::ParseState::MaybeConcatString(int, re2::Regexp::ParseFlags)
 T re2::Regexp::ParseState::ParseCCCharacter(re2::StringPiece*, int*, re2::StringPiece const&, re2::RegexpStatus*)
 T re2::Regexp::ParseState::ParseCCRange(re2::StringPiece*, re2::RuneRange*, re2::StringPiece const&, re2::RegexpStatus*)
 T re2::Regexp::ParseState::ParseCharClass(re2::StringPiece*, re2::Regexp**, re2::RegexpStatus*)
 T re2::Regexp::ParseState::ParsePerlFlags(re2::StringPiece*)
 T re2::Regexp::ParseState::ParseState(re2::Regexp::ParseFlags, re2::StringPiece const&, re2::RegexpStatus*)
 T re2::Regexp::ParseState::PushCarat()
 T re2::Regexp::ParseState::PushDollar()
 T re2::Regexp::ParseState::PushDot()
 T re2::Regexp::ParseState::PushLiteral(int)
 T re2::Regexp::ParseState::PushRegexp(re2::Regexp*)
 T re2::Regexp::ParseState::PushRepeatOp(re2::RegexpOp, re2::StringPiece const&, bool)
 T re2::Regexp::ParseState::PushRepetition(int, int, re2::StringPiece const&, bool)
 T re2::Regexp::ParseState::PushSimpleOp(re2::RegexpOp)
 T re2::Regexp::ParseState::PushWordBoundary(bool)
 T re2::Regexp::ParseState::~ParseState()
 T re2::Regexp::Plus(re2::Regexp*, re2::Regexp::ParseFlags)
 T re2::Regexp::Quest(re2::Regexp*, re2::Regexp::ParseFlags)
 T re2::Regexp::QuickDestroy()
 T re2::Regexp::Ref()
 T re2::Regexp::Regexp(re2::RegexpOp, re2::Regexp::ParseFlags)
 T re2::Regexp::RemoveLeadingRegexp(re2::Regexp*)
 T re2::Regexp::RemoveLeadingString(re2::Regexp*, int)
 T re2::Regexp::Repeat(re2::Regexp*, re2::Regexp::ParseFlags, int, int)
 T re2::Regexp::RequiredPrefix(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool*, re2::Regexp**)
 T re2::Regexp::Simplify()
 T re2::Regexp::SimplifyRegexp(re2::StringPiece const&, re2::Regexp::ParseFlags, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, re2::RegexpStatus*)
 T re2::Regexp::Star(re2::Regexp*, re2::Regexp::ParseFlags)
 T re2::Regexp::StarPlusOrQuest(re2::RegexpOp, re2::Regexp*, re2::Regexp::ParseFlags)
 T re2::Regexp::Swap(re2::Regexp*)
 T re2::Regexp::ToString[abi:cxx11]()
 T re2::Regexp::~Regexp()
 T re2::RegexpStatus::CodeText[abi:cxx11](re2::RegexpStatusCode)
 T re2::RegexpStatus::Copy(re2::RegexpStatus const&)
 T re2::RegexpStatus::Text[abi:cxx11]() const
 T re2::RepetitionWalker::PostVisit(re2::Regexp*, int, int, int*, int)
 T re2::RepetitionWalker::PreVisit(re2::Regexp*, int, bool*)
 T re2::RepetitionWalker::ShortVisit(re2::Regexp*, int)
 T re2::SStringPrintf(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, char const*, ...)
 T re2::SimplifyWalker::Concat2(re2::Regexp*, re2::Regexp*, re2::Regexp::ParseFlags)
 T re2::SimplifyWalker::Copy(re2::Regexp*)
 T re2::SimplifyWalker::PostVisit(re2::Regexp*, re2::Regexp*, re2::Regexp*, re2::Regexp**, int)
 T re2::SimplifyWalker::PreVisit(re2::Regexp*, re2::Regexp*, bool*)
 T re2::SimplifyWalker::ShortVisit(re2::Regexp*, re2::Regexp*)
 T re2::SimplifyWalker::SimplifyCharClass(re2::Regexp*)
 T re2::SimplifyWalker::SimplifyRepeat(re2::Regexp*, int, int, re2::Regexp::ParseFlags)
 T re2::StringAppendF(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, char const*, ...)
 T re2::StringPiece::copy(char*, unsigned long, unsigned long) const
 T re2::StringPiece::find(char, unsigned long) const
 T re2::StringPiece::find(re2::StringPiece const&, unsigned long) const
 T re2::StringPiece::rfind(char, unsigned long) const
 T re2::StringPiece::rfind(re2::StringPiece const&, unsigned long) const
 T re2::StringPiece::substr(unsigned long, unsigned long) const
 T re2::StringPrintf[abi:cxx11](char const*, ...)
 T re2::ToStringWalker::PostVisit(re2::Regexp*, int, int, int*, int)
 T re2::ToStringWalker::PreVisit(re2::Regexp*, int, bool*)
 T re2::chartorune(int*, char const*)
 T re2::fullrune(char const*, int)
 T re2::operator<<(std::ostream&, re2::StringPiece const&)
 T re2::runelen(int)
 T re2::runetochar(char*, int const*)
 T re2::utflen(char const*)
 T re2::utfrune(char const*, int)
 T reallocarray
 T rftbsub
 T rftfsub
 T snappy::ByteArraySource::Available() const
 T snappy::ByteArraySource::Peek(unsigned long*)
 T snappy::ByteArraySource::Skip(unsigned long)
 T snappy::ByteArraySource::~ByteArraySource()
 T snappy::Compress(char const*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T snappy::Compress(snappy::Source*, snappy::Sink*)
 T snappy::GetUncompressedLength(char const*, unsigned long, unsigned long*)
 T snappy::GetUncompressedLength(snappy::Source*, unsigned int*)
 T snappy::IsValidCompressed(snappy::Source*)
 T snappy::IsValidCompressedBuffer(char const*, unsigned long)
 T snappy::MaxCompressedLength(unsigned long)
 T snappy::RawCompress(char const*, unsigned long, char*, unsigned long*)
 T snappy::RawUncompress(char const*, unsigned long, char*)
 T snappy::RawUncompress(snappy::Source*, char*)
 T snappy::RawUncompressToIOVec(char const*, unsigned long, iovec const*, unsigned long)
 T snappy::RawUncompressToIOVec(snappy::Source*, iovec const*, unsigned long)
 T snappy::Sink::AppendAndTakeOwnership(char*, unsigned long, void (*)(void*, char const*, unsigned long), void*)
 T snappy::Sink::GetAppendBuffer(unsigned long, char*)
 T snappy::Sink::GetAppendBufferVariable(unsigned long, unsigned long, char*, unsigned long, unsigned long*)
 T snappy::Sink::~Sink()
 T snappy::SnappyDecompressor::RefillTag()
 T snappy::Source::~Source()
 T snappy::UncheckedByteArraySink::Append(char const*, unsigned long)
 T snappy::UncheckedByteArraySink::AppendAndTakeOwnership(char*, unsigned long, void (*)(void*, char const*, unsigned long), void*)
 T snappy::UncheckedByteArraySink::GetAppendBuffer(unsigned long, char*)
 T snappy::UncheckedByteArraySink::GetAppendBufferVariable(unsigned long, unsigned long, char*, unsigned long, unsigned long*)
 T snappy::UncheckedByteArraySink::~UncheckedByteArraySink()
 T snappy::Uncompress(char const*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T snappy::Uncompress(snappy::Source*, snappy::Sink*)
 T snappy::UncompressAsMuchAsPossible(snappy::Source*, snappy::Sink*)
 T snappy::Varint::Append32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned int)
 T snappy::internal::CompressFragment(char const*, unsigned long, char*, unsigned short*, int)
 T snappy::internal::WorkingMemory::GetHashTable(unsigned long, int*)
 T snappy_compress
 T snappy_max_compressed_length
 T snappy_uncompress
 T snappy_uncompressed_length
 T snappy_validate_compressed_buffer
 T std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > tensorflow::TypeNameVariant<tensorflow::VariantTensorDataProto>(tensorflow::VariantTensorDataProto const&)
 T tensorflow::AddControlEdges(tensorflow::PartitionOptions const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::GraphDef, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::GraphDef> > >*)
 T tensorflow::AddDefaultAttrsToGraphDef(tensorflow::GraphDef*, tensorflow::OpRegistryInterface const&, int)
 T tensorflow::AddDefaultsToNodeDef(tensorflow::OpDef const&, tensorflow::NodeDef*)
 T tensorflow::AddNodeAttr(tensorflow::StringPiece, bool, tensorflow::NodeDef*)
 T tensorflow::AddNodeAttr(tensorflow::StringPiece, char const*, tensorflow::NodeDef*)
 T tensorflow::AddNodeAttr(tensorflow::StringPiece, double, tensorflow::NodeDef*)
 T tensorflow::AddNodeAttr(tensorflow::StringPiece, float, tensorflow::NodeDef*)
 T tensorflow::AddNodeAttr(tensorflow::StringPiece, int, tensorflow::NodeDef*)
 T tensorflow::AddNodeAttr(tensorflow::StringPiece, long long, tensorflow::NodeDef*)
 T tensorflow::AddNodeAttr(tensorflow::StringPiece, std::vector<bool, std::allocator<bool> > const&, tensorflow::NodeDef*)
 T tensorflow::AddNodeAttr(tensorflow::StringPiece, tensorflow::AttrValue const&, tensorflow::NodeDef*)
 T tensorflow::AddNodeAttr(tensorflow::StringPiece, tensorflow::DataType, tensorflow::NodeDef*)
 T tensorflow::AddNodeAttr(tensorflow::StringPiece, tensorflow::NameAttrList const&, tensorflow::NodeDef*)
 T tensorflow::AddNodeAttr(tensorflow::StringPiece, tensorflow::PartialTensorShape const&, tensorflow::NodeDef*)
 T tensorflow::AddNodeAttr(tensorflow::StringPiece, tensorflow::StringPiece, tensorflow::NodeDef*)
 T tensorflow::AddNodeAttr(tensorflow::StringPiece, tensorflow::Tensor const&, tensorflow::NodeDef*)
 T tensorflow::AddNodeAttr(tensorflow::StringPiece, tensorflow::TensorProto const&, tensorflow::NodeDef*)
 T tensorflow::AddNodeAttr(tensorflow::StringPiece, tensorflow::gtl::ArraySlice<bool>, tensorflow::NodeDef*)
 T tensorflow::AddNodeAttr(tensorflow::StringPiece, tensorflow::gtl::ArraySlice<char const*>, tensorflow::NodeDef*)
 T tensorflow::AddNodeAttr(tensorflow::StringPiece, tensorflow::gtl::ArraySlice<float>, tensorflow::NodeDef*)
 T tensorflow::AddNodeAttr(tensorflow::StringPiece, tensorflow::gtl::ArraySlice<int>, tensorflow::NodeDef*)
 T tensorflow::AddNodeAttr(tensorflow::StringPiece, tensorflow::gtl::ArraySlice<long long>, tensorflow::NodeDef*)
 T tensorflow::AddNodeAttr(tensorflow::StringPiece, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::NodeDef*)
 T tensorflow::AddNodeAttr(tensorflow::StringPiece, tensorflow::gtl::ArraySlice<tensorflow::DataType>, tensorflow::NodeDef*)
 T tensorflow::AddNodeAttr(tensorflow::StringPiece, tensorflow::gtl::ArraySlice<tensorflow::NameAttrList>, tensorflow::NodeDef*)
 T tensorflow::AddNodeAttr(tensorflow::StringPiece, tensorflow::gtl::ArraySlice<tensorflow::PartialTensorShape>, tensorflow::NodeDef*)
 T tensorflow::AddNodeAttr(tensorflow::StringPiece, tensorflow::gtl::ArraySlice<tensorflow::StringPiece>, tensorflow::NodeDef*)
 T tensorflow::AddNodeAttr(tensorflow::StringPiece, tensorflow::gtl::ArraySlice<tensorflow::Tensor>, tensorflow::NodeDef*)
 T tensorflow::AddNodeAttr(tensorflow::StringPiece, tensorflow::gtl::ArraySlice<tensorflow::TensorShape>, tensorflow::NodeDef*)
 T tensorflow::AddNodeAttr(tensorflow::StringPiece, tensorflow::gtl::ArraySlice<tensorflow::TensorShapeProto>, tensorflow::NodeDef*)
 T tensorflow::AddSymbolicGradients(tensorflow::gtl::ArraySlice<tensorflow::NodeOut>, tensorflow::gtl::ArraySlice<tensorflow::NodeOut>, tensorflow::gtl::ArraySlice<tensorflow::NodeOut>, std::vector<tensorflow::NodeOut, std::allocator<tensorflow::NodeOut> >*, tensorflow::Graph*)
 T tensorflow::AllTypes()
 T tensorflow::AllocationDescription::AllocationDescription()
 T tensorflow::AllocationDescription::AllocationDescription(tensorflow::AllocationDescription const&)
 T tensorflow::AllocationDescription::ArenaDtor(void*)
 T tensorflow::AllocationDescription::ByteSizeLong() const
 T tensorflow::AllocationDescription::Clear()
 T tensorflow::AllocationDescription::CopyFrom(tensorflow::AllocationDescription const&)
 T tensorflow::AllocationDescription::GetMetadata() const
 T tensorflow::AllocationDescription::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::AllocationDescription::InternalSwap(tensorflow::AllocationDescription*)
 T tensorflow::AllocationDescription::IsInitialized() const
 T tensorflow::AllocationDescription::MergeFrom(tensorflow::AllocationDescription const&)
 T tensorflow::AllocationDescription::SetCachedSize(int) const
 T tensorflow::AllocationDescription::SharedCtor()
 T tensorflow::AllocationDescription::SharedDtor()
 T tensorflow::AllocationDescription::Swap(tensorflow::AllocationDescription*)
 T tensorflow::AllocationDescription::UnsafeArenaSwap(tensorflow::AllocationDescription*)
 T tensorflow::AllocationDescription::default_instance()
 T tensorflow::AllocationDescription::descriptor()
 T tensorflow::AllocationDescription::~AllocationDescription()
 T tensorflow::AllocationRecord::AllocationRecord()
 T tensorflow::AllocationRecord::AllocationRecord(tensorflow::AllocationRecord const&)
 T tensorflow::AllocationRecord::ArenaDtor(void*)
 T tensorflow::AllocationRecord::ByteSizeLong() const
 T tensorflow::AllocationRecord::Clear()
 T tensorflow::AllocationRecord::CopyFrom(tensorflow::AllocationRecord const&)
 T tensorflow::AllocationRecord::GetMetadata() const
 T tensorflow::AllocationRecord::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::AllocationRecord::InternalSwap(tensorflow::AllocationRecord*)
 T tensorflow::AllocationRecord::IsInitialized() const
 T tensorflow::AllocationRecord::MergeFrom(tensorflow::AllocationRecord const&)
 T tensorflow::AllocationRecord::SetCachedSize(int) const
 T tensorflow::AllocationRecord::SharedCtor()
 T tensorflow::AllocationRecord::SharedDtor()
 T tensorflow::AllocationRecord::Swap(tensorflow::AllocationRecord*)
 T tensorflow::AllocationRecord::UnsafeArenaSwap(tensorflow::AllocationRecord*)
 T tensorflow::AllocationRecord::default_instance()
 T tensorflow::AllocationRecord::descriptor()
 T tensorflow::AllocationRecord::~AllocationRecord()
 T tensorflow::Allocator::~Allocator()
 T tensorflow::AllocatorMemoryUsed::AllocatorMemoryUsed()
 T tensorflow::AllocatorMemoryUsed::AllocatorMemoryUsed(tensorflow::AllocatorMemoryUsed const&)
 T tensorflow::AllocatorMemoryUsed::ArenaDtor(void*)
 T tensorflow::AllocatorMemoryUsed::ByteSizeLong() const
 T tensorflow::AllocatorMemoryUsed::Clear()
 T tensorflow::AllocatorMemoryUsed::CopyFrom(tensorflow::AllocatorMemoryUsed const&)
 T tensorflow::AllocatorMemoryUsed::GetMetadata() const
 T tensorflow::AllocatorMemoryUsed::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::AllocatorMemoryUsed::InternalSwap(tensorflow::AllocatorMemoryUsed*)
 T tensorflow::AllocatorMemoryUsed::IsInitialized() const
 T tensorflow::AllocatorMemoryUsed::MergeFrom(tensorflow::AllocatorMemoryUsed const&)
 T tensorflow::AllocatorMemoryUsed::SetCachedSize(int) const
 T tensorflow::AllocatorMemoryUsed::SharedCtor()
 T tensorflow::AllocatorMemoryUsed::SharedDtor()
 T tensorflow::AllocatorMemoryUsed::Swap(tensorflow::AllocatorMemoryUsed*)
 T tensorflow::AllocatorMemoryUsed::UnsafeArenaSwap(tensorflow::AllocatorMemoryUsed*)
 T tensorflow::AllocatorMemoryUsed::default_instance()
 T tensorflow::AllocatorMemoryUsed::descriptor()
 T tensorflow::AllocatorMemoryUsed::~AllocatorMemoryUsed()
 T tensorflow::AllocatorRegistry::GetAllocator()
 T tensorflow::AllocatorRegistry::GetRegisteredAllocator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
 T tensorflow::AllocatorRegistry::Global()
 T tensorflow::AllocatorRegistry::Register(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, tensorflow::Allocator*)
 T tensorflow::AllocatorRetry::AllocateRaw(std::function<void* (unsigned long, unsigned long, bool)>, int, unsigned long, unsigned long)
 T tensorflow::AllocatorRetry::AllocatorRetry()
 T tensorflow::AllocatorStats::Clear()
 T tensorflow::AllocatorStats::DebugString[abi:cxx11]() const
 T tensorflow::ApiDef::ApiDef()
 T tensorflow::ApiDef::ApiDef(tensorflow::ApiDef const&)
 T tensorflow::ApiDef::ArenaDtor(void*)
 T tensorflow::ApiDef::ByteSizeLong() const
 T tensorflow::ApiDef::Clear()
 T tensorflow::ApiDef::CopyFrom(tensorflow::ApiDef const&)
 T tensorflow::ApiDef::GetMetadata() const
 T tensorflow::ApiDef::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::ApiDef::InternalSwap(tensorflow::ApiDef*)
 T tensorflow::ApiDef::IsInitialized() const
 T tensorflow::ApiDef::MergeFrom(tensorflow::ApiDef const&)
 T tensorflow::ApiDef::SetCachedSize(int) const
 T tensorflow::ApiDef::SharedCtor()
 T tensorflow::ApiDef::SharedDtor()
 T tensorflow::ApiDef::Swap(tensorflow::ApiDef*)
 T tensorflow::ApiDef::UnsafeArenaSwap(tensorflow::ApiDef*)
 T tensorflow::ApiDef::default_instance()
 T tensorflow::ApiDef::descriptor()
 T tensorflow::ApiDef::~ApiDef()
 T tensorflow::ApiDef_Arg::ApiDef_Arg()
 T tensorflow::ApiDef_Arg::ApiDef_Arg(tensorflow::ApiDef_Arg const&)
 T tensorflow::ApiDef_Arg::ArenaDtor(void*)
 T tensorflow::ApiDef_Arg::ByteSizeLong() const
 T tensorflow::ApiDef_Arg::Clear()
 T tensorflow::ApiDef_Arg::CopyFrom(tensorflow::ApiDef_Arg const&)
 T tensorflow::ApiDef_Arg::GetMetadata() const
 T tensorflow::ApiDef_Arg::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::ApiDef_Arg::InternalSwap(tensorflow::ApiDef_Arg*)
 T tensorflow::ApiDef_Arg::IsInitialized() const
 T tensorflow::ApiDef_Arg::MergeFrom(tensorflow::ApiDef_Arg const&)
 T tensorflow::ApiDef_Arg::SetCachedSize(int) const
 T tensorflow::ApiDef_Arg::SharedCtor()
 T tensorflow::ApiDef_Arg::SharedDtor()
 T tensorflow::ApiDef_Arg::Swap(tensorflow::ApiDef_Arg*)
 T tensorflow::ApiDef_Arg::UnsafeArenaSwap(tensorflow::ApiDef_Arg*)
 T tensorflow::ApiDef_Arg::default_instance()
 T tensorflow::ApiDef_Arg::descriptor()
 T tensorflow::ApiDef_Arg::~ApiDef_Arg()
 T tensorflow::ApiDef_Attr::ApiDef_Attr()
 T tensorflow::ApiDef_Attr::ApiDef_Attr(tensorflow::ApiDef_Attr const&)
 T tensorflow::ApiDef_Attr::ArenaDtor(void*)
 T tensorflow::ApiDef_Attr::ByteSizeLong() const
 T tensorflow::ApiDef_Attr::Clear()
 T tensorflow::ApiDef_Attr::CopyFrom(tensorflow::ApiDef_Attr const&)
 T tensorflow::ApiDef_Attr::GetMetadata() const
 T tensorflow::ApiDef_Attr::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::ApiDef_Attr::InternalSwap(tensorflow::ApiDef_Attr*)
 T tensorflow::ApiDef_Attr::IsInitialized() const
 T tensorflow::ApiDef_Attr::MergeFrom(tensorflow::ApiDef_Attr const&)
 T tensorflow::ApiDef_Attr::SetCachedSize(int) const
 T tensorflow::ApiDef_Attr::SharedCtor()
 T tensorflow::ApiDef_Attr::SharedDtor()
 T tensorflow::ApiDef_Attr::Swap(tensorflow::ApiDef_Attr*)
 T tensorflow::ApiDef_Attr::UnsafeArenaSwap(tensorflow::ApiDef_Attr*)
 T tensorflow::ApiDef_Attr::_slow_mutable_default_value()
 T tensorflow::ApiDef_Attr::_slow_release_default_value()
 T tensorflow::ApiDef_Attr::default_instance()
 T tensorflow::ApiDef_Attr::descriptor()
 T tensorflow::ApiDef_Attr::unsafe_arena_release_default_value()
 T tensorflow::ApiDef_Attr::unsafe_arena_set_allocated_default_value(tensorflow::AttrValue*)
 T tensorflow::ApiDef_Attr::~ApiDef_Attr()
 T tensorflow::ApiDef_Endpoint::ApiDef_Endpoint()
 T tensorflow::ApiDef_Endpoint::ApiDef_Endpoint(tensorflow::ApiDef_Endpoint const&)
 T tensorflow::ApiDef_Endpoint::ArenaDtor(void*)
 T tensorflow::ApiDef_Endpoint::ByteSizeLong() const
 T tensorflow::ApiDef_Endpoint::Clear()
 T tensorflow::ApiDef_Endpoint::CopyFrom(tensorflow::ApiDef_Endpoint const&)
 T tensorflow::ApiDef_Endpoint::GetMetadata() const
 T tensorflow::ApiDef_Endpoint::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::ApiDef_Endpoint::InternalSwap(tensorflow::ApiDef_Endpoint*)
 T tensorflow::ApiDef_Endpoint::IsInitialized() const
 T tensorflow::ApiDef_Endpoint::MergeFrom(tensorflow::ApiDef_Endpoint const&)
 T tensorflow::ApiDef_Endpoint::SetCachedSize(int) const
 T tensorflow::ApiDef_Endpoint::SharedCtor()
 T tensorflow::ApiDef_Endpoint::SharedDtor()
 T tensorflow::ApiDef_Endpoint::Swap(tensorflow::ApiDef_Endpoint*)
 T tensorflow::ApiDef_Endpoint::UnsafeArenaSwap(tensorflow::ApiDef_Endpoint*)
 T tensorflow::ApiDef_Endpoint::default_instance()
 T tensorflow::ApiDef_Endpoint::descriptor()
 T tensorflow::ApiDef_Endpoint::~ApiDef_Endpoint()
 T tensorflow::ApiDef_Visibility_IsValid(int)
 T tensorflow::ApiDef_Visibility_descriptor()
 T tensorflow::ApiDefs::ApiDefs()
 T tensorflow::ApiDefs::ApiDefs(tensorflow::ApiDefs const&)
 T tensorflow::ApiDefs::ArenaDtor(void*)
 T tensorflow::ApiDefs::ByteSizeLong() const
 T tensorflow::ApiDefs::Clear()
 T tensorflow::ApiDefs::CopyFrom(tensorflow::ApiDefs const&)
 T tensorflow::ApiDefs::GetMetadata() const
 T tensorflow::ApiDefs::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::ApiDefs::InternalSwap(tensorflow::ApiDefs*)
 T tensorflow::ApiDefs::IsInitialized() const
 T tensorflow::ApiDefs::MergeFrom(tensorflow::ApiDefs const&)
 T tensorflow::ApiDefs::SetCachedSize(int) const
 T tensorflow::ApiDefs::SharedCtor()
 T tensorflow::ApiDefs::SharedDtor()
 T tensorflow::ApiDefs::Swap(tensorflow::ApiDefs*)
 T tensorflow::ApiDefs::UnsafeArenaSwap(tensorflow::ApiDefs*)
 T tensorflow::ApiDefs::default_instance()
 T tensorflow::ApiDefs::descriptor()
 T tensorflow::ApiDefs::~ApiDefs()
 T tensorflow::AreAttrValuesEqual(tensorflow::AttrValue const&, tensorflow::AttrValue const&)
 T tensorflow::ArgNumType(tensorflow::AttrSlice, tensorflow::OpDef_ArgDef const&, bool*, tensorflow::gtl::InlinedVector<tensorflow::DataType, 4>*)
 T tensorflow::AssetFileDef::ArenaDtor(void*)
 T tensorflow::AssetFileDef::AssetFileDef()
 T tensorflow::AssetFileDef::AssetFileDef(tensorflow::AssetFileDef const&)
 T tensorflow::AssetFileDef::ByteSizeLong() const
 T tensorflow::AssetFileDef::Clear()
 T tensorflow::AssetFileDef::CopyFrom(tensorflow::AssetFileDef const&)
 T tensorflow::AssetFileDef::GetMetadata() const
 T tensorflow::AssetFileDef::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::AssetFileDef::InternalSwap(tensorflow::AssetFileDef*)
 T tensorflow::AssetFileDef::IsInitialized() const
 T tensorflow::AssetFileDef::MergeFrom(tensorflow::AssetFileDef const&)
 T tensorflow::AssetFileDef::SetCachedSize(int) const
 T tensorflow::AssetFileDef::SharedCtor()
 T tensorflow::AssetFileDef::SharedDtor()
 T tensorflow::AssetFileDef::Swap(tensorflow::AssetFileDef*)
 T tensorflow::AssetFileDef::UnsafeArenaSwap(tensorflow::AssetFileDef*)
 T tensorflow::AssetFileDef::_slow_mutable_tensor_info()
 T tensorflow::AssetFileDef::_slow_release_tensor_info()
 T tensorflow::AssetFileDef::default_instance()
 T tensorflow::AssetFileDef::descriptor()
 T tensorflow::AssetFileDef::unsafe_arena_release_tensor_info()
 T tensorflow::AssetFileDef::unsafe_arena_set_allocated_tensor_info(tensorflow::TensorInfo*)
 T tensorflow::AssetFileDef::~AssetFileDef()
 T tensorflow::AsyncOpKernel::Compute(tensorflow::OpKernelContext*)
 T tensorflow::AttachDef(tensorflow::Status const&, tensorflow::Node const&)
 T tensorflow::AttachDef(tensorflow::Status const&, tensorflow::NodeDef const&)
 T tensorflow::AttrDefEqual(tensorflow::OpDef_AttrDef const&, tensorflow::OpDef_AttrDef const&)
 T tensorflow::AttrDefHash(tensorflow::OpDef_AttrDef const&)
 T tensorflow::AttrSlice::AttrSlice()
 T tensorflow::AttrSlice::AttrSlice(tensorflow::NodeDef const&)
 T tensorflow::AttrSlice::EqualAttrs(tensorflow::AttrSlice, tensorflow::AttrSlice::Scratch*) const
 T tensorflow::AttrSlice::Find(tensorflow::StringPiece) const
 T tensorflow::AttrSlice::Find(tensorflow::StringPiece, tensorflow::AttrValue const**) const
 T tensorflow::AttrSlice::SummarizeNode[abi:cxx11]() const
 T tensorflow::AttrValue::ArenaDtor(void*)
 T tensorflow::AttrValue::AttrValue()
 T tensorflow::AttrValue::AttrValue(tensorflow::AttrValue const&)
 T tensorflow::AttrValue::ByteSizeLong() const
 T tensorflow::AttrValue::Clear()
 T tensorflow::AttrValue::CopyFrom(tensorflow::AttrValue const&)
 T tensorflow::AttrValue::GetMetadata() const
 T tensorflow::AttrValue::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::AttrValue::InternalSwap(tensorflow::AttrValue*)
 T tensorflow::AttrValue::IsInitialized() const
 T tensorflow::AttrValue::MergeFrom(tensorflow::AttrValue const&)
 T tensorflow::AttrValue::SetCachedSize(int) const
 T tensorflow::AttrValue::SharedCtor()
 T tensorflow::AttrValue::SharedDtor()
 T tensorflow::AttrValue::Swap(tensorflow::AttrValue*)
 T tensorflow::AttrValue::UnsafeArenaSwap(tensorflow::AttrValue*)
 T tensorflow::AttrValue::clear_value()
 T tensorflow::AttrValue::default_instance()
 T tensorflow::AttrValue::descriptor()
 T tensorflow::AttrValue::~AttrValue()
 T tensorflow::AttrValueHasType(tensorflow::AttrValue const&, tensorflow::StringPiece)
 T tensorflow::AttrValueHash(tensorflow::AttrValue const&)
 T tensorflow::AttrValue_ListValue::ArenaDtor(void*)
 T tensorflow::AttrValue_ListValue::AttrValue_ListValue()
 T tensorflow::AttrValue_ListValue::AttrValue_ListValue(tensorflow::AttrValue_ListValue const&)
 T tensorflow::AttrValue_ListValue::ByteSizeLong() const
 T tensorflow::AttrValue_ListValue::Clear()
 T tensorflow::AttrValue_ListValue::CopyFrom(tensorflow::AttrValue_ListValue const&)
 T tensorflow::AttrValue_ListValue::GetMetadata() const
 T tensorflow::AttrValue_ListValue::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::AttrValue_ListValue::InternalSwap(tensorflow::AttrValue_ListValue*)
 T tensorflow::AttrValue_ListValue::IsInitialized() const
 T tensorflow::AttrValue_ListValue::MergeFrom(tensorflow::AttrValue_ListValue const&)
 T tensorflow::AttrValue_ListValue::SetCachedSize(int) const
 T tensorflow::AttrValue_ListValue::SharedCtor()
 T tensorflow::AttrValue_ListValue::SharedDtor()
 T tensorflow::AttrValue_ListValue::Swap(tensorflow::AttrValue_ListValue*)
 T tensorflow::AttrValue_ListValue::UnsafeArenaSwap(tensorflow::AttrValue_ListValue*)
 T tensorflow::AttrValue_ListValue::default_instance()
 T tensorflow::AttrValue_ListValue::descriptor()
 T tensorflow::AttrValue_ListValue::~AttrValue_ListValue()
 T tensorflow::AutoParallelOptions::ArenaDtor(void*)
 T tensorflow::AutoParallelOptions::AutoParallelOptions()
 T tensorflow::AutoParallelOptions::AutoParallelOptions(tensorflow::AutoParallelOptions const&)
 T tensorflow::AutoParallelOptions::ByteSizeLong() const
 T tensorflow::AutoParallelOptions::Clear()
 T tensorflow::AutoParallelOptions::CopyFrom(tensorflow::AutoParallelOptions const&)
 T tensorflow::AutoParallelOptions::GetMetadata() const
 T tensorflow::AutoParallelOptions::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::AutoParallelOptions::InternalSwap(tensorflow::AutoParallelOptions*)
 T tensorflow::AutoParallelOptions::IsInitialized() const
 T tensorflow::AutoParallelOptions::MergeFrom(tensorflow::AutoParallelOptions const&)
 T tensorflow::AutoParallelOptions::SetCachedSize(int) const
 T tensorflow::AutoParallelOptions::SharedCtor()
 T tensorflow::AutoParallelOptions::SharedDtor()
 T tensorflow::AutoParallelOptions::Swap(tensorflow::AutoParallelOptions*)
 T tensorflow::AutoParallelOptions::UnsafeArenaSwap(tensorflow::AutoParallelOptions*)
 T tensorflow::AutoParallelOptions::default_instance()
 T tensorflow::AutoParallelOptions::descriptor()
 T tensorflow::AutoParallelOptions::~AutoParallelOptions()
 T tensorflow::AvailableDeviceInfo::ArenaDtor(void*)
 T tensorflow::AvailableDeviceInfo::AvailableDeviceInfo()
 T tensorflow::AvailableDeviceInfo::AvailableDeviceInfo(tensorflow::AvailableDeviceInfo const&)
 T tensorflow::AvailableDeviceInfo::ByteSizeLong() const
 T tensorflow::AvailableDeviceInfo::Clear()
 T tensorflow::AvailableDeviceInfo::CopyFrom(tensorflow::AvailableDeviceInfo const&)
 T tensorflow::AvailableDeviceInfo::GetMetadata() const
 T tensorflow::AvailableDeviceInfo::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::AvailableDeviceInfo::InternalSwap(tensorflow::AvailableDeviceInfo*)
 T tensorflow::AvailableDeviceInfo::IsInitialized() const
 T tensorflow::AvailableDeviceInfo::MergeFrom(tensorflow::AvailableDeviceInfo const&)
 T tensorflow::AvailableDeviceInfo::SetCachedSize(int) const
 T tensorflow::AvailableDeviceInfo::SharedCtor()
 T tensorflow::AvailableDeviceInfo::SharedDtor()
 T tensorflow::AvailableDeviceInfo::Swap(tensorflow::AvailableDeviceInfo*)
 T tensorflow::AvailableDeviceInfo::UnsafeArenaSwap(tensorflow::AvailableDeviceInfo*)
 T tensorflow::AvailableDeviceInfo::default_instance()
 T tensorflow::AvailableDeviceInfo::descriptor()
 T tensorflow::AvailableDeviceInfo::~AvailableDeviceInfo()
 T tensorflow::BCast::BCast(tensorflow::gtl::InlinedVector<long long, 4> const&, tensorflow::gtl::InlinedVector<long long, 4> const&, bool)
 T tensorflow::BCast::FromShape(tensorflow::TensorShape const&)
 T tensorflow::BCast::Reverse(tensorflow::gtl::InlinedVector<long long, 4>*)
 T tensorflow::BCast::ToShape(tensorflow::gtl::InlinedVector<long long, 4> const&)
 T tensorflow::BFCAllocator::AddAllocVisitor(std::function<void (void*, unsigned long)>)
 T tensorflow::BFCAllocator::AllocateChunk()
 T tensorflow::BFCAllocator::AllocateRaw(unsigned long, unsigned long)
 T tensorflow::BFCAllocator::AllocateRaw(unsigned long, unsigned long, tensorflow::AllocationAttributes const&)
 T tensorflow::BFCAllocator::AllocateRawInternal(unsigned long, unsigned long, bool)
 T tensorflow::BFCAllocator::AllocatedSize(void*)
 T tensorflow::BFCAllocator::AllocationId(void*)
 T tensorflow::BFCAllocator::BFCAllocator(tensorflow::SubAllocator*, unsigned long, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::BFCAllocator::ChunkFromHandle(unsigned long)
 T tensorflow::BFCAllocator::DeallocateChunk(unsigned long)
 T tensorflow::BFCAllocator::DeallocateRaw(void*)
 T tensorflow::BFCAllocator::DeallocateRawInternal(void*)
 T tensorflow::BFCAllocator::DeleteChunk(unsigned long)
 T tensorflow::BFCAllocator::DumpMemoryLog(unsigned long)
 T tensorflow::BFCAllocator::Extend(unsigned long)
 T tensorflow::BFCAllocator::FindChunkPtr(int, unsigned long, unsigned long)
 T tensorflow::BFCAllocator::FreeAndMaybeCoalesce(unsigned long)
 T tensorflow::BFCAllocator::GetStats(tensorflow::AllocatorStats*)
 T tensorflow::BFCAllocator::InsertFreeChunkIntoBin(unsigned long)
 T tensorflow::BFCAllocator::Merge(unsigned long, unsigned long)
 T tensorflow::BFCAllocator::RemoveFreeChunkFromBin(unsigned long)
 T tensorflow::BFCAllocator::RemoveFreeChunkIterFromBin(std::set<unsigned long, tensorflow::BFCAllocator::Bin::ChunkComparator, std::allocator<unsigned long> >*, std::_Rb_tree_const_iterator<unsigned long> const&)
 T tensorflow::BFCAllocator::RenderOccupancy[abi:cxx11]()
 T tensorflow::BFCAllocator::RequestedSize(void*)
 T tensorflow::BFCAllocator::RoundedBytes(unsigned long)
 T tensorflow::BFCAllocator::SplitChunk(unsigned long, unsigned long)
 T tensorflow::BFCAllocator::TracksAllocationSizes()
 T tensorflow::BFCAllocator::get_bin_debug_info()
 T tensorflow::BFCAllocator::~BFCAllocator()
 T tensorflow::BFloat16ToFloat(tensorflow::bfloat16 const*, float*, long long)
 T tensorflow::Base64Decode(tensorflow::StringPiece, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::Base64Encode(tensorflow::StringPiece, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::Base64Encode(tensorflow::StringPiece, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::BatchExampleProtoToTensors(std::vector<tensorflow::Example const*, std::allocator<tensorflow::Example const*> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::FixedLenFeature, std::allocator<tensorflow::FixedLenFeature> > const&, std::vector<tensorflow::VarLenFeature, std::allocator<tensorflow::VarLenFeature> > const&, tensorflow::Allocator*, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*)
 T tensorflow::BenchmarkEntries::ArenaDtor(void*)
 T tensorflow::BenchmarkEntries::BenchmarkEntries()
 T tensorflow::BenchmarkEntries::BenchmarkEntries(tensorflow::BenchmarkEntries const&)
 T tensorflow::BenchmarkEntries::ByteSizeLong() const
 T tensorflow::BenchmarkEntries::Clear()
 T tensorflow::BenchmarkEntries::CopyFrom(tensorflow::BenchmarkEntries const&)
 T tensorflow::BenchmarkEntries::GetMetadata() const
 T tensorflow::BenchmarkEntries::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::BenchmarkEntries::InternalSwap(tensorflow::BenchmarkEntries*)
 T tensorflow::BenchmarkEntries::IsInitialized() const
 T tensorflow::BenchmarkEntries::MergeFrom(tensorflow::BenchmarkEntries const&)
 T tensorflow::BenchmarkEntries::SetCachedSize(int) const
 T tensorflow::BenchmarkEntries::SharedCtor()
 T tensorflow::BenchmarkEntries::SharedDtor()
 T tensorflow::BenchmarkEntries::Swap(tensorflow::BenchmarkEntries*)
 T tensorflow::BenchmarkEntries::UnsafeArenaSwap(tensorflow::BenchmarkEntries*)
 T tensorflow::BenchmarkEntries::default_instance()
 T tensorflow::BenchmarkEntries::descriptor()
 T tensorflow::BenchmarkEntries::~BenchmarkEntries()
 T tensorflow::BenchmarkEntry::ArenaDtor(void*)
 T tensorflow::BenchmarkEntry::BenchmarkEntry()
 T tensorflow::BenchmarkEntry::BenchmarkEntry(tensorflow::BenchmarkEntry const&)
 T tensorflow::BenchmarkEntry::BenchmarkEntry_ExtrasEntry::BenchmarkEntry_ExtrasEntry()
 T tensorflow::BenchmarkEntry::BenchmarkEntry_ExtrasEntry::GetMetadata() const
 T tensorflow::BenchmarkEntry::BenchmarkEntry_ExtrasEntry::MergeFrom(tensorflow::BenchmarkEntry::BenchmarkEntry_ExtrasEntry const&)
 T tensorflow::BenchmarkEntry::ByteSizeLong() const
 T tensorflow::BenchmarkEntry::Clear()
 T tensorflow::BenchmarkEntry::CopyFrom(tensorflow::BenchmarkEntry const&)
 T tensorflow::BenchmarkEntry::GetMetadata() const
 T tensorflow::BenchmarkEntry::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::BenchmarkEntry::InternalSwap(tensorflow::BenchmarkEntry*)
 T tensorflow::BenchmarkEntry::IsInitialized() const
 T tensorflow::BenchmarkEntry::MergeFrom(tensorflow::BenchmarkEntry const&)
 T tensorflow::BenchmarkEntry::SetCachedSize(int) const
 T tensorflow::BenchmarkEntry::SharedCtor()
 T tensorflow::BenchmarkEntry::SharedDtor()
 T tensorflow::BenchmarkEntry::Swap(tensorflow::BenchmarkEntry*)
 T tensorflow::BenchmarkEntry::UnsafeArenaSwap(tensorflow::BenchmarkEntry*)
 T tensorflow::BenchmarkEntry::default_instance()
 T tensorflow::BenchmarkEntry::descriptor()
 T tensorflow::BenchmarkEntry::~BenchmarkEntry()
 T tensorflow::BuildConfiguration::ArenaDtor(void*)
 T tensorflow::BuildConfiguration::BuildConfiguration()
 T tensorflow::BuildConfiguration::BuildConfiguration(tensorflow::BuildConfiguration const&)
 T tensorflow::BuildConfiguration::ByteSizeLong() const
 T tensorflow::BuildConfiguration::Clear()
 T tensorflow::BuildConfiguration::CopyFrom(tensorflow::BuildConfiguration const&)
 T tensorflow::BuildConfiguration::GetMetadata() const
 T tensorflow::BuildConfiguration::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::BuildConfiguration::InternalSwap(tensorflow::BuildConfiguration*)
 T tensorflow::BuildConfiguration::IsInitialized() const
 T tensorflow::BuildConfiguration::MergeFrom(tensorflow::BuildConfiguration const&)
 T tensorflow::BuildConfiguration::SetCachedSize(int) const
 T tensorflow::BuildConfiguration::SharedCtor()
 T tensorflow::BuildConfiguration::SharedDtor()
 T tensorflow::BuildConfiguration::Swap(tensorflow::BuildConfiguration*)
 T tensorflow::BuildConfiguration::UnsafeArenaSwap(tensorflow::BuildConfiguration*)
 T tensorflow::BuildConfiguration::default_instance()
 T tensorflow::BuildConfiguration::descriptor()
 T tensorflow::BuildConfiguration::~BuildConfiguration()
 T tensorflow::BuildControlFlowInfo(tensorflow::Graph*, std::vector<tensorflow::ControlFlowInfo, std::allocator<tensorflow::ControlFlowInfo> >*)
 T tensorflow::BuildGraphOptions::DebugString[abi:cxx11]() const
 T tensorflow::BundleEntryProto::ArenaDtor(void*)
 T tensorflow::BundleEntryProto::BundleEntryProto()
 T tensorflow::BundleEntryProto::BundleEntryProto(tensorflow::BundleEntryProto const&)
 T tensorflow::BundleEntryProto::ByteSizeLong() const
 T tensorflow::BundleEntryProto::Clear()
 T tensorflow::BundleEntryProto::CopyFrom(tensorflow::BundleEntryProto const&)
 T tensorflow::BundleEntryProto::GetMetadata() const
 T tensorflow::BundleEntryProto::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::BundleEntryProto::InternalSwap(tensorflow::BundleEntryProto*)
 T tensorflow::BundleEntryProto::IsInitialized() const
 T tensorflow::BundleEntryProto::MergeFrom(tensorflow::BundleEntryProto const&)
 T tensorflow::BundleEntryProto::SetCachedSize(int) const
 T tensorflow::BundleEntryProto::SharedCtor()
 T tensorflow::BundleEntryProto::SharedDtor()
 T tensorflow::BundleEntryProto::Swap(tensorflow::BundleEntryProto*)
 T tensorflow::BundleEntryProto::UnsafeArenaSwap(tensorflow::BundleEntryProto*)
 T tensorflow::BundleEntryProto::_slow_mutable_shape()
 T tensorflow::BundleEntryProto::_slow_release_shape()
 T tensorflow::BundleEntryProto::default_instance()
 T tensorflow::BundleEntryProto::descriptor()
 T tensorflow::BundleEntryProto::unsafe_arena_release_shape()
 T tensorflow::BundleEntryProto::unsafe_arena_set_allocated_shape(tensorflow::TensorShapeProto*)
 T tensorflow::BundleEntryProto::~BundleEntryProto()
 T tensorflow::BundleHeaderProto::ArenaDtor(void*)
 T tensorflow::BundleHeaderProto::BundleHeaderProto()
 T tensorflow::BundleHeaderProto::BundleHeaderProto(tensorflow::BundleHeaderProto const&)
 T tensorflow::BundleHeaderProto::ByteSizeLong() const
 T tensorflow::BundleHeaderProto::Clear()
 T tensorflow::BundleHeaderProto::CopyFrom(tensorflow::BundleHeaderProto const&)
 T tensorflow::BundleHeaderProto::GetMetadata() const
 T tensorflow::BundleHeaderProto::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::BundleHeaderProto::InternalSwap(tensorflow::BundleHeaderProto*)
 T tensorflow::BundleHeaderProto::IsInitialized() const
 T tensorflow::BundleHeaderProto::MergeFrom(tensorflow::BundleHeaderProto const&)
 T tensorflow::BundleHeaderProto::SetCachedSize(int) const
 T tensorflow::BundleHeaderProto::SharedCtor()
 T tensorflow::BundleHeaderProto::SharedDtor()
 T tensorflow::BundleHeaderProto::Swap(tensorflow::BundleHeaderProto*)
 T tensorflow::BundleHeaderProto::UnsafeArenaSwap(tensorflow::BundleHeaderProto*)
 T tensorflow::BundleHeaderProto::_slow_mutable_version()
 T tensorflow::BundleHeaderProto::_slow_release_version()
 T tensorflow::BundleHeaderProto::default_instance()
 T tensorflow::BundleHeaderProto::descriptor()
 T tensorflow::BundleHeaderProto::unsafe_arena_release_version()
 T tensorflow::BundleHeaderProto::unsafe_arena_set_allocated_version(tensorflow::VersionDef*)
 T tensorflow::BundleHeaderProto::~BundleHeaderProto()
 T tensorflow::BundleHeaderProto_Endianness_IsValid(int)
 T tensorflow::BundleHeaderProto_Endianness_descriptor()
 T tensorflow::BundleReader::BundleReader(tensorflow::Env*, tensorflow::StringPiece)
 T tensorflow::BundleReader::Contains(tensorflow::StringPiece)
 T tensorflow::BundleReader::DebugString[abi:cxx11]()
 T tensorflow::BundleReader::GetBundleEntryProto(tensorflow::StringPiece, tensorflow::BundleEntryProto*)
 T tensorflow::BundleReader::GetSliceValue(tensorflow::StringPiece, tensorflow::BundleEntryProto const&, tensorflow::TensorSlice const&, tensorflow::Tensor*)
 T tensorflow::BundleReader::GetValue(tensorflow::BundleEntryProto const&, tensorflow::Tensor*)
 T tensorflow::BundleReader::Lookup(tensorflow::StringPiece, tensorflow::Tensor*)
 T tensorflow::BundleReader::LookupDtypeAndShape(tensorflow::StringPiece, tensorflow::DataType*, tensorflow::TensorShape*)
 T tensorflow::BundleReader::LookupSlice(tensorflow::StringPiece, tensorflow::TensorSlice const&, tensorflow::Tensor*)
 T tensorflow::BundleReader::LookupTensorShape(tensorflow::StringPiece, tensorflow::TensorShape*)
 T tensorflow::BundleReader::LookupTensorSlices(tensorflow::StringPiece, std::vector<tensorflow::TensorSlice, std::allocator<tensorflow::TensorSlice> >*)
 T tensorflow::BundleReader::ReadCurrent(tensorflow::Tensor*)
 T tensorflow::BundleReader::~BundleReader()
 T tensorflow::BundleWriter::Add(tensorflow::StringPiece, tensorflow::Tensor const&)
 T tensorflow::BundleWriter::AddSlice(tensorflow::StringPiece, tensorflow::TensorShape const&, tensorflow::TensorSlice const&, tensorflow::Tensor const&)
 T tensorflow::BundleWriter::BundleWriter(tensorflow::Env*, tensorflow::StringPiece)
 T tensorflow::BundleWriter::Finish()
 T tensorflow::BytesList::ArenaDtor(void*)
 T tensorflow::BytesList::ByteSizeLong() const
 T tensorflow::BytesList::BytesList()
 T tensorflow::BytesList::BytesList(tensorflow::BytesList const&)
 T tensorflow::BytesList::Clear()
 T tensorflow::BytesList::CopyFrom(tensorflow::BytesList const&)
 T tensorflow::BytesList::GetMetadata() const
 T tensorflow::BytesList::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::BytesList::InternalSwap(tensorflow::BytesList*)
 T tensorflow::BytesList::IsInitialized() const
 T tensorflow::BytesList::MergeFrom(tensorflow::BytesList const&)
 T tensorflow::BytesList::SetCachedSize(int) const
 T tensorflow::BytesList::SharedCtor()
 T tensorflow::BytesList::SharedDtor()
 T tensorflow::BytesList::Swap(tensorflow::BytesList*)
 T tensorflow::BytesList::UnsafeArenaSwap(tensorflow::BytesList*)
 T tensorflow::BytesList::default_instance()
 T tensorflow::BytesList::descriptor()
 T tensorflow::BytesList::~BytesList()
 T tensorflow::CPUInfo::ArenaDtor(void*)
 T tensorflow::CPUInfo::ByteSizeLong() const
 T tensorflow::CPUInfo::CPUInfo()
 T tensorflow::CPUInfo::CPUInfo(tensorflow::CPUInfo const&)
 T tensorflow::CPUInfo::CPUInfo_CacheSizeEntry::CPUInfo_CacheSizeEntry()
 T tensorflow::CPUInfo::CPUInfo_CacheSizeEntry::GetMetadata() const
 T tensorflow::CPUInfo::CPUInfo_CacheSizeEntry::MergeFrom(tensorflow::CPUInfo::CPUInfo_CacheSizeEntry const&)
 T tensorflow::CPUInfo::Clear()
 T tensorflow::CPUInfo::CopyFrom(tensorflow::CPUInfo const&)
 T tensorflow::CPUInfo::GetMetadata() const
 T tensorflow::CPUInfo::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::CPUInfo::InternalSwap(tensorflow::CPUInfo*)
 T tensorflow::CPUInfo::IsInitialized() const
 T tensorflow::CPUInfo::MergeFrom(tensorflow::CPUInfo const&)
 T tensorflow::CPUInfo::SetCachedSize(int) const
 T tensorflow::CPUInfo::SharedCtor()
 T tensorflow::CPUInfo::SharedDtor()
 T tensorflow::CPUInfo::Swap(tensorflow::CPUInfo*)
 T tensorflow::CPUInfo::UnsafeArenaSwap(tensorflow::CPUInfo*)
 T tensorflow::CPUInfo::default_instance()
 T tensorflow::CPUInfo::descriptor()
 T tensorflow::CPUInfo::~CPUInfo()
 T tensorflow::CanUseCudnn()
 T tensorflow::CancellationManager::CancellationManager()
 T tensorflow::CancellationManager::DeregisterCallback(long long)
 T tensorflow::CancellationManager::RegisterCallback(long long, std::function<void ()>)
 T tensorflow::CancellationManager::StartCancel()
 T tensorflow::CancellationManager::get_cancellation_token()
 T tensorflow::CancellationManager::~CancellationManager()
 T tensorflow::Canonicalize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice)
 T tensorflow::CheckOpDeprecation(tensorflow::OpDef const&, int)
 T tensorflow::CheckTypesMatch(tensorflow::Feature const&, tensorflow::DataType const&, bool*)
 T tensorflow::CheckValidType(tensorflow::DataType const&)
 T tensorflow::CheckVersions(tensorflow::VersionDef const&, int, int, char const*, char const*)
 T tensorflow::ClockCycleProfiler::DumpStatistics(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::ClusterDef::ArenaDtor(void*)
 T tensorflow::ClusterDef::ByteSizeLong() const
 T tensorflow::ClusterDef::Clear()
 T tensorflow::ClusterDef::ClusterDef()
 T tensorflow::ClusterDef::ClusterDef(tensorflow::ClusterDef const&)
 T tensorflow::ClusterDef::CopyFrom(tensorflow::ClusterDef const&)
 T tensorflow::ClusterDef::GetMetadata() const
 T tensorflow::ClusterDef::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::ClusterDef::InternalSwap(tensorflow::ClusterDef*)
 T tensorflow::ClusterDef::IsInitialized() const
 T tensorflow::ClusterDef::MergeFrom(tensorflow::ClusterDef const&)
 T tensorflow::ClusterDef::SetCachedSize(int) const
 T tensorflow::ClusterDef::SharedCtor()
 T tensorflow::ClusterDef::SharedDtor()
 T tensorflow::ClusterDef::Swap(tensorflow::ClusterDef*)
 T tensorflow::ClusterDef::UnsafeArenaSwap(tensorflow::ClusterDef*)
 T tensorflow::ClusterDef::default_instance()
 T tensorflow::ClusterDef::descriptor()
 T tensorflow::ClusterDef::~ClusterDef()
 T tensorflow::CollectionDef::ArenaDtor(void*)
 T tensorflow::CollectionDef::ByteSizeLong() const
 T tensorflow::CollectionDef::Clear()
 T tensorflow::CollectionDef::CollectionDef()
 T tensorflow::CollectionDef::CollectionDef(tensorflow::CollectionDef const&)
 T tensorflow::CollectionDef::CopyFrom(tensorflow::CollectionDef const&)
 T tensorflow::CollectionDef::GetMetadata() const
 T tensorflow::CollectionDef::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::CollectionDef::InternalSwap(tensorflow::CollectionDef*)
 T tensorflow::CollectionDef::IsInitialized() const
 T tensorflow::CollectionDef::MergeFrom(tensorflow::CollectionDef const&)
 T tensorflow::CollectionDef::SetCachedSize(int) const
 T tensorflow::CollectionDef::SharedCtor()
 T tensorflow::CollectionDef::SharedDtor()
 T tensorflow::CollectionDef::Swap(tensorflow::CollectionDef*)
 T tensorflow::CollectionDef::UnsafeArenaSwap(tensorflow::CollectionDef*)
 T tensorflow::CollectionDef::clear_kind()
 T tensorflow::CollectionDef::default_instance()
 T tensorflow::CollectionDef::descriptor()
 T tensorflow::CollectionDef::~CollectionDef()
 T tensorflow::CollectionDef_AnyList::ArenaDtor(void*)
 T tensorflow::CollectionDef_AnyList::ByteSizeLong() const
 T tensorflow::CollectionDef_AnyList::Clear()
 T tensorflow::CollectionDef_AnyList::CollectionDef_AnyList()
 T tensorflow::CollectionDef_AnyList::CollectionDef_AnyList(tensorflow::CollectionDef_AnyList const&)
 T tensorflow::CollectionDef_AnyList::CopyFrom(tensorflow::CollectionDef_AnyList const&)
 T tensorflow::CollectionDef_AnyList::GetMetadata() const
 T tensorflow::CollectionDef_AnyList::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::CollectionDef_AnyList::InternalSwap(tensorflow::CollectionDef_AnyList*)
 T tensorflow::CollectionDef_AnyList::IsInitialized() const
 T tensorflow::CollectionDef_AnyList::MergeFrom(tensorflow::CollectionDef_AnyList const&)
 T tensorflow::CollectionDef_AnyList::SetCachedSize(int) const
 T tensorflow::CollectionDef_AnyList::SharedCtor()
 T tensorflow::CollectionDef_AnyList::SharedDtor()
 T tensorflow::CollectionDef_AnyList::Swap(tensorflow::CollectionDef_AnyList*)
 T tensorflow::CollectionDef_AnyList::UnsafeArenaSwap(tensorflow::CollectionDef_AnyList*)
 T tensorflow::CollectionDef_AnyList::default_instance()
 T tensorflow::CollectionDef_AnyList::descriptor()
 T tensorflow::CollectionDef_AnyList::~CollectionDef_AnyList()
 T tensorflow::CollectionDef_BytesList::ArenaDtor(void*)
 T tensorflow::CollectionDef_BytesList::ByteSizeLong() const
 T tensorflow::CollectionDef_BytesList::Clear()
 T tensorflow::CollectionDef_BytesList::CollectionDef_BytesList()
 T tensorflow::CollectionDef_BytesList::CollectionDef_BytesList(tensorflow::CollectionDef_BytesList const&)
 T tensorflow::CollectionDef_BytesList::CopyFrom(tensorflow::CollectionDef_BytesList const&)
 T tensorflow::CollectionDef_BytesList::GetMetadata() const
 T tensorflow::CollectionDef_BytesList::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::CollectionDef_BytesList::InternalSwap(tensorflow::CollectionDef_BytesList*)
 T tensorflow::CollectionDef_BytesList::IsInitialized() const
 T tensorflow::CollectionDef_BytesList::MergeFrom(tensorflow::CollectionDef_BytesList const&)
 T tensorflow::CollectionDef_BytesList::SetCachedSize(int) const
 T tensorflow::CollectionDef_BytesList::SharedCtor()
 T tensorflow::CollectionDef_BytesList::SharedDtor()
 T tensorflow::CollectionDef_BytesList::Swap(tensorflow::CollectionDef_BytesList*)
 T tensorflow::CollectionDef_BytesList::UnsafeArenaSwap(tensorflow::CollectionDef_BytesList*)
 T tensorflow::CollectionDef_BytesList::default_instance()
 T tensorflow::CollectionDef_BytesList::descriptor()
 T tensorflow::CollectionDef_BytesList::~CollectionDef_BytesList()
 T tensorflow::CollectionDef_FloatList::ArenaDtor(void*)
 T tensorflow::CollectionDef_FloatList::ByteSizeLong() const
 T tensorflow::CollectionDef_FloatList::Clear()
 T tensorflow::CollectionDef_FloatList::CollectionDef_FloatList()
 T tensorflow::CollectionDef_FloatList::CollectionDef_FloatList(tensorflow::CollectionDef_FloatList const&)
 T tensorflow::CollectionDef_FloatList::CopyFrom(tensorflow::CollectionDef_FloatList const&)
 T tensorflow::CollectionDef_FloatList::GetMetadata() const
 T tensorflow::CollectionDef_FloatList::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::CollectionDef_FloatList::InternalSwap(tensorflow::CollectionDef_FloatList*)
 T tensorflow::CollectionDef_FloatList::IsInitialized() const
 T tensorflow::CollectionDef_FloatList::MergeFrom(tensorflow::CollectionDef_FloatList const&)
 T tensorflow::CollectionDef_FloatList::SetCachedSize(int) const
 T tensorflow::CollectionDef_FloatList::SharedCtor()
 T tensorflow::CollectionDef_FloatList::SharedDtor()
 T tensorflow::CollectionDef_FloatList::Swap(tensorflow::CollectionDef_FloatList*)
 T tensorflow::CollectionDef_FloatList::UnsafeArenaSwap(tensorflow::CollectionDef_FloatList*)
 T tensorflow::CollectionDef_FloatList::default_instance()
 T tensorflow::CollectionDef_FloatList::descriptor()
 T tensorflow::CollectionDef_FloatList::~CollectionDef_FloatList()
 T tensorflow::CollectionDef_Int64List::ArenaDtor(void*)
 T tensorflow::CollectionDef_Int64List::ByteSizeLong() const
 T tensorflow::CollectionDef_Int64List::Clear()
 T tensorflow::CollectionDef_Int64List::CollectionDef_Int64List()
 T tensorflow::CollectionDef_Int64List::CollectionDef_Int64List(tensorflow::CollectionDef_Int64List const&)
 T tensorflow::CollectionDef_Int64List::CopyFrom(tensorflow::CollectionDef_Int64List const&)
 T tensorflow::CollectionDef_Int64List::GetMetadata() const
 T tensorflow::CollectionDef_Int64List::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::CollectionDef_Int64List::InternalSwap(tensorflow::CollectionDef_Int64List*)
 T tensorflow::CollectionDef_Int64List::IsInitialized() const
 T tensorflow::CollectionDef_Int64List::MergeFrom(tensorflow::CollectionDef_Int64List const&)
 T tensorflow::CollectionDef_Int64List::SetCachedSize(int) const
 T tensorflow::CollectionDef_Int64List::SharedCtor()
 T tensorflow::CollectionDef_Int64List::SharedDtor()
 T tensorflow::CollectionDef_Int64List::Swap(tensorflow::CollectionDef_Int64List*)
 T tensorflow::CollectionDef_Int64List::UnsafeArenaSwap(tensorflow::CollectionDef_Int64List*)
 T tensorflow::CollectionDef_Int64List::default_instance()
 T tensorflow::CollectionDef_Int64List::descriptor()
 T tensorflow::CollectionDef_Int64List::~CollectionDef_Int64List()
 T tensorflow::CollectionDef_NodeList::ArenaDtor(void*)
 T tensorflow::CollectionDef_NodeList::ByteSizeLong() const
 T tensorflow::CollectionDef_NodeList::Clear()
 T tensorflow::CollectionDef_NodeList::CollectionDef_NodeList()
 T tensorflow::CollectionDef_NodeList::CollectionDef_NodeList(tensorflow::CollectionDef_NodeList const&)
 T tensorflow::CollectionDef_NodeList::CopyFrom(tensorflow::CollectionDef_NodeList const&)
 T tensorflow::CollectionDef_NodeList::GetMetadata() const
 T tensorflow::CollectionDef_NodeList::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::CollectionDef_NodeList::InternalSwap(tensorflow::CollectionDef_NodeList*)
 T tensorflow::CollectionDef_NodeList::IsInitialized() const
 T tensorflow::CollectionDef_NodeList::MergeFrom(tensorflow::CollectionDef_NodeList const&)
 T tensorflow::CollectionDef_NodeList::SetCachedSize(int) const
 T tensorflow::CollectionDef_NodeList::SharedCtor()
 T tensorflow::CollectionDef_NodeList::SharedDtor()
 T tensorflow::CollectionDef_NodeList::Swap(tensorflow::CollectionDef_NodeList*)
 T tensorflow::CollectionDef_NodeList::UnsafeArenaSwap(tensorflow::CollectionDef_NodeList*)
 T tensorflow::CollectionDef_NodeList::default_instance()
 T tensorflow::CollectionDef_NodeList::descriptor()
 T tensorflow::CollectionDef_NodeList::~CollectionDef_NodeList()
 T tensorflow::ColorFor(int)
 T tensorflow::CommitId::ArenaDtor(void*)
 T tensorflow::CommitId::ByteSizeLong() const
 T tensorflow::CommitId::Clear()
 T tensorflow::CommitId::CommitId()
 T tensorflow::CommitId::CommitId(tensorflow::CommitId const&)
 T tensorflow::CommitId::CopyFrom(tensorflow::CommitId const&)
 T tensorflow::CommitId::GetMetadata() const
 T tensorflow::CommitId::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::CommitId::InternalSwap(tensorflow::CommitId*)
 T tensorflow::CommitId::IsInitialized() const
 T tensorflow::CommitId::MergeFrom(tensorflow::CommitId const&)
 T tensorflow::CommitId::SetCachedSize(int) const
 T tensorflow::CommitId::SharedCtor()
 T tensorflow::CommitId::SharedDtor()
 T tensorflow::CommitId::Swap(tensorflow::CommitId*)
 T tensorflow::CommitId::UnsafeArenaSwap(tensorflow::CommitId*)
 T tensorflow::CommitId::clear_kind()
 T tensorflow::CommitId::default_instance()
 T tensorflow::CommitId::descriptor()
 T tensorflow::CommitId::~CommitId()
 T tensorflow::ComputePool(tensorflow::SessionOptions const&)
 T tensorflow::CondContextDef::ArenaDtor(void*)
 T tensorflow::CondContextDef::ByteSizeLong() const
 T tensorflow::CondContextDef::Clear()
 T tensorflow::CondContextDef::CondContextDef()
 T tensorflow::CondContextDef::CondContextDef(tensorflow::CondContextDef const&)
 T tensorflow::CondContextDef::CopyFrom(tensorflow::CondContextDef const&)
 T tensorflow::CondContextDef::GetMetadata() const
 T tensorflow::CondContextDef::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::CondContextDef::InternalSwap(tensorflow::CondContextDef*)
 T tensorflow::CondContextDef::IsInitialized() const
 T tensorflow::CondContextDef::MergeFrom(tensorflow::CondContextDef const&)
 T tensorflow::CondContextDef::SetCachedSize(int) const
 T tensorflow::CondContextDef::SharedCtor()
 T tensorflow::CondContextDef::SharedDtor()
 T tensorflow::CondContextDef::Swap(tensorflow::CondContextDef*)
 T tensorflow::CondContextDef::UnsafeArenaSwap(tensorflow::CondContextDef*)
 T tensorflow::CondContextDef::_slow_mutable_values_def()
 T tensorflow::CondContextDef::_slow_release_values_def()
 T tensorflow::CondContextDef::default_instance()
 T tensorflow::CondContextDef::descriptor()
 T tensorflow::CondContextDef::unsafe_arena_release_values_def()
 T tensorflow::CondContextDef::unsafe_arena_set_allocated_values_def(tensorflow::ValuesDef*)
 T tensorflow::CondContextDef::~CondContextDef()
 T tensorflow::ConfigProto::ArenaDtor(void*)
 T tensorflow::ConfigProto::ByteSizeLong() const
 T tensorflow::ConfigProto::Clear()
 T tensorflow::ConfigProto::ConfigProto()
 T tensorflow::ConfigProto::ConfigProto(tensorflow::ConfigProto const&)
 T tensorflow::ConfigProto::ConfigProto_DeviceCountEntry::ConfigProto_DeviceCountEntry()
 T tensorflow::ConfigProto::ConfigProto_DeviceCountEntry::GetMetadata() const
 T tensorflow::ConfigProto::ConfigProto_DeviceCountEntry::MergeFrom(tensorflow::ConfigProto::ConfigProto_DeviceCountEntry const&)
 T tensorflow::ConfigProto::CopyFrom(tensorflow::ConfigProto const&)
 T tensorflow::ConfigProto::GetMetadata() const
 T tensorflow::ConfigProto::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::ConfigProto::InternalSwap(tensorflow::ConfigProto*)
 T tensorflow::ConfigProto::IsInitialized() const
 T tensorflow::ConfigProto::MergeFrom(tensorflow::ConfigProto const&)
 T tensorflow::ConfigProto::SetCachedSize(int) const
 T tensorflow::ConfigProto::SharedCtor()
 T tensorflow::ConfigProto::SharedDtor()
 T tensorflow::ConfigProto::Swap(tensorflow::ConfigProto*)
 T tensorflow::ConfigProto::UnsafeArenaSwap(tensorflow::ConfigProto*)
 T tensorflow::ConfigProto::_slow_mutable_cluster_def()
 T tensorflow::ConfigProto::_slow_mutable_gpu_options()
 T tensorflow::ConfigProto::_slow_mutable_graph_options()
 T tensorflow::ConfigProto::_slow_mutable_rpc_options()
 T tensorflow::ConfigProto::_slow_release_cluster_def()
 T tensorflow::ConfigProto::_slow_release_gpu_options()
 T tensorflow::ConfigProto::_slow_release_graph_options()
 T tensorflow::ConfigProto::_slow_release_rpc_options()
 T tensorflow::ConfigProto::default_instance()
 T tensorflow::ConfigProto::descriptor()
 T tensorflow::ConfigProto::unsafe_arena_release_cluster_def()
 T tensorflow::ConfigProto::unsafe_arena_release_gpu_options()
 T tensorflow::ConfigProto::unsafe_arena_release_graph_options()
 T tensorflow::ConfigProto::unsafe_arena_release_rpc_options()
 T tensorflow::ConfigProto::unsafe_arena_set_allocated_cluster_def(tensorflow::ClusterDef*)
 T tensorflow::ConfigProto::unsafe_arena_set_allocated_gpu_options(tensorflow::GPUOptions*)
 T tensorflow::ConfigProto::unsafe_arena_set_allocated_graph_options(tensorflow::GraphOptions*)
 T tensorflow::ConfigProto::unsafe_arena_set_allocated_rpc_options(tensorflow::RPCOptions*)
 T tensorflow::ConfigProto::~ConfigProto()
 T tensorflow::ConstantFold(tensorflow::ConstantFoldingOptions const&, tensorflow::FunctionLibraryRuntime*, tensorflow::Env*, tensorflow::Device*, tensorflow::Graph*, bool*)
 T tensorflow::ContainerInfo::DebugString[abi:cxx11]() const
 T tensorflow::ContainerInfo::Init(tensorflow::ResourceMgr*, tensorflow::NodeDef const&, bool)
 T tensorflow::ConvertGraphDefToGraph(tensorflow::GraphConstructorOptions const&, tensorflow::GraphDef const&, tensorflow::Graph*)
 T tensorflow::ConvertNodeDefsToGraph(tensorflow::GraphConstructorOptions const&, tensorflow::gtl::ArraySlice<tensorflow::NodeDef>, tensorflow::Graph*)
 T tensorflow::CopyGraph(tensorflow::Graph const&, tensorflow::Graph*)
 T tensorflow::CopyIntoSparseTensor(tensorflow::Tensor const&, int, long long, tensorflow::Tensor*, tensorflow::Tensor*)
 T tensorflow::CopyTensor::Register(tensorflow::DeviceType, tensorflow::DeviceType, void (*)(tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>))
 T tensorflow::CopyTensor::ViaDMA(tensorflow::StringPiece, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)
 T tensorflow::CostGraphDef::ArenaDtor(void*)
 T tensorflow::CostGraphDef::ByteSizeLong() const
 T tensorflow::CostGraphDef::Clear()
 T tensorflow::CostGraphDef::CopyFrom(tensorflow::CostGraphDef const&)
 T tensorflow::CostGraphDef::CostGraphDef()
 T tensorflow::CostGraphDef::CostGraphDef(tensorflow::CostGraphDef const&)
 T tensorflow::CostGraphDef::GetMetadata() const
 T tensorflow::CostGraphDef::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::CostGraphDef::InternalSwap(tensorflow::CostGraphDef*)
 T tensorflow::CostGraphDef::IsInitialized() const
 T tensorflow::CostGraphDef::MergeFrom(tensorflow::CostGraphDef const&)
 T tensorflow::CostGraphDef::SetCachedSize(int) const
 T tensorflow::CostGraphDef::SharedCtor()
 T tensorflow::CostGraphDef::SharedDtor()
 T tensorflow::CostGraphDef::Swap(tensorflow::CostGraphDef*)
 T tensorflow::CostGraphDef::UnsafeArenaSwap(tensorflow::CostGraphDef*)
 T tensorflow::CostGraphDef::default_instance()
 T tensorflow::CostGraphDef::descriptor()
 T tensorflow::CostGraphDef::~CostGraphDef()
 T tensorflow::CostGraphDef_Node::ArenaDtor(void*)
 T tensorflow::CostGraphDef_Node::ByteSizeLong() const
 T tensorflow::CostGraphDef_Node::Clear()
 T tensorflow::CostGraphDef_Node::CopyFrom(tensorflow::CostGraphDef_Node const&)
 T tensorflow::CostGraphDef_Node::CostGraphDef_Node()
 T tensorflow::CostGraphDef_Node::CostGraphDef_Node(tensorflow::CostGraphDef_Node const&)
 T tensorflow::CostGraphDef_Node::GetMetadata() const
 T tensorflow::CostGraphDef_Node::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::CostGraphDef_Node::InternalSwap(tensorflow::CostGraphDef_Node*)
 T tensorflow::CostGraphDef_Node::IsInitialized() const
 T tensorflow::CostGraphDef_Node::MergeFrom(tensorflow::CostGraphDef_Node const&)
 T tensorflow::CostGraphDef_Node::SetCachedSize(int) const
 T tensorflow::CostGraphDef_Node::SharedCtor()
 T tensorflow::CostGraphDef_Node::SharedDtor()
 T tensorflow::CostGraphDef_Node::Swap(tensorflow::CostGraphDef_Node*)
 T tensorflow::CostGraphDef_Node::UnsafeArenaSwap(tensorflow::CostGraphDef_Node*)
 T tensorflow::CostGraphDef_Node::default_instance()
 T tensorflow::CostGraphDef_Node::descriptor()
 T tensorflow::CostGraphDef_Node::~CostGraphDef_Node()
 T tensorflow::CostGraphDef_Node_InputInfo::ArenaDtor(void*)
 T tensorflow::CostGraphDef_Node_InputInfo::ByteSizeLong() const
 T tensorflow::CostGraphDef_Node_InputInfo::Clear()
 T tensorflow::CostGraphDef_Node_InputInfo::CopyFrom(tensorflow::CostGraphDef_Node_InputInfo const&)
 T tensorflow::CostGraphDef_Node_InputInfo::CostGraphDef_Node_InputInfo()
 T tensorflow::CostGraphDef_Node_InputInfo::CostGraphDef_Node_InputInfo(tensorflow::CostGraphDef_Node_InputInfo const&)
 T tensorflow::CostGraphDef_Node_InputInfo::GetMetadata() const
 T tensorflow::CostGraphDef_Node_InputInfo::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::CostGraphDef_Node_InputInfo::InternalSwap(tensorflow::CostGraphDef_Node_InputInfo*)
 T tensorflow::CostGraphDef_Node_InputInfo::IsInitialized() const
 T tensorflow::CostGraphDef_Node_InputInfo::MergeFrom(tensorflow::CostGraphDef_Node_InputInfo const&)
 T tensorflow::CostGraphDef_Node_InputInfo::SetCachedSize(int) const
 T tensorflow::CostGraphDef_Node_InputInfo::SharedCtor()
 T tensorflow::CostGraphDef_Node_InputInfo::SharedDtor()
 T tensorflow::CostGraphDef_Node_InputInfo::Swap(tensorflow::CostGraphDef_Node_InputInfo*)
 T tensorflow::CostGraphDef_Node_InputInfo::UnsafeArenaSwap(tensorflow::CostGraphDef_Node_InputInfo*)
 T tensorflow::CostGraphDef_Node_InputInfo::default_instance()
 T tensorflow::CostGraphDef_Node_InputInfo::descriptor()
 T tensorflow::CostGraphDef_Node_InputInfo::~CostGraphDef_Node_InputInfo()
 T tensorflow::CostGraphDef_Node_OutputInfo::ArenaDtor(void*)
 T tensorflow::CostGraphDef_Node_OutputInfo::ByteSizeLong() const
 T tensorflow::CostGraphDef_Node_OutputInfo::Clear()
 T tensorflow::CostGraphDef_Node_OutputInfo::CopyFrom(tensorflow::CostGraphDef_Node_OutputInfo const&)
 T tensorflow::CostGraphDef_Node_OutputInfo::CostGraphDef_Node_OutputInfo()
 T tensorflow::CostGraphDef_Node_OutputInfo::CostGraphDef_Node_OutputInfo(tensorflow::CostGraphDef_Node_OutputInfo const&)
 T tensorflow::CostGraphDef_Node_OutputInfo::GetMetadata() const
 T tensorflow::CostGraphDef_Node_OutputInfo::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::CostGraphDef_Node_OutputInfo::InternalSwap(tensorflow::CostGraphDef_Node_OutputInfo*)
 T tensorflow::CostGraphDef_Node_OutputInfo::IsInitialized() const
 T tensorflow::CostGraphDef_Node_OutputInfo::MergeFrom(tensorflow::CostGraphDef_Node_OutputInfo const&)
 T tensorflow::CostGraphDef_Node_OutputInfo::SetCachedSize(int) const
 T tensorflow::CostGraphDef_Node_OutputInfo::SharedCtor()
 T tensorflow::CostGraphDef_Node_OutputInfo::SharedDtor()
 T tensorflow::CostGraphDef_Node_OutputInfo::Swap(tensorflow::CostGraphDef_Node_OutputInfo*)
 T tensorflow::CostGraphDef_Node_OutputInfo::UnsafeArenaSwap(tensorflow::CostGraphDef_Node_OutputInfo*)
 T tensorflow::CostGraphDef_Node_OutputInfo::_slow_mutable_shape()
 T tensorflow::CostGraphDef_Node_OutputInfo::_slow_release_shape()
 T tensorflow::CostGraphDef_Node_OutputInfo::default_instance()
 T tensorflow::CostGraphDef_Node_OutputInfo::descriptor()
 T tensorflow::CostGraphDef_Node_OutputInfo::unsafe_arena_release_shape()
 T tensorflow::CostGraphDef_Node_OutputInfo::unsafe_arena_set_allocated_shape(tensorflow::TensorShapeProto*)
 T tensorflow::CostGraphDef_Node_OutputInfo::~CostGraphDef_Node_OutputInfo()
 T tensorflow::CostModel::AddToCostGraphDef(tensorflow::Graph const*, tensorflow::CostGraphDef*) const
 T tensorflow::CostModel::AllocationId(tensorflow::Node const*, int) const
 T tensorflow::CostModel::CheckInitialized(tensorflow::Graph const&) const
 T tensorflow::CostModel::ComputationTimeEstimate(long long)
 T tensorflow::CostModel::CopyTimeEstimate(tensorflow::gtl::IntType<tensorflow::Bytes_tag_, long long>, double, double)
 T tensorflow::CostModel::DevicePersistentMemorySize(tensorflow::Node const*) const
 T tensorflow::CostModel::DeviceTempMemorySize(tensorflow::Node const*) const
 T tensorflow::CostModel::Ensure(int)
 T tensorflow::CostModel::GetUpdateTimes() const
 T tensorflow::CostModel::HostPersistentMemorySize(tensorflow::Node const*) const
 T tensorflow::CostModel::HostTempMemorySize(tensorflow::Node const*) const
 T tensorflow::CostModel::IncrementUpdateTimes()
 T tensorflow::CostModel::InitFromGraph(tensorflow::Graph const&)
 T tensorflow::CostModel::IsPersistentTensor(tensorflow::Node const*, long long) const
 T tensorflow::CostModel::MaxExecutionTime(tensorflow::Node const*) const
 T tensorflow::CostModel::MaxMemoryShape(tensorflow::Node const*, int) const
 T tensorflow::CostModel::MaxMemorySize(tensorflow::Node const*, int) const
 T tensorflow::CostModel::MaxMemoryType(tensorflow::Node const*, int) const
 T tensorflow::CostModel::MergeFromGlobal(tensorflow::CostModel const&)
 T tensorflow::CostModel::MergeFromLocal(tensorflow::Graph const&, tensorflow::CostModel const&)
 T tensorflow::CostModel::MergeFromStats(std::unordered_map<tensorflow::StringPiece, int, tensorflow::StringPieceHasher, std::equal_to<tensorflow::StringPiece>, std::allocator<std::pair<tensorflow::StringPiece const, int> > > const&, tensorflow::StepStats const&)
 T tensorflow::CostModel::MinTensorMemoryUsage(tensorflow::TensorShapeProto const&, tensorflow::DataType const&)
 T tensorflow::CostModel::RecordAllocationId(tensorflow::Node const*, int, long long)
 T tensorflow::CostModel::RecordCount(tensorflow::Node const*, int)
 T tensorflow::CostModel::RecordMaxExecutionTime(tensorflow::Node const*, tensorflow::gtl::IntType<tensorflow::Microseconds_tag_, long long>)
 T tensorflow::CostModel::RecordMaxMemorySize(tensorflow::Node const*, int, tensorflow::gtl::IntType<tensorflow::Bytes_tag_, long long>, tensorflow::TensorShapeProto const&, tensorflow::DataType const&)
 T tensorflow::CostModel::RecordMemoryStats(tensorflow::Node const*, tensorflow::MemoryStats const&)
 T tensorflow::CostModel::RecordSize(tensorflow::Node const*, int, tensorflow::gtl::IntType<tensorflow::Bytes_tag_, long long>)
 T tensorflow::CostModel::RecordTime(tensorflow::Node const*, tensorflow::gtl::IntType<tensorflow::Microseconds_tag_, long long>)
 T tensorflow::CostModel::SetNumOutputs(tensorflow::Node const*, int)
 T tensorflow::CostModel::SizeEstimate(tensorflow::Node const*, int) const
 T tensorflow::CostModel::SuppressInfrequent()
 T tensorflow::CostModel::TempMemorySize(tensorflow::Node const*) const
 T tensorflow::CostModel::TimeEstimate(tensorflow::Node const*) const
 T tensorflow::CostModel::TotalBytes(tensorflow::Node const*, int) const
 T tensorflow::CostModel::TotalCount(tensorflow::Node const*) const
 T tensorflow::CostModel::TotalTime(tensorflow::Node const*) const
 T tensorflow::CostModel::WriteSummaryToLog() const
 T tensorflow::CostModelManager::AddToCostGraphDef(tensorflow::Graph const*, tensorflow::CostGraphDef*)
 T tensorflow::CostModelManager::FindOrCreateCostModel(tensorflow::Graph const*)
 T tensorflow::CostModelManager::RemoveCostModelForGraph(tensorflow::Graph const*)
 T tensorflow::CostModelManager::~CostModelManager()
 T tensorflow::CreateNoOpStatsPublisher(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::BuildGraphOptions const&, tensorflow::SessionOptions const&)
 T tensorflow::CreateNonCachedKernel(tensorflow::Device*, tensorflow::FunctionLibraryRuntime*, tensorflow::NodeDef const&, int, tensorflow::OpKernel**)
 T tensorflow::CreateOpKernel(tensorflow::DeviceType, tensorflow::DeviceBase*, tensorflow::Allocator*, tensorflow::FunctionLibraryRuntime*, tensorflow::NodeDef const&, int, tensorflow::OpKernel**)
 T tensorflow::CreateOpKernel(tensorflow::DeviceType, tensorflow::DeviceBase*, tensorflow::Allocator*, tensorflow::NodeDef const&, int, tensorflow::Status*)
 T tensorflow::CudaSupportsHalfMatMulAndConv()
 T tensorflow::CudnnConvComputeMode()
 T tensorflow::CudnnDisableConv1x1Optimization()
 T tensorflow::CudnnUseAutotune()
 T tensorflow::DFS(tensorflow::Graph const&, std::function<void (tensorflow::Node*)> const&, std::function<void (tensorflow::Node*)> const&, std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> const&)
 T tensorflow::DataFilename[abi:cxx11](tensorflow::StringPiece, int, int)
 T tensorflow::DataTypeAlwaysOnHost(tensorflow::DataType)
 T tensorflow::DataTypeCanUseMemcpy(tensorflow::DataType)
 T tensorflow::DataTypeFromString(tensorflow::StringPiece, tensorflow::DataType*)
 T tensorflow::DataTypeIsComplex(tensorflow::DataType)
 T tensorflow::DataTypeIsFloating(tensorflow::DataType)
 T tensorflow::DataTypeIsInteger(tensorflow::DataType)
 T tensorflow::DataTypeIsQuantized(tensorflow::DataType)
 T tensorflow::DataTypeIsUnsigned(tensorflow::DataType)
 T tensorflow::DataTypeSize(tensorflow::DataType)
 T tensorflow::DataTypeSliceString[abi:cxx11](tensorflow::gtl::ArraySlice<tensorflow::DataType>)
 T tensorflow::DataTypeString[abi:cxx11](tensorflow::DataType)
 T tensorflow::DataType_IsValid(int)
 T tensorflow::DataType_descriptor()
 T tensorflow::DebugGraphDecoratorRegistry::CreateDecorator(tensorflow::DebugOptions const&, std::unique_ptr<tensorflow::DebugGraphDecoratorInterface, std::default_delete<tensorflow::DebugGraphDecoratorInterface> >*)
 T tensorflow::DebugGraphDecoratorRegistry::RegisterFactory(std::function<std::unique_ptr<tensorflow::DebugGraphDecoratorInterface, std::default_delete<tensorflow::DebugGraphDecoratorInterface> > (tensorflow::DebugOptions const&)> const&)
 T tensorflow::DebugOptions::ArenaDtor(void*)
 T tensorflow::DebugOptions::ByteSizeLong() const
 T tensorflow::DebugOptions::Clear()
 T tensorflow::DebugOptions::CopyFrom(tensorflow::DebugOptions const&)
 T tensorflow::DebugOptions::DebugOptions()
 T tensorflow::DebugOptions::DebugOptions(tensorflow::DebugOptions const&)
 T tensorflow::DebugOptions::GetMetadata() const
 T tensorflow::DebugOptions::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::DebugOptions::InternalSwap(tensorflow::DebugOptions*)
 T tensorflow::DebugOptions::IsInitialized() const
 T tensorflow::DebugOptions::MergeFrom(tensorflow::DebugOptions const&)
 T tensorflow::DebugOptions::SetCachedSize(int) const
 T tensorflow::DebugOptions::SharedCtor()
 T tensorflow::DebugOptions::SharedDtor()
 T tensorflow::DebugOptions::Swap(tensorflow::DebugOptions*)
 T tensorflow::DebugOptions::UnsafeArenaSwap(tensorflow::DebugOptions*)
 T tensorflow::DebugOptions::default_instance()
 T tensorflow::DebugOptions::descriptor()
 T tensorflow::DebugOptions::~DebugOptions()
 T tensorflow::DebugStringWhole[abi:cxx11](tensorflow::GraphDef const&)
 T tensorflow::DebugString[abi:cxx11](tensorflow::FunctionDef const&)
 T tensorflow::DebugString[abi:cxx11](tensorflow::Graph const*)
 T tensorflow::DebugString[abi:cxx11](tensorflow::GraphDef const&)
 T tensorflow::DebugString[abi:cxx11](tensorflow::gtl::ArraySlice<tensorflow::NodeDef>)
 T tensorflow::DebugTensorWatch::ArenaDtor(void*)
 T tensorflow::DebugTensorWatch::ByteSizeLong() const
 T tensorflow::DebugTensorWatch::Clear()
 T tensorflow::DebugTensorWatch::CopyFrom(tensorflow::DebugTensorWatch const&)
 T tensorflow::DebugTensorWatch::DebugTensorWatch()
 T tensorflow::DebugTensorWatch::DebugTensorWatch(tensorflow::DebugTensorWatch const&)
 T tensorflow::DebugTensorWatch::GetMetadata() const
 T tensorflow::DebugTensorWatch::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::DebugTensorWatch::InternalSwap(tensorflow::DebugTensorWatch*)
 T tensorflow::DebugTensorWatch::IsInitialized() const
 T tensorflow::DebugTensorWatch::MergeFrom(tensorflow::DebugTensorWatch const&)
 T tensorflow::DebugTensorWatch::SetCachedSize(int) const
 T tensorflow::DebugTensorWatch::SharedCtor()
 T tensorflow::DebugTensorWatch::SharedDtor()
 T tensorflow::DebugTensorWatch::Swap(tensorflow::DebugTensorWatch*)
 T tensorflow::DebugTensorWatch::UnsafeArenaSwap(tensorflow::DebugTensorWatch*)
 T tensorflow::DebugTensorWatch::default_instance()
 T tensorflow::DebugTensorWatch::descriptor()
 T tensorflow::DebugTensorWatch::~DebugTensorWatch()
 T tensorflow::DebuggedSourceFile::ArenaDtor(void*)
 T tensorflow::DebuggedSourceFile::ByteSizeLong() const
 T tensorflow::DebuggedSourceFile::Clear()
 T tensorflow::DebuggedSourceFile::CopyFrom(tensorflow::DebuggedSourceFile const&)
 T tensorflow::DebuggedSourceFile::DebuggedSourceFile()
 T tensorflow::DebuggedSourceFile::DebuggedSourceFile(tensorflow::DebuggedSourceFile const&)
 T tensorflow::DebuggedSourceFile::GetMetadata() const
 T tensorflow::DebuggedSourceFile::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::DebuggedSourceFile::InternalSwap(tensorflow::DebuggedSourceFile*)
 T tensorflow::DebuggedSourceFile::IsInitialized() const
 T tensorflow::DebuggedSourceFile::MergeFrom(tensorflow::DebuggedSourceFile const&)
 T tensorflow::DebuggedSourceFile::SetCachedSize(int) const
 T tensorflow::DebuggedSourceFile::SharedCtor()
 T tensorflow::DebuggedSourceFile::SharedDtor()
 T tensorflow::DebuggedSourceFile::Swap(tensorflow::DebuggedSourceFile*)
 T tensorflow::DebuggedSourceFile::UnsafeArenaSwap(tensorflow::DebuggedSourceFile*)
 T tensorflow::DebuggedSourceFile::default_instance()
 T tensorflow::DebuggedSourceFile::descriptor()
 T tensorflow::DebuggedSourceFile::~DebuggedSourceFile()
 T tensorflow::DebuggedSourceFiles::ArenaDtor(void*)
 T tensorflow::DebuggedSourceFiles::ByteSizeLong() const
 T tensorflow::DebuggedSourceFiles::Clear()
 T tensorflow::DebuggedSourceFiles::CopyFrom(tensorflow::DebuggedSourceFiles const&)
 T tensorflow::DebuggedSourceFiles::DebuggedSourceFiles()
 T tensorflow::DebuggedSourceFiles::DebuggedSourceFiles(tensorflow::DebuggedSourceFiles const&)
 T tensorflow::DebuggedSourceFiles::GetMetadata() const
 T tensorflow::DebuggedSourceFiles::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::DebuggedSourceFiles::InternalSwap(tensorflow::DebuggedSourceFiles*)
 T tensorflow::DebuggedSourceFiles::IsInitialized() const
 T tensorflow::DebuggedSourceFiles::MergeFrom(tensorflow::DebuggedSourceFiles const&)
 T tensorflow::DebuggedSourceFiles::SetCachedSize(int) const
 T tensorflow::DebuggedSourceFiles::SharedCtor()
 T tensorflow::DebuggedSourceFiles::SharedDtor()
 T tensorflow::DebuggedSourceFiles::Swap(tensorflow::DebuggedSourceFiles*)
 T tensorflow::DebuggedSourceFiles::UnsafeArenaSwap(tensorflow::DebuggedSourceFiles*)
 T tensorflow::DebuggedSourceFiles::default_instance()
 T tensorflow::DebuggedSourceFiles::descriptor()
 T tensorflow::DebuggedSourceFiles::~DebuggedSourceFiles()
 T tensorflow::DebuggerStateRegistry::CreateState(tensorflow::DebugOptions const&, std::unique_ptr<tensorflow::DebuggerStateInterface, std::default_delete<tensorflow::DebuggerStateInterface> >*)
 T tensorflow::DebuggerStateRegistry::RegisterFactory(std::function<std::unique_ptr<tensorflow::DebuggerStateInterface, std::default_delete<tensorflow::DebuggerStateInterface> > (tensorflow::DebugOptions const&)> const&)
 T tensorflow::DecodeUnaryVariant(tensorflow::Variant*)
 T tensorflow::DeleteNonCachedKernel(tensorflow::OpKernel*)
 T tensorflow::DeleteResource(tensorflow::OpKernelContext*, tensorflow::ResourceHandle const&)
 T tensorflow::Device::BuildDeviceAttributes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::DeviceType, tensorflow::gtl::IntType<tensorflow::Bytes_tag_, long long>, tensorflow::DeviceLocality const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::Device::Device(tensorflow::Env*, tensorflow::DeviceAttributes const&)
 T tensorflow::Device::~Device()
 T tensorflow::DeviceAttributes::ArenaDtor(void*)
 T tensorflow::DeviceAttributes::ByteSizeLong() const
 T tensorflow::DeviceAttributes::Clear()
 T tensorflow::DeviceAttributes::CopyFrom(tensorflow::DeviceAttributes const&)
 T tensorflow::DeviceAttributes::DeviceAttributes()
 T tensorflow::DeviceAttributes::DeviceAttributes(tensorflow::DeviceAttributes const&)
 T tensorflow::DeviceAttributes::GetMetadata() const
 T tensorflow::DeviceAttributes::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::DeviceAttributes::InternalSwap(tensorflow::DeviceAttributes*)
 T tensorflow::DeviceAttributes::IsInitialized() const
 T tensorflow::DeviceAttributes::MergeFrom(tensorflow::DeviceAttributes const&)
 T tensorflow::DeviceAttributes::SetCachedSize(int) const
 T tensorflow::DeviceAttributes::SharedCtor()
 T tensorflow::DeviceAttributes::SharedDtor()
 T tensorflow::DeviceAttributes::Swap(tensorflow::DeviceAttributes*)
 T tensorflow::DeviceAttributes::UnsafeArenaSwap(tensorflow::DeviceAttributes*)
 T tensorflow::DeviceAttributes::_slow_mutable_locality()
 T tensorflow::DeviceAttributes::_slow_release_locality()
 T tensorflow::DeviceAttributes::default_instance()
 T tensorflow::DeviceAttributes::descriptor()
 T tensorflow::DeviceAttributes::unsafe_arena_release_locality()
 T tensorflow::DeviceAttributes::unsafe_arena_set_allocated_locality(tensorflow::DeviceLocality*)
 T tensorflow::DeviceAttributes::~DeviceAttributes()
 T tensorflow::DeviceBase::attributes() const
 T tensorflow::DeviceBase::name[abi:cxx11]() const
 T tensorflow::DeviceBase::~DeviceBase()
 T tensorflow::DeviceFactory::AddDevices(tensorflow::SessionOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> >*)
 T tensorflow::DeviceFactory::DevicePriority(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::DeviceFactory::GetFactory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::DeviceFactory::NewDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::SessionOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::DeviceFactory::Register(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::DeviceFactory*, int)
 T tensorflow::DeviceLocality::ArenaDtor(void*)
 T tensorflow::DeviceLocality::ByteSizeLong() const
 T tensorflow::DeviceLocality::Clear()
 T tensorflow::DeviceLocality::CopyFrom(tensorflow::DeviceLocality const&)
 T tensorflow::DeviceLocality::DeviceLocality()
 T tensorflow::DeviceLocality::DeviceLocality(tensorflow::DeviceLocality const&)
 T tensorflow::DeviceLocality::GetMetadata() const
 T tensorflow::DeviceLocality::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::DeviceLocality::InternalSwap(tensorflow::DeviceLocality*)
 T tensorflow::DeviceLocality::IsInitialized() const
 T tensorflow::DeviceLocality::MergeFrom(tensorflow::DeviceLocality const&)
 T tensorflow::DeviceLocality::SetCachedSize(int) const
 T tensorflow::DeviceLocality::SharedCtor()
 T tensorflow::DeviceLocality::SharedDtor()
 T tensorflow::DeviceLocality::Swap(tensorflow::DeviceLocality*)
 T tensorflow::DeviceLocality::UnsafeArenaSwap(tensorflow::DeviceLocality*)
 T tensorflow::DeviceLocality::default_instance()
 T tensorflow::DeviceLocality::descriptor()
 T tensorflow::DeviceLocality::~DeviceLocality()
 T tensorflow::DeviceMgr::ClearContainers(tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) const
 T tensorflow::DeviceMgr::CopyToBackingStore(tensorflow::StringPiece)
 T tensorflow::DeviceMgr::DebugString[abi:cxx11]() const
 T tensorflow::DeviceMgr::DeviceMappingString[abi:cxx11]() const
 T tensorflow::DeviceMgr::DeviceMgr(std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> > const&)
 T tensorflow::DeviceMgr::ListDeviceAttributes(std::vector<tensorflow::DeviceAttributes, std::allocator<tensorflow::DeviceAttributes> >*) const
 T tensorflow::DeviceMgr::ListDevices() const
 T tensorflow::DeviceMgr::LookupDevice(tensorflow::StringPiece, tensorflow::Device**) const
 T tensorflow::DeviceMgr::NumDeviceType(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
 T tensorflow::DeviceMgr::~DeviceMgr()
 T tensorflow::DeviceNameUtils::CanonicalizeDeviceName[abi:cxx11](tensorflow::StringPiece)
 T tensorflow::DeviceNameUtils::FullName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
 T tensorflow::DeviceNameUtils::GetLocalNamesForDeviceMappings[abi:cxx11](tensorflow::DeviceNameUtils::ParsedName const&)
 T tensorflow::DeviceNameUtils::GetNamesForDeviceMappings[abi:cxx11](tensorflow::DeviceNameUtils::ParsedName const&)
 T tensorflow::DeviceNameUtils::IsCompleteSpecification(tensorflow::DeviceNameUtils::ParsedName const&, tensorflow::DeviceNameUtils::ParsedName const&)
 T tensorflow::DeviceNameUtils::IsSameAddressSpace(tensorflow::DeviceNameUtils::ParsedName const&, tensorflow::DeviceNameUtils::ParsedName const&)
 T tensorflow::DeviceNameUtils::IsSameAddressSpace(tensorflow::StringPiece, tensorflow::StringPiece)
 T tensorflow::DeviceNameUtils::IsSpecification(tensorflow::DeviceNameUtils::ParsedName const&, tensorflow::DeviceNameUtils::ParsedName const&)
 T tensorflow::DeviceNameUtils::LocalName[abi:cxx11](tensorflow::StringPiece)
 T tensorflow::DeviceNameUtils::LocalName[abi:cxx11](tensorflow::StringPiece, int)
 T tensorflow::DeviceNameUtils::MergeDevNames(tensorflow::DeviceNameUtils::ParsedName*, tensorflow::DeviceNameUtils::ParsedName const&, bool)
 T tensorflow::DeviceNameUtils::ParseFullName(tensorflow::StringPiece, tensorflow::DeviceNameUtils::ParsedName*)
 T tensorflow::DeviceNameUtils::ParseLocalName(tensorflow::StringPiece, tensorflow::DeviceNameUtils::ParsedName*)
 T tensorflow::DeviceNameUtils::ParsedNameToString[abi:cxx11](tensorflow::DeviceNameUtils::ParsedName const&)
 T tensorflow::DeviceNameUtils::SplitDeviceName(tensorflow::StringPiece, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::DeviceProperties::ArenaDtor(void*)
 T tensorflow::DeviceProperties::ByteSizeLong() const
 T tensorflow::DeviceProperties::Clear()
 T tensorflow::DeviceProperties::CopyFrom(tensorflow::DeviceProperties const&)
 T tensorflow::DeviceProperties::DeviceProperties()
 T tensorflow::DeviceProperties::DeviceProperties(tensorflow::DeviceProperties const&)
 T tensorflow::DeviceProperties::DeviceProperties_EnvironmentEntry::DeviceProperties_EnvironmentEntry()
 T tensorflow::DeviceProperties::DeviceProperties_EnvironmentEntry::GetMetadata() const
 T tensorflow::DeviceProperties::DeviceProperties_EnvironmentEntry::MergeFrom(tensorflow::DeviceProperties::DeviceProperties_EnvironmentEntry const&)
 T tensorflow::DeviceProperties::GetMetadata() const
 T tensorflow::DeviceProperties::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::DeviceProperties::InternalSwap(tensorflow::DeviceProperties*)
 T tensorflow::DeviceProperties::IsInitialized() const
 T tensorflow::DeviceProperties::MergeFrom(tensorflow::DeviceProperties const&)
 T tensorflow::DeviceProperties::SetCachedSize(int) const
 T tensorflow::DeviceProperties::SharedCtor()
 T tensorflow::DeviceProperties::SharedDtor()
 T tensorflow::DeviceProperties::Swap(tensorflow::DeviceProperties*)
 T tensorflow::DeviceProperties::UnsafeArenaSwap(tensorflow::DeviceProperties*)
 T tensorflow::DeviceProperties::default_instance()
 T tensorflow::DeviceProperties::descriptor()
 T tensorflow::DeviceProperties::~DeviceProperties()
 T tensorflow::DeviceSet::AddDevice(tensorflow::Device*)
 T tensorflow::DeviceSet::DeviceSet()
 T tensorflow::DeviceSet::DeviceTypeOrder(tensorflow::DeviceType const&)
 T tensorflow::DeviceSet::FindDeviceByName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
 T tensorflow::DeviceSet::FindMatchingDevices(tensorflow::DeviceNameUtils::ParsedName const&, std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> >*) const
 T tensorflow::DeviceSet::PrioritizedDeviceTypeList() const
 T tensorflow::DeviceSet::~DeviceSet()
 T tensorflow::DeviceStepStats::ArenaDtor(void*)
 T tensorflow::DeviceStepStats::ByteSizeLong() const
 T tensorflow::DeviceStepStats::Clear()
 T tensorflow::DeviceStepStats::CopyFrom(tensorflow::DeviceStepStats const&)
 T tensorflow::DeviceStepStats::DeviceStepStats()
 T tensorflow::DeviceStepStats::DeviceStepStats(tensorflow::DeviceStepStats const&)
 T tensorflow::DeviceStepStats::GetMetadata() const
 T tensorflow::DeviceStepStats::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::DeviceStepStats::InternalSwap(tensorflow::DeviceStepStats*)
 T tensorflow::DeviceStepStats::IsInitialized() const
 T tensorflow::DeviceStepStats::MergeFrom(tensorflow::DeviceStepStats const&)
 T tensorflow::DeviceStepStats::SetCachedSize(int) const
 T tensorflow::DeviceStepStats::SharedCtor()
 T tensorflow::DeviceStepStats::SharedDtor()
 T tensorflow::DeviceStepStats::Swap(tensorflow::DeviceStepStats*)
 T tensorflow::DeviceStepStats::UnsafeArenaSwap(tensorflow::DeviceStepStats*)
 T tensorflow::DeviceStepStats::default_instance()
 T tensorflow::DeviceStepStats::descriptor()
 T tensorflow::DeviceStepStats::~DeviceStepStats()
 T tensorflow::DeviceType::operator<(tensorflow::DeviceType const&) const
 T tensorflow::DeviceType::operator==(tensorflow::DeviceType const&) const
 T tensorflow::DeviceTypeString[abi:cxx11](tensorflow::DeviceType const&)
 T tensorflow::DoQuantizeTraining(int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph*)
 T tensorflow::DoQuantizeTrainingOnGraphDef(tensorflow::GraphDef const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef*)
 T tensorflow::DoQuantizeTrainingOnSerializedGraphDef(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::DumpGraph(tensorflow::StringPiece, tensorflow::Graph const*)
 T tensorflow::Edge::DebugString[abi:cxx11]() const
 T tensorflow::EdgeSet::erase(tensorflow::Edge const*)
 T tensorflow::EdgeSet::insert(tensorflow::Edge const*)
 T tensorflow::EnableCPUAllocatorFullStats(bool)
 T tensorflow::EnableCPUAllocatorStats(bool)
 T tensorflow::EnsureMemoryTypes(tensorflow::DeviceType const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph*)
 T tensorflow::EntryValue::ArenaDtor(void*)
 T tensorflow::EntryValue::ByteSizeLong() const
 T tensorflow::EntryValue::Clear()
 T tensorflow::EntryValue::CopyFrom(tensorflow::EntryValue const&)
 T tensorflow::EntryValue::EntryValue()
 T tensorflow::EntryValue::EntryValue(tensorflow::EntryValue const&)
 T tensorflow::EntryValue::GetMetadata() const
 T tensorflow::EntryValue::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::EntryValue::InternalSwap(tensorflow::EntryValue*)
 T tensorflow::EntryValue::IsInitialized() const
 T tensorflow::EntryValue::MergeFrom(tensorflow::EntryValue const&)
 T tensorflow::EntryValue::SetCachedSize(int) const
 T tensorflow::EntryValue::SharedCtor()
 T tensorflow::EntryValue::SharedDtor()
 T tensorflow::EntryValue::Swap(tensorflow::EntryValue*)
 T tensorflow::EntryValue::UnsafeArenaSwap(tensorflow::EntryValue*)
 T tensorflow::EntryValue::clear_kind()
 T tensorflow::EntryValue::default_instance()
 T tensorflow::EntryValue::descriptor()
 T tensorflow::EntryValue::~EntryValue()
 T tensorflow::EnumName_ApiDef_Visibility(tensorflow::ApiDef_Visibility)
 T tensorflow::EnumName_BundleHeaderProto_Endianness(tensorflow::BundleHeaderProto_Endianness)
 T tensorflow::EnumName_DataType(tensorflow::DataType)
 T tensorflow::EnumName_GraphTransferInfo_Destination(tensorflow::GraphTransferInfo_Destination)
 T tensorflow::EnumName_OptimizerOptions_GlobalJitLevel(tensorflow::OptimizerOptions_GlobalJitLevel)
 T tensorflow::EnumName_OptimizerOptions_Level(tensorflow::OptimizerOptions_Level)
 T tensorflow::EnumName_RemoteFusedGraphExecuteInfo_NodeType(tensorflow::RemoteFusedGraphExecuteInfo_NodeType)
 T tensorflow::EnumName_RewriterConfig_MemOptType(tensorflow::RewriterConfig_MemOptType)
 T tensorflow::EnumName_RewriterConfig_Toggle(tensorflow::RewriterConfig_Toggle)
 T tensorflow::EnumName_RunOptions_TraceLevel(tensorflow::RunOptions_TraceLevel)
 T tensorflow::EnumName_SaverDef_CheckpointFormatVersion(tensorflow::SaverDef_CheckpointFormatVersion)
 T tensorflow::Env::CreateDir(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::Env::Default()
 T tensorflow::Env::DeleteDir(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::Env::DeleteFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::Env::DeleteRecursively(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long long*, long long*)
 T tensorflow::Env::Env()
 T tensorflow::Env::FileExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::Env::FilesExist(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Status, std::allocator<tensorflow::Status> >*)
 T tensorflow::Env::GetChildren(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)
 T tensorflow::Env::GetExecutablePath[abi:cxx11]()
 T tensorflow::Env::GetFileSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long long*)
 T tensorflow::Env::GetFileSystemForFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::FileSystem**)
 T tensorflow::Env::GetLocalTempDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)
 T tensorflow::Env::GetMatchingPaths(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)
 T tensorflow::Env::GetRegisteredFileSystemSchemes(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)
 T tensorflow::Env::IsDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::Env::LocalTempFilename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::Env::NewAppendableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<tensorflow::WritableFile, std::default_delete<tensorflow::WritableFile> >*)
 T tensorflow::Env::NewRandomAccessFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<tensorflow::RandomAccessFile, std::default_delete<tensorflow::RandomAccessFile> >*)
 T tensorflow::Env::NewReadOnlyMemoryRegionFromFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<tensorflow::ReadOnlyMemoryRegion, std::default_delete<tensorflow::ReadOnlyMemoryRegion> >*)
 T tensorflow::Env::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<tensorflow::WritableFile, std::default_delete<tensorflow::WritableFile> >*)
 T tensorflow::Env::RecursivelyCreateDir(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::Env::RegisterFileSystem(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::FileSystem* ()>)
 T tensorflow::Env::RenameFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::Env::Stat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::FileStatistics*)
 T tensorflow::EnvTime::Default()
 T tensorflow::EnvTime::EnvTime()
 T tensorflow::EnvWrapper::~EnvWrapper()
 T tensorflow::EqualGraphDef(tensorflow::GraphDef const&, tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, tensorflow::EqualGraphDefOptions const&)
 T tensorflow::EqualNodeDef(tensorflow::NodeDef const&, tensorflow::NodeDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, tensorflow::EqualGraphDefOptions const&)
 T tensorflow::ErrnoToCode(int)
 T tensorflow::Event::ArenaDtor(void*)
 T tensorflow::Event::ByteSizeLong() const
 T tensorflow::Event::Clear()
 T tensorflow::Event::CopyFrom(tensorflow::Event const&)
 T tensorflow::Event::Event()
 T tensorflow::Event::Event(tensorflow::Event const&)
 T tensorflow::Event::GetMetadata() const
 T tensorflow::Event::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::Event::InternalSwap(tensorflow::Event*)
 T tensorflow::Event::IsInitialized() const
 T tensorflow::Event::MergeFrom(tensorflow::Event const&)
 T tensorflow::Event::SetCachedSize(int) const
 T tensorflow::Event::SharedCtor()
 T tensorflow::Event::SharedDtor()
 T tensorflow::Event::Swap(tensorflow::Event*)
 T tensorflow::Event::UnsafeArenaSwap(tensorflow::Event*)
 T tensorflow::Event::clear_what()
 T tensorflow::Event::default_instance()
 T tensorflow::Event::descriptor()
 T tensorflow::Event::~Event()
 T tensorflow::EventMgr::EventMgr(perftools::gputools::StreamExecutor*, tensorflow::GPUOptions const&)
 T tensorflow::EventMgr::FlushAccumulatedTensors()
 T tensorflow::EventMgr::PollEvents(bool, tensorflow::gtl::InlinedVector<tensorflow::EventMgr::InUse, 4>*)
 T tensorflow::EventMgr::PollLoop()
 T tensorflow::EventMgr::QueueInUse(perftools::gputools::Stream*, tensorflow::EventMgr::InUse)
 T tensorflow::EventMgr::StartPollingLoop()
 T tensorflow::EventMgr::StopPollingLoop()
 T tensorflow::EventMgr::ThenDeleteTensors(perftools::gputools::Stream*, tensorflow::gtl::InlinedVector<tensorflow::TensorReference, 4> const&)
 T tensorflow::EventMgr::~EventMgr()
 T tensorflow::EventsWriter::Close()
 T tensorflow::EventsWriter::EventsWriter(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::EventsWriter::FileHasDisappeared()
 T tensorflow::EventsWriter::FileName[abi:cxx11]()
 T tensorflow::EventsWriter::Flush()
 T tensorflow::EventsWriter::InitIfNeeded()
 T tensorflow::EventsWriter::WriteEvent(tensorflow::Event const&)
 T tensorflow::EventsWriter::WriteSerializedEvent(tensorflow::StringPiece)
 T tensorflow::Example::ArenaDtor(void*)
 T tensorflow::Example::ByteSizeLong() const
 T tensorflow::Example::Clear()
 T tensorflow::Example::CopyFrom(tensorflow::Example const&)
 T tensorflow::Example::Example()
 T tensorflow::Example::Example(tensorflow::Example const&)
 T tensorflow::Example::GetMetadata() const
 T tensorflow::Example::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::Example::InternalSwap(tensorflow::Example*)
 T tensorflow::Example::IsInitialized() const
 T tensorflow::Example::MergeFrom(tensorflow::Example const&)
 T tensorflow::Example::SetCachedSize(int) const
 T tensorflow::Example::SharedCtor()
 T tensorflow::Example::SharedDtor()
 T tensorflow::Example::Swap(tensorflow::Example*)
 T tensorflow::Example::UnsafeArenaSwap(tensorflow::Example*)
 T tensorflow::Example::_slow_mutable_features()
 T tensorflow::Example::_slow_release_features()
 T tensorflow::Example::default_instance()
 T tensorflow::Example::descriptor()
 T tensorflow::Example::unsafe_arena_release_features()
 T tensorflow::Example::unsafe_arena_set_allocated_features(tensorflow::Features*)
 T tensorflow::Example::~Example()
 T tensorflow::ExampleParserConfiguration::ArenaDtor(void*)
 T tensorflow::ExampleParserConfiguration::ByteSizeLong() const
 T tensorflow::ExampleParserConfiguration::Clear()
 T tensorflow::ExampleParserConfiguration::CopyFrom(tensorflow::ExampleParserConfiguration const&)
 T tensorflow::ExampleParserConfiguration::ExampleParserConfiguration()
 T tensorflow::ExampleParserConfiguration::ExampleParserConfiguration(tensorflow::ExampleParserConfiguration const&)
 T tensorflow::ExampleParserConfiguration::ExampleParserConfiguration_FeatureMapEntry::ExampleParserConfiguration_FeatureMapEntry()
 T tensorflow::ExampleParserConfiguration::ExampleParserConfiguration_FeatureMapEntry::GetMetadata() const
 T tensorflow::ExampleParserConfiguration::ExampleParserConfiguration_FeatureMapEntry::MergeFrom(tensorflow::ExampleParserConfiguration::ExampleParserConfiguration_FeatureMapEntry const&)
 T tensorflow::ExampleParserConfiguration::GetMetadata() const
 T tensorflow::ExampleParserConfiguration::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::ExampleParserConfiguration::InternalSwap(tensorflow::ExampleParserConfiguration*)
 T tensorflow::ExampleParserConfiguration::IsInitialized() const
 T tensorflow::ExampleParserConfiguration::MergeFrom(tensorflow::ExampleParserConfiguration const&)
 T tensorflow::ExampleParserConfiguration::SetCachedSize(int) const
 T tensorflow::ExampleParserConfiguration::SharedCtor()
 T tensorflow::ExampleParserConfiguration::SharedDtor()
 T tensorflow::ExampleParserConfiguration::Swap(tensorflow::ExampleParserConfiguration*)
 T tensorflow::ExampleParserConfiguration::UnsafeArenaSwap(tensorflow::ExampleParserConfiguration*)
 T tensorflow::ExampleParserConfiguration::default_instance()
 T tensorflow::ExampleParserConfiguration::descriptor()
 T tensorflow::ExampleParserConfiguration::~ExampleParserConfiguration()
 T tensorflow::ExpandInlineFunctions(tensorflow::FunctionLibraryRuntime*, tensorflow::Graph*)
 T tensorflow::Feature::ArenaDtor(void*)
 T tensorflow::Feature::ByteSizeLong() const
 T tensorflow::Feature::Clear()
 T tensorflow::Feature::CopyFrom(tensorflow::Feature const&)
 T tensorflow::Feature::Feature()
 T tensorflow::Feature::Feature(tensorflow::Feature const&)
 T tensorflow::Feature::GetMetadata() const
 T tensorflow::Feature::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::Feature::InternalSwap(tensorflow::Feature*)
 T tensorflow::Feature::IsInitialized() const
 T tensorflow::Feature::MergeFrom(tensorflow::Feature const&)
 T tensorflow::Feature::SetCachedSize(int) const
 T tensorflow::Feature::SharedCtor()
 T tensorflow::Feature::SharedDtor()
 T tensorflow::Feature::Swap(tensorflow::Feature*)
 T tensorflow::Feature::UnsafeArenaSwap(tensorflow::Feature*)
 T tensorflow::Feature::clear_kind()
 T tensorflow::Feature::default_instance()
 T tensorflow::Feature::descriptor()
 T tensorflow::Feature::~Feature()
 T tensorflow::FeatureConfiguration::ArenaDtor(void*)
 T tensorflow::FeatureConfiguration::ByteSizeLong() const
 T tensorflow::FeatureConfiguration::Clear()
 T tensorflow::FeatureConfiguration::CopyFrom(tensorflow::FeatureConfiguration const&)
 T tensorflow::FeatureConfiguration::FeatureConfiguration()
 T tensorflow::FeatureConfiguration::FeatureConfiguration(tensorflow::FeatureConfiguration const&)
 T tensorflow::FeatureConfiguration::GetMetadata() const
 T tensorflow::FeatureConfiguration::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::FeatureConfiguration::InternalSwap(tensorflow::FeatureConfiguration*)
 T tensorflow::FeatureConfiguration::IsInitialized() const
 T tensorflow::FeatureConfiguration::MergeFrom(tensorflow::FeatureConfiguration const&)
 T tensorflow::FeatureConfiguration::SetCachedSize(int) const
 T tensorflow::FeatureConfiguration::SharedCtor()
 T tensorflow::FeatureConfiguration::SharedDtor()
 T tensorflow::FeatureConfiguration::Swap(tensorflow::FeatureConfiguration*)
 T tensorflow::FeatureConfiguration::UnsafeArenaSwap(tensorflow::FeatureConfiguration*)
 T tensorflow::FeatureConfiguration::clear_config()
 T tensorflow::FeatureConfiguration::default_instance()
 T tensorflow::FeatureConfiguration::descriptor()
 T tensorflow::FeatureConfiguration::~FeatureConfiguration()
 T tensorflow::FeatureDenseCopy(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::DataType const&, tensorflow::TensorShape const&, tensorflow::Feature const&, tensorflow::Tensor*)
 T tensorflow::FeatureList::ArenaDtor(void*)
 T tensorflow::FeatureList::ByteSizeLong() const
 T tensorflow::FeatureList::Clear()
 T tensorflow::FeatureList::CopyFrom(tensorflow::FeatureList const&)
 T tensorflow::FeatureList::FeatureList()
 T tensorflow::FeatureList::FeatureList(tensorflow::FeatureList const&)
 T tensorflow::FeatureList::GetMetadata() const
 T tensorflow::FeatureList::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::FeatureList::InternalSwap(tensorflow::FeatureList*)
 T tensorflow::FeatureList::IsInitialized() const
 T tensorflow::FeatureList::MergeFrom(tensorflow::FeatureList const&)
 T tensorflow::FeatureList::SetCachedSize(int) const
 T tensorflow::FeatureList::SharedCtor()
 T tensorflow::FeatureList::SharedDtor()
 T tensorflow::FeatureList::Swap(tensorflow::FeatureList*)
 T tensorflow::FeatureList::UnsafeArenaSwap(tensorflow::FeatureList*)
 T tensorflow::FeatureList::default_instance()
 T tensorflow::FeatureList::descriptor()
 T tensorflow::FeatureList::~FeatureList()
 T tensorflow::FeatureLists::ArenaDtor(void*)
 T tensorflow::FeatureLists::ByteSizeLong() const
 T tensorflow::FeatureLists::Clear()
 T tensorflow::FeatureLists::CopyFrom(tensorflow::FeatureLists const&)
 T tensorflow::FeatureLists::FeatureLists()
 T tensorflow::FeatureLists::FeatureLists(tensorflow::FeatureLists const&)
 T tensorflow::FeatureLists::FeatureLists_FeatureListEntry::FeatureLists_FeatureListEntry()
 T tensorflow::FeatureLists::FeatureLists_FeatureListEntry::GetMetadata() const
 T tensorflow::FeatureLists::FeatureLists_FeatureListEntry::MergeFrom(tensorflow::FeatureLists::FeatureLists_FeatureListEntry const&)
 T tensorflow::FeatureLists::GetMetadata() const
 T tensorflow::FeatureLists::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::FeatureLists::InternalSwap(tensorflow::FeatureLists*)
 T tensorflow::FeatureLists::IsInitialized() const
 T tensorflow::FeatureLists::MergeFrom(tensorflow::FeatureLists const&)
 T tensorflow::FeatureLists::SetCachedSize(int) const
 T tensorflow::FeatureLists::SharedCtor()
 T tensorflow::FeatureLists::SharedDtor()
 T tensorflow::FeatureLists::Swap(tensorflow::FeatureLists*)
 T tensorflow::FeatureLists::UnsafeArenaSwap(tensorflow::FeatureLists*)
 T tensorflow::FeatureLists::default_instance()
 T tensorflow::FeatureLists::descriptor()
 T tensorflow::FeatureLists::~FeatureLists()
 T tensorflow::FeatureSparseCopy(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::DataType const&, tensorflow::Feature const&)
 T tensorflow::Features const& tensorflow::GetFeatures<tensorflow::Example>(tensorflow::Example const&)
 T tensorflow::Features const& tensorflow::GetFeatures<tensorflow::Features>(tensorflow::Features const&)
 T tensorflow::Features* tensorflow::GetFeatures<tensorflow::Example>(tensorflow::Example*)
 T tensorflow::Features* tensorflow::GetFeatures<tensorflow::Features>(tensorflow::Features*)
 T tensorflow::Features::ArenaDtor(void*)
 T tensorflow::Features::ByteSizeLong() const
 T tensorflow::Features::Clear()
 T tensorflow::Features::CopyFrom(tensorflow::Features const&)
 T tensorflow::Features::Features()
 T tensorflow::Features::Features(tensorflow::Features const&)
 T tensorflow::Features::Features_FeatureEntry::Features_FeatureEntry()
 T tensorflow::Features::Features_FeatureEntry::GetMetadata() const
 T tensorflow::Features::Features_FeatureEntry::MergeFrom(tensorflow::Features::Features_FeatureEntry const&)
 T tensorflow::Features::GetMetadata() const
 T tensorflow::Features::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::Features::InternalSwap(tensorflow::Features*)
 T tensorflow::Features::IsInitialized() const
 T tensorflow::Features::MergeFrom(tensorflow::Features const&)
 T tensorflow::Features::SetCachedSize(int) const
 T tensorflow::Features::SharedCtor()
 T tensorflow::Features::SharedDtor()
 T tensorflow::Features::Swap(tensorflow::Features*)
 T tensorflow::Features::UnsafeArenaSwap(tensorflow::Features*)
 T tensorflow::Features::default_instance()
 T tensorflow::Features::descriptor()
 T tensorflow::Features::~Features()
 T tensorflow::FileOutputBuffer::Append(tensorflow::StringPiece)
 T tensorflow::FileOutputBuffer::Close()
 T tensorflow::FileOutputBuffer::FlushBuffer()
 T tensorflow::FileOutputBuffer::~FileOutputBuffer()
 T tensorflow::FileSystem::DeleteRecursively(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long long*, long long*)
 T tensorflow::FileSystem::FilesExist(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Status, std::allocator<tensorflow::Status> >*)
 T tensorflow::FileSystem::GetMatchingPaths(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)
 T tensorflow::FileSystem::IsDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::FileSystem::RecursivelyCreateDir(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::FileSystem::TranslateName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
 T tensorflow::FileSystem::~FileSystem()
 T tensorflow::FileSystemRegistry::~FileSystemRegistry()
 T tensorflow::FileSystemRegistryImpl::GetRegisteredFileSystemSchemes(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)
 T tensorflow::FileSystemRegistryImpl::Lookup(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::FileSystemRegistryImpl::Register(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::FileSystem* ()>)
 T tensorflow::FilterFormatFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::FilterTensorFormat*)
 T tensorflow::FindAttr(tensorflow::StringPiece, tensorflow::OpDef const&)
 T tensorflow::FindAttrMutable(tensorflow::StringPiece, tensorflow::OpDef*)
 T tensorflow::FindInputArg(tensorflow::StringPiece, tensorflow::OpDef const&)
 T tensorflow::FindKernelDef(tensorflow::DeviceType const&, tensorflow::NodeDef const&, tensorflow::KernelDef const**, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::FixedLenFeatureProto::ArenaDtor(void*)
 T tensorflow::FixedLenFeatureProto::ByteSizeLong() const
 T tensorflow::FixedLenFeatureProto::Clear()
 T tensorflow::FixedLenFeatureProto::CopyFrom(tensorflow::FixedLenFeatureProto const&)
 T tensorflow::FixedLenFeatureProto::FixedLenFeatureProto()
 T tensorflow::FixedLenFeatureProto::FixedLenFeatureProto(tensorflow::FixedLenFeatureProto const&)
 T tensorflow::FixedLenFeatureProto::GetMetadata() const
 T tensorflow::FixedLenFeatureProto::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::FixedLenFeatureProto::InternalSwap(tensorflow::FixedLenFeatureProto*)
 T tensorflow::FixedLenFeatureProto::IsInitialized() const
 T tensorflow::FixedLenFeatureProto::MergeFrom(tensorflow::FixedLenFeatureProto const&)
 T tensorflow::FixedLenFeatureProto::SetCachedSize(int) const
 T tensorflow::FixedLenFeatureProto::SharedCtor()
 T tensorflow::FixedLenFeatureProto::SharedDtor()
 T tensorflow::FixedLenFeatureProto::Swap(tensorflow::FixedLenFeatureProto*)
 T tensorflow::FixedLenFeatureProto::UnsafeArenaSwap(tensorflow::FixedLenFeatureProto*)
 T tensorflow::FixedLenFeatureProto::_slow_mutable_default_value()
 T tensorflow::FixedLenFeatureProto::_slow_mutable_shape()
 T tensorflow::FixedLenFeatureProto::_slow_release_default_value()
 T tensorflow::FixedLenFeatureProto::_slow_release_shape()
 T tensorflow::FixedLenFeatureProto::default_instance()
 T tensorflow::FixedLenFeatureProto::descriptor()
 T tensorflow::FixedLenFeatureProto::unsafe_arena_release_default_value()
 T tensorflow::FixedLenFeatureProto::unsafe_arena_release_shape()
 T tensorflow::FixedLenFeatureProto::unsafe_arena_set_allocated_default_value(tensorflow::TensorProto*)
 T tensorflow::FixedLenFeatureProto::unsafe_arena_set_allocated_shape(tensorflow::TensorShapeProto*)
 T tensorflow::FixedLenFeatureProto::~FixedLenFeatureProto()
 T tensorflow::FixupSourceAndSinkEdges(tensorflow::Graph*)
 T tensorflow::Flag::Flag(char const*, bool*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::Flag::Flag(char const*, float*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::Flag::Flag(char const*, int*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::Flag::Flag(char const*, long long*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::Flag::Flag(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::Flag::Flag(char const*, std::function<bool (bool)>, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::Flag::Flag(char const*, std::function<bool (float)>, float, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::Flag::Flag(char const*, std::function<bool (int)>, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::Flag::Flag(char const*, std::function<bool (long long)>, long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::Flag::Flag(char const*, std::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::Flag::Parse(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool*) const
 T tensorflow::Flags::Parse(int*, char**, std::vector<tensorflow::Flag, std::allocator<tensorflow::Flag> > const&)
 T tensorflow::Flags::Usage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<tensorflow::Flag, std::allocator<tensorflow::Flag> > const&)
 T tensorflow::FloatList::ArenaDtor(void*)
 T tensorflow::FloatList::ByteSizeLong() const
 T tensorflow::FloatList::Clear()
 T tensorflow::FloatList::CopyFrom(tensorflow::FloatList const&)
 T tensorflow::FloatList::FloatList()
 T tensorflow::FloatList::FloatList(tensorflow::FloatList const&)
 T tensorflow::FloatList::GetMetadata() const
 T tensorflow::FloatList::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::FloatList::InternalSwap(tensorflow::FloatList*)
 T tensorflow::FloatList::IsInitialized() const
 T tensorflow::FloatList::MergeFrom(tensorflow::FloatList const&)
 T tensorflow::FloatList::SetCachedSize(int) const
 T tensorflow::FloatList::SharedCtor()
 T tensorflow::FloatList::SharedDtor()
 T tensorflow::FloatList::Swap(tensorflow::FloatList*)
 T tensorflow::FloatList::UnsafeArenaSwap(tensorflow::FloatList*)
 T tensorflow::FloatList::default_instance()
 T tensorflow::FloatList::descriptor()
 T tensorflow::FloatList::~FloatList()
 T tensorflow::FloatToBFloat16(float const*, tensorflow::bfloat16*, long long)
 T tensorflow::FormatFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::TensorFormat*)
 T tensorflow::FunctionBody::FunctionBody(tensorflow::FunctionDef const&, tensorflow::gtl::ArraySlice<tensorflow::DataType>, tensorflow::gtl::ArraySlice<tensorflow::DataType>, tensorflow::Graph*)
 T tensorflow::FunctionBody::~FunctionBody()
 T tensorflow::FunctionCallFrame::ConsumeRetvals(std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*)
 T tensorflow::FunctionCallFrame::FunctionCallFrame(tensorflow::gtl::ArraySlice<tensorflow::DataType>, tensorflow::gtl::ArraySlice<tensorflow::DataType>)
 T tensorflow::FunctionCallFrame::GetArg(int, tensorflow::Tensor*) const
 T tensorflow::FunctionCallFrame::GetRetvals(std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*) const
 T tensorflow::FunctionCallFrame::SetArgs(tensorflow::gtl::ArraySlice<tensorflow::Tensor>)
 T tensorflow::FunctionCallFrame::SetRetval(int, tensorflow::Tensor const&)
 T tensorflow::FunctionCallFrame::~FunctionCallFrame()
 T tensorflow::FunctionDef::ArenaDtor(void*)
 T tensorflow::FunctionDef::ByteSizeLong() const
 T tensorflow::FunctionDef::Clear()
 T tensorflow::FunctionDef::CopyFrom(tensorflow::FunctionDef const&)
 T tensorflow::FunctionDef::FunctionDef()
 T tensorflow::FunctionDef::FunctionDef(tensorflow::FunctionDef const&)
 T tensorflow::FunctionDef::FunctionDef_AttrEntry::FunctionDef_AttrEntry()
 T tensorflow::FunctionDef::FunctionDef_AttrEntry::GetMetadata() const
 T tensorflow::FunctionDef::FunctionDef_AttrEntry::MergeFrom(tensorflow::FunctionDef::FunctionDef_AttrEntry const&)
 T tensorflow::FunctionDef::FunctionDef_RetEntry::FunctionDef_RetEntry()
 T tensorflow::FunctionDef::FunctionDef_RetEntry::GetMetadata() const
 T tensorflow::FunctionDef::FunctionDef_RetEntry::MergeFrom(tensorflow::FunctionDef::FunctionDef_RetEntry const&)
 T tensorflow::FunctionDef::GetMetadata() const
 T tensorflow::FunctionDef::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::FunctionDef::InternalSwap(tensorflow::FunctionDef*)
 T tensorflow::FunctionDef::IsInitialized() const
 T tensorflow::FunctionDef::MergeFrom(tensorflow::FunctionDef const&)
 T tensorflow::FunctionDef::SetCachedSize(int) const
 T tensorflow::FunctionDef::SharedCtor()
 T tensorflow::FunctionDef::SharedDtor()
 T tensorflow::FunctionDef::Swap(tensorflow::FunctionDef*)
 T tensorflow::FunctionDef::UnsafeArenaSwap(tensorflow::FunctionDef*)
 T tensorflow::FunctionDef::_slow_mutable_signature()
 T tensorflow::FunctionDef::_slow_release_signature()
 T tensorflow::FunctionDef::default_instance()
 T tensorflow::FunctionDef::descriptor()
 T tensorflow::FunctionDef::unsafe_arena_release_signature()
 T tensorflow::FunctionDef::unsafe_arena_set_allocated_signature(tensorflow::OpDef*)
 T tensorflow::FunctionDef::~FunctionDef()
 T tensorflow::FunctionDefHash(tensorflow::FunctionDef const&)
 T tensorflow::FunctionDefHelper::AttrValueWrapper::InitFromString(tensorflow::StringPiece)
 T tensorflow::FunctionDefHelper::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::gtl::ArraySlice<tensorflow::FunctionDefHelper::Node>, tensorflow::gtl::ArraySlice<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >)
 T tensorflow::FunctionDefHelper::Define(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::gtl::ArraySlice<tensorflow::FunctionDefHelper::Node>)
 T tensorflow::FunctionDefHelper::Define(tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::gtl::ArraySlice<tensorflow::FunctionDefHelper::Node>)
 T tensorflow::FunctionDefHelper::FunctionRef(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::gtl::ArraySlice<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::FunctionDefHelper::AttrValueWrapper> >)
 T tensorflow::FunctionDefHelper::Node::ToNodeDef() const
 T tensorflow::FunctionDefLibrary::ArenaDtor(void*)
 T tensorflow::FunctionDefLibrary::ByteSizeLong() const
 T tensorflow::FunctionDefLibrary::Clear()
 T tensorflow::FunctionDefLibrary::CopyFrom(tensorflow::FunctionDefLibrary const&)
 T tensorflow::FunctionDefLibrary::FunctionDefLibrary()
 T tensorflow::FunctionDefLibrary::FunctionDefLibrary(tensorflow::FunctionDefLibrary const&)
 T tensorflow::FunctionDefLibrary::GetMetadata() const
 T tensorflow::FunctionDefLibrary::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::FunctionDefLibrary::InternalSwap(tensorflow::FunctionDefLibrary*)
 T tensorflow::FunctionDefLibrary::IsInitialized() const
 T tensorflow::FunctionDefLibrary::MergeFrom(tensorflow::FunctionDefLibrary const&)
 T tensorflow::FunctionDefLibrary::SetCachedSize(int) const
 T tensorflow::FunctionDefLibrary::SharedCtor()
 T tensorflow::FunctionDefLibrary::SharedDtor()
 T tensorflow::FunctionDefLibrary::Swap(tensorflow::FunctionDefLibrary*)
 T tensorflow::FunctionDefLibrary::UnsafeArenaSwap(tensorflow::FunctionDefLibrary*)
 T tensorflow::FunctionDefLibrary::default_instance()
 T tensorflow::FunctionDefLibrary::descriptor()
 T tensorflow::FunctionDefLibrary::~FunctionDefLibrary()
 T tensorflow::FunctionDefToBodyHelper(tensorflow::FunctionDef const&, tensorflow::AttrSlice const&, tensorflow::FunctionLibraryDefinition const*, std::function<tensorflow::Status (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef const**)> const&, tensorflow::FunctionBody**)
 T tensorflow::FunctionDefsEqual(tensorflow::FunctionDef const&, tensorflow::FunctionDef const&)
 T tensorflow::FunctionLibraryDefinition::AddFunctionDef(tensorflow::FunctionDef const&)
 T tensorflow::FunctionLibraryDefinition::AddFunctionDefHelper(tensorflow::FunctionDef const&, bool*)
 T tensorflow::FunctionLibraryDefinition::AddGradientDef(tensorflow::GradientDef const&)
 T tensorflow::FunctionLibraryDefinition::AddGradientDefHelper(tensorflow::GradientDef const&, bool*)
 T tensorflow::FunctionLibraryDefinition::AddLibrary(tensorflow::FunctionDefLibrary const&)
 T tensorflow::FunctionLibraryDefinition::AddLibrary(tensorflow::FunctionLibraryDefinition const&)
 T tensorflow::FunctionLibraryDefinition::Find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
 T tensorflow::FunctionLibraryDefinition::FindGradient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
 T tensorflow::FunctionLibraryDefinition::FunctionDefAndOpRegistration::FunctionDefAndOpRegistration(tensorflow::FunctionDef const&)
 T tensorflow::FunctionLibraryDefinition::FunctionLibraryDefinition(tensorflow::FunctionLibraryDefinition const&)
 T tensorflow::FunctionLibraryDefinition::FunctionLibraryDefinition(tensorflow::OpRegistryInterface const*, tensorflow::FunctionDefLibrary const&)
 T tensorflow::FunctionLibraryDefinition::GetAttrImpl(tensorflow::NodeDef const&) const
 T tensorflow::FunctionLibraryDefinition::LookUp(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpRegistrationData const**) const
 T tensorflow::FunctionLibraryDefinition::Remove(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
 T tensorflow::FunctionLibraryDefinition::RemoveFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::FunctionLibraryDefinition::RemoveGradient(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::FunctionLibraryDefinition::ToProto() const
 T tensorflow::FunctionLibraryDefinition::~FunctionLibraryDefinition()
 T tensorflow::FunctionLibraryRuntimeImpl::CreateItem(unsigned long long, tensorflow::FunctionLibraryRuntimeImpl::Item**)
 T tensorflow::FunctionLibraryRuntimeImpl::CreateKernel(tensorflow::NodeDef const&, tensorflow::OpKernel**)
 T tensorflow::FunctionLibraryRuntimeImpl::DebugString[abi:cxx11](unsigned long long)
 T tensorflow::FunctionLibraryRuntimeImpl::FixAttrs[abi:cxx11](tensorflow::AttrSlice const&)
 T tensorflow::FunctionLibraryRuntimeImpl::FunctionDefToBody(tensorflow::FunctionDef const&, tensorflow::AttrSlice, tensorflow::FunctionBody**)
 T tensorflow::FunctionLibraryRuntimeImpl::FunctionLibraryRuntimeImpl(tensorflow::DeviceMgr const*, tensorflow::Env*, tensorflow::Device*, int, tensorflow::FunctionLibraryDefinition const*, tensorflow::OptimizerOptions const&, std::function<tensorflow::Status (tensorflow::FunctionLibraryRuntime*, tensorflow::NodeDef const&, std::unique_ptr<tensorflow::OpKernel, std::default_delete<tensorflow::OpKernel> >*)>, tensorflow::ProcessFunctionLibraryRuntime*)
 T tensorflow::FunctionLibraryRuntimeImpl::GetFunctionBody(unsigned long long)
 T tensorflow::FunctionLibraryRuntimeImpl::GetOrCreateItem(unsigned long long, tensorflow::FunctionLibraryRuntimeImpl::Item**)
 T tensorflow::FunctionLibraryRuntimeImpl::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, unsigned long long*)
 T tensorflow::FunctionLibraryRuntimeImpl::InstantiateSymbolicGradient(tensorflow::NameAttrList const&, tensorflow::FunctionBody**)
 T tensorflow::FunctionLibraryRuntimeImpl::IsLocalTarget(tensorflow::AttrSlice const&)
 T tensorflow::FunctionLibraryRuntimeImpl::IsStateful(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::FunctionLibraryRuntimeImpl::ReleaseHandle(unsigned long long)
 T tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::CallFrameInterface*, std::function<void (tensorflow::Status const&)>)
 T tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::gtl::ArraySlice<tensorflow::Tensor>, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::function<void (tensorflow::Status const&)>)
 T tensorflow::FunctionLibraryRuntimeImpl::RunRemote(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::gtl::ArraySlice<tensorflow::Tensor>, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, tensorflow::Executor::Args*, tensorflow::FunctionLibraryRuntimeImpl::Item*, std::function<void (tensorflow::Status const&)>)
 T tensorflow::FunctionLibraryRuntimeImpl::~FunctionLibraryRuntimeImpl()
 T tensorflow::GPUBFCAllocator::GPUBFCAllocator(int, unsigned long)
 T tensorflow::GPUBFCAllocator::GPUBFCAllocator(int, unsigned long, tensorflow::GPUOptions const&)
 T tensorflow::GPUDebugAllocator::AddAllocVisitor(std::function<void (void*, unsigned long)>)
 T tensorflow::GPUDebugAllocator::AddFreeVisitor(std::function<void (void*, unsigned long)>)
 T tensorflow::GPUDebugAllocator::AllocateRaw(unsigned long, unsigned long)
 T tensorflow::GPUDebugAllocator::AllocatedSize(void*)
 T tensorflow::GPUDebugAllocator::AllocationId(void*)
 T tensorflow::GPUDebugAllocator::CheckFooter(void*)
 T tensorflow::GPUDebugAllocator::CheckHeader(void*)
 T tensorflow::GPUDebugAllocator::DeallocateRaw(void*)
 T tensorflow::GPUDebugAllocator::GPUDebugAllocator(tensorflow::VisitableAllocator*, int)
 T tensorflow::GPUDebugAllocator::GetStats(tensorflow::AllocatorStats*)
 T tensorflow::GPUDebugAllocator::RequestedSize(void*)
 T tensorflow::GPUDebugAllocator::TracksAllocationSizes()
 T tensorflow::GPUDebugAllocator::~GPUDebugAllocator()
 T tensorflow::GPUDeviceContext::CopyCPUTensorToDevice(tensorflow::Tensor const*, tensorflow::Device*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>) const
 T tensorflow::GPUDeviceContext::CopyDeviceTensorToCPU(tensorflow::Tensor const*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)
 T tensorflow::GPUInfo::ArenaDtor(void*)
 T tensorflow::GPUInfo::ByteSizeLong() const
 T tensorflow::GPUInfo::Clear()
 T tensorflow::GPUInfo::CopyFrom(tensorflow::GPUInfo const&)
 T tensorflow::GPUInfo::GPUInfo()
 T tensorflow::GPUInfo::GPUInfo(tensorflow::GPUInfo const&)
 T tensorflow::GPUInfo::GetMetadata() const
 T tensorflow::GPUInfo::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::GPUInfo::InternalSwap(tensorflow::GPUInfo*)
 T tensorflow::GPUInfo::IsInitialized() const
 T tensorflow::GPUInfo::MergeFrom(tensorflow::GPUInfo const&)
 T tensorflow::GPUInfo::SetCachedSize(int) const
 T tensorflow::GPUInfo::SharedCtor()
 T tensorflow::GPUInfo::SharedDtor()
 T tensorflow::GPUInfo::Swap(tensorflow::GPUInfo*)
 T tensorflow::GPUInfo::UnsafeArenaSwap(tensorflow::GPUInfo*)
 T tensorflow::GPUInfo::default_instance()
 T tensorflow::GPUInfo::descriptor()
 T tensorflow::GPUInfo::~GPUInfo()
 T tensorflow::GPUMachineManager()
 T tensorflow::GPUNanResetAllocator::AddAllocVisitor(std::function<void (void*, unsigned long)>)
 T tensorflow::GPUNanResetAllocator::AddFreeVisitor(std::function<void (void*, unsigned long)>)
 T tensorflow::GPUNanResetAllocator::AllocateRaw(unsigned long, unsigned long)
 T tensorflow::GPUNanResetAllocator::AllocatedSize(void*)
 T tensorflow::GPUNanResetAllocator::DeallocateRaw(void*)
 T tensorflow::GPUNanResetAllocator::GPUNanResetAllocator(tensorflow::VisitableAllocator*, int)
 T tensorflow::GPUNanResetAllocator::GetStats(tensorflow::AllocatorStats*)
 T tensorflow::GPUNanResetAllocator::RequestedSize(void*)
 T tensorflow::GPUNanResetAllocator::~GPUNanResetAllocator()
 T tensorflow::GPUOptions::ArenaDtor(void*)
 T tensorflow::GPUOptions::ByteSizeLong() const
 T tensorflow::GPUOptions::Clear()
 T tensorflow::GPUOptions::CopyFrom(tensorflow::GPUOptions const&)
 T tensorflow::GPUOptions::GPUOptions()
 T tensorflow::GPUOptions::GPUOptions(tensorflow::GPUOptions const&)
 T tensorflow::GPUOptions::GetMetadata() const
 T tensorflow::GPUOptions::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::GPUOptions::InternalSwap(tensorflow::GPUOptions*)
 T tensorflow::GPUOptions::IsInitialized() const
 T tensorflow::GPUOptions::MergeFrom(tensorflow::GPUOptions const&)
 T tensorflow::GPUOptions::SetCachedSize(int) const
 T tensorflow::GPUOptions::SharedCtor()
 T tensorflow::GPUOptions::SharedDtor()
 T tensorflow::GPUOptions::Swap(tensorflow::GPUOptions*)
 T tensorflow::GPUOptions::UnsafeArenaSwap(tensorflow::GPUOptions*)
 T tensorflow::GPUOptions::default_instance()
 T tensorflow::GPUOptions::descriptor()
 T tensorflow::GPUOptions::~GPUOptions()
 T tensorflow::GPUUtil::Checksum(tensorflow::Device*, tensorflow::DeviceContext const*, tensorflow::Tensor const&)
 T tensorflow::GPUUtil::Checksum(tensorflow::Tensor const&)
 T tensorflow::GPUUtil::CopyCPUTensorToGPU(tensorflow::Tensor const*, tensorflow::DeviceContext const*, tensorflow::Device*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)
 T tensorflow::GPUUtil::CopyGPUTensorToCPU(tensorflow::Device*, tensorflow::DeviceContext const*, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)
 T tensorflow::GPUUtil::CopyGPUTensorToSameGPU(tensorflow::Device*, tensorflow::DeviceContext const*, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)
 T tensorflow::GPUUtil::DeviceToDeviceCopy(tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)
 T tensorflow::GPUUtil::MemoryDebugString[abi:cxx11](tensorflow::Device const*, tensorflow::Tensor*)
 T tensorflow::GPUUtil::SetProtoFromGPU(tensorflow::Tensor const&, tensorflow::Device*, tensorflow::DeviceContext const*, tensorflow::TensorProto*, bool, std::function<void (tensorflow::Status const&)>)
 T tensorflow::GPUUtil::Sync(tensorflow::Device*)
 T tensorflow::GPUUtil::SyncAll(tensorflow::Device*)
 T tensorflow::GPUcudaMallocAllocator::AddAllocVisitor(std::function<void (void*, unsigned long)>)
 T tensorflow::GPUcudaMallocAllocator::AddFreeVisitor(std::function<void (void*, unsigned long)>)
 T tensorflow::GPUcudaMallocAllocator::AllocateRaw(unsigned long, unsigned long)
 T tensorflow::GPUcudaMallocAllocator::DeallocateRaw(void*)
 T tensorflow::GPUcudaMallocAllocator::GPUcudaMallocAllocator(tensorflow::VisitableAllocator*, int)
 T tensorflow::GPUcudaMallocAllocator::TracksAllocationSizes()
 T tensorflow::GPUcudaMallocAllocator::~GPUcudaMallocAllocator()
 T tensorflow::Get3dOutputSize(std::array<long long, 3ul> const&, std::array<long long, 3ul> const&, std::array<long long, 3ul> const&, tensorflow::Padding, std::array<long long, 3ul>*, std::array<long long, 3ul>*)
 T tensorflow::Get3dOutputSizeV2(std::array<long long, 3ul> const&, std::array<long long, 3ul> const&, std::array<long long, 3ul> const&, std::array<long long, 3ul> const&, tensorflow::Padding, std::array<long long, 3ul>*, std::array<long long, 3ul>*)
 T tensorflow::GetActivationModeFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::ActivationMode*)
 T tensorflow::GetBase(tensorflow::Tensor const*)
 T tensorflow::GetBase(tensorflow::Tensor*)
 T tensorflow::GetConvnet3dDataFormatAttrString[abi:cxx11]()
 T tensorflow::GetConvnet3dFilterFormatAttrString[abi:cxx11]()
 T tensorflow::GetConvnetDataFormatAttrString[abi:cxx11]()
 T tensorflow::GetConvnetFilterFormatAttrString[abi:cxx11]()
 T tensorflow::GetFeatureList(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::SequenceExample const&)
 T tensorflow::GetFeatureList(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::SequenceExample*)
 T tensorflow::GetLenientNames()
 T tensorflow::GetMirrorPadModeAttrString[abi:cxx11]()
 T tensorflow::GetNodeAttr(tensorflow::AttrSlice const&, tensorflow::StringPiece, bool*)
 T tensorflow::GetNodeAttr(tensorflow::AttrSlice const&, tensorflow::StringPiece, float*)
 T tensorflow::GetNodeAttr(tensorflow::AttrSlice const&, tensorflow::StringPiece, int*)
 T tensorflow::GetNodeAttr(tensorflow::AttrSlice const&, tensorflow::StringPiece, long long*)
 T tensorflow::GetNodeAttr(tensorflow::AttrSlice const&, tensorflow::StringPiece, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::GetNodeAttr(tensorflow::AttrSlice const&, tensorflow::StringPiece, std::vector<bool, std::allocator<bool> >*)
 T tensorflow::GetNodeAttr(tensorflow::AttrSlice const&, tensorflow::StringPiece, std::vector<float, std::allocator<float> >*)
 T tensorflow::GetNodeAttr(tensorflow::AttrSlice const&, tensorflow::StringPiece, std::vector<int, std::allocator<int> >*)
 T tensorflow::GetNodeAttr(tensorflow::AttrSlice const&, tensorflow::StringPiece, std::vector<long long, std::allocator<long long> >*)
 T tensorflow::GetNodeAttr(tensorflow::AttrSlice const&, tensorflow::StringPiece, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)
 T tensorflow::GetNodeAttr(tensorflow::AttrSlice const&, tensorflow::StringPiece, std::vector<tensorflow::DataType, std::allocator<tensorflow::DataType> >*)
 T tensorflow::GetNodeAttr(tensorflow::AttrSlice const&, tensorflow::StringPiece, std::vector<tensorflow::NameAttrList, std::allocator<tensorflow::NameAttrList> >*)
 T tensorflow::GetNodeAttr(tensorflow::AttrSlice const&, tensorflow::StringPiece, std::vector<tensorflow::PartialTensorShape, std::allocator<tensorflow::PartialTensorShape> >*)
 T tensorflow::GetNodeAttr(tensorflow::AttrSlice const&, tensorflow::StringPiece, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*)
 T tensorflow::GetNodeAttr(tensorflow::AttrSlice const&, tensorflow::StringPiece, std::vector<tensorflow::TensorShape, std::allocator<tensorflow::TensorShape> >*)
 T tensorflow::GetNodeAttr(tensorflow::AttrSlice const&, tensorflow::StringPiece, std::vector<tensorflow::TensorShapeProto, std::allocator<tensorflow::TensorShapeProto> >*)
 T tensorflow::GetNodeAttr(tensorflow::AttrSlice const&, tensorflow::StringPiece, tensorflow::DataType*)
 T tensorflow::GetNodeAttr(tensorflow::AttrSlice const&, tensorflow::StringPiece, tensorflow::NameAttrList const**)
 T tensorflow::GetNodeAttr(tensorflow::AttrSlice const&, tensorflow::StringPiece, tensorflow::NameAttrList*)
 T tensorflow::GetNodeAttr(tensorflow::AttrSlice const&, tensorflow::StringPiece, tensorflow::PartialTensorShape*)
 T tensorflow::GetNodeAttr(tensorflow::AttrSlice const&, tensorflow::StringPiece, tensorflow::Tensor*)
 T tensorflow::GetNodeAttr(tensorflow::AttrSlice const&, tensorflow::StringPiece, tensorflow::TensorProto const**)
 T tensorflow::GetNodeAttr(tensorflow::AttrSlice const&, tensorflow::StringPiece, tensorflow::TensorShape*)
 T tensorflow::GetNodeAttr(tensorflow::AttrSlice const&, tensorflow::StringPiece, tensorflow::TensorShapeProto*)
 T tensorflow::GetNodeAttr(tensorflow::AttrSlice const&, tensorflow::StringPiece, tensorflow::gtl::InlinedVector<tensorflow::DataType, 4>*)
 T tensorflow::GetNodeAttr(tensorflow::NodeDef const&, tensorflow::StringPiece, tensorflow::MirrorPadMode*)
 T tensorflow::GetNodeAttr(tensorflow::NodeDef const&, tensorflow::StringPiece, tensorflow::Padding*)
 T tensorflow::GetNodeAttrSimple(tensorflow::AttrSlice const&, tensorflow::StringPiece, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::GetNodeAttrSimple(tensorflow::AttrSlice const&, tensorflow::StringPiece, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)
 T tensorflow::GetNodeAttrString[abi:cxx11](tensorflow::AttrSlice const&, tensorflow::StringPiece)
 T tensorflow::GetPaddingAttrString[abi:cxx11]()
 T tensorflow::GetPostOrder(tensorflow::Graph const&, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> >*, std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> const&)
 T tensorflow::GetReversePostOrder(tensorflow::Graph const&, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> >*, std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> const&)
 T tensorflow::GetSparseTensorShapes(tensorflow::VarLenFeature const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> > const&, int, tensorflow::VarLenFeatureBatchShapes*)
 T tensorflow::GetUnaryVariantShape(tensorflow::Tensor const&, tensorflow::TensorShape*)
 T tensorflow::GetWindowedOutputSize(long long, long long, long long, tensorflow::Padding, long long*, long long*)
 T tensorflow::GetWindowedOutputSizeV2(long long, long long, long long, long long, tensorflow::Padding, long long*, long long*)
 T tensorflow::GetWindowedOutputSizeVerbose(long long, long long, long long, tensorflow::Padding, long long*, long long*, long long*)
 T tensorflow::GetWindowedOutputSizeVerboseV2(long long, long long, long long, long long, tensorflow::Padding, long long*, long long*, long long*)
 T tensorflow::GlobalKernelRegistry()
 T tensorflow::GpuManagedAllocator::AllocateRaw(unsigned long, unsigned long)
 T tensorflow::GpuManagedAllocator::DeallocateRaw(void*)
 T tensorflow::GradientDef::ArenaDtor(void*)
 T tensorflow::GradientDef::ByteSizeLong() const
 T tensorflow::GradientDef::Clear()
 T tensorflow::GradientDef::CopyFrom(tensorflow::GradientDef const&)
 T tensorflow::GradientDef::GetMetadata() const
 T tensorflow::GradientDef::GradientDef()
 T tensorflow::GradientDef::GradientDef(tensorflow::GradientDef const&)
 T tensorflow::GradientDef::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::GradientDef::InternalSwap(tensorflow::GradientDef*)
 T tensorflow::GradientDef::IsInitialized() const
 T tensorflow::GradientDef::MergeFrom(tensorflow::GradientDef const&)
 T tensorflow::GradientDef::SetCachedSize(int) const
 T tensorflow::GradientDef::SharedCtor()
 T tensorflow::GradientDef::SharedDtor()
 T tensorflow::GradientDef::Swap(tensorflow::GradientDef*)
 T tensorflow::GradientDef::UnsafeArenaSwap(tensorflow::GradientDef*)
 T tensorflow::GradientDef::default_instance()
 T tensorflow::GradientDef::descriptor()
 T tensorflow::GradientDef::~GradientDef()
 T tensorflow::Graph::AddControlEdge(tensorflow::Node*, tensorflow::Node*, bool)
 T tensorflow::Graph::AddEdge(tensorflow::Node*, int, tensorflow::Node*, int)
 T tensorflow::Graph::AddFunctionLibrary(tensorflow::FunctionDefLibrary const&)
 T tensorflow::Graph::AddNode(tensorflow::NodeDef const&, tensorflow::Status*)
 T tensorflow::Graph::AddWhileContext(tensorflow::StringPiece, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> >, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> >, tensorflow::OutputTensor, std::vector<tensorflow::OutputTensor, std::allocator<tensorflow::OutputTensor> >, std::vector<tensorflow::OutputTensor, std::allocator<tensorflow::OutputTensor> >, tensorflow::WhileContext**)
 T tensorflow::Graph::AllocateNode(std::shared_ptr<tensorflow::NodeProperties>, tensorflow::Node const*)
 T tensorflow::Graph::CopyNode(tensorflow::Node*)
 T tensorflow::Graph::FindEdge(tensorflow::Node const*, int)
 T tensorflow::Graph::Graph(tensorflow::FunctionLibraryDefinition const&)
 T tensorflow::Graph::Graph(tensorflow::OpRegistryInterface const*)
 T tensorflow::Graph::InternDeviceName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::Graph::IsValidInputTensor(tensorflow::Node const*, int) const
 T tensorflow::Graph::IsValidNode(tensorflow::Node const*) const
 T tensorflow::Graph::IsValidOutputTensor(tensorflow::Node const*, int) const
 T tensorflow::Graph::NewName[abi:cxx11](tensorflow::StringPiece)
 T tensorflow::Graph::ReleaseNode(tensorflow::Node*)
 T tensorflow::Graph::RemoveControlEdge(tensorflow::Edge const*)
 T tensorflow::Graph::RemoveEdge(tensorflow::Edge const*)
 T tensorflow::Graph::RemoveNode(tensorflow::Node*)
 T tensorflow::Graph::ToGraphDef(tensorflow::GraphDef*) const
 T tensorflow::Graph::ToGraphDefSubRange(tensorflow::GraphDef*, int) const
 T tensorflow::Graph::UpdateEdge(tensorflow::Node*, int, tensorflow::Node*, int)
 T tensorflow::Graph::set_versions(tensorflow::VersionDef const&)
 T tensorflow::Graph::versions() const
 T tensorflow::Graph::~Graph()
 T tensorflow::GraphDef::ArenaDtor(void*)
 T tensorflow::GraphDef::ByteSizeLong() const
 T tensorflow::GraphDef::Clear()
 T tensorflow::GraphDef::CopyFrom(tensorflow::GraphDef const&)
 T tensorflow::GraphDef::GetMetadata() const
 T tensorflow::GraphDef::GraphDef()
 T tensorflow::GraphDef::GraphDef(tensorflow::GraphDef const&)
 T tensorflow::GraphDef::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::GraphDef::InternalSwap(tensorflow::GraphDef*)
 T tensorflow::GraphDef::IsInitialized() const
 T tensorflow::GraphDef::MergeFrom(tensorflow::GraphDef const&)
 T tensorflow::GraphDef::SetCachedSize(int) const
 T tensorflow::GraphDef::SharedCtor()
 T tensorflow::GraphDef::SharedDtor()
 T tensorflow::GraphDef::Swap(tensorflow::GraphDef*)
 T tensorflow::GraphDef::UnsafeArenaSwap(tensorflow::GraphDef*)
 T tensorflow::GraphDef::_slow_mutable_library()
 T tensorflow::GraphDef::_slow_mutable_versions()
 T tensorflow::GraphDef::_slow_release_library()
 T tensorflow::GraphDef::_slow_release_versions()
 T tensorflow::GraphDef::default_instance()
 T tensorflow::GraphDef::descriptor()
 T tensorflow::GraphDef::unsafe_arena_release_library()
 T tensorflow::GraphDef::unsafe_arena_release_versions()
 T tensorflow::GraphDef::unsafe_arena_set_allocated_library(tensorflow::FunctionDefLibrary*)
 T tensorflow::GraphDef::unsafe_arena_set_allocated_versions(tensorflow::VersionDef*)
 T tensorflow::GraphDef::~GraphDef()
 T tensorflow::GraphDefBuilder::Options::FinalizeBuilder(tensorflow::NodeBuilder*) const
 T tensorflow::GraphDefBuilder::Options::GetNameForOp[abi:cxx11](tensorflow::StringPiece) const
 T tensorflow::GraphDefBuilder::Options::Options(tensorflow::Graph*, tensorflow::Status*)
 T tensorflow::GraphDefBuilder::Options::UpdateStatus(tensorflow::Status const&) const
 T tensorflow::GraphDefBuilder::Options::WithControlInput(tensorflow::Node*) const
 T tensorflow::GraphDefBuilder::Options::WithControlInputImpl(tensorflow::Node*)
 T tensorflow::GraphDefBuilder::Options::WithControlInputs(tensorflow::gtl::ArraySlice<tensorflow::Node*>) const
 T tensorflow::GraphDefBuilder::Options::WithControlInputsImpl(tensorflow::gtl::ArraySlice<tensorflow::Node*>)
 T tensorflow::GraphDefBuilder::Options::WithDevice(tensorflow::StringPiece) const
 T tensorflow::GraphDefBuilder::Options::WithDeviceImpl(tensorflow::StringPiece)
 T tensorflow::GraphDefBuilder::Options::WithName(tensorflow::StringPiece) const
 T tensorflow::GraphDefBuilder::Options::WithNameImpl(tensorflow::StringPiece)
 T tensorflow::GraphDefBuilder::Options::~Options()
 T tensorflow::GraphDefBuilder::ToGraph(tensorflow::Graph*) const
 T tensorflow::GraphDefBuilder::ToGraphDef(tensorflow::GraphDef*) const
 T tensorflow::GraphDefHash(tensorflow::GraphDef const&, tensorflow::EqualGraphDefOptions const&)
 T tensorflow::GraphOptimizer::GraphOptimizer(tensorflow::OptimizerOptions const&)
 T tensorflow::GraphOptimizer::Optimize(tensorflow::FunctionLibraryRuntime*, tensorflow::Env*, tensorflow::Device*, std::unique_ptr<tensorflow::Graph, std::default_delete<tensorflow::Graph> >*, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<tensorflow::PartialTensorShape, std::allocator<tensorflow::PartialTensorShape> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<tensorflow::PartialTensorShape, std::allocator<tensorflow::PartialTensorShape> > > > > const*)
 T tensorflow::GraphOptimizer::~GraphOptimizer()
 T tensorflow::GraphOptions::ArenaDtor(void*)
 T tensorflow::GraphOptions::ByteSizeLong() const
 T tensorflow::GraphOptions::Clear()
 T tensorflow::GraphOptions::CopyFrom(tensorflow::GraphOptions const&)
 T tensorflow::GraphOptions::GetMetadata() const
 T tensorflow::GraphOptions::GraphOptions()
 T tensorflow::GraphOptions::GraphOptions(tensorflow::GraphOptions const&)
 T tensorflow::GraphOptions::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::GraphOptions::InternalSwap(tensorflow::GraphOptions*)
 T tensorflow::GraphOptions::IsInitialized() const
 T tensorflow::GraphOptions::MergeFrom(tensorflow::GraphOptions const&)
 T tensorflow::GraphOptions::SetCachedSize(int) const
 T tensorflow::GraphOptions::SharedCtor()
 T tensorflow::GraphOptions::SharedDtor()
 T tensorflow::GraphOptions::Swap(tensorflow::GraphOptions*)
 T tensorflow::GraphOptions::UnsafeArenaSwap(tensorflow::GraphOptions*)
 T tensorflow::GraphOptions::_slow_mutable_optimizer_options()
 T tensorflow::GraphOptions::_slow_mutable_rewrite_options()
 T tensorflow::GraphOptions::_slow_release_optimizer_options()
 T tensorflow::GraphOptions::_slow_release_rewrite_options()
 T tensorflow::GraphOptions::default_instance()
 T tensorflow::GraphOptions::descriptor()
 T tensorflow::GraphOptions::unsafe_arena_release_optimizer_options()
 T tensorflow::GraphOptions::unsafe_arena_release_rewrite_options()
 T tensorflow::GraphOptions::unsafe_arena_set_allocated_optimizer_options(tensorflow::OptimizerOptions*)
 T tensorflow::GraphOptions::unsafe_arena_set_allocated_rewrite_options(tensorflow::RewriterConfig*)
 T tensorflow::GraphOptions::~GraphOptions()
 T tensorflow::GraphRunner::GraphRunner(tensorflow::Env*)
 T tensorflow::GraphRunner::Run(tensorflow::Graph*, tensorflow::FunctionLibraryRuntime*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*)
 T tensorflow::GraphRunner::~GraphRunner()
 T tensorflow::GraphTransferInfo::ArenaDtor(void*)
 T tensorflow::GraphTransferInfo::ByteSizeLong() const
 T tensorflow::GraphTransferInfo::Clear()
 T tensorflow::GraphTransferInfo::CopyFrom(tensorflow::GraphTransferInfo const&)
 T tensorflow::GraphTransferInfo::GetMetadata() const
 T tensorflow::GraphTransferInfo::GraphTransferInfo()
 T tensorflow::GraphTransferInfo::GraphTransferInfo(tensorflow::GraphTransferInfo const&)
 T tensorflow::GraphTransferInfo::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::GraphTransferInfo::InternalSwap(tensorflow::GraphTransferInfo*)
 T tensorflow::GraphTransferInfo::IsInitialized() const
 T tensorflow::GraphTransferInfo::MergeFrom(tensorflow::GraphTransferInfo const&)
 T tensorflow::GraphTransferInfo::SetCachedSize(int) const
 T tensorflow::GraphTransferInfo::SharedCtor()
 T tensorflow::GraphTransferInfo::SharedDtor()
 T tensorflow::GraphTransferInfo::Swap(tensorflow::GraphTransferInfo*)
 T tensorflow::GraphTransferInfo::UnsafeArenaSwap(tensorflow::GraphTransferInfo*)
 T tensorflow::GraphTransferInfo::default_instance()
 T tensorflow::GraphTransferInfo::descriptor()
 T tensorflow::GraphTransferInfo::~GraphTransferInfo()
 T tensorflow::GraphTransferInfo_ConstNodeInfo::ArenaDtor(void*)
 T tensorflow::GraphTransferInfo_ConstNodeInfo::ByteSizeLong() const
 T tensorflow::GraphTransferInfo_ConstNodeInfo::Clear()
 T tensorflow::GraphTransferInfo_ConstNodeInfo::CopyFrom(tensorflow::GraphTransferInfo_ConstNodeInfo const&)
 T tensorflow::GraphTransferInfo_ConstNodeInfo::GetMetadata() const
 T tensorflow::GraphTransferInfo_ConstNodeInfo::GraphTransferInfo_ConstNodeInfo()
 T tensorflow::GraphTransferInfo_ConstNodeInfo::GraphTransferInfo_ConstNodeInfo(tensorflow::GraphTransferInfo_ConstNodeInfo const&)
 T tensorflow::GraphTransferInfo_ConstNodeInfo::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::GraphTransferInfo_ConstNodeInfo::InternalSwap(tensorflow::GraphTransferInfo_ConstNodeInfo*)
 T tensorflow::GraphTransferInfo_ConstNodeInfo::IsInitialized() const
 T tensorflow::GraphTransferInfo_ConstNodeInfo::MergeFrom(tensorflow::GraphTransferInfo_ConstNodeInfo const&)
 T tensorflow::GraphTransferInfo_ConstNodeInfo::SetCachedSize(int) const
 T tensorflow::GraphTransferInfo_ConstNodeInfo::SharedCtor()
 T tensorflow::GraphTransferInfo_ConstNodeInfo::SharedDtor()
 T tensorflow::GraphTransferInfo_ConstNodeInfo::Swap(tensorflow::GraphTransferInfo_ConstNodeInfo*)
 T tensorflow::GraphTransferInfo_ConstNodeInfo::UnsafeArenaSwap(tensorflow::GraphTransferInfo_ConstNodeInfo*)
 T tensorflow::GraphTransferInfo_ConstNodeInfo::default_instance()
 T tensorflow::GraphTransferInfo_ConstNodeInfo::descriptor()
 T tensorflow::GraphTransferInfo_ConstNodeInfo::~GraphTransferInfo_ConstNodeInfo()
 T tensorflow::GraphTransferInfo_Destination_IsValid(int)
 T tensorflow::GraphTransferInfo_Destination_descriptor()
 T tensorflow::GraphTransferInfo_GraphInputNodeInfo::ArenaDtor(void*)
 T tensorflow::GraphTransferInfo_GraphInputNodeInfo::ByteSizeLong() const
 T tensorflow::GraphTransferInfo_GraphInputNodeInfo::Clear()
 T tensorflow::GraphTransferInfo_GraphInputNodeInfo::CopyFrom(tensorflow::GraphTransferInfo_GraphInputNodeInfo const&)
 T tensorflow::GraphTransferInfo_GraphInputNodeInfo::GetMetadata() const
 T tensorflow::GraphTransferInfo_GraphInputNodeInfo::GraphTransferInfo_GraphInputNodeInfo()
 T tensorflow::GraphTransferInfo_GraphInputNodeInfo::GraphTransferInfo_GraphInputNodeInfo(tensorflow::GraphTransferInfo_GraphInputNodeInfo const&)
 T tensorflow::GraphTransferInfo_GraphInputNodeInfo::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::GraphTransferInfo_GraphInputNodeInfo::InternalSwap(tensorflow::GraphTransferInfo_GraphInputNodeInfo*)
 T tensorflow::GraphTransferInfo_GraphInputNodeInfo::IsInitialized() const
 T tensorflow::GraphTransferInfo_GraphInputNodeInfo::MergeFrom(tensorflow::GraphTransferInfo_GraphInputNodeInfo const&)
 T tensorflow::GraphTransferInfo_GraphInputNodeInfo::SetCachedSize(int) const
 T tensorflow::GraphTransferInfo_GraphInputNodeInfo::SharedCtor()
 T tensorflow::GraphTransferInfo_GraphInputNodeInfo::SharedDtor()
 T tensorflow::GraphTransferInfo_GraphInputNodeInfo::Swap(tensorflow::GraphTransferInfo_GraphInputNodeInfo*)
 T tensorflow::GraphTransferInfo_GraphInputNodeInfo::UnsafeArenaSwap(tensorflow::GraphTransferInfo_GraphInputNodeInfo*)
 T tensorflow::GraphTransferInfo_GraphInputNodeInfo::default_instance()
 T tensorflow::GraphTransferInfo_GraphInputNodeInfo::descriptor()
 T tensorflow::GraphTransferInfo_GraphInputNodeInfo::~GraphTransferInfo_GraphInputNodeInfo()
 T tensorflow::GraphTransferInfo_GraphOutputNodeInfo::ArenaDtor(void*)
 T tensorflow::GraphTransferInfo_GraphOutputNodeInfo::ByteSizeLong() const
 T tensorflow::GraphTransferInfo_GraphOutputNodeInfo::Clear()
 T tensorflow::GraphTransferInfo_GraphOutputNodeInfo::CopyFrom(tensorflow::GraphTransferInfo_GraphOutputNodeInfo const&)
 T tensorflow::GraphTransferInfo_GraphOutputNodeInfo::GetMetadata() const
 T tensorflow::GraphTransferInfo_GraphOutputNodeInfo::GraphTransferInfo_GraphOutputNodeInfo()
 T tensorflow::GraphTransferInfo_GraphOutputNodeInfo::GraphTransferInfo_GraphOutputNodeInfo(tensorflow::GraphTransferInfo_GraphOutputNodeInfo const&)
 T tensorflow::GraphTransferInfo_GraphOutputNodeInfo::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::GraphTransferInfo_GraphOutputNodeInfo::InternalSwap(tensorflow::GraphTransferInfo_GraphOutputNodeInfo*)
 T tensorflow::GraphTransferInfo_GraphOutputNodeInfo::IsInitialized() const
 T tensorflow::GraphTransferInfo_GraphOutputNodeInfo::MergeFrom(tensorflow::GraphTransferInfo_GraphOutputNodeInfo const&)
 T tensorflow::GraphTransferInfo_GraphOutputNodeInfo::SetCachedSize(int) const
 T tensorflow::GraphTransferInfo_GraphOutputNodeInfo::SharedCtor()
 T tensorflow::GraphTransferInfo_GraphOutputNodeInfo::SharedDtor()
 T tensorflow::GraphTransferInfo_GraphOutputNodeInfo::Swap(tensorflow::GraphTransferInfo_GraphOutputNodeInfo*)
 T tensorflow::GraphTransferInfo_GraphOutputNodeInfo::UnsafeArenaSwap(tensorflow::GraphTransferInfo_GraphOutputNodeInfo*)
 T tensorflow::GraphTransferInfo_GraphOutputNodeInfo::default_instance()
 T tensorflow::GraphTransferInfo_GraphOutputNodeInfo::descriptor()
 T tensorflow::GraphTransferInfo_GraphOutputNodeInfo::~GraphTransferInfo_GraphOutputNodeInfo()
 T tensorflow::GraphTransferInfo_NodeInfo::ArenaDtor(void*)
 T tensorflow::GraphTransferInfo_NodeInfo::ByteSizeLong() const
 T tensorflow::GraphTransferInfo_NodeInfo::Clear()
 T tensorflow::GraphTransferInfo_NodeInfo::CopyFrom(tensorflow::GraphTransferInfo_NodeInfo const&)
 T tensorflow::GraphTransferInfo_NodeInfo::GetMetadata() const
 T tensorflow::GraphTransferInfo_NodeInfo::GraphTransferInfo_NodeInfo()
 T tensorflow::GraphTransferInfo_NodeInfo::GraphTransferInfo_NodeInfo(tensorflow::GraphTransferInfo_NodeInfo const&)
 T tensorflow::GraphTransferInfo_NodeInfo::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::GraphTransferInfo_NodeInfo::InternalSwap(tensorflow::GraphTransferInfo_NodeInfo*)
 T tensorflow::GraphTransferInfo_NodeInfo::IsInitialized() const
 T tensorflow::GraphTransferInfo_NodeInfo::MergeFrom(tensorflow::GraphTransferInfo_NodeInfo const&)
 T tensorflow::GraphTransferInfo_NodeInfo::SetCachedSize(int) const
 T tensorflow::GraphTransferInfo_NodeInfo::SharedCtor()
 T tensorflow::GraphTransferInfo_NodeInfo::SharedDtor()
 T tensorflow::GraphTransferInfo_NodeInfo::Swap(tensorflow::GraphTransferInfo_NodeInfo*)
 T tensorflow::GraphTransferInfo_NodeInfo::UnsafeArenaSwap(tensorflow::GraphTransferInfo_NodeInfo*)
 T tensorflow::GraphTransferInfo_NodeInfo::default_instance()
 T tensorflow::GraphTransferInfo_NodeInfo::descriptor()
 T tensorflow::GraphTransferInfo_NodeInfo::~GraphTransferInfo_NodeInfo()
 T tensorflow::GraphTransferInfo_NodeInput::ArenaDtor(void*)
 T tensorflow::GraphTransferInfo_NodeInput::ByteSizeLong() const
 T tensorflow::GraphTransferInfo_NodeInput::Clear()
 T tensorflow::GraphTransferInfo_NodeInput::CopyFrom(tensorflow::GraphTransferInfo_NodeInput const&)
 T tensorflow::GraphTransferInfo_NodeInput::GetMetadata() const
 T tensorflow::GraphTransferInfo_NodeInput::GraphTransferInfo_NodeInput()
 T tensorflow::GraphTransferInfo_NodeInput::GraphTransferInfo_NodeInput(tensorflow::GraphTransferInfo_NodeInput const&)
 T tensorflow::GraphTransferInfo_NodeInput::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::GraphTransferInfo_NodeInput::InternalSwap(tensorflow::GraphTransferInfo_NodeInput*)
 T tensorflow::GraphTransferInfo_NodeInput::IsInitialized() const
 T tensorflow::GraphTransferInfo_NodeInput::MergeFrom(tensorflow::GraphTransferInfo_NodeInput const&)
 T tensorflow::GraphTransferInfo_NodeInput::SetCachedSize(int) const
 T tensorflow::GraphTransferInfo_NodeInput::SharedCtor()
 T tensorflow::GraphTransferInfo_NodeInput::SharedDtor()
 T tensorflow::GraphTransferInfo_NodeInput::Swap(tensorflow::GraphTransferInfo_NodeInput*)
 T tensorflow::GraphTransferInfo_NodeInput::UnsafeArenaSwap(tensorflow::GraphTransferInfo_NodeInput*)
 T tensorflow::GraphTransferInfo_NodeInput::default_instance()
 T tensorflow::GraphTransferInfo_NodeInput::descriptor()
 T tensorflow::GraphTransferInfo_NodeInput::~GraphTransferInfo_NodeInput()
 T tensorflow::GraphTransferInfo_NodeInputInfo::ArenaDtor(void*)
 T tensorflow::GraphTransferInfo_NodeInputInfo::ByteSizeLong() const
 T tensorflow::GraphTransferInfo_NodeInputInfo::Clear()
 T tensorflow::GraphTransferInfo_NodeInputInfo::CopyFrom(tensorflow::GraphTransferInfo_NodeInputInfo const&)
 T tensorflow::GraphTransferInfo_NodeInputInfo::GetMetadata() const
 T tensorflow::GraphTransferInfo_NodeInputInfo::GraphTransferInfo_NodeInputInfo()
 T tensorflow::GraphTransferInfo_NodeInputInfo::GraphTransferInfo_NodeInputInfo(tensorflow::GraphTransferInfo_NodeInputInfo const&)
 T tensorflow::GraphTransferInfo_NodeInputInfo::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::GraphTransferInfo_NodeInputInfo::InternalSwap(tensorflow::GraphTransferInfo_NodeInputInfo*)
 T tensorflow::GraphTransferInfo_NodeInputInfo::IsInitialized() const
 T tensorflow::GraphTransferInfo_NodeInputInfo::MergeFrom(tensorflow::GraphTransferInfo_NodeInputInfo const&)
 T tensorflow::GraphTransferInfo_NodeInputInfo::SetCachedSize(int) const
 T tensorflow::GraphTransferInfo_NodeInputInfo::SharedCtor()
 T tensorflow::GraphTransferInfo_NodeInputInfo::SharedDtor()
 T tensorflow::GraphTransferInfo_NodeInputInfo::Swap(tensorflow::GraphTransferInfo_NodeInputInfo*)
 T tensorflow::GraphTransferInfo_NodeInputInfo::UnsafeArenaSwap(tensorflow::GraphTransferInfo_NodeInputInfo*)
 T tensorflow::GraphTransferInfo_NodeInputInfo::default_instance()
 T tensorflow::GraphTransferInfo_NodeInputInfo::descriptor()
 T tensorflow::GraphTransferInfo_NodeInputInfo::~GraphTransferInfo_NodeInputInfo()
 T tensorflow::GraphTransferInfo_NodeOutputInfo::ArenaDtor(void*)
 T tensorflow::GraphTransferInfo_NodeOutputInfo::ByteSizeLong() const
 T tensorflow::GraphTransferInfo_NodeOutputInfo::Clear()
 T tensorflow::GraphTransferInfo_NodeOutputInfo::CopyFrom(tensorflow::GraphTransferInfo_NodeOutputInfo const&)
 T tensorflow::GraphTransferInfo_NodeOutputInfo::GetMetadata() const
 T tensorflow::GraphTransferInfo_NodeOutputInfo::GraphTransferInfo_NodeOutputInfo()
 T tensorflow::GraphTransferInfo_NodeOutputInfo::GraphTransferInfo_NodeOutputInfo(tensorflow::GraphTransferInfo_NodeOutputInfo const&)
 T tensorflow::GraphTransferInfo_NodeOutputInfo::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::GraphTransferInfo_NodeOutputInfo::InternalSwap(tensorflow::GraphTransferInfo_NodeOutputInfo*)
 T tensorflow::GraphTransferInfo_NodeOutputInfo::IsInitialized() const
 T tensorflow::GraphTransferInfo_NodeOutputInfo::MergeFrom(tensorflow::GraphTransferInfo_NodeOutputInfo const&)
 T tensorflow::GraphTransferInfo_NodeOutputInfo::SetCachedSize(int) const
 T tensorflow::GraphTransferInfo_NodeOutputInfo::SharedCtor()
 T tensorflow::GraphTransferInfo_NodeOutputInfo::SharedDtor()
 T tensorflow::GraphTransferInfo_NodeOutputInfo::Swap(tensorflow::GraphTransferInfo_NodeOutputInfo*)
 T tensorflow::GraphTransferInfo_NodeOutputInfo::UnsafeArenaSwap(tensorflow::GraphTransferInfo_NodeOutputInfo*)
 T tensorflow::GraphTransferInfo_NodeOutputInfo::default_instance()
 T tensorflow::GraphTransferInfo_NodeOutputInfo::descriptor()
 T tensorflow::GraphTransferInfo_NodeOutputInfo::~GraphTransferInfo_NodeOutputInfo()
 T tensorflow::GuardedPhiloxRandom::Init(long long, long long)
 T tensorflow::GuardedPhiloxRandom::Init(tensorflow::OpKernelConstruction*)
 T tensorflow::GuardedPhiloxRandom::ReserveSamples128(long long)
 T tensorflow::HandleFromInput(tensorflow::OpKernelContext*, int)
 T tensorflow::HandleFromInput(tensorflow::OpKernelContext*, tensorflow::StringPiece, tensorflow::ResourceHandle*)
 T tensorflow::HasFeatureList(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::SequenceExample const&)
 T tensorflow::HasNodeAttr(tensorflow::NodeDef const&, tensorflow::StringPiece)
 T tensorflow::HasPlaceHolder(tensorflow::AttrValue const&)
 T tensorflow::Hash32(char const*, unsigned long, unsigned int)
 T tensorflow::Hash64(char const*, unsigned long, unsigned long long)
 T tensorflow::HistogramProto::ArenaDtor(void*)
 T tensorflow::HistogramProto::ByteSizeLong() const
 T tensorflow::HistogramProto::Clear()
 T tensorflow::HistogramProto::CopyFrom(tensorflow::HistogramProto const&)
 T tensorflow::HistogramProto::GetMetadata() const
 T tensorflow::HistogramProto::HistogramProto()
 T tensorflow::HistogramProto::HistogramProto(tensorflow::HistogramProto const&)
 T tensorflow::HistogramProto::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::HistogramProto::InternalSwap(tensorflow::HistogramProto*)
 T tensorflow::HistogramProto::IsInitialized() const
 T tensorflow::HistogramProto::MergeFrom(tensorflow::HistogramProto const&)
 T tensorflow::HistogramProto::SetCachedSize(int) const
 T tensorflow::HistogramProto::SharedCtor()
 T tensorflow::HistogramProto::SharedDtor()
 T tensorflow::HistogramProto::Swap(tensorflow::HistogramProto*)
 T tensorflow::HistogramProto::UnsafeArenaSwap(tensorflow::HistogramProto*)
 T tensorflow::HistogramProto::default_instance()
 T tensorflow::HistogramProto::descriptor()
 T tensorflow::HistogramProto::~HistogramProto()
 T tensorflow::IOError(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
 T tensorflow::ImportGraphDef(tensorflow::ImportGraphDefOptions const&, tensorflow::GraphDef const&, tensorflow::Graph*, tensorflow::ShapeRefiner*, tensorflow::ImportGraphDefResults*)
 T tensorflow::InOutTypesForNode(tensorflow::NodeDef const&, tensorflow::OpDef const&, tensorflow::gtl::InlinedVector<tensorflow::DataType, 4>*, tensorflow::gtl::InlinedVector<tensorflow::DataType, 4>*)
 T tensorflow::InitField(std::ostream&, int)
 T tensorflow::InlineFunctionBody(tensorflow::FunctionLibraryDefinition const&, tensorflow::Graph*, tensorflow::Node*, tensorflow::FunctionBody const*)
 T tensorflow::InstantiateFunction(tensorflow::FunctionDef const&, tensorflow::AttrSlice, std::function<tensorflow::Status (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef const**)>, tensorflow::InstantiationResult*)
 T tensorflow::Int64List::ArenaDtor(void*)
 T tensorflow::Int64List::ByteSizeLong() const
 T tensorflow::Int64List::Clear()
 T tensorflow::Int64List::CopyFrom(tensorflow::Int64List const&)
 T tensorflow::Int64List::GetMetadata() const
 T tensorflow::Int64List::Int64List()
 T tensorflow::Int64List::Int64List(tensorflow::Int64List const&)
 T tensorflow::Int64List::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::Int64List::InternalSwap(tensorflow::Int64List*)
 T tensorflow::Int64List::IsInitialized() const
 T tensorflow::Int64List::MergeFrom(tensorflow::Int64List const&)
 T tensorflow::Int64List::SetCachedSize(int) const
 T tensorflow::Int64List::SharedCtor()
 T tensorflow::Int64List::SharedDtor()
 T tensorflow::Int64List::Swap(tensorflow::Int64List*)
 T tensorflow::Int64List::UnsafeArenaSwap(tensorflow::Int64List*)
 T tensorflow::Int64List::default_instance()
 T tensorflow::Int64List::descriptor()
 T tensorflow::Int64List::~Int64List()
 T tensorflow::IntraProcessRendezvous::IntraProcessRendezvous(tensorflow::DeviceMgr const*)
 T tensorflow::IntraProcessRendezvous::ParseKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, tensorflow::Rendezvous::ParsedKey*)
 T tensorflow::IntraProcessRendezvous::RecvAsync(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, std::function<void (tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)>)
 T tensorflow::IntraProcessRendezvous::SameWorkerRecvDone(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)
 T tensorflow::IntraProcessRendezvous::Send(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)
 T tensorflow::IntraProcessRendezvous::StartAbort(tensorflow::Status const&)
 T tensorflow::IntraProcessRendezvous::~IntraProcessRendezvous()
 T tensorflow::IsGoogleCudaEnabled()
 T tensorflow::IteratorStateMetadata::ArenaDtor(void*)
 T tensorflow::IteratorStateMetadata::ByteSizeLong() const
 T tensorflow::IteratorStateMetadata::Clear()
 T tensorflow::IteratorStateMetadata::CopyFrom(tensorflow::IteratorStateMetadata const&)
 T tensorflow::IteratorStateMetadata::GetMetadata() const
 T tensorflow::IteratorStateMetadata::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::IteratorStateMetadata::InternalSwap(tensorflow::IteratorStateMetadata*)
 T tensorflow::IteratorStateMetadata::IsInitialized() const
 T tensorflow::IteratorStateMetadata::IteratorStateMetadata()
 T tensorflow::IteratorStateMetadata::IteratorStateMetadata(tensorflow::IteratorStateMetadata const&)
 T tensorflow::IteratorStateMetadata::MergeFrom(tensorflow::IteratorStateMetadata const&)
 T tensorflow::IteratorStateMetadata::SetCachedSize(int) const
 T tensorflow::IteratorStateMetadata::SharedCtor()
 T tensorflow::IteratorStateMetadata::SharedDtor()
 T tensorflow::IteratorStateMetadata::Swap(tensorflow::IteratorStateMetadata*)
 T tensorflow::IteratorStateMetadata::UnsafeArenaSwap(tensorflow::IteratorStateMetadata*)
 T tensorflow::IteratorStateMetadata::default_instance()
 T tensorflow::IteratorStateMetadata::descriptor()
 T tensorflow::IteratorStateMetadata::~IteratorStateMetadata()
 T tensorflow::JobDef::ArenaDtor(void*)
 T tensorflow::JobDef::ByteSizeLong() const
 T tensorflow::JobDef::Clear()
 T tensorflow::JobDef::CopyFrom(tensorflow::JobDef const&)
 T tensorflow::JobDef::GetMetadata() const
 T tensorflow::JobDef::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::JobDef::InternalSwap(tensorflow::JobDef*)
 T tensorflow::JobDef::IsInitialized() const
 T tensorflow::JobDef::JobDef()
 T tensorflow::JobDef::JobDef(tensorflow::JobDef const&)
 T tensorflow::JobDef::JobDef_TasksEntry::GetMetadata() const
 T tensorflow::JobDef::JobDef_TasksEntry::JobDef_TasksEntry()
 T tensorflow::JobDef::JobDef_TasksEntry::MergeFrom(tensorflow::JobDef::JobDef_TasksEntry const&)
 T tensorflow::JobDef::MergeFrom(tensorflow::JobDef const&)
 T tensorflow::JobDef::SetCachedSize(int) const
 T tensorflow::JobDef::SharedCtor()
 T tensorflow::JobDef::SharedDtor()
 T tensorflow::JobDef::Swap(tensorflow::JobDef*)
 T tensorflow::JobDef::UnsafeArenaSwap(tensorflow::JobDef*)
 T tensorflow::JobDef::default_instance()
 T tensorflow::JobDef::descriptor()
 T tensorflow::JobDef::~JobDef()
 T tensorflow::KernelDef::ArenaDtor(void*)
 T tensorflow::KernelDef::ByteSizeLong() const
 T tensorflow::KernelDef::Clear()
 T tensorflow::KernelDef::CopyFrom(tensorflow::KernelDef const&)
 T tensorflow::KernelDef::GetMetadata() const
 T tensorflow::KernelDef::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::KernelDef::InternalSwap(tensorflow::KernelDef*)
 T tensorflow::KernelDef::IsInitialized() const
 T tensorflow::KernelDef::KernelDef()
 T tensorflow::KernelDef::KernelDef(tensorflow::KernelDef const&)
 T tensorflow::KernelDef::MergeFrom(tensorflow::KernelDef const&)
 T tensorflow::KernelDef::SetCachedSize(int) const
 T tensorflow::KernelDef::SharedCtor()
 T tensorflow::KernelDef::SharedDtor()
 T tensorflow::KernelDef::Swap(tensorflow::KernelDef*)
 T tensorflow::KernelDef::UnsafeArenaSwap(tensorflow::KernelDef*)
 T tensorflow::KernelDef::default_instance()
 T tensorflow::KernelDef::descriptor()
 T tensorflow::KernelDef::~KernelDef()
 T tensorflow::KernelDefBuilder::Build()
 T tensorflow::KernelDefBuilder::Device(char const*)
 T tensorflow::KernelDefBuilder::HostMemory(char const*)
 T tensorflow::KernelDefBuilder::KernelDefBuilder(char const*)
 T tensorflow::KernelDefBuilder::Label(char const*)
 T tensorflow::KernelDefBuilder::TypeConstraint(char const*, tensorflow::DataType)
 T tensorflow::KernelDefBuilder::TypeConstraint(char const*, tensorflow::gtl::ArraySlice<tensorflow::DataType>)
 T tensorflow::KernelDefBuilder::~KernelDefBuilder()
 T tensorflow::KernelDef_AttrConstraint::ArenaDtor(void*)
 T tensorflow::KernelDef_AttrConstraint::ByteSizeLong() const
 T tensorflow::KernelDef_AttrConstraint::Clear()
 T tensorflow::KernelDef_AttrConstraint::CopyFrom(tensorflow::KernelDef_AttrConstraint const&)
 T tensorflow::KernelDef_AttrConstraint::GetMetadata() const
 T tensorflow::KernelDef_AttrConstraint::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::KernelDef_AttrConstraint::InternalSwap(tensorflow::KernelDef_AttrConstraint*)
 T tensorflow::KernelDef_AttrConstraint::IsInitialized() const
 T tensorflow::KernelDef_AttrConstraint::KernelDef_AttrConstraint()
 T tensorflow::KernelDef_AttrConstraint::KernelDef_AttrConstraint(tensorflow::KernelDef_AttrConstraint const&)
 T tensorflow::KernelDef_AttrConstraint::MergeFrom(tensorflow::KernelDef_AttrConstraint const&)
 T tensorflow::KernelDef_AttrConstraint::SetCachedSize(int) const
 T tensorflow::KernelDef_AttrConstraint::SharedCtor()
 T tensorflow::KernelDef_AttrConstraint::SharedDtor()
 T tensorflow::KernelDef_AttrConstraint::Swap(tensorflow::KernelDef_AttrConstraint*)
 T tensorflow::KernelDef_AttrConstraint::UnsafeArenaSwap(tensorflow::KernelDef_AttrConstraint*)
 T tensorflow::KernelDef_AttrConstraint::_slow_mutable_allowed_values()
 T tensorflow::KernelDef_AttrConstraint::_slow_release_allowed_values()
 T tensorflow::KernelDef_AttrConstraint::default_instance()
 T tensorflow::KernelDef_AttrConstraint::descriptor()
 T tensorflow::KernelDef_AttrConstraint::unsafe_arena_release_allowed_values()
 T tensorflow::KernelDef_AttrConstraint::unsafe_arena_set_allocated_allowed_values(tensorflow::AttrValue*)
 T tensorflow::KernelDef_AttrConstraint::~KernelDef_AttrConstraint()
 T tensorflow::KernelsRegisteredForOp[abi:cxx11](tensorflow::StringPiece)
 T tensorflow::LoadLibrary(char const*, void**, void const**, unsigned long*)
 T tensorflow::LocalDevice::LocalDevice(tensorflow::SessionOptions const&, tensorflow::DeviceAttributes const&)
 T tensorflow::LocalDevice::~LocalDevice()
 T tensorflow::LogAllRegisteredKernels()
 T tensorflow::LogMemory::IsEnabled()
 T tensorflow::LogMemory::RecordRawAllocation(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long long, unsigned long, void*, tensorflow::Allocator*)
 T tensorflow::LogMemory::RecordRawDeallocation(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long long, void*, tensorflow::Allocator*, bool)
 T tensorflow::LogMemory::RecordStep(long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::LogMemory::RecordTensorAllocation(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long long, tensorflow::Tensor const&)
 T tensorflow::LogMemory::RecordTensorDeallocation(long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::LogMemory::RecordTensorOutput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long long, int, tensorflow::Tensor const&)
 T tensorflow::LogMessage::ArenaDtor(void*)
 T tensorflow::LogMessage::ByteSizeLong() const
 T tensorflow::LogMessage::Clear()
 T tensorflow::LogMessage::CopyFrom(tensorflow::LogMessage const&)
 T tensorflow::LogMessage::GetMetadata() const
 T tensorflow::LogMessage::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::LogMessage::InternalSwap(tensorflow::LogMessage*)
 T tensorflow::LogMessage::IsInitialized() const
 T tensorflow::LogMessage::LogMessage()
 T tensorflow::LogMessage::LogMessage(tensorflow::LogMessage const&)
 T tensorflow::LogMessage::MergeFrom(tensorflow::LogMessage const&)
 T tensorflow::LogMessage::SetCachedSize(int) const
 T tensorflow::LogMessage::SharedCtor()
 T tensorflow::LogMessage::SharedDtor()
 T tensorflow::LogMessage::Swap(tensorflow::LogMessage*)
 T tensorflow::LogMessage::UnsafeArenaSwap(tensorflow::LogMessage*)
 T tensorflow::LogMessage::default_instance()
 T tensorflow::LogMessage::descriptor()
 T tensorflow::LogMessage::~LogMessage()
 T tensorflow::LogMessage_Level_IsValid(int)
 T tensorflow::LogMessage_Level_descriptor()
 T tensorflow::MachineConfiguration::ArenaDtor(void*)
 T tensorflow::MachineConfiguration::ByteSizeLong() const
 T tensorflow::MachineConfiguration::Clear()
 T tensorflow::MachineConfiguration::CopyFrom(tensorflow::MachineConfiguration const&)
 T tensorflow::MachineConfiguration::GetMetadata() const
 T tensorflow::MachineConfiguration::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::MachineConfiguration::InternalSwap(tensorflow::MachineConfiguration*)
 T tensorflow::MachineConfiguration::IsInitialized() const
 T tensorflow::MachineConfiguration::MachineConfiguration()
 T tensorflow::MachineConfiguration::MachineConfiguration(tensorflow::MachineConfiguration const&)
 T tensorflow::MachineConfiguration::MergeFrom(tensorflow::MachineConfiguration const&)
 T tensorflow::MachineConfiguration::SetCachedSize(int) const
 T tensorflow::MachineConfiguration::SharedCtor()
 T tensorflow::MachineConfiguration::SharedDtor()
 T tensorflow::MachineConfiguration::Swap(tensorflow::MachineConfiguration*)
 T tensorflow::MachineConfiguration::UnsafeArenaSwap(tensorflow::MachineConfiguration*)
 T tensorflow::MachineConfiguration::_slow_mutable_cpu_info()
 T tensorflow::MachineConfiguration::_slow_mutable_memory_info()
 T tensorflow::MachineConfiguration::_slow_mutable_platform_info()
 T tensorflow::MachineConfiguration::_slow_release_cpu_info()
 T tensorflow::MachineConfiguration::_slow_release_memory_info()
 T tensorflow::MachineConfiguration::_slow_release_platform_info()
 T tensorflow::MachineConfiguration::default_instance()
 T tensorflow::MachineConfiguration::descriptor()
 T tensorflow::MachineConfiguration::unsafe_arena_release_cpu_info()
 T tensorflow::MachineConfiguration::unsafe_arena_release_memory_info()
 T tensorflow::MachineConfiguration::unsafe_arena_release_platform_info()
 T tensorflow::MachineConfiguration::unsafe_arena_set_allocated_cpu_info(tensorflow::CPUInfo*)
 T tensorflow::MachineConfiguration::unsafe_arena_set_allocated_memory_info(tensorflow::MemoryInfo*)
 T tensorflow::MachineConfiguration::unsafe_arena_set_allocated_platform_info(tensorflow::PlatformInfo*)
 T tensorflow::MachineConfiguration::~MachineConfiguration()
 T tensorflow::MakeResourceHandle(tensorflow::OpKernelContext*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::type_index const&)
 T tensorflow::MakeResourceHandleToOutput(tensorflow::OpKernelContext*, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::type_index const&)
 T tensorflow::MatmulAutotuneEnable()
 T tensorflow::MatmulDoFP32ComputationFP16Input()
 T tensorflow::MemmappedEnv::GetFileSystemForFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::FileSystem**)
 T tensorflow::MemmappedEnv::GetRegisteredFileSystemSchemes(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)
 T tensorflow::MemmappedEnv::InitializeFromFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::MemmappedEnv::MemmappedEnv(tensorflow::Env*)
 T tensorflow::MemmappedFileSystem::CreateDir(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::MemmappedFileSystem::DeleteDir(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::MemmappedFileSystem::DeleteFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::MemmappedFileSystem::FileExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::MemmappedFileSystem::GetChildren(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)
 T tensorflow::MemmappedFileSystem::GetFileSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long long*)
 T tensorflow::MemmappedFileSystem::GetMemoryWithOffset(unsigned long long) const
 T tensorflow::MemmappedFileSystem::InitializeFromFile(tensorflow::Env*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::MemmappedFileSystem::IsMemmappedPackageFilename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::MemmappedFileSystem::IsWellFormedMemmappedPackageFilename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::MemmappedFileSystem::MemmappedFileSystem()
 T tensorflow::MemmappedFileSystem::NewAppendableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<tensorflow::WritableFile, std::default_delete<tensorflow::WritableFile> >*)
 T tensorflow::MemmappedFileSystem::NewRandomAccessFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<tensorflow::RandomAccessFile, std::default_delete<tensorflow::RandomAccessFile> >*)
 T tensorflow::MemmappedFileSystem::NewReadOnlyMemoryRegionFromFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<tensorflow::ReadOnlyMemoryRegion, std::default_delete<tensorflow::ReadOnlyMemoryRegion> >*)
 T tensorflow::MemmappedFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<tensorflow::WritableFile, std::default_delete<tensorflow::WritableFile> >*)
 T tensorflow::MemmappedFileSystem::RenameFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::MemmappedFileSystem::Stat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::FileStatistics*)
 T tensorflow::MemmappedFileSystemDirectory::ArenaDtor(void*)
 T tensorflow::MemmappedFileSystemDirectory::ByteSizeLong() const
 T tensorflow::MemmappedFileSystemDirectory::Clear()
 T tensorflow::MemmappedFileSystemDirectory::CopyFrom(tensorflow::MemmappedFileSystemDirectory const&)
 T tensorflow::MemmappedFileSystemDirectory::GetMetadata() const
 T tensorflow::MemmappedFileSystemDirectory::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::MemmappedFileSystemDirectory::InternalSwap(tensorflow::MemmappedFileSystemDirectory*)
 T tensorflow::MemmappedFileSystemDirectory::IsInitialized() const
 T tensorflow::MemmappedFileSystemDirectory::MemmappedFileSystemDirectory()
 T tensorflow::MemmappedFileSystemDirectory::MemmappedFileSystemDirectory(tensorflow::MemmappedFileSystemDirectory const&)
 T tensorflow::MemmappedFileSystemDirectory::MergeFrom(tensorflow::MemmappedFileSystemDirectory const&)
 T tensorflow::MemmappedFileSystemDirectory::SetCachedSize(int) const
 T tensorflow::MemmappedFileSystemDirectory::SharedCtor()
 T tensorflow::MemmappedFileSystemDirectory::SharedDtor()
 T tensorflow::MemmappedFileSystemDirectory::Swap(tensorflow::MemmappedFileSystemDirectory*)
 T tensorflow::MemmappedFileSystemDirectory::UnsafeArenaSwap(tensorflow::MemmappedFileSystemDirectory*)
 T tensorflow::MemmappedFileSystemDirectory::default_instance()
 T tensorflow::MemmappedFileSystemDirectory::descriptor()
 T tensorflow::MemmappedFileSystemDirectory::~MemmappedFileSystemDirectory()
 T tensorflow::MemmappedFileSystemDirectoryElement::ArenaDtor(void*)
 T tensorflow::MemmappedFileSystemDirectoryElement::ByteSizeLong() const
 T tensorflow::MemmappedFileSystemDirectoryElement::Clear()
 T tensorflow::MemmappedFileSystemDirectoryElement::CopyFrom(tensorflow::MemmappedFileSystemDirectoryElement const&)
 T tensorflow::MemmappedFileSystemDirectoryElement::GetMetadata() const
 T tensorflow::MemmappedFileSystemDirectoryElement::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::MemmappedFileSystemDirectoryElement::InternalSwap(tensorflow::MemmappedFileSystemDirectoryElement*)
 T tensorflow::MemmappedFileSystemDirectoryElement::IsInitialized() const
 T tensorflow::MemmappedFileSystemDirectoryElement::MemmappedFileSystemDirectoryElement()
 T tensorflow::MemmappedFileSystemDirectoryElement::MemmappedFileSystemDirectoryElement(tensorflow::MemmappedFileSystemDirectoryElement const&)
 T tensorflow::MemmappedFileSystemDirectoryElement::MergeFrom(tensorflow::MemmappedFileSystemDirectoryElement const&)
 T tensorflow::MemmappedFileSystemDirectoryElement::SetCachedSize(int) const
 T tensorflow::MemmappedFileSystemDirectoryElement::SharedCtor()
 T tensorflow::MemmappedFileSystemDirectoryElement::SharedDtor()
 T tensorflow::MemmappedFileSystemDirectoryElement::Swap(tensorflow::MemmappedFileSystemDirectoryElement*)
 T tensorflow::MemmappedFileSystemDirectoryElement::UnsafeArenaSwap(tensorflow::MemmappedFileSystemDirectoryElement*)
 T tensorflow::MemmappedFileSystemDirectoryElement::default_instance()
 T tensorflow::MemmappedFileSystemDirectoryElement::descriptor()
 T tensorflow::MemmappedFileSystemDirectoryElement::~MemmappedFileSystemDirectoryElement()
 T tensorflow::MemmappedFileSystemWriter::AddToDirectoryElement(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::MemmappedFileSystemWriter::AdjustAlignment(unsigned long long)
 T tensorflow::MemmappedFileSystemWriter::FlushAndClose()
 T tensorflow::MemmappedFileSystemWriter::InitializeToFile(tensorflow::Env*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::MemmappedFileSystemWriter::SaveTensor(tensorflow::Tensor const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::MemoryInfo::ArenaDtor(void*)
 T tensorflow::MemoryInfo::ByteSizeLong() const
 T tensorflow::MemoryInfo::Clear()
 T tensorflow::MemoryInfo::CopyFrom(tensorflow::MemoryInfo const&)
 T tensorflow::MemoryInfo::GetMetadata() const
 T tensorflow::MemoryInfo::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::MemoryInfo::InternalSwap(tensorflow::MemoryInfo*)
 T tensorflow::MemoryInfo::IsInitialized() const
 T tensorflow::MemoryInfo::MemoryInfo()
 T tensorflow::MemoryInfo::MemoryInfo(tensorflow::MemoryInfo const&)
 T tensorflow::MemoryInfo::MergeFrom(tensorflow::MemoryInfo const&)
 T tensorflow::MemoryInfo::SetCachedSize(int) const
 T tensorflow::MemoryInfo::SharedCtor()
 T tensorflow::MemoryInfo::SharedDtor()
 T tensorflow::MemoryInfo::Swap(tensorflow::MemoryInfo*)
 T tensorflow::MemoryInfo::UnsafeArenaSwap(tensorflow::MemoryInfo*)
 T tensorflow::MemoryInfo::default_instance()
 T tensorflow::MemoryInfo::descriptor()
 T tensorflow::MemoryInfo::~MemoryInfo()
 T tensorflow::MemoryLogRawAllocation::ArenaDtor(void*)
 T tensorflow::MemoryLogRawAllocation::ByteSizeLong() const
 T tensorflow::MemoryLogRawAllocation::Clear()
 T tensorflow::MemoryLogRawAllocation::CopyFrom(tensorflow::MemoryLogRawAllocation const&)
 T tensorflow::MemoryLogRawAllocation::GetMetadata() const
 T tensorflow::MemoryLogRawAllocation::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::MemoryLogRawAllocation::InternalSwap(tensorflow::MemoryLogRawAllocation*)
 T tensorflow::MemoryLogRawAllocation::IsInitialized() const
 T tensorflow::MemoryLogRawAllocation::MemoryLogRawAllocation()
 T tensorflow::MemoryLogRawAllocation::MemoryLogRawAllocation(tensorflow::MemoryLogRawAllocation const&)
 T tensorflow::MemoryLogRawAllocation::MergeFrom(tensorflow::MemoryLogRawAllocation const&)
 T tensorflow::MemoryLogRawAllocation::SetCachedSize(int) const
 T tensorflow::MemoryLogRawAllocation::SharedCtor()
 T tensorflow::MemoryLogRawAllocation::SharedDtor()
 T tensorflow::MemoryLogRawAllocation::Swap(tensorflow::MemoryLogRawAllocation*)
 T tensorflow::MemoryLogRawAllocation::UnsafeArenaSwap(tensorflow::MemoryLogRawAllocation*)
 T tensorflow::MemoryLogRawAllocation::default_instance()
 T tensorflow::MemoryLogRawAllocation::descriptor()
 T tensorflow::MemoryLogRawAllocation::~MemoryLogRawAllocation()
 T tensorflow::MemoryLogRawDeallocation::ArenaDtor(void*)
 T tensorflow::MemoryLogRawDeallocation::ByteSizeLong() const
 T tensorflow::MemoryLogRawDeallocation::Clear()
 T tensorflow::MemoryLogRawDeallocation::CopyFrom(tensorflow::MemoryLogRawDeallocation const&)
 T tensorflow::MemoryLogRawDeallocation::GetMetadata() const
 T tensorflow::MemoryLogRawDeallocation::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::MemoryLogRawDeallocation::InternalSwap(tensorflow::MemoryLogRawDeallocation*)
 T tensorflow::MemoryLogRawDeallocation::IsInitialized() const
 T tensorflow::MemoryLogRawDeallocation::MemoryLogRawDeallocation()
 T tensorflow::MemoryLogRawDeallocation::MemoryLogRawDeallocation(tensorflow::MemoryLogRawDeallocation const&)
 T tensorflow::MemoryLogRawDeallocation::MergeFrom(tensorflow::MemoryLogRawDeallocation const&)
 T tensorflow::MemoryLogRawDeallocation::SetCachedSize(int) const
 T tensorflow::MemoryLogRawDeallocation::SharedCtor()
 T tensorflow::MemoryLogRawDeallocation::SharedDtor()
 T tensorflow::MemoryLogRawDeallocation::Swap(tensorflow::MemoryLogRawDeallocation*)
 T tensorflow::MemoryLogRawDeallocation::UnsafeArenaSwap(tensorflow::MemoryLogRawDeallocation*)
 T tensorflow::MemoryLogRawDeallocation::default_instance()
 T tensorflow::MemoryLogRawDeallocation::descriptor()
 T tensorflow::MemoryLogRawDeallocation::~MemoryLogRawDeallocation()
 T tensorflow::MemoryLogStep::ArenaDtor(void*)
 T tensorflow::MemoryLogStep::ByteSizeLong() const
 T tensorflow::MemoryLogStep::Clear()
 T tensorflow::MemoryLogStep::CopyFrom(tensorflow::MemoryLogStep const&)
 T tensorflow::MemoryLogStep::GetMetadata() const
 T tensorflow::MemoryLogStep::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::MemoryLogStep::InternalSwap(tensorflow::MemoryLogStep*)
 T tensorflow::MemoryLogStep::IsInitialized() const
 T tensorflow::MemoryLogStep::MemoryLogStep()
 T tensorflow::MemoryLogStep::MemoryLogStep(tensorflow::MemoryLogStep const&)
 T tensorflow::MemoryLogStep::MergeFrom(tensorflow::MemoryLogStep const&)
 T tensorflow::MemoryLogStep::SetCachedSize(int) const
 T tensorflow::MemoryLogStep::SharedCtor()
 T tensorflow::MemoryLogStep::SharedDtor()
 T tensorflow::MemoryLogStep::Swap(tensorflow::MemoryLogStep*)
 T tensorflow::MemoryLogStep::UnsafeArenaSwap(tensorflow::MemoryLogStep*)
 T tensorflow::MemoryLogStep::default_instance()
 T tensorflow::MemoryLogStep::descriptor()
 T tensorflow::MemoryLogStep::~MemoryLogStep()
 T tensorflow::MemoryLogTensorAllocation::ArenaDtor(void*)
 T tensorflow::MemoryLogTensorAllocation::ByteSizeLong() const
 T tensorflow::MemoryLogTensorAllocation::Clear()
 T tensorflow::MemoryLogTensorAllocation::CopyFrom(tensorflow::MemoryLogTensorAllocation const&)
 T tensorflow::MemoryLogTensorAllocation::GetMetadata() const
 T tensorflow::MemoryLogTensorAllocation::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::MemoryLogTensorAllocation::InternalSwap(tensorflow::MemoryLogTensorAllocation*)
 T tensorflow::MemoryLogTensorAllocation::IsInitialized() const
 T tensorflow::MemoryLogTensorAllocation::MemoryLogTensorAllocation()
 T tensorflow::MemoryLogTensorAllocation::MemoryLogTensorAllocation(tensorflow::MemoryLogTensorAllocation const&)
 T tensorflow::MemoryLogTensorAllocation::MergeFrom(tensorflow::MemoryLogTensorAllocation const&)
 T tensorflow::MemoryLogTensorAllocation::SetCachedSize(int) const
 T tensorflow::MemoryLogTensorAllocation::SharedCtor()
 T tensorflow::MemoryLogTensorAllocation::SharedDtor()
 T tensorflow::MemoryLogTensorAllocation::Swap(tensorflow::MemoryLogTensorAllocation*)
 T tensorflow::MemoryLogTensorAllocation::UnsafeArenaSwap(tensorflow::MemoryLogTensorAllocation*)
 T tensorflow::MemoryLogTensorAllocation::_slow_mutable_tensor()
 T tensorflow::MemoryLogTensorAllocation::_slow_release_tensor()
 T tensorflow::MemoryLogTensorAllocation::default_instance()
 T tensorflow::MemoryLogTensorAllocation::descriptor()
 T tensorflow::MemoryLogTensorAllocation::unsafe_arena_release_tensor()
 T tensorflow::MemoryLogTensorAllocation::unsafe_arena_set_allocated_tensor(tensorflow::TensorDescription*)
 T tensorflow::MemoryLogTensorAllocation::~MemoryLogTensorAllocation()
 T tensorflow::MemoryLogTensorDeallocation::ArenaDtor(void*)
 T tensorflow::MemoryLogTensorDeallocation::ByteSizeLong() const
 T tensorflow::MemoryLogTensorDeallocation::Clear()
 T tensorflow::MemoryLogTensorDeallocation::CopyFrom(tensorflow::MemoryLogTensorDeallocation const&)
 T tensorflow::MemoryLogTensorDeallocation::GetMetadata() const
 T tensorflow::MemoryLogTensorDeallocation::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::MemoryLogTensorDeallocation::InternalSwap(tensorflow::MemoryLogTensorDeallocation*)
 T tensorflow::MemoryLogTensorDeallocation::IsInitialized() const
 T tensorflow::MemoryLogTensorDeallocation::MemoryLogTensorDeallocation()
 T tensorflow::MemoryLogTensorDeallocation::MemoryLogTensorDeallocation(tensorflow::MemoryLogTensorDeallocation const&)
 T tensorflow::MemoryLogTensorDeallocation::MergeFrom(tensorflow::MemoryLogTensorDeallocation const&)
 T tensorflow::MemoryLogTensorDeallocation::SetCachedSize(int) const
 T tensorflow::MemoryLogTensorDeallocation::SharedCtor()
 T tensorflow::MemoryLogTensorDeallocation::SharedDtor()
 T tensorflow::MemoryLogTensorDeallocation::Swap(tensorflow::MemoryLogTensorDeallocation*)
 T tensorflow::MemoryLogTensorDeallocation::UnsafeArenaSwap(tensorflow::MemoryLogTensorDeallocation*)
 T tensorflow::MemoryLogTensorDeallocation::default_instance()
 T tensorflow::MemoryLogTensorDeallocation::descriptor()
 T tensorflow::MemoryLogTensorDeallocation::~MemoryLogTensorDeallocation()
 T tensorflow::MemoryLogTensorOutput::ArenaDtor(void*)
 T tensorflow::MemoryLogTensorOutput::ByteSizeLong() const
 T tensorflow::MemoryLogTensorOutput::Clear()
 T tensorflow::MemoryLogTensorOutput::CopyFrom(tensorflow::MemoryLogTensorOutput const&)
 T tensorflow::MemoryLogTensorOutput::GetMetadata() const
 T tensorflow::MemoryLogTensorOutput::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::MemoryLogTensorOutput::InternalSwap(tensorflow::MemoryLogTensorOutput*)
 T tensorflow::MemoryLogTensorOutput::IsInitialized() const
 T tensorflow::MemoryLogTensorOutput::MemoryLogTensorOutput()
 T tensorflow::MemoryLogTensorOutput::MemoryLogTensorOutput(tensorflow::MemoryLogTensorOutput const&)
 T tensorflow::MemoryLogTensorOutput::MergeFrom(tensorflow::MemoryLogTensorOutput const&)
 T tensorflow::MemoryLogTensorOutput::SetCachedSize(int) const
 T tensorflow::MemoryLogTensorOutput::SharedCtor()
 T tensorflow::MemoryLogTensorOutput::SharedDtor()
 T tensorflow::MemoryLogTensorOutput::Swap(tensorflow::MemoryLogTensorOutput*)
 T tensorflow::MemoryLogTensorOutput::UnsafeArenaSwap(tensorflow::MemoryLogTensorOutput*)
 T tensorflow::MemoryLogTensorOutput::_slow_mutable_tensor()
 T tensorflow::MemoryLogTensorOutput::_slow_release_tensor()
 T tensorflow::MemoryLogTensorOutput::default_instance()
 T tensorflow::MemoryLogTensorOutput::descriptor()
 T tensorflow::MemoryLogTensorOutput::unsafe_arena_release_tensor()
 T tensorflow::MemoryLogTensorOutput::unsafe_arena_set_allocated_tensor(tensorflow::TensorDescription*)
 T tensorflow::MemoryLogTensorOutput::~MemoryLogTensorOutput()
 T tensorflow::MemoryStats::ArenaDtor(void*)
 T tensorflow::MemoryStats::ByteSizeLong() const
 T tensorflow::MemoryStats::Clear()
 T tensorflow::MemoryStats::CopyFrom(tensorflow::MemoryStats const&)
 T tensorflow::MemoryStats::GetMetadata() const
 T tensorflow::MemoryStats::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::MemoryStats::InternalSwap(tensorflow::MemoryStats*)
 T tensorflow::MemoryStats::IsInitialized() const
 T tensorflow::MemoryStats::MemoryStats()
 T tensorflow::MemoryStats::MemoryStats(tensorflow::MemoryStats const&)
 T tensorflow::MemoryStats::MergeFrom(tensorflow::MemoryStats const&)
 T tensorflow::MemoryStats::SetCachedSize(int) const
 T tensorflow::MemoryStats::SharedCtor()
 T tensorflow::MemoryStats::SharedDtor()
 T tensorflow::MemoryStats::Swap(tensorflow::MemoryStats*)
 T tensorflow::MemoryStats::UnsafeArenaSwap(tensorflow::MemoryStats*)
 T tensorflow::MemoryStats::default_instance()
 T tensorflow::MemoryStats::descriptor()
 T tensorflow::MemoryStats::~MemoryStats()
 T tensorflow::MemoryTypeForOutput(tensorflow::DeviceType const&, tensorflow::Graph const*, tensorflow::Node const*, int, tensorflow::MemoryType*)
 T tensorflow::MemoryTypesForNode(tensorflow::OpRegistryInterface const*, tensorflow::DeviceType const&, tensorflow::NodeDef const&, tensorflow::gtl::InlinedVector<tensorflow::MemoryType, 4>*, tensorflow::gtl::InlinedVector<tensorflow::MemoryType, 4>*)
 T tensorflow::MergeBundles(tensorflow::Env*, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::StringPiece)
 T tensorflow::MetaFilename[abi:cxx11](tensorflow::StringPiece)
 T tensorflow::MetaGraphDef::ArenaDtor(void*)
 T tensorflow::MetaGraphDef::ByteSizeLong() const
 T tensorflow::MetaGraphDef::Clear()
 T tensorflow::MetaGraphDef::CopyFrom(tensorflow::MetaGraphDef const&)
 T tensorflow::MetaGraphDef::GetMetadata() const
 T tensorflow::MetaGraphDef::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::MetaGraphDef::InternalSwap(tensorflow::MetaGraphDef*)
 T tensorflow::MetaGraphDef::IsInitialized() const
 T tensorflow::MetaGraphDef::MergeFrom(tensorflow::MetaGraphDef const&)
 T tensorflow::MetaGraphDef::MetaGraphDef()
 T tensorflow::MetaGraphDef::MetaGraphDef(tensorflow::MetaGraphDef const&)
 T tensorflow::MetaGraphDef::MetaGraphDef_CollectionDefEntry::GetMetadata() const
 T tensorflow::MetaGraphDef::MetaGraphDef_CollectionDefEntry::MergeFrom(tensorflow::MetaGraphDef::MetaGraphDef_CollectionDefEntry const&)
 T tensorflow::MetaGraphDef::MetaGraphDef_CollectionDefEntry::MetaGraphDef_CollectionDefEntry()
 T tensorflow::MetaGraphDef::MetaGraphDef_SignatureDefEntry::GetMetadata() const
 T tensorflow::MetaGraphDef::MetaGraphDef_SignatureDefEntry::MergeFrom(tensorflow::MetaGraphDef::MetaGraphDef_SignatureDefEntry const&)
 T tensorflow::MetaGraphDef::MetaGraphDef_SignatureDefEntry::MetaGraphDef_SignatureDefEntry()
 T tensorflow::MetaGraphDef::SetCachedSize(int) const
 T tensorflow::MetaGraphDef::SharedCtor()
 T tensorflow::MetaGraphDef::SharedDtor()
 T tensorflow::MetaGraphDef::Swap(tensorflow::MetaGraphDef*)
 T tensorflow::MetaGraphDef::UnsafeArenaSwap(tensorflow::MetaGraphDef*)
 T tensorflow::MetaGraphDef::_slow_mutable_graph_def()
 T tensorflow::MetaGraphDef::_slow_mutable_meta_info_def()
 T tensorflow::MetaGraphDef::_slow_mutable_saver_def()
 T tensorflow::MetaGraphDef::_slow_release_graph_def()
 T tensorflow::MetaGraphDef::_slow_release_meta_info_def()
 T tensorflow::MetaGraphDef::_slow_release_saver_def()
 T tensorflow::MetaGraphDef::default_instance()
 T tensorflow::MetaGraphDef::descriptor()
 T tensorflow::MetaGraphDef::unsafe_arena_release_graph_def()
 T tensorflow::MetaGraphDef::unsafe_arena_release_meta_info_def()
 T tensorflow::MetaGraphDef::unsafe_arena_release_saver_def()
 T tensorflow::MetaGraphDef::unsafe_arena_set_allocated_graph_def(tensorflow::GraphDef*)
 T tensorflow::MetaGraphDef::unsafe_arena_set_allocated_meta_info_def(tensorflow::MetaGraphDef_MetaInfoDef*)
 T tensorflow::MetaGraphDef::unsafe_arena_set_allocated_saver_def(tensorflow::SaverDef*)
 T tensorflow::MetaGraphDef::~MetaGraphDef()
 T tensorflow::MetaGraphDef_MetaInfoDef::ArenaDtor(void*)
 T tensorflow::MetaGraphDef_MetaInfoDef::ByteSizeLong() const
 T tensorflow::MetaGraphDef_MetaInfoDef::Clear()
 T tensorflow::MetaGraphDef_MetaInfoDef::CopyFrom(tensorflow::MetaGraphDef_MetaInfoDef const&)
 T tensorflow::MetaGraphDef_MetaInfoDef::GetMetadata() const
 T tensorflow::MetaGraphDef_MetaInfoDef::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::MetaGraphDef_MetaInfoDef::InternalSwap(tensorflow::MetaGraphDef_MetaInfoDef*)
 T tensorflow::MetaGraphDef_MetaInfoDef::IsInitialized() const
 T tensorflow::MetaGraphDef_MetaInfoDef::MergeFrom(tensorflow::MetaGraphDef_MetaInfoDef const&)
 T tensorflow::MetaGraphDef_MetaInfoDef::MetaGraphDef_MetaInfoDef()
 T tensorflow::MetaGraphDef_MetaInfoDef::MetaGraphDef_MetaInfoDef(tensorflow::MetaGraphDef_MetaInfoDef const&)
 T tensorflow::MetaGraphDef_MetaInfoDef::SetCachedSize(int) const
 T tensorflow::MetaGraphDef_MetaInfoDef::SharedCtor()
 T tensorflow::MetaGraphDef_MetaInfoDef::SharedDtor()
 T tensorflow::MetaGraphDef_MetaInfoDef::Swap(tensorflow::MetaGraphDef_MetaInfoDef*)
 T tensorflow::MetaGraphDef_MetaInfoDef::UnsafeArenaSwap(tensorflow::MetaGraphDef_MetaInfoDef*)
 T tensorflow::MetaGraphDef_MetaInfoDef::_slow_mutable_any_info()
 T tensorflow::MetaGraphDef_MetaInfoDef::_slow_mutable_stripped_op_list()
 T tensorflow::MetaGraphDef_MetaInfoDef::_slow_release_any_info()
 T tensorflow::MetaGraphDef_MetaInfoDef::_slow_release_stripped_op_list()
 T tensorflow::MetaGraphDef_MetaInfoDef::default_instance()
 T tensorflow::MetaGraphDef_MetaInfoDef::descriptor()
 T tensorflow::MetaGraphDef_MetaInfoDef::unsafe_arena_release_any_info()
 T tensorflow::MetaGraphDef_MetaInfoDef::unsafe_arena_release_stripped_op_list()
 T tensorflow::MetaGraphDef_MetaInfoDef::unsafe_arena_set_allocated_stripped_op_list(tensorflow::OpList*)
 T tensorflow::MetaGraphDef_MetaInfoDef::~MetaGraphDef_MetaInfoDef()
 T tensorflow::MovingAverage::AddValue(double)
 T tensorflow::MovingAverage::Clear()
 T tensorflow::MovingAverage::GetAverage() const
 T tensorflow::MovingAverage::MovingAverage(int)
 T tensorflow::MovingAverage::~MovingAverage()
 T tensorflow::NameAttrList::ArenaDtor(void*)
 T tensorflow::NameAttrList::ByteSizeLong() const
 T tensorflow::NameAttrList::Clear()
 T tensorflow::NameAttrList::CopyFrom(tensorflow::NameAttrList const&)
 T tensorflow::NameAttrList::GetMetadata() const
 T tensorflow::NameAttrList::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::NameAttrList::InternalSwap(tensorflow::NameAttrList*)
 T tensorflow::NameAttrList::IsInitialized() const
 T tensorflow::NameAttrList::MergeFrom(tensorflow::NameAttrList const&)
 T tensorflow::NameAttrList::NameAttrList()
 T tensorflow::NameAttrList::NameAttrList(tensorflow::NameAttrList const&)
 T tensorflow::NameAttrList::NameAttrList_AttrEntry::GetMetadata() const
 T tensorflow::NameAttrList::NameAttrList_AttrEntry::MergeFrom(tensorflow::NameAttrList::NameAttrList_AttrEntry const&)
 T tensorflow::NameAttrList::NameAttrList_AttrEntry::NameAttrList_AttrEntry()
 T tensorflow::NameAttrList::SetCachedSize(int) const
 T tensorflow::NameAttrList::SharedCtor()
 T tensorflow::NameAttrList::SharedDtor()
 T tensorflow::NameAttrList::Swap(tensorflow::NameAttrList*)
 T tensorflow::NameAttrList::UnsafeArenaSwap(tensorflow::NameAttrList*)
 T tensorflow::NameAttrList::default_instance()
 T tensorflow::NameAttrList::descriptor()
 T tensorflow::NameAttrList::~NameAttrList()
 T tensorflow::NameRangesForNode(tensorflow::Node const&, tensorflow::OpDef const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<int, int>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<int, int> > > >*, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<int, int>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<int, int> > > >*)
 T tensorflow::NameRangesForNode(tensorflow::NodeDef const&, tensorflow::OpDef const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<int, int>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<int, int> > > >*, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<int, int>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<int, int> > > >*)
 T tensorflow::NamedDevice::ArenaDtor(void*)
 T tensorflow::NamedDevice::ByteSizeLong() const
 T tensorflow::NamedDevice::Clear()
 T tensorflow::NamedDevice::CopyFrom(tensorflow::NamedDevice const&)
 T tensorflow::NamedDevice::GetMetadata() const
 T tensorflow::NamedDevice::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::NamedDevice::InternalSwap(tensorflow::NamedDevice*)
 T tensorflow::NamedDevice::IsInitialized() const
 T tensorflow::NamedDevice::MergeFrom(tensorflow::NamedDevice const&)
 T tensorflow::NamedDevice::NamedDevice()
 T tensorflow::NamedDevice::NamedDevice(tensorflow::NamedDevice const&)
 T tensorflow::NamedDevice::SetCachedSize(int) const
 T tensorflow::NamedDevice::SharedCtor()
 T tensorflow::NamedDevice::SharedDtor()
 T tensorflow::NamedDevice::Swap(tensorflow::NamedDevice*)
 T tensorflow::NamedDevice::UnsafeArenaSwap(tensorflow::NamedDevice*)
 T tensorflow::NamedDevice::_slow_mutable_properties()
 T tensorflow::NamedDevice::_slow_release_properties()
 T tensorflow::NamedDevice::default_instance()
 T tensorflow::NamedDevice::descriptor()
 T tensorflow::NamedDevice::unsafe_arena_release_properties()
 T tensorflow::NamedDevice::unsafe_arena_set_allocated_properties(tensorflow::DeviceProperties*)
 T tensorflow::NamedDevice::~NamedDevice()
 T tensorflow::NamedTensorProto::ArenaDtor(void*)
 T tensorflow::NamedTensorProto::ByteSizeLong() const
 T tensorflow::NamedTensorProto::Clear()
 T tensorflow::NamedTensorProto::CopyFrom(tensorflow::NamedTensorProto const&)
 T tensorflow::NamedTensorProto::GetMetadata() const
 T tensorflow::NamedTensorProto::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::NamedTensorProto::InternalSwap(tensorflow::NamedTensorProto*)
 T tensorflow::NamedTensorProto::IsInitialized() const
 T tensorflow::NamedTensorProto::MergeFrom(tensorflow::NamedTensorProto const&)
 T tensorflow::NamedTensorProto::NamedTensorProto()
 T tensorflow::NamedTensorProto::NamedTensorProto(tensorflow::NamedTensorProto const&)
 T tensorflow::NamedTensorProto::SetCachedSize(int) const
 T tensorflow::NamedTensorProto::SharedCtor()
 T tensorflow::NamedTensorProto::SharedDtor()
 T tensorflow::NamedTensorProto::Swap(tensorflow::NamedTensorProto*)
 T tensorflow::NamedTensorProto::UnsafeArenaSwap(tensorflow::NamedTensorProto*)
 T tensorflow::NamedTensorProto::_slow_mutable_tensor()
 T tensorflow::NamedTensorProto::_slow_release_tensor()
 T tensorflow::NamedTensorProto::default_instance()
 T tensorflow::NamedTensorProto::descriptor()
 T tensorflow::NamedTensorProto::unsafe_arena_release_tensor()
 T tensorflow::NamedTensorProto::unsafe_arena_set_allocated_tensor(tensorflow::TensorProto*)
 T tensorflow::NamedTensorProto::~NamedTensorProto()
 T tensorflow::NewFunctionLibraryRuntime(tensorflow::DeviceMgr const*, tensorflow::Env*, tensorflow::Device*, int, tensorflow::FunctionLibraryDefinition const*, tensorflow::OptimizerOptions const&, std::function<tensorflow::Status (tensorflow::FunctionLibraryRuntime*, tensorflow::NodeDef const&, std::unique_ptr<tensorflow::OpKernel, std::default_delete<tensorflow::OpKernel> >*)>, tensorflow::ProcessFunctionLibraryRuntime*)
 T tensorflow::NewFunctionLibraryRuntime(tensorflow::DeviceMgr const*, tensorflow::Env*, tensorflow::Device*, int, tensorflow::FunctionLibraryDefinition const*, tensorflow::OptimizerOptions const&, tensorflow::ProcessFunctionLibraryRuntime*)
 T tensorflow::NewLocalExecutor(tensorflow::LocalExecutorParams const&, tensorflow::Graph const*, tensorflow::Executor**)
 T tensorflow::NewLocalRendezvous()
 T tensorflow::NewName[abi:cxx11](tensorflow::Node const*, bool)
 T tensorflow::NewSession(tensorflow::SessionOptions const&)
 T tensorflow::NewSession(tensorflow::SessionOptions const&, tensorflow::Session**)
 T tensorflow::Node::AddAttrHelper(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::Node::Clear()
 T tensorflow::Node::ClearAttr(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::Node::DebugString[abi:cxx11]() const
 T tensorflow::Node::GetNodeClassForOp(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::Node::Initialize(int, int, std::shared_ptr<tensorflow::NodeProperties>)
 T tensorflow::Node::MaybeCopyOnWrite()
 T tensorflow::Node::Node()
 T tensorflow::Node::attrs() const
 T tensorflow::Node::def() const
 T tensorflow::Node::in_nodes() const
 T tensorflow::Node::input_edge(int, tensorflow::Edge const**) const
 T tensorflow::Node::input_edges(std::vector<tensorflow::Edge const*, std::allocator<tensorflow::Edge const*> >*) const
 T tensorflow::Node::input_node(int, tensorflow::Node const**) const
 T tensorflow::Node::input_node(int, tensorflow::Node**) const
 T tensorflow::Node::input_type(int) const
 T tensorflow::Node::input_types() const
 T tensorflow::Node::name[abi:cxx11]() const
 T tensorflow::Node::num_inputs() const
 T tensorflow::Node::num_outputs() const
 T tensorflow::Node::op_def() const
 T tensorflow::Node::out_nodes() const
 T tensorflow::Node::output_type(int) const
 T tensorflow::Node::output_types() const
 T tensorflow::Node::requested_device[abi:cxx11]() const
 T tensorflow::Node::requested_inputs[abi:cxx11]() const
 T tensorflow::Node::set_requested_device(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::Node::type_string[abi:cxx11]() const
 T tensorflow::NodeBuilder::AddIndexError(tensorflow::Node*, int)
 T tensorflow::NodeBuilder::ControlInput(tensorflow::Node*)
 T tensorflow::NodeBuilder::ControlInputs(tensorflow::gtl::ArraySlice<tensorflow::Node*>)
 T tensorflow::NodeBuilder::Device(tensorflow::StringPiece)
 T tensorflow::NodeBuilder::Finalize(tensorflow::Graph*, tensorflow::Node**) const
 T tensorflow::NodeBuilder::GetOutputType(tensorflow::Node*, int, tensorflow::DataType*)
 T tensorflow::NodeBuilder::Input(tensorflow::Node*, int)
 T tensorflow::NodeBuilder::Input(tensorflow::NodeBuilder::NodeOut)
 T tensorflow::NodeBuilder::Input(tensorflow::gtl::ArraySlice<tensorflow::NodeBuilder::NodeOut>)
 T tensorflow::NodeBuilder::NodeBuilder(tensorflow::NodeDefBuilder const&)
 T tensorflow::NodeBuilder::NodeBuilder(tensorflow::StringPiece, tensorflow::OpDef const*)
 T tensorflow::NodeBuilder::NodeBuilder(tensorflow::StringPiece, tensorflow::StringPiece, tensorflow::OpRegistryInterface const*)
 T tensorflow::NodeBuilder::NodeOut::NodeOut()
 T tensorflow::NodeBuilder::NodeOut::NodeOut(tensorflow::Node*, int)
 T tensorflow::NodeBuilder::NodeOut::NodeOut(tensorflow::StringPiece, int, tensorflow::DataType)
 T tensorflow::NodeDef::ArenaDtor(void*)
 T tensorflow::NodeDef::ByteSizeLong() const
 T tensorflow::NodeDef::Clear()
 T tensorflow::NodeDef::CopyFrom(tensorflow::NodeDef const&)
 T tensorflow::NodeDef::GetMetadata() const
 T tensorflow::NodeDef::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::NodeDef::InternalSwap(tensorflow::NodeDef*)
 T tensorflow::NodeDef::IsInitialized() const
 T tensorflow::NodeDef::MergeFrom(tensorflow::NodeDef const&)
 T tensorflow::NodeDef::NodeDef()
 T tensorflow::NodeDef::NodeDef(tensorflow::NodeDef const&)
 T tensorflow::NodeDef::NodeDef_AttrEntry::GetMetadata() const
 T tensorflow::NodeDef::NodeDef_AttrEntry::MergeFrom(tensorflow::NodeDef::NodeDef_AttrEntry const&)
 T tensorflow::NodeDef::NodeDef_AttrEntry::NodeDef_AttrEntry()
 T tensorflow::NodeDef::SetCachedSize(int) const
 T tensorflow::NodeDef::SharedCtor()
 T tensorflow::NodeDef::SharedDtor()
 T tensorflow::NodeDef::Swap(tensorflow::NodeDef*)
 T tensorflow::NodeDef::UnsafeArenaSwap(tensorflow::NodeDef*)
 T tensorflow::NodeDef::default_instance()
 T tensorflow::NodeDef::descriptor()
 T tensorflow::NodeDef::~NodeDef()
 T tensorflow::NodeDefBuilder::AddInput(tensorflow::StringPiece, int)
 T tensorflow::NodeDefBuilder::Attr(tensorflow::StringPiece, bool)
 T tensorflow::NodeDefBuilder::Attr(tensorflow::StringPiece, char const*)
 T tensorflow::NodeDefBuilder::Attr(tensorflow::StringPiece, double)
 T tensorflow::NodeDefBuilder::Attr(tensorflow::StringPiece, float)
 T tensorflow::NodeDefBuilder::Attr(tensorflow::StringPiece, int)
 T tensorflow::NodeDefBuilder::Attr(tensorflow::StringPiece, long long)
 T tensorflow::NodeDefBuilder::Attr(tensorflow::StringPiece, std::vector<bool, std::allocator<bool> > const&)
 T tensorflow::NodeDefBuilder::Attr(tensorflow::StringPiece, tensorflow::AttrValue const&)
 T tensorflow::NodeDefBuilder::Attr(tensorflow::StringPiece, tensorflow::DataType)
 T tensorflow::NodeDefBuilder::Attr(tensorflow::StringPiece, tensorflow::NameAttrList const&)
 T tensorflow::NodeDefBuilder::Attr(tensorflow::StringPiece, tensorflow::PartialTensorShape const&)
 T tensorflow::NodeDefBuilder::Attr(tensorflow::StringPiece, tensorflow::StringPiece)
 T tensorflow::NodeDefBuilder::Attr(tensorflow::StringPiece, tensorflow::Tensor const&)
 T tensorflow::NodeDefBuilder::Attr(tensorflow::StringPiece, tensorflow::TensorProto const&)
 T tensorflow::NodeDefBuilder::Attr(tensorflow::StringPiece, tensorflow::gtl::ArraySlice<bool>)
 T tensorflow::NodeDefBuilder::Attr(tensorflow::StringPiece, tensorflow::gtl::ArraySlice<char const*>)
 T tensorflow::NodeDefBuilder::Attr(tensorflow::StringPiece, tensorflow::gtl::ArraySlice<float>)
 T tensorflow::NodeDefBuilder::Attr(tensorflow::StringPiece, tensorflow::gtl::ArraySlice<int>)
 T tensorflow::NodeDefBuilder::Attr(tensorflow::StringPiece, tensorflow::gtl::ArraySlice<long long>)
 T tensorflow::NodeDefBuilder::Attr(tensorflow::StringPiece, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
 T tensorflow::NodeDefBuilder::Attr(tensorflow::StringPiece, tensorflow::gtl::ArraySlice<tensorflow::DataType>)
 T tensorflow::NodeDefBuilder::Attr(tensorflow::StringPiece, tensorflow::gtl::ArraySlice<tensorflow::NameAttrList>)
 T tensorflow::NodeDefBuilder::Attr(tensorflow::StringPiece, tensorflow::gtl::ArraySlice<tensorflow::PartialTensorShape>)
 T tensorflow::NodeDefBuilder::Attr(tensorflow::StringPiece, tensorflow::gtl::ArraySlice<tensorflow::StringPiece>)
 T tensorflow::NodeDefBuilder::Attr(tensorflow::StringPiece, tensorflow::gtl::ArraySlice<tensorflow::Tensor>)
 T tensorflow::NodeDefBuilder::Attr(tensorflow::StringPiece, tensorflow::gtl::ArraySlice<tensorflow::TensorShape>)
 T tensorflow::NodeDefBuilder::Attr(tensorflow::StringPiece, tensorflow::gtl::ArraySlice<tensorflow::TensorShapeProto>)
 T tensorflow::NodeDefBuilder::ControlInput(tensorflow::StringPiece)
 T tensorflow::NodeDefBuilder::Device(tensorflow::StringPiece)
 T tensorflow::NodeDefBuilder::Finalize(tensorflow::NodeDef*) const
 T tensorflow::NodeDefBuilder::Initialize()
 T tensorflow::NodeDefBuilder::Input(std::function<tensorflow::Status (tensorflow::OpDef const&, int, tensorflow::NodeDef const&, tensorflow::NodeDefBuilder*)>)
 T tensorflow::NodeDefBuilder::Input(tensorflow::NodeDefBuilder::NodeOut const&)
 T tensorflow::NodeDefBuilder::Input(tensorflow::StringPiece, int, tensorflow::DataType)
 T tensorflow::NodeDefBuilder::Input(tensorflow::gtl::ArraySlice<tensorflow::NodeDefBuilder::NodeOut>)
 T tensorflow::NodeDefBuilder::ListInput(tensorflow::OpDef_ArgDef const*, tensorflow::gtl::ArraySlice<tensorflow::NodeDefBuilder::NodeOut>)
 T tensorflow::NodeDefBuilder::NextArgAvailable()
 T tensorflow::NodeDefBuilder::NextArgDef()
 T tensorflow::NodeDefBuilder::NodeDefBuilder(tensorflow::StringPiece, tensorflow::OpDef const*)
 T tensorflow::NodeDefBuilder::NodeDefBuilder(tensorflow::StringPiece, tensorflow::StringPiece, tensorflow::OpRegistryInterface const*)
 T tensorflow::NodeDefBuilder::NodeOut::NodeOut()
 T tensorflow::NodeDefBuilder::NodeOut::NodeOut(tensorflow::StringPiece, int, tensorflow::DataType)
 T tensorflow::NodeDefBuilder::NodeOut::Reset(tensorflow::StringPiece, int, tensorflow::DataType)
 T tensorflow::NodeDefBuilder::SingleInput(tensorflow::OpDef_ArgDef const*, tensorflow::StringPiece, int, tensorflow::DataType)
 T tensorflow::NodeDefBuilder::VerifyInputRef(tensorflow::OpDef_ArgDef const*, tensorflow::DataType)
 T tensorflow::NodeDefBuilder::VerifyInputType(tensorflow::OpDef_ArgDef const*, tensorflow::DataType, tensorflow::DataType)
 T tensorflow::NodeDefHash(tensorflow::NodeDef const&, tensorflow::EqualGraphDefOptions const&)
 T tensorflow::NodeExecStats::ArenaDtor(void*)
 T tensorflow::NodeExecStats::ByteSizeLong() const
 T tensorflow::NodeExecStats::Clear()
 T tensorflow::NodeExecStats::CopyFrom(tensorflow::NodeExecStats const&)
 T tensorflow::NodeExecStats::GetMetadata() const
 T tensorflow::NodeExecStats::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::NodeExecStats::InternalSwap(tensorflow::NodeExecStats*)
 T tensorflow::NodeExecStats::IsInitialized() const
 T tensorflow::NodeExecStats::MergeFrom(tensorflow::NodeExecStats const&)
 T tensorflow::NodeExecStats::NodeExecStats()
 T tensorflow::NodeExecStats::NodeExecStats(tensorflow::NodeExecStats const&)
 T tensorflow::NodeExecStats::SetCachedSize(int) const
 T tensorflow::NodeExecStats::SharedCtor()
 T tensorflow::NodeExecStats::SharedDtor()
 T tensorflow::NodeExecStats::Swap(tensorflow::NodeExecStats*)
 T tensorflow::NodeExecStats::UnsafeArenaSwap(tensorflow::NodeExecStats*)
 T tensorflow::NodeExecStats::_slow_mutable_memory_stats()
 T tensorflow::NodeExecStats::_slow_release_memory_stats()
 T tensorflow::NodeExecStats::default_instance()
 T tensorflow::NodeExecStats::descriptor()
 T tensorflow::NodeExecStats::unsafe_arena_release_memory_stats()
 T tensorflow::NodeExecStats::unsafe_arena_set_allocated_memory_stats(tensorflow::MemoryStats*)
 T tensorflow::NodeExecStats::~NodeExecStats()
 T tensorflow::NodeExecStatsWrapper::AddAllocation(tensorflow::Allocator*, tensorflow::TrackingAllocator*)
 T tensorflow::NodeExecStatsWrapper::Finalize()
 T tensorflow::NodeExecStatsWrapper::NodeExecStatsWrapper()
 T tensorflow::NodeExecStatsWrapper::NodeExecStatsWrapper(tensorflow::NodeExecStats*)
 T tensorflow::NodeNameFullPrefix(tensorflow::StringPiece const&)
 T tensorflow::NodeNamePrefix(tensorflow::StringPiece const&)
 T tensorflow::NodeOut::dtype() const
 T tensorflow::NodeOut::name[abi:cxx11]() const
 T tensorflow::NodeOutput::ArenaDtor(void*)
 T tensorflow::NodeOutput::ByteSizeLong() const
 T tensorflow::NodeOutput::Clear()
 T tensorflow::NodeOutput::CopyFrom(tensorflow::NodeOutput const&)
 T tensorflow::NodeOutput::GetMetadata() const
 T tensorflow::NodeOutput::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::NodeOutput::InternalSwap(tensorflow::NodeOutput*)
 T tensorflow::NodeOutput::IsInitialized() const
 T tensorflow::NodeOutput::MergeFrom(tensorflow::NodeOutput const&)
 T tensorflow::NodeOutput::NodeOutput()
 T tensorflow::NodeOutput::NodeOutput(tensorflow::NodeOutput const&)
 T tensorflow::NodeOutput::SetCachedSize(int) const
 T tensorflow::NodeOutput::SharedCtor()
 T tensorflow::NodeOutput::SharedDtor()
 T tensorflow::NodeOutput::Swap(tensorflow::NodeOutput*)
 T tensorflow::NodeOutput::UnsafeArenaSwap(tensorflow::NodeOutput*)
 T tensorflow::NodeOutput::_slow_mutable_tensor_description()
 T tensorflow::NodeOutput::_slow_release_tensor_description()
 T tensorflow::NodeOutput::default_instance()
 T tensorflow::NodeOutput::descriptor()
 T tensorflow::NodeOutput::unsafe_arena_release_tensor_description()
 T tensorflow::NodeOutput::unsafe_arena_set_allocated_tensor_description(tensorflow::TensorDescription*)
 T tensorflow::NodeOutput::~NodeOutput()
 T tensorflow::NumberTypes()
 T tensorflow::OpDef::ArenaDtor(void*)
 T tensorflow::OpDef::ByteSizeLong() const
 T tensorflow::OpDef::Clear()
 T tensorflow::OpDef::CopyFrom(tensorflow::OpDef const&)
 T tensorflow::OpDef::GetMetadata() const
 T tensorflow::OpDef::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::OpDef::InternalSwap(tensorflow::OpDef*)
 T tensorflow::OpDef::IsInitialized() const
 T tensorflow::OpDef::MergeFrom(tensorflow::OpDef const&)
 T tensorflow::OpDef::OpDef()
 T tensorflow::OpDef::OpDef(tensorflow::OpDef const&)
 T tensorflow::OpDef::SetCachedSize(int) const
 T tensorflow::OpDef::SharedCtor()
 T tensorflow::OpDef::SharedDtor()
 T tensorflow::OpDef::Swap(tensorflow::OpDef*)
 T tensorflow::OpDef::UnsafeArenaSwap(tensorflow::OpDef*)
 T tensorflow::OpDef::_slow_mutable_deprecation()
 T tensorflow::OpDef::_slow_release_deprecation()
 T tensorflow::OpDef::default_instance()
 T tensorflow::OpDef::descriptor()
 T tensorflow::OpDef::unsafe_arena_release_deprecation()
 T tensorflow::OpDef::unsafe_arena_set_allocated_deprecation(tensorflow::OpDeprecation*)
 T tensorflow::OpDef::~OpDef()
 T tensorflow::OpDefAddedDefaultsUnchanged(tensorflow::OpDef const&, tensorflow::OpDef const&, tensorflow::OpDef const&)
 T tensorflow::OpDefBuilder::Attr(tensorflow::StringPiece)
 T tensorflow::OpDefBuilder::Deprecated(int, tensorflow::StringPiece)
 T tensorflow::OpDefBuilder::Doc(tensorflow::StringPiece)
 T tensorflow::OpDefBuilder::Finalize(tensorflow::OpRegistrationData*) const
 T tensorflow::OpDefBuilder::Input(tensorflow::StringPiece)
 T tensorflow::OpDefBuilder::OpDefBuilder(tensorflow::StringPiece)
 T tensorflow::OpDefBuilder::Output(tensorflow::StringPiece)
 T tensorflow::OpDefBuilder::SetAllowsUninitializedInput()
 T tensorflow::OpDefBuilder::SetIsAggregate()
 T tensorflow::OpDefBuilder::SetIsCommutative()
 T tensorflow::OpDefBuilder::SetIsStateful()
 T tensorflow::OpDefBuilder::SetShapeFn(tensorflow::Status (*)(tensorflow::shape_inference::InferenceContext*))
 T tensorflow::OpDefCompatible(tensorflow::OpDef const&, tensorflow::OpDef const&)
 T tensorflow::OpDefEqual(tensorflow::OpDef const&, tensorflow::OpDef const&)
 T tensorflow::OpDefHash(tensorflow::OpDef const&)
 T tensorflow::OpDef_ArgDef::ArenaDtor(void*)
 T tensorflow::OpDef_ArgDef::ByteSizeLong() const
 T tensorflow::OpDef_ArgDef::Clear()
 T tensorflow::OpDef_ArgDef::CopyFrom(tensorflow::OpDef_ArgDef const&)
 T tensorflow::OpDef_ArgDef::GetMetadata() const
 T tensorflow::OpDef_ArgDef::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::OpDef_ArgDef::InternalSwap(tensorflow::OpDef_ArgDef*)
 T tensorflow::OpDef_ArgDef::IsInitialized() const
 T tensorflow::OpDef_ArgDef::MergeFrom(tensorflow::OpDef_ArgDef const&)
 T tensorflow::OpDef_ArgDef::OpDef_ArgDef()
 T tensorflow::OpDef_ArgDef::OpDef_ArgDef(tensorflow::OpDef_ArgDef const&)
 T tensorflow::OpDef_ArgDef::SetCachedSize(int) const
 T tensorflow::OpDef_ArgDef::SharedCtor()
 T tensorflow::OpDef_ArgDef::SharedDtor()
 T tensorflow::OpDef_ArgDef::Swap(tensorflow::OpDef_ArgDef*)
 T tensorflow::OpDef_ArgDef::UnsafeArenaSwap(tensorflow::OpDef_ArgDef*)
 T tensorflow::OpDef_ArgDef::default_instance()
 T tensorflow::OpDef_ArgDef::descriptor()
 T tensorflow::OpDef_ArgDef::~OpDef_ArgDef()
 T tensorflow::OpDef_AttrDef::ArenaDtor(void*)
 T tensorflow::OpDef_AttrDef::ByteSizeLong() const
 T tensorflow::OpDef_AttrDef::Clear()
 T tensorflow::OpDef_AttrDef::CopyFrom(tensorflow::OpDef_AttrDef const&)
 T tensorflow::OpDef_AttrDef::GetMetadata() const
 T tensorflow::OpDef_AttrDef::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::OpDef_AttrDef::InternalSwap(tensorflow::OpDef_AttrDef*)
 T tensorflow::OpDef_AttrDef::IsInitialized() const
 T tensorflow::OpDef_AttrDef::MergeFrom(tensorflow::OpDef_AttrDef const&)
 T tensorflow::OpDef_AttrDef::OpDef_AttrDef()
 T tensorflow::OpDef_AttrDef::OpDef_AttrDef(tensorflow::OpDef_AttrDef const&)
 T tensorflow::OpDef_AttrDef::SetCachedSize(int) const
 T tensorflow::OpDef_AttrDef::SharedCtor()
 T tensorflow::OpDef_AttrDef::SharedDtor()
 T tensorflow::OpDef_AttrDef::Swap(tensorflow::OpDef_AttrDef*)
 T tensorflow::OpDef_AttrDef::UnsafeArenaSwap(tensorflow::OpDef_AttrDef*)
 T tensorflow::OpDef_AttrDef::_slow_mutable_allowed_values()
 T tensorflow::OpDef_AttrDef::_slow_mutable_default_value()
 T tensorflow::OpDef_AttrDef::_slow_release_allowed_values()
 T tensorflow::OpDef_AttrDef::_slow_release_default_value()
 T tensorflow::OpDef_AttrDef::default_instance()
 T tensorflow::OpDef_AttrDef::descriptor()
 T tensorflow::OpDef_AttrDef::unsafe_arena_release_allowed_values()
 T tensorflow::OpDef_AttrDef::unsafe_arena_release_default_value()
 T tensorflow::OpDef_AttrDef::unsafe_arena_set_allocated_allowed_values(tensorflow::AttrValue*)
 T tensorflow::OpDef_AttrDef::unsafe_arena_set_allocated_default_value(tensorflow::AttrValue*)
 T tensorflow::OpDef_AttrDef::~OpDef_AttrDef()
 T tensorflow::OpDeprecation::ArenaDtor(void*)
 T tensorflow::OpDeprecation::ByteSizeLong() const
 T tensorflow::OpDeprecation::Clear()
 T tensorflow::OpDeprecation::CopyFrom(tensorflow::OpDeprecation const&)
 T tensorflow::OpDeprecation::GetMetadata() const
 T tensorflow::OpDeprecation::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::OpDeprecation::InternalSwap(tensorflow::OpDeprecation*)
 T tensorflow::OpDeprecation::IsInitialized() const
 T tensorflow::OpDeprecation::MergeFrom(tensorflow::OpDeprecation const&)
 T tensorflow::OpDeprecation::OpDeprecation()
 T tensorflow::OpDeprecation::OpDeprecation(tensorflow::OpDeprecation const&)
 T tensorflow::OpDeprecation::SetCachedSize(int) const
 T tensorflow::OpDeprecation::SharedCtor()
 T tensorflow::OpDeprecation::SharedDtor()
 T tensorflow::OpDeprecation::Swap(tensorflow::OpDeprecation*)
 T tensorflow::OpDeprecation::UnsafeArenaSwap(tensorflow::OpDeprecation*)
 T tensorflow::OpDeprecation::default_instance()
 T tensorflow::OpDeprecation::descriptor()
 T tensorflow::OpDeprecation::~OpDeprecation()
 T tensorflow::OpKernel::InputRange(tensorflow::StringPiece, int*, int*) const
 T tensorflow::OpKernel::MakeShape(tensorflow::Tensor const&, tensorflow::TensorShape*) const
 T tensorflow::OpKernel::OpKernel(tensorflow::OpKernelConstruction*)
 T tensorflow::OpKernel::OutputRange(tensorflow::StringPiece, int*, int*) const
 T tensorflow::OpKernel::name[abi:cxx11]() const
 T tensorflow::OpKernel::requested_device[abi:cxx11]() const
 T tensorflow::OpKernel::requested_input[abi:cxx11](int) const
 T tensorflow::OpKernel::type_string[abi:cxx11]() const
 T tensorflow::OpKernel::~OpKernel()
 T tensorflow::OpKernelConstruction::CtxFailure(tensorflow::Status)
 T tensorflow::OpKernelConstruction::CtxFailureWithWarning(tensorflow::Status)
 T tensorflow::OpKernelConstruction::HasAttr(tensorflow::StringPiece) const
 T tensorflow::OpKernelConstruction::MatchSignature(tensorflow::gtl::ArraySlice<tensorflow::DataType>, tensorflow::gtl::ArraySlice<tensorflow::DataType>)
 T tensorflow::OpKernelConstruction::OpKernelConstruction(tensorflow::DeviceType, tensorflow::DeviceBase*, tensorflow::Allocator*, tensorflow::NodeDef const*, tensorflow::OpDef const*, tensorflow::FunctionLibraryRuntime*, tensorflow::gtl::ArraySlice<tensorflow::DataType> const&, tensorflow::gtl::ArraySlice<tensorflow::MemoryType> const&, tensorflow::gtl::ArraySlice<tensorflow::DataType> const&, tensorflow::gtl::ArraySlice<tensorflow::MemoryType> const&, int, tensorflow::Status*)
 T tensorflow::OpKernelConstruction::SetStatus(tensorflow::Status const&)
 T tensorflow::OpKernelConstruction::allocate_persistent(tensorflow::DataType, tensorflow::TensorShape const&, tensorflow::PersistentTensor*, tensorflow::Tensor**)
 T tensorflow::OpKernelConstruction::allocate_temp(tensorflow::DataType, tensorflow::TensorShape const&, tensorflow::Tensor*)
 T tensorflow::OpKernelContext::CtxFailure(tensorflow::Status)
 T tensorflow::OpKernelContext::CtxFailureWithWarning(tensorflow::Status)
 T tensorflow::OpKernelContext::MatchSignature(tensorflow::gtl::ArraySlice<tensorflow::DataType>, tensorflow::gtl::ArraySlice<tensorflow::DataType>)
 T tensorflow::OpKernelContext::OpKernelContext(tensorflow::OpKernelContext::Params*)
 T tensorflow::OpKernelContext::OpKernelContext(tensorflow::OpKernelContext::Params*, int)
 T tensorflow::OpKernelContext::SetStatus(tensorflow::Status const&)
 T tensorflow::OpKernelContext::ValidateInputsAreSameShape(tensorflow::OpKernel*)
 T tensorflow::OpKernelContext::allocate_on_host(tensorflow::AllocatorAttributes) const
 T tensorflow::OpKernelContext::allocate_output(int, tensorflow::TensorShape const&, tensorflow::Tensor**)
 T tensorflow::OpKernelContext::allocate_output(int, tensorflow::TensorShape const&, tensorflow::Tensor**, tensorflow::AllocatorAttributes)
 T tensorflow::OpKernelContext::allocate_output(tensorflow::StringPiece, tensorflow::TensorShape const&, tensorflow::Tensor**)
 T tensorflow::OpKernelContext::allocate_output(tensorflow::StringPiece, tensorflow::TensorShape const&, tensorflow::Tensor**, tensorflow::AllocatorAttributes)
 T tensorflow::OpKernelContext::allocate_persistent(tensorflow::DataType, tensorflow::TensorShape const&, tensorflow::PersistentTensor*, tensorflow::Tensor**, tensorflow::AllocatorAttributes)
 T tensorflow::OpKernelContext::allocate_temp(tensorflow::DataType, tensorflow::TensorShape const&, tensorflow::Tensor*, tensorflow::AllocatorAttributes, tensorflow::AllocationAttributes const&)
 T tensorflow::OpKernelContext::allocate_tensor(tensorflow::DataType, tensorflow::TensorShape const&, tensorflow::Tensor*, tensorflow::AllocatorAttributes, tensorflow::AllocationAttributes const&)
 T tensorflow::OpKernelContext::delete_ref_input(int, bool)
 T tensorflow::OpKernelContext::device_persistent_alloc_ids() const
 T tensorflow::OpKernelContext::forward_input(int, tensorflow::DataType, tensorflow::TensorShape const&, tensorflow::MemoryType, tensorflow::AllocatorAttributes const&)
 T tensorflow::OpKernelContext::forward_input_or_allocate_temp(tensorflow::gtl::ArraySlice<int>, tensorflow::DataType, tensorflow::TensorShape const&, tensorflow::AllocatorAttributes const&, tensorflow::Tensor*)
 T tensorflow::OpKernelContext::forward_input_to_output_with_shape(int, int, tensorflow::TensorShape const&, tensorflow::Tensor**)
 T tensorflow::OpKernelContext::forward_input_to_output_with_shape(tensorflow::StringPiece, tensorflow::StringPiece, tensorflow::TensorShape const&, tensorflow::Tensor**)
 T tensorflow::OpKernelContext::forward_ref_input_to_ref_output(int, int)
 T tensorflow::OpKernelContext::get_allocator(tensorflow::AllocatorAttributes)
 T tensorflow::OpKernelContext::host_persistent_alloc_ids() const
 T tensorflow::OpKernelContext::input(int)
 T tensorflow::OpKernelContext::input(tensorflow::StringPiece, tensorflow::Tensor const**)
 T tensorflow::OpKernelContext::input_dtype(tensorflow::StringPiece, tensorflow::DataType*) const
 T tensorflow::OpKernelContext::input_list(tensorflow::StringPiece, tensorflow::OpInputList*)
 T tensorflow::OpKernelContext::input_ref_mutex(tensorflow::StringPiece, tensorflow::mutex**)
 T tensorflow::OpKernelContext::mutable_input(int, bool)
 T tensorflow::OpKernelContext::mutable_input(tensorflow::StringPiece, tensorflow::Tensor*, bool)
 T tensorflow::OpKernelContext::mutable_input_list(tensorflow::StringPiece, tensorflow::OpMutableInputList*)
 T tensorflow::OpKernelContext::mutable_output(tensorflow::StringPiece, tensorflow::Tensor**)
 T tensorflow::OpKernelContext::output_list(tensorflow::StringPiece, tensorflow::OpOutputList*)
 T tensorflow::OpKernelContext::really_record_tensor_reference(tensorflow::Tensor const&)
 T tensorflow::OpKernelContext::record_device_persistent_memory_allocation(long long, long long)
 T tensorflow::OpKernelContext::record_host_persistent_memory_allocation(long long, long long)
 T tensorflow::OpKernelContext::release_output(tensorflow::StringPiece, tensorflow::TensorValue*)
 T tensorflow::OpKernelContext::replace_ref_input(int, tensorflow::Tensor const&, bool)
 T tensorflow::OpKernelContext::replace_ref_input(tensorflow::StringPiece, tensorflow::Tensor const&, bool)
 T tensorflow::OpKernelContext::set_output(int, tensorflow::Tensor const&)
 T tensorflow::OpKernelContext::set_output(tensorflow::StringPiece, tensorflow::Tensor const&)
 T tensorflow::OpKernelContext::set_output_ref(int, tensorflow::mutex*, tensorflow::Tensor*)
 T tensorflow::OpKernelContext::set_output_ref(tensorflow::StringPiece, tensorflow::mutex*, tensorflow::Tensor*)
 T tensorflow::OpKernelContext::~OpKernelContext()
 T tensorflow::OpList::ArenaDtor(void*)
 T tensorflow::OpList::ByteSizeLong() const
 T tensorflow::OpList::Clear()
 T tensorflow::OpList::CopyFrom(tensorflow::OpList const&)
 T tensorflow::OpList::GetMetadata() const
 T tensorflow::OpList::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::OpList::InternalSwap(tensorflow::OpList*)
 T tensorflow::OpList::IsInitialized() const
 T tensorflow::OpList::MergeFrom(tensorflow::OpList const&)
 T tensorflow::OpList::OpList()
 T tensorflow::OpList::OpList(tensorflow::OpList const&)
 T tensorflow::OpList::SetCachedSize(int) const
 T tensorflow::OpList::SharedCtor()
 T tensorflow::OpList::SharedDtor()
 T tensorflow::OpList::Swap(tensorflow::OpList*)
 T tensorflow::OpList::UnsafeArenaSwap(tensorflow::OpList*)
 T tensorflow::OpList::default_instance()
 T tensorflow::OpList::descriptor()
 T tensorflow::OpList::~OpList()
 T tensorflow::OpListOpRegistry::LookUp(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpRegistrationData const**) const
 T tensorflow::OpListOpRegistry::OpListOpRegistry(tensorflow::OpList const*)
 T tensorflow::OpListOpRegistry::~OpListOpRegistry()
 T tensorflow::OpRegistry::CallDeferred() const
 T tensorflow::OpRegistry::ClearDeferredRegistrations()
 T tensorflow::OpRegistry::DebugString[abi:cxx11](bool) const
 T tensorflow::OpRegistry::DeferRegistrations()
 T tensorflow::OpRegistry::Export(bool, tensorflow::OpList*) const
 T tensorflow::OpRegistry::GetRegisteredOps(std::vector<tensorflow::OpDef, std::allocator<tensorflow::OpDef> >*)
 T tensorflow::OpRegistry::Global()
 T tensorflow::OpRegistry::LookUp(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpRegistrationData const**) const
 T tensorflow::OpRegistry::MustCallDeferred() const
 T tensorflow::OpRegistry::OpRegistry()
 T tensorflow::OpRegistry::ProcessRegistrations() const
 T tensorflow::OpRegistry::Register(std::function<tensorflow::Status (tensorflow::OpRegistrationData*)> const&)
 T tensorflow::OpRegistry::RegisterAlreadyLocked(std::function<tensorflow::Status (tensorflow::OpRegistrationData*)> const&) const
 T tensorflow::OpRegistry::SetWatcher(std::function<tensorflow::Status (tensorflow::Status const&, tensorflow::OpDef const&)> const&)
 T tensorflow::OpRegistry::~OpRegistry()
 T tensorflow::OpRegistryInterface::LookUpOpDef(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef const**) const
 T tensorflow::OpRegistryInterface::~OpRegistryInterface()
 T tensorflow::OpSegment::AddHold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::OpSegment::FindOrCreate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpKernel**, std::function<tensorflow::Status (tensorflow::OpKernel**)>)
 T tensorflow::OpSegment::Item::~Item()
 T tensorflow::OpSegment::OpSegment()
 T tensorflow::OpSegment::RemoveHold(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::OpSegment::~OpSegment()
 T tensorflow::OpsUsedByGraph(tensorflow::GraphDef const&, std::set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)
 T tensorflow::OptimizationPassRegistry::Global()
 T tensorflow::OptimizationPassRegistry::Register(tensorflow::OptimizationPassRegistry::Grouping, int, std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> >)
 T tensorflow::OptimizationPassRegistry::RunGrouping(tensorflow::OptimizationPassRegistry::Grouping, tensorflow::GraphOptimizationPassOptions const&)
 T tensorflow::OptimizeCSE(tensorflow::Graph*, std::function<bool (tensorflow::Node const*)> const&)
 T tensorflow::OptimizeGraph(tensorflow::FunctionLibraryRuntime*, std::unique_ptr<tensorflow::Graph, std::default_delete<tensorflow::Graph> >*)
 T tensorflow::OptimizerCSE::Equivalent(tensorflow::Node const*, tensorflow::Node const*, tensorflow::AttrSlice::Scratch*)
 T tensorflow::OptimizerCSE::NodeHash(tensorflow::Node const*)
 T tensorflow::OptimizerCSE::Optimize(std::function<bool (tensorflow::Node const*)> const&)
 T tensorflow::OptimizerOptions::ArenaDtor(void*)
 T tensorflow::OptimizerOptions::ByteSizeLong() const
 T tensorflow::OptimizerOptions::Clear()
 T tensorflow::OptimizerOptions::CopyFrom(tensorflow::OptimizerOptions const&)
 T tensorflow::OptimizerOptions::GetMetadata() const
 T tensorflow::OptimizerOptions::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::OptimizerOptions::InternalSwap(tensorflow::OptimizerOptions*)
 T tensorflow::OptimizerOptions::IsInitialized() const
 T tensorflow::OptimizerOptions::MergeFrom(tensorflow::OptimizerOptions const&)
 T tensorflow::OptimizerOptions::OptimizerOptions()
 T tensorflow::OptimizerOptions::OptimizerOptions(tensorflow::OptimizerOptions const&)
 T tensorflow::OptimizerOptions::SetCachedSize(int) const
 T tensorflow::OptimizerOptions::SharedCtor()
 T tensorflow::OptimizerOptions::SharedDtor()
 T tensorflow::OptimizerOptions::Swap(tensorflow::OptimizerOptions*)
 T tensorflow::OptimizerOptions::UnsafeArenaSwap(tensorflow::OptimizerOptions*)
 T tensorflow::OptimizerOptions::default_instance()
 T tensorflow::OptimizerOptions::descriptor()
 T tensorflow::OptimizerOptions::~OptimizerOptions()
 T tensorflow::OptimizerOptions_GlobalJitLevel_IsValid(int)
 T tensorflow::OptimizerOptions_GlobalJitLevel_descriptor()
 T tensorflow::OptimizerOptions_Level_IsValid(int)
 T tensorflow::OptimizerOptions_Level_descriptor()
 T tensorflow::ParseAttrValue(tensorflow::StringPiece, tensorflow::StringPiece, tensorflow::AttrValue*)
 T tensorflow::ParseSingleExampleAttrs::FinishInit()
 T tensorflow::ParseSingleSequenceExampleAttrs::FinishInit()
 T tensorflow::ParseTensorName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::ParseTensorName(tensorflow::StringPiece)
 T tensorflow::PartialTensorShape::AsTensorShape(tensorflow::TensorShape*) const
 T tensorflow::PartialTensorShape::Concatenate(long long) const
 T tensorflow::PartialTensorShape::Concatenate(tensorflow::PartialTensorShape const&) const
 T tensorflow::PartialTensorShape::IsCompatibleWith(tensorflow::PartialTensorShape const&) const
 T tensorflow::PartialTensorShape::IsIdenticalTo(tensorflow::PartialTensorShape const&) const
 T tensorflow::PartialTensorShape::MergeWith(tensorflow::PartialTensorShape const&, tensorflow::PartialTensorShape*) const
 T tensorflow::PartialTensorShapeUtils::AreCompatible(tensorflow::gtl::ArraySlice<tensorflow::PartialTensorShape> const&, tensorflow::gtl::ArraySlice<tensorflow::PartialTensorShape> const&)
 T tensorflow::PartialTensorShapeUtils::AreIdentical(tensorflow::gtl::ArraySlice<tensorflow::PartialTensorShape> const&, tensorflow::gtl::ArraySlice<tensorflow::PartialTensorShape> const&)
 T tensorflow::PartialTensorShapeUtils::PartialShapeListString[abi:cxx11](tensorflow::gtl::ArraySlice<tensorflow::PartialTensorShape> const&)
 T tensorflow::Partition(tensorflow::PartitionOptions const&, tensorflow::Graph*, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::GraphDef, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::GraphDef> > >*)
 T tensorflow::PersistentTensor::AccessTensor(tensorflow::OpKernelConstruction*)
 T tensorflow::PersistentTensor::AccessTensor(tensorflow::OpKernelContext*)
 T tensorflow::Placer::AssignAndLog(int, tensorflow::Node*) const
 T tensorflow::Placer::CanAssignToDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> > const&) const
 T tensorflow::Placer::LogDeviceAssignment(tensorflow::Node const*) const
 T tensorflow::Placer::Placer(tensorflow::Graph*, tensorflow::DeviceSet const*)
 T tensorflow::Placer::Placer(tensorflow::Graph*, tensorflow::DeviceSet const*, tensorflow::SessionOptions const*)
 T tensorflow::Placer::Run()
 T tensorflow::Placer::~Placer()
 T tensorflow::PlatformInfo::ArenaDtor(void*)
 T tensorflow::PlatformInfo::ByteSizeLong() const
 T tensorflow::PlatformInfo::Clear()
 T tensorflow::PlatformInfo::CopyFrom(tensorflow::PlatformInfo const&)
 T tensorflow::PlatformInfo::GetMetadata() const
 T tensorflow::PlatformInfo::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::PlatformInfo::InternalSwap(tensorflow::PlatformInfo*)
 T tensorflow::PlatformInfo::IsInitialized() const
 T tensorflow::PlatformInfo::MergeFrom(tensorflow::PlatformInfo const&)
 T tensorflow::PlatformInfo::PlatformInfo()
 T tensorflow::PlatformInfo::PlatformInfo(tensorflow::PlatformInfo const&)
 T tensorflow::PlatformInfo::SetCachedSize(int) const
 T tensorflow::PlatformInfo::SharedCtor()
 T tensorflow::PlatformInfo::SharedDtor()
 T tensorflow::PlatformInfo::Swap(tensorflow::PlatformInfo*)
 T tensorflow::PlatformInfo::UnsafeArenaSwap(tensorflow::PlatformInfo*)
 T tensorflow::PlatformInfo::default_instance()
 T tensorflow::PlatformInfo::descriptor()
 T tensorflow::PlatformInfo::~PlatformInfo()
 T tensorflow::PoolAllocator::AddAllocVisitor(std::function<void (void*, unsigned long)>)
 T tensorflow::PoolAllocator::AddFreeVisitor(std::function<void (void*, unsigned long)>)
 T tensorflow::PoolAllocator::AddToList(tensorflow::PoolAllocator::PtrRecord*)
 T tensorflow::PoolAllocator::AllocateRaw(unsigned long, unsigned long)
 T tensorflow::PoolAllocator::Clear()
 T tensorflow::PoolAllocator::DeallocateRaw(void*)
 T tensorflow::PoolAllocator::EvictOne()
 T tensorflow::PoolAllocator::PoolAllocator(unsigned long, bool, tensorflow::SubAllocator*, tensorflow::RoundUpInterface*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 T tensorflow::PoolAllocator::RemoveFromList(tensorflow::PoolAllocator::PtrRecord*)
 T tensorflow::PoolAllocator::~PoolAllocator()
 T tensorflow::PosixFileSystem::CreateDir(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::PosixFileSystem::DeleteDir(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::PosixFileSystem::DeleteFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::PosixFileSystem::FileExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::PosixFileSystem::GetChildren(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)
 T tensorflow::PosixFileSystem::GetFileSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long long*)
 T tensorflow::PosixFileSystem::NewAppendableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<tensorflow::WritableFile, std::default_delete<tensorflow::WritableFile> >*)
 T tensorflow::PosixFileSystem::NewRandomAccessFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<tensorflow::RandomAccessFile, std::default_delete<tensorflow::RandomAccessFile> >*)
 T tensorflow::PosixFileSystem::NewReadOnlyMemoryRegionFromFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<tensorflow::ReadOnlyMemoryRegion, std::default_delete<tensorflow::ReadOnlyMemoryRegion> >*)
 T tensorflow::PosixFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<tensorflow::WritableFile, std::default_delete<tensorflow::WritableFile> >*)
 T tensorflow::PosixFileSystem::RenameFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::PosixFileSystem::Stat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::FileStatistics*)
 T tensorflow::PrepareCopy(tensorflow::Device*, tensorflow::DeviceContext const*, tensorflow::Tensor const&, tensorflow::Tensor const*, tensorflow::DeviceBase::GpuDeviceInfo const**, perftools::gputools::Stream**)
 T tensorflow::PrintMemory[abi:cxx11](char const*, unsigned long)
 T tensorflow::ProcessFunctionLibraryRuntime::AddHandle(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long long)
 T tensorflow::ProcessFunctionLibraryRuntime::GetDeviceContext(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::DeviceContext**)
 T tensorflow::ProcessFunctionLibraryRuntime::GetDeviceIncarnation(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long long*)
 T tensorflow::ProcessFunctionLibraryRuntime::GetDeviceName[abi:cxx11](unsigned long long)
 T tensorflow::ProcessFunctionLibraryRuntime::GetFLR(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::ProcessFunctionLibraryRuntime::GetHandle(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
 T tensorflow::ProcessFunctionLibraryRuntime::GetHandleOnDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long long)
 T tensorflow::ProcessFunctionLibraryRuntime::Instantiate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrSlice, unsigned long long*)
 T tensorflow::ProcessFunctionLibraryRuntime::IsInstantiatedOnDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long long)
 T tensorflow::ProcessFunctionLibraryRuntime::ObtainFunctionTarget[abi:cxx11](tensorflow::AttrSlice const&)
 T tensorflow::ProcessFunctionLibraryRuntime::ProcessFunctionLibraryRuntime(tensorflow::DeviceMgr const*, tensorflow::Env*, int, tensorflow::FunctionLibraryDefinition const*, tensorflow::OptimizerOptions const&)
 T tensorflow::ProcessFunctionLibraryRuntime::ProcessFunctionLibraryRuntime(tensorflow::DeviceMgr const*, tensorflow::Env*, int, tensorflow::FunctionLibraryDefinition const*, tensorflow::OptimizerOptions const&, std::function<tensorflow::Status (tensorflow::FunctionLibraryRuntime*, tensorflow::NodeDef const&, std::unique_ptr<tensorflow::OpKernel, std::default_delete<tensorflow::OpKernel> >*)>)
 T tensorflow::ProcessFunctionLibraryRuntime::ProcessFunctionLibraryRuntime(tensorflow::DeviceMgr const*, tensorflow::Env*, int, tensorflow::FunctionLibraryDefinition const*, tensorflow::OptimizerOptions const&, std::function<tensorflow::Status (tensorflow::FunctionLibraryRuntime*, tensorflow::NodeDef const&, std::unique_ptr<tensorflow::OpKernel, std::default_delete<tensorflow::OpKernel> >*)>, tensorflow::DistributedFunctionLibraryRuntime*)
 T tensorflow::ProcessFunctionLibraryRuntime::ProcessFunctionLibraryRuntime(tensorflow::DeviceMgr const*, tensorflow::Env*, int, tensorflow::FunctionLibraryDefinition const*, tensorflow::OptimizerOptions const&, tensorflow::DistributedFunctionLibraryRuntime*)
 T tensorflow::ProcessFunctionLibraryRuntime::ReceiveTensorsAsync(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long long, long long, tensorflow::DeviceContext*, std::vector<tensorflow::AllocatorAttributes, std::allocator<tensorflow::AllocatorAttributes> > const&, tensorflow::Rendezvous*, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::function<void (tensorflow::Status const&)> const&)
 T tensorflow::ProcessFunctionLibraryRuntime::ReleaseHandle(unsigned long long)
 T tensorflow::ProcessFunctionLibraryRuntime::RemoveHandle(unsigned long long)
 T tensorflow::ProcessFunctionLibraryRuntime::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::gtl::ArraySlice<tensorflow::Tensor>, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::function<void (tensorflow::Status const&)>)
 T tensorflow::ProcessFunctionLibraryRuntime::SendTensors(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long long, tensorflow::gtl::ArraySlice<tensorflow::Tensor>, tensorflow::DeviceContext*, std::vector<tensorflow::AllocatorAttributes, std::allocator<tensorflow::AllocatorAttributes> > const&, tensorflow::Rendezvous*)
 T tensorflow::ProcessState::AddGPUAllocVisitor(int, std::function<void (void*, unsigned long)>)
 T tensorflow::ProcessState::GetCPUAllocator(int)
 T tensorflow::ProcessState::GetCUDAHostAllocator(int)
 T tensorflow::ProcessState::GetGPUAllocator(tensorflow::GPUOptions const&, int, unsigned long)
 T tensorflow::ProcessState::MemDesc::DebugString[abi:cxx11]()
 T tensorflow::ProcessState::ProcessState()
 T tensorflow::ProcessState::PtrType(void const*)
 T tensorflow::ProcessState::singleton()
 T tensorflow::ProcessState::~ProcessState()
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::AllocationDescription const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::AllocationRecord const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::AllocatorMemoryUsed const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::ApiDef const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::ApiDef_Arg const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::ApiDef_Attr const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::ApiDef_Endpoint const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::ApiDefs const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::AttrValue const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::AttrValue_ListValue const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::AutoParallelOptions const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::BundleEntryProto const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::BundleHeaderProto const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::BytesList const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::ClusterDef const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::ConfigProto const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::CostGraphDef const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::CostGraphDef_Node const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::CostGraphDef_Node_InputInfo const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::CostGraphDef_Node_OutputInfo const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::DebugOptions const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::DebugTensorWatch const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::DebuggedSourceFile const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::DebuggedSourceFiles const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::DeviceAttributes const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::DeviceLocality const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::DeviceProperties const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::DeviceStepStats const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::Example const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::Feature const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::FeatureList const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::FeatureLists const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::Features const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::FloatList const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::FunctionDef const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::FunctionDefLibrary const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::GPUOptions const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::GradientDef const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::GraphDef const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::GraphOptions const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::GraphTransferInfo const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::GraphTransferInfo_ConstNodeInfo const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::GraphTransferInfo_GraphInputNodeInfo const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::GraphTransferInfo_GraphOutputNodeInfo const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::GraphTransferInfo_NodeInfo const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::GraphTransferInfo_NodeInput const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::GraphTransferInfo_NodeInputInfo const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::GraphTransferInfo_NodeOutputInfo const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::HistogramProto const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::Int64List const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::IteratorStateMetadata const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::JobDef const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::KernelDef const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::KernelDef_AttrConstraint const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::MemmappedFileSystemDirectory const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::MemmappedFileSystemDirectoryElement const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::MemoryLogRawAllocation const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::MemoryLogRawDeallocation const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::MemoryLogStep const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::MemoryLogTensorAllocation const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::MemoryLogTensorDeallocation const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::MemoryLogTensorOutput const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::MemoryStats const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::NameAttrList const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::NamedDevice const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::NodeDef const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::NodeExecStats const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::NodeOutput const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::OpDef const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::OpDef_ArgDef const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::OpDef_AttrDef const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::OpDeprecation const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::OpList const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::OptimizerOptions const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::QueueRunnerDef const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::RPCOptions const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::ReaderBaseState const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::RemoteFusedGraphExecuteInfo const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::ResourceHandle const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::ResourceHandleProto const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::RewriterConfig const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::RunMetadata const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::RunOptions const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::SaveSliceInfoDef const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::SavedSlice const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::SavedSliceMeta const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::SavedTensorSliceMeta const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::SavedTensorSlices const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::SaverDef const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::SequenceExample const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::StepStats const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::Summary const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::SummaryDescription const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::SummaryMetadata const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::SummaryMetadata_PluginData const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::Summary_Audio const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::Summary_Image const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::Summary_Value const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::TensorDescription const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::TensorProto const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::TensorShapeProto const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::TensorShapeProto_Dim const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::TensorSliceProto const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::TensorSliceProto_Extent const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::ThreadPoolOptionProto const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::VariableDef const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::VariantTensorData const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::VariantTensorDataProto const&)
 T tensorflow::ProtoDebugString[abi:cxx11](tensorflow::VersionDef const&)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AllocationDescription*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AllocationRecord*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AllocatorMemoryUsed*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::ApiDef*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::ApiDef_Arg*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::ApiDef_Attr*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::ApiDef_Endpoint*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::ApiDefs*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrValue*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrValue_ListValue*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AutoParallelOptions*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::BundleEntryProto*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::BundleHeaderProto*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::BytesList*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::ClusterDef*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::ConfigProto*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::CostGraphDef*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::CostGraphDef_Node*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::CostGraphDef_Node_InputInfo*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::CostGraphDef_Node_OutputInfo*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::DebugOptions*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::DebugTensorWatch*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::DebuggedSourceFile*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::DebuggedSourceFiles*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::DeviceAttributes*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::DeviceLocality*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::DeviceProperties*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::DeviceStepStats*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Example*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Feature*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::FeatureList*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::FeatureLists*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Features*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::FloatList*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::FunctionDef*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::FunctionDefLibrary*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GPUOptions*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GradientDef*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDef*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphOptions*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphTransferInfo*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphTransferInfo_ConstNodeInfo*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphTransferInfo_GraphInputNodeInfo*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphTransferInfo_GraphOutputNodeInfo*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphTransferInfo_NodeInfo*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphTransferInfo_NodeInput*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphTransferInfo_NodeInputInfo*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphTransferInfo_NodeOutputInfo*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::HistogramProto*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Int64List*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::IteratorStateMetadata*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::JobDef*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::KernelDef*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::KernelDef_AttrConstraint*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::MemmappedFileSystemDirectory*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::MemmappedFileSystemDirectoryElement*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::MemoryLogRawAllocation*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::MemoryLogRawDeallocation*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::MemoryLogStep*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::MemoryLogTensorAllocation*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::MemoryLogTensorDeallocation*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::MemoryLogTensorOutput*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::MemoryStats*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::NameAttrList*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::NamedDevice*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::NodeDef*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::NodeExecStats*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::NodeOutput*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef_ArgDef*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef_AttrDef*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDeprecation*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpList*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OptimizerOptions*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::QueueRunnerDef*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::RPCOptions*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::ReaderBaseState*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::RemoteFusedGraphExecuteInfo*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::ResourceHandleProto*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::RewriterConfig*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::RunMetadata*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::RunOptions*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::SaveSliceInfoDef*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::SavedSlice*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::SavedSliceMeta*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::SavedTensorSliceMeta*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::SavedTensorSlices*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::SaverDef*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::SequenceExample*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::StepStats*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Summary*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::SummaryDescription*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::SummaryMetadata*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::SummaryMetadata_PluginData*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Summary_Audio*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Summary_Image*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Summary_Value*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::TensorDescription*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::TensorProto*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::TensorShapeProto*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::TensorShapeProto_Dim*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::TensorSliceProto*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::TensorSliceProto_Extent*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::ThreadPoolOptionProto*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::VariableDef*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::VariantTensorDataProto*)
 T tensorflow::ProtoParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::VersionDef*)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::AllocationDescription const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::AllocationRecord const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::AllocatorMemoryUsed const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::ApiDef const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::ApiDef_Arg const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::ApiDef_Attr const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::ApiDef_Endpoint const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::ApiDefs const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::AttrValue const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::AttrValue_ListValue const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::AutoParallelOptions const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::BundleEntryProto const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::BundleHeaderProto const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::BytesList const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::ClusterDef const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::ConfigProto const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::CostGraphDef const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::CostGraphDef_Node const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::CostGraphDef_Node_InputInfo const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::CostGraphDef_Node_OutputInfo const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::DebugOptions const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::DebugTensorWatch const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::DebuggedSourceFile const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::DebuggedSourceFiles const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::DeviceAttributes const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::DeviceLocality const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::DeviceProperties const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::DeviceStepStats const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::Example const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::Feature const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::FeatureList const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::FeatureLists const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::Features const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::FloatList const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::FunctionDef const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::FunctionDefLibrary const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::GPUOptions const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::GradientDef const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::GraphDef const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::GraphOptions const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::GraphTransferInfo const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::GraphTransferInfo_ConstNodeInfo const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::GraphTransferInfo_GraphInputNodeInfo const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::GraphTransferInfo_GraphOutputNodeInfo const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::GraphTransferInfo_NodeInfo const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::GraphTransferInfo_NodeInput const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::GraphTransferInfo_NodeInputInfo const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::GraphTransferInfo_NodeOutputInfo const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::HistogramProto const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::Int64List const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::IteratorStateMetadata const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::JobDef const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::KernelDef const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::KernelDef_AttrConstraint const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::MemmappedFileSystemDirectory const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::MemmappedFileSystemDirectoryElement const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::MemoryLogRawAllocation const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::MemoryLogRawDeallocation const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::MemoryLogStep const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::MemoryLogTensorAllocation const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::MemoryLogTensorDeallocation const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::MemoryLogTensorOutput const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::MemoryStats const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::NameAttrList const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::NamedDevice const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::NodeDef const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::NodeExecStats const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::NodeOutput const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::OpDef const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::OpDef_ArgDef const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::OpDef_AttrDef const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::OpDeprecation const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::OpList const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::OptimizerOptions const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::QueueRunnerDef const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::RPCOptions const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::ReaderBaseState const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::RemoteFusedGraphExecuteInfo const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::ResourceHandleProto const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::RewriterConfig const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::RunMetadata const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::RunOptions const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::SaveSliceInfoDef const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::SavedSlice const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::SavedSliceMeta const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::SavedTensorSliceMeta const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::SavedTensorSlices const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::SaverDef const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::SequenceExample const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::StepStats const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::Summary const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::SummaryDescription const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::SummaryMetadata const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::SummaryMetadata_PluginData const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::Summary_Audio const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::Summary_Image const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::Summary_Value const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::TensorDescription const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::TensorProto const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::TensorShapeProto const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::TensorShapeProto_Dim const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::TensorSliceProto const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::TensorSliceProto_Extent const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::ThreadPoolOptionProto const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::VariableDef const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::VariantTensorDataProto const&)
 T tensorflow::ProtoShortDebugString[abi:cxx11](tensorflow::VersionDef const&)
 T tensorflow::PruneForReverseReachability(tensorflow::Graph*, std::unordered_set<tensorflow::Node const*, std::hash<tensorflow::Node const*>, std::equal_to<tensorflow::Node const*>, std::allocator<tensorflow::Node const*> >)
 T tensorflow::QuantizedTypes()
 T tensorflow::QueueRunnerDef::ArenaDtor(void*)
 T tensorflow::QueueRunnerDef::ByteSizeLong() const
 T tensorflow::QueueRunnerDef::Clear()
 T tensorflow::QueueRunnerDef::CopyFrom(tensorflow::QueueRunnerDef const&)
 T tensorflow::QueueRunnerDef::GetMetadata() const
 T tensorflow::QueueRunnerDef::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::QueueRunnerDef::InternalSwap(tensorflow::QueueRunnerDef*)
 T tensorflow::QueueRunnerDef::IsInitialized() const
 T tensorflow::QueueRunnerDef::MergeFrom(tensorflow::QueueRunnerDef const&)
 T tensorflow::QueueRunnerDef::QueueRunnerDef()
 T tensorflow::QueueRunnerDef::QueueRunnerDef(tensorflow::QueueRunnerDef const&)
 T tensorflow::QueueRunnerDef::SetCachedSize(int) const
 T tensorflow::QueueRunnerDef::SharedCtor()
 T tensorflow::QueueRunnerDef::SharedDtor()
 T tensorflow::QueueRunnerDef::Swap(tensorflow::QueueRunnerDef*)
 T tensorflow::QueueRunnerDef::UnsafeArenaSwap(tensorflow::QueueRunnerDef*)
 T tensorflow::QueueRunnerDef::default_instance()
 T tensorflow::QueueRunnerDef::descriptor()
 T tensorflow::QueueRunnerDef::~QueueRunnerDef()
 T tensorflow::RPCOptions::ArenaDtor(void*)
 T tensorflow::RPCOptions::ByteSizeLong() const
 T tensorflow::RPCOptions::Clear()
 T tensorflow::RPCOptions::CopyFrom(tensorflow::RPCOptions const&)
 T tensorflow::RPCOptions::GetMetadata() const
 T tensorflow::RPCOptions::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::RPCOptions::InternalSwap(tensorflow::RPCOptions*)
 T tensorflow::RPCOptions::IsInitialized() const
 T tensorflow::RPCOptions::MergeFrom(tensorflow::RPCOptions const&)
 T tensorflow::RPCOptions::RPCOptions()
 T tensorflow::RPCOptions::RPCOptions(tensorflow::RPCOptions const&)
 T tensorflow::RPCOptions::SetCachedSize(int) const
 T tensorflow::RPCOptions::SharedCtor()
 T tensorflow::RPCOptions::SharedDtor()
 T tensorflow::RPCOptions::Swap(tensorflow::RPCOptions*)
 T tensorflow::RPCOptions::UnsafeArenaSwap(tensorflow::RPCOptions*)
 T tensorflow::RPCOptions::default_instance()
 T tensorflow::RPCOptions::descriptor()
 T tensorflow::RPCOptions::~RPCOptions()
 T tensorflow::RandomAccessFile::~RandomAccessFile()
 T tensorflow::ReadBoolFromEnvVar(tensorflow::StringPiece, bool, bool*)
 T tensorflow::ReadFileToString(tensorflow::Env*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::ReadInt64FromEnvVar(tensorflow::StringPiece, long long, long long*)
 T tensorflow::ReadStringFromEnvVar(tensorflow::StringPiece, tensorflow::StringPiece, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::ReaderBaseState::ArenaDtor(void*)
 T tensorflow::ReaderBaseState::ByteSizeLong() const
 T tensorflow::ReaderBaseState::Clear()
 T tensorflow::ReaderBaseState::CopyFrom(tensorflow::ReaderBaseState const&)
 T tensorflow::ReaderBaseState::GetMetadata() const
 T tensorflow::ReaderBaseState::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::ReaderBaseState::InternalSwap(tensorflow::ReaderBaseState*)
 T tensorflow::ReaderBaseState::IsInitialized() const
 T tensorflow::ReaderBaseState::MergeFrom(tensorflow::ReaderBaseState const&)
 T tensorflow::ReaderBaseState::ReaderBaseState()
 T tensorflow::ReaderBaseState::ReaderBaseState(tensorflow::ReaderBaseState const&)
 T tensorflow::ReaderBaseState::SetCachedSize(int) const
 T tensorflow::ReaderBaseState::SharedCtor()
 T tensorflow::ReaderBaseState::SharedDtor()
 T tensorflow::ReaderBaseState::Swap(tensorflow::ReaderBaseState*)
 T tensorflow::ReaderBaseState::UnsafeArenaSwap(tensorflow::ReaderBaseState*)
 T tensorflow::ReaderBaseState::default_instance()
 T tensorflow::ReaderBaseState::descriptor()
 T tensorflow::ReaderBaseState::~ReaderBaseState()
 T tensorflow::RealAndQuantizedTypes()
 T tensorflow::RealNumberTypes()
 T tensorflow::RecvOutputsFromRendezvous(tensorflow::Rendezvous*, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Tensor> > >*, tensorflow::Rendezvous::Args const&)
 T tensorflow::RecvOutputsFromRendezvousAsync(tensorflow::Rendezvous*, tensorflow::DeviceContext*, std::vector<tensorflow::AllocatorAttributes, std::allocator<tensorflow::AllocatorAttributes> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::function<void (tensorflow::Status const&)> const&)
 T tensorflow::RegisterDefaultCustomKernelCreator(std::function<tensorflow::Status (tensorflow::FunctionLibraryRuntime*, tensorflow::NodeDef const&, std::unique_ptr<tensorflow::OpKernel, std::default_delete<tensorflow::OpKernel> >*)>)
 T tensorflow::RemoteFusedGraphExecuteInfo::ArenaDtor(void*)
 T tensorflow::RemoteFusedGraphExecuteInfo::ByteSizeLong() const
 T tensorflow::RemoteFusedGraphExecuteInfo::Clear()
 T tensorflow::RemoteFusedGraphExecuteInfo::CopyFrom(tensorflow::RemoteFusedGraphExecuteInfo const&)
 T tensorflow::RemoteFusedGraphExecuteInfo::GetMetadata() const
 T tensorflow::RemoteFusedGraphExecuteInfo::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::RemoteFusedGraphExecuteInfo::InternalSwap(tensorflow::RemoteFusedGraphExecuteInfo*)
 T tensorflow::RemoteFusedGraphExecuteInfo::IsInitialized() const
 T tensorflow::RemoteFusedGraphExecuteInfo::MergeFrom(tensorflow::RemoteFusedGraphExecuteInfo const&)
 T tensorflow::RemoteFusedGraphExecuteInfo::RemoteFusedGraphExecuteInfo()
 T tensorflow::RemoteFusedGraphExecuteInfo::RemoteFusedGraphExecuteInfo(tensorflow::RemoteFusedGraphExecuteInfo const&)
 T tensorflow::RemoteFusedGraphExecuteInfo::SetCachedSize(int) const
 T tensorflow::RemoteFusedGraphExecuteInfo::SharedCtor()
 T tensorflow::RemoteFusedGraphExecuteInfo::SharedDtor()
 T tensorflow::RemoteFusedGraphExecuteInfo::Swap(tensorflow::RemoteFusedGraphExecuteInfo*)
 T tensorflow::RemoteFusedGraphExecuteInfo::UnsafeArenaSwap(tensorflow::RemoteFusedGraphExecuteInfo*)
 T tensorflow::RemoteFusedGraphExecuteInfo::_slow_mutable_remote_graph()
 T tensorflow::RemoteFusedGraphExecuteInfo::_slow_release_remote_graph()
 T tensorflow::RemoteFusedGraphExecuteInfo::default_instance()
 T tensorflow::RemoteFusedGraphExecuteInfo::descriptor()
 T tensorflow::RemoteFusedGraphExecuteInfo::unsafe_arena_release_remote_graph()
 T tensorflow::RemoteFusedGraphExecuteInfo::unsafe_arena_set_allocated_remote_graph(tensorflow::GraphDef*)
 T tensorflow::RemoteFusedGraphExecuteInfo::~RemoteFusedGraphExecuteInfo()
 T tensorflow::RemoteFusedGraphExecuteInfo_NodeType_IsValid(int)
 T tensorflow::RemoteFusedGraphExecuteInfo_NodeType_descriptor()
 T tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::ArenaDtor(void*)
 T tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::ByteSizeLong() const
 T tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::Clear()
 T tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::CopyFrom(tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto const&)
 T tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::GetMetadata() const
 T tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::InternalSwap(tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto*)
 T tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::IsInitialized() const
 T tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::MergeFrom(tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto const&)
 T tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto()
 T tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto(tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto const&)
 T tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::SetCachedSize(int) const
 T tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::SharedCtor()
 T tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::SharedDtor()
 T tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::Swap(tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto*)
 T tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::UnsafeArenaSwap(tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto*)
 T tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::_slow_mutable_shape()
 T tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::_slow_release_shape()
 T tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::default_instance()
 T tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::descriptor()
 T tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::unsafe_arena_release_shape()
 T tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::unsafe_arena_set_allocated_shape(tensorflow::TensorShapeProto*)
 T tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::~RemoteFusedGraphExecuteInfo_TensorShapeTypeProto()
 T tensorflow::RemoveDeadNodes(tensorflow::Graph*)
 T tensorflow::RemoveDescriptionsFromOpDef(tensorflow::OpDef*)
 T tensorflow::RemoveDescriptionsFromOpList(tensorflow::OpList*)
 T tensorflow::RemoveIdentityNodes(tensorflow::Graph*)
 T tensorflow::RemoveListArrayConverter(tensorflow::Graph*)
 T tensorflow::RemoveNewDefaultAttrsFromGraphDef(tensorflow::GraphDef*, tensorflow::OpRegistryInterface const&, tensorflow::OpRegistryInterface const&, std::set<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::less<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*)
 T tensorflow::RemoveNonDeprecationDescriptionsFromOpDef(tensorflow::OpDef*)
 T tensorflow::RenamedDevice::NewRenamedDevice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Device*, bool, bool)
 T tensorflow::RenamedDevice::RenamedDevice(tensorflow::Device*, tensorflow::DeviceAttributes const&, bool, bool)
 T tensorflow::RenamedDevice::~RenamedDevice()
 T tensorflow::Rendezvous::CreateKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::FrameAndIter const&)
 T tensorflow::Rendezvous::ParseKey(tensorflow::StringPiece, tensorflow::Rendezvous::ParsedKey*)
 T tensorflow::Rendezvous::ParsedKey::operator=(tensorflow::Rendezvous::ParsedKey const&)
 T tensorflow::Rendezvous::Recv(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor*, bool*)
 T tensorflow::Rendezvous::Recv(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor*, bool*, long long)
 T tensorflow::Rendezvous::~Rendezvous()
 T tensorflow::Reset(tensorflow::SessionOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
 T tensorflow::ResourceHandle::AsProto(tensorflow::ResourceHandleProto*) const
 T tensorflow::ResourceHandle::DebugString[abi:cxx11]() const
 T tensorflow::ResourceHandle::FromProto(tensorflow::ResourceHandleProto const&)
 T tensorflow::ResourceHandle::ParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::ResourceHandle::ResourceHandle()
 T tensorflow::ResourceHandle::ResourceHandle(tensorflow::ResourceHandleProto const&)
 T tensorflow::ResourceHandle::SerializeAsString[abi:cxx11]() const
 T tensorflow::ResourceHandle::~ResourceHandle()
 T tensorflow::ResourceHandleProto::ArenaDtor(void*)
 T tensorflow::ResourceHandleProto::ByteSizeLong() const
 T tensorflow::ResourceHandleProto::Clear()
 T tensorflow::ResourceHandleProto::CopyFrom(tensorflow::ResourceHandleProto const&)
 T tensorflow::ResourceHandleProto::GetMetadata() const
 T tensorflow::ResourceHandleProto::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::ResourceHandleProto::InternalSwap(tensorflow::ResourceHandleProto*)
 T tensorflow::ResourceHandleProto::IsInitialized() const
 T tensorflow::ResourceHandleProto::MergeFrom(tensorflow::ResourceHandleProto const&)
 T tensorflow::ResourceHandleProto::ResourceHandleProto()
 T tensorflow::ResourceHandleProto::ResourceHandleProto(tensorflow::ResourceHandleProto const&)
 T tensorflow::ResourceHandleProto::SetCachedSize(int) const
 T tensorflow::ResourceHandleProto::SharedCtor()
 T tensorflow::ResourceHandleProto::SharedDtor()
 T tensorflow::ResourceHandleProto::Swap(tensorflow::ResourceHandleProto*)
 T tensorflow::ResourceHandleProto::UnsafeArenaSwap(tensorflow::ResourceHandleProto*)
 T tensorflow::ResourceHandleProto::default_instance()
 T tensorflow::ResourceHandleProto::descriptor()
 T tensorflow::ResourceHandleProto::~ResourceHandleProto()
 T tensorflow::ResourceMgr::Cleanup(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::ResourceMgr::Clear()
 T tensorflow::ResourceMgr::DebugString[abi:cxx11]() const
 T tensorflow::ResourceMgr::DebugTypeName(unsigned long long) const
 T tensorflow::ResourceMgr::Delete(tensorflow::ResourceHandle const&)
 T tensorflow::ResourceMgr::DoCreate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::type_index, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::ResourceBase*)
 T tensorflow::ResourceMgr::DoDelete(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::type_index, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::ResourceMgr::DoDelete(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::ResourceMgr::DoLookup(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::type_index, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::ResourceBase**) const
 T tensorflow::ResourceMgr::InsertDebugTypeName(unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::ResourceMgr::ResourceMgr()
 T tensorflow::ResourceMgr::ResourceMgr(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::ResourceMgr::~ResourceMgr()
 T tensorflow::ReverseDFS(tensorflow::Graph const&, std::function<void (tensorflow::Node*)> const&, std::function<void (tensorflow::Node*)> const&, std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> const&)
 T tensorflow::ReverseDFSFrom(tensorflow::Graph const&, tensorflow::gtl::ArraySlice<tensorflow::Node const*>, std::function<void (tensorflow::Node const*)> const&, std::function<void (tensorflow::Node const*)> const&, std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> const&)
 T tensorflow::ReverseDFSFrom(tensorflow::Graph const&, tensorflow::gtl::ArraySlice<tensorflow::Node*>, std::function<void (tensorflow::Node*)> const&, std::function<void (tensorflow::Node*)> const&, std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> const&)
 T tensorflow::RewriterConfig::ArenaDtor(void*)
 T tensorflow::RewriterConfig::ByteSizeLong() const
 T tensorflow::RewriterConfig::Clear()
 T tensorflow::RewriterConfig::CopyFrom(tensorflow::RewriterConfig const&)
 T tensorflow::RewriterConfig::GetMetadata() const
 T tensorflow::RewriterConfig::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::RewriterConfig::InternalSwap(tensorflow::RewriterConfig*)
 T tensorflow::RewriterConfig::IsInitialized() const
 T tensorflow::RewriterConfig::MergeFrom(tensorflow::RewriterConfig const&)
 T tensorflow::RewriterConfig::RewriterConfig()
 T tensorflow::RewriterConfig::RewriterConfig(tensorflow::RewriterConfig const&)
 T tensorflow::RewriterConfig::SetCachedSize(int) const
 T tensorflow::RewriterConfig::SharedCtor()
 T tensorflow::RewriterConfig::SharedDtor()
 T tensorflow::RewriterConfig::Swap(tensorflow::RewriterConfig*)
 T tensorflow::RewriterConfig::UnsafeArenaSwap(tensorflow::RewriterConfig*)
 T tensorflow::RewriterConfig::_slow_mutable_auto_parallel()
 T tensorflow::RewriterConfig::_slow_release_auto_parallel()
 T tensorflow::RewriterConfig::default_instance()
 T tensorflow::RewriterConfig::descriptor()
 T tensorflow::RewriterConfig::unsafe_arena_release_auto_parallel()
 T tensorflow::RewriterConfig::unsafe_arena_set_allocated_auto_parallel(tensorflow::AutoParallelOptions*)
 T tensorflow::RewriterConfig::~RewriterConfig()
 T tensorflow::RewriterConfig_MemOptType_IsValid(int)
 T tensorflow::RewriterConfig_MemOptType_descriptor()
 T tensorflow::RewriterConfig_Toggle_IsValid(int)
 T tensorflow::RewriterConfig_Toggle_descriptor()
 T tensorflow::RowDenseCopy(unsigned long const&, tensorflow::DataType const&, tensorflow::Tensor const&, tensorflow::Tensor*)
 T tensorflow::RunConfiguration::ArenaDtor(void*)
 T tensorflow::RunConfiguration::ByteSizeLong() const
 T tensorflow::RunConfiguration::Clear()
 T tensorflow::RunConfiguration::CopyFrom(tensorflow::RunConfiguration const&)
 T tensorflow::RunConfiguration::GetMetadata() const
 T tensorflow::RunConfiguration::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::RunConfiguration::InternalSwap(tensorflow::RunConfiguration*)
 T tensorflow::RunConfiguration::IsInitialized() const
 T tensorflow::RunConfiguration::MergeFrom(tensorflow::RunConfiguration const&)
 T tensorflow::RunConfiguration::RunConfiguration()
 T tensorflow::RunConfiguration::RunConfiguration(tensorflow::RunConfiguration const&)
 T tensorflow::RunConfiguration::SetCachedSize(int) const
 T tensorflow::RunConfiguration::SharedCtor()
 T tensorflow::RunConfiguration::SharedDtor()
 T tensorflow::RunConfiguration::Swap(tensorflow::RunConfiguration*)
 T tensorflow::RunConfiguration::UnsafeArenaSwap(tensorflow::RunConfiguration*)
 T tensorflow::RunConfiguration::default_instance()
 T tensorflow::RunConfiguration::descriptor()
 T tensorflow::RunConfiguration::~RunConfiguration()
 T tensorflow::RunMetadata::ArenaDtor(void*)
 T tensorflow::RunMetadata::ByteSizeLong() const
 T tensorflow::RunMetadata::Clear()
 T tensorflow::RunMetadata::CopyFrom(tensorflow::RunMetadata const&)
 T tensorflow::RunMetadata::GetMetadata() const
 T tensorflow::RunMetadata::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::RunMetadata::InternalSwap(tensorflow::RunMetadata*)
 T tensorflow::RunMetadata::IsInitialized() const
 T tensorflow::RunMetadata::MergeFrom(tensorflow::RunMetadata const&)
 T tensorflow::RunMetadata::RunMetadata()
 T tensorflow::RunMetadata::RunMetadata(tensorflow::RunMetadata const&)
 T tensorflow::RunMetadata::SetCachedSize(int) const
 T tensorflow::RunMetadata::SharedCtor()
 T tensorflow::RunMetadata::SharedDtor()
 T tensorflow::RunMetadata::Swap(tensorflow::RunMetadata*)
 T tensorflow::RunMetadata::UnsafeArenaSwap(tensorflow::RunMetadata*)
 T tensorflow::RunMetadata::_slow_mutable_cost_graph()
 T tensorflow::RunMetadata::_slow_mutable_step_stats()
 T tensorflow::RunMetadata::_slow_release_cost_graph()
 T tensorflow::RunMetadata::_slow_release_step_stats()
 T tensorflow::RunMetadata::default_instance()
 T tensorflow::RunMetadata::descriptor()
 T tensorflow::RunMetadata::unsafe_arena_release_cost_graph()
 T tensorflow::RunMetadata::unsafe_arena_release_step_stats()
 T tensorflow::RunMetadata::unsafe_arena_set_allocated_cost_graph(tensorflow::CostGraphDef*)
 T tensorflow::RunMetadata::unsafe_arena_set_allocated_step_stats(tensorflow::StepStats*)
 T tensorflow::RunMetadata::~RunMetadata()
 T tensorflow::RunOptions::ArenaDtor(void*)
 T tensorflow::RunOptions::ByteSizeLong() const
 T tensorflow::RunOptions::Clear()
 T tensorflow::RunOptions::CopyFrom(tensorflow::RunOptions const&)
 T tensorflow::RunOptions::GetMetadata() const
 T tensorflow::RunOptions::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::RunOptions::InternalSwap(tensorflow::RunOptions*)
 T tensorflow::RunOptions::IsInitialized() const
 T tensorflow::RunOptions::MergeFrom(tensorflow::RunOptions const&)
 T tensorflow::RunOptions::RunOptions()
 T tensorflow::RunOptions::RunOptions(tensorflow::RunOptions const&)
 T tensorflow::RunOptions::SetCachedSize(int) const
 T tensorflow::RunOptions::SharedCtor()
 T tensorflow::RunOptions::SharedDtor()
 T tensorflow::RunOptions::Swap(tensorflow::RunOptions*)
 T tensorflow::RunOptions::UnsafeArenaSwap(tensorflow::RunOptions*)
 T tensorflow::RunOptions::_slow_mutable_debug_options()
 T tensorflow::RunOptions::_slow_release_debug_options()
 T tensorflow::RunOptions::default_instance()
 T tensorflow::RunOptions::descriptor()
 T tensorflow::RunOptions::unsafe_arena_release_debug_options()
 T tensorflow::RunOptions::unsafe_arena_set_allocated_debug_options(tensorflow::DebugOptions*)
 T tensorflow::RunOptions::~RunOptions()
 T tensorflow::RunOptions_TraceLevel_IsValid(int)
 T tensorflow::RunOptions_TraceLevel_descriptor()
 T tensorflow::RunResourceCtor(tensorflow::ResourceHandle*, unsigned long)
 T tensorflow::RunResourceDtor(tensorflow::ResourceHandle*, unsigned long)
 T tensorflow::SaveSliceInfoDef::ArenaDtor(void*)
 T tensorflow::SaveSliceInfoDef::ByteSizeLong() const
 T tensorflow::SaveSliceInfoDef::Clear()
 T tensorflow::SaveSliceInfoDef::CopyFrom(tensorflow::SaveSliceInfoDef const&)
 T tensorflow::SaveSliceInfoDef::GetMetadata() const
 T tensorflow::SaveSliceInfoDef::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::SaveSliceInfoDef::InternalSwap(tensorflow::SaveSliceInfoDef*)
 T tensorflow::SaveSliceInfoDef::IsInitialized() const
 T tensorflow::SaveSliceInfoDef::MergeFrom(tensorflow::SaveSliceInfoDef const&)
 T tensorflow::SaveSliceInfoDef::SaveSliceInfoDef()
 T tensorflow::SaveSliceInfoDef::SaveSliceInfoDef(tensorflow::SaveSliceInfoDef const&)
 T tensorflow::SaveSliceInfoDef::SetCachedSize(int) const
 T tensorflow::SaveSliceInfoDef::SharedCtor()
 T tensorflow::SaveSliceInfoDef::SharedDtor()
 T tensorflow::SaveSliceInfoDef::Swap(tensorflow::SaveSliceInfoDef*)
 T tensorflow::SaveSliceInfoDef::UnsafeArenaSwap(tensorflow::SaveSliceInfoDef*)
 T tensorflow::SaveSliceInfoDef::default_instance()
 T tensorflow::SaveSliceInfoDef::descriptor()
 T tensorflow::SaveSliceInfoDef::~SaveSliceInfoDef()
 T tensorflow::SavedModel::ArenaDtor(void*)
 T tensorflow::SavedModel::ByteSizeLong() const
 T tensorflow::SavedModel::Clear()
 T tensorflow::SavedModel::CopyFrom(tensorflow::SavedModel const&)
 T tensorflow::SavedModel::GetMetadata() const
 T tensorflow::SavedModel::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::SavedModel::InternalSwap(tensorflow::SavedModel*)
 T tensorflow::SavedModel::IsInitialized() const
 T tensorflow::SavedModel::MergeFrom(tensorflow::SavedModel const&)
 T tensorflow::SavedModel::SavedModel()
 T tensorflow::SavedModel::SavedModel(tensorflow::SavedModel const&)
 T tensorflow::SavedModel::SetCachedSize(int) const
 T tensorflow::SavedModel::SharedCtor()
 T tensorflow::SavedModel::SharedDtor()
 T tensorflow::SavedModel::Swap(tensorflow::SavedModel*)
 T tensorflow::SavedModel::UnsafeArenaSwap(tensorflow::SavedModel*)
 T tensorflow::SavedModel::default_instance()
 T tensorflow::SavedModel::descriptor()
 T tensorflow::SavedModel::~SavedModel()
 T tensorflow::SavedSlice::ArenaDtor(void*)
 T tensorflow::SavedSlice::ByteSizeLong() const
 T tensorflow::SavedSlice::Clear()
 T tensorflow::SavedSlice::CopyFrom(tensorflow::SavedSlice const&)
 T tensorflow::SavedSlice::GetMetadata() const
 T tensorflow::SavedSlice::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::SavedSlice::InternalSwap(tensorflow::SavedSlice*)
 T tensorflow::SavedSlice::IsInitialized() const
 T tensorflow::SavedSlice::MergeFrom(tensorflow::SavedSlice const&)
 T tensorflow::SavedSlice::SavedSlice()
 T tensorflow::SavedSlice::SavedSlice(tensorflow::SavedSlice const&)
 T tensorflow::SavedSlice::SetCachedSize(int) const
 T tensorflow::SavedSlice::SharedCtor()
 T tensorflow::SavedSlice::SharedDtor()
 T tensorflow::SavedSlice::Swap(tensorflow::SavedSlice*)
 T tensorflow::SavedSlice::UnsafeArenaSwap(tensorflow::SavedSlice*)
 T tensorflow::SavedSlice::_slow_mutable_data()
 T tensorflow::SavedSlice::_slow_mutable_slice()
 T tensorflow::SavedSlice::_slow_release_data()
 T tensorflow::SavedSlice::_slow_release_slice()
 T tensorflow::SavedSlice::default_instance()
 T tensorflow::SavedSlice::descriptor()
 T tensorflow::SavedSlice::unsafe_arena_release_data()
 T tensorflow::SavedSlice::unsafe_arena_release_slice()
 T tensorflow::SavedSlice::unsafe_arena_set_allocated_data(tensorflow::TensorProto*)
 T tensorflow::SavedSlice::unsafe_arena_set_allocated_slice(tensorflow::TensorSliceProto*)
 T tensorflow::SavedSlice::~SavedSlice()
 T tensorflow::SavedSliceMeta::ArenaDtor(void*)
 T tensorflow::SavedSliceMeta::ByteSizeLong() const
 T tensorflow::SavedSliceMeta::Clear()
 T tensorflow::SavedSliceMeta::CopyFrom(tensorflow::SavedSliceMeta const&)
 T tensorflow::SavedSliceMeta::GetMetadata() const
 T tensorflow::SavedSliceMeta::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::SavedSliceMeta::InternalSwap(tensorflow::SavedSliceMeta*)
 T tensorflow::SavedSliceMeta::IsInitialized() const
 T tensorflow::SavedSliceMeta::MergeFrom(tensorflow::SavedSliceMeta const&)
 T tensorflow::SavedSliceMeta::SavedSliceMeta()
 T tensorflow::SavedSliceMeta::SavedSliceMeta(tensorflow::SavedSliceMeta const&)
 T tensorflow::SavedSliceMeta::SetCachedSize(int) const
 T tensorflow::SavedSliceMeta::SharedCtor()
 T tensorflow::SavedSliceMeta::SharedDtor()
 T tensorflow::SavedSliceMeta::Swap(tensorflow::SavedSliceMeta*)
 T tensorflow::SavedSliceMeta::UnsafeArenaSwap(tensorflow::SavedSliceMeta*)
 T tensorflow::SavedSliceMeta::_slow_mutable_shape()
 T tensorflow::SavedSliceMeta::_slow_release_shape()
 T tensorflow::SavedSliceMeta::default_instance()
 T tensorflow::SavedSliceMeta::descriptor()
 T tensorflow::SavedSliceMeta::unsafe_arena_release_shape()
 T tensorflow::SavedSliceMeta::unsafe_arena_set_allocated_shape(tensorflow::TensorShapeProto*)
 T tensorflow::SavedSliceMeta::~SavedSliceMeta()
 T tensorflow::SavedTensorSliceMeta::ArenaDtor(void*)
 T tensorflow::SavedTensorSliceMeta::ByteSizeLong() const
 T tensorflow::SavedTensorSliceMeta::Clear()
 T tensorflow::SavedTensorSliceMeta::CopyFrom(tensorflow::SavedTensorSliceMeta const&)
 T tensorflow::SavedTensorSliceMeta::GetMetadata() const
 T tensorflow::SavedTensorSliceMeta::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::SavedTensorSliceMeta::InternalSwap(tensorflow::SavedTensorSliceMeta*)
 T tensorflow::SavedTensorSliceMeta::IsInitialized() const
 T tensorflow::SavedTensorSliceMeta::MergeFrom(tensorflow::SavedTensorSliceMeta const&)
 T tensorflow::SavedTensorSliceMeta::SavedTensorSliceMeta()
 T tensorflow::SavedTensorSliceMeta::SavedTensorSliceMeta(tensorflow::SavedTensorSliceMeta const&)
 T tensorflow::SavedTensorSliceMeta::SetCachedSize(int) const
 T tensorflow::SavedTensorSliceMeta::SharedCtor()
 T tensorflow::SavedTensorSliceMeta::SharedDtor()
 T tensorflow::SavedTensorSliceMeta::Swap(tensorflow::SavedTensorSliceMeta*)
 T tensorflow::SavedTensorSliceMeta::UnsafeArenaSwap(tensorflow::SavedTensorSliceMeta*)
 T tensorflow::SavedTensorSliceMeta::_slow_mutable_versions()
 T tensorflow::SavedTensorSliceMeta::_slow_release_versions()
 T tensorflow::SavedTensorSliceMeta::default_instance()
 T tensorflow::SavedTensorSliceMeta::descriptor()
 T tensorflow::SavedTensorSliceMeta::unsafe_arena_release_versions()
 T tensorflow::SavedTensorSliceMeta::unsafe_arena_set_allocated_versions(tensorflow::VersionDef*)
 T tensorflow::SavedTensorSliceMeta::~SavedTensorSliceMeta()
 T tensorflow::SavedTensorSlices::ArenaDtor(void*)
 T tensorflow::SavedTensorSlices::ByteSizeLong() const
 T tensorflow::SavedTensorSlices::Clear()
 T tensorflow::SavedTensorSlices::CopyFrom(tensorflow::SavedTensorSlices const&)
 T tensorflow::SavedTensorSlices::GetMetadata() const
 T tensorflow::SavedTensorSlices::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::SavedTensorSlices::InternalSwap(tensorflow::SavedTensorSlices*)
 T tensorflow::SavedTensorSlices::IsInitialized() const
 T tensorflow::SavedTensorSlices::MergeFrom(tensorflow::SavedTensorSlices const&)
 T tensorflow::SavedTensorSlices::SavedTensorSlices()
 T tensorflow::SavedTensorSlices::SavedTensorSlices(tensorflow::SavedTensorSlices const&)
 T tensorflow::SavedTensorSlices::SetCachedSize(int) const
 T tensorflow::SavedTensorSlices::SharedCtor()
 T tensorflow::SavedTensorSlices::SharedDtor()
 T tensorflow::SavedTensorSlices::Swap(tensorflow::SavedTensorSlices*)
 T tensorflow::SavedTensorSlices::UnsafeArenaSwap(tensorflow::SavedTensorSlices*)
 T tensorflow::SavedTensorSlices::_slow_mutable_data()
 T tensorflow::SavedTensorSlices::_slow_mutable_meta()
 T tensorflow::SavedTensorSlices::_slow_release_data()
 T tensorflow::SavedTensorSlices::_slow_release_meta()
 T tensorflow::SavedTensorSlices::default_instance()
 T tensorflow::SavedTensorSlices::descriptor()
 T tensorflow::SavedTensorSlices::unsafe_arena_release_data()
 T tensorflow::SavedTensorSlices::unsafe_arena_release_meta()
 T tensorflow::SavedTensorSlices::unsafe_arena_set_allocated_data(tensorflow::SavedSlice*)
 T tensorflow::SavedTensorSlices::unsafe_arena_set_allocated_meta(tensorflow::SavedTensorSliceMeta*)
 T tensorflow::SavedTensorSlices::~SavedTensorSlices()
 T tensorflow::SaverDef::ArenaDtor(void*)
 T tensorflow::SaverDef::ByteSizeLong() const
 T tensorflow::SaverDef::Clear()
 T tensorflow::SaverDef::CopyFrom(tensorflow::SaverDef const&)
 T tensorflow::SaverDef::GetMetadata() const
 T tensorflow::SaverDef::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::SaverDef::InternalSwap(tensorflow::SaverDef*)
 T tensorflow::SaverDef::IsInitialized() const
 T tensorflow::SaverDef::MergeFrom(tensorflow::SaverDef const&)
 T tensorflow::SaverDef::SaverDef()
 T tensorflow::SaverDef::SaverDef(tensorflow::SaverDef const&)
 T tensorflow::SaverDef::SetCachedSize(int) const
 T tensorflow::SaverDef::SharedCtor()
 T tensorflow::SaverDef::SharedDtor()
 T tensorflow::SaverDef::Swap(tensorflow::SaverDef*)
 T tensorflow::SaverDef::UnsafeArenaSwap(tensorflow::SaverDef*)
 T tensorflow::SaverDef::default_instance()
 T tensorflow::SaverDef::descriptor()
 T tensorflow::SaverDef::~SaverDef()
 T tensorflow::SaverDef_CheckpointFormatVersion_IsValid(int)
 T tensorflow::SaverDef_CheckpointFormatVersion_descriptor()
 T tensorflow::SchedClosure(std::function<void ()>)
 T tensorflow::SchedNonBlockingClosureAfter(long long, std::function<void ()>)
 T tensorflow::SendTensorsToRendezvous(tensorflow::Rendezvous*, tensorflow::DeviceContext*, std::vector<tensorflow::AllocatorAttributes, std::allocator<tensorflow::AllocatorAttributes> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, tensorflow::gtl::ArraySlice<tensorflow::Tensor>)
 T tensorflow::SequenceExample::ArenaDtor(void*)
 T tensorflow::SequenceExample::ByteSizeLong() const
 T tensorflow::SequenceExample::Clear()
 T tensorflow::SequenceExample::CopyFrom(tensorflow::SequenceExample const&)
 T tensorflow::SequenceExample::GetMetadata() const
 T tensorflow::SequenceExample::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::SequenceExample::InternalSwap(tensorflow::SequenceExample*)
 T tensorflow::SequenceExample::IsInitialized() const
 T tensorflow::SequenceExample::MergeFrom(tensorflow::SequenceExample const&)
 T tensorflow::SequenceExample::SequenceExample()
 T tensorflow::SequenceExample::SequenceExample(tensorflow::SequenceExample const&)
 T tensorflow::SequenceExample::SetCachedSize(int) const
 T tensorflow::SequenceExample::SharedCtor()
 T tensorflow::SequenceExample::SharedDtor()
 T tensorflow::SequenceExample::Swap(tensorflow::SequenceExample*)
 T tensorflow::SequenceExample::UnsafeArenaSwap(tensorflow::SequenceExample*)
 T tensorflow::SequenceExample::_slow_mutable_context()
 T tensorflow::SequenceExample::_slow_mutable_feature_lists()
 T tensorflow::SequenceExample::_slow_release_context()
 T tensorflow::SequenceExample::_slow_release_feature_lists()
 T tensorflow::SequenceExample::default_instance()
 T tensorflow::SequenceExample::descriptor()
 T tensorflow::SequenceExample::unsafe_arena_release_context()
 T tensorflow::SequenceExample::unsafe_arena_release_feature_lists()
 T tensorflow::SequenceExample::unsafe_arena_set_allocated_context(tensorflow::Features*)
 T tensorflow::SequenceExample::unsafe_arena_set_allocated_feature_lists(tensorflow::FeatureLists*)
 T tensorflow::SequenceExample::~SequenceExample()
 T tensorflow::ServerDef::ArenaDtor(void*)
 T tensorflow::ServerDef::ByteSizeLong() const
 T tensorflow::ServerDef::Clear()
 T tensorflow::ServerDef::CopyFrom(tensorflow::ServerDef const&)
 T tensorflow::ServerDef::GetMetadata() const
 T tensorflow::ServerDef::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::ServerDef::InternalSwap(tensorflow::ServerDef*)
 T tensorflow::ServerDef::IsInitialized() const
 T tensorflow::ServerDef::MergeFrom(tensorflow::ServerDef const&)
 T tensorflow::ServerDef::ServerDef()
 T tensorflow::ServerDef::ServerDef(tensorflow::ServerDef const&)
 T tensorflow::ServerDef::SetCachedSize(int) const
 T tensorflow::ServerDef::SharedCtor()
 T tensorflow::ServerDef::SharedDtor()
 T tensorflow::ServerDef::Swap(tensorflow::ServerDef*)
 T tensorflow::ServerDef::UnsafeArenaSwap(tensorflow::ServerDef*)
 T tensorflow::ServerDef::_slow_mutable_cluster()
 T tensorflow::ServerDef::_slow_mutable_default_session_config()
 T tensorflow::ServerDef::_slow_release_cluster()
 T tensorflow::ServerDef::_slow_release_default_session_config()
 T tensorflow::ServerDef::default_instance()
 T tensorflow::ServerDef::descriptor()
 T tensorflow::ServerDef::unsafe_arena_release_cluster()
 T tensorflow::ServerDef::unsafe_arena_release_default_session_config()
 T tensorflow::ServerDef::unsafe_arena_set_allocated_cluster(tensorflow::ClusterDef*)
 T tensorflow::ServerDef::unsafe_arena_set_allocated_default_session_config(tensorflow::ConfigProto*)
 T tensorflow::ServerDef::~ServerDef()
 T tensorflow::Session::PRun(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*)
 T tensorflow::Session::PRunSetup(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::Session::Run(tensorflow::RunOptions const&, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, tensorflow::RunMetadata*)
 T tensorflow::Session::Session()
 T tensorflow::Session::~Session()
 T tensorflow::SessionFactory::GetFactory(tensorflow::SessionOptions const&, tensorflow::SessionFactory**)
 T tensorflow::SessionFactory::Register(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::SessionFactory*)
 T tensorflow::SessionLog::ArenaDtor(void*)
 T tensorflow::SessionLog::ByteSizeLong() const
 T tensorflow::SessionLog::Clear()
 T tensorflow::SessionLog::CopyFrom(tensorflow::SessionLog const&)
 T tensorflow::SessionLog::GetMetadata() const
 T tensorflow::SessionLog::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::SessionLog::InternalSwap(tensorflow::SessionLog*)
 T tensorflow::SessionLog::IsInitialized() const
 T tensorflow::SessionLog::MergeFrom(tensorflow::SessionLog const&)
 T tensorflow::SessionLog::SessionLog()
 T tensorflow::SessionLog::SessionLog(tensorflow::SessionLog const&)
 T tensorflow::SessionLog::SetCachedSize(int) const
 T tensorflow::SessionLog::SharedCtor()
 T tensorflow::SessionLog::SharedDtor()
 T tensorflow::SessionLog::Swap(tensorflow::SessionLog*)
 T tensorflow::SessionLog::UnsafeArenaSwap(tensorflow::SessionLog*)
 T tensorflow::SessionLog::default_instance()
 T tensorflow::SessionLog::descriptor()
 T tensorflow::SessionLog::~SessionLog()
 T tensorflow::SessionLog_SessionStatus_IsValid(int)
 T tensorflow::SessionLog_SessionStatus_descriptor()
 T tensorflow::SessionOptions::SessionOptions()
 T tensorflow::SessionState::AddTensor(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Tensor const&)
 T tensorflow::SessionState::DeleteTensor(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::SessionState::GetNewId()
 T tensorflow::SessionState::GetTensor(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Tensor*)
 T tensorflow::SetAttrValue(bool, tensorflow::AttrValue*)
 T tensorflow::SetAttrValue(char const*, tensorflow::AttrValue*)
 T tensorflow::SetAttrValue(double, tensorflow::AttrValue*)
 T tensorflow::SetAttrValue(float, tensorflow::AttrValue*)
 T tensorflow::SetAttrValue(int, tensorflow::AttrValue*)
 T tensorflow::SetAttrValue(long long, tensorflow::AttrValue*)
 T tensorflow::SetAttrValue(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrValue*)
 T tensorflow::SetAttrValue(std::initializer_list<bool>, tensorflow::AttrValue*)
 T tensorflow::SetAttrValue(std::vector<bool, std::allocator<bool> > const&, tensorflow::AttrValue*)
 T tensorflow::SetAttrValue(tensorflow::AttrValue const&, tensorflow::AttrValue*)
 T tensorflow::SetAttrValue(tensorflow::DataType, tensorflow::AttrValue*)
 T tensorflow::SetAttrValue(tensorflow::NameAttrList const&, tensorflow::AttrValue*)
 T tensorflow::SetAttrValue(tensorflow::PartialTensorShape const&, tensorflow::AttrValue*)
 T tensorflow::SetAttrValue(tensorflow::StringPiece, tensorflow::AttrValue*)
 T tensorflow::SetAttrValue(tensorflow::Tensor const&, tensorflow::AttrValue*)
 T tensorflow::SetAttrValue(tensorflow::TensorProto const&, tensorflow::AttrValue*)
 T tensorflow::SetAttrValue(tensorflow::TensorShape const&, tensorflow::AttrValue*)
 T tensorflow::SetAttrValue(tensorflow::TensorShapeProto const&, tensorflow::AttrValue*)
 T tensorflow::SetAttrValue(tensorflow::gtl::ArraySlice<bool>, tensorflow::AttrValue*)
 T tensorflow::SetAttrValue(tensorflow::gtl::ArraySlice<char const*>, tensorflow::AttrValue*)
 T tensorflow::SetAttrValue(tensorflow::gtl::ArraySlice<double>, tensorflow::AttrValue*)
 T tensorflow::SetAttrValue(tensorflow::gtl::ArraySlice<float>, tensorflow::AttrValue*)
 T tensorflow::SetAttrValue(tensorflow::gtl::ArraySlice<int>, tensorflow::AttrValue*)
 T tensorflow::SetAttrValue(tensorflow::gtl::ArraySlice<long long>, tensorflow::AttrValue*)
 T tensorflow::SetAttrValue(tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::AttrValue*)
 T tensorflow::SetAttrValue(tensorflow::gtl::ArraySlice<tensorflow::DataType>, tensorflow::AttrValue*)
 T tensorflow::SetAttrValue(tensorflow::gtl::ArraySlice<tensorflow::NameAttrList>, tensorflow::AttrValue*)
 T tensorflow::SetAttrValue(tensorflow::gtl::ArraySlice<tensorflow::PartialTensorShape>, tensorflow::AttrValue*)
 T tensorflow::SetAttrValue(tensorflow::gtl::ArraySlice<tensorflow::StringPiece>, tensorflow::AttrValue*)
 T tensorflow::SetAttrValue(tensorflow::gtl::ArraySlice<tensorflow::Tensor>, tensorflow::AttrValue*)
 T tensorflow::SetAttrValue(tensorflow::gtl::ArraySlice<tensorflow::TensorProto>, tensorflow::AttrValue*)
 T tensorflow::SetAttrValue(tensorflow::gtl::ArraySlice<tensorflow::TensorShape>, tensorflow::AttrValue*)
 T tensorflow::SetAttrValue(tensorflow::gtl::ArraySlice<tensorflow::TensorShapeProto>, tensorflow::AttrValue*)
 T tensorflow::SetIncarnation(tensorflow::PartitionOptions const&, tensorflow::GraphDef*)
 T tensorflow::SetIncarnation(tensorflow::PartitionOptions const&, tensorflow::NodeDef*)
 T tensorflow::ShapeRefiner::AddNode(tensorflow::Node const*)
 T tensorflow::ShapeRefiner::ConstantPartialShape(tensorflow::shape_inference::InferenceContext*, tensorflow::Node const*, int, tensorflow::shape_inference::ShapeHandle*)
 T tensorflow::ShapeRefiner::EvaluateConstantTensorForEdge(tensorflow::Node const*, int, bool*, tensorflow::Tensor*)
 T tensorflow::ShapeRefiner::ExtractConstantSubgraph(tensorflow::Node*, tensorflow::Graph*, bool*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > >*)
 T tensorflow::ShapeRefiner::InferShapesForFunction(tensorflow::FunctionDef const*, bool, tensorflow::ExtendedInferenceContext*)
 T tensorflow::ShapeRefiner::IsUpdatedShapesOrTypes(tensorflow::shape_inference::InferenceContext*, std::vector<tensorflow::shape_inference::ShapeAndType, std::allocator<tensorflow::shape_inference::ShapeAndType> > const&, std::vector<tensorflow::shape_inference::ShapeAndType, std::allocator<tensorflow::shape_inference::ShapeAndType> > const&)
 T tensorflow::ShapeRefiner::RunShapeFn(tensorflow::Node const*, tensorflow::OpRegistrationData const*, tensorflow::ExtendedInferenceContext*)
 T tensorflow::ShapeRefiner::SameDefinedShape(tensorflow::shape_inference::InferenceContext*, tensorflow::shape_inference::ShapeHandle, tensorflow::shape_inference::ShapeHandle)
 T tensorflow::ShapeRefiner::SetShape(tensorflow::Node const*, int, tensorflow::shape_inference::ShapeHandle)
 T tensorflow::ShapeRefiner::ShapeRefiner(int, tensorflow::OpRegistryInterface const*)
 T tensorflow::ShapeRefiner::ShapeRefiner(tensorflow::VersionDef const&, tensorflow::OpRegistryInterface const*)
 T tensorflow::ShapeRefiner::TryToInferTensorOutputFromInputShapes(tensorflow::Edge const*, tensorflow::Tensor*, bool*)
 T tensorflow::ShapeRefiner::UpdateNode(tensorflow::Node const*, bool, bool*)
 T tensorflow::ShapeRefiner::~ShapeRefiner()
 T tensorflow::Shard(int, tensorflow::thread::ThreadPool*, long long, long long, std::function<void (long long, long long)>)
 T tensorflow::SignatureDef::ArenaDtor(void*)
 T tensorflow::SignatureDef::ByteSizeLong() const
 T tensorflow::SignatureDef::Clear()
 T tensorflow::SignatureDef::CopyFrom(tensorflow::SignatureDef const&)
 T tensorflow::SignatureDef::GetMetadata() const
 T tensorflow::SignatureDef::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::SignatureDef::InternalSwap(tensorflow::SignatureDef*)
 T tensorflow::SignatureDef::IsInitialized() const
 T tensorflow::SignatureDef::MergeFrom(tensorflow::SignatureDef const&)
 T tensorflow::SignatureDef::SetCachedSize(int) const
 T tensorflow::SignatureDef::SharedCtor()
 T tensorflow::SignatureDef::SharedDtor()
 T tensorflow::SignatureDef::SignatureDef()
 T tensorflow::SignatureDef::SignatureDef(tensorflow::SignatureDef const&)
 T tensorflow::SignatureDef::SignatureDef_InputsEntry::GetMetadata() const
 T tensorflow::SignatureDef::SignatureDef_InputsEntry::MergeFrom(tensorflow::SignatureDef::SignatureDef_InputsEntry const&)
 T tensorflow::SignatureDef::SignatureDef_InputsEntry::SignatureDef_InputsEntry()
 T tensorflow::SignatureDef::SignatureDef_OutputsEntry::GetMetadata() const
 T tensorflow::SignatureDef::SignatureDef_OutputsEntry::MergeFrom(tensorflow::SignatureDef::SignatureDef_OutputsEntry const&)
 T tensorflow::SignatureDef::SignatureDef_OutputsEntry::SignatureDef_OutputsEntry()
 T tensorflow::SignatureDef::Swap(tensorflow::SignatureDef*)
 T tensorflow::SignatureDef::UnsafeArenaSwap(tensorflow::SignatureDef*)
 T tensorflow::SignatureDef::default_instance()
 T tensorflow::SignatureDef::descriptor()
 T tensorflow::SignatureDef::~SignatureDef()
 T tensorflow::SingleExampleProtoToTensors(tensorflow::Example const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, std::vector<tensorflow::FixedLenFeature, std::allocator<tensorflow::FixedLenFeature> > const&, std::vector<tensorflow::VarLenFeature, std::allocator<tensorflow::VarLenFeature> > const&, std::vector<tensorflow::Tensor*, std::allocator<tensorflow::Tensor*> >*, std::vector<std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >, std::allocator<std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> > > >*)
 T tensorflow::SliceDebugString[abi:cxx11](tensorflow::TensorShape const&, long long)
 T tensorflow::StatSummarizer::ColumnString[abi:cxx11](tensorflow::StatSummarizer::Detail const&, long long, tensorflow::Stat<long long, double> const&) const
 T tensorflow::StatSummarizer::ComputeStatsByType(std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long long> > >*, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long long> > >*, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long long> > >*, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long long> > >*, long long*) const
 T tensorflow::StatSummarizer::GetOutputString[abi:cxx11]() const
 T tensorflow::StatSummarizer::GetStatsByMetric(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::StatSummarizer::SortingMetric, int) const
 T tensorflow::StatSummarizer::GetStatsByNodeType[abi:cxx11]() const
 T tensorflow::StatSummarizer::HeaderString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
 T tensorflow::StatSummarizer::OrderNodesByMetric(tensorflow::StatSummarizer::SortingMetric, std::vector<tensorflow::StatSummarizer::Detail const*, std::allocator<tensorflow::StatSummarizer::Detail const*> >*) const
 T tensorflow::StatSummarizer::PrintOutputs() const
 T tensorflow::StatSummarizer::PrintStepStats() const
 T tensorflow::StatSummarizer::ProcessStepStats(tensorflow::StepStats const&)
 T tensorflow::StatSummarizer::Reset()
 T tensorflow::StatSummarizer::ShortSummary[abi:cxx11]() const
 T tensorflow::StatSummarizer::StatSummarizer(tensorflow::GraphDef const&)
 T tensorflow::StatSummarizer::StatSummarizer(tensorflow::StatSummarizerOptions const&)
 T tensorflow::StatSummarizer::Validate(tensorflow::StatSummarizer::Detail const*, tensorflow::NodeExecStats const&) const
 T tensorflow::StatSummarizer::~StatSummarizer()
 T tensorflow::Status perftools::gputools::PluginRegistry::RegisterFactory<perftools::gputools::blas::BlasSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>(void*, void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, perftools::gputools::blas::BlasSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*))
 T tensorflow::Status perftools::gputools::PluginRegistry::RegisterFactory<perftools::gputools::dnn::DnnSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>(void*, void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, perftools::gputools::dnn::DnnSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*))
 T tensorflow::Status perftools::gputools::PluginRegistry::RegisterFactory<perftools::gputools::fft::FftSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>(void*, void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, perftools::gputools::fft::FftSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*))
 T tensorflow::Status perftools::gputools::PluginRegistry::RegisterFactory<perftools::gputools::rng::RngSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>(void*, void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, perftools::gputools::rng::RngSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*))
 T tensorflow::Status perftools::gputools::PluginRegistry::RegisterFactoryForAllPlatforms<perftools::gputools::blas::BlasSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, perftools::gputools::blas::BlasSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*))
 T tensorflow::Status perftools::gputools::PluginRegistry::RegisterFactoryForAllPlatforms<perftools::gputools::dnn::DnnSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, perftools::gputools::dnn::DnnSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*))
 T tensorflow::Status perftools::gputools::PluginRegistry::RegisterFactoryForAllPlatforms<perftools::gputools::fft::FftSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, perftools::gputools::fft::FftSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*))
 T tensorflow::Status perftools::gputools::PluginRegistry::RegisterFactoryForAllPlatforms<perftools::gputools::rng::RngSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, perftools::gputools::rng::RngSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*))
 T tensorflow::Status tensorflow::checkpoint::TensorSliceWriter::SaveData<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, long long, tensorflow::SavedSlice*)
 T tensorflow::Status::IgnoreError() const
 T tensorflow::Status::SlowCopyFrom(tensorflow::Status::State const*)
 T tensorflow::Status::Status(tensorflow::error::Code, tensorflow::StringPiece)
 T tensorflow::Status::ToString[abi:cxx11]() const
 T tensorflow::Status::Update(tensorflow::Status const&)
 T tensorflow::Status::empty_string[abi:cxx11]()
 T tensorflow::StepStats::ArenaDtor(void*)
 T tensorflow::StepStats::ByteSizeLong() const
 T tensorflow::StepStats::Clear()
 T tensorflow::StepStats::CopyFrom(tensorflow::StepStats const&)
 T tensorflow::StepStats::GetMetadata() const
 T tensorflow::StepStats::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::StepStats::InternalSwap(tensorflow::StepStats*)
 T tensorflow::StepStats::IsInitialized() const
 T tensorflow::StepStats::MergeFrom(tensorflow::StepStats const&)
 T tensorflow::StepStats::SetCachedSize(int) const
 T tensorflow::StepStats::SharedCtor()
 T tensorflow::StepStats::SharedDtor()
 T tensorflow::StepStats::StepStats()
 T tensorflow::StepStats::StepStats(tensorflow::StepStats const&)
 T tensorflow::StepStats::Swap(tensorflow::StepStats*)
 T tensorflow::StepStats::UnsafeArenaSwap(tensorflow::StepStats*)
 T tensorflow::StepStats::default_instance()
 T tensorflow::StepStats::descriptor()
 T tensorflow::StepStats::~StepStats()
 T tensorflow::StepStatsCollector::BuildCostModel(tensorflow::CostModelManager*, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Graph const*, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Graph const*> > > const&)
 T tensorflow::StepStatsCollector::Finalize()
 T tensorflow::StepStatsCollector::FinalizeAndSwap(tensorflow::StepStats*)
 T tensorflow::StepStatsCollector::FinalizeInternal()
 T tensorflow::StepStatsCollector::ReportAllocsOnResourceExhausted(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::StepStatsCollector::Save(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::NodeExecStats*)
 T tensorflow::StepStatsCollector::Save(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::NodeExecStatsWrapper*)
 T tensorflow::StepStatsCollector::StepStatsCollector(tensorflow::StepStats*)
 T tensorflow::StringPiece::contains(tensorflow::StringPiece) const
 T tensorflow::StringPiece::find(char, unsigned long) const
 T tensorflow::StringPiece::rfind(char, unsigned long) const
 T tensorflow::StringPiece::substr(unsigned long, unsigned long) const
 T tensorflow::StringPieceHasher::operator()(tensorflow::StringPiece) const
 T tensorflow::StrippedOpListForGraph(tensorflow::GraphDef const&, tensorflow::OpRegistryInterface const&, tensorflow::OpList*)
 T tensorflow::SubProcess::ClosePipes()
 T tensorflow::SubProcess::Communicate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::SubProcess::FreeArgs()
 T tensorflow::SubProcess::Kill(int)
 T tensorflow::SubProcess::SetChannelAction(tensorflow::Channel, tensorflow::ChannelAction)
 T tensorflow::SubProcess::SetProgram(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
 T tensorflow::SubProcess::Start()
 T tensorflow::SubProcess::SubProcess(int)
 T tensorflow::SubProcess::Wait()
 T tensorflow::SubProcess::WaitInternal(int*)
 T tensorflow::SubProcess::~SubProcess()
 T tensorflow::SubstitutePlaceholders(std::function<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrValue*)> const&, tensorflow::AttrValue*)
 T tensorflow::SummarizeAttrValue[abi:cxx11](tensorflow::AttrValue const&)
 T tensorflow::SummarizeGraphDef[abi:cxx11](tensorflow::GraphDef const&)
 T tensorflow::SummarizeNodeDef[abi:cxx11](tensorflow::NodeDef const&)
 T tensorflow::SummarizeNode[abi:cxx11](tensorflow::Node const&)
 T tensorflow::SummarizeOpDef[abi:cxx11](tensorflow::OpDef const&)
 T tensorflow::Summary::ArenaDtor(void*)
 T tensorflow::Summary::ByteSizeLong() const
 T tensorflow::Summary::Clear()
 T tensorflow::Summary::CopyFrom(tensorflow::Summary const&)
 T tensorflow::Summary::GetMetadata() const
 T tensorflow::Summary::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::Summary::InternalSwap(tensorflow::Summary*)
 T tensorflow::Summary::IsInitialized() const
 T tensorflow::Summary::MergeFrom(tensorflow::Summary const&)
 T tensorflow::Summary::SetCachedSize(int) const
 T tensorflow::Summary::SharedCtor()
 T tensorflow::Summary::SharedDtor()
 T tensorflow::Summary::Summary()
 T tensorflow::Summary::Summary(tensorflow::Summary const&)
 T tensorflow::Summary::Swap(tensorflow::Summary*)
 T tensorflow::Summary::UnsafeArenaSwap(tensorflow::Summary*)
 T tensorflow::Summary::default_instance()
 T tensorflow::Summary::descriptor()
 T tensorflow::Summary::~Summary()
 T tensorflow::SummaryDescription::ArenaDtor(void*)
 T tensorflow::SummaryDescription::ByteSizeLong() const
 T tensorflow::SummaryDescription::Clear()
 T tensorflow::SummaryDescription::CopyFrom(tensorflow::SummaryDescription const&)
 T tensorflow::SummaryDescription::GetMetadata() const
 T tensorflow::SummaryDescription::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::SummaryDescription::InternalSwap(tensorflow::SummaryDescription*)
 T tensorflow::SummaryDescription::IsInitialized() const
 T tensorflow::SummaryDescription::MergeFrom(tensorflow::SummaryDescription const&)
 T tensorflow::SummaryDescription::SetCachedSize(int) const
 T tensorflow::SummaryDescription::SharedCtor()
 T tensorflow::SummaryDescription::SharedDtor()
 T tensorflow::SummaryDescription::SummaryDescription()
 T tensorflow::SummaryDescription::SummaryDescription(tensorflow::SummaryDescription const&)
 T tensorflow::SummaryDescription::Swap(tensorflow::SummaryDescription*)
 T tensorflow::SummaryDescription::UnsafeArenaSwap(tensorflow::SummaryDescription*)
 T tensorflow::SummaryDescription::default_instance()
 T tensorflow::SummaryDescription::descriptor()
 T tensorflow::SummaryDescription::~SummaryDescription()
 T tensorflow::SummaryMetadata::ArenaDtor(void*)
 T tensorflow::SummaryMetadata::ByteSizeLong() const
 T tensorflow::SummaryMetadata::Clear()
 T tensorflow::SummaryMetadata::CopyFrom(tensorflow::SummaryMetadata const&)
 T tensorflow::SummaryMetadata::GetMetadata() const
 T tensorflow::SummaryMetadata::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::SummaryMetadata::InternalSwap(tensorflow::SummaryMetadata*)
 T tensorflow::SummaryMetadata::IsInitialized() const
 T tensorflow::SummaryMetadata::MergeFrom(tensorflow::SummaryMetadata const&)
 T tensorflow::SummaryMetadata::SetCachedSize(int) const
 T tensorflow::SummaryMetadata::SharedCtor()
 T tensorflow::SummaryMetadata::SharedDtor()
 T tensorflow::SummaryMetadata::SummaryMetadata()
 T tensorflow::SummaryMetadata::SummaryMetadata(tensorflow::SummaryMetadata const&)
 T tensorflow::SummaryMetadata::Swap(tensorflow::SummaryMetadata*)
 T tensorflow::SummaryMetadata::UnsafeArenaSwap(tensorflow::SummaryMetadata*)
 T tensorflow::SummaryMetadata::_slow_mutable_plugin_data()
 T tensorflow::SummaryMetadata::_slow_release_plugin_data()
 T tensorflow::SummaryMetadata::default_instance()
 T tensorflow::SummaryMetadata::descriptor()
 T tensorflow::SummaryMetadata::unsafe_arena_release_plugin_data()
 T tensorflow::SummaryMetadata::unsafe_arena_set_allocated_plugin_data(tensorflow::SummaryMetadata_PluginData*)
 T tensorflow::SummaryMetadata::~SummaryMetadata()
 T tensorflow::SummaryMetadata_PluginData::ArenaDtor(void*)
 T tensorflow::SummaryMetadata_PluginData::ByteSizeLong() const
 T tensorflow::SummaryMetadata_PluginData::Clear()
 T tensorflow::SummaryMetadata_PluginData::CopyFrom(tensorflow::SummaryMetadata_PluginData const&)
 T tensorflow::SummaryMetadata_PluginData::GetMetadata() const
 T tensorflow::SummaryMetadata_PluginData::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::SummaryMetadata_PluginData::InternalSwap(tensorflow::SummaryMetadata_PluginData*)
 T tensorflow::SummaryMetadata_PluginData::IsInitialized() const
 T tensorflow::SummaryMetadata_PluginData::MergeFrom(tensorflow::SummaryMetadata_PluginData const&)
 T tensorflow::SummaryMetadata_PluginData::SetCachedSize(int) const
 T tensorflow::SummaryMetadata_PluginData::SharedCtor()
 T tensorflow::SummaryMetadata_PluginData::SharedDtor()
 T tensorflow::SummaryMetadata_PluginData::SummaryMetadata_PluginData()
 T tensorflow::SummaryMetadata_PluginData::SummaryMetadata_PluginData(tensorflow::SummaryMetadata_PluginData const&)
 T tensorflow::SummaryMetadata_PluginData::Swap(tensorflow::SummaryMetadata_PluginData*)
 T tensorflow::SummaryMetadata_PluginData::UnsafeArenaSwap(tensorflow::SummaryMetadata_PluginData*)
 T tensorflow::SummaryMetadata_PluginData::default_instance()
 T tensorflow::SummaryMetadata_PluginData::descriptor()
 T tensorflow::SummaryMetadata_PluginData::~SummaryMetadata_PluginData()
 T tensorflow::Summary_Audio::ArenaDtor(void*)
 T tensorflow::Summary_Audio::ByteSizeLong() const
 T tensorflow::Summary_Audio::Clear()
 T tensorflow::Summary_Audio::CopyFrom(tensorflow::Summary_Audio const&)
 T tensorflow::Summary_Audio::GetMetadata() const
 T tensorflow::Summary_Audio::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::Summary_Audio::InternalSwap(tensorflow::Summary_Audio*)
 T tensorflow::Summary_Audio::IsInitialized() const
 T tensorflow::Summary_Audio::MergeFrom(tensorflow::Summary_Audio const&)
 T tensorflow::Summary_Audio::SetCachedSize(int) const
 T tensorflow::Summary_Audio::SharedCtor()
 T tensorflow::Summary_Audio::SharedDtor()
 T tensorflow::Summary_Audio::Summary_Audio()
 T tensorflow::Summary_Audio::Summary_Audio(tensorflow::Summary_Audio const&)
 T tensorflow::Summary_Audio::Swap(tensorflow::Summary_Audio*)
 T tensorflow::Summary_Audio::UnsafeArenaSwap(tensorflow::Summary_Audio*)
 T tensorflow::Summary_Audio::default_instance()
 T tensorflow::Summary_Audio::descriptor()
 T tensorflow::Summary_Audio::~Summary_Audio()
 T tensorflow::Summary_Image::ArenaDtor(void*)
 T tensorflow::Summary_Image::ByteSizeLong() const
 T tensorflow::Summary_Image::Clear()
 T tensorflow::Summary_Image::CopyFrom(tensorflow::Summary_Image const&)
 T tensorflow::Summary_Image::GetMetadata() const
 T tensorflow::Summary_Image::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::Summary_Image::InternalSwap(tensorflow::Summary_Image*)
 T tensorflow::Summary_Image::IsInitialized() const
 T tensorflow::Summary_Image::MergeFrom(tensorflow::Summary_Image const&)
 T tensorflow::Summary_Image::SetCachedSize(int) const
 T tensorflow::Summary_Image::SharedCtor()
 T tensorflow::Summary_Image::SharedDtor()
 T tensorflow::Summary_Image::Summary_Image()
 T tensorflow::Summary_Image::Summary_Image(tensorflow::Summary_Image const&)
 T tensorflow::Summary_Image::Swap(tensorflow::Summary_Image*)
 T tensorflow::Summary_Image::UnsafeArenaSwap(tensorflow::Summary_Image*)
 T tensorflow::Summary_Image::default_instance()
 T tensorflow::Summary_Image::descriptor()
 T tensorflow::Summary_Image::~Summary_Image()
 T tensorflow::Summary_Value::ArenaDtor(void*)
 T tensorflow::Summary_Value::ByteSizeLong() const
 T tensorflow::Summary_Value::Clear()
 T tensorflow::Summary_Value::CopyFrom(tensorflow::Summary_Value const&)
 T tensorflow::Summary_Value::GetMetadata() const
 T tensorflow::Summary_Value::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::Summary_Value::InternalSwap(tensorflow::Summary_Value*)
 T tensorflow::Summary_Value::IsInitialized() const
 T tensorflow::Summary_Value::MergeFrom(tensorflow::Summary_Value const&)
 T tensorflow::Summary_Value::SetCachedSize(int) const
 T tensorflow::Summary_Value::SharedCtor()
 T tensorflow::Summary_Value::SharedDtor()
 T tensorflow::Summary_Value::Summary_Value()
 T tensorflow::Summary_Value::Summary_Value(tensorflow::Summary_Value const&)
 T tensorflow::Summary_Value::Swap(tensorflow::Summary_Value*)
 T tensorflow::Summary_Value::UnsafeArenaSwap(tensorflow::Summary_Value*)
 T tensorflow::Summary_Value::_slow_mutable_metadata()
 T tensorflow::Summary_Value::_slow_release_metadata()
 T tensorflow::Summary_Value::clear_value()
 T tensorflow::Summary_Value::default_instance()
 T tensorflow::Summary_Value::descriptor()
 T tensorflow::Summary_Value::unsafe_arena_release_metadata()
 T tensorflow::Summary_Value::unsafe_arena_set_allocated_metadata(tensorflow::SummaryMetadata*)
 T tensorflow::Summary_Value::~Summary_Value()
 T tensorflow::SupportedDeviceTypesForNode(std::vector<tensorflow::DeviceType, std::allocator<tensorflow::DeviceType> > const&, tensorflow::NodeDef const&, tensorflow::gtl::InlinedVector<tensorflow::DeviceType, 4>*)
 T tensorflow::SymbolicGradient(tensorflow::FunctionBody const&)
 T tensorflow::SymbolicGradientBuilder::BackpropAlongEdge(tensorflow::NodeOut const&, tensorflow::NodeOut const&)
 T tensorflow::SymbolicGradientBuilder::BackpropZerosAlongEdge(tensorflow::NodeOut const&)
 T tensorflow::SymbolicGradientBuilder::Compute()
 T tensorflow::SymbolicGradientBuilder::InitBackprop()
 T tensorflow::SymbolicGradientBuilder::SumGradients(tensorflow::NodeOut const&)
 T tensorflow::SymbolicGradientBuilder::SymbolicGradientBuilder(tensorflow::gtl::ArraySlice<tensorflow::NodeOut>, tensorflow::gtl::ArraySlice<tensorflow::NodeOut>, tensorflow::gtl::ArraySlice<tensorflow::NodeOut>, std::vector<tensorflow::NodeOut, std::allocator<tensorflow::NodeOut> >*, tensorflow::Graph*)
 T tensorflow::SymbolicGradientHelper::Compute()
 T tensorflow::SymbolicGradientHelper::Copy()
 T tensorflow::TaggedRunMetadata::ArenaDtor(void*)
 T tensorflow::TaggedRunMetadata::ByteSizeLong() const
 T tensorflow::TaggedRunMetadata::Clear()
 T tensorflow::TaggedRunMetadata::CopyFrom(tensorflow::TaggedRunMetadata const&)
 T tensorflow::TaggedRunMetadata::GetMetadata() const
 T tensorflow::TaggedRunMetadata::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::TaggedRunMetadata::InternalSwap(tensorflow::TaggedRunMetadata*)
 T tensorflow::TaggedRunMetadata::IsInitialized() const
 T tensorflow::TaggedRunMetadata::MergeFrom(tensorflow::TaggedRunMetadata const&)
 T tensorflow::TaggedRunMetadata::SetCachedSize(int) const
 T tensorflow::TaggedRunMetadata::SharedCtor()
 T tensorflow::TaggedRunMetadata::SharedDtor()
 T tensorflow::TaggedRunMetadata::Swap(tensorflow::TaggedRunMetadata*)
 T tensorflow::TaggedRunMetadata::TaggedRunMetadata()
 T tensorflow::TaggedRunMetadata::TaggedRunMetadata(tensorflow::TaggedRunMetadata const&)
 T tensorflow::TaggedRunMetadata::UnsafeArenaSwap(tensorflow::TaggedRunMetadata*)
 T tensorflow::TaggedRunMetadata::default_instance()
 T tensorflow::TaggedRunMetadata::descriptor()
 T tensorflow::TaggedRunMetadata::~TaggedRunMetadata()
 T tensorflow::Tensor::AllocatedBytes() const
 T tensorflow::Tensor::AsProtoField(tensorflow::TensorProto*) const
 T tensorflow::Tensor::AsProtoTensorContent(tensorflow::TensorProto*) const
 T tensorflow::Tensor::CanUseDMA() const
 T tensorflow::Tensor::CheckIsAlignedAndSingleElement() const
 T tensorflow::Tensor::CheckType(tensorflow::DataType) const
 T tensorflow::Tensor::CheckTypeAndIsAligned(tensorflow::DataType) const
 T tensorflow::Tensor::ComputeFlatInnerDims(tensorflow::gtl::ArraySlice<long long>, long long)
 T tensorflow::Tensor::ComputeFlatOuterDims(tensorflow::gtl::ArraySlice<long long>, long long)
 T tensorflow::Tensor::CopyFromInternal(tensorflow::Tensor const&, tensorflow::TensorShape const&)
 T tensorflow::Tensor::DebugString[abi:cxx11]() const
 T tensorflow::Tensor::FillDescription(tensorflow::TensorDescription*) const
 T tensorflow::Tensor::FromProto(tensorflow::Allocator*, tensorflow::TensorProto const&)
 T tensorflow::Tensor::FromProto(tensorflow::TensorProto const&)
 T tensorflow::Tensor::IsInitialized() const
 T tensorflow::Tensor::RefCountIsOne() const
 T tensorflow::Tensor::SharesBufferWith(tensorflow::Tensor const&) const
 T tensorflow::Tensor::Slice(long long, long long) const
 T tensorflow::Tensor::SummarizeValue[abi:cxx11](long long) const
 T tensorflow::Tensor::Tensor()
 T tensorflow::Tensor::Tensor(tensorflow::Allocator*, tensorflow::DataType, tensorflow::TensorShape const&)
 T tensorflow::Tensor::Tensor(tensorflow::Allocator*, tensorflow::DataType, tensorflow::TensorShape const&, tensorflow::AllocationAttributes const&)
 T tensorflow::Tensor::Tensor(tensorflow::DataType)
 T tensorflow::Tensor::Tensor(tensorflow::DataType, tensorflow::TensorShape const&)
 T tensorflow::Tensor::Tensor(tensorflow::DataType, tensorflow::TensorShape const&, tensorflow::TensorBuffer*)
 T tensorflow::Tensor::TotalBytes() const
 T tensorflow::Tensor::UnsafeCopyFromInternal(tensorflow::Tensor const&, tensorflow::DataType, tensorflow::TensorShape const&)
 T tensorflow::Tensor::tensor_data() const
 T tensorflow::Tensor::~Tensor()
 T tensorflow::TensorDescription::ArenaDtor(void*)
 T tensorflow::TensorDescription::ByteSizeLong() const
 T tensorflow::TensorDescription::Clear()
 T tensorflow::TensorDescription::CopyFrom(tensorflow::TensorDescription const&)
 T tensorflow::TensorDescription::GetMetadata() const
 T tensorflow::TensorDescription::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::TensorDescription::InternalSwap(tensorflow::TensorDescription*)
 T tensorflow::TensorDescription::IsInitialized() const
 T tensorflow::TensorDescription::MergeFrom(tensorflow::TensorDescription const&)
 T tensorflow::TensorDescription::SetCachedSize(int) const
 T tensorflow::TensorDescription::SharedCtor()
 T tensorflow::TensorDescription::SharedDtor()
 T tensorflow::TensorDescription::Swap(tensorflow::TensorDescription*)
 T tensorflow::TensorDescription::TensorDescription()
 T tensorflow::TensorDescription::TensorDescription(tensorflow::TensorDescription const&)
 T tensorflow::TensorDescription::UnsafeArenaSwap(tensorflow::TensorDescription*)
 T tensorflow::TensorDescription::_slow_mutable_allocation_description()
 T tensorflow::TensorDescription::_slow_mutable_shape()
 T tensorflow::TensorDescription::_slow_release_allocation_description()
 T tensorflow::TensorDescription::_slow_release_shape()
 T tensorflow::TensorDescription::default_instance()
 T tensorflow::TensorDescription::descriptor()
 T tensorflow::TensorDescription::unsafe_arena_release_allocation_description()
 T tensorflow::TensorDescription::unsafe_arena_release_shape()
 T tensorflow::TensorDescription::unsafe_arena_set_allocated_allocation_description(tensorflow::AllocationDescription*)
 T tensorflow::TensorDescription::unsafe_arena_set_allocated_shape(tensorflow::TensorShapeProto*)
 T tensorflow::TensorDescription::~TensorDescription()
 T tensorflow::TensorInfo::ArenaDtor(void*)
 T tensorflow::TensorInfo::ByteSizeLong() const
 T tensorflow::TensorInfo::Clear()
 T tensorflow::TensorInfo::CopyFrom(tensorflow::TensorInfo const&)
 T tensorflow::TensorInfo::GetMetadata() const
 T tensorflow::TensorInfo::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::TensorInfo::InternalSwap(tensorflow::TensorInfo*)
 T tensorflow::TensorInfo::IsInitialized() const
 T tensorflow::TensorInfo::MergeFrom(tensorflow::TensorInfo const&)
 T tensorflow::TensorInfo::SetCachedSize(int) const
 T tensorflow::TensorInfo::SharedCtor()
 T tensorflow::TensorInfo::SharedDtor()
 T tensorflow::TensorInfo::Swap(tensorflow::TensorInfo*)
 T tensorflow::TensorInfo::TensorInfo()
 T tensorflow::TensorInfo::TensorInfo(tensorflow::TensorInfo const&)
 T tensorflow::TensorInfo::UnsafeArenaSwap(tensorflow::TensorInfo*)
 T tensorflow::TensorInfo::_slow_mutable_tensor_shape()
 T tensorflow::TensorInfo::_slow_release_tensor_shape()
 T tensorflow::TensorInfo::clear_encoding()
 T tensorflow::TensorInfo::default_instance()
 T tensorflow::TensorInfo::descriptor()
 T tensorflow::TensorInfo::unsafe_arena_release_tensor_shape()
 T tensorflow::TensorInfo::unsafe_arena_set_allocated_tensor_shape(tensorflow::TensorShapeProto*)
 T tensorflow::TensorInfo::~TensorInfo()
 T tensorflow::TensorInfo_CooSparse::ArenaDtor(void*)
 T tensorflow::TensorInfo_CooSparse::ByteSizeLong() const
 T tensorflow::TensorInfo_CooSparse::Clear()
 T tensorflow::TensorInfo_CooSparse::CopyFrom(tensorflow::TensorInfo_CooSparse const&)
 T tensorflow::TensorInfo_CooSparse::GetMetadata() const
 T tensorflow::TensorInfo_CooSparse::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::TensorInfo_CooSparse::InternalSwap(tensorflow::TensorInfo_CooSparse*)
 T tensorflow::TensorInfo_CooSparse::IsInitialized() const
 T tensorflow::TensorInfo_CooSparse::MergeFrom(tensorflow::TensorInfo_CooSparse const&)
 T tensorflow::TensorInfo_CooSparse::SetCachedSize(int) const
 T tensorflow::TensorInfo_CooSparse::SharedCtor()
 T tensorflow::TensorInfo_CooSparse::SharedDtor()
 T tensorflow::TensorInfo_CooSparse::Swap(tensorflow::TensorInfo_CooSparse*)
 T tensorflow::TensorInfo_CooSparse::TensorInfo_CooSparse()
 T tensorflow::TensorInfo_CooSparse::TensorInfo_CooSparse(tensorflow::TensorInfo_CooSparse const&)
 T tensorflow::TensorInfo_CooSparse::UnsafeArenaSwap(tensorflow::TensorInfo_CooSparse*)
 T tensorflow::TensorInfo_CooSparse::default_instance()
 T tensorflow::TensorInfo_CooSparse::descriptor()
 T tensorflow::TensorInfo_CooSparse::~TensorInfo_CooSparse()
 T tensorflow::TensorProto::ArenaDtor(void*)
 T tensorflow::TensorProto::ByteSizeLong() const
 T tensorflow::TensorProto::Clear()
 T tensorflow::TensorProto::CopyFrom(tensorflow::TensorProto const&)
 T tensorflow::TensorProto::GetMetadata() const
 T tensorflow::TensorProto::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::TensorProto::InternalSwap(tensorflow::TensorProto*)
 T tensorflow::TensorProto::IsInitialized() const
 T tensorflow::TensorProto::MergeFrom(tensorflow::TensorProto const&)
 T tensorflow::TensorProto::SetCachedSize(int) const
 T tensorflow::TensorProto::SharedCtor()
 T tensorflow::TensorProto::SharedDtor()
 T tensorflow::TensorProto::Swap(tensorflow::TensorProto*)
 T tensorflow::TensorProto::TensorProto()
 T tensorflow::TensorProto::TensorProto(tensorflow::TensorProto const&)
 T tensorflow::TensorProto::UnsafeArenaSwap(tensorflow::TensorProto*)
 T tensorflow::TensorProto::_slow_mutable_tensor_shape()
 T tensorflow::TensorProto::_slow_release_tensor_shape()
 T tensorflow::TensorProto::default_instance()
 T tensorflow::TensorProto::descriptor()
 T tensorflow::TensorProto::unsafe_arena_release_tensor_shape()
 T tensorflow::TensorProto::unsafe_arena_set_allocated_tensor_shape(tensorflow::TensorShapeProto*)
 T tensorflow::TensorProto::~TensorProto()
 T tensorflow::TensorReference::TensorReference(tensorflow::Tensor const&)
 T tensorflow::TensorShape::CheckDimsAtLeast(int) const
 T tensorflow::TensorShape::CheckDimsEqual(int) const
 T tensorflow::TensorShape::IsSameSize(tensorflow::TensorShape const&) const
 T tensorflow::TensorShapeProto::ArenaDtor(void*)
 T tensorflow::TensorShapeProto::ByteSizeLong() const
 T tensorflow::TensorShapeProto::Clear()
 T tensorflow::TensorShapeProto::CopyFrom(tensorflow::TensorShapeProto const&)
 T tensorflow::TensorShapeProto::GetMetadata() const
 T tensorflow::TensorShapeProto::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::TensorShapeProto::InternalSwap(tensorflow::TensorShapeProto*)
 T tensorflow::TensorShapeProto::IsInitialized() const
 T tensorflow::TensorShapeProto::MergeFrom(tensorflow::TensorShapeProto const&)
 T tensorflow::TensorShapeProto::SetCachedSize(int) const
 T tensorflow::TensorShapeProto::SharedCtor()
 T tensorflow::TensorShapeProto::SharedDtor()
 T tensorflow::TensorShapeProto::Swap(tensorflow::TensorShapeProto*)
 T tensorflow::TensorShapeProto::TensorShapeProto()
 T tensorflow::TensorShapeProto::TensorShapeProto(tensorflow::TensorShapeProto const&)
 T tensorflow::TensorShapeProto::UnsafeArenaSwap(tensorflow::TensorShapeProto*)
 T tensorflow::TensorShapeProto::default_instance()
 T tensorflow::TensorShapeProto::descriptor()
 T tensorflow::TensorShapeProto::~TensorShapeProto()
 T tensorflow::TensorShapeProto_Dim::ArenaDtor(void*)
 T tensorflow::TensorShapeProto_Dim::ByteSizeLong() const
 T tensorflow::TensorShapeProto_Dim::Clear()
 T tensorflow::TensorShapeProto_Dim::CopyFrom(tensorflow::TensorShapeProto_Dim const&)
 T tensorflow::TensorShapeProto_Dim::GetMetadata() const
 T tensorflow::TensorShapeProto_Dim::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::TensorShapeProto_Dim::InternalSwap(tensorflow::TensorShapeProto_Dim*)
 T tensorflow::TensorShapeProto_Dim::IsInitialized() const
 T tensorflow::TensorShapeProto_Dim::MergeFrom(tensorflow::TensorShapeProto_Dim const&)
 T tensorflow::TensorShapeProto_Dim::SetCachedSize(int) const
 T tensorflow::TensorShapeProto_Dim::SharedCtor()
 T tensorflow::TensorShapeProto_Dim::SharedDtor()
 T tensorflow::TensorShapeProto_Dim::Swap(tensorflow::TensorShapeProto_Dim*)
 T tensorflow::TensorShapeProto_Dim::TensorShapeProto_Dim()
 T tensorflow::TensorShapeProto_Dim::TensorShapeProto_Dim(tensorflow::TensorShapeProto_Dim const&)
 T tensorflow::TensorShapeProto_Dim::UnsafeArenaSwap(tensorflow::TensorShapeProto_Dim*)
 T tensorflow::TensorShapeProto_Dim::default_instance()
 T tensorflow::TensorShapeProto_Dim::descriptor()
 T tensorflow::TensorShapeProto_Dim::~TensorShapeProto_Dim()
 T tensorflow::TensorShapeRep::Clear()
 T tensorflow::TensorShapeRep::ClearAllButDataType()
 T tensorflow::TensorShapeRep::DebugString[abi:cxx11]() const
 T tensorflow::TensorShapeRep::DebugString[abi:cxx11](tensorflow::TensorShapeProto const&)
 T tensorflow::TensorShapeRep::DestructorOutOfLine()
 T tensorflow::TensorShapeRep::DumpRep() const
 T tensorflow::TensorShapeRep::SlowCopyFrom(tensorflow::TensorShapeRep const&)
 T tensorflow::TensorShapeUtils::EndsWith(tensorflow::TensorShape const&, tensorflow::TensorShape const&)
 T tensorflow::TensorShapeUtils::MakeShape(int const*, long long, tensorflow::PartialTensorShape*)
 T tensorflow::TensorShapeUtils::MakeShape(int const*, long long, tensorflow::TensorShape*)
 T tensorflow::TensorShapeUtils::MakeShape(long long const*, long long, tensorflow::PartialTensorShape*)
 T tensorflow::TensorShapeUtils::MakeShape(long long const*, long long, tensorflow::TensorShape*)
 T tensorflow::TensorShapeUtils::MakeShape(tensorflow::gtl::ArraySlice<int>, tensorflow::PartialTensorShape*)
 T tensorflow::TensorShapeUtils::MakeShape(tensorflow::gtl::ArraySlice<int>, tensorflow::TensorShape*)
 T tensorflow::TensorShapeUtils::MakeShape(tensorflow::gtl::ArraySlice<long long>, tensorflow::PartialTensorShape*)
 T tensorflow::TensorShapeUtils::MakeShape(tensorflow::gtl::ArraySlice<long long>, tensorflow::TensorShape*)
 T tensorflow::TensorShapeUtils::NumElements(tensorflow::gtl::ArraySlice<long long>, long long*)
 T tensorflow::TensorShapeUtils::ShapeListString[abi:cxx11](tensorflow::gtl::ArraySlice<tensorflow::TensorShape> const&)
 T tensorflow::TensorShapeUtils::StartsWith(tensorflow::TensorShape const&, tensorflow::TensorShape const&)
 T tensorflow::TensorSlice::AsProto(tensorflow::TensorSliceProto*) const
 T tensorflow::TensorSlice::Clear()
 T tensorflow::TensorSlice::ComputeRelative(tensorflow::TensorSlice const&, tensorflow::TensorSlice*) const
 T tensorflow::TensorSlice::DebugString[abi:cxx11]() const
 T tensorflow::TensorSlice::Extend(int)
 T tensorflow::TensorSlice::GetExtentLength(tensorflow::TensorSliceProto_Extent const&)
 T tensorflow::TensorSlice::HasExtentLength(tensorflow::TensorSliceProto_Extent const&)
 T tensorflow::TensorSlice::Intersect(tensorflow::TensorSlice const&, tensorflow::TensorSlice*) const
 T tensorflow::TensorSlice::IsFull() const
 T tensorflow::TensorSlice::Parse(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::TensorSlice*)
 T tensorflow::TensorSlice::SetFullSlice(int)
 T tensorflow::TensorSlice::SliceTensorShape(tensorflow::TensorShape const&, tensorflow::TensorShape*) const
 T tensorflow::TensorSlice::TensorSlice(int)
 T tensorflow::TensorSlice::TensorSlice(std::initializer_list<std::pair<long long, long long> >)
 T tensorflow::TensorSlice::TensorSlice(tensorflow::TensorSliceProto const&)
 T tensorflow::TensorSlice::UpdateToCover(tensorflow::TensorSlice const&)
 T tensorflow::TensorSlice::operator==(tensorflow::TensorSlice const&) const
 T tensorflow::TensorSliceProto::ArenaDtor(void*)
 T tensorflow::TensorSliceProto::ByteSizeLong() const
 T tensorflow::TensorSliceProto::Clear()
 T tensorflow::TensorSliceProto::CopyFrom(tensorflow::TensorSliceProto const&)
 T tensorflow::TensorSliceProto::GetMetadata() const
 T tensorflow::TensorSliceProto::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::TensorSliceProto::InternalSwap(tensorflow::TensorSliceProto*)
 T tensorflow::TensorSliceProto::IsInitialized() const
 T tensorflow::TensorSliceProto::MergeFrom(tensorflow::TensorSliceProto const&)
 T tensorflow::TensorSliceProto::SetCachedSize(int) const
 T tensorflow::TensorSliceProto::SharedCtor()
 T tensorflow::TensorSliceProto::SharedDtor()
 T tensorflow::TensorSliceProto::Swap(tensorflow::TensorSliceProto*)
 T tensorflow::TensorSliceProto::TensorSliceProto()
 T tensorflow::TensorSliceProto::TensorSliceProto(tensorflow::TensorSliceProto const&)
 T tensorflow::TensorSliceProto::UnsafeArenaSwap(tensorflow::TensorSliceProto*)
 T tensorflow::TensorSliceProto::default_instance()
 T tensorflow::TensorSliceProto::descriptor()
 T tensorflow::TensorSliceProto::~TensorSliceProto()
 T tensorflow::TensorSliceProto_Extent::ArenaDtor(void*)
 T tensorflow::TensorSliceProto_Extent::ByteSizeLong() const
 T tensorflow::TensorSliceProto_Extent::Clear()
 T tensorflow::TensorSliceProto_Extent::CopyFrom(tensorflow::TensorSliceProto_Extent const&)
 T tensorflow::TensorSliceProto_Extent::GetMetadata() const
 T tensorflow::TensorSliceProto_Extent::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::TensorSliceProto_Extent::InternalSwap(tensorflow::TensorSliceProto_Extent*)
 T tensorflow::TensorSliceProto_Extent::IsInitialized() const
 T tensorflow::TensorSliceProto_Extent::MergeFrom(tensorflow::TensorSliceProto_Extent const&)
 T tensorflow::TensorSliceProto_Extent::SetCachedSize(int) const
 T tensorflow::TensorSliceProto_Extent::SharedCtor()
 T tensorflow::TensorSliceProto_Extent::SharedDtor()
 T tensorflow::TensorSliceProto_Extent::Swap(tensorflow::TensorSliceProto_Extent*)
 T tensorflow::TensorSliceProto_Extent::TensorSliceProto_Extent()
 T tensorflow::TensorSliceProto_Extent::TensorSliceProto_Extent(tensorflow::TensorSliceProto_Extent const&)
 T tensorflow::TensorSliceProto_Extent::UnsafeArenaSwap(tensorflow::TensorSliceProto_Extent*)
 T tensorflow::TensorSliceProto_Extent::clear_has_length()
 T tensorflow::TensorSliceProto_Extent::default_instance()
 T tensorflow::TensorSliceProto_Extent::descriptor()
 T tensorflow::TensorSliceProto_Extent::~TensorSliceProto_Extent()
 T tensorflow::TensorStore::AddTensor(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::TensorStore::TensorAndKey const&)
 T tensorflow::TensorStore::SaveTensors(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, tensorflow::SessionState*)
 T tensorflow::TestResults::ArenaDtor(void*)
 T tensorflow::TestResults::ByteSizeLong() const
 T tensorflow::TestResults::Clear()
 T tensorflow::TestResults::CopyFrom(tensorflow::TestResults const&)
 T tensorflow::TestResults::GetMetadata() const
 T tensorflow::TestResults::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::TestResults::InternalSwap(tensorflow::TestResults*)
 T tensorflow::TestResults::IsInitialized() const
 T tensorflow::TestResults::MergeFrom(tensorflow::TestResults const&)
 T tensorflow::TestResults::SetCachedSize(int) const
 T tensorflow::TestResults::SharedCtor()
 T tensorflow::TestResults::SharedDtor()
 T tensorflow::TestResults::Swap(tensorflow::TestResults*)
 T tensorflow::TestResults::TestResults()
 T tensorflow::TestResults::TestResults(tensorflow::TestResults const&)
 T tensorflow::TestResults::UnsafeArenaSwap(tensorflow::TestResults*)
 T tensorflow::TestResults::_slow_mutable_build_configuration()
 T tensorflow::TestResults::_slow_mutable_commit_id()
 T tensorflow::TestResults::_slow_mutable_entries()
 T tensorflow::TestResults::_slow_mutable_machine_configuration()
 T tensorflow::TestResults::_slow_mutable_run_configuration()
 T tensorflow::TestResults::_slow_release_build_configuration()
 T tensorflow::TestResults::_slow_release_commit_id()
 T tensorflow::TestResults::_slow_release_entries()
 T tensorflow::TestResults::_slow_release_machine_configuration()
 T tensorflow::TestResults::_slow_release_run_configuration()
 T tensorflow::TestResults::default_instance()
 T tensorflow::TestResults::descriptor()
 T tensorflow::TestResults::unsafe_arena_release_build_configuration()
 T tensorflow::TestResults::unsafe_arena_release_commit_id()
 T tensorflow::TestResults::unsafe_arena_release_entries()
 T tensorflow::TestResults::unsafe_arena_release_machine_configuration()
 T tensorflow::TestResults::unsafe_arena_release_run_configuration()
 T tensorflow::TestResults::unsafe_arena_set_allocated_build_configuration(tensorflow::BuildConfiguration*)
 T tensorflow::TestResults::unsafe_arena_set_allocated_commit_id(tensorflow::CommitId*)
 T tensorflow::TestResults::unsafe_arena_set_allocated_entries(tensorflow::BenchmarkEntries*)
 T tensorflow::TestResults::unsafe_arena_set_allocated_machine_configuration(tensorflow::MachineConfiguration*)
 T tensorflow::TestResults::unsafe_arena_set_allocated_run_configuration(tensorflow::RunConfiguration*)
 T tensorflow::TestResults::~TestResults()
 T tensorflow::TestResults_BenchmarkType_IsValid(int)
 T tensorflow::TestResults_BenchmarkType_descriptor()
 T tensorflow::TfCheckOpHelperOutOfLine[abi:cxx11](tensorflow::Status const&, char const*)
 T tensorflow::Thread::~Thread()
 T tensorflow::ThreadPoolDevice::Compute(tensorflow::OpKernel*, tensorflow::OpKernelContext*)
 T tensorflow::ThreadPoolDevice::GetAllocator(tensorflow::AllocatorAttributes)
 T tensorflow::ThreadPoolDevice::MakeTensorFromProto(tensorflow::TensorProto const&, tensorflow::AllocatorAttributes, tensorflow::Tensor*)
 T tensorflow::ThreadPoolDevice::ThreadPoolDevice(tensorflow::SessionOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::gtl::IntType<tensorflow::Bytes_tag_, long long>, tensorflow::DeviceLocality const&, tensorflow::Allocator*)
 T tensorflow::ThreadPoolDevice::~ThreadPoolDevice()
 T tensorflow::ThreadPoolOptionProto::ArenaDtor(void*)
 T tensorflow::ThreadPoolOptionProto::ByteSizeLong() const
 T tensorflow::ThreadPoolOptionProto::Clear()
 T tensorflow::ThreadPoolOptionProto::CopyFrom(tensorflow::ThreadPoolOptionProto const&)
 T tensorflow::ThreadPoolOptionProto::GetMetadata() const
 T tensorflow::ThreadPoolOptionProto::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::ThreadPoolOptionProto::InternalSwap(tensorflow::ThreadPoolOptionProto*)
 T tensorflow::ThreadPoolOptionProto::IsInitialized() const
 T tensorflow::ThreadPoolOptionProto::MergeFrom(tensorflow::ThreadPoolOptionProto const&)
 T tensorflow::ThreadPoolOptionProto::SetCachedSize(int) const
 T tensorflow::ThreadPoolOptionProto::SharedCtor()
 T tensorflow::ThreadPoolOptionProto::SharedDtor()
 T tensorflow::ThreadPoolOptionProto::Swap(tensorflow::ThreadPoolOptionProto*)
 T tensorflow::ThreadPoolOptionProto::ThreadPoolOptionProto()
 T tensorflow::ThreadPoolOptionProto::ThreadPoolOptionProto(tensorflow::ThreadPoolOptionProto const&)
 T tensorflow::ThreadPoolOptionProto::UnsafeArenaSwap(tensorflow::ThreadPoolOptionProto*)
 T tensorflow::ThreadPoolOptionProto::default_instance()
 T tensorflow::ThreadPoolOptionProto::descriptor()
 T tensorflow::ThreadPoolOptionProto::~ThreadPoolOptionProto()
 T tensorflow::ToGraphDef(tensorflow::Graph const*, tensorflow::GraphDef*, bool)
 T tensorflow::ToString[abi:cxx11](tensorflow::FilterTensorFormat)
 T tensorflow::ToString[abi:cxx11](tensorflow::TensorFormat)
 T tensorflow::TopologicalSortNodesWithTimePriority(tensorflow::GraphDef const*, std::vector<std::pair<tensorflow::NodeDef const*, long long>, std::allocator<std::pair<tensorflow::NodeDef const*, long long> > >*, std::unordered_map<tensorflow::NodeDef const*, long long, std::hash<tensorflow::NodeDef const*>, std::equal_to<tensorflow::NodeDef const*>, std::allocator<std::pair<tensorflow::NodeDef const* const, long long> > >*)
 T tensorflow::TrackingAllocator::AllocateRaw(unsigned long, unsigned long, tensorflow::AllocationAttributes const&)
 T tensorflow::TrackingAllocator::AllocatedSize(void*)
 T tensorflow::TrackingAllocator::AllocationId(void*)
 T tensorflow::TrackingAllocator::DeallocateRaw(void*)
 T tensorflow::TrackingAllocator::GetCurrentRecords()
 T tensorflow::TrackingAllocator::GetRecordsAndUnRef()
 T tensorflow::TrackingAllocator::GetSizes()
 T tensorflow::TrackingAllocator::GetStats(tensorflow::AllocatorStats*)
 T tensorflow::TrackingAllocator::RequestedSize(void*)
 T tensorflow::TrackingAllocator::TrackingAllocator(tensorflow::Allocator*, bool)
 T tensorflow::TrackingAllocator::TracksAllocationSizes()
 T tensorflow::TrackingAllocator::UnRef()
 T tensorflow::UnaryVariantOpRegistry::GetBinaryOpFn(tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece)
 T tensorflow::UnaryVariantOpRegistry::GetDecodeFn(tensorflow::StringPiece)
 T tensorflow::UnaryVariantOpRegistry::GetDeviceCopyFn(tensorflow::VariantDeviceCopyDirection, tensorflow::StringPiece)
 T tensorflow::UnaryVariantOpRegistry::GetShapeFn(tensorflow::StringPiece)
 T tensorflow::UnaryVariantOpRegistry::GetUnaryOpFn(tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece)
 T tensorflow::UnaryVariantOpRegistry::Global()
 T tensorflow::UnaryVariantOpRegistry::PersistentStringStorage[abi:cxx11]()
 T tensorflow::UnaryVariantOpRegistry::RegisterBinaryOpFn(tensorflow::VariantBinaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)> const&)
 T tensorflow::UnaryVariantOpRegistry::RegisterDecodeFn(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<bool (tensorflow::Variant*)> const&)
 T tensorflow::UnaryVariantOpRegistry::RegisterDeviceCopyFn(tensorflow::VariantDeviceCopyDirection, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::Variant const&, tensorflow::Variant*, std::function<tensorflow::Status (tensorflow::Tensor const&, tensorflow::Tensor*)>)> const&)
 T tensorflow::UnaryVariantOpRegistry::RegisterShapeFn(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::Variant const&, tensorflow::TensorShape*)> const&)
 T tensorflow::UnaryVariantOpRegistry::RegisterUnaryOpFn(tensorflow::VariantUnaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*)> const&)
 T tensorflow::UniqueTensorReferences::Add(tensorflow::Tensor const&)
 T tensorflow::UniqueTensorReferences::FreezeAndReturnReferences(tensorflow::gtl::InlinedVector<tensorflow::TensorReference, 4>*)
 T tensorflow::UniqueTensorReferences::~UniqueTensorReferences()
 T tensorflow::ValidateAttrValue(tensorflow::AttrValue const&, tensorflow::OpDef_AttrDef const&)
 T tensorflow::ValidateExternalGraphDefSyntax(tensorflow::GraphDef const&)
 T tensorflow::ValidateExternalNodeDefSyntax(tensorflow::NodeDef const&)
 T tensorflow::ValidateGPUMachineManager()
 T tensorflow::ValidateKernelRegistrations(tensorflow::OpRegistryInterface const&)
 T tensorflow::ValidateMemoryTypes(tensorflow::DeviceType const&, tensorflow::Graph const*)
 T tensorflow::ValidateNodeDef(tensorflow::NodeDef const&, tensorflow::OpDef const&)
 T tensorflow::ValidateOpDef(tensorflow::OpDef const&)
 T tensorflow::ValidateOpInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool*)
 T tensorflow::ValidateOpName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::ValidateStridedSliceOp(tensorflow::Tensor const*, tensorflow::Tensor const*, tensorflow::Tensor const&, tensorflow::PartialTensorShape const&, int, int, int, int, int, tensorflow::PartialTensorShape*, tensorflow::PartialTensorShape*, bool*, bool*, bool*, tensorflow::gtl::InlinedVector<long long, 4>*, tensorflow::gtl::InlinedVector<long long, 4>*, tensorflow::gtl::InlinedVector<long long, 4>*)
 T tensorflow::ValidateStridedSliceOp(tensorflow::Tensor const*, tensorflow::Tensor const*, tensorflow::Tensor const&, tensorflow::PartialTensorShape const&, int, int, int, int, int, tensorflow::TensorShape*, tensorflow::TensorShape*, bool*, bool*, bool*, tensorflow::gtl::InlinedVector<long long, 4>*, tensorflow::gtl::InlinedVector<long long, 4>*, tensorflow::gtl::InlinedVector<long long, 4>*)
 T tensorflow::ValuesDef::ArenaDtor(void*)
 T tensorflow::ValuesDef::ByteSizeLong() const
 T tensorflow::ValuesDef::Clear()
 T tensorflow::ValuesDef::CopyFrom(tensorflow::ValuesDef const&)
 T tensorflow::ValuesDef::GetMetadata() const
 T tensorflow::ValuesDef::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::ValuesDef::InternalSwap(tensorflow::ValuesDef*)
 T tensorflow::ValuesDef::IsInitialized() const
 T tensorflow::ValuesDef::MergeFrom(tensorflow::ValuesDef const&)
 T tensorflow::ValuesDef::SetCachedSize(int) const
 T tensorflow::ValuesDef::SharedCtor()
 T tensorflow::ValuesDef::SharedDtor()
 T tensorflow::ValuesDef::Swap(tensorflow::ValuesDef*)
 T tensorflow::ValuesDef::UnsafeArenaSwap(tensorflow::ValuesDef*)
 T tensorflow::ValuesDef::ValuesDef()
 T tensorflow::ValuesDef::ValuesDef(tensorflow::ValuesDef const&)
 T tensorflow::ValuesDef::ValuesDef_ExternalValuesEntry::GetMetadata() const
 T tensorflow::ValuesDef::ValuesDef_ExternalValuesEntry::MergeFrom(tensorflow::ValuesDef::ValuesDef_ExternalValuesEntry const&)
 T tensorflow::ValuesDef::ValuesDef_ExternalValuesEntry::ValuesDef_ExternalValuesEntry()
 T tensorflow::ValuesDef::default_instance()
 T tensorflow::ValuesDef::descriptor()
 T tensorflow::ValuesDef::~ValuesDef()
 T tensorflow::VarLenFeatureProto::ArenaDtor(void*)
 T tensorflow::VarLenFeatureProto::ByteSizeLong() const
 T tensorflow::VarLenFeatureProto::Clear()
 T tensorflow::VarLenFeatureProto::CopyFrom(tensorflow::VarLenFeatureProto const&)
 T tensorflow::VarLenFeatureProto::GetMetadata() const
 T tensorflow::VarLenFeatureProto::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::VarLenFeatureProto::InternalSwap(tensorflow::VarLenFeatureProto*)
 T tensorflow::VarLenFeatureProto::IsInitialized() const
 T tensorflow::VarLenFeatureProto::MergeFrom(tensorflow::VarLenFeatureProto const&)
 T tensorflow::VarLenFeatureProto::SetCachedSize(int) const
 T tensorflow::VarLenFeatureProto::SharedCtor()
 T tensorflow::VarLenFeatureProto::SharedDtor()
 T tensorflow::VarLenFeatureProto::Swap(tensorflow::VarLenFeatureProto*)
 T tensorflow::VarLenFeatureProto::UnsafeArenaSwap(tensorflow::VarLenFeatureProto*)
 T tensorflow::VarLenFeatureProto::VarLenFeatureProto()
 T tensorflow::VarLenFeatureProto::VarLenFeatureProto(tensorflow::VarLenFeatureProto const&)
 T tensorflow::VarLenFeatureProto::default_instance()
 T tensorflow::VarLenFeatureProto::descriptor()
 T tensorflow::VarLenFeatureProto::~VarLenFeatureProto()
 T tensorflow::VariableDef::ArenaDtor(void*)
 T tensorflow::VariableDef::ByteSizeLong() const
 T tensorflow::VariableDef::Clear()
 T tensorflow::VariableDef::CopyFrom(tensorflow::VariableDef const&)
 T tensorflow::VariableDef::GetMetadata() const
 T tensorflow::VariableDef::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::VariableDef::InternalSwap(tensorflow::VariableDef*)
 T tensorflow::VariableDef::IsInitialized() const
 T tensorflow::VariableDef::MergeFrom(tensorflow::VariableDef const&)
 T tensorflow::VariableDef::SetCachedSize(int) const
 T tensorflow::VariableDef::SharedCtor()
 T tensorflow::VariableDef::SharedDtor()
 T tensorflow::VariableDef::Swap(tensorflow::VariableDef*)
 T tensorflow::VariableDef::UnsafeArenaSwap(tensorflow::VariableDef*)
 T tensorflow::VariableDef::VariableDef()
 T tensorflow::VariableDef::VariableDef(tensorflow::VariableDef const&)
 T tensorflow::VariableDef::_slow_mutable_save_slice_info_def()
 T tensorflow::VariableDef::_slow_release_save_slice_info_def()
 T tensorflow::VariableDef::default_instance()
 T tensorflow::VariableDef::descriptor()
 T tensorflow::VariableDef::unsafe_arena_release_save_slice_info_def()
 T tensorflow::VariableDef::unsafe_arena_set_allocated_save_slice_info_def(tensorflow::SaveSliceInfoDef*)
 T tensorflow::VariableDef::~VariableDef()
 T tensorflow::Variant::TryDecode(tensorflow::Variant*) const
 T tensorflow::VariantDeviceCopy(tensorflow::VariantDeviceCopyDirection, tensorflow::Variant const&, tensorflow::Variant*, std::function<tensorflow::Status (tensorflow::Tensor const&, tensorflow::Tensor*)> const&)
 T tensorflow::VariantTensorData::DebugString[abi:cxx11]() const
 T tensorflow::VariantTensorData::FromProto(tensorflow::VariantTensorDataProto const&)
 T tensorflow::VariantTensorData::ParseFromString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::VariantTensorData::SerializeAsString[abi:cxx11]() const
 T tensorflow::VariantTensorData::SerializeToString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::VariantTensorData::ToProto(tensorflow::VariantTensorDataProto*) const
 T tensorflow::VariantTensorData::VariantTensorData()
 T tensorflow::VariantTensorData::VariantTensorData(tensorflow::VariantTensorDataProto const&)
 T tensorflow::VariantTensorData::add_tensors()
 T tensorflow::VariantTensorData::tensors()
 T tensorflow::VariantTensorData::tensors(int) const
 T tensorflow::VariantTensorData::tensors_size() const
 T tensorflow::VariantTensorData::~VariantTensorData()
 T tensorflow::VariantTensorDataProto::ArenaDtor(void*)
 T tensorflow::VariantTensorDataProto::ByteSizeLong() const
 T tensorflow::VariantTensorDataProto::Clear()
 T tensorflow::VariantTensorDataProto::CopyFrom(tensorflow::VariantTensorDataProto const&)
 T tensorflow::VariantTensorDataProto::GetMetadata() const
 T tensorflow::VariantTensorDataProto::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::VariantTensorDataProto::InternalSwap(tensorflow::VariantTensorDataProto*)
 T tensorflow::VariantTensorDataProto::IsInitialized() const
 T tensorflow::VariantTensorDataProto::MergeFrom(tensorflow::VariantTensorDataProto const&)
 T tensorflow::VariantTensorDataProto::SetCachedSize(int) const
 T tensorflow::VariantTensorDataProto::SharedCtor()
 T tensorflow::VariantTensorDataProto::SharedDtor()
 T tensorflow::VariantTensorDataProto::Swap(tensorflow::VariantTensorDataProto*)
 T tensorflow::VariantTensorDataProto::UnsafeArenaSwap(tensorflow::VariantTensorDataProto*)
 T tensorflow::VariantTensorDataProto::VariantTensorDataProto()
 T tensorflow::VariantTensorDataProto::VariantTensorDataProto(tensorflow::VariantTensorDataProto const&)
 T tensorflow::VariantTensorDataProto::default_instance()
 T tensorflow::VariantTensorDataProto::descriptor()
 T tensorflow::VariantTensorDataProto::~VariantTensorDataProto()
 T tensorflow::VersionDef::ArenaDtor(void*)
 T tensorflow::VersionDef::ByteSizeLong() const
 T tensorflow::VersionDef::Clear()
 T tensorflow::VersionDef::CopyFrom(tensorflow::VersionDef const&)
 T tensorflow::VersionDef::GetMetadata() const
 T tensorflow::VersionDef::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::VersionDef::InternalSwap(tensorflow::VersionDef*)
 T tensorflow::VersionDef::IsInitialized() const
 T tensorflow::VersionDef::MergeFrom(tensorflow::VersionDef const&)
 T tensorflow::VersionDef::SetCachedSize(int) const
 T tensorflow::VersionDef::SharedCtor()
 T tensorflow::VersionDef::SharedDtor()
 T tensorflow::VersionDef::Swap(tensorflow::VersionDef*)
 T tensorflow::VersionDef::UnsafeArenaSwap(tensorflow::VersionDef*)
 T tensorflow::VersionDef::VersionDef()
 T tensorflow::VersionDef::VersionDef(tensorflow::VersionDef const&)
 T tensorflow::VersionDef::default_instance()
 T tensorflow::VersionDef::descriptor()
 T tensorflow::VersionDef::~VersionDef()
 T tensorflow::WhileContext::WhileContext(tensorflow::StringPiece, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> >, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> >, tensorflow::OutputTensor, std::vector<tensorflow::OutputTensor, std::allocator<tensorflow::OutputTensor> >, std::vector<tensorflow::OutputTensor, std::allocator<tensorflow::OutputTensor> >)
 T tensorflow::WhileContextDef::ArenaDtor(void*)
 T tensorflow::WhileContextDef::ByteSizeLong() const
 T tensorflow::WhileContextDef::Clear()
 T tensorflow::WhileContextDef::CopyFrom(tensorflow::WhileContextDef const&)
 T tensorflow::WhileContextDef::GetMetadata() const
 T tensorflow::WhileContextDef::InternalSerializeWithCachedSizesToArray(bool, unsigned char*) const
 T tensorflow::WhileContextDef::InternalSwap(tensorflow::WhileContextDef*)
 T tensorflow::WhileContextDef::IsInitialized() const
 T tensorflow::WhileContextDef::MergeFrom(tensorflow::WhileContextDef const&)
 T tensorflow::WhileContextDef::SetCachedSize(int) const
 T tensorflow::WhileContextDef::SharedCtor()
 T tensorflow::WhileContextDef::SharedDtor()
 T tensorflow::WhileContextDef::Swap(tensorflow::WhileContextDef*)
 T tensorflow::WhileContextDef::UnsafeArenaSwap(tensorflow::WhileContextDef*)
 T tensorflow::WhileContextDef::WhileContextDef()
 T tensorflow::WhileContextDef::WhileContextDef(tensorflow::WhileContextDef const&)
 T tensorflow::WhileContextDef::_slow_mutable_values_def()
 T tensorflow::WhileContextDef::_slow_release_values_def()
 T tensorflow::WhileContextDef::default_instance()
 T tensorflow::WhileContextDef::descriptor()
 T tensorflow::WhileContextDef::unsafe_arena_release_values_def()
 T tensorflow::WhileContextDef::unsafe_arena_set_allocated_values_def(tensorflow::ValuesDef*)
 T tensorflow::WhileContextDef::~WhileContextDef()
 T tensorflow::WritableFile::~WritableFile()
 T tensorflow::WriteStringToFile(tensorflow::Env*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::StringPiece const&)
 T tensorflow::bfloat16::operator Eigen::half() const
 T tensorflow::checkpoint::CreateTableTensorSliceBuilder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::checkpoint::TensorSliceWriter::Builder**)
 T tensorflow::checkpoint::DecodeTensorNameSlice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, tensorflow::TensorSlice*)
 T tensorflow::checkpoint::EncodeTensorNameSlice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::TensorSlice const&)
 T tensorflow::checkpoint::OpenTableTensorSliceReader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::checkpoint::TensorSliceReader::Table**)
 T tensorflow::checkpoint::ParseShapeAndSlice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::TensorShape*, tensorflow::TensorSlice*, tensorflow::TensorShape*)
 T tensorflow::checkpoint::RegisterTensorSlice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::TensorShape const&, tensorflow::DataType, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::TensorSlice const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::checkpoint::TensorSliceSet*, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::checkpoint::TensorSliceSet*> > >*)
 T tensorflow::checkpoint::TensorSliceReader::DebugString[abi:cxx11]() const
 T tensorflow::checkpoint::TensorSliceReader::FindTensorSlice(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::TensorSlice const&, std::vector<std::pair<tensorflow::TensorSlice, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<tensorflow::TensorSlice, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const
 T tensorflow::checkpoint::TensorSliceReader::GetTensor(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<tensorflow::Tensor, std::default_delete<tensorflow::Tensor> >*) const
 T tensorflow::checkpoint::TensorSliceReader::GetVariableToDataTypeMap[abi:cxx11]() const
 T tensorflow::checkpoint::TensorSliceReader::GetVariableToShapeMap[abi:cxx11]() const
 T tensorflow::checkpoint::TensorSliceReader::HasTensor(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::TensorShape*, tensorflow::DataType*) const
 T tensorflow::checkpoint::TensorSliceReader::LoadAllShards() const
 T tensorflow::checkpoint::TensorSliceReader::LoadShard(int) const
 T tensorflow::checkpoint::TensorSliceReader::Table::~Table()
 T tensorflow::checkpoint::TensorSliceReader::TensorSliceReader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::checkpoint::TensorSliceReader::TensorSliceReader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::checkpoint::TensorSliceReader::Table**)>)
 T tensorflow::checkpoint::TensorSliceReader::TensorSliceReader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::checkpoint::TensorSliceReader::Table**)>, int)
 T tensorflow::checkpoint::TensorSliceReader::~TensorSliceReader()
 T tensorflow::checkpoint::TensorSliceReaderCache::GetReader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::checkpoint::TensorSliceReader::Table**)>, int)
 T tensorflow::checkpoint::TensorSliceReaderCache::TensorSliceReaderCache()
 T tensorflow::checkpoint::TensorSliceReaderCache::~TensorSliceReaderCache()
 T tensorflow::checkpoint::TensorSliceReaderCacheWrapper::GetReader(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::checkpoint::TensorSliceReader::Table**)>, int) const
 T tensorflow::checkpoint::TensorSliceReaderCacheWrapper::TensorSliceReaderCacheWrapper()
 T tensorflow::checkpoint::TensorSliceReaderCacheWrapper::~TensorSliceReaderCacheWrapper()
 T tensorflow::checkpoint::TensorSliceSet::Query(tensorflow::TensorSlice const&, float*) const
 T tensorflow::checkpoint::TensorSliceSet::QueryMeta(tensorflow::TensorSlice const&, std::vector<std::pair<tensorflow::TensorSlice, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<tensorflow::TensorSlice, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const
 T tensorflow::checkpoint::TensorSliceSet::Register(tensorflow::TensorSlice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, float const*)
 T tensorflow::checkpoint::TensorSliceSet::TensorSliceSet(tensorflow::TensorShape const&, tensorflow::DataType)
 T tensorflow::checkpoint::TensorSliceSet::~TensorSliceSet()
 T tensorflow::checkpoint::TensorSliceWriter::Finish()
 T tensorflow::checkpoint::TensorSliceWriter::MaxBytesPerElement(tensorflow::DataType)
 T tensorflow::checkpoint::TensorSliceWriter::TensorSliceWriter(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::checkpoint::TensorSliceWriter::Builder**)>)
 T tensorflow::core::Arena::AllocNewBlock(unsigned long, unsigned int)
 T tensorflow::core::Arena::Arena(unsigned long)
 T tensorflow::core::Arena::FreeBlocks()
 T tensorflow::core::Arena::GetMemoryFallback(unsigned long, int)
 T tensorflow::core::Arena::MakeNewBlock(unsigned int)
 T tensorflow::core::Arena::Reset()
 T tensorflow::core::Arena::SatisfyAlignment(unsigned long)
 T tensorflow::core::Arena::~Arena()
 T tensorflow::core::Bitmap::FirstUnset(unsigned long) const
 T tensorflow::core::Bitmap::Reset(unsigned long)
 T tensorflow::core::Bitmap::ToString[abi:cxx11]() const
 T tensorflow::core::EncodeFixed16(char*, unsigned short)
 T tensorflow::core::EncodeFixed32(char*, unsigned int)
 T tensorflow::core::EncodeFixed64(char*, unsigned long long)
 T tensorflow::core::EncodeVarint32(char*, unsigned int)
 T tensorflow::core::EncodeVarint64(char*, unsigned long long)
 T tensorflow::core::GetVarint32(tensorflow::StringPiece*, unsigned int*)
 T tensorflow::core::GetVarint32PtrFallback(char const*, char const*, unsigned int*)
 T tensorflow::core::GetVarint64(tensorflow::StringPiece*, unsigned long long*)
 T tensorflow::core::GetVarint64Ptr(char const*, char const*, unsigned long long*)
 T tensorflow::core::PutFixed16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned short)
 T tensorflow::core::PutFixed32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned int)
 T tensorflow::core::PutFixed64(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned long long)
 T tensorflow::core::PutVarint32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned int)
 T tensorflow::core::PutVarint64(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned long long)
 T tensorflow::core::VarintLength(unsigned long)
 T tensorflow::cpu_allocator()
 T tensorflow::crc32c::AcceleratedExtend(unsigned int, char const*, unsigned long)
 T tensorflow::crc32c::CanAccelerate()
 T tensorflow::crc32c::Extend(unsigned int, char const*, unsigned long)
 T tensorflow::error::Code_IsValid(int)
 T tensorflow::error::Code_descriptor()
 T tensorflow::error::EnumName_Code(tensorflow::error::Code)
 T tensorflow::error::protobuf_tensorflow_2fcore_2flib_2fcore_2ferror_5fcodes_2eproto::AddDescriptors()
 T tensorflow::error::protobuf_tensorflow_2fcore_2flib_2fcore_2ferror_5fcodes_2eproto::InitDefaults()
 T tensorflow::error::protobuf_tensorflow_2fcore_2flib_2fcore_2ferror_5fcodes_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::example::FastParseExample(tensorflow::example::FastParseExampleConfig const&, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::thread::ThreadPool*, tensorflow::example::Result*)
 T tensorflow::example::TestFastParse(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Example*)
 T tensorflow::gpu_stream_util::AssignStreams(tensorflow::Graph const*, tensorflow::gpu_stream_util::AssignStreamsOpts const&, std::unordered_map<int, int, std::hash<int>, std::equal_to<int>, std::allocator<std::pair<int const, int> > >*)
 T tensorflow::gradient::GetOpGradFactory[abi:cxx11]()
 T tensorflow::gradient::GetOpGradientCreator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::AttrSlice const&, tensorflow::FunctionDef*)>*)
 T tensorflow::gradient::RegisterOp(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::AttrSlice const&, tensorflow::FunctionDef*)>)
 T tensorflow::graph::GetOpListForValidation(tensorflow::OpList*, tensorflow::OpRegistry const&)
 T tensorflow::graph::ValidateGraphDef(tensorflow::GraphDef const&, tensorflow::OpRegistryInterface const&)
 T tensorflow::graph::ValidateGraphDefAgainstOpList(tensorflow::GraphDef const&, tensorflow::OpList const&)
 T tensorflow::graph::ValidateGraphDefAgainstOpRegistry(tensorflow::GraphDef const&, tensorflow::OpRegistryInterface const&)
 T tensorflow::grappler::AddPrefixToNodeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::grappler::AddPrefixToNodeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::grappler::AsControlDependency(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::grappler::AsControlDependency[abi:cxx11](tensorflow::NodeDef const&)
 T tensorflow::grappler::ComputeTransitiveFanin(tensorflow::GraphDef const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
 T tensorflow::grappler::ComputeTransitiveFanin(tensorflow::GraphDef const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, bool*)
 T tensorflow::grappler::ExecuteWithTimeout(std::function<void ()>, long long, tensorflow::thread::ThreadPool*)
 T tensorflow::grappler::GetDataTypeFromAttr(tensorflow::NodeDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::grappler::GetTailOfChain(tensorflow::NodeDef const&, tensorflow::grappler::NodeMap const&, bool, std::function<bool (tensorflow::NodeDef const&)> const&)
 T tensorflow::grappler::GrapplerItem::EnqueueOpsFanin() const
 T tensorflow::grappler::GrapplerItem::GrapplerItem(tensorflow::grappler::GrapplerItem const&, tensorflow::GraphDef&&)
 T tensorflow::grappler::GrapplerItem::InitOpsFanin() const
 T tensorflow::grappler::GrapplerItem::MainOpsFanin() const
 T tensorflow::grappler::GrapplerItem::MainVariables() const
 T tensorflow::grappler::GrapplerItem::NodesToPreserve[abi:cxx11]() const
 T tensorflow::grappler::IsAdd(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsAddN(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsAggregate(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsAnyDiv(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsAssert(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsAvgPoolGrad(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsBiasAdd(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsBiasAddGrad(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsCommutative(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsConcatOffset(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsConstant(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsControlInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::grappler::IsConv2D(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsConv2DBackpropFilter(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsConv2DBackpropInput(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsDepthwiseConv2dNative(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsDepthwiseConv2dNativeBackpropFilter(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsDepthwiseConv2dNativeBackpropInput(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsDequeueOp(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsDiv(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsEnter(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsExit(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsFloorMod(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsFreeOfSideEffect(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsFusedBatchNormGradV1(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsIdentity(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsInvolution(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsMatMul(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsMerge(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsMul(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsNextIteration(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsNoOp(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsPad(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsPlaceholder(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsRealDiv(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsRecv(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsReduction(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsReluGrad(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsReshape(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsRestore(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsSameInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::grappler::IsSend(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsShape(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsShapeN(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsSlice(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsSplit(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsSquaredDifference(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsSqueeze(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsStopGradient(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsSub(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsSum(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsSwitch(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsTranspose(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsValuePreserving(tensorflow::NodeDef const&)
 T tensorflow::grappler::IsVariable(tensorflow::NodeDef const&)
 T tensorflow::grappler::ModifiesFrameInfo(tensorflow::NodeDef const&)
 T tensorflow::grappler::NodeMap::AddNode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::NodeDef*)
 T tensorflow::grappler::NodeMap::AddOutput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::grappler::NodeMap::GetNode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
 T tensorflow::grappler::NodeMap::GetOutputs(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
 T tensorflow::grappler::NodeMap::NodeExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
 T tensorflow::grappler::NodeMap::NodeMap(tensorflow::GraphDef*)
 T tensorflow::grappler::NodeMap::RemoveInputs(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::grappler::NodeMap::RemoveNode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::grappler::NodeMap::RemoveOutput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::grappler::NodeMap::RemoveOutputs(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::grappler::NodeMap::UpdateInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::grappler::NodeMap::UpdateOutput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::grappler::NodeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::grappler::NodePosition(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::grappler::NumNonControlInputs(tensorflow::NodeDef const&)
 T tensorflow::grappler::NumNonControlOutputs(tensorflow::NodeDef const&, tensorflow::grappler::NodeMap const&)
 T tensorflow::grappler::NumOutputs(tensorflow::NodeDef const&)
 T tensorflow::grappler::OutputMap::GetNode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
 T tensorflow::grappler::OutputMap::GetOutputs(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
 T tensorflow::grappler::OutputMap::OutputMap(tensorflow::GraphDef*)
 T tensorflow::grappler::ParseNodeName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int*)
 T tensorflow::grappler::PermuteNodesInPlace(tensorflow::GraphDef*, std::vector<int, std::allocator<int> >*, bool)
 T tensorflow::grappler::SimpleGraphView::Initialize(tensorflow::GraphDef const&, bool, bool)
 T tensorflow::grappler::SimpleGraphView::PrintToString[abi:cxx11]() const
 T tensorflow::histogram::Histogram::Add(double)
 T tensorflow::histogram::Histogram::Average() const
 T tensorflow::histogram::Histogram::Clear()
 T tensorflow::histogram::Histogram::DecodeFromProto(tensorflow::HistogramProto const&)
 T tensorflow::histogram::Histogram::EncodeToProto(tensorflow::HistogramProto*, bool) const
 T tensorflow::histogram::Histogram::Histogram()
 T tensorflow::histogram::Histogram::Histogram(tensorflow::gtl::ArraySlice<double>)
 T tensorflow::histogram::Histogram::Median() const
 T tensorflow::histogram::Histogram::Percentile(double) const
 T tensorflow::histogram::Histogram::Remap(double, double, double, double, double) const
 T tensorflow::histogram::Histogram::StandardDeviation() const
 T tensorflow::histogram::Histogram::ToString[abi:cxx11]() const
 T tensorflow::histogram::ThreadSafeHistogram::Add(double)
 T tensorflow::histogram::ThreadSafeHistogram::Average() const
 T tensorflow::histogram::ThreadSafeHistogram::Clear()
 T tensorflow::histogram::ThreadSafeHistogram::DecodeFromProto(tensorflow::HistogramProto const&)
 T tensorflow::histogram::ThreadSafeHistogram::EncodeToProto(tensorflow::HistogramProto*, bool) const
 T tensorflow::histogram::ThreadSafeHistogram::Median() const
 T tensorflow::histogram::ThreadSafeHistogram::Percentile(double) const
 T tensorflow::histogram::ThreadSafeHistogram::StandardDeviation() const
 T tensorflow::histogram::ThreadSafeHistogram::ToString[abi:cxx11]() const
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::AllocationDescription const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::AllocationRecord const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::AllocatorMemoryUsed const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::ApiDef const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::ApiDef_Arg const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::ApiDef_Attr const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::ApiDef_Endpoint const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::ApiDefs const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::AttrValue const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::AttrValue_ListValue const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::AutoParallelOptions const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::BundleEntryProto const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::BundleHeaderProto const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::BytesList const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::ClusterDef const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::ConfigProto const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::CostGraphDef const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::CostGraphDef_Node const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::CostGraphDef_Node_InputInfo const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::CostGraphDef_Node_OutputInfo const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::DebugOptions const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::DebugTensorWatch const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::DebuggedSourceFile const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::DebuggedSourceFiles const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::DeviceAttributes const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::DeviceLocality const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::DeviceProperties const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::DeviceStepStats const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::Example const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::Feature const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::FeatureList const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::FeatureLists const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::Features const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::FloatList const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::FunctionDef const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::FunctionDefLibrary const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::GPUOptions const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::GradientDef const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::GraphDef const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::GraphOptions const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::GraphTransferInfo const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::GraphTransferInfo_ConstNodeInfo const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::GraphTransferInfo_GraphInputNodeInfo const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::GraphTransferInfo_GraphOutputNodeInfo const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::GraphTransferInfo_NodeInfo const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::GraphTransferInfo_NodeInput const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::GraphTransferInfo_NodeInputInfo const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::GraphTransferInfo_NodeOutputInfo const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::HistogramProto const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::Int64List const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::IteratorStateMetadata const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::JobDef const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::KernelDef const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::KernelDef_AttrConstraint const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::MemmappedFileSystemDirectory const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::MemmappedFileSystemDirectoryElement const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::MemoryLogRawAllocation const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::MemoryLogRawDeallocation const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::MemoryLogStep const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::MemoryLogTensorAllocation const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::MemoryLogTensorDeallocation const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::MemoryLogTensorOutput const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::MemoryStats const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::NameAttrList const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::NamedDevice const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::NodeDef const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::NodeExecStats const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::NodeOutput const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::OpDef const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::OpDef_ArgDef const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::OpDef_AttrDef const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::OpDeprecation const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::OpList const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::OptimizerOptions const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::QueueRunnerDef const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::RPCOptions const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::ReaderBaseState const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::RemoteFusedGraphExecuteInfo const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::ResourceHandleProto const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::RewriterConfig const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::RunMetadata const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::RunOptions const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::SaveSliceInfoDef const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::SavedSlice const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::SavedSliceMeta const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::SavedTensorSliceMeta const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::SavedTensorSlices const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::SaverDef const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::SequenceExample const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::StepStats const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::Summary const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::SummaryDescription const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::SummaryMetadata const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::SummaryMetadata_PluginData const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::Summary_Audio const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::Summary_Image const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::Summary_Value const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::TensorDescription const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::TensorProto const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::TensorShapeProto const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::TensorShapeProto_Dim const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::TensorSliceProto const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::TensorSliceProto_Extent const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::ThreadPoolOptionProto const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::VariableDef const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::VariantTensorDataProto const&)
 T tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::VersionDef const&)
 T tensorflow::internal::CheckOpMessageBuilder::CheckOpMessageBuilder(char const*)
 T tensorflow::internal::CheckOpMessageBuilder::ForVar2()
 T tensorflow::internal::CheckOpMessageBuilder::NewString[abi:cxx11]()
 T tensorflow::internal::CheckOpMessageBuilder::~CheckOpMessageBuilder()
 T tensorflow::internal::ExampleFeature(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Example*)
 T tensorflow::internal::FormatLibraryFileName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::internal::GetSymbolFromLibrary(void*, char const*, void**)
 T tensorflow::internal::LoadLibrary(char const*, void**)
 T tensorflow::internal::LogMessage::GenerateLogMessage()
 T tensorflow::internal::LogMessage::LogMessage(char const*, int, int)
 T tensorflow::internal::LogMessage::MinVLogLevel()
 T tensorflow::internal::LogMessage::~LogMessage()
 T tensorflow::internal::LogMessageFatal::LogMessageFatal(char const*, int)
 T tensorflow::internal::LogMessageFatal::~LogMessageFatal()
 T tensorflow::internal::LogString(char const*, int, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::internal::PickUnusedPortOrDie()
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::AllocationDescription*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::AllocationRecord*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::AllocatorMemoryUsed*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::ApiDef*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::ApiDef_Arg*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::ApiDef_Attr*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::ApiDef_Endpoint*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::ApiDefs*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::AttrValue*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::AttrValue_ListValue*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::AutoParallelOptions*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::BundleEntryProto*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::BundleHeaderProto*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::BytesList*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::ClusterDef*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::ConfigProto*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::CostGraphDef*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::CostGraphDef_Node*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::CostGraphDef_Node_InputInfo*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::CostGraphDef_Node_OutputInfo*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::DebugOptions*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::DebugTensorWatch*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::DebuggedSourceFile*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::DebuggedSourceFiles*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::DeviceAttributes*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::DeviceLocality*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::DeviceProperties*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::DeviceStepStats*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::Example*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::Feature*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::FeatureList*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::FeatureLists*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::Features*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::FloatList*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::FunctionDef*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::FunctionDefLibrary*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::GPUOptions*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::GradientDef*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::GraphDef*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::GraphOptions*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::GraphTransferInfo*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::GraphTransferInfo_ConstNodeInfo*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::GraphTransferInfo_GraphInputNodeInfo*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::GraphTransferInfo_GraphOutputNodeInfo*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::GraphTransferInfo_NodeInfo*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::GraphTransferInfo_NodeInput*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::GraphTransferInfo_NodeInputInfo*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::GraphTransferInfo_NodeOutputInfo*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::HistogramProto*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::Int64List*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::IteratorStateMetadata*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::JobDef*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::KernelDef*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::KernelDef_AttrConstraint*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::MemmappedFileSystemDirectory*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::MemmappedFileSystemDirectoryElement*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::MemoryLogRawAllocation*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::MemoryLogRawDeallocation*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::MemoryLogStep*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::MemoryLogTensorAllocation*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::MemoryLogTensorDeallocation*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::MemoryLogTensorOutput*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::MemoryStats*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::NameAttrList*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::NamedDevice*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::NodeDef*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::NodeExecStats*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::NodeOutput*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::OpDef*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::OpDef_ArgDef*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::OpDef_AttrDef*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::OpDeprecation*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::OpList*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::OptimizerOptions*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::QueueRunnerDef*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::RPCOptions*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::ReaderBaseState*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::RemoteFusedGraphExecuteInfo*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::ResourceHandleProto*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::RewriterConfig*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::RunMetadata*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::RunOptions*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::SaveSliceInfoDef*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::SavedSlice*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::SavedSliceMeta*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::SavedTensorSliceMeta*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::SavedTensorSlices*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::SaverDef*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::SequenceExample*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::StepStats*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::Summary*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::SummaryDescription*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::SummaryMetadata*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::SummaryMetadata_PluginData*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::Summary_Audio*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::Summary_Image*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::Summary_Value*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::TensorDescription*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::TensorProto*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::TensorShapeProto*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::TensorShapeProto_Dim*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::TensorSliceProto*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::TensorSliceProto_Extent*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::ThreadPoolOptionProto*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::VariableDef*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::VariantTensorDataProto*)
 T tensorflow::internal::ProtoParseFromScanner(tensorflow::strings::Scanner*, bool, bool, tensorflow::VersionDef*)
 T tensorflow::internal::RepeatedFieldTrait<float>::Type const& tensorflow::GetFeatureValues<float>(tensorflow::Feature const&)
 T tensorflow::internal::RepeatedFieldTrait<float>::Type* tensorflow::GetFeatureValues<float>(tensorflow::Feature*)
 T tensorflow::internal::RepeatedFieldTrait<long>::Type const& tensorflow::GetFeatureValues<long>(tensorflow::Feature const&)
 T tensorflow::internal::RepeatedFieldTrait<long>::Type* tensorflow::GetFeatureValues<long>(tensorflow::Feature*)
 T tensorflow::internal::RepeatedFieldTrait<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::Type const& tensorflow::GetFeatureValues<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(tensorflow::Feature const&)
 T tensorflow::internal::RepeatedFieldTrait<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::Type* tensorflow::GetFeatureValues<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(tensorflow::Feature*)
 T tensorflow::internal::ValidateDevice(tensorflow::OpKernelContext*, tensorflow::ResourceHandle const&)
 T tensorflow::io::Basename(tensorflow::StringPiece)
 T tensorflow::io::BufferedInputStream::BufferedInputStream(tensorflow::RandomAccessFile*, unsigned long)
 T tensorflow::io::BufferedInputStream::BufferedInputStream(tensorflow::io::InputStreamInterface*, unsigned long, bool)
 T tensorflow::io::BufferedInputStream::FillBuffer()
 T tensorflow::io::BufferedInputStream::ReadAll(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::io::BufferedInputStream::ReadLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::io::BufferedInputStream::ReadLineAsString[abi:cxx11]()
 T tensorflow::io::BufferedInputStream::ReadLineHelper(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool)
 T tensorflow::io::BufferedInputStream::ReadNBytes(long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::io::BufferedInputStream::Reset()
 T tensorflow::io::BufferedInputStream::Seek(long long)
 T tensorflow::io::BufferedInputStream::SkipNBytes(long long)
 T tensorflow::io::BufferedInputStream::Tell() const
 T tensorflow::io::BufferedInputStream::~BufferedInputStream()
 T tensorflow::io::CleanPath[abi:cxx11](tensorflow::StringPiece)
 T tensorflow::io::CreateURI[abi:cxx11](tensorflow::StringPiece, tensorflow::StringPiece, tensorflow::StringPiece)
 T tensorflow::io::Dirname(tensorflow::StringPiece)
 T tensorflow::io::Extension(tensorflow::StringPiece)
 T tensorflow::io::GetTempFilename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::io::InputBuffer::FillBuffer()
 T tensorflow::io::InputBuffer::InputBuffer(tensorflow::RandomAccessFile*, unsigned long)
 T tensorflow::io::InputBuffer::ReadLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::io::InputBuffer::ReadNBytes(long long, char*, unsigned long*)
 T tensorflow::io::InputBuffer::ReadNBytes(long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::io::InputBuffer::ReadVarint32Fallback(unsigned int*)
 T tensorflow::io::InputBuffer::ReadVarint64Fallback(unsigned long long*)
 T tensorflow::io::InputBuffer::Seek(long long)
 T tensorflow::io::InputBuffer::SkipNBytes(long long)
 T tensorflow::io::InputBuffer::~InputBuffer()
 T tensorflow::io::InputStreamInterface::SkipNBytes(long long)
 T tensorflow::io::IsAbsolutePath(tensorflow::StringPiece)
 T tensorflow::io::ParseURI(tensorflow::StringPiece, tensorflow::StringPiece*, tensorflow::StringPiece*, tensorflow::StringPiece*)
 T tensorflow::io::RandomAccessInputStream::RandomAccessInputStream(tensorflow::RandomAccessFile*, bool)
 T tensorflow::io::RandomAccessInputStream::ReadNBytes(long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::io::RandomAccessInputStream::Tell() const
 T tensorflow::io::RandomAccessInputStream::~RandomAccessInputStream()
 T tensorflow::io::RecordReader::ReadChecksummed(unsigned long long, unsigned long, tensorflow::StringPiece*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::io::RecordReader::ReadRecord(unsigned long long*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::io::RecordReader::RecordReader(tensorflow::RandomAccessFile*, tensorflow::io::RecordReaderOptions const&)
 T tensorflow::io::RecordReader::SkipNBytes(unsigned long long)
 T tensorflow::io::RecordReaderOptions::CreateRecordReaderOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::io::RecordWriter::Close()
 T tensorflow::io::RecordWriter::Flush()
 T tensorflow::io::RecordWriter::RecordWriter(tensorflow::WritableFile*, tensorflow::io::RecordWriterOptions const&)
 T tensorflow::io::RecordWriter::WriteRecord(tensorflow::StringPiece)
 T tensorflow::io::RecordWriter::~RecordWriter()
 T tensorflow::io::RecordWriterOptions::CreateRecordWriterOptions(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::io::SequentialRecordReader::SequentialRecordReader(tensorflow::RandomAccessFile*, tensorflow::io::RecordReaderOptions const&)
 T tensorflow::io::SnappyInputBuffer::Inflate()
 T tensorflow::io::SnappyInputBuffer::ReadBytesFromCache(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::io::SnappyInputBuffer::ReadCompressedBlockLength(unsigned int*)
 T tensorflow::io::SnappyInputBuffer::ReadFromFile()
 T tensorflow::io::SnappyInputBuffer::ReadNBytes(long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::io::SnappyInputBuffer::Reset()
 T tensorflow::io::SnappyInputBuffer::SnappyInputBuffer(tensorflow::RandomAccessFile*, unsigned long, unsigned long)
 T tensorflow::io::SnappyInputBuffer::Tell() const
 T tensorflow::io::SnappyOutputBuffer::AddToInputBuffer(tensorflow::StringPiece)
 T tensorflow::io::SnappyOutputBuffer::AddToOutputBuffer(char const*, unsigned long)
 T tensorflow::io::SnappyOutputBuffer::AvailableInputSpace() const
 T tensorflow::io::SnappyOutputBuffer::Deflate()
 T tensorflow::io::SnappyOutputBuffer::DeflateBuffered()
 T tensorflow::io::SnappyOutputBuffer::Flush()
 T tensorflow::io::SnappyOutputBuffer::FlushOutputBufferToFile()
 T tensorflow::io::SnappyOutputBuffer::SnappyOutputBuffer(tensorflow::WritableFile*, int, int)
 T tensorflow::io::SnappyOutputBuffer::Write(tensorflow::StringPiece)
 T tensorflow::io::UniqueId()
 T tensorflow::io::ZlibInputStream::Inflate()
 T tensorflow::io::ZlibInputStream::InitZlibBuffer()
 T tensorflow::io::ZlibInputStream::NumUnreadBytes() const
 T tensorflow::io::ZlibInputStream::ReadBytesFromCache(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::io::ZlibInputStream::ReadFromStream()
 T tensorflow::io::ZlibInputStream::ReadNBytes(long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::io::ZlibInputStream::Reset()
 T tensorflow::io::ZlibInputStream::Tell() const
 T tensorflow::io::ZlibInputStream::ZlibInputStream(tensorflow::io::InputStreamInterface*, unsigned long, unsigned long, tensorflow::io::ZlibCompressionOptions const&)
 T tensorflow::io::ZlibInputStream::~ZlibInputStream()
 T tensorflow::io::ZlibOutputBuffer::AddToInputBuffer(tensorflow::StringPiece)
 T tensorflow::io::ZlibOutputBuffer::Append(tensorflow::StringPiece const&)
 T tensorflow::io::ZlibOutputBuffer::AvailableInputSpace() const
 T tensorflow::io::ZlibOutputBuffer::Close()
 T tensorflow::io::ZlibOutputBuffer::Deflate(int)
 T tensorflow::io::ZlibOutputBuffer::DeflateBuffered(bool)
 T tensorflow::io::ZlibOutputBuffer::Flush()
 T tensorflow::io::ZlibOutputBuffer::FlushOutputBufferToFile()
 T tensorflow::io::ZlibOutputBuffer::Init()
 T tensorflow::io::ZlibOutputBuffer::Sync()
 T tensorflow::io::ZlibOutputBuffer::ZlibOutputBuffer(tensorflow::WritableFile*, int, int, tensorflow::io::ZlibCompressionOptions const&)
 T tensorflow::io::ZlibOutputBuffer::~ZlibOutputBuffer()
 T tensorflow::io::internal::JoinPathImpl[abi:cxx11](std::initializer_list<tensorflow::StringPiece>)
 T tensorflow::io::internal::SplitBasename(tensorflow::StringPiece)
 T tensorflow::io::internal::SplitPath(tensorflow::StringPiece)
 T tensorflow::kernel_factory::OpKernelRegistrar::InitInternal(tensorflow::KernelDef const*, tensorflow::StringPiece, tensorflow::OpKernel* (*)(tensorflow::OpKernelConstruction*))
 T tensorflow::lookup::CheckTableDataTypes(tensorflow::lookup::LookupInterface const&, tensorflow::DataType, tensorflow::DataType, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::lookup::GetInitializableLookupTable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpKernelContext*, tensorflow::lookup::InitializableLookupTable**)
 T tensorflow::lookup::GetLookupTable(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpKernelContext*, tensorflow::lookup::LookupInterface**)
 T tensorflow::lookup::InitializableLookupTable::Find(tensorflow::OpKernelContext*, tensorflow::Tensor const&, tensorflow::Tensor*, tensorflow::Tensor const&)
 T tensorflow::lookup::InitializableLookupTable::Initialize(tensorflow::lookup::InitializableLookupTable::InitTableIterator&)
 T tensorflow::lookup::InitializeTableFromTextFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long long, char, int, int, tensorflow::Env*, tensorflow::lookup::InitializableLookupTable*)
 T tensorflow::lookup::LookupInterface::CheckFindArguments(tensorflow::Tensor const&, tensorflow::Tensor const&)
 T tensorflow::lookup::LookupInterface::CheckKeyAndValueTensorsForImport(tensorflow::Tensor const&, tensorflow::Tensor const&)
 T tensorflow::lookup::LookupInterface::CheckKeyAndValueTensorsForInsert(tensorflow::Tensor const&, tensorflow::Tensor const&)
 T tensorflow::lookup::LookupInterface::CheckKeyAndValueTensorsHelper(tensorflow::Tensor const&, tensorflow::Tensor const&)
 T tensorflow::lookup::LookupInterface::CheckKeyAndValueTypes(tensorflow::Tensor const&, tensorflow::Tensor const&)
 T tensorflow::lookup::LookupInterface::CheckKeyShape(tensorflow::TensorShape const&)
 T tensorflow::monitoring::Buckets::Explicit(std::initializer_list<double>)
 T tensorflow::monitoring::Buckets::Exponential(double, double, int)
 T tensorflow::monitoring::CollectionRegistry::CollectMetrics(tensorflow::monitoring::CollectionRegistry::CollectMetricsOptions const&) const
 T tensorflow::monitoring::CollectionRegistry::CollectionRegistry(tensorflow::Env*)
 T tensorflow::monitoring::CollectionRegistry::Default()
 T tensorflow::monitoring::CollectionRegistry::Register(tensorflow::monitoring::AbstractMetricDef const*, std::function<void (tensorflow::monitoring::MetricCollectorGetter)> const&)
 T tensorflow::monitoring::CollectionRegistry::Unregister(tensorflow::monitoring::AbstractMetricDef const*)
 T tensorflow::monitoring::internal::Collector::CollectMetricDescriptor(tensorflow::monitoring::AbstractMetricDef const*)
 T tensorflow::monitoring::internal::Collector::CollectMetricValues(tensorflow::monitoring::CollectionRegistry::CollectionInfo const&)
 T tensorflow::monitoring::internal::Collector::ConsumeCollectedMetrics()
 T tensorflow::operator<<(std::ostream&, tensorflow::DeviceType const&)
 T tensorflow::operator<<(std::ostream&, tensorflow::Status const&)
 T tensorflow::operator<<(std::ostream&, tensorflow::StringPiece)
 T tensorflow::ops::BinaryOp(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::NodeBuilder::NodeOut, tensorflow::NodeBuilder::NodeOut, tensorflow::GraphDefBuilder::Options const&)
 T tensorflow::ops::SourceOp(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::GraphDefBuilder::Options const&)
 T tensorflow::ops::UnaryOp(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::NodeBuilder::NodeOut, tensorflow::GraphDefBuilder::Options const&)
 T tensorflow::png::CommonFinishDecode(unsigned char*, int, tensorflow::png::DecodeContext*)
 T tensorflow::png::CommonFreeDecode(tensorflow::png::DecodeContext*)
 T tensorflow::png::CommonInitDecode(tensorflow::StringPiece, int, int, tensorflow::png::DecodeContext*)
 T tensorflow::png::DecodeHeader(tensorflow::StringPiece, int*, int*, int*, int*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*)
 T tensorflow::png::WriteImageToBuffer(void const*, int, int, int, int, int, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const*)
 T tensorflow::port::AdjustFilenameForLogging(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::port::AlignedFree(void*)
 T tensorflow::port::AlignedMalloc(unsigned long, int)
 T tensorflow::port::AssignRefCounted(tensorflow::StringPiece, tensorflow::core::RefCounted*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::port::CPUFamily()
 T tensorflow::port::CPUModelNum()
 T tensorflow::port::CPUVendorIDString[abi:cxx11]()
 T tensorflow::port::CopyFromArray(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, char const*, unsigned long)
 T tensorflow::port::DecodeResourceHandleList(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::ResourceHandle*, long long)
 T tensorflow::port::DecodeStringList(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, long long)
 T tensorflow::port::DecodeVariantList(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Variant*, long long)
 T tensorflow::port::Demangle[abi:cxx11](char const*)
 T tensorflow::port::EncodeResourceHandleList(tensorflow::ResourceHandle const*, long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::port::EncodeStringList(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::port::EncodeVariantList(tensorflow::Variant const*, long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::port::Free(void*)
 T tensorflow::port::Hostname[abi:cxx11]()
 T tensorflow::port::InfoAboutUnusedCPUFeatures()
 T tensorflow::port::InitMain(char const*, int*, char***)
 T tensorflow::port::Malloc(unsigned long)
 T tensorflow::port::MallocExtension_GetAllocatedSize(void const*)
 T tensorflow::port::MallocExtension_ReleaseToSystem(unsigned long)
 T tensorflow::port::MaybeAbiDemangle[abi:cxx11](char const*)
 T tensorflow::port::NominalCPUFrequency()
 T tensorflow::port::NumSchedulableCPUs()
 T tensorflow::port::Realloc(void*, unsigned long)
 T tensorflow::port::ScopedFlushDenormal::ScopedFlushDenormal()
 T tensorflow::port::ScopedFlushDenormal::~ScopedFlushDenormal()
 T tensorflow::port::ScopedSetRound::ScopedSetRound(int)
 T tensorflow::port::ScopedSetRound::~ScopedSetRound()
 T tensorflow::port::Snappy_Compress(char const*, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::port::Snappy_GetUncompressedLength(char const*, unsigned long, unsigned long*)
 T tensorflow::port::Snappy_Uncompress(char const*, unsigned long, char*)
 T tensorflow::port::TestCPUFeature(tensorflow::port::CPUFeature)
 T tensorflow::port::Tracing::Engine::Annotation::~Annotation()
 T tensorflow::port::Tracing::Engine::Tracer::~Tracer()
 T tensorflow::port::Tracing::Engine::~Engine()
 T tensorflow::port::Tracing::EventCategoryString(tensorflow::port::Tracing::EventCategory)
 T tensorflow::port::Tracing::Initialize()
 T tensorflow::port::Tracing::LogDir()
 T tensorflow::port::Tracing::ParseEventMask(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 T tensorflow::port::Tracing::RegisterEngine(tensorflow::port::Tracing::Engine*)
 T tensorflow::port::Tracing::RegisterEvent(tensorflow::port::Tracing::EventCategory, char const*)
 T tensorflow::profile_utils::CpuUtils::ConvertClockCycleToTime(long long)
 T tensorflow::profile_utils::CpuUtils::EnableClockCycleProfiling(bool)
 T tensorflow::profile_utils::CpuUtils::GetCpuUtilsHelperSingletonInstance()
 T tensorflow::profile_utils::CpuUtils::GetCycleCounterFrequency()
 T tensorflow::profile_utils::CpuUtils::GetCycleCounterFrequencyImpl()
 T tensorflow::profile_utils::CpuUtils::GetMicroSecPerClock()
 T tensorflow::profile_utils::CpuUtils::ResetClockCycle()
 T tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fexample_2ffeature_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fexample_2ffeature_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fexample_2ffeature_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fallocation_5fdescription_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fallocation_5fdescription_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fallocation_5fdescription_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2ffunction_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2ffunction_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2ffunction_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fiterator_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fiterator_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fiterator_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2flog_5fmemory_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2flog_5fmemory_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2flog_5fmemory_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2freader_5fbase_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2freader_5fbase_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2freader_5fbase_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fsummary_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fsummary_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fsummary_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fslice_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fslice_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fslice_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftypes_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftypes_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftypes_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fvariable_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fvariable_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fvariable_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fversions_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fversions_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fframework_2fversions_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcluster_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcluster_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcluster_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fconfig_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fconfig_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fconfig_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fnamed_5ftensor_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fnamed_5ftensor_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fnamed_5ftensor_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fqueue_5frunner_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fqueue_5frunner_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fqueue_5frunner_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaved_5fmodel_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaved_5fmodel_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaved_5fmodel_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaver_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaver_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaver_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensorflow_5fserver_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensorflow_5fserver_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensorflow_5fserver_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2futil_2fevent_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2futil_2fevent_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2futil_2fevent_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2futil_2fmemmapped_5ffile_5fsystem_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2futil_2fmemmapped_5ffile_5fsystem_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2futil_2fmemmapped_5ffile_5fsystem_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2futil_2fsaved_5ftensor_5fslice_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2futil_2fsaved_5ftensor_5fslice_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2futil_2fsaved_5ftensor_5fslice_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::protobuf_tensorflow_2fcore_2futil_2ftest_5flog_2eproto::AddDescriptors()
 T tensorflow::protobuf_tensorflow_2fcore_2futil_2ftest_5flog_2eproto::InitDefaults()
 T tensorflow::protobuf_tensorflow_2fcore_2futil_2ftest_5flog_2eproto::TableStruct::InitDefaultsImpl()
 T tensorflow::random::DistributionSampler::DistributionSampler(tensorflow::gtl::ArraySlice<float> const&)
 T tensorflow::random::New64()
 T tensorflow::random::New64DefaultSeed()
 T tensorflow::random::SimplePhilox::Skewed(int)
 T tensorflow::random::SimplePhilox::Uniform(unsigned int)
 T tensorflow::random::SimplePhilox::Uniform64(unsigned long long)
 T tensorflow::random::SingleSampleAdapter<tensorflow::random::PhiloxRandom>::SkipFromGenerator(unsigned long long)
 T tensorflow::random::WeightedPicker::Append(int)
 T tensorflow::random::WeightedPicker::Pick(tensorflow::random::SimplePhilox*) const
 T tensorflow::random::WeightedPicker::PickAt(int) const
 T tensorflow::random::WeightedPicker::RebuildTreeWeights()
 T tensorflow::random::WeightedPicker::Resize(int)
 T tensorflow::random::WeightedPicker::SetAllWeights(int)
 T tensorflow::random::WeightedPicker::SetWeightsFromArray(int, int const*)
 T tensorflow::random::WeightedPicker::WeightedPicker(int)
 T tensorflow::random::WeightedPicker::set_weight(int, int)
 T tensorflow::random::WeightedPicker::~WeightedPicker()
 T tensorflow::register_op::OpDefBuilderReceiver::OpDefBuilderReceiver(tensorflow::register_op::OpDefBuilderWrapper<true> const&)
 T tensorflow::shape_inference::AvgPoolShape(tensorflow::shape_inference::InferenceContext*)
 T tensorflow::shape_inference::BiasAddGradShape(tensorflow::shape_inference::InferenceContext*)
 T tensorflow::shape_inference::BiasAddShape(tensorflow::shape_inference::InferenceContext*)
 T tensorflow::shape_inference::BroadcastBinaryOpShapeFn(tensorflow::shape_inference::InferenceContext*)
 T tensorflow::shape_inference::CheckFormatConstraintsOnShape(tensorflow::TensorFormat, tensorflow::shape_inference::ShapeHandle, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::shape_inference::InferenceContext*)
 T tensorflow::shape_inference::ConcatShape(tensorflow::shape_inference::InferenceContext*, int)
 T tensorflow::shape_inference::ConcatShapeHelper(tensorflow::shape_inference::InferenceContext*, int, int, int)
 T tensorflow::shape_inference::ConcatV2Shape(tensorflow::shape_inference::InferenceContext*)
 T tensorflow::shape_inference::Conv2DShape(tensorflow::shape_inference::InferenceContext*)
 T tensorflow::shape_inference::Conv3DShape(tensorflow::shape_inference::InferenceContext*)
 T tensorflow::shape_inference::DepthwiseConv2DNativeShape(tensorflow::shape_inference::InferenceContext*)
 T tensorflow::shape_inference::DimensionsFromShape(tensorflow::shape_inference::ShapeHandle, tensorflow::TensorFormat, tensorflow::shape_inference::DimensionHandle*, tensorflow::gtl::MutableArraySlice<tensorflow::shape_inference::DimensionHandle>, tensorflow::shape_inference::DimensionHandle*, tensorflow::shape_inference::InferenceContext*)
 T tensorflow::shape_inference::ExplicitShape(tensorflow::shape_inference::InferenceContext*)
 T tensorflow::shape_inference::FusedBatchNormGradShape(tensorflow::shape_inference::InferenceContext*)
 T tensorflow::shape_inference::FusedBatchNormShape(tensorflow::shape_inference::InferenceContext*)
 T tensorflow::shape_inference::GetWindowedOutputSizeFromDims(tensorflow::shape_inference::InferenceContext*, tensorflow::shape_inference::DimensionHandle, tensorflow::shape_inference::DimensionOrConstant, long long, tensorflow::Padding, tensorflow::shape_inference::DimensionHandle*)
 T tensorflow::shape_inference::GetWindowedOutputSizeFromDimsV2(tensorflow::shape_inference::InferenceContext*, tensorflow::shape_inference::DimensionHandle, tensorflow::shape_inference::DimensionOrConstant, long long, long long, tensorflow::Padding, tensorflow::shape_inference::DimensionHandle*)
 T tensorflow::shape_inference::InferenceContext::Add(tensorflow::shape_inference::DimensionHandle, tensorflow::shape_inference::DimensionOrConstant, tensorflow::shape_inference::DimensionHandle*)
 T tensorflow::shape_inference::InferenceContext::AttachContext(tensorflow::Status const&)
 T tensorflow::shape_inference::InferenceContext::Concatenate(tensorflow::shape_inference::ShapeHandle, tensorflow::shape_inference::ShapeHandle, tensorflow::shape_inference::ShapeHandle*)
 T tensorflow::shape_inference::InferenceContext::DebugString[abi:cxx11]() const
 T tensorflow::shape_inference::InferenceContext::DebugString[abi:cxx11](tensorflow::shape_inference::DimensionHandle)
 T tensorflow::shape_inference::InferenceContext::DebugString[abi:cxx11](tensorflow::shape_inference::ShapeHandle)
 T tensorflow::shape_inference::InferenceContext::Divide(tensorflow::shape_inference::DimensionHandle, tensorflow::shape_inference::DimensionOrConstant, bool, tensorflow::shape_inference::DimensionHandle*)
 T tensorflow::shape_inference::InferenceContext::FullyDefined(tensorflow::shape_inference::ShapeHandle)
 T tensorflow::shape_inference::InferenceContext::GetScalarFromTensor(tensorflow::Tensor const*, long long*)
 T tensorflow::shape_inference::InferenceContext::InferenceContext(int, tensorflow::NodeDef const*, tensorflow::OpDef const&, std::vector<tensorflow::PartialTensorShape, std::allocator<tensorflow::PartialTensorShape> > const&, std::vector<tensorflow::Tensor const*, std::allocator<tensorflow::Tensor const*> > const&, std::vector<tensorflow::PartialTensorShape, std::allocator<tensorflow::PartialTensorShape> > const&, std::vector<std::unique_ptr<std::vector<std::pair<tensorflow::PartialTensorShape, tensorflow::DataType>, std::allocator<std::pair<tensorflow::PartialTensorShape, tensorflow::DataType> > >, std::default_delete<std::vector<std::pair<tensorflow::PartialTensorShape, tensorflow::DataType>, std::allocator<std::pair<tensorflow::PartialTensorShape, tensorflow::DataType> > > > >, std::allocator<std::unique_ptr<std::vector<std::pair<tensorflow::PartialTensorShape, tensorflow::DataType>, std::allocator<std::pair<tensorflow::PartialTensorShape, tensorflow::DataType> > >, std::default_delete<std::vector<std::pair<tensorflow::PartialTensorShape, tensorflow::DataType>, std::allocator<std::pair<tensorflow::PartialTensorShape, tensorflow::DataType> > > > > > > const&)
 T tensorflow::shape_inference::InferenceContext::InferenceContext(int, tensorflow::NodeDef const*, tensorflow::OpDef const&, std::vector<tensorflow::TensorShapeProto, std::allocator<tensorflow::TensorShapeProto> > const&, std::vector<tensorflow::Tensor const*, std::allocator<tensorflow::Tensor const*> > const&, std::vector<tensorflow::TensorShapeProto, std::allocator<tensorflow::TensorShapeProto> > const&, std::vector<std::unique_ptr<std::vector<std::pair<tensorflow::TensorShapeProto, tensorflow::DataType>, std::allocator<std::pair<tensorflow::TensorShapeProto, tensorflow::DataType> > >, std::default_delete<std::vector<std::pair<tensorflow::TensorShapeProto, tensorflow::DataType>, std::allocator<std::pair<tensorflow::TensorShapeProto, tensorflow::DataType> > > > >, std::allocator<std::unique_ptr<std::vector<std::pair<tensorflow::TensorShapeProto, tensorflow::DataType>, std::allocator<std::pair<tensorflow::TensorShapeProto, tensorflow::DataType> > >, std::default_delete<std::vector<std::pair<tensorflow::TensorShapeProto, tensorflow::DataType>, std::allocator<std::pair<tensorflow::TensorShapeProto, tensorflow::DataType> > > > > > > const&)
 T tensorflow::shape_inference::InferenceContext::InferenceContext(int, tensorflow::NodeDef const*, tensorflow::OpDef const&, std::vector<tensorflow::shape_inference::ShapeHandle, std::allocator<tensorflow::shape_inference::ShapeHandle> > const&, std::vector<tensorflow::Tensor const*, std::allocator<tensorflow::Tensor const*> > const&, std::vector<tensorflow::shape_inference::ShapeHandle, std::allocator<tensorflow::shape_inference::ShapeHandle> > const&, std::vector<std::unique_ptr<std::vector<tensorflow::shape_inference::ShapeAndType, std::allocator<tensorflow::shape_inference::ShapeAndType> >, std::default_delete<std::vector<tensorflow::shape_inference::ShapeAndType, std::allocator<tensorflow::shape_inference::ShapeAndType> > > >, std::allocator<std::unique_ptr<std::vector<tensorflow::shape_inference::ShapeAndType, std::allocator<tensorflow::shape_inference::ShapeAndType> >, std::default_delete<std::vector<tensorflow::shape_inference::ShapeAndType, std::allocator<tensorflow::shape_inference::ShapeAndType> > > > > >)
 T tensorflow::shape_inference::InferenceContext::MakeDimForScalarInput(int, tensorflow::shape_inference::DimensionHandle*)
 T tensorflow::shape_inference::InferenceContext::MakeDimForScalarInputWithNegativeIndexing(int, int, tensorflow::shape_inference::DimensionHandle*)
 T tensorflow::shape_inference::InferenceContext::MakeShape(std::initializer_list<tensorflow::shape_inference::DimensionOrConstant>)
 T tensorflow::shape_inference::InferenceContext::MakeShape(std::vector<tensorflow::shape_inference::DimensionHandle, std::allocator<tensorflow::shape_inference::DimensionHandle> > const&)
 T tensorflow::shape_inference::InferenceContext::MakeShapeFromPartialTensorShape(tensorflow::PartialTensorShape const&, tensorflow::shape_inference::ShapeHandle*)
 T tensorflow::shape_inference::InferenceContext::MakeShapeFromShapeProto(tensorflow::TensorShapeProto const&, tensorflow::shape_inference::ShapeHandle*)
 T tensorflow::shape_inference::InferenceContext::MakeShapeFromShapeTensor(int, tensorflow::shape_inference::ShapeHandle*)
 T tensorflow::shape_inference::InferenceContext::MakeShapeFromTensor(tensorflow::Tensor const*, tensorflow::shape_inference::ShapeHandle, tensorflow::shape_inference::ShapeHandle*)
 T tensorflow::shape_inference::InferenceContext::MakeShapeFromTensorShape(tensorflow::TensorShape const&, tensorflow::shape_inference::ShapeHandle*)
 T tensorflow::shape_inference::InferenceContext::Matrix(tensorflow::shape_inference::DimensionOrConstant, tensorflow::shape_inference::DimensionOrConstant)
 T tensorflow::shape_inference::InferenceContext::Max(tensorflow::shape_inference::DimensionHandle, tensorflow::shape_inference::DimensionOrConstant, tensorflow::shape_inference::DimensionHandle*)
 T tensorflow::shape_inference::InferenceContext::Merge(tensorflow::shape_inference::DimensionHandle, tensorflow::shape_inference::DimensionHandle, tensorflow::shape_inference::DimensionHandle*)
 T tensorflow::shape_inference::InferenceContext::Merge(tensorflow::shape_inference::ShapeHandle, tensorflow::shape_inference::ShapeHandle, tensorflow::shape_inference::ShapeHandle*)
 T tensorflow::shape_inference::InferenceContext::MergeHandleShapesAndTypes(std::vector<tensorflow::shape_inference::ShapeAndType, std::allocator<tensorflow::shape_inference::ShapeAndType> > const&, std::vector<tensorflow::shape_inference::ShapeAndType, std::allocator<tensorflow::shape_inference::ShapeAndType> >*)
 T tensorflow::shape_inference::InferenceContext::MergeInputHandleShapesAndTypes(int, std::vector<tensorflow::shape_inference::ShapeAndType, std::allocator<tensorflow::shape_inference::ShapeAndType> > const&)
 T tensorflow::shape_inference::InferenceContext::MergeOutputHandleShapesAndTypes(int, std::vector<tensorflow::shape_inference::ShapeAndType, std::allocator<tensorflow::shape_inference::ShapeAndType> > const&)
 T tensorflow::shape_inference::InferenceContext::MergePrefix(tensorflow::shape_inference::ShapeHandle, tensorflow::shape_inference::ShapeHandle, tensorflow::shape_inference::ShapeHandle*, tensorflow::shape_inference::ShapeHandle*)
 T tensorflow::shape_inference::InferenceContext::Min(tensorflow::shape_inference::DimensionHandle, tensorflow::shape_inference::DimensionOrConstant, tensorflow::shape_inference::DimensionHandle*)
 T tensorflow::shape_inference::InferenceContext::Multiply(tensorflow::shape_inference::DimensionHandle, tensorflow::shape_inference::DimensionOrConstant, tensorflow::shape_inference::DimensionHandle*)
 T tensorflow::shape_inference::InferenceContext::NumElements(tensorflow::shape_inference::ShapeHandle)
 T tensorflow::shape_inference::InferenceContext::PostInputInit(std::vector<std::unique_ptr<std::vector<tensorflow::shape_inference::ShapeAndType, std::allocator<tensorflow::shape_inference::ShapeAndType> >, std::default_delete<std::vector<tensorflow::shape_inference::ShapeAndType, std::allocator<tensorflow::shape_inference::ShapeAndType> > > >, std::allocator<std::unique_ptr<std::vector<tensorflow::shape_inference::ShapeAndType, std::allocator<tensorflow::shape_inference::ShapeAndType> >, std::default_delete<std::vector<tensorflow::shape_inference::ShapeAndType, std::allocator<tensorflow::shape_inference::ShapeAndType> > > > > >)
 T tensorflow::shape_inference::InferenceContext::PreInputInit(tensorflow::OpDef const&, std::vector<tensorflow::Tensor const*, std::allocator<tensorflow::Tensor const*> > const&, std::vector<tensorflow::shape_inference::ShapeHandle, std::allocator<tensorflow::shape_inference::ShapeHandle> > const&)
 T tensorflow::shape_inference::InferenceContext::Relax(tensorflow::shape_inference::DimensionHandle, tensorflow::shape_inference::DimensionHandle, tensorflow::shape_inference::DimensionHandle*)
 T tensorflow::shape_inference::InferenceContext::Relax(tensorflow::shape_inference::ShapeHandle, tensorflow::shape_inference::ShapeHandle, tensorflow::shape_inference::ShapeHandle*)
 T tensorflow::shape_inference::InferenceContext::RelaxHandleShapesAndMergeTypes(std::vector<tensorflow::shape_inference::ShapeAndType, std::allocator<tensorflow::shape_inference::ShapeAndType> > const&, std::vector<tensorflow::shape_inference::ShapeAndType, std::allocator<tensorflow::shape_inference::ShapeAndType> >*)
 T tensorflow::shape_inference::InferenceContext::RelaxInputHandleShapesAndMergeTypes(int, std::vector<tensorflow::shape_inference::ShapeAndType, std::allocator<tensorflow::shape_inference::ShapeAndType> > const&)
 T tensorflow::shape_inference::InferenceContext::RelaxOutputHandleShapesAndMergeTypes(int, std::vector<tensorflow::shape_inference::ShapeAndType, std::allocator<tensorflow::shape_inference::ShapeAndType> > const&)
 T tensorflow::shape_inference::InferenceContext::ReplaceDim(tensorflow::shape_inference::ShapeHandle, long long, tensorflow::shape_inference::DimensionHandle, tensorflow::shape_inference::ShapeHandle*)
 T tensorflow::shape_inference::InferenceContext::Run(std::function<tensorflow::Status (tensorflow::shape_inference::InferenceContext*)> const&)
 T tensorflow::shape_inference::InferenceContext::Scalar()
 T tensorflow::shape_inference::InferenceContext::ShapeHandleToProto(tensorflow::shape_inference::ShapeHandle, tensorflow::TensorShapeProto*)
 T tensorflow::shape_inference::InferenceContext::ShapeManager::MakeShape(std::vector<tensorflow::shape_inference::DimensionHandle, std::allocator<tensorflow::shape_inference::DimensionHandle> > const&)
 T tensorflow::shape_inference::InferenceContext::ShapeManager::ShapeManager()
 T tensorflow::shape_inference::InferenceContext::ShapeManager::UnknownShape()
 T tensorflow::shape_inference::InferenceContext::ShapeManager::~ShapeManager()
 T tensorflow::shape_inference::InferenceContext::Subshape(tensorflow::shape_inference::ShapeHandle, long long, long long, tensorflow::shape_inference::ShapeHandle*)
 T tensorflow::shape_inference::InferenceContext::Subshape(tensorflow::shape_inference::ShapeHandle, long long, tensorflow::shape_inference::ShapeHandle*)
 T tensorflow::shape_inference::InferenceContext::Subtract(tensorflow::shape_inference::DimensionHandle, tensorflow::shape_inference::DimensionOrConstant, tensorflow::shape_inference::DimensionHandle*)
 T tensorflow::shape_inference::InferenceContext::UnknownShape()
 T tensorflow::shape_inference::InferenceContext::UnknownShapeOfRank(long long)
 T tensorflow::shape_inference::InferenceContext::Vector(tensorflow::shape_inference::DimensionOrConstant)
 T tensorflow::shape_inference::InferenceContext::WithRank(tensorflow::shape_inference::ShapeHandle, long long, tensorflow::shape_inference::ShapeHandle*)
 T tensorflow::shape_inference::InferenceContext::WithRankAtLeast(tensorflow::shape_inference::ShapeHandle, long long, tensorflow::shape_inference::ShapeHandle*)
 T tensorflow::shape_inference::InferenceContext::WithRankAtMost(tensorflow::shape_inference::ShapeHandle, long long, tensorflow::shape_inference::ShapeHandle*)
 T tensorflow::shape_inference::InferenceContext::WithValue(tensorflow::shape_inference::DimensionHandle, long long, tensorflow::shape_inference::DimensionHandle*)
 T tensorflow::shape_inference::InferenceContext::input(tensorflow::StringPiece, std::vector<tensorflow::shape_inference::ShapeHandle, std::allocator<tensorflow::shape_inference::ShapeHandle> >*) const
 T tensorflow::shape_inference::InferenceContext::op[abi:cxx11]() const
 T tensorflow::shape_inference::InferenceContext::output(tensorflow::StringPiece, std::vector<tensorflow::shape_inference::ShapeHandle, std::allocator<tensorflow::shape_inference::ShapeHandle> >*) const
 T tensorflow::shape_inference::InferenceContext::set_output(tensorflow::StringPiece, std::vector<tensorflow::shape_inference::ShapeHandle, std::allocator<tensorflow::shape_inference::ShapeHandle> > const&)
 T tensorflow::shape_inference::InferenceContext::~InferenceContext()
 T tensorflow::shape_inference::MakeShapeFromFormat(tensorflow::TensorFormat, tensorflow::shape_inference::DimensionOrConstant, std::vector<tensorflow::shape_inference::DimensionOrConstant, std::allocator<tensorflow::shape_inference::DimensionOrConstant> > const&, tensorflow::shape_inference::DimensionOrConstant, tensorflow::shape_inference::ShapeHandle*, tensorflow::shape_inference::InferenceContext*)
 T tensorflow::shape_inference::MatMulShape(tensorflow::shape_inference::InferenceContext*)
 T tensorflow::shape_inference::MaxPoolShape(tensorflow::shape_inference::InferenceContext*)
 T tensorflow::shape_inference::MaxPoolV2Shape(tensorflow::shape_inference::InferenceContext*, int)
 T tensorflow::shape_inference::Pool3DShape(tensorflow::shape_inference::InferenceContext*)
 T tensorflow::shape_inference::RandomShape(tensorflow::shape_inference::InferenceContext*)
 T tensorflow::shape_inference::ReductionShape(tensorflow::shape_inference::InferenceContext*)
 T tensorflow::shape_inference::ScatterNdUpdateShape(tensorflow::shape_inference::InferenceContext*)
 T tensorflow::shape_inference::ShapeFromDimensions(tensorflow::shape_inference::DimensionHandle, tensorflow::gtl::ArraySlice<tensorflow::shape_inference::DimensionHandle>, tensorflow::shape_inference::DimensionHandle, tensorflow::TensorFormat, tensorflow::shape_inference::InferenceContext*, tensorflow::shape_inference::ShapeHandle*)
 T tensorflow::shape_inference::UnchangedShape(tensorflow::shape_inference::InferenceContext*)
 T tensorflow::shape_inference::UnknownShape(tensorflow::shape_inference::InferenceContext*)
 T tensorflow::shape_inference::ValidateSparseTensor(tensorflow::shape_inference::InferenceContext*, tensorflow::shape_inference::ShapeHandle, tensorflow::shape_inference::ShapeHandle, tensorflow::shape_inference::ShapeHandle)
 T tensorflow::sparse::Group::group() const
 T tensorflow::sparse::Group::indices() const
 T tensorflow::sparse::GroupIterable::IteratorStep::UpdateEndOfGroup()
 T tensorflow::sparse::GroupIterable::IteratorStep::operator!=(tensorflow::sparse::GroupIterable::IteratorStep const&) const
 T tensorflow::sparse::GroupIterable::IteratorStep::operator++()
 T tensorflow::sparse::GroupIterable::IteratorStep::operator++(int)
 T tensorflow::sparse::GroupIterable::IteratorStep::operator==(tensorflow::sparse::GroupIterable::IteratorStep const&) const
 T tensorflow::str_util::ArgDefCase[abi:cxx11](tensorflow::StringPiece)
 T tensorflow::str_util::CEscape[abi:cxx11](tensorflow::StringPiece)
 T tensorflow::str_util::CUnescape(tensorflow::StringPiece, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::str_util::ConsumeLeadingDigits(tensorflow::StringPiece*, unsigned long long*)
 T tensorflow::str_util::ConsumeNonWhitespace(tensorflow::StringPiece*, tensorflow::StringPiece*)
 T tensorflow::str_util::ConsumePrefix(tensorflow::StringPiece*, tensorflow::StringPiece)
 T tensorflow::str_util::ConsumeSuffix(tensorflow::StringPiece*, tensorflow::StringPiece)
 T tensorflow::str_util::Lowercase[abi:cxx11](tensorflow::StringPiece)
 T tensorflow::str_util::RemoveLeadingWhitespace(tensorflow::StringPiece*)
 T tensorflow::str_util::RemoveTrailingWhitespace(tensorflow::StringPiece*)
 T tensorflow::str_util::RemoveWhitespaceContext(tensorflow::StringPiece*)
 T tensorflow::str_util::SplitAndParseAsFloats(tensorflow::StringPiece, char, std::vector<float, std::allocator<float> >*)
 T tensorflow::str_util::SplitAndParseAsInts(tensorflow::StringPiece, char, std::vector<int, std::allocator<int> >*)
 T tensorflow::str_util::SplitAndParseAsInts(tensorflow::StringPiece, char, std::vector<long long, std::allocator<long long> >*)
 T tensorflow::str_util::StringReplace[abi:cxx11](tensorflow::StringPiece, tensorflow::StringPiece, tensorflow::StringPiece, bool)
 T tensorflow::str_util::StripTrailingWhitespace(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::str_util::TitlecaseString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, tensorflow::StringPiece)
 T tensorflow::str_util::Uppercase[abi:cxx11](tensorflow::StringPiece)
 T tensorflow::strings::AlphaNum::AlphaNum(Eigen::half const&)
 T tensorflow::strings::AlphaNum::AlphaNum(tensorflow::strings::Hex)
 T tensorflow::strings::Appendf(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, char const*, ...)
 T tensorflow::strings::Appendv(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, char const*, __va_list_tag*)
 T tensorflow::strings::DoubleToBuffer(double, char*)
 T tensorflow::strings::FastInt32ToBufferLeft(int, char*)
 T tensorflow::strings::FastInt64ToBufferLeft(long long, char*)
 T tensorflow::strings::FastUInt32ToBufferLeft(unsigned int, char*)
 T tensorflow::strings::FastUInt64ToBufferLeft(unsigned long long, char*)
 T tensorflow::strings::FloatToBuffer(float, char*)
 T tensorflow::strings::FpToString[abi:cxx11](unsigned long long)
 T tensorflow::strings::HexStringToUint64(tensorflow::StringPiece const&, unsigned long long*)
 T tensorflow::strings::HumanReadableElapsedTime[abi:cxx11](double)
 T tensorflow::strings::HumanReadableNumBytes[abi:cxx11](long long)
 T tensorflow::strings::HumanReadableNum[abi:cxx11](long long)
 T tensorflow::strings::OrderedCode::ReadNumIncreasing(tensorflow::StringPiece*, unsigned long long*)
 T tensorflow::strings::OrderedCode::ReadSignedNumIncreasing(tensorflow::StringPiece*, long long*)
 T tensorflow::strings::OrderedCode::ReadString(tensorflow::StringPiece*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::strings::OrderedCode::TEST_Corrupt(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, int)
 T tensorflow::strings::OrderedCode::TEST_SkipToNextSpecialByte(char const*, char const*)
 T tensorflow::strings::OrderedCode::WriteNumIncreasing(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned long long)
 T tensorflow::strings::OrderedCode::WriteSignedNumIncreasing(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, long long)
 T tensorflow::strings::OrderedCode::WriteString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, tensorflow::StringPiece)
 T tensorflow::strings::Printf[abi:cxx11](char const*, ...)
 T tensorflow::strings::ProtoParseBoolFromScanner(tensorflow::strings::Scanner*, bool*)
 T tensorflow::strings::ProtoParseStringLiteralFromScanner(tensorflow::strings::Scanner*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tensorflow::strings::Scanner::GetResult(tensorflow::StringPiece*, tensorflow::StringPiece*)
 T tensorflow::strings::Scanner::ScanUntilImpl(char, bool)
 T tensorflow::strings::StrAppend(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, tensorflow::strings::AlphaNum const&)
 T tensorflow::strings::StrAppend(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&)
 T tensorflow::strings::StrAppend(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&)
 T tensorflow::strings::StrAppend(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&)
 T tensorflow::strings::StrCat[abi:cxx11](tensorflow::strings::AlphaNum const&)
 T tensorflow::strings::StrCat[abi:cxx11](tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&)
 T tensorflow::strings::StrCat[abi:cxx11](tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&)
 T tensorflow::strings::StrCat[abi:cxx11](tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&)
 T tensorflow::strings::StringToFp(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long long*)
 T tensorflow::strings::Uint64ToHexString(unsigned long long, char*)
 T tensorflow::strings::internal::AppendPieces(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::initializer_list<tensorflow::StringPiece>)
 T tensorflow::strings::internal::CatPieces[abi:cxx11](std::initializer_list<tensorflow::StringPiece>)
 T tensorflow::strings::safe_strto32(tensorflow::StringPiece, int*)
 T tensorflow::strings::safe_strto64(tensorflow::StringPiece, long long*)
 T tensorflow::strings::safe_strtod(char const*, double*)
 T tensorflow::strings::safe_strtof(char const*, float*)
 T tensorflow::strings::safe_strtou32(tensorflow::StringPiece, unsigned int*)
 T tensorflow::strings::safe_strtou64(tensorflow::StringPiece, unsigned long long*)
 T tensorflow::subgraph::FetchOutputs(tensorflow::Graph*, tensorflow::DeviceAttributes const&, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, bool, std::unordered_map<tensorflow::StringPiece, tensorflow::Node*, tensorflow::StringPieceHasher, std::equal_to<tensorflow::StringPiece>, std::allocator<std::pair<tensorflow::StringPiece const, tensorflow::Node*> > >*, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> >*, tensorflow::gtl::InlinedVector<tensorflow::DataType, 4>*)
 T tensorflow::subgraph::RewriteGraphForExecution(tensorflow::Graph*, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, tensorflow::DeviceAttributes const&, bool, tensorflow::subgraph::RewriteGraphMetadata*)
 T tensorflow::table::Block::Block(tensorflow::table::BlockContents const&)
 T tensorflow::table::Block::NewIterator()
 T tensorflow::table::Block::~Block()
 T tensorflow::table::BlockBuilder::Add(tensorflow::StringPiece const&, tensorflow::StringPiece const&)
 T tensorflow::table::BlockBuilder::BlockBuilder(tensorflow::table::Options const*)
 T tensorflow::table::BlockBuilder::CurrentSizeEstimate() const
 T tensorflow::table::BlockBuilder::Finish()
 T tensorflow::table::BlockBuilder::Reset()
 T tensorflow::table::BlockHandle::DecodeFrom(tensorflow::StringPiece*)
 T tensorflow::table::BlockHandle::EncodeTo(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const
 T tensorflow::table::Footer::DecodeFrom(tensorflow::StringPiece*)
 T tensorflow::table::Footer::EncodeTo(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const
 T tensorflow::table::Iterator::Iterator()
 T tensorflow::table::Iterator::RegisterCleanup(void (*)(void*, void*), void*, void*)
 T tensorflow::table::Iterator::~Iterator()
 T tensorflow::table::NewEmptyIterator()
 T tensorflow::table::NewErrorIterator(tensorflow::Status const&)
 T tensorflow::table::NewTwoLevelIterator(tensorflow::table::Iterator*, tensorflow::table::Iterator* (*)(void*, tensorflow::StringPiece const&), void*)
 T tensorflow::table::ReadBlock(tensorflow::RandomAccessFile*, tensorflow::table::BlockHandle const&, tensorflow::table::BlockContents*)
 T tensorflow::table::Table::ApproximateOffsetOf(tensorflow::StringPiece const&) const
 T tensorflow::table::Table::BlockReader(void*, tensorflow::StringPiece const&)
 T tensorflow::table::Table::InternalGet(tensorflow::StringPiece const&, void*, void (*)(void*, tensorflow::StringPiece const&, tensorflow::StringPiece const&))
 T tensorflow::table::Table::NewIterator() const
 T tensorflow::table::Table::Open(tensorflow::table::Options const&, tensorflow::RandomAccessFile*, unsigned long long, tensorflow::table::Table**)
 T tensorflow::table::Table::~Table()
 T tensorflow::table::TableBuilder::Abandon()
 T tensorflow::table::TableBuilder::Add(tensorflow::StringPiece const&, tensorflow::StringPiece const&)
 T tensorflow::table::TableBuilder::FileSize() const
 T tensorflow::table::TableBuilder::Finish()
 T tensorflow::table::TableBuilder::Flush()
 T tensorflow::table::TableBuilder::NumEntries() const
 T tensorflow::table::TableBuilder::TableBuilder(tensorflow::table::Options const&, tensorflow::WritableFile*)
 T tensorflow::table::TableBuilder::WriteBlock(tensorflow::table::BlockBuilder*, tensorflow::table::BlockHandle*)
 T tensorflow::table::TableBuilder::WriteRawBlock(tensorflow::StringPiece const&, tensorflow::table::CompressionType, tensorflow::table::BlockHandle*)
 T tensorflow::table::TableBuilder::status() const
 T tensorflow::table::TableBuilder::~TableBuilder()
 T tensorflow::tensor::Concat(tensorflow::gtl::ArraySlice<tensorflow::Tensor> const&, tensorflow::Tensor*)
 T tensorflow::tensor::DeepCopy(tensorflow::Tensor const&)
 T tensorflow::tensor::Split(tensorflow::Tensor const&, tensorflow::gtl::ArraySlice<long long> const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*)
 T tensorflow::thread::ThreadPool::CurrentThreadId() const
 T tensorflow::thread::ThreadPool::NumThreads() const
 T tensorflow::thread::ThreadPool::ParallelFor(long long, long long, std::function<void (long long, long long)>)
 T tensorflow::thread::ThreadPool::ParallelForWithWorkerId(long long, long long, std::function<void (long long, long long, int)> const&)
 T tensorflow::thread::ThreadPool::Schedule(std::function<void ()>)
 T tensorflow::thread::ThreadPool::ThreadPool(tensorflow::Env*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
 T tensorflow::thread::ThreadPool::ThreadPool(tensorflow::Env*, tensorflow::ThreadOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
 T tensorflow::thread::ThreadPool::ThreadPool(tensorflow::Env*, tensorflow::ThreadOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, bool)
 T tensorflow::thread::ThreadPool::~ThreadPool()
 T tensorflow::wav::DecodeLin16WaveAsFloatVector(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<float, std::allocator<float> >*, unsigned int*, unsigned short*, unsigned int*)
 T tensorflow::wav::EncodeAudioAsS16LEWav(float const*, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T tf_compiler_version()
 T tf_cxx11_abi_flag()
 T tf_git_version()
 T tf_monolithic_build()
 T uncompress
 T util::Fingerprint128(char const*, unsigned long)
 T util::Fingerprint32(char const*, unsigned long)
 T util::Fingerprint64(char const*, unsigned long)
 T util::Hash(char const*, unsigned long)
 T util::Hash128(char const*, unsigned long)
 T util::Hash128WithSeed(char const*, unsigned long, std::pair<unsigned long, unsigned long>)
 T util::Hash32(char const*, unsigned long)
 T util::Hash32WithSeed(char const*, unsigned long, unsigned int)
 T util::Hash64(char const*, unsigned long)
 T util::Hash64WithSeed(char const*, unsigned long, unsigned long)
 T util::Hash64WithSeeds(char const*, unsigned long, unsigned long, unsigned long)
 T virtual thunk to tensorflow::internal::LogMessage::~LogMessage()
 T virtual thunk to tensorflow::internal::LogMessageFatal::~LogMessageFatal()
 T void const* tensorflow::Variant::get<void>() const
 T void tensorflow::EncodeVariant<tensorflow::VariantTensorDataProto>(tensorflow::VariantTensorDataProto const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 T void tensorflow::EncodeVariant<tensorflow::VariantTensorDataProto>(tensorflow::VariantTensorDataProto const&, tensorflow::VariantTensorData*)
 T void tensorflow::internal::MakeCheckOpValueString<char>(std::ostream*, char const&)
 T void tensorflow::internal::MakeCheckOpValueString<decltype(nullptr)>(std::ostream*, decltype(nullptr) const&)
 T void tensorflow::internal::MakeCheckOpValueString<signed char>(std::ostream*, signed char const&)
 T void tensorflow::internal::MakeCheckOpValueString<unsigned char>(std::ostream*, unsigned char const&)
 T void* tensorflow::Variant::get<void>()
 T zError
 T zcalloc
 T zcfree
 T zlibCompileFlags
 T zlibVersion
 V VTT for tensorflow::internal::LogMessage
 V VTT for tensorflow::internal::LogMessageFatal
 V je_malloc_conf
 V typeinfo for Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>
 V typeinfo for Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::NonBlockingThreadPoolTempl(int, bool, tensorflow::thread::EigenEnvironment)::{lambda()#1}
 V typeinfo for Eigen::ThreadPoolDevice::parallelFor(long, Eigen::TensorOpCost const&, std::function<long (long)>, std::function<void (long, long)>) const::{lambda(long, long)#1}
 V typeinfo for Eigen::ThreadPoolDevice::parallelFor(long, Eigen::TensorOpCost const&, std::function<long (long)>, std::function<void (long, long)>) const::{lambda(long, long)#1}::operator()(long, long) const::{lambda()#1}
 V typeinfo for Eigen::ThreadPoolInterface
 V typeinfo for bool (*)(tensorflow::StringPiece, int*)
 V typeinfo for bool (*)(tensorflow::StringPiece, long long*)
 V typeinfo for bool (tensorflow::StringPiece, int*)
 V typeinfo for bool (tensorflow::StringPiece, long long*)
 V typeinfo for perftools::gputools::CudaCubinInMemory
 V typeinfo for perftools::gputools::CudaCubinOnDisk
 V typeinfo for perftools::gputools::CudaPtxInMemory
 V typeinfo for perftools::gputools::CudaPtxOnDisk
 V typeinfo for perftools::gputools::KernelLoaderSpec
 V typeinfo for perftools::gputools::OnDiskKernelLoaderSpec
 V typeinfo for perftools::gputools::OneTimeScratchAllocator
 V typeinfo for perftools::gputools::OpenCLBinaryOnDisk
 V typeinfo for perftools::gputools::OpenCLTextInMemory
 V typeinfo for perftools::gputools::OpenCLTextOnDisk
 V typeinfo for perftools::gputools::Platform
 V typeinfo for perftools::gputools::ScratchAllocator
 V typeinfo for perftools::gputools::dnn::DnnSupport
 V typeinfo for perftools::gputools::host::HostExecutor
 V typeinfo for perftools::gputools::host::HostPlatform
 V typeinfo for perftools::gputools::host::HostStream
 V typeinfo for perftools::gputools::host::HostTimer
 V typeinfo for perftools::gputools::internal::StreamExecutorInterface
 V typeinfo for perftools::gputools::internal::StreamInterface
 V typeinfo for perftools::gputools::internal::TimerInterface
 V typeinfo for re2::CaptureNamesWalker
 V typeinfo for re2::CoalesceWalker
 V typeinfo for re2::Compiler
 V typeinfo for re2::EmptyStringWalker
 V typeinfo for re2::NamedCapturesWalker
 V typeinfo for re2::NumCapturesWalker
 V typeinfo for re2::PCREWalker
 V typeinfo for re2::Prefilter::Info::Walker
 V typeinfo for re2::Regexp::Walker<bool>
 V typeinfo for re2::Regexp::Walker<int>
 V typeinfo for re2::Regexp::Walker<re2::Frag>
 V typeinfo for re2::Regexp::Walker<re2::Prefilter::Info*>
 V typeinfo for re2::Regexp::Walker<re2::Regexp*>
 V typeinfo for re2::RepetitionWalker
 V typeinfo for re2::SimplifyWalker
 V typeinfo for re2::ToStringWalker
 V typeinfo for snappy::ByteArraySource
 V typeinfo for snappy::Sink
 V typeinfo for snappy::Source
 V typeinfo for snappy::UncheckedByteArraySink
 V typeinfo for std::_Bind<std::function<void (perftools::gputools::StreamExecutor*)> (perftools::gputools::StreamExecutor*)>
 V typeinfo for std::_Maybe_get_result_type<std::function<void (perftools::gputools::StreamExecutor*)>, void>
 V typeinfo for std::_Mutex_base<(__gnu_cxx::_Lock_policy)2>
 V typeinfo for std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>
 V typeinfo for std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<std::function<void ()> ()> >, std::allocator<std::thread::_Impl<std::_Bind_simple<std::function<void ()> ()> > >, (__gnu_cxx::_Lock_policy)2>
 V typeinfo for std::_Sp_counted_ptr_inplace<tensorflow::NodeProperties, std::allocator<tensorflow::NodeProperties>, (__gnu_cxx::_Lock_policy)2>
 V typeinfo for std::_Sp_counted_ptr_inplace<tensorflow::Notification, std::allocator<tensorflow::Notification>, (__gnu_cxx::_Lock_policy)2>
 V typeinfo for std::_Sp_make_shared_tag
 V typeinfo for std::_Weak_result_type<std::function<void (perftools::gputools::StreamExecutor*)> >
 V typeinfo for std::_Weak_result_type_impl<std::function<void (perftools::gputools::StreamExecutor*)> >
 V typeinfo for std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >
 V typeinfo for std::__hash_base<unsigned long, int>
 V typeinfo for std::hash<int>
 V typeinfo for std::thread::_Impl<std::_Bind_simple<std::function<void ()> ()> >
 V typeinfo for std::thread::_Impl_base
 V typeinfo for tensorflow::AllocationDescription
 V typeinfo for tensorflow::AllocationRecord
 V typeinfo for tensorflow::Allocator
 V typeinfo for tensorflow::AllocatorMemoryUsed
 V typeinfo for tensorflow::AllocatorWrapper
 V typeinfo for tensorflow::ApiDef
 V typeinfo for tensorflow::ApiDef_Arg
 V typeinfo for tensorflow::ApiDef_Attr
 V typeinfo for tensorflow::ApiDef_Endpoint
 V typeinfo for tensorflow::ApiDefs
 V typeinfo for tensorflow::AssetFileDef
 V typeinfo for tensorflow::AsyncOpKernel
 V typeinfo for tensorflow::AttrValue
 V typeinfo for tensorflow::AttrValue_ListValue
 V typeinfo for tensorflow::AutoParallelOptions
 V typeinfo for tensorflow::AvailableDeviceInfo
 V typeinfo for tensorflow::BFCAllocator
 V typeinfo for tensorflow::BasicCPUAllocator
 V typeinfo for tensorflow::BenchmarkEntries
 V typeinfo for tensorflow::BenchmarkEntry
 V typeinfo for tensorflow::BenchmarkEntry::BenchmarkEntry_ExtrasEntry
 V typeinfo for tensorflow::BuildConfiguration
 V typeinfo for tensorflow::BundleEntryProto
 V typeinfo for tensorflow::BundleHeaderProto
 V typeinfo for tensorflow::BytesList
 V typeinfo for tensorflow::CPUAllocator
 V typeinfo for tensorflow::CPUInfo
 V typeinfo for tensorflow::CPUInfo::CPUInfo_CacheSizeEntry
 V typeinfo for tensorflow::CUDAHostAllocator
 V typeinfo for tensorflow::CallFrameInterface
 V typeinfo for tensorflow::CallOp
 V typeinfo for tensorflow::CallOp::ComputeAsync(tensorflow::OpKernelContext*, std::function<void ()>)::{lambda(tensorflow::Status const&)#1}
 V typeinfo for tensorflow::ClusterDef
 V typeinfo for tensorflow::CollectionDef
 V typeinfo for tensorflow::CollectionDef_AnyList
 V typeinfo for tensorflow::CollectionDef_BytesList
 V typeinfo for tensorflow::CollectionDef_FloatList
 V typeinfo for tensorflow::CollectionDef_Int64List
 V typeinfo for tensorflow::CollectionDef_NodeList
 V typeinfo for tensorflow::CommitId
 V typeinfo for tensorflow::CondContextDef
 V typeinfo for tensorflow::ConfigProto
 V typeinfo for tensorflow::ConfigProto::ConfigProto_DeviceCountEntry
 V typeinfo for tensorflow::CostGraphDef
 V typeinfo for tensorflow::CostGraphDef_Node
 V typeinfo for tensorflow::CostGraphDef_Node_InputInfo
 V typeinfo for tensorflow::CostGraphDef_Node_OutputInfo
 V typeinfo for tensorflow::DebugOptions
 V typeinfo for tensorflow::DebugTensorWatch
 V typeinfo for tensorflow::DebuggedSourceFile
 V typeinfo for tensorflow::DebuggedSourceFiles
 V typeinfo for tensorflow::Device
 V typeinfo for tensorflow::DeviceAttributes
 V typeinfo for tensorflow::DeviceBase
 V typeinfo for tensorflow::DeviceContext
 V typeinfo for tensorflow::DeviceFactory
 V typeinfo for tensorflow::DeviceLocality
 V typeinfo for tensorflow::DeviceProperties
 V typeinfo for tensorflow::DeviceProperties::DeviceProperties_EnvironmentEntry
 V typeinfo for tensorflow::DeviceStepStats
 V typeinfo for tensorflow::EigenThreadPoolWrapper
 V typeinfo for tensorflow::EntryValue
 V typeinfo for tensorflow::Env
 V typeinfo for tensorflow::EnvTime
 V typeinfo for tensorflow::EnvWrapper
 V typeinfo for tensorflow::Event
 V typeinfo for tensorflow::Example
 V typeinfo for tensorflow::ExampleParserConfiguration
 V typeinfo for tensorflow::ExampleParserConfiguration::ExampleParserConfiguration_FeatureMapEntry
 V typeinfo for tensorflow::Executor
 V typeinfo for tensorflow::Executor::Run(tensorflow::Executor::Args const&)::{lambda(tensorflow::Status const&)#1}
 V typeinfo for tensorflow::Feature
 V typeinfo for tensorflow::FeatureConfiguration
 V typeinfo for tensorflow::FeatureList
 V typeinfo for tensorflow::FeatureLists
 V typeinfo for tensorflow::FeatureLists::FeatureLists_FeatureListEntry
 V typeinfo for tensorflow::Features
 V typeinfo for tensorflow::Features::Features_FeatureEntry
 V typeinfo for tensorflow::FileSystem
 V typeinfo for tensorflow::FileSystemRegistry
 V typeinfo for tensorflow::FileSystemRegistryImpl
 V typeinfo for tensorflow::FixedLenFeatureProto
 V typeinfo for tensorflow::FloatList
 V typeinfo for tensorflow::FunctionCallFrame
 V typeinfo for tensorflow::FunctionDef
 V typeinfo for tensorflow::FunctionDef::FunctionDef_AttrEntry
 V typeinfo for tensorflow::FunctionDef::FunctionDef_RetEntry
 V typeinfo for tensorflow::FunctionDefLibrary
 V typeinfo for tensorflow::FunctionLibraryDefinition
 V typeinfo for tensorflow::FunctionLibraryRuntime
 V typeinfo for tensorflow::FunctionLibraryRuntimeImpl
 V typeinfo for tensorflow::FunctionLibraryRuntimeImpl::Item
 V typeinfo for tensorflow::GPUBFCAllocator
 V typeinfo for tensorflow::GPUDebugAllocator
 V typeinfo for tensorflow::GPUDeviceContext
 V typeinfo for tensorflow::GPUInfo
 V typeinfo for tensorflow::GPUMemAllocator
 V typeinfo for tensorflow::GPUNanResetAllocator
 V typeinfo for tensorflow::GPUOptions
 V typeinfo for tensorflow::GPUcudaMallocAllocator
 V typeinfo for tensorflow::GpuManagedAllocator
 V typeinfo for tensorflow::GradientDef
 V typeinfo for tensorflow::GraphDef
 V typeinfo for tensorflow::GraphOptimizationPass
 V typeinfo for tensorflow::GraphOptions
 V typeinfo for tensorflow::GraphTransferInfo
 V typeinfo for tensorflow::GraphTransferInfo_ConstNodeInfo
 V typeinfo for tensorflow::GraphTransferInfo_GraphInputNodeInfo
 V typeinfo for tensorflow::GraphTransferInfo_GraphOutputNodeInfo
 V typeinfo for tensorflow::GraphTransferInfo_NodeInfo
 V typeinfo for tensorflow::GraphTransferInfo_NodeInput
 V typeinfo for tensorflow::GraphTransferInfo_NodeInputInfo
 V typeinfo for tensorflow::GraphTransferInfo_NodeOutputInfo
 V typeinfo for tensorflow::HistogramProto
 V typeinfo for tensorflow::Int64List
 V typeinfo for tensorflow::IntraProcessRendezvous
 V typeinfo for tensorflow::IteratorStateMetadata
 V typeinfo for tensorflow::JobDef
 V typeinfo for tensorflow::JobDef::JobDef_TasksEntry
 V typeinfo for tensorflow::KernelDef
 V typeinfo for tensorflow::KernelDef_AttrConstraint
 V typeinfo for tensorflow::LocalDevice
 V typeinfo for tensorflow::LocalPosixFileSystem
 V typeinfo for tensorflow::LocalRendezvousImpl
 V typeinfo for tensorflow::LogMessage
 V typeinfo for tensorflow::MachineConfiguration
 V typeinfo for tensorflow::MemmappedEnv
 V typeinfo for tensorflow::MemmappedFileSystem
 V typeinfo for tensorflow::MemmappedFileSystemDirectory
 V typeinfo for tensorflow::MemmappedFileSystemDirectoryElement
 V typeinfo for tensorflow::MemoryInfo
 V typeinfo for tensorflow::MemoryLogRawAllocation
 V typeinfo for tensorflow::MemoryLogRawDeallocation
 V typeinfo for tensorflow::MemoryLogStep
 V typeinfo for tensorflow::MemoryLogTensorAllocation
 V typeinfo for tensorflow::MemoryLogTensorDeallocation
 V typeinfo for tensorflow::MemoryLogTensorOutput
 V typeinfo for tensorflow::MemoryStats
 V typeinfo for tensorflow::MetaGraphDef
 V typeinfo for tensorflow::MetaGraphDef::MetaGraphDef_CollectionDefEntry
 V typeinfo for tensorflow::MetaGraphDef::MetaGraphDef_SignatureDefEntry
 V typeinfo for tensorflow::MetaGraphDef_MetaInfoDef
 V typeinfo for tensorflow::NameAttrList
 V typeinfo for tensorflow::NameAttrList::NameAttrList_AttrEntry
 V typeinfo for tensorflow::NamedDevice
 V typeinfo for tensorflow::NamedTensorProto
 V typeinfo for tensorflow::NodeDef
 V typeinfo for tensorflow::NodeDef::NodeDef_AttrEntry
 V typeinfo for tensorflow::NodeExecStats
 V typeinfo for tensorflow::NodeOutput
 V typeinfo for tensorflow::NoopRounder
 V typeinfo for tensorflow::NullFileSystem
 V typeinfo for tensorflow::OpDef
 V typeinfo for tensorflow::OpDef_ArgDef
 V typeinfo for tensorflow::OpDef_AttrDef
 V typeinfo for tensorflow::OpDeprecation
 V typeinfo for tensorflow::OpKernel
 V typeinfo for tensorflow::OpList
 V typeinfo for tensorflow::OpListOpRegistry
 V typeinfo for tensorflow::OpRegistry
 V typeinfo for tensorflow::OpRegistryInterface
 V typeinfo for tensorflow::OptimizerOptions
 V typeinfo for tensorflow::PlatformInfo
 V typeinfo for tensorflow::PoolAllocator
 V typeinfo for tensorflow::PosixFileSystem
 V typeinfo for tensorflow::PosixRandomAccessFile
 V typeinfo for tensorflow::PosixReadOnlyMemoryRegion
 V typeinfo for tensorflow::PosixWritableFile
 V typeinfo for tensorflow::ProcessState
 V typeinfo for tensorflow::QueueRunnerDef
 V typeinfo for tensorflow::RPCOptions
 V typeinfo for tensorflow::RandomAccessFile
 V typeinfo for tensorflow::ReadOnlyMemoryRegion
 V typeinfo for tensorflow::ReaderBaseState
 V typeinfo for tensorflow::ReffedStatusCallback
 V typeinfo for tensorflow::RemoteFusedGraphExecuteInfo
 V typeinfo for tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto
 V typeinfo for tensorflow::RenamedDevice
 V typeinfo for tensorflow::Rendezvous
 V typeinfo for tensorflow::ResourceBase
 V typeinfo for tensorflow::ResourceHandleProto
 V typeinfo for tensorflow::RewriterConfig
 V typeinfo for tensorflow::RoundUpInterface
 V typeinfo for tensorflow::RunConfiguration
 V typeinfo for tensorflow::RunMetadata
 V typeinfo for tensorflow::RunOptions
 V typeinfo for tensorflow::SaveSliceInfoDef
 V typeinfo for tensorflow::SavedModel
 V typeinfo for tensorflow::SavedSlice
 V typeinfo for tensorflow::SavedSliceMeta
 V typeinfo for tensorflow::SavedTensorSliceMeta
 V typeinfo for tensorflow::SavedTensorSlices
 V typeinfo for tensorflow::SaverDef
 V typeinfo for tensorflow::SequenceExample
 V typeinfo for tensorflow::ServerDef
 V typeinfo for tensorflow::Session
 V typeinfo for tensorflow::SessionLog
 V typeinfo for tensorflow::SignatureDef
 V typeinfo for tensorflow::SignatureDef::SignatureDef_InputsEntry
 V typeinfo for tensorflow::SignatureDef::SignatureDef_OutputsEntry
 V typeinfo for tensorflow::StatsPublisherInterface
 V typeinfo for tensorflow::Status (*)(bool const&, tensorflow::TensorShape*)
 V typeinfo for tensorflow::Status (*)(double const&, tensorflow::TensorShape*)
 V typeinfo for tensorflow::Status (*)(float const&, tensorflow::TensorShape*)
 V typeinfo for tensorflow::Status (*)(int const&, tensorflow::TensorShape*)
 V typeinfo for tensorflow::Status (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::checkpoint::TensorSliceReader::Table**)
 V typeinfo for tensorflow::Status (*)(tensorflow::OpKernelContext*, bool const&, bool const&, bool*)
 V typeinfo for tensorflow::Status (*)(tensorflow::OpKernelContext*, bool const&, bool*)
 V typeinfo for tensorflow::Status (*)(tensorflow::OpKernelContext*, double const&, double const&, double*)
 V typeinfo for tensorflow::Status (*)(tensorflow::OpKernelContext*, double const&, double*)
 V typeinfo for tensorflow::Status (*)(tensorflow::OpKernelContext*, float const&, float const&, float*)
 V typeinfo for tensorflow::Status (*)(tensorflow::OpKernelContext*, float const&, float*)
 V typeinfo for tensorflow::Status (*)(tensorflow::OpKernelContext*, int const&, int const&, int*)
 V typeinfo for tensorflow::Status (*)(tensorflow::OpKernelContext*, int const&, int*)
 V typeinfo for tensorflow::Status (*)(tensorflow::shape_inference::InferenceContext*)
 V typeinfo for tensorflow::Status (*)(void**)
 V typeinfo for tensorflow::Status (bool const&, tensorflow::TensorShape*)
 V typeinfo for tensorflow::Status (double const&, tensorflow::TensorShape*)
 V typeinfo for tensorflow::Status (float const&, tensorflow::TensorShape*)
 V typeinfo for tensorflow::Status (int const&, tensorflow::TensorShape*)
 V typeinfo for tensorflow::Status (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::checkpoint::TensorSliceReader::Table**)
 V typeinfo for tensorflow::Status (tensorflow::OpKernelContext*, bool const&, bool const&, bool*)
 V typeinfo for tensorflow::Status (tensorflow::OpKernelContext*, bool const&, bool*)
 V typeinfo for tensorflow::Status (tensorflow::OpKernelContext*, double const&, double const&, double*)
 V typeinfo for tensorflow::Status (tensorflow::OpKernelContext*, double const&, double*)
 V typeinfo for tensorflow::Status (tensorflow::OpKernelContext*, float const&, float const&, float*)
 V typeinfo for tensorflow::Status (tensorflow::OpKernelContext*, float const&, float*)
 V typeinfo for tensorflow::Status (tensorflow::OpKernelContext*, int const&, int const&, int*)
 V typeinfo for tensorflow::Status (tensorflow::OpKernelContext*, int const&, int*)
 V typeinfo for tensorflow::Status (tensorflow::shape_inference::InferenceContext*)
 V typeinfo for tensorflow::Status (void**)
 V typeinfo for tensorflow::StepStats
 V typeinfo for tensorflow::SubAllocator
 V typeinfo for tensorflow::SubBuffer<Eigen::QInt16>
 V typeinfo for tensorflow::SubBuffer<Eigen::QInt32>
 V typeinfo for tensorflow::SubBuffer<Eigen::QInt8>
 V typeinfo for tensorflow::SubBuffer<Eigen::QUInt16>
 V typeinfo for tensorflow::SubBuffer<Eigen::QUInt8>
 V typeinfo for tensorflow::SubBuffer<Eigen::half>
 V typeinfo for tensorflow::SubBuffer<bool>
 V typeinfo for tensorflow::SubBuffer<double>
 V typeinfo for tensorflow::SubBuffer<float>
 V typeinfo for tensorflow::SubBuffer<int>
 V typeinfo for tensorflow::SubBuffer<long long>
 V typeinfo for tensorflow::SubBuffer<short>
 V typeinfo for tensorflow::SubBuffer<signed char>
 V typeinfo for tensorflow::SubBuffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >
 V typeinfo for tensorflow::SubBuffer<std::complex<double> >
 V typeinfo for tensorflow::SubBuffer<std::complex<float> >
 V typeinfo for tensorflow::SubBuffer<tensorflow::ResourceHandle>
 V typeinfo for tensorflow::SubBuffer<tensorflow::Variant>
 V typeinfo for tensorflow::SubBuffer<tensorflow::bfloat16>
 V typeinfo for tensorflow::SubBuffer<unsigned char>
 V typeinfo for tensorflow::SubBuffer<unsigned int>
 V typeinfo for tensorflow::SubBuffer<unsigned long long>
 V typeinfo for tensorflow::SubBuffer<unsigned short>
 V typeinfo for tensorflow::SubProcess
 V typeinfo for tensorflow::Summary
 V typeinfo for tensorflow::SummaryDescription
 V typeinfo for tensorflow::SummaryMetadata
 V typeinfo for tensorflow::SummaryMetadata_PluginData
 V typeinfo for tensorflow::Summary_Audio
 V typeinfo for tensorflow::Summary_Image
 V typeinfo for tensorflow::Summary_Value
 V typeinfo for tensorflow::TaggedRunMetadata
 V typeinfo for tensorflow::Tensor
 V typeinfo for tensorflow::TensorBuffer
 V typeinfo for tensorflow::TensorDescription
 V typeinfo for tensorflow::TensorInfo
 V typeinfo for tensorflow::TensorInfo_CooSparse
 V typeinfo for tensorflow::TensorProto
 V typeinfo for tensorflow::TensorShapeProto
 V typeinfo for tensorflow::TensorShapeProto_Dim
 V typeinfo for tensorflow::TensorSliceProto
 V typeinfo for tensorflow::TensorSliceProto_Extent
 V typeinfo for tensorflow::TestResults
 V typeinfo for tensorflow::Thread
 V typeinfo for tensorflow::ThreadPoolDevice
 V typeinfo for tensorflow::ThreadPoolDeviceFactory
 V typeinfo for tensorflow::ThreadPoolOptionProto
 V typeinfo for tensorflow::TrackingAllocator
 V typeinfo for tensorflow::TrackingVisitableAllocator
 V typeinfo for tensorflow::ValuesDef
 V typeinfo for tensorflow::ValuesDef::ValuesDef_ExternalValuesEntry
 V typeinfo for tensorflow::VarLenFeatureProto
 V typeinfo for tensorflow::VariableDef
 V typeinfo for tensorflow::Variant::Value<bool>
 V typeinfo for tensorflow::Variant::Value<double>
 V typeinfo for tensorflow::Variant::Value<float>
 V typeinfo for tensorflow::Variant::Value<int>
 V typeinfo for tensorflow::Variant::Value<tensorflow::Tensor>
 V typeinfo for tensorflow::Variant::Value<tensorflow::VariantTensorDataProto>
 V typeinfo for tensorflow::Variant::ValueInterface
 V typeinfo for tensorflow::VariantTensorDataProto
 V typeinfo for tensorflow::VersionDef
 V typeinfo for tensorflow::VisitableAllocator
 V typeinfo for tensorflow::WhileContextDef
 V typeinfo for tensorflow::WritableFile
 V typeinfo for tensorflow::checkpoint::TensorSliceReader
 V typeinfo for tensorflow::checkpoint::TensorSliceReader::Table
 V typeinfo for tensorflow::checkpoint::TensorSliceSet
 V typeinfo for tensorflow::checkpoint::TensorSliceWriter
 V typeinfo for tensorflow::checkpoint::TensorSliceWriter::Builder
 V typeinfo for tensorflow::core::RefCounted
 V typeinfo for tensorflow::internal::LogMessage
 V typeinfo for tensorflow::internal::LogMessageFatal
 V typeinfo for tensorflow::io::BufferedInputStream
 V typeinfo for tensorflow::io::InputStreamInterface
 V typeinfo for tensorflow::io::RandomAccessInputStream
 V typeinfo for tensorflow::io::RecordReader
 V typeinfo for tensorflow::io::SequentialRecordReader
 V typeinfo for tensorflow::io::SnappyInputBuffer
 V typeinfo for tensorflow::io::ZlibInputStream
 V typeinfo for tensorflow::io::ZlibOutputBuffer
 V typeinfo for tensorflow::lookup::InitializableLookupTable
 V typeinfo for tensorflow::lookup::InitializableLookupTable::InitTableIterator
 V typeinfo for tensorflow::lookup::LookupInterface
 V typeinfo for tensorflow::monitoring::Buckets
 V typeinfo for tensorflow::monitoring::Counter<0>::Counter(tensorflow::monitoring::MetricDef<(tensorflow::monitoring::MetricKind)1, long long, 0> const&)::{lambda(tensorflow::monitoring::MetricCollectorGetter)#1}
 V typeinfo for tensorflow::port::Tracing::Engine
 V typeinfo for tensorflow::port::Tracing::Engine::Annotation
 V typeinfo for tensorflow::port::Tracing::Engine::Tracer
 V typeinfo for tensorflow::profile_utils::CpuUtils::DefaultCpuUtilsHelper
 V typeinfo for tensorflow::profile_utils::ICpuUtilsHelper
 V typeinfo for tensorflow::register_file_system::Register<tensorflow::LocalPosixFileSystem>::Register(tensorflow::Env*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda()#1}
 V typeinfo for tensorflow::register_file_system::Register<tensorflow::PosixFileSystem>::Register(tensorflow::Env*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda()#1}
 V typeinfo for tensorflow::table::Block::Iter
 V typeinfo for tensorflow::table::Iterator
 V typeinfo for tensorflow::thread::EigenEnvironment::CreateThread(std::function<void ()>)::{lambda()#1}
 V typeinfo for tensorflow::thread::ThreadPool::Impl
 V typeinfo for tensorflow::thread::ThreadPool::Impl::ParallelFor(long long, long long, std::function<void (long long, long long)>)::{lambda(long, long)#1}
 V typeinfo for tensorflow::variant_op_registry_fn_registration::UnaryVariantBinaryOpRegistration<bool>::UnaryVariantBinaryOpRegistration(tensorflow::VariantBinaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, bool const&, bool const&, bool*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)#1}
 V typeinfo for tensorflow::variant_op_registry_fn_registration::UnaryVariantBinaryOpRegistration<double>::UnaryVariantBinaryOpRegistration(tensorflow::VariantBinaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, double const&, double const&, double*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)#1}
 V typeinfo for tensorflow::variant_op_registry_fn_registration::UnaryVariantBinaryOpRegistration<float>::UnaryVariantBinaryOpRegistration(tensorflow::VariantBinaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, float const&, float const&, float*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)#1}
 V typeinfo for tensorflow::variant_op_registry_fn_registration::UnaryVariantBinaryOpRegistration<int>::UnaryVariantBinaryOpRegistration(tensorflow::VariantBinaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, int const&, int const&, int*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)#1}
 V typeinfo for tensorflow::variant_op_registry_fn_registration::UnaryVariantDecodeRegistration<bool>::UnaryVariantDecodeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(tensorflow::Variant*)#1}
 V typeinfo for tensorflow::variant_op_registry_fn_registration::UnaryVariantDecodeRegistration<double>::UnaryVariantDecodeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(tensorflow::Variant*)#1}
 V typeinfo for tensorflow::variant_op_registry_fn_registration::UnaryVariantDecodeRegistration<float>::UnaryVariantDecodeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(tensorflow::Variant*)#1}
 V typeinfo for tensorflow::variant_op_registry_fn_registration::UnaryVariantDecodeRegistration<int>::UnaryVariantDecodeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(tensorflow::Variant*)#1}
 V typeinfo for tensorflow::variant_op_registry_fn_registration::UnaryVariantDecodeRegistration<tensorflow::Tensor>::UnaryVariantDecodeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(tensorflow::Variant*)#1}
 V typeinfo for tensorflow::variant_op_registry_fn_registration::UnaryVariantShapeRegistration<bool>::UnaryVariantShapeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (bool const&, tensorflow::TensorShape*)> const&)::{lambda(tensorflow::Variant const&, tensorflow::TensorShape*)#1}
 V typeinfo for tensorflow::variant_op_registry_fn_registration::UnaryVariantShapeRegistration<double>::UnaryVariantShapeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (double const&, tensorflow::TensorShape*)> const&)::{lambda(tensorflow::Variant const&, tensorflow::TensorShape*)#1}
 V typeinfo for tensorflow::variant_op_registry_fn_registration::UnaryVariantShapeRegistration<float>::UnaryVariantShapeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (float const&, tensorflow::TensorShape*)> const&)::{lambda(tensorflow::Variant const&, tensorflow::TensorShape*)#1}
 V typeinfo for tensorflow::variant_op_registry_fn_registration::UnaryVariantShapeRegistration<int>::UnaryVariantShapeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (int const&, tensorflow::TensorShape*)> const&)::{lambda(tensorflow::Variant const&, tensorflow::TensorShape*)#1}
 V typeinfo for tensorflow::variant_op_registry_fn_registration::UnaryVariantUnaryOpRegistration<bool>::UnaryVariantUnaryOpRegistration(tensorflow::VariantUnaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, bool const&, bool*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*)#1}
 V typeinfo for tensorflow::variant_op_registry_fn_registration::UnaryVariantUnaryOpRegistration<double>::UnaryVariantUnaryOpRegistration(tensorflow::VariantUnaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, double const&, double*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*)#1}
 V typeinfo for tensorflow::variant_op_registry_fn_registration::UnaryVariantUnaryOpRegistration<float>::UnaryVariantUnaryOpRegistration(tensorflow::VariantUnaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, float const&, float*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*)#1}
 V typeinfo for tensorflow::variant_op_registry_fn_registration::UnaryVariantUnaryOpRegistration<int>::UnaryVariantUnaryOpRegistration(tensorflow::VariantUnaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, int const&, int*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*)#1}
 V typeinfo name for Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>
 V typeinfo name for Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::NonBlockingThreadPoolTempl(int, bool, tensorflow::thread::EigenEnvironment)::{lambda()#1}
 V typeinfo name for Eigen::ThreadPoolDevice::parallelFor(long, Eigen::TensorOpCost const&, std::function<long (long)>, std::function<void (long, long)>) const::{lambda(long, long)#1}
 V typeinfo name for Eigen::ThreadPoolDevice::parallelFor(long, Eigen::TensorOpCost const&, std::function<long (long)>, std::function<void (long, long)>) const::{lambda(long, long)#1}::operator()(long, long) const::{lambda()#1}
 V typeinfo name for Eigen::ThreadPoolInterface
 V typeinfo name for bool (*)(tensorflow::StringPiece, int*)
 V typeinfo name for bool (*)(tensorflow::StringPiece, long long*)
 V typeinfo name for bool (tensorflow::StringPiece, int*)
 V typeinfo name for bool (tensorflow::StringPiece, long long*)
 V typeinfo name for perftools::gputools::CudaCubinInMemory
 V typeinfo name for perftools::gputools::CudaCubinOnDisk
 V typeinfo name for perftools::gputools::CudaPtxInMemory
 V typeinfo name for perftools::gputools::CudaPtxOnDisk
 V typeinfo name for perftools::gputools::KernelLoaderSpec
 V typeinfo name for perftools::gputools::OnDiskKernelLoaderSpec
 V typeinfo name for perftools::gputools::OneTimeScratchAllocator
 V typeinfo name for perftools::gputools::OpenCLBinaryOnDisk
 V typeinfo name for perftools::gputools::OpenCLTextInMemory
 V typeinfo name for perftools::gputools::OpenCLTextOnDisk
 V typeinfo name for perftools::gputools::Platform
 V typeinfo name for perftools::gputools::ScratchAllocator
 V typeinfo name for perftools::gputools::dnn::DnnSupport
 V typeinfo name for perftools::gputools::host::HostExecutor
 V typeinfo name for perftools::gputools::host::HostPlatform
 V typeinfo name for perftools::gputools::host::HostStream
 V typeinfo name for perftools::gputools::host::HostTimer
 V typeinfo name for perftools::gputools::internal::StreamExecutorInterface
 V typeinfo name for perftools::gputools::internal::StreamInterface
 V typeinfo name for perftools::gputools::internal::TimerInterface
 V typeinfo name for re2::CaptureNamesWalker
 V typeinfo name for re2::CoalesceWalker
 V typeinfo name for re2::Compiler
 V typeinfo name for re2::EmptyStringWalker
 V typeinfo name for re2::NamedCapturesWalker
 V typeinfo name for re2::NumCapturesWalker
 V typeinfo name for re2::PCREWalker
 V typeinfo name for re2::Prefilter::Info::Walker
 V typeinfo name for re2::Regexp::Walker<bool>
 V typeinfo name for re2::Regexp::Walker<int>
 V typeinfo name for re2::Regexp::Walker<re2::Frag>
 V typeinfo name for re2::Regexp::Walker<re2::Prefilter::Info*>
 V typeinfo name for re2::Regexp::Walker<re2::Regexp*>
 V typeinfo name for re2::RepetitionWalker
 V typeinfo name for re2::SimplifyWalker
 V typeinfo name for re2::ToStringWalker
 V typeinfo name for snappy::ByteArraySource
 V typeinfo name for snappy::Sink
 V typeinfo name for snappy::Source
 V typeinfo name for snappy::UncheckedByteArraySink
 V typeinfo name for std::_Bind<std::function<void (perftools::gputools::StreamExecutor*)> (perftools::gputools::StreamExecutor*)>
 V typeinfo name for std::_Maybe_get_result_type<std::function<void (perftools::gputools::StreamExecutor*)>, void>
 V typeinfo name for std::_Mutex_base<(__gnu_cxx::_Lock_policy)2>
 V typeinfo name for std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>
 V typeinfo name for std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<std::function<void ()> ()> >, std::allocator<std::thread::_Impl<std::_Bind_simple<std::function<void ()> ()> > >, (__gnu_cxx::_Lock_policy)2>
 V typeinfo name for std::_Sp_counted_ptr_inplace<tensorflow::NodeProperties, std::allocator<tensorflow::NodeProperties>, (__gnu_cxx::_Lock_policy)2>
 V typeinfo name for std::_Sp_counted_ptr_inplace<tensorflow::Notification, std::allocator<tensorflow::Notification>, (__gnu_cxx::_Lock_policy)2>
 V typeinfo name for std::_Sp_make_shared_tag
 V typeinfo name for std::_Weak_result_type<std::function<void (perftools::gputools::StreamExecutor*)> >
 V typeinfo name for std::_Weak_result_type_impl<std::function<void (perftools::gputools::StreamExecutor*)> >
 V typeinfo name for std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >
 V typeinfo name for std::__hash_base<unsigned long, int>
 V typeinfo name for std::hash<int>
 V typeinfo name for std::thread::_Impl<std::_Bind_simple<std::function<void ()> ()> >
 V typeinfo name for std::thread::_Impl_base
 V typeinfo name for tensorflow::AllocationDescription
 V typeinfo name for tensorflow::AllocationRecord
 V typeinfo name for tensorflow::Allocator
 V typeinfo name for tensorflow::AllocatorMemoryUsed
 V typeinfo name for tensorflow::AllocatorWrapper
 V typeinfo name for tensorflow::ApiDef
 V typeinfo name for tensorflow::ApiDef_Arg
 V typeinfo name for tensorflow::ApiDef_Attr
 V typeinfo name for tensorflow::ApiDef_Endpoint
 V typeinfo name for tensorflow::ApiDefs
 V typeinfo name for tensorflow::AssetFileDef
 V typeinfo name for tensorflow::AsyncOpKernel
 V typeinfo name for tensorflow::AttrValue
 V typeinfo name for tensorflow::AttrValue_ListValue
 V typeinfo name for tensorflow::AutoParallelOptions
 V typeinfo name for tensorflow::AvailableDeviceInfo
 V typeinfo name for tensorflow::BFCAllocator
 V typeinfo name for tensorflow::BasicCPUAllocator
 V typeinfo name for tensorflow::BenchmarkEntries
 V typeinfo name for tensorflow::BenchmarkEntry
 V typeinfo name for tensorflow::BenchmarkEntry::BenchmarkEntry_ExtrasEntry
 V typeinfo name for tensorflow::BuildConfiguration
 V typeinfo name for tensorflow::BundleEntryProto
 V typeinfo name for tensorflow::BundleHeaderProto
 V typeinfo name for tensorflow::BytesList
 V typeinfo name for tensorflow::CPUAllocator
 V typeinfo name for tensorflow::CPUInfo
 V typeinfo name for tensorflow::CPUInfo::CPUInfo_CacheSizeEntry
 V typeinfo name for tensorflow::CUDAHostAllocator
 V typeinfo name for tensorflow::CallFrameInterface
 V typeinfo name for tensorflow::CallOp
 V typeinfo name for tensorflow::CallOp::ComputeAsync(tensorflow::OpKernelContext*, std::function<void ()>)::{lambda(tensorflow::Status const&)#1}
 V typeinfo name for tensorflow::ClusterDef
 V typeinfo name for tensorflow::CollectionDef
 V typeinfo name for tensorflow::CollectionDef_AnyList
 V typeinfo name for tensorflow::CollectionDef_BytesList
 V typeinfo name for tensorflow::CollectionDef_FloatList
 V typeinfo name for tensorflow::CollectionDef_Int64List
 V typeinfo name for tensorflow::CollectionDef_NodeList
 V typeinfo name for tensorflow::CommitId
 V typeinfo name for tensorflow::CondContextDef
 V typeinfo name for tensorflow::ConfigProto
 V typeinfo name for tensorflow::ConfigProto::ConfigProto_DeviceCountEntry
 V typeinfo name for tensorflow::CostGraphDef
 V typeinfo name for tensorflow::CostGraphDef_Node
 V typeinfo name for tensorflow::CostGraphDef_Node_InputInfo
 V typeinfo name for tensorflow::CostGraphDef_Node_OutputInfo
 V typeinfo name for tensorflow::DebugOptions
 V typeinfo name for tensorflow::DebugTensorWatch
 V typeinfo name for tensorflow::DebuggedSourceFile
 V typeinfo name for tensorflow::DebuggedSourceFiles
 V typeinfo name for tensorflow::Device
 V typeinfo name for tensorflow::DeviceAttributes
 V typeinfo name for tensorflow::DeviceBase
 V typeinfo name for tensorflow::DeviceContext
 V typeinfo name for tensorflow::DeviceFactory
 V typeinfo name for tensorflow::DeviceLocality
 V typeinfo name for tensorflow::DeviceProperties
 V typeinfo name for tensorflow::DeviceProperties::DeviceProperties_EnvironmentEntry
 V typeinfo name for tensorflow::DeviceStepStats
 V typeinfo name for tensorflow::EigenThreadPoolWrapper
 V typeinfo name for tensorflow::EntryValue
 V typeinfo name for tensorflow::Env
 V typeinfo name for tensorflow::EnvTime
 V typeinfo name for tensorflow::EnvWrapper
 V typeinfo name for tensorflow::Event
 V typeinfo name for tensorflow::Example
 V typeinfo name for tensorflow::ExampleParserConfiguration
 V typeinfo name for tensorflow::ExampleParserConfiguration::ExampleParserConfiguration_FeatureMapEntry
 V typeinfo name for tensorflow::Executor
 V typeinfo name for tensorflow::Executor::Run(tensorflow::Executor::Args const&)::{lambda(tensorflow::Status const&)#1}
 V typeinfo name for tensorflow::Feature
 V typeinfo name for tensorflow::FeatureConfiguration
 V typeinfo name for tensorflow::FeatureList
 V typeinfo name for tensorflow::FeatureLists
 V typeinfo name for tensorflow::FeatureLists::FeatureLists_FeatureListEntry
 V typeinfo name for tensorflow::Features
 V typeinfo name for tensorflow::Features::Features_FeatureEntry
 V typeinfo name for tensorflow::FileSystem
 V typeinfo name for tensorflow::FileSystemRegistry
 V typeinfo name for tensorflow::FileSystemRegistryImpl
 V typeinfo name for tensorflow::FixedLenFeatureProto
 V typeinfo name for tensorflow::FloatList
 V typeinfo name for tensorflow::FunctionCallFrame
 V typeinfo name for tensorflow::FunctionDef
 V typeinfo name for tensorflow::FunctionDef::FunctionDef_AttrEntry
 V typeinfo name for tensorflow::FunctionDef::FunctionDef_RetEntry
 V typeinfo name for tensorflow::FunctionDefLibrary
 V typeinfo name for tensorflow::FunctionLibraryDefinition
 V typeinfo name for tensorflow::FunctionLibraryRuntime
 V typeinfo name for tensorflow::FunctionLibraryRuntimeImpl
 V typeinfo name for tensorflow::FunctionLibraryRuntimeImpl::Item
 V typeinfo name for tensorflow::GPUBFCAllocator
 V typeinfo name for tensorflow::GPUDebugAllocator
 V typeinfo name for tensorflow::GPUDeviceContext
 V typeinfo name for tensorflow::GPUInfo
 V typeinfo name for tensorflow::GPUMemAllocator
 V typeinfo name for tensorflow::GPUNanResetAllocator
 V typeinfo name for tensorflow::GPUOptions
 V typeinfo name for tensorflow::GPUcudaMallocAllocator
 V typeinfo name for tensorflow::GpuManagedAllocator
 V typeinfo name for tensorflow::GradientDef
 V typeinfo name for tensorflow::GraphDef
 V typeinfo name for tensorflow::GraphOptimizationPass
 V typeinfo name for tensorflow::GraphOptions
 V typeinfo name for tensorflow::GraphTransferInfo
 V typeinfo name for tensorflow::GraphTransferInfo_ConstNodeInfo
 V typeinfo name for tensorflow::GraphTransferInfo_GraphInputNodeInfo
 V typeinfo name for tensorflow::GraphTransferInfo_GraphOutputNodeInfo
 V typeinfo name for tensorflow::GraphTransferInfo_NodeInfo
 V typeinfo name for tensorflow::GraphTransferInfo_NodeInput
 V typeinfo name for tensorflow::GraphTransferInfo_NodeInputInfo
 V typeinfo name for tensorflow::GraphTransferInfo_NodeOutputInfo
 V typeinfo name for tensorflow::HistogramProto
 V typeinfo name for tensorflow::Int64List
 V typeinfo name for tensorflow::IntraProcessRendezvous
 V typeinfo name for tensorflow::IteratorStateMetadata
 V typeinfo name for tensorflow::JobDef
 V typeinfo name for tensorflow::JobDef::JobDef_TasksEntry
 V typeinfo name for tensorflow::KernelDef
 V typeinfo name for tensorflow::KernelDef_AttrConstraint
 V typeinfo name for tensorflow::LocalDevice
 V typeinfo name for tensorflow::LocalPosixFileSystem
 V typeinfo name for tensorflow::LocalRendezvousImpl
 V typeinfo name for tensorflow::LogMessage
 V typeinfo name for tensorflow::MachineConfiguration
 V typeinfo name for tensorflow::MemmappedEnv
 V typeinfo name for tensorflow::MemmappedFileSystem
 V typeinfo name for tensorflow::MemmappedFileSystemDirectory
 V typeinfo name for tensorflow::MemmappedFileSystemDirectoryElement
 V typeinfo name for tensorflow::MemoryInfo
 V typeinfo name for tensorflow::MemoryLogRawAllocation
 V typeinfo name for tensorflow::MemoryLogRawDeallocation
 V typeinfo name for tensorflow::MemoryLogStep
 V typeinfo name for tensorflow::MemoryLogTensorAllocation
 V typeinfo name for tensorflow::MemoryLogTensorDeallocation
 V typeinfo name for tensorflow::MemoryLogTensorOutput
 V typeinfo name for tensorflow::MemoryStats
 V typeinfo name for tensorflow::MetaGraphDef
 V typeinfo name for tensorflow::MetaGraphDef::MetaGraphDef_CollectionDefEntry
 V typeinfo name for tensorflow::MetaGraphDef::MetaGraphDef_SignatureDefEntry
 V typeinfo name for tensorflow::MetaGraphDef_MetaInfoDef
 V typeinfo name for tensorflow::NameAttrList
 V typeinfo name for tensorflow::NameAttrList::NameAttrList_AttrEntry
 V typeinfo name for tensorflow::NamedDevice
 V typeinfo name for tensorflow::NamedTensorProto
 V typeinfo name for tensorflow::NodeDef
 V typeinfo name for tensorflow::NodeDef::NodeDef_AttrEntry
 V typeinfo name for tensorflow::NodeExecStats
 V typeinfo name for tensorflow::NodeOutput
 V typeinfo name for tensorflow::NoopRounder
 V typeinfo name for tensorflow::NullFileSystem
 V typeinfo name for tensorflow::OpDef
 V typeinfo name for tensorflow::OpDef_ArgDef
 V typeinfo name for tensorflow::OpDef_AttrDef
 V typeinfo name for tensorflow::OpDeprecation
 V typeinfo name for tensorflow::OpKernel
 V typeinfo name for tensorflow::OpList
 V typeinfo name for tensorflow::OpListOpRegistry
 V typeinfo name for tensorflow::OpRegistry
 V typeinfo name for tensorflow::OpRegistryInterface
 V typeinfo name for tensorflow::OptimizerOptions
 V typeinfo name for tensorflow::PlatformInfo
 V typeinfo name for tensorflow::PoolAllocator
 V typeinfo name for tensorflow::PosixFileSystem
 V typeinfo name for tensorflow::PosixRandomAccessFile
 V typeinfo name for tensorflow::PosixReadOnlyMemoryRegion
 V typeinfo name for tensorflow::PosixWritableFile
 V typeinfo name for tensorflow::ProcessState
 V typeinfo name for tensorflow::QueueRunnerDef
 V typeinfo name for tensorflow::RPCOptions
 V typeinfo name for tensorflow::RandomAccessFile
 V typeinfo name for tensorflow::ReadOnlyMemoryRegion
 V typeinfo name for tensorflow::ReaderBaseState
 V typeinfo name for tensorflow::ReffedStatusCallback
 V typeinfo name for tensorflow::RemoteFusedGraphExecuteInfo
 V typeinfo name for tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto
 V typeinfo name for tensorflow::RenamedDevice
 V typeinfo name for tensorflow::Rendezvous
 V typeinfo name for tensorflow::ResourceBase
 V typeinfo name for tensorflow::ResourceHandleProto
 V typeinfo name for tensorflow::RewriterConfig
 V typeinfo name for tensorflow::RoundUpInterface
 V typeinfo name for tensorflow::RunConfiguration
 V typeinfo name for tensorflow::RunMetadata
 V typeinfo name for tensorflow::RunOptions
 V typeinfo name for tensorflow::SaveSliceInfoDef
 V typeinfo name for tensorflow::SavedModel
 V typeinfo name for tensorflow::SavedSlice
 V typeinfo name for tensorflow::SavedSliceMeta
 V typeinfo name for tensorflow::SavedTensorSliceMeta
 V typeinfo name for tensorflow::SavedTensorSlices
 V typeinfo name for tensorflow::SaverDef
 V typeinfo name for tensorflow::SequenceExample
 V typeinfo name for tensorflow::ServerDef
 V typeinfo name for tensorflow::Session
 V typeinfo name for tensorflow::SessionLog
 V typeinfo name for tensorflow::SignatureDef
 V typeinfo name for tensorflow::SignatureDef::SignatureDef_InputsEntry
 V typeinfo name for tensorflow::SignatureDef::SignatureDef_OutputsEntry
 V typeinfo name for tensorflow::StatsPublisherInterface
 V typeinfo name for tensorflow::Status (*)(bool const&, tensorflow::TensorShape*)
 V typeinfo name for tensorflow::Status (*)(double const&, tensorflow::TensorShape*)
 V typeinfo name for tensorflow::Status (*)(float const&, tensorflow::TensorShape*)
 V typeinfo name for tensorflow::Status (*)(int const&, tensorflow::TensorShape*)
 V typeinfo name for tensorflow::Status (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::checkpoint::TensorSliceReader::Table**)
 V typeinfo name for tensorflow::Status (*)(tensorflow::OpKernelContext*, bool const&, bool const&, bool*)
 V typeinfo name for tensorflow::Status (*)(tensorflow::OpKernelContext*, bool const&, bool*)
 V typeinfo name for tensorflow::Status (*)(tensorflow::OpKernelContext*, double const&, double const&, double*)
 V typeinfo name for tensorflow::Status (*)(tensorflow::OpKernelContext*, double const&, double*)
 V typeinfo name for tensorflow::Status (*)(tensorflow::OpKernelContext*, float const&, float const&, float*)
 V typeinfo name for tensorflow::Status (*)(tensorflow::OpKernelContext*, float const&, float*)
 V typeinfo name for tensorflow::Status (*)(tensorflow::OpKernelContext*, int const&, int const&, int*)
 V typeinfo name for tensorflow::Status (*)(tensorflow::OpKernelContext*, int const&, int*)
 V typeinfo name for tensorflow::Status (*)(tensorflow::shape_inference::InferenceContext*)
 V typeinfo name for tensorflow::Status (*)(void**)
 V typeinfo name for tensorflow::Status (bool const&, tensorflow::TensorShape*)
 V typeinfo name for tensorflow::Status (double const&, tensorflow::TensorShape*)
 V typeinfo name for tensorflow::Status (float const&, tensorflow::TensorShape*)
 V typeinfo name for tensorflow::Status (int const&, tensorflow::TensorShape*)
 V typeinfo name for tensorflow::Status (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::checkpoint::TensorSliceReader::Table**)
 V typeinfo name for tensorflow::Status (tensorflow::OpKernelContext*, bool const&, bool const&, bool*)
 V typeinfo name for tensorflow::Status (tensorflow::OpKernelContext*, bool const&, bool*)
 V typeinfo name for tensorflow::Status (tensorflow::OpKernelContext*, double const&, double const&, double*)
 V typeinfo name for tensorflow::Status (tensorflow::OpKernelContext*, double const&, double*)
 V typeinfo name for tensorflow::Status (tensorflow::OpKernelContext*, float const&, float const&, float*)
 V typeinfo name for tensorflow::Status (tensorflow::OpKernelContext*, float const&, float*)
 V typeinfo name for tensorflow::Status (tensorflow::OpKernelContext*, int const&, int const&, int*)
 V typeinfo name for tensorflow::Status (tensorflow::OpKernelContext*, int const&, int*)
 V typeinfo name for tensorflow::Status (tensorflow::shape_inference::InferenceContext*)
 V typeinfo name for tensorflow::Status (void**)
 V typeinfo name for tensorflow::StepStats
 V typeinfo name for tensorflow::SubAllocator
 V typeinfo name for tensorflow::SubBuffer<Eigen::QInt16>
 V typeinfo name for tensorflow::SubBuffer<Eigen::QInt32>
 V typeinfo name for tensorflow::SubBuffer<Eigen::QInt8>
 V typeinfo name for tensorflow::SubBuffer<Eigen::QUInt16>
 V typeinfo name for tensorflow::SubBuffer<Eigen::QUInt8>
 V typeinfo name for tensorflow::SubBuffer<Eigen::half>
 V typeinfo name for tensorflow::SubBuffer<bool>
 V typeinfo name for tensorflow::SubBuffer<double>
 V typeinfo name for tensorflow::SubBuffer<float>
 V typeinfo name for tensorflow::SubBuffer<int>
 V typeinfo name for tensorflow::SubBuffer<long long>
 V typeinfo name for tensorflow::SubBuffer<short>
 V typeinfo name for tensorflow::SubBuffer<signed char>
 V typeinfo name for tensorflow::SubBuffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >
 V typeinfo name for tensorflow::SubBuffer<std::complex<double> >
 V typeinfo name for tensorflow::SubBuffer<std::complex<float> >
 V typeinfo name for tensorflow::SubBuffer<tensorflow::ResourceHandle>
 V typeinfo name for tensorflow::SubBuffer<tensorflow::Variant>
 V typeinfo name for tensorflow::SubBuffer<tensorflow::bfloat16>
 V typeinfo name for tensorflow::SubBuffer<unsigned char>
 V typeinfo name for tensorflow::SubBuffer<unsigned int>
 V typeinfo name for tensorflow::SubBuffer<unsigned long long>
 V typeinfo name for tensorflow::SubBuffer<unsigned short>
 V typeinfo name for tensorflow::SubProcess
 V typeinfo name for tensorflow::Summary
 V typeinfo name for tensorflow::SummaryDescription
 V typeinfo name for tensorflow::SummaryMetadata
 V typeinfo name for tensorflow::SummaryMetadata_PluginData
 V typeinfo name for tensorflow::Summary_Audio
 V typeinfo name for tensorflow::Summary_Image
 V typeinfo name for tensorflow::Summary_Value
 V typeinfo name for tensorflow::TaggedRunMetadata
 V typeinfo name for tensorflow::Tensor
 V typeinfo name for tensorflow::TensorBuffer
 V typeinfo name for tensorflow::TensorDescription
 V typeinfo name for tensorflow::TensorInfo
 V typeinfo name for tensorflow::TensorInfo_CooSparse
 V typeinfo name for tensorflow::TensorProto
 V typeinfo name for tensorflow::TensorShapeProto
 V typeinfo name for tensorflow::TensorShapeProto_Dim
 V typeinfo name for tensorflow::TensorSliceProto
 V typeinfo name for tensorflow::TensorSliceProto_Extent
 V typeinfo name for tensorflow::TestResults
 V typeinfo name for tensorflow::Thread
 V typeinfo name for tensorflow::ThreadPoolDevice
 V typeinfo name for tensorflow::ThreadPoolDeviceFactory
 V typeinfo name for tensorflow::ThreadPoolOptionProto
 V typeinfo name for tensorflow::TrackingAllocator
 V typeinfo name for tensorflow::TrackingVisitableAllocator
 V typeinfo name for tensorflow::ValuesDef
 V typeinfo name for tensorflow::ValuesDef::ValuesDef_ExternalValuesEntry
 V typeinfo name for tensorflow::VarLenFeatureProto
 V typeinfo name for tensorflow::VariableDef
 V typeinfo name for tensorflow::Variant::Value<bool>
 V typeinfo name for tensorflow::Variant::Value<double>
 V typeinfo name for tensorflow::Variant::Value<float>
 V typeinfo name for tensorflow::Variant::Value<int>
 V typeinfo name for tensorflow::Variant::Value<tensorflow::Tensor>
 V typeinfo name for tensorflow::Variant::Value<tensorflow::VariantTensorDataProto>
 V typeinfo name for tensorflow::Variant::ValueInterface
 V typeinfo name for tensorflow::VariantTensorDataProto
 V typeinfo name for tensorflow::VersionDef
 V typeinfo name for tensorflow::VisitableAllocator
 V typeinfo name for tensorflow::WhileContextDef
 V typeinfo name for tensorflow::WritableFile
 V typeinfo name for tensorflow::checkpoint::TensorSliceReader
 V typeinfo name for tensorflow::checkpoint::TensorSliceReader::Table
 V typeinfo name for tensorflow::checkpoint::TensorSliceSet
 V typeinfo name for tensorflow::checkpoint::TensorSliceWriter
 V typeinfo name for tensorflow::checkpoint::TensorSliceWriter::Builder
 V typeinfo name for tensorflow::core::RefCounted
 V typeinfo name for tensorflow::internal::LogMessage
 V typeinfo name for tensorflow::internal::LogMessageFatal
 V typeinfo name for tensorflow::io::BufferedInputStream
 V typeinfo name for tensorflow::io::InputStreamInterface
 V typeinfo name for tensorflow::io::RandomAccessInputStream
 V typeinfo name for tensorflow::io::RecordReader
 V typeinfo name for tensorflow::io::SequentialRecordReader
 V typeinfo name for tensorflow::io::SnappyInputBuffer
 V typeinfo name for tensorflow::io::ZlibInputStream
 V typeinfo name for tensorflow::io::ZlibOutputBuffer
 V typeinfo name for tensorflow::lookup::InitializableLookupTable
 V typeinfo name for tensorflow::lookup::InitializableLookupTable::InitTableIterator
 V typeinfo name for tensorflow::lookup::LookupInterface
 V typeinfo name for tensorflow::monitoring::Buckets
 V typeinfo name for tensorflow::monitoring::Counter<0>::Counter(tensorflow::monitoring::MetricDef<(tensorflow::monitoring::MetricKind)1, long long, 0> const&)::{lambda(tensorflow::monitoring::MetricCollectorGetter)#1}
 V typeinfo name for tensorflow::port::Tracing::Engine
 V typeinfo name for tensorflow::port::Tracing::Engine::Annotation
 V typeinfo name for tensorflow::port::Tracing::Engine::Tracer
 V typeinfo name for tensorflow::profile_utils::CpuUtils::DefaultCpuUtilsHelper
 V typeinfo name for tensorflow::profile_utils::ICpuUtilsHelper
 V typeinfo name for tensorflow::register_file_system::Register<tensorflow::LocalPosixFileSystem>::Register(tensorflow::Env*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda()#1}
 V typeinfo name for tensorflow::register_file_system::Register<tensorflow::PosixFileSystem>::Register(tensorflow::Env*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda()#1}
 V typeinfo name for tensorflow::table::Block::Iter
 V typeinfo name for tensorflow::table::Iterator
 V typeinfo name for tensorflow::thread::EigenEnvironment::CreateThread(std::function<void ()>)::{lambda()#1}
 V typeinfo name for tensorflow::thread::ThreadPool::Impl
 V typeinfo name for tensorflow::thread::ThreadPool::Impl::ParallelFor(long long, long long, std::function<void (long long, long long)>)::{lambda(long, long)#1}
 V typeinfo name for tensorflow::variant_op_registry_fn_registration::UnaryVariantBinaryOpRegistration<bool>::UnaryVariantBinaryOpRegistration(tensorflow::VariantBinaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, bool const&, bool const&, bool*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)#1}
 V typeinfo name for tensorflow::variant_op_registry_fn_registration::UnaryVariantBinaryOpRegistration<double>::UnaryVariantBinaryOpRegistration(tensorflow::VariantBinaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, double const&, double const&, double*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)#1}
 V typeinfo name for tensorflow::variant_op_registry_fn_registration::UnaryVariantBinaryOpRegistration<float>::UnaryVariantBinaryOpRegistration(tensorflow::VariantBinaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, float const&, float const&, float*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)#1}
 V typeinfo name for tensorflow::variant_op_registry_fn_registration::UnaryVariantBinaryOpRegistration<int>::UnaryVariantBinaryOpRegistration(tensorflow::VariantBinaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, int const&, int const&, int*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)#1}
 V typeinfo name for tensorflow::variant_op_registry_fn_registration::UnaryVariantDecodeRegistration<bool>::UnaryVariantDecodeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(tensorflow::Variant*)#1}
 V typeinfo name for tensorflow::variant_op_registry_fn_registration::UnaryVariantDecodeRegistration<double>::UnaryVariantDecodeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(tensorflow::Variant*)#1}
 V typeinfo name for tensorflow::variant_op_registry_fn_registration::UnaryVariantDecodeRegistration<float>::UnaryVariantDecodeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(tensorflow::Variant*)#1}
 V typeinfo name for tensorflow::variant_op_registry_fn_registration::UnaryVariantDecodeRegistration<int>::UnaryVariantDecodeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(tensorflow::Variant*)#1}
 V typeinfo name for tensorflow::variant_op_registry_fn_registration::UnaryVariantDecodeRegistration<tensorflow::Tensor>::UnaryVariantDecodeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(tensorflow::Variant*)#1}
 V typeinfo name for tensorflow::variant_op_registry_fn_registration::UnaryVariantShapeRegistration<bool>::UnaryVariantShapeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (bool const&, tensorflow::TensorShape*)> const&)::{lambda(tensorflow::Variant const&, tensorflow::TensorShape*)#1}
 V typeinfo name for tensorflow::variant_op_registry_fn_registration::UnaryVariantShapeRegistration<double>::UnaryVariantShapeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (double const&, tensorflow::TensorShape*)> const&)::{lambda(tensorflow::Variant const&, tensorflow::TensorShape*)#1}
 V typeinfo name for tensorflow::variant_op_registry_fn_registration::UnaryVariantShapeRegistration<float>::UnaryVariantShapeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (float const&, tensorflow::TensorShape*)> const&)::{lambda(tensorflow::Variant const&, tensorflow::TensorShape*)#1}
 V typeinfo name for tensorflow::variant_op_registry_fn_registration::UnaryVariantShapeRegistration<int>::UnaryVariantShapeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (int const&, tensorflow::TensorShape*)> const&)::{lambda(tensorflow::Variant const&, tensorflow::TensorShape*)#1}
 V typeinfo name for tensorflow::variant_op_registry_fn_registration::UnaryVariantUnaryOpRegistration<bool>::UnaryVariantUnaryOpRegistration(tensorflow::VariantUnaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, bool const&, bool*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*)#1}
 V typeinfo name for tensorflow::variant_op_registry_fn_registration::UnaryVariantUnaryOpRegistration<double>::UnaryVariantUnaryOpRegistration(tensorflow::VariantUnaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, double const&, double*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*)#1}
 V typeinfo name for tensorflow::variant_op_registry_fn_registration::UnaryVariantUnaryOpRegistration<float>::UnaryVariantUnaryOpRegistration(tensorflow::VariantUnaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, float const&, float*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*)#1}
 V typeinfo name for tensorflow::variant_op_registry_fn_registration::UnaryVariantUnaryOpRegistration<int>::UnaryVariantUnaryOpRegistration(tensorflow::VariantUnaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, int const&, int*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*)#1}
 V void absl::base_internal::CallOnceImpl<void (&)()>(std::atomic<unsigned int>*, absl::base_internal::SchedulingMode, void (&)())::trans
 V void absl::base_internal::CallOnceImpl<void (&)(void (*)(void*)), void (*&)(void*)>(std::atomic<unsigned int>*, absl::base_internal::SchedulingMode, void (&)(void (*)(void*)), void (*&)(void*))::trans
 V vtable for Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>
 V vtable for perftools::gputools::CudaCubinInMemory
 V vtable for perftools::gputools::CudaCubinOnDisk
 V vtable for perftools::gputools::CudaPtxInMemory
 V vtable for perftools::gputools::CudaPtxOnDisk
 V vtable for perftools::gputools::KernelLoaderSpec
 V vtable for perftools::gputools::OnDiskKernelLoaderSpec
 V vtable for perftools::gputools::OneTimeScratchAllocator
 V vtable for perftools::gputools::OpenCLBinaryOnDisk
 V vtable for perftools::gputools::OpenCLTextInMemory
 V vtable for perftools::gputools::OpenCLTextOnDisk
 V vtable for perftools::gputools::Platform
 V vtable for perftools::gputools::ScratchAllocator
 V vtable for perftools::gputools::dnn::DnnSupport
 V vtable for perftools::gputools::host::HostExecutor
 V vtable for perftools::gputools::host::HostPlatform
 V vtable for perftools::gputools::host::HostStream
 V vtable for perftools::gputools::host::HostTimer
 V vtable for re2::CaptureNamesWalker
 V vtable for re2::CoalesceWalker
 V vtable for re2::Compiler
 V vtable for re2::EmptyStringWalker
 V vtable for re2::NamedCapturesWalker
 V vtable for re2::NumCapturesWalker
 V vtable for re2::PCREWalker
 V vtable for re2::Prefilter::Info::Walker
 V vtable for re2::Regexp::Walker<bool>
 V vtable for re2::Regexp::Walker<int>
 V vtable for re2::Regexp::Walker<re2::Frag>
 V vtable for re2::Regexp::Walker<re2::Prefilter::Info*>
 V vtable for re2::Regexp::Walker<re2::Regexp*>
 V vtable for re2::RepetitionWalker
 V vtable for re2::SimplifyWalker
 V vtable for re2::ToStringWalker
 V vtable for snappy::ByteArraySource
 V vtable for snappy::Sink
 V vtable for snappy::Source
 V vtable for snappy::UncheckedByteArraySink
 V vtable for std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<std::function<void ()> ()> >, std::allocator<std::thread::_Impl<std::_Bind_simple<std::function<void ()> ()> > >, (__gnu_cxx::_Lock_policy)2>
 V vtable for std::_Sp_counted_ptr_inplace<tensorflow::NodeProperties, std::allocator<tensorflow::NodeProperties>, (__gnu_cxx::_Lock_policy)2>
 V vtable for std::_Sp_counted_ptr_inplace<tensorflow::Notification, std::allocator<tensorflow::Notification>, (__gnu_cxx::_Lock_policy)2>
 V vtable for std::thread::_Impl<std::_Bind_simple<std::function<void ()> ()> >
 V vtable for std::thread::_Impl_base
 V vtable for tensorflow::AllocationDescription
 V vtable for tensorflow::AllocationRecord
 V vtable for tensorflow::Allocator
 V vtable for tensorflow::AllocatorMemoryUsed
 V vtable for tensorflow::AllocatorWrapper
 V vtable for tensorflow::ApiDef
 V vtable for tensorflow::ApiDef_Arg
 V vtable for tensorflow::ApiDef_Attr
 V vtable for tensorflow::ApiDef_Endpoint
 V vtable for tensorflow::ApiDefs
 V vtable for tensorflow::AssetFileDef
 V vtable for tensorflow::AsyncOpKernel
 V vtable for tensorflow::AttrValue
 V vtable for tensorflow::AttrValue_ListValue
 V vtable for tensorflow::AutoParallelOptions
 V vtable for tensorflow::AvailableDeviceInfo
 V vtable for tensorflow::BFCAllocator
 V vtable for tensorflow::BasicCPUAllocator
 V vtable for tensorflow::BenchmarkEntries
 V vtable for tensorflow::BenchmarkEntry
 V vtable for tensorflow::BenchmarkEntry::BenchmarkEntry_ExtrasEntry
 V vtable for tensorflow::BuildConfiguration
 V vtable for tensorflow::BundleEntryProto
 V vtable for tensorflow::BundleHeaderProto
 V vtable for tensorflow::BytesList
 V vtable for tensorflow::CPUAllocator
 V vtable for tensorflow::CPUInfo
 V vtable for tensorflow::CPUInfo::CPUInfo_CacheSizeEntry
 V vtable for tensorflow::CUDAHostAllocator
 V vtable for tensorflow::CallOp
 V vtable for tensorflow::ClusterDef
 V vtable for tensorflow::CollectionDef
 V vtable for tensorflow::CollectionDef_AnyList
 V vtable for tensorflow::CollectionDef_BytesList
 V vtable for tensorflow::CollectionDef_FloatList
 V vtable for tensorflow::CollectionDef_Int64List
 V vtable for tensorflow::CollectionDef_NodeList
 V vtable for tensorflow::CommitId
 V vtable for tensorflow::CondContextDef
 V vtable for tensorflow::ConfigProto
 V vtable for tensorflow::ConfigProto::ConfigProto_DeviceCountEntry
 V vtable for tensorflow::CostGraphDef
 V vtable for tensorflow::CostGraphDef_Node
 V vtable for tensorflow::CostGraphDef_Node_InputInfo
 V vtable for tensorflow::CostGraphDef_Node_OutputInfo
 V vtable for tensorflow::DebugOptions
 V vtable for tensorflow::DebugTensorWatch
 V vtable for tensorflow::DebuggedSourceFile
 V vtable for tensorflow::DebuggedSourceFiles
 V vtable for tensorflow::Device
 V vtable for tensorflow::DeviceAttributes
 V vtable for tensorflow::DeviceBase
 V vtable for tensorflow::DeviceLocality
 V vtable for tensorflow::DeviceProperties
 V vtable for tensorflow::DeviceProperties::DeviceProperties_EnvironmentEntry
 V vtable for tensorflow::DeviceStepStats
 V vtable for tensorflow::EigenThreadPoolWrapper
 V vtable for tensorflow::EntryValue
 V vtable for tensorflow::Env
 V vtable for tensorflow::EnvTime
 V vtable for tensorflow::EnvWrapper
 V vtable for tensorflow::Event
 V vtable for tensorflow::Example
 V vtable for tensorflow::ExampleParserConfiguration
 V vtable for tensorflow::ExampleParserConfiguration::ExampleParserConfiguration_FeatureMapEntry
 V vtable for tensorflow::Feature
 V vtable for tensorflow::FeatureConfiguration
 V vtable for tensorflow::FeatureList
 V vtable for tensorflow::FeatureLists
 V vtable for tensorflow::FeatureLists::FeatureLists_FeatureListEntry
 V vtable for tensorflow::Features
 V vtable for tensorflow::Features::Features_FeatureEntry
 V vtable for tensorflow::FileSystem
 V vtable for tensorflow::FileSystemRegistry
 V vtable for tensorflow::FileSystemRegistryImpl
 V vtable for tensorflow::FixedLenFeatureProto
 V vtable for tensorflow::FloatList
 V vtable for tensorflow::FunctionCallFrame
 V vtable for tensorflow::FunctionDef
 V vtable for tensorflow::FunctionDef::FunctionDef_AttrEntry
 V vtable for tensorflow::FunctionDef::FunctionDef_RetEntry
 V vtable for tensorflow::FunctionDefLibrary
 V vtable for tensorflow::FunctionLibraryDefinition
 V vtable for tensorflow::FunctionLibraryRuntimeImpl
 V vtable for tensorflow::FunctionLibraryRuntimeImpl::Item
 V vtable for tensorflow::GPUBFCAllocator
 V vtable for tensorflow::GPUDebugAllocator
 V vtable for tensorflow::GPUDeviceContext
 V vtable for tensorflow::GPUInfo
 V vtable for tensorflow::GPUMemAllocator
 V vtable for tensorflow::GPUNanResetAllocator
 V vtable for tensorflow::GPUOptions
 V vtable for tensorflow::GPUcudaMallocAllocator
 V vtable for tensorflow::GpuManagedAllocator
 V vtable for tensorflow::GradientDef
 V vtable for tensorflow::GraphDef
 V vtable for tensorflow::GraphOptions
 V vtable for tensorflow::GraphTransferInfo
 V vtable for tensorflow::GraphTransferInfo_ConstNodeInfo
 V vtable for tensorflow::GraphTransferInfo_GraphInputNodeInfo
 V vtable for tensorflow::GraphTransferInfo_GraphOutputNodeInfo
 V vtable for tensorflow::GraphTransferInfo_NodeInfo
 V vtable for tensorflow::GraphTransferInfo_NodeInput
 V vtable for tensorflow::GraphTransferInfo_NodeInputInfo
 V vtable for tensorflow::GraphTransferInfo_NodeOutputInfo
 V vtable for tensorflow::HistogramProto
 V vtable for tensorflow::Int64List
 V vtable for tensorflow::IntraProcessRendezvous
 V vtable for tensorflow::IteratorStateMetadata
 V vtable for tensorflow::JobDef
 V vtable for tensorflow::JobDef::JobDef_TasksEntry
 V vtable for tensorflow::KernelDef
 V vtable for tensorflow::KernelDef_AttrConstraint
 V vtable for tensorflow::LocalDevice
 V vtable for tensorflow::LocalPosixFileSystem
 V vtable for tensorflow::LocalRendezvousImpl
 V vtable for tensorflow::LogMessage
 V vtable for tensorflow::MachineConfiguration
 V vtable for tensorflow::MemmappedEnv
 V vtable for tensorflow::MemmappedFileSystem
 V vtable for tensorflow::MemmappedFileSystemDirectory
 V vtable for tensorflow::MemmappedFileSystemDirectoryElement
 V vtable for tensorflow::MemoryInfo
 V vtable for tensorflow::MemoryLogRawAllocation
 V vtable for tensorflow::MemoryLogRawDeallocation
 V vtable for tensorflow::MemoryLogStep
 V vtable for tensorflow::MemoryLogTensorAllocation
 V vtable for tensorflow::MemoryLogTensorDeallocation
 V vtable for tensorflow::MemoryLogTensorOutput
 V vtable for tensorflow::MemoryStats
 V vtable for tensorflow::MetaGraphDef
 V vtable for tensorflow::MetaGraphDef::MetaGraphDef_CollectionDefEntry
 V vtable for tensorflow::MetaGraphDef::MetaGraphDef_SignatureDefEntry
 V vtable for tensorflow::MetaGraphDef_MetaInfoDef
 V vtable for tensorflow::NameAttrList
 V vtable for tensorflow::NameAttrList::NameAttrList_AttrEntry
 V vtable for tensorflow::NamedDevice
 V vtable for tensorflow::NamedTensorProto
 V vtable for tensorflow::NodeDef
 V vtable for tensorflow::NodeDef::NodeDef_AttrEntry
 V vtable for tensorflow::NodeExecStats
 V vtable for tensorflow::NodeOutput
 V vtable for tensorflow::NoopRounder
 V vtable for tensorflow::NullFileSystem
 V vtable for tensorflow::OpDef
 V vtable for tensorflow::OpDef_ArgDef
 V vtable for tensorflow::OpDef_AttrDef
 V vtable for tensorflow::OpDeprecation
 V vtable for tensorflow::OpKernel
 V vtable for tensorflow::OpList
 V vtable for tensorflow::OpListOpRegistry
 V vtable for tensorflow::OpRegistry
 V vtable for tensorflow::OpRegistryInterface
 V vtable for tensorflow::OptimizerOptions
 V vtable for tensorflow::PlatformInfo
 V vtable for tensorflow::PoolAllocator
 V vtable for tensorflow::PosixFileSystem
 V vtable for tensorflow::PosixRandomAccessFile
 V vtable for tensorflow::PosixReadOnlyMemoryRegion
 V vtable for tensorflow::PosixWritableFile
 V vtable for tensorflow::ProcessState
 V vtable for tensorflow::QueueRunnerDef
 V vtable for tensorflow::RPCOptions
 V vtable for tensorflow::RandomAccessFile
 V vtable for tensorflow::ReaderBaseState
 V vtable for tensorflow::ReffedStatusCallback
 V vtable for tensorflow::RemoteFusedGraphExecuteInfo
 V vtable for tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto
 V vtable for tensorflow::RenamedDevice
 V vtable for tensorflow::Rendezvous
 V vtable for tensorflow::ResourceHandleProto
 V vtable for tensorflow::RewriterConfig
 V vtable for tensorflow::RunConfiguration
 V vtable for tensorflow::RunMetadata
 V vtable for tensorflow::RunOptions
 V vtable for tensorflow::SaveSliceInfoDef
 V vtable for tensorflow::SavedModel
 V vtable for tensorflow::SavedSlice
 V vtable for tensorflow::SavedSliceMeta
 V vtable for tensorflow::SavedTensorSliceMeta
 V vtable for tensorflow::SavedTensorSlices
 V vtable for tensorflow::SaverDef
 V vtable for tensorflow::SequenceExample
 V vtable for tensorflow::ServerDef
 V vtable for tensorflow::Session
 V vtable for tensorflow::SessionLog
 V vtable for tensorflow::SignatureDef
 V vtable for tensorflow::SignatureDef::SignatureDef_InputsEntry
 V vtable for tensorflow::SignatureDef::SignatureDef_OutputsEntry
 V vtable for tensorflow::StepStats
 V vtable for tensorflow::SubBuffer<Eigen::QInt16>
 V vtable for tensorflow::SubBuffer<Eigen::QInt32>
 V vtable for tensorflow::SubBuffer<Eigen::QInt8>
 V vtable for tensorflow::SubBuffer<Eigen::QUInt16>
 V vtable for tensorflow::SubBuffer<Eigen::QUInt8>
 V vtable for tensorflow::SubBuffer<Eigen::half>
 V vtable for tensorflow::SubBuffer<bool>
 V vtable for tensorflow::SubBuffer<double>
 V vtable for tensorflow::SubBuffer<float>
 V vtable for tensorflow::SubBuffer<int>
 V vtable for tensorflow::SubBuffer<long long>
 V vtable for tensorflow::SubBuffer<short>
 V vtable for tensorflow::SubBuffer<signed char>
 V vtable for tensorflow::SubBuffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >
 V vtable for tensorflow::SubBuffer<std::complex<double> >
 V vtable for tensorflow::SubBuffer<std::complex<float> >
 V vtable for tensorflow::SubBuffer<tensorflow::ResourceHandle>
 V vtable for tensorflow::SubBuffer<tensorflow::Variant>
 V vtable for tensorflow::SubBuffer<tensorflow::bfloat16>
 V vtable for tensorflow::SubBuffer<unsigned char>
 V vtable for tensorflow::SubBuffer<unsigned int>
 V vtable for tensorflow::SubBuffer<unsigned long long>
 V vtable for tensorflow::SubBuffer<unsigned short>
 V vtable for tensorflow::SubProcess
 V vtable for tensorflow::Summary
 V vtable for tensorflow::SummaryDescription
 V vtable for tensorflow::SummaryMetadata
 V vtable for tensorflow::SummaryMetadata_PluginData
 V vtable for tensorflow::Summary_Audio
 V vtable for tensorflow::Summary_Image
 V vtable for tensorflow::Summary_Value
 V vtable for tensorflow::TaggedRunMetadata
 V vtable for tensorflow::TensorDescription
 V vtable for tensorflow::TensorInfo
 V vtable for tensorflow::TensorInfo_CooSparse
 V vtable for tensorflow::TensorProto
 V vtable for tensorflow::TensorShapeProto
 V vtable for tensorflow::TensorShapeProto_Dim
 V vtable for tensorflow::TensorSliceProto
 V vtable for tensorflow::TensorSliceProto_Extent
 V vtable for tensorflow::TestResults
 V vtable for tensorflow::Thread
 V vtable for tensorflow::ThreadPoolDevice
 V vtable for tensorflow::ThreadPoolDeviceFactory
 V vtable for tensorflow::ThreadPoolOptionProto
 V vtable for tensorflow::TrackingAllocator
 V vtable for tensorflow::TrackingVisitableAllocator
 V vtable for tensorflow::ValuesDef
 V vtable for tensorflow::ValuesDef::ValuesDef_ExternalValuesEntry
 V vtable for tensorflow::VarLenFeatureProto
 V vtable for tensorflow::VariableDef
 V vtable for tensorflow::Variant::Value<bool>
 V vtable for tensorflow::Variant::Value<double>
 V vtable for tensorflow::Variant::Value<float>
 V vtable for tensorflow::Variant::Value<int>
 V vtable for tensorflow::Variant::Value<tensorflow::Tensor>
 V vtable for tensorflow::Variant::Value<tensorflow::VariantTensorDataProto>
 V vtable for tensorflow::VariantTensorDataProto
 V vtable for tensorflow::VersionDef
 V vtable for tensorflow::VisitableAllocator
 V vtable for tensorflow::WhileContextDef
 V vtable for tensorflow::WritableFile
 V vtable for tensorflow::checkpoint::TensorSliceReader
 V vtable for tensorflow::checkpoint::TensorSliceReader::Table
 V vtable for tensorflow::checkpoint::TensorSliceSet
 V vtable for tensorflow::checkpoint::TensorSliceWriter
 V vtable for tensorflow::core::RefCounted
 V vtable for tensorflow::internal::LogMessage
 V vtable for tensorflow::internal::LogMessageFatal
 V vtable for tensorflow::io::BufferedInputStream
 V vtable for tensorflow::io::InputStreamInterface
 V vtable for tensorflow::io::RandomAccessInputStream
 V vtable for tensorflow::io::RecordReader
 V vtable for tensorflow::io::SequentialRecordReader
 V vtable for tensorflow::io::SnappyInputBuffer
 V vtable for tensorflow::io::ZlibInputStream
 V vtable for tensorflow::io::ZlibOutputBuffer
 V vtable for tensorflow::lookup::InitializableLookupTable
 V vtable for tensorflow::lookup::LookupInterface
 V vtable for tensorflow::port::Tracing::Engine
 V vtable for tensorflow::port::Tracing::Engine::Annotation
 V vtable for tensorflow::port::Tracing::Engine::Tracer
 V vtable for tensorflow::profile_utils::CpuUtils::DefaultCpuUtilsHelper
 V vtable for tensorflow::table::Block::Iter
 V vtable for tensorflow::table::Iterator
 V vtable for tensorflow::thread::ThreadPool::Impl
 VTT for std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >
 VTT for std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >
 VTT for std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >
 W AbslInternalSpinLockDelay
 W AbslInternalSpinLockWake
 W Eigen::DSizes<long, 1> tensorflow::TensorShape::AsEigenDSizesWithPadding<1>() const
 W Eigen::DSizes<long, 8> tensorflow::TensorShape::AsEigenDSizesWithPadding<8>() const
 W Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::Cancel()
 W Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::CurrentThreadId() const
 W Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::NumThreads() const
 W Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::Schedule(std::function<void ()>)
 W Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::WaitForWork(Eigen::EventCount::Waiter*, tensorflow::thread::EigenEnvironment::Task*)
 W Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::WorkerLoop(int)
 W Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::~NonBlockingThreadPoolTempl()
 W Eigen::TensorEvaluator<Eigen::TensorSlicingOp<Eigen::DSizes<long, 8> const, Eigen::DSizes<long, 8> const, Eigen::TensorMap<Eigen::Tensor<Eigen::QInt8 const, 8, 1, long>, 0, Eigen::MakePointer> const> const, Eigen::DefaultDevice>::srcCoeff(long) const
 W Eigen::TensorEvaluator<Eigen::TensorSlicingOp<Eigen::DSizes<long, 8> const, Eigen::DSizes<long, 8> const, Eigen::TensorMap<Eigen::Tensor<int const, 8, 1, long>, 0, Eigen::MakePointer> const> const, Eigen::DefaultDevice>::TensorEvaluator(Eigen::TensorSlicingOp<Eigen::DSizes<long, 8> const, Eigen::DSizes<long, 8> const, Eigen::TensorMap<Eigen::Tensor<int const, 8, 1, long>, 0, Eigen::MakePointer> const> const&, Eigen::DefaultDevice const&)
 W Eigen::ThreadPoolInterface::Cancel()
 W Eigen::internal::TensorExecutor<Eigen::TensorAssignOp<Eigen::TensorSlicingOp<Eigen::DSizes<long, 8> const, Eigen::DSizes<long, 8> const, Eigen::TensorMap<Eigen::Tensor<double, 8, 1, long>, 0, Eigen::MakePointer> >, Eigen::TensorConversionOp<double, Eigen::TensorSlicingOp<Eigen::DSizes<long, 8> const, Eigen::DSizes<long, 8> const, Eigen::TensorMap<Eigen::Tensor<double const, 8, 1, long>, 0, Eigen::MakePointer> const> const> const> const, Eigen::DefaultDevice, true>::run(Eigen::TensorAssignOp<Eigen::TensorSlicingOp<Eigen::DSizes<long, 8> const, Eigen::DSizes<long, 8> const, Eigen::TensorMap<Eigen::Tensor<double, 8, 1, long>, 0, Eigen::MakePointer> >, Eigen::TensorConversionOp<double, Eigen::TensorSlicingOp<Eigen::DSizes<long, 8> const, Eigen::DSizes<long, 8> const, Eigen::TensorMap<Eigen::Tensor<double const, 8, 1, long>, 0, Eigen::MakePointer> const> const> const> const&, Eigen::DefaultDevice const&)
 W Eigen::internal::TensorExecutor<Eigen::TensorAssignOp<Eigen::TensorSlicingOp<Eigen::DSizes<long, 8> const, Eigen::DSizes<long, 8> const, Eigen::TensorMap<Eigen::Tensor<float, 8, 1, long>, 0, Eigen::MakePointer> >, Eigen::TensorConversionOp<float, Eigen::TensorSlicingOp<Eigen::DSizes<long, 8> const, Eigen::DSizes<long, 8> const, Eigen::TensorMap<Eigen::Tensor<float const, 8, 1, long>, 0, Eigen::MakePointer> const> const> const> const, Eigen::DefaultDevice, true>::run(Eigen::TensorAssignOp<Eigen::TensorSlicingOp<Eigen::DSizes<long, 8> const, Eigen::DSizes<long, 8> const, Eigen::TensorMap<Eigen::Tensor<float, 8, 1, long>, 0, Eigen::MakePointer> >, Eigen::TensorConversionOp<float, Eigen::TensorSlicingOp<Eigen::DSizes<long, 8> const, Eigen::DSizes<long, 8> const, Eigen::TensorMap<Eigen::Tensor<float const, 8, 1, long>, 0, Eigen::MakePointer> const> const> const> const&, Eigen::DefaultDevice const&)
 W Eigen::internal::TensorExecutor<Eigen::TensorAssignOp<Eigen::TensorSlicingOp<Eigen::DSizes<long, 8> const, Eigen::DSizes<long, 8> const, Eigen::TensorMap<Eigen::Tensor<int, 8, 1, long>, 0, Eigen::MakePointer> >, Eigen::TensorConversionOp<int, Eigen::TensorSlicingOp<Eigen::DSizes<long, 8> const, Eigen::DSizes<long, 8> const, Eigen::TensorMap<Eigen::Tensor<int const, 8, 1, long>, 0, Eigen::MakePointer> const> const> const> const, Eigen::DefaultDevice, true>::run(Eigen::TensorAssignOp<Eigen::TensorSlicingOp<Eigen::DSizes<long, 8> const, Eigen::DSizes<long, 8> const, Eigen::TensorMap<Eigen::Tensor<int, 8, 1, long>, 0, Eigen::MakePointer> >, Eigen::TensorConversionOp<int, Eigen::TensorSlicingOp<Eigen::DSizes<long, 8> const, Eigen::DSizes<long, 8> const, Eigen::TensorMap<Eigen::Tensor<int const, 8, 1, long>, 0, Eigen::MakePointer> const> const> const> const&, Eigen::DefaultDevice const&)
 W Eigen::internal::TensorExecutor<Eigen::TensorAssignOp<Eigen::TensorSlicingOp<Eigen::DSizes<long, 8> const, Eigen::DSizes<long, 8> const, Eigen::TensorMap<Eigen::Tensor<std::complex<float>, 8, 1, long>, 0, Eigen::MakePointer> >, Eigen::TensorConversionOp<std::complex<float>, Eigen::TensorSlicingOp<Eigen::DSizes<long, 8> const, Eigen::DSizes<long, 8> const, Eigen::TensorMap<Eigen::Tensor<std::complex<float> const, 8, 1, long>, 0, Eigen::MakePointer> const> const> const> const, Eigen::DefaultDevice, true>::run(Eigen::TensorAssignOp<Eigen::TensorSlicingOp<Eigen::DSizes<long, 8> const, Eigen::DSizes<long, 8> const, Eigen::TensorMap<Eigen::Tensor<std::complex<float>, 8, 1, long>, 0, Eigen::MakePointer> >, Eigen::TensorConversionOp<std::complex<float>, Eigen::TensorSlicingOp<Eigen::DSizes<long, 8> const, Eigen::DSizes<long, 8> const, Eigen::TensorMap<Eigen::Tensor<std::complex<float> const, 8, 1, long>, 0, Eigen::MakePointer> const> const> const> const&, Eigen::DefaultDevice const&)
 W LogMessage::LogMessage(char const*, int)
 W LogMessage::~LogMessage()
 W __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::_V2::__rotate<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, std::random_access_iterator_tag)
 W __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > > std::__move_merge<int*, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, int*, int*, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter)
 W __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > std::__find_if<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_equals_val<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const> >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_equals_val<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const>, std::random_access_iterator_tag)
 W __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > std::__find_if<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_equals_val<tensorflow::StringPiece const> >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_equals_val<tensorflow::StringPiece const>, std::random_access_iterator_tag)
 W __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > std::_V2::__rotate<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::random_access_iterator_tag)
 W __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > std::__move_merge<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter)
 W __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > std::__rotate_adaptive<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, long>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, long, long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, long)
 W absl::base_internal::AtomicHook<bool (*)(absl::LogSeverity, char const*, int, char**, int*)>::DummyFunction(absl::LogSeverity, char const*, int, char**, int*)
 W absl::base_internal::AtomicHook<void (*)(char const*, int, char const*, char const*, char const*)>::DummyFunction(char const*, int, char const*, char const*, char const*)
 W absl::base_internal::AtomicHook<void (*)(void const*, long)>::DummyFunction(void const*, long)
 W bool tensorflow::DecodeVariant<int>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int*)
 W bool tensorflow::checkpoint::TensorSliceReader::CopySliceData<double>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::TensorSlice const&, double*) const
 W bool tensorflow::checkpoint::TensorSliceReader::CopySliceData<float>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::TensorSlice const&, float*) const
 W bool tensorflow::checkpoint::TensorSliceReader::CopySliceData<int>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::TensorSlice const&, int*) const
 W bool tensorflow::checkpoint::TensorSliceReader::CopySliceData<long long>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::TensorSlice const&, long long*) const
 W bool tensorflow::checkpoint::TensorSliceReader::CopySliceData<short>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::TensorSlice const&, short*) const
 W bool tensorflow::checkpoint::TensorSliceReader::CopySliceData<signed char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::TensorSlice const&, signed char*) const
 W bool tensorflow::checkpoint::TensorSliceReader::CopySliceData<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::TensorSlice const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const
 W bool tensorflow::checkpoint::TensorSliceReader::CopySliceData<unsigned char>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::TensorSlice const&, unsigned char*) const
 W bool tensorflow::gtl::InsertIfNotPresent<std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpDef_AttrDef const*, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*> > > >(std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpDef_AttrDef const*, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*> > >*, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpDef_AttrDef const*, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*> > >::value_type::first_type const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpDef_AttrDef const*, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*> > >::value_type::second_type const&)
 W bool tensorflow::gtl::InsertIfNotPresent<std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpRegistrationData const*> > > >(std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpRegistrationData const*> > >*, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpRegistrationData const*> > >::value_type::first_type const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpRegistrationData const*> > >::value_type::second_type const&)
 W bool tensorflow::strings::ProtoParseNumericFromScanner<double>(tensorflow::strings::Scanner*, double*)
 W bool tensorflow::strings::ProtoParseNumericFromScanner<float>(tensorflow::strings::Scanner*, float*)
 W bool tensorflow::strings::ProtoParseNumericFromScanner<int>(tensorflow::strings::Scanner*, int*)
 W bool tensorflow::strings::ProtoParseNumericFromScanner<long long>(tensorflow::strings::Scanner*, long long*)
 W bool tensorflow::strings::ProtoParseNumericFromScanner<unsigned int>(tensorflow::strings::Scanner*, unsigned int*)
 W bool tensorflow::strings::ProtoParseNumericFromScanner<unsigned long long>(tensorflow::strings::Scanner*, unsigned long long*)
 W char const* std::__find_if<char const*, __gnu_cxx::__ops::_Iter_equals_iter<char const*> >(char const*, char const*, __gnu_cxx::__ops::_Iter_equals_iter<char const*>, std::random_access_iterator_tag)
 W int tensorflow::GetFilterDimIndex<2>(tensorflow::FilterTensorFormat, char)
 W int tensorflow::GetTensorDim<int>(tensorflow::gtl::ArraySlice<int>, tensorflow::TensorFormat, char)
 W int tensorflow::GetTensorDimIndex<2>(tensorflow::TensorFormat, char)
 W int tensorflow::GetTensorDimIndex<3>(tensorflow::TensorFormat, char)
 W int* std::__move_merge<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int*, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int*, __gnu_cxx::__ops::_Iter_less_iter)
 W non-virtual thunk to tensorflow::TrackingVisitableAllocator::AddAllocVisitor(std::function<void (void*, unsigned long)>)
 W non-virtual thunk to tensorflow::TrackingVisitableAllocator::AddFreeVisitor(std::function<void (void*, unsigned long)>)
 W non-virtual thunk to tensorflow::TrackingVisitableAllocator::AllocateRaw(unsigned long, unsigned long)
 W non-virtual thunk to tensorflow::TrackingVisitableAllocator::DeallocateRaw(void*)
 W non-virtual thunk to tensorflow::TrackingVisitableAllocator::Name()
 W non-virtual thunk to tensorflow::TrackingVisitableAllocator::~TrackingVisitableAllocator()
 W perftools::gputools::CudaCubinInMemory::~CudaCubinInMemory()
 W perftools::gputools::CudaCubinOnDisk::CanonicalSuffix() const
 W perftools::gputools::CudaCubinOnDisk::~CudaCubinOnDisk()
 W perftools::gputools::CudaPtxInMemory::~CudaPtxInMemory()
 W perftools::gputools::CudaPtxOnDisk::CanonicalSuffix() const
 W perftools::gputools::CudaPtxOnDisk::~CudaPtxOnDisk()
 W perftools::gputools::DeviceOptions::DeviceOptions(unsigned int)
 W perftools::gputools::KernelLoaderSpec::~KernelLoaderSpec()
 W perftools::gputools::OpenCLBinaryOnDisk::CanonicalSuffix() const
 W perftools::gputools::OpenCLBinaryOnDisk::~OpenCLBinaryOnDisk()
 W perftools::gputools::OpenCLTextInMemory::~OpenCLTextInMemory()
 W perftools::gputools::OpenCLTextOnDisk::CanonicalSuffix() const
 W perftools::gputools::OpenCLTextOnDisk::~OpenCLTextOnDisk()
 W perftools::gputools::Stream& perftools::gputools::Stream::ThenConvolveBackwardBiasImpl<Eigen::half>(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>*)
 W perftools::gputools::Stream& perftools::gputools::Stream::ThenConvolveBackwardBiasImpl<double>(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<double>*)
 W perftools::gputools::Stream& perftools::gputools::Stream::ThenConvolveBackwardBiasImpl<float>(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*)
 W perftools::gputools::Stream::SetErrorAndLogNoDnnSupport()
 W perftools::gputools::ThenBlasImpl<perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*, int>::Run(perftools::gputools::Stream*, bool (perftools::gputools::blas::BlasSupport::*)(perftools::gputools::Stream*, perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*, int), bool, perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*, int)
 W perftools::gputools::ThenBlasImpl<perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*, int>::Run(perftools::gputools::Stream*, bool (perftools::gputools::blas::BlasSupport::*)(perftools::gputools::Stream*, perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*, int), bool, perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*, int)
 W perftools::gputools::ThenBlasImpl<perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int>::Run(perftools::gputools::Stream*, bool (perftools::gputools::blas::BlasSupport::*)(perftools::gputools::Stream*, perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int), bool, perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 W perftools::gputools::ThenBlasImpl<perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int>::Run(perftools::gputools::Stream*, bool (perftools::gputools::blas::BlasSupport::*)(perftools::gputools::Stream*, perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int), bool, perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 W perftools::gputools::ThenBlasImpl<perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> >*, int>::Run(perftools::gputools::Stream*, bool (perftools::gputools::blas::BlasSupport::*)(perftools::gputools::Stream*, perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> >*, int), bool, perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 W perftools::gputools::ThenBlasImpl<perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> >*, int>::Run(perftools::gputools::Stream*, bool (perftools::gputools::blas::BlasSupport::*)(perftools::gputools::Stream*, perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> >*, int), bool, perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 W perftools::gputools::ThenBlasImpl<perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*, int>::Run(perftools::gputools::Stream*, bool (perftools::gputools::blas::BlasSupport::*)(perftools::gputools::Stream*, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*, int), bool, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*, int)
 W perftools::gputools::ThenBlasImpl<perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::DeviceMemory<double>*, int>::Run(perftools::gputools::Stream*, bool (perftools::gputools::blas::BlasSupport::*)(perftools::gputools::Stream*, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::DeviceMemory<double>*, int), bool, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::DeviceMemory<double>*, int)
 W perftools::gputools::ThenBlasImpl<perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*, int>::Run(perftools::gputools::Stream*, bool (perftools::gputools::blas::BlasSupport::*)(perftools::gputools::Stream*, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*, int), bool, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*, int)
 W perftools::gputools::ThenBlasImpl<perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float>*, int>::Run(perftools::gputools::Stream*, bool (perftools::gputools::blas::BlasSupport::*)(perftools::gputools::Stream*, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float>*, int), bool, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float>*, int)
 W perftools::gputools::ThenBlasImpl<perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int>::Run(perftools::gputools::Stream*, bool (perftools::gputools::blas::BlasSupport::*)(perftools::gputools::Stream*, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int), bool, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 W perftools::gputools::ThenBlasImpl<perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, perftools::gputools::DeviceMemory<std::complex<double> >*, int>::Run(perftools::gputools::Stream*, bool (perftools::gputools::blas::BlasSupport::*)(perftools::gputools::Stream*, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, perftools::gputools::DeviceMemory<std::complex<double> >*, int), bool, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 W perftools::gputools::ThenBlasImpl<perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int>::Run(perftools::gputools::Stream*, bool (perftools::gputools::blas::BlasSupport::*)(perftools::gputools::Stream*, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int), bool, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 W perftools::gputools::ThenBlasImpl<perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, perftools::gputools::DeviceMemory<std::complex<float> >*, int>::Run(perftools::gputools::Stream*, bool (perftools::gputools::blas::BlasSupport::*)(perftools::gputools::Stream*, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, perftools::gputools::DeviceMemory<std::complex<float> >*, int), bool, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 W perftools::gputools::ThenBlasImpl<perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*, int>::Run(perftools::gputools::Stream*, bool (perftools::gputools::blas::BlasSupport::*)(perftools::gputools::Stream*, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*, int), bool, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*, int)
 W perftools::gputools::ThenBlasImpl<perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*, int>::Run(perftools::gputools::Stream*, bool (perftools::gputools::blas::BlasSupport::*)(perftools::gputools::Stream*, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*, int), bool, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*, int)
 W perftools::gputools::ThenBlasImpl<perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int>::Run(perftools::gputools::Stream*, bool (perftools::gputools::blas::BlasSupport::*)(perftools::gputools::Stream*, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int), bool, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 W perftools::gputools::ThenBlasImpl<perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int>::Run(perftools::gputools::Stream*, bool (perftools::gputools::blas::BlasSupport::*)(perftools::gputools::Stream*, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int), bool, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 W perftools::gputools::ThenBlasImpl<unsigned long long, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*>::Run(perftools::gputools::Stream*, bool (perftools::gputools::blas::BlasSupport::*)(perftools::gputools::Stream*, unsigned long long, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*), bool, unsigned long long, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*)
 W perftools::gputools::ThenBlasImpl<unsigned long long, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<int>*>::Run(perftools::gputools::Stream*, bool (perftools::gputools::blas::BlasSupport::*)(perftools::gputools::Stream*, unsigned long long, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<int>*), bool, unsigned long long, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<int>*)
 W perftools::gputools::ThenBlasImpl<unsigned long long, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*>::Run(perftools::gputools::Stream*, bool (perftools::gputools::blas::BlasSupport::*)(perftools::gputools::Stream*, unsigned long long, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*), bool, unsigned long long, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*)
 W perftools::gputools::ThenBlasImpl<unsigned long long, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<int>*>::Run(perftools::gputools::Stream*, bool (perftools::gputools::blas::BlasSupport::*)(perftools::gputools::Stream*, unsigned long long, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<int>*), bool, unsigned long long, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<int>*)
 W perftools::gputools::ThenBlasImpl<unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<double>*>::Run(perftools::gputools::Stream*, bool (perftools::gputools::blas::BlasSupport::*)(perftools::gputools::Stream*, unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<double>*), bool, unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<double>*)
 W perftools::gputools::ThenBlasImpl<unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<int>*>::Run(perftools::gputools::Stream*, bool (perftools::gputools::blas::BlasSupport::*)(perftools::gputools::Stream*, unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<int>*), bool, unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<int>*)
 W perftools::gputools::ThenBlasImpl<unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*>::Run(perftools::gputools::Stream*, bool (perftools::gputools::blas::BlasSupport::*)(perftools::gputools::Stream*, unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*), bool, unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*)
 W perftools::gputools::ThenBlasImpl<unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<float>*>::Run(perftools::gputools::Stream*, bool (perftools::gputools::blas::BlasSupport::*)(perftools::gputools::Stream*, unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<float>*), bool, unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<float>*)
 W perftools::gputools::ThenBlasImpl<unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<int>*>::Run(perftools::gputools::Stream*, bool (perftools::gputools::blas::BlasSupport::*)(perftools::gputools::Stream*, unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<int>*), bool, unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<int>*)
 W perftools::gputools::ThenBlasImpl<unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*>::Run(perftools::gputools::Stream*, bool (perftools::gputools::blas::BlasSupport::*)(perftools::gputools::Stream*, unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*), bool, unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*)
 W perftools::gputools::ThenBlasImpl<unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int>::Run(perftools::gputools::Stream*, bool (perftools::gputools::blas::BlasSupport::*)(perftools::gputools::Stream*, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int), bool, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int)
 W perftools::gputools::ThenBlasImpl<unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int>::Run(perftools::gputools::Stream*, bool (perftools::gputools::blas::BlasSupport::*)(perftools::gputools::Stream*, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int), bool, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int)
 W perftools::gputools::dnn::DnnSupport::DoActivate(perftools::gputools::Stream*, perftools::gputools::dnn::ActivationMode, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float>*, unsigned long long)
 W perftools::gputools::dnn::DnnSupport::DoBatchNormalizationBackward(perftools::gputools::Stream*, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, double, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*)
 W perftools::gputools::dnn::DnnSupport::DoBatchNormalizationBackward(perftools::gputools::Stream*, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, double, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*)
 W perftools::gputools::dnn::DnnSupport::DoBatchNormalizationForward(perftools::gputools::Stream*, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, double, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, bool, std::function<perftools::gputools::DeviceMemory<float> const& ()>, std::function<void ()>)
 W perftools::gputools::dnn::DnnSupport::DoBatchNormalizationForward(perftools::gputools::Stream*, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, double, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, bool, std::function<perftools::gputools::DeviceMemory<float> const& ()>, std::function<void ()>)
 W perftools::gputools::dnn::DnnSupport::DoConvolveBackwardBias(perftools::gputools::Stream*, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>*)
 W perftools::gputools::dnn::DnnSupport::DoConvolveBackwardBias(perftools::gputools::Stream*, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<double>*)
 W perftools::gputools::dnn::DnnSupport::DoConvolveBackwardBias(perftools::gputools::Stream*, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*)
 W perftools::gputools::dnn::DnnSupport::DoCopyDevice2HostBuffer(perftools::gputools::Stream*, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::HostBuffer*)
 W perftools::gputools::dnn::DnnSupport::DoCopyHostBuffer2Device(perftools::gputools::Stream*, perftools::gputools::HostBuffer*, perftools::gputools::DeviceMemory<float>*)
 W perftools::gputools::dnn::DnnSupport::DoDepthToSpace(perftools::gputools::Stream*, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::DepthToSpaceLayout const&, int const&, perftools::gputools::DeviceMemory<float>*)
 W perftools::gputools::dnn::DnnSupport::DoElementwiseOperateScaledQuantized(perftools::gputools::Stream*, perftools::gputools::dnn::ElementwiseOperation, tensorflow::gtl::ArraySlice<int>, int, tensorflow::gtl::ArraySlice<perftools::gputools::dnn::BatchDescriptor>, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<float> const*>, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*)
 W perftools::gputools::dnn::DnnSupport::DoFusedConvolve(perftools::gputools::Stream*, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, float, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, float, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::ActivationMode, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::ScratchAllocator*, perftools::gputools::dnn::AlgorithmConfig const&, perftools::gputools::dnn::ProfileResult*)
 W perftools::gputools::dnn::DnnSupport::DoFusedConvolve(perftools::gputools::Stream*, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<double> const&, double, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::DeviceMemory<double> const&, double, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::dnn::ActivationMode, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<double>*, perftools::gputools::ScratchAllocator*, perftools::gputools::dnn::AlgorithmConfig const&, perftools::gputools::dnn::ProfileResult*)
 W perftools::gputools::dnn::DnnSupport::DoFusedConvolve(perftools::gputools::Stream*, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, float, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::DeviceMemory<float> const&, float, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::ActivationMode, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*, perftools::gputools::ScratchAllocator*, perftools::gputools::dnn::AlgorithmConfig const&, perftools::gputools::dnn::ProfileResult*)
 W perftools::gputools::dnn::DnnSupport::DoFusedConvolve(perftools::gputools::Stream*, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<signed char> const&, float, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<signed char> const&, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::DeviceMemory<signed char> const&, float, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::ActivationMode, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<signed char>*, perftools::gputools::ScratchAllocator*, perftools::gputools::dnn::AlgorithmConfig const&, perftools::gputools::dnn::ProfileResult*)
 W perftools::gputools::dnn::DnnSupport::DoNormalizeBackwardWithDimensions(perftools::gputools::Stream*, perftools::gputools::dnn::NormalizeDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float>*)
 W perftools::gputools::dnn::DnnSupport::DoNormalizeWithDimensions(perftools::gputools::Stream*, perftools::gputools::dnn::NormalizeDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float>*)
 W perftools::gputools::dnn::DnnSupport::DoPoolBackward(perftools::gputools::Stream*, perftools::gputools::dnn::PoolingDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::DeviceMemory<Eigen::half>*)
 W perftools::gputools::dnn::DnnSupport::DoPoolBackward(perftools::gputools::Stream*, perftools::gputools::dnn::PoolingDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::DeviceMemory<double>*)
 W perftools::gputools::dnn::DnnSupport::DoPoolBackward(perftools::gputools::Stream*, perftools::gputools::dnn::PoolingDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float>*)
 W perftools::gputools::dnn::DnnSupport::DoPoolForward(perftools::gputools::Stream*, perftools::gputools::dnn::PoolingDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>*)
 W perftools::gputools::dnn::DnnSupport::DoPoolForward(perftools::gputools::Stream*, perftools::gputools::dnn::PoolingDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<double>*)
 W perftools::gputools::dnn::DnnSupport::DoReshape(perftools::gputools::Stream*, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*)
 W perftools::gputools::dnn::DnnSupport::DoRnnBackward(perftools::gputools::Stream*, perftools::gputools::dnn::RnnDescriptor const&, perftools::gputools::dnn::RnnSequenceTensorDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::RnnSequenceTensorDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::DeviceMemory<unsigned char>*, perftools::gputools::ScratchAllocator*)
 W perftools::gputools::dnn::DnnSupport::DoRnnBackward(perftools::gputools::Stream*, perftools::gputools::dnn::RnnDescriptor const&, perftools::gputools::dnn::RnnSequenceTensorDescriptor const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::dnn::RnnSequenceTensorDescriptor const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::DeviceMemory<double>*, perftools::gputools::DeviceMemory<double>*, perftools::gputools::DeviceMemory<double>*, perftools::gputools::DeviceMemory<double>*, perftools::gputools::DeviceMemory<unsigned char>*, perftools::gputools::ScratchAllocator*)
 W perftools::gputools::dnn::DnnSupport::DoRnnBackward(perftools::gputools::Stream*, perftools::gputools::dnn::RnnDescriptor const&, perftools::gputools::dnn::RnnSequenceTensorDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::RnnSequenceTensorDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<unsigned char>*, perftools::gputools::ScratchAllocator*)
 W perftools::gputools::dnn::DnnSupport::DoRnnForward(perftools::gputools::Stream*, perftools::gputools::dnn::RnnDescriptor const&, perftools::gputools::dnn::RnnSequenceTensorDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::RnnSequenceTensorDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>*, bool, perftools::gputools::ScratchAllocator*, perftools::gputools::ScratchAllocator*)
 W perftools::gputools::dnn::DnnSupport::DoRnnForward(perftools::gputools::Stream*, perftools::gputools::dnn::RnnDescriptor const&, perftools::gputools::dnn::RnnSequenceTensorDescriptor const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::dnn::RnnSequenceTensorDescriptor const&, perftools::gputools::DeviceMemory<double>*, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<double>*, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<double>*, bool, perftools::gputools::ScratchAllocator*, perftools::gputools::ScratchAllocator*)
 W perftools::gputools::dnn::DnnSupport::DoRnnForward(perftools::gputools::Stream*, perftools::gputools::dnn::RnnDescriptor const&, perftools::gputools::dnn::RnnSequenceTensorDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::RnnSequenceTensorDescriptor const&, perftools::gputools::DeviceMemory<float>*, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<float>*, perftools::gputools::dnn::RnnStateTensorDescriptor const&, perftools::gputools::DeviceMemory<float>*, bool, perftools::gputools::ScratchAllocator*, perftools::gputools::ScratchAllocator*)
 W perftools::gputools::dnn::DnnSupport::DoSpaceConcatenate(perftools::gputools::Stream*, tensorflow::gtl::ArraySlice<perftools::gputools::dnn::BatchDescriptor>, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<float> const*>, perftools::gputools::DeviceMemory<float>*, perftools::gputools::dnn::SpaceConcatenateMode)
 W perftools::gputools::dnn::DnnSupport::DoSpaceToDepth(perftools::gputools::Stream*, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::DepthToSpaceLayout const&, int const&, perftools::gputools::DeviceMemory<float>*)
 W perftools::gputools::dnn::DnnSupport::DoTransformTensor(perftools::gputools::Stream*, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::dnn::DataType, perftools::gputools::DeviceMemoryBase const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::dnn::DataType, float, perftools::gputools::DeviceMemoryBase*)
 W perftools::gputools::dnn::DnnSupport::DoXYBroadcast(perftools::gputools::Stream*, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, long long, long long, perftools::gputools::DeviceMemory<float>*)
 W perftools::gputools::dnn::DnnSupport::createRnnDescriptor(int, int, int, perftools::gputools::dnn::RnnInputMode, perftools::gputools::dnn::RnnDirectionMode, perftools::gputools::dnn::RnnMode, perftools::gputools::dnn::DataType, float, unsigned long long, perftools::gputools::ScratchAllocator*)
 W perftools::gputools::dnn::DnnSupport::createRnnSequenceTensorDescriptor(int, int, int, perftools::gputools::dnn::DataType)
 W perftools::gputools::dnn::DnnSupport::createRnnStateTensorDescriptor(int, int, int, perftools::gputools::dnn::DataType)
 W perftools::gputools::host::HostExecutor::AllocateEvent(perftools::gputools::Event*)
 W perftools::gputools::host::HostExecutor::AllocateTimer(perftools::gputools::Timer*)
 W perftools::gputools::host::HostExecutor::CanEnablePeerAccessTo(perftools::gputools::internal::StreamExecutorInterface*)
 W perftools::gputools::host::HostExecutor::CreateDnn()
 W perftools::gputools::host::HostExecutor::CreateEventImplementation()
 W perftools::gputools::host::HostExecutor::CreateKernelImplementation()
 W perftools::gputools::host::HostExecutor::CudaContextHack()
 W perftools::gputools::host::HostExecutor::DeallocateEvent(perftools::gputools::Event*)
 W perftools::gputools::host::HostExecutor::DeallocateTimer(perftools::gputools::Timer*)
 W perftools::gputools::host::HostExecutor::DeviceMemoryUsage(long long*, long long*) const
 W perftools::gputools::host::HostExecutor::EnablePeerAccessTo(perftools::gputools::internal::StreamExecutorInterface*)
 W perftools::gputools::host::HostExecutor::GetDeviceSharedMemoryConfig()
 W perftools::gputools::host::HostExecutor::GetKernel(perftools::gputools::MultiKernelLoaderSpec const&, perftools::gputools::KernelBase*)
 W perftools::gputools::host::HostExecutor::GetStreamImplementation()
 W perftools::gputools::host::HostExecutor::GetTimerImplementation()
 W perftools::gputools::host::HostExecutor::HostMemoryAllocate(unsigned long long)
 W perftools::gputools::host::HostExecutor::HostMemoryDeallocate(void*)
 W perftools::gputools::host::HostExecutor::HostMemoryRegister(void*, unsigned long long)
 W perftools::gputools::host::HostExecutor::HostMemoryUnregister(void*)
 W perftools::gputools::host::HostExecutor::Init(int, perftools::gputools::DeviceOptions)
 W perftools::gputools::host::HostExecutor::Launch(perftools::gputools::Stream*, perftools::gputools::ThreadDim const&, perftools::gputools::BlockDim const&, perftools::gputools::KernelBase const&, perftools::gputools::KernelArgsArrayBase const&)
 W perftools::gputools::host::HostExecutor::PlatformDeviceCount()
 W perftools::gputools::host::HostExecutor::PollForEventStatus(perftools::gputools::Event*)
 W perftools::gputools::host::HostExecutor::RecordEvent(perftools::gputools::Stream*, perftools::gputools::Event*)
 W perftools::gputools::host::HostExecutor::SetDeviceSharedMemoryConfig(perftools::gputools::SharedMemoryConfig)
 W perftools::gputools::host::HostExecutor::SupportsDnn() const
 W perftools::gputools::host::HostExecutor::SynchronizeAllActivity()
 W perftools::gputools::host::HostExecutor::WaitForEvent(perftools::gputools::Stream*, perftools::gputools::Event*)
 W perftools::gputools::host::HostStream::CudaStreamHack()
 W perftools::gputools::host::HostStream::CudaStreamMemberHack()
 W perftools::gputools::host::HostTimer::~HostTimer()
 W perftools::gputools::internal::EventInterface::~EventInterface()
 W perftools::gputools::internal::StreamExecutorInterface::CreateBlas()
 W perftools::gputools::internal::StreamExecutorInterface::CreateDnn()
 W perftools::gputools::internal::StreamExecutorInterface::CreateFft()
 W perftools::gputools::internal::StreamExecutorInterface::CreateRng()
 W perftools::gputools::internal::StreamExecutorInterface::CudaContextHack()
 W perftools::gputools::internal::StreamExecutorInterface::DeviceMemoryUsage(long long*, long long*) const
 W perftools::gputools::internal::StreamExecutorInterface::GetDeviceLoad()
 W perftools::gputools::internal::StreamExecutorInterface::GetKernel(perftools::gputools::MultiKernelLoaderSpec const&, perftools::gputools::KernelBase*)
 W perftools::gputools::internal::StreamExecutorInterface::GetSymbol(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void**, unsigned long*)
 W perftools::gputools::internal::StreamExecutorInterface::GetUnderlyingExecutor()
 W perftools::gputools::internal::StreamExecutorInterface::Launch(perftools::gputools::Stream*, perftools::gputools::ThreadDim const&, perftools::gputools::BlockDim const&, perftools::gputools::KernelBase const&, perftools::gputools::KernelArgsArrayBase const&)
 W perftools::gputools::internal::StreamExecutorInterface::Memset(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, unsigned char, unsigned long long)
 W perftools::gputools::internal::StreamExecutorInterface::RegisterTraceListener(perftools::gputools::TraceListener*)
 W perftools::gputools::internal::StreamExecutorInterface::SupportsBlas() const
 W perftools::gputools::internal::StreamExecutorInterface::SupportsDnn() const
 W perftools::gputools::internal::StreamExecutorInterface::SupportsFft() const
 W perftools::gputools::internal::StreamExecutorInterface::SupportsRng() const
 W perftools::gputools::internal::StreamExecutorInterface::UnloadKernel(perftools::gputools::KernelBase const*)
 W perftools::gputools::internal::StreamExecutorInterface::UnregisterTraceListener(perftools::gputools::TraceListener*)
 W perftools::gputools::internal::StreamInterface::CudaStreamHack()
 W perftools::gputools::internal::StreamInterface::CudaStreamMemberHack()
 W perftools::gputools::internal::StreamInterface::~StreamInterface()
 W perftools::gputools::port::StatusOr<perftools::gputools::Platform*>::StatusOr(perftools::gputools::Platform* const&)
 W perftools::gputools::port::StatusOr<perftools::gputools::Platform*>::StatusOr(tensorflow::Status const&)
 W perftools::gputools::port::StatusOr<perftools::gputools::Platform*>::ValueOrDie()
 W perftools::gputools::port::StatusOr<perftools::gputools::StreamExecutor*>::StatusOr(perftools::gputools::StreamExecutor*&&)
 W perftools::gputools::port::StatusOr<perftools::gputools::StreamExecutor*>::StatusOr(tensorflow::Status const&)
 W perftools::gputools::port::StatusOr<perftools::gputools::StreamExecutor*>::ValueOrDie()
 W perftools::gputools::port::StatusOr<perftools::gputools::blas::BlasSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> perftools::gputools::PluginRegistry::GetFactoryInternal<perftools::gputools::blas::BlasSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>(void*, std::map<void*, perftools::gputools::blas::BlasSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*), std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::blas::BlasSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> > > const&, std::map<void*, perftools::gputools::blas::BlasSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*), std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::blas::BlasSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> > > const&) const
 W perftools::gputools::port::StatusOr<perftools::gputools::blas::BlasSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>::StatusOr(tensorflow::Status const&)
 W perftools::gputools::port::StatusOr<perftools::gputools::blas::BlasSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>::ValueOrDie()
 W perftools::gputools::port::StatusOr<perftools::gputools::dnn::DnnSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> perftools::gputools::PluginRegistry::GetFactoryInternal<perftools::gputools::dnn::DnnSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>(void*, std::map<void*, perftools::gputools::dnn::DnnSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*), std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::dnn::DnnSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> > > const&, std::map<void*, perftools::gputools::dnn::DnnSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*), std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::dnn::DnnSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> > > const&) const
 W perftools::gputools::port::StatusOr<perftools::gputools::dnn::DnnSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>::StatusOr(tensorflow::Status const&)
 W perftools::gputools::port::StatusOr<perftools::gputools::fft::FftSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> perftools::gputools::PluginRegistry::GetFactoryInternal<perftools::gputools::fft::FftSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>(void*, std::map<void*, perftools::gputools::fft::FftSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*), std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::fft::FftSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> > > const&, std::map<void*, perftools::gputools::fft::FftSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*), std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::fft::FftSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> > > const&) const
 W perftools::gputools::port::StatusOr<perftools::gputools::fft::FftSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>::StatusOr(tensorflow::Status const&)
 W perftools::gputools::port::StatusOr<perftools::gputools::fft::FftSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>::ValueOrDie()
 W perftools::gputools::port::StatusOr<perftools::gputools::rng::RngSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> perftools::gputools::PluginRegistry::GetFactoryInternal<perftools::gputools::rng::RngSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>(void*, std::map<void*, perftools::gputools::rng::RngSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*), std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::rng::RngSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> > > const&, std::map<void*, perftools::gputools::rng::RngSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*), std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::rng::RngSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> > > const&) const
 W perftools::gputools::port::StatusOr<perftools::gputools::rng::RngSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>::StatusOr(tensorflow::Status const&)
 W perftools::gputools::port::StatusOr<perftools::gputools::rng::RngSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>::ValueOrDie()
 W perftools::gputools::port::StatusOr<std::unique_ptr<perftools::gputools::StreamExecutor, std::default_delete<perftools::gputools::StreamExecutor> > >::StatusOr(tensorflow::Status const&)
 W perftools::gputools::port::StatusOr<std::unique_ptr<perftools::gputools::StreamExecutor, std::default_delete<perftools::gputools::StreamExecutor> > >::ValueOrDie()
 W perftools::gputools::port::StatusOr<std::unique_ptr<perftools::gputools::TemporaryDeviceMemory<unsigned char>, std::default_delete<perftools::gputools::TemporaryDeviceMemory<unsigned char> > > >::StatusOr(tensorflow::Status const&)
 W perftools::gputools::port::StatusOr<std::unique_ptr<perftools::gputools::TemporaryDeviceMemory<unsigned char>, std::default_delete<perftools::gputools::TemporaryDeviceMemory<unsigned char> > > >::ValueOrDie()
 W perftools::gputools::port::StatusOr<std::unique_ptr<perftools::gputools::TemporaryDeviceMemoryBase, std::default_delete<perftools::gputools::TemporaryDeviceMemoryBase> > >::ConsumeValueOrDie()
 W perftools::gputools::port::StatusOr<std::unique_ptr<perftools::gputools::TemporaryDeviceMemoryBase, std::default_delete<perftools::gputools::TemporaryDeviceMemoryBase> > >::StatusOr(tensorflow::Status const&)
 W perftools::gputools::port::StatusOr<std::unique_ptr<perftools::gputools::dnn::RnnDescriptor, std::default_delete<perftools::gputools::dnn::RnnDescriptor> > >::StatusOr(tensorflow::Status const&)
 W perftools::gputools::port::StatusOr<std::unique_ptr<perftools::gputools::dnn::RnnSequenceTensorDescriptor, std::default_delete<perftools::gputools::dnn::RnnSequenceTensorDescriptor> > >::StatusOr(tensorflow::Status const&)
 W perftools::gputools::port::StatusOr<std::unique_ptr<perftools::gputools::dnn::RnnStateTensorDescriptor, std::default_delete<perftools::gputools::dnn::RnnStateTensorDescriptor> > >::StatusOr(tensorflow::Status const&)
 W perftools::gputools::port::StatusOr<void*>::StatusOr(tensorflow::Status const&)
 W perftools::gputools::port::StatusOr<void*>::~StatusOr()
 W perftools::gputools::rng::RngSupport::DoPopulateRandGaussian(perftools::gputools::Stream*, double, double, perftools::gputools::DeviceMemory<double>*)
 W perftools::gputools::rng::RngSupport::DoPopulateRandGaussian(perftools::gputools::Stream*, float, float, perftools::gputools::DeviceMemory<float>*)
 W re2::CaptureNamesWalker::PreVisit(re2::Regexp*, int, bool*)
 W re2::CaptureNamesWalker::ShortVisit(re2::Regexp*, int)
 W re2::CaptureNamesWalker::~CaptureNamesWalker()
 W re2::CoalesceWalker::~CoalesceWalker()
 W re2::DFA::InlinedSearchLoop(re2::DFA::SearchParams*, bool, bool, bool)
 W re2::EmptyStringWalker::ShortVisit(re2::Regexp*, bool)
 W re2::EmptyStringWalker::~EmptyStringWalker()
 W re2::MutexLock::~MutexLock()
 W re2::NamedCapturesWalker::PreVisit(re2::Regexp*, int, bool*)
 W re2::NamedCapturesWalker::ShortVisit(re2::Regexp*, int)
 W re2::NamedCapturesWalker::~NamedCapturesWalker()
 W re2::NumCapturesWalker::PreVisit(re2::Regexp*, int, bool*)
 W re2::NumCapturesWalker::ShortVisit(re2::Regexp*, int)
 W re2::NumCapturesWalker::~NumCapturesWalker()
 W re2::PCREWalker::ShortVisit(re2::Regexp*, bool)
 W re2::PCREWalker::~PCREWalker()
 W re2::Prefilter::Info::Walker::~Walker()
 W re2::Regexp::Walker<bool>::Copy(bool)
 W re2::Regexp::Walker<bool>::PostVisit(re2::Regexp*, bool, bool, bool*, int)
 W re2::Regexp::Walker<bool>::PreVisit(re2::Regexp*, bool, bool*)
 W re2::Regexp::Walker<bool>::Reset()
 W re2::Regexp::Walker<bool>::WalkInternal(re2::Regexp*, bool, bool)
 W re2::Regexp::Walker<bool>::Walker()
 W re2::Regexp::Walker<bool>::~Walker()
 W re2::Regexp::Walker<int>::Copy(int)
 W re2::Regexp::Walker<int>::PostVisit(re2::Regexp*, int, int, int*, int)
 W re2::Regexp::Walker<int>::PreVisit(re2::Regexp*, int, bool*)
 W re2::Regexp::Walker<int>::Reset()
 W re2::Regexp::Walker<int>::WalkInternal(re2::Regexp*, int, bool)
 W re2::Regexp::Walker<int>::Walker()
 W re2::Regexp::Walker<int>::~Walker()
 W re2::Regexp::Walker<re2::Frag>::Copy(re2::Frag)
 W re2::Regexp::Walker<re2::Frag>::PostVisit(re2::Regexp*, re2::Frag, re2::Frag, re2::Frag*, int)
 W re2::Regexp::Walker<re2::Frag>::PreVisit(re2::Regexp*, re2::Frag, bool*)
 W re2::Regexp::Walker<re2::Frag>::Reset()
 W re2::Regexp::Walker<re2::Frag>::WalkInternal(re2::Regexp*, re2::Frag, bool)
 W re2::Regexp::Walker<re2::Frag>::Walker()
 W re2::Regexp::Walker<re2::Frag>::~Walker()
 W re2::Regexp::Walker<re2::Prefilter::Info*>::Copy(re2::Prefilter::Info*)
 W re2::Regexp::Walker<re2::Prefilter::Info*>::PostVisit(re2::Regexp*, re2::Prefilter::Info*, re2::Prefilter::Info*, re2::Prefilter::Info**, int)
 W re2::Regexp::Walker<re2::Prefilter::Info*>::PreVisit(re2::Regexp*, re2::Prefilter::Info*, bool*)
 W re2::Regexp::Walker<re2::Prefilter::Info*>::Reset()
 W re2::Regexp::Walker<re2::Prefilter::Info*>::WalkInternal(re2::Regexp*, re2::Prefilter::Info*, bool)
 W re2::Regexp::Walker<re2::Prefilter::Info*>::Walker()
 W re2::Regexp::Walker<re2::Prefilter::Info*>::~Walker()
 W re2::Regexp::Walker<re2::Regexp*>::Copy(re2::Regexp*)
 W re2::Regexp::Walker<re2::Regexp*>::PostVisit(re2::Regexp*, re2::Regexp*, re2::Regexp*, re2::Regexp**, int)
 W re2::Regexp::Walker<re2::Regexp*>::PreVisit(re2::Regexp*, re2::Regexp*, bool*)
 W re2::Regexp::Walker<re2::Regexp*>::Reset()
 W re2::Regexp::Walker<re2::Regexp*>::WalkInternal(re2::Regexp*, re2::Regexp*, bool)
 W re2::Regexp::Walker<re2::Regexp*>::Walker()
 W re2::Regexp::Walker<re2::Regexp*>::~Walker()
 W re2::RepetitionWalker::~RepetitionWalker()
 W re2::SimplifyWalker::~SimplifyWalker()
 W re2::SparseArray<int>::SparseArray(int)
 W re2::SparseArray<int>::less(re2::SparseArray<int>::IndexValue const&, re2::SparseArray<int>::IndexValue const&)
 W re2::SparseArray<int>::~SparseArray()
 W re2::SparseArray<re2::NFA::Thread*>::resize(int)
 W re2::SparseArray<re2::NFA::Thread*>::~SparseArray()
 W re2::SparseSetT<void>::SparseSetT(int)
 W re2::SparseSetT<void>::~SparseSetT()
 W re2::ToStringWalker::ShortVisit(re2::Regexp*, int)
 W re2::ToStringWalker::~ToStringWalker()
 W snappy::SnappyScatteredWriter<snappy::SnappySinkAllocator>::SlowAppend(char const*, unsigned long)
 W snappy::SnappyScatteredWriter<snappy::SnappySinkAllocator>::~SnappyScatteredWriter()
 W snappy::SnappySinkAllocator::Deleter(void*, char const*, unsigned long)
 W std::_Bvector_base<std::allocator<bool> >::_M_deallocate()
 W std::_Deque_base<re2::DFA::State*, std::allocator<re2::DFA::State*> >::~_Deque_base()
 W std::_Deque_base<re2::WalkState<bool>, std::allocator<re2::WalkState<bool> > >::_M_initialize_map(unsigned long)
 W std::_Deque_base<re2::WalkState<bool>, std::allocator<re2::WalkState<bool> > >::~_Deque_base()
 W std::_Deque_base<re2::WalkState<int>, std::allocator<re2::WalkState<int> > >::_M_initialize_map(unsigned long)
 W std::_Deque_base<re2::WalkState<int>, std::allocator<re2::WalkState<int> > >::~_Deque_base()
 W std::_Deque_base<re2::WalkState<re2::Frag>, std::allocator<re2::WalkState<re2::Frag> > >::_M_initialize_map(unsigned long)
 W std::_Deque_base<re2::WalkState<re2::Frag>, std::allocator<re2::WalkState<re2::Frag> > >::~_Deque_base()
 W std::_Deque_base<re2::WalkState<re2::Prefilter::Info*>, std::allocator<re2::WalkState<re2::Prefilter::Info*> > >::_M_initialize_map(unsigned long)
 W std::_Deque_base<re2::WalkState<re2::Prefilter::Info*>, std::allocator<re2::WalkState<re2::Prefilter::Info*> > >::~_Deque_base()
 W std::_Deque_base<re2::WalkState<re2::Regexp*>, std::allocator<re2::WalkState<re2::Regexp*> > >::_M_initialize_map(unsigned long)
 W std::_Deque_base<re2::WalkState<re2::Regexp*>, std::allocator<re2::WalkState<re2::Regexp*> > >::~_Deque_base()
 W std::_Deque_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_initialize_map(unsigned long)
 W std::_Deque_base<tensorflow::LocalRendezvousImpl::Item*, std::allocator<tensorflow::LocalRendezvousImpl::Item*> >::_M_initialize_map(unsigned long)
 W std::_Deque_base<tensorflow::LocalRendezvousImpl::Item*, std::allocator<tensorflow::LocalRendezvousImpl::Item*> >::~_Deque_base()
 W std::_Deque_base<tensorflow::Node*, std::allocator<tensorflow::Node*> >::_M_initialize_map(unsigned long)
 W std::_Deque_base<tensorflow::Node*, std::allocator<tensorflow::Node*> >::~_Deque_base()
 W std::_Function_base::_Base_manager<Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::NonBlockingThreadPoolTempl(int, bool, tensorflow::thread::EigenEnvironment)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::NonBlockingThreadPoolTempl(int, bool, tensorflow::thread::EigenEnvironment)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<Eigen::ThreadPoolDevice::parallelFor(long, Eigen::TensorOpCost const&, std::function<long (long)>, std::function<void (long, long)>) const::{lambda(long, long)#1}::operator()(long, long) const::{lambda()#1}>::_M_manager(std::_Any_data&, Eigen::ThreadPoolDevice::parallelFor(long, Eigen::TensorOpCost const&, std::function<long (long)>, std::function<void (long, long)>) const::{lambda(long, long)#1}::operator()(long, long) const::{lambda()#1} const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<Eigen::ThreadPoolDevice::parallelFor(long, Eigen::TensorOpCost const&, std::function<long (long)>, std::function<void (long, long)>) const::{lambda(long, long)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<Eigen::ThreadPoolDevice::parallelFor(long, Eigen::TensorOpCost const&, std::function<long (long)>, std::function<void (long, long)>) const::{lambda(long, long)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<bool (*)(tensorflow::StringPiece, int*)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<bool (*)(tensorflow::StringPiece, long long*)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<std::_Bind<std::function<void (perftools::gputools::StreamExecutor*)> (perftools::gputools::StreamExecutor*)> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::CallOp::ComputeAsync(tensorflow::OpKernelContext*, std::function<void ()>)::{lambda(tensorflow::Status const&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::CallOp::ComputeAsync(tensorflow::OpKernelContext*, std::function<void ()>)::{lambda(tensorflow::Status const&)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::Executor::Run(tensorflow::Executor::Args const&)::{lambda(tensorflow::Status const&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::Executor::Run(tensorflow::Executor::Args const&)::{lambda(tensorflow::Status const&)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::Status (*)(bool const&, tensorflow::TensorShape*)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::Status (*)(double const&, tensorflow::TensorShape*)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::Status (*)(float const&, tensorflow::TensorShape*)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::Status (*)(int const&, tensorflow::TensorShape*)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::Status (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::checkpoint::TensorSliceReader::Table**)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::Status (*)(tensorflow::OpKernelContext*, bool const&, bool const&, bool*)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::Status (*)(tensorflow::OpKernelContext*, bool const&, bool*)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::Status (*)(tensorflow::OpKernelContext*, double const&, double const&, double*)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::Status (*)(tensorflow::OpKernelContext*, double const&, double*)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::Status (*)(tensorflow::OpKernelContext*, float const&, float const&, float*)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::Status (*)(tensorflow::OpKernelContext*, float const&, float*)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::Status (*)(tensorflow::OpKernelContext*, int const&, int const&, int*)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::Status (*)(tensorflow::OpKernelContext*, int const&, int*)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::Status (*)(tensorflow::shape_inference::InferenceContext*)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::Status (*)(void**)>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::monitoring::Counter<0>::Counter(tensorflow::monitoring::MetricDef<(tensorflow::monitoring::MetricKind)1, long long, 0> const&)::{lambda(tensorflow::monitoring::MetricCollectorGetter)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::monitoring::Counter<0>::Counter(tensorflow::monitoring::MetricDef<(tensorflow::monitoring::MetricKind)1, long long, 0> const&)::{lambda(tensorflow::monitoring::MetricCollectorGetter)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::register_file_system::Register<tensorflow::LocalPosixFileSystem>::Register(tensorflow::Env*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::register_file_system::Register<tensorflow::LocalPosixFileSystem>::Register(tensorflow::Env*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::register_file_system::Register<tensorflow::PosixFileSystem>::Register(tensorflow::Env*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::register_file_system::Register<tensorflow::PosixFileSystem>::Register(tensorflow::Env*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::thread::EigenEnvironment::CreateThread(std::function<void ()>)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::thread::EigenEnvironment::CreateThread(std::function<void ()>)::{lambda()#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::thread::ThreadPool::Impl::ParallelFor(long long, long long, std::function<void (long long, long long)>)::{lambda(long, long)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::thread::ThreadPool::Impl::ParallelFor(long long, long long, std::function<void (long long, long long)>)::{lambda(long, long)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantBinaryOpRegistration<bool>::UnaryVariantBinaryOpRegistration(tensorflow::VariantBinaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, bool const&, bool const&, bool*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantBinaryOpRegistration<bool>::UnaryVariantBinaryOpRegistration(tensorflow::VariantBinaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, bool const&, bool const&, bool*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantBinaryOpRegistration<double>::UnaryVariantBinaryOpRegistration(tensorflow::VariantBinaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, double const&, double const&, double*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantBinaryOpRegistration<double>::UnaryVariantBinaryOpRegistration(tensorflow::VariantBinaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, double const&, double const&, double*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantBinaryOpRegistration<float>::UnaryVariantBinaryOpRegistration(tensorflow::VariantBinaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, float const&, float const&, float*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantBinaryOpRegistration<float>::UnaryVariantBinaryOpRegistration(tensorflow::VariantBinaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, float const&, float const&, float*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantBinaryOpRegistration<int>::UnaryVariantBinaryOpRegistration(tensorflow::VariantBinaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, int const&, int const&, int*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantBinaryOpRegistration<int>::UnaryVariantBinaryOpRegistration(tensorflow::VariantBinaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, int const&, int const&, int*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantDecodeRegistration<bool>::UnaryVariantDecodeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(tensorflow::Variant*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantDecodeRegistration<bool>::UnaryVariantDecodeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(tensorflow::Variant*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantDecodeRegistration<double>::UnaryVariantDecodeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(tensorflow::Variant*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantDecodeRegistration<double>::UnaryVariantDecodeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(tensorflow::Variant*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantDecodeRegistration<float>::UnaryVariantDecodeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(tensorflow::Variant*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantDecodeRegistration<float>::UnaryVariantDecodeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(tensorflow::Variant*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantDecodeRegistration<int>::UnaryVariantDecodeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(tensorflow::Variant*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantDecodeRegistration<int>::UnaryVariantDecodeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(tensorflow::Variant*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantDecodeRegistration<tensorflow::Tensor>::UnaryVariantDecodeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(tensorflow::Variant*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantDecodeRegistration<tensorflow::Tensor>::UnaryVariantDecodeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(tensorflow::Variant*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantShapeRegistration<bool>::UnaryVariantShapeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (bool const&, tensorflow::TensorShape*)> const&)::{lambda(tensorflow::Variant const&, tensorflow::TensorShape*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantShapeRegistration<bool>::UnaryVariantShapeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (bool const&, tensorflow::TensorShape*)> const&)::{lambda(tensorflow::Variant const&, tensorflow::TensorShape*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantShapeRegistration<double>::UnaryVariantShapeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (double const&, tensorflow::TensorShape*)> const&)::{lambda(tensorflow::Variant const&, tensorflow::TensorShape*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantShapeRegistration<double>::UnaryVariantShapeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (double const&, tensorflow::TensorShape*)> const&)::{lambda(tensorflow::Variant const&, tensorflow::TensorShape*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantShapeRegistration<float>::UnaryVariantShapeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (float const&, tensorflow::TensorShape*)> const&)::{lambda(tensorflow::Variant const&, tensorflow::TensorShape*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantShapeRegistration<float>::UnaryVariantShapeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (float const&, tensorflow::TensorShape*)> const&)::{lambda(tensorflow::Variant const&, tensorflow::TensorShape*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantShapeRegistration<int>::UnaryVariantShapeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (int const&, tensorflow::TensorShape*)> const&)::{lambda(tensorflow::Variant const&, tensorflow::TensorShape*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantShapeRegistration<int>::UnaryVariantShapeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (int const&, tensorflow::TensorShape*)> const&)::{lambda(tensorflow::Variant const&, tensorflow::TensorShape*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantUnaryOpRegistration<bool>::UnaryVariantUnaryOpRegistration(tensorflow::VariantUnaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, bool const&, bool*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantUnaryOpRegistration<bool>::UnaryVariantUnaryOpRegistration(tensorflow::VariantUnaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, bool const&, bool*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantUnaryOpRegistration<double>::UnaryVariantUnaryOpRegistration(tensorflow::VariantUnaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, double const&, double*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantUnaryOpRegistration<double>::UnaryVariantUnaryOpRegistration(tensorflow::VariantUnaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, double const&, double*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantUnaryOpRegistration<float>::UnaryVariantUnaryOpRegistration(tensorflow::VariantUnaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, float const&, float*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantUnaryOpRegistration<float>::UnaryVariantUnaryOpRegistration(tensorflow::VariantUnaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, float const&, float*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*)#1}> const&, std::_Manager_operation)
 W std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantUnaryOpRegistration<int>::UnaryVariantUnaryOpRegistration(tensorflow::VariantUnaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, int const&, int*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::variant_op_registry_fn_registration::UnaryVariantUnaryOpRegistration<int>::UnaryVariantUnaryOpRegistration(tensorflow::VariantUnaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, int const&, int*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*)#1}> const&, std::_Manager_operation)
 W std::_Function_handler<bool (tensorflow::StringPiece, int*), bool (*)(tensorflow::StringPiece, int*)>::_M_invoke(std::_Any_data const&, tensorflow::StringPiece&&, int*&&)
 W std::_Function_handler<bool (tensorflow::StringPiece, long long*), bool (*)(tensorflow::StringPiece, long long*)>::_M_invoke(std::_Any_data const&, tensorflow::StringPiece&&, long long*&&)
 W std::_Function_handler<bool (tensorflow::Variant*), tensorflow::variant_op_registry_fn_registration::UnaryVariantDecodeRegistration<bool>::UnaryVariantDecodeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(tensorflow::Variant*)#1}>::_M_invoke(std::_Any_data const&, tensorflow::Variant*&&)
 W std::_Function_handler<bool (tensorflow::Variant*), tensorflow::variant_op_registry_fn_registration::UnaryVariantDecodeRegistration<double>::UnaryVariantDecodeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(tensorflow::Variant*)#1}>::_M_invoke(std::_Any_data const&, tensorflow::Variant*&&)
 W std::_Function_handler<bool (tensorflow::Variant*), tensorflow::variant_op_registry_fn_registration::UnaryVariantDecodeRegistration<float>::UnaryVariantDecodeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(tensorflow::Variant*)#1}>::_M_invoke(std::_Any_data const&, tensorflow::Variant*&&)
 W std::_Function_handler<bool (tensorflow::Variant*), tensorflow::variant_op_registry_fn_registration::UnaryVariantDecodeRegistration<int>::UnaryVariantDecodeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(tensorflow::Variant*)#1}>::_M_invoke(std::_Any_data const&, tensorflow::Variant*&&)
 W std::_Function_handler<bool (tensorflow::Variant*), tensorflow::variant_op_registry_fn_registration::UnaryVariantDecodeRegistration<tensorflow::Tensor>::UnaryVariantDecodeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(tensorflow::Variant*)#1}>::_M_invoke(std::_Any_data const&, tensorflow::Variant*&&)
 W std::_Function_handler<tensorflow::FileSystem* (), tensorflow::register_file_system::Register<tensorflow::LocalPosixFileSystem>::Register(tensorflow::Env*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda()#1}>::_M_invoke(std::_Any_data const&)
 W std::_Function_handler<tensorflow::FileSystem* (), tensorflow::register_file_system::Register<tensorflow::PosixFileSystem>::Register(tensorflow::Env*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda()#1}>::_M_invoke(std::_Any_data const&)
 W std::_Function_handler<tensorflow::Status (bool const&, tensorflow::TensorShape*), tensorflow::Status (*)(bool const&, tensorflow::TensorShape*)>::_M_invoke(std::_Any_data const&, bool const&, tensorflow::TensorShape*&&)
 W std::_Function_handler<tensorflow::Status (double const&, tensorflow::TensorShape*), tensorflow::Status (*)(double const&, tensorflow::TensorShape*)>::_M_invoke(std::_Any_data const&, double const&, tensorflow::TensorShape*&&)
 W std::_Function_handler<tensorflow::Status (float const&, tensorflow::TensorShape*), tensorflow::Status (*)(float const&, tensorflow::TensorShape*)>::_M_invoke(std::_Any_data const&, float const&, tensorflow::TensorShape*&&)
 W std::_Function_handler<tensorflow::Status (int const&, tensorflow::TensorShape*), tensorflow::Status (*)(int const&, tensorflow::TensorShape*)>::_M_invoke(std::_Any_data const&, int const&, tensorflow::TensorShape*&&)
 W std::_Function_handler<tensorflow::Status (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::checkpoint::TensorSliceReader::Table**), tensorflow::Status (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::checkpoint::TensorSliceReader::Table**)>::_M_invoke(std::_Any_data const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::checkpoint::TensorSliceReader::Table**&&)
 W std::_Function_handler<tensorflow::Status (tensorflow::OpKernelContext*, bool const&, bool const&, bool*), tensorflow::Status (*)(tensorflow::OpKernelContext*, bool const&, bool const&, bool*)>::_M_invoke(std::_Any_data const&, tensorflow::OpKernelContext*&&, bool const&, bool const&, bool*&&)
 W std::_Function_handler<tensorflow::Status (tensorflow::OpKernelContext*, bool const&, bool*), tensorflow::Status (*)(tensorflow::OpKernelContext*, bool const&, bool*)>::_M_invoke(std::_Any_data const&, tensorflow::OpKernelContext*&&, bool const&, bool*&&)
 W std::_Function_handler<tensorflow::Status (tensorflow::OpKernelContext*, double const&, double const&, double*), tensorflow::Status (*)(tensorflow::OpKernelContext*, double const&, double const&, double*)>::_M_invoke(std::_Any_data const&, tensorflow::OpKernelContext*&&, double const&, double const&, double*&&)
 W std::_Function_handler<tensorflow::Status (tensorflow::OpKernelContext*, double const&, double*), tensorflow::Status (*)(tensorflow::OpKernelContext*, double const&, double*)>::_M_invoke(std::_Any_data const&, tensorflow::OpKernelContext*&&, double const&, double*&&)
 W std::_Function_handler<tensorflow::Status (tensorflow::OpKernelContext*, float const&, float const&, float*), tensorflow::Status (*)(tensorflow::OpKernelContext*, float const&, float const&, float*)>::_M_invoke(std::_Any_data const&, tensorflow::OpKernelContext*&&, float const&, float const&, float*&&)
 W std::_Function_handler<tensorflow::Status (tensorflow::OpKernelContext*, float const&, float*), tensorflow::Status (*)(tensorflow::OpKernelContext*, float const&, float*)>::_M_invoke(std::_Any_data const&, tensorflow::OpKernelContext*&&, float const&, float*&&)
 W std::_Function_handler<tensorflow::Status (tensorflow::OpKernelContext*, int const&, int const&, int*), tensorflow::Status (*)(tensorflow::OpKernelContext*, int const&, int const&, int*)>::_M_invoke(std::_Any_data const&, tensorflow::OpKernelContext*&&, int const&, int const&, int*&&)
 W std::_Function_handler<tensorflow::Status (tensorflow::OpKernelContext*, int const&, int*), tensorflow::Status (*)(tensorflow::OpKernelContext*, int const&, int*)>::_M_invoke(std::_Any_data const&, tensorflow::OpKernelContext*&&, int const&, int*&&)
 W std::_Function_handler<tensorflow::Status (tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*), tensorflow::variant_op_registry_fn_registration::UnaryVariantBinaryOpRegistration<bool>::UnaryVariantBinaryOpRegistration(tensorflow::VariantBinaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, bool const&, bool const&, bool*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)#1}>::_M_invoke(std::_Any_data const&, tensorflow::OpKernelContext*&&, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*&&)
 W std::_Function_handler<tensorflow::Status (tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*), tensorflow::variant_op_registry_fn_registration::UnaryVariantBinaryOpRegistration<double>::UnaryVariantBinaryOpRegistration(tensorflow::VariantBinaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, double const&, double const&, double*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)#1}>::_M_invoke(std::_Any_data const&, tensorflow::OpKernelContext*&&, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*&&)
 W std::_Function_handler<tensorflow::Status (tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*), tensorflow::variant_op_registry_fn_registration::UnaryVariantBinaryOpRegistration<float>::UnaryVariantBinaryOpRegistration(tensorflow::VariantBinaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, float const&, float const&, float*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)#1}>::_M_invoke(std::_Any_data const&, tensorflow::OpKernelContext*&&, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*&&)
 W std::_Function_handler<tensorflow::Status (tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*), tensorflow::variant_op_registry_fn_registration::UnaryVariantBinaryOpRegistration<int>::UnaryVariantBinaryOpRegistration(tensorflow::VariantBinaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, int const&, int const&, int*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)#1}>::_M_invoke(std::_Any_data const&, tensorflow::OpKernelContext*&&, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*&&)
 W std::_Function_handler<tensorflow::Status (tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*), tensorflow::variant_op_registry_fn_registration::UnaryVariantUnaryOpRegistration<bool>::UnaryVariantUnaryOpRegistration(tensorflow::VariantUnaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, bool const&, bool*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*)#1}>::_M_invoke(std::_Any_data const&, tensorflow::OpKernelContext*&&, tensorflow::Variant const&, tensorflow::Variant*&&)
 W std::_Function_handler<tensorflow::Status (tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*), tensorflow::variant_op_registry_fn_registration::UnaryVariantUnaryOpRegistration<double>::UnaryVariantUnaryOpRegistration(tensorflow::VariantUnaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, double const&, double*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*)#1}>::_M_invoke(std::_Any_data const&, tensorflow::OpKernelContext*&&, tensorflow::Variant const&, tensorflow::Variant*&&)
 W std::_Function_handler<tensorflow::Status (tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*), tensorflow::variant_op_registry_fn_registration::UnaryVariantUnaryOpRegistration<float>::UnaryVariantUnaryOpRegistration(tensorflow::VariantUnaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, float const&, float*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*)#1}>::_M_invoke(std::_Any_data const&, tensorflow::OpKernelContext*&&, tensorflow::Variant const&, tensorflow::Variant*&&)
 W std::_Function_handler<tensorflow::Status (tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*), tensorflow::variant_op_registry_fn_registration::UnaryVariantUnaryOpRegistration<int>::UnaryVariantUnaryOpRegistration(tensorflow::VariantUnaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, int const&, int*)> const&)::{lambda(tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*)#1}>::_M_invoke(std::_Any_data const&, tensorflow::OpKernelContext*&&, tensorflow::Variant const&, tensorflow::Variant*&&)
 W std::_Function_handler<tensorflow::Status (tensorflow::Variant const&, tensorflow::TensorShape*), tensorflow::variant_op_registry_fn_registration::UnaryVariantShapeRegistration<bool>::UnaryVariantShapeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (bool const&, tensorflow::TensorShape*)> const&)::{lambda(tensorflow::Variant const&, tensorflow::TensorShape*)#1}>::_M_invoke(std::_Any_data const&, tensorflow::Variant const&, tensorflow::TensorShape*&&)
 W std::_Function_handler<tensorflow::Status (tensorflow::Variant const&, tensorflow::TensorShape*), tensorflow::variant_op_registry_fn_registration::UnaryVariantShapeRegistration<double>::UnaryVariantShapeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (double const&, tensorflow::TensorShape*)> const&)::{lambda(tensorflow::Variant const&, tensorflow::TensorShape*)#1}>::_M_invoke(std::_Any_data const&, tensorflow::Variant const&, tensorflow::TensorShape*&&)
 W std::_Function_handler<tensorflow::Status (tensorflow::Variant const&, tensorflow::TensorShape*), tensorflow::variant_op_registry_fn_registration::UnaryVariantShapeRegistration<float>::UnaryVariantShapeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (float const&, tensorflow::TensorShape*)> const&)::{lambda(tensorflow::Variant const&, tensorflow::TensorShape*)#1}>::_M_invoke(std::_Any_data const&, tensorflow::Variant const&, tensorflow::TensorShape*&&)
 W std::_Function_handler<tensorflow::Status (tensorflow::Variant const&, tensorflow::TensorShape*), tensorflow::variant_op_registry_fn_registration::UnaryVariantShapeRegistration<int>::UnaryVariantShapeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (int const&, tensorflow::TensorShape*)> const&)::{lambda(tensorflow::Variant const&, tensorflow::TensorShape*)#1}>::_M_invoke(std::_Any_data const&, tensorflow::Variant const&, tensorflow::TensorShape*&&)
 W std::_Function_handler<tensorflow::Status (tensorflow::shape_inference::InferenceContext*), tensorflow::Status (*)(tensorflow::shape_inference::InferenceContext*)>::_M_invoke(std::_Any_data const&, tensorflow::shape_inference::InferenceContext*&&)
 W std::_Function_handler<tensorflow::Status (void**), tensorflow::Status (*)(void**)>::_M_invoke(std::_Any_data const&, void**&&)
 W std::_Function_handler<void (), Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::NonBlockingThreadPoolTempl(int, bool, tensorflow::thread::EigenEnvironment)::{lambda()#1}>::_M_invoke(std::_Any_data const&)
 W std::_Function_handler<void (), Eigen::ThreadPoolDevice::parallelFor(long, Eigen::TensorOpCost const&, std::function<long (long)>, std::function<void (long, long)>) const::{lambda(long, long)#1}::operator()(long, long) const::{lambda()#1}>::_M_invoke(std::_Any_data const&)
 W std::_Function_handler<void (), std::_Bind<std::function<void (perftools::gputools::StreamExecutor*)> (perftools::gputools::StreamExecutor*)> >::_M_invoke(std::_Any_data const&)
 W std::_Function_handler<void (), tensorflow::thread::EigenEnvironment::CreateThread(std::function<void ()>)::{lambda()#1}>::_M_invoke(std::_Any_data const&)
 W std::_Function_handler<void (long, long), Eigen::ThreadPoolDevice::parallelFor(long, Eigen::TensorOpCost const&, std::function<long (long)>, std::function<void (long, long)>) const::{lambda(long, long)#1}>::_M_invoke(std::_Any_data const&, long&&, std::_Any_data const&)
 W std::_Function_handler<void (long, long), tensorflow::thread::ThreadPool::Impl::ParallelFor(long long, long long, std::function<void (long long, long long)>)::{lambda(long, long)#1}>::_M_invoke(std::_Any_data const&, long&&, std::_Any_data const&)
 W std::_Function_handler<void (tensorflow::Status const&), tensorflow::CallOp::ComputeAsync(tensorflow::OpKernelContext*, std::function<void ()>)::{lambda(tensorflow::Status const&)#1}>::_M_invoke(std::_Any_data const&, tensorflow::Status const&)
 W std::_Function_handler<void (tensorflow::Status const&), tensorflow::Executor::Run(tensorflow::Executor::Args const&)::{lambda(tensorflow::Status const&)#1}>::_M_invoke(std::_Any_data const&, tensorflow::Status const&)
 W std::_Function_handler<void (tensorflow::monitoring::MetricCollectorGetter), tensorflow::monitoring::Counter<0>::Counter(tensorflow::monitoring::MetricDef<(tensorflow::monitoring::MetricKind)1, long long, 0> const&)::{lambda(tensorflow::monitoring::MetricCollectorGetter)#1}>::_M_invoke(std::_Any_data const&, tensorflow::monitoring::MetricCollectorGetter&&)
 W std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<int, false>*)
 W std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)
 W std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*)
 W std::_Hashtable<int, std::pair<int const, tensorflow::DeviceStepStats const*>, std::allocator<std::pair<int const, tensorflow::DeviceStepStats const*> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, tensorflow::DeviceStepStats const*>, false>*)
 W std::_Hashtable<int, std::pair<int const, tensorflow::DeviceStepStats const*>, std::allocator<std::pair<int const, tensorflow::DeviceStepStats const*> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(int const&)
 W std::_Hashtable<int, std::pair<int const, tensorflow::io::InputBuffer*>, std::allocator<std::pair<int const, tensorflow::io::InputBuffer*> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, tensorflow::io::InputBuffer*>, false>*)
 W std::_Hashtable<int, std::pair<int const, tensorflow::io::InputBuffer*>, std::allocator<std::pair<int const, tensorflow::io::InputBuffer*> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear()
 W std::_Hashtable<re2::DFA::State*, re2::DFA::State*, std::allocator<re2::DFA::State*>, std::__detail::_Identity, re2::DFA::StateEqual, re2::DFA::StateHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node(unsigned long, re2::DFA::State* const&, unsigned long) const
 W std::_Hashtable<re2::DFA::State*, re2::DFA::State*, std::allocator<re2::DFA::State*>, std::__detail::_Identity, re2::DFA::StateEqual, re2::DFA::StateHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<re2::DFA::State*, true>*)
 W std::_Hashtable<re2::DFA::State*, re2::DFA::State*, std::allocator<re2::DFA::State*>, std::__detail::_Identity, re2::DFA::StateEqual, re2::DFA::StateHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&)
 W std::_Hashtable<re2::DFA::State*, re2::DFA::State*, std::allocator<re2::DFA::State*>, std::__detail::_Identity, re2::DFA::StateEqual, re2::DFA::StateHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear()
 W std::_Hashtable<re2::DFA::State*, re2::DFA::State*, std::allocator<re2::DFA::State*>, std::__detail::_Identity, re2::DFA::StateEqual, re2::DFA::StateHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable()
 W std::_Hashtable<re2::DFA::State*, std::pair<re2::DFA::State* const, int>, std::allocator<std::pair<re2::DFA::State* const, int> >, std::__detail::_Select1st, std::equal_to<re2::DFA::State*>, std::hash<re2::DFA::State*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<re2::DFA::State* const, int>, false>*)
 W std::_Hashtable<re2::DFA::State*, std::pair<re2::DFA::State* const, int>, std::allocator<std::pair<re2::DFA::State* const, int> >, std::__detail::_Select1st, std::equal_to<re2::DFA::State*>, std::hash<re2::DFA::State*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&)
 W std::_Hashtable<re2::DFA::State*, std::pair<re2::DFA::State* const, int>, std::allocator<std::pair<re2::DFA::State* const, int> >, std::__detail::_Select1st, std::equal_to<re2::DFA::State*>, std::hash<re2::DFA::State*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear()
 W std::_Hashtable<re2::DFA::State*, std::pair<re2::DFA::State* const, int>, std::allocator<std::pair<re2::DFA::State* const, int> >, std::__detail::_Select1st, std::equal_to<re2::DFA::State*>, std::hash<re2::DFA::State*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable()
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, unsigned long, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Identity const&, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear()
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::count(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable()
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::StringPieceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, unsigned long, tensorflow::StringPieceHasher const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Identity const&, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::StringPieceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_Hashtable<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> const*>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> const*, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> const*, unsigned long, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Select1st const&, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > const&)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_Hashtable<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> const*>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> const*, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> const*, unsigned long, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Select1st const&, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> > const&)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_rehash(unsigned long, unsigned long const&)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::function<tensorflow::Status (tensorflow::AttrSlice const&, tensorflow::FunctionDef*)> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::function<tensorflow::Status (tensorflow::AttrSlice const&, tensorflow::FunctionDef*)> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::function<tensorflow::Status (tensorflow::AttrSlice const&, tensorflow::FunctionDef*)> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::function<tensorflow::Status (tensorflow::AttrSlice const&, tensorflow::FunctionDef*)> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::function<tensorflow::Status (tensorflow::AttrSlice const&, tensorflow::FunctionDef*)> >, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<int, int> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<int, int> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<int, int> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<int, int> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<int, int> >, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<int, int> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<int, int> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<int, int> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<int, int> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable()
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<tensorflow::Status (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::checkpoint::TensorSliceReader::Table**), tensorflow::checkpoint::TensorSliceReader*> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<tensorflow::Status (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::checkpoint::TensorSliceReader::Table**), tensorflow::checkpoint::TensorSliceReader*> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<tensorflow::Status (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::checkpoint::TensorSliceReader::Table**), tensorflow::checkpoint::TensorSliceReader*> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<tensorflow::Status (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::checkpoint::TensorSliceReader::Table**), tensorflow::checkpoint::TensorSliceReader*> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<tensorflow::Status (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::checkpoint::TensorSliceReader::Table**), tensorflow::checkpoint::TensorSliceReader*> >, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::set<tensorflow::NodeDef*, std::less<tensorflow::NodeDef*>, std::allocator<tensorflow::NodeDef*> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::set<tensorflow::NodeDef*, std::less<tensorflow::NodeDef*>, std::allocator<tensorflow::NodeDef*> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::set<tensorflow::NodeDef*, std::less<tensorflow::NodeDef*>, std::allocator<tensorflow::NodeDef*> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::set<tensorflow::NodeDef*, std::less<tensorflow::NodeDef*>, std::allocator<tensorflow::NodeDef*> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::set<tensorflow::NodeDef*, std::less<tensorflow::NodeDef*>, std::allocator<tensorflow::NodeDef*> > >, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::set<tensorflow::NodeDef*, std::less<tensorflow::NodeDef*>, std::allocator<tensorflow::NodeDef*> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::set<tensorflow::NodeDef*, std::less<tensorflow::NodeDef*>, std::allocator<tensorflow::NodeDef*> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_rehash(unsigned long, unsigned long const&)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::ExtendedInferenceContext, std::default_delete<tensorflow::ExtendedInferenceContext> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::ExtendedInferenceContext, std::default_delete<tensorflow::ExtendedInferenceContext> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::ExtendedInferenceContext, std::default_delete<tensorflow::ExtendedInferenceContext> > >, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::ExtendedInferenceContext, std::default_delete<tensorflow::ExtendedInferenceContext> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::ExtendedInferenceContext, std::default_delete<tensorflow::ExtendedInferenceContext> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable()
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::FileSystem, std::default_delete<tensorflow::FileSystem> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::FileSystem, std::default_delete<tensorflow::FileSystem> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::FileSystem, std::default_delete<tensorflow::FileSystem> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::FileSystem, std::default_delete<tensorflow::FileSystem> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::FileSystem, std::default_delete<tensorflow::FileSystem> > >, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::FileSystem, std::default_delete<tensorflow::FileSystem> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::FileSystem, std::default_delete<tensorflow::FileSystem> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable()
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unordered_map<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::ResourceBase*, tensorflow::ResourceMgr::KeyHash, tensorflow::ResourceMgr::KeyEqual, std::allocator<std::pair<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, tensorflow::ResourceBase*> > >*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unordered_map<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::ResourceBase*, tensorflow::ResourceMgr::KeyHash, tensorflow::ResourceMgr::KeyEqual, std::allocator<std::pair<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, tensorflow::ResourceBase*> > >*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unordered_map<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::ResourceBase*, tensorflow::ResourceMgr::KeyHash, tensorflow::ResourceMgr::KeyEqual, std::allocator<std::pair<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, tensorflow::ResourceBase*> > >*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unordered_map<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::ResourceBase*, tensorflow::ResourceMgr::KeyHash, tensorflow::ResourceMgr::KeyEqual, std::allocator<std::pair<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, tensorflow::ResourceBase*> > >*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unordered_map<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::ResourceBase*, tensorflow::ResourceMgr::KeyHash, tensorflow::ResourceMgr::KeyEqual, std::allocator<std::pair<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, tensorflow::ResourceBase*> > >*>, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unordered_map<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::ResourceBase*, tensorflow::ResourceMgr::KeyHash, tensorflow::ResourceMgr::KeyEqual, std::allocator<std::pair<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, tensorflow::ResourceBase*> > >*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unordered_map<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::ResourceBase*, tensorflow::ResourceMgr::KeyHash, tensorflow::ResourceMgr::KeyEqual, std::allocator<std::pair<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, tensorflow::ResourceBase*> > >*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::clear()
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unordered_map<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::ResourceBase*, tensorflow::ResourceMgr::KeyHash, tensorflow::ResourceMgr::KeyEqual, std::allocator<std::pair<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, tensorflow::ResourceBase*> > >*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unordered_map<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::ResourceBase*, tensorflow::ResourceMgr::KeyHash, tensorflow::ResourceMgr::KeyEqual, std::allocator<std::pair<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, tensorflow::ResourceBase*> > >*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unordered_map<tensorflow::NodeDef*, int, std::hash<tensorflow::NodeDef*>, std::equal_to<tensorflow::NodeDef*>, std::allocator<std::pair<tensorflow::NodeDef* const, int> > > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unordered_map<tensorflow::NodeDef*, int, std::hash<tensorflow::NodeDef*>, std::equal_to<tensorflow::NodeDef*>, std::allocator<std::pair<tensorflow::NodeDef* const, int> > > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unordered_map<tensorflow::NodeDef*, int, std::hash<tensorflow::NodeDef*>, std::equal_to<tensorflow::NodeDef*>, std::allocator<std::pair<tensorflow::NodeDef* const, int> > > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unordered_map<tensorflow::NodeDef*, int, std::hash<tensorflow::NodeDef*>, std::equal_to<tensorflow::NodeDef*>, std::allocator<std::pair<tensorflow::NodeDef* const, int> > > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unordered_map<tensorflow::NodeDef*, int, std::hash<tensorflow::NodeDef*>, std::equal_to<tensorflow::NodeDef*>, std::allocator<std::pair<tensorflow::NodeDef* const, int> > > >, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unordered_map<tensorflow::NodeDef*, int, std::hash<tensorflow::NodeDef*>, std::equal_to<tensorflow::NodeDef*>, std::allocator<std::pair<tensorflow::NodeDef* const, int> > > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unordered_map<tensorflow::NodeDef*, int, std::hash<tensorflow::NodeDef*>, std::equal_to<tensorflow::NodeDef*>, std::allocator<std::pair<tensorflow::NodeDef* const, int> > > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_rehash(unsigned long, unsigned long const&)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable()
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<std::unique_ptr<tensorflow::NodeExecStatsWrapper, std::default_delete<tensorflow::NodeExecStatsWrapper> >, std::allocator<std::unique_ptr<tensorflow::NodeExecStatsWrapper, std::default_delete<tensorflow::NodeExecStatsWrapper> > > > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<std::unique_ptr<tensorflow::NodeExecStatsWrapper, std::default_delete<tensorflow::NodeExecStatsWrapper> >, std::allocator<std::unique_ptr<tensorflow::NodeExecStatsWrapper, std::default_delete<tensorflow::NodeExecStatsWrapper> > > > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<std::unique_ptr<tensorflow::NodeExecStatsWrapper, std::default_delete<tensorflow::NodeExecStatsWrapper> >, std::allocator<std::unique_ptr<tensorflow::NodeExecStatsWrapper, std::default_delete<tensorflow::NodeExecStatsWrapper> > > > >, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<tensorflow::NodeDef const*, std::allocator<tensorflow::NodeDef const*> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<tensorflow::NodeDef const*, std::allocator<tensorflow::NodeDef const*> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<tensorflow::NodeDef const*, std::allocator<tensorflow::NodeDef const*> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<tensorflow::NodeDef const*, std::allocator<tensorflow::NodeDef const*> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<tensorflow::NodeDef const*, std::allocator<tensorflow::NodeDef const*> > >, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::AttrValue>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::AttrValue> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::AttrValue>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::AttrValue> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::erase(std::__detail::_Node_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::AttrValue>, false, true>)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::DataType>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::DataType> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::DataType>, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Device*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Device*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::FunctionDef const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::FunctionDef const*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::FunctionDef const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::FunctionDef const*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::GraphDef>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::GraphDef> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::GraphDef>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::GraphDef> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::GraphDef>, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::KernelRegistration>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::KernelRegistration> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::KernelRegistration>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::KernelRegistration> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::_M_insert_multi_node(std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::KernelRegistration>, true>*, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::KernelRegistration>, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::KernelRegistration>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::KernelRegistration> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, false> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, false>)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::MemmappedFileSystem::FileRegion>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::MemmappedFileSystem::FileRegion> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::MemmappedFileSystem::FileRegion>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::MemmappedFileSystem::FileRegion> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::MemmappedFileSystem::FileRegion>, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::MemmappedFileSystem::FileRegion>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::MemmappedFileSystem::FileRegion> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::clear()
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::MemmappedFileSystem::FileRegion>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::MemmappedFileSystem::FileRegion> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Node*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Node*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Node*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Node*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Node*>, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Node*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Node*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::StringPieceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Node*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Node*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::StringPieceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Node*>, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Node::NodeClass>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Node::NodeClass> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_Hashtable<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Node::NodeClass> const*>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Node::NodeClass> const*, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Node::NodeClass> const*, unsigned long, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, std::__detail::_Select1st const&, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Node::NodeClass> > const&)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Node::NodeClass>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Node::NodeClass> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef const*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef const*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef const*>, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef const*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_rehash(unsigned long, unsigned long const&)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef const*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable()
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef*>, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_rehash(unsigned long, unsigned long const&)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable()
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeExecStats>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeExecStats> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeExecStats>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeExecStats> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeExecStats>, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeExecStats>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeExecStats> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*>, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::erase(std::__detail::_Node_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*>, false, true>)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable()
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpKernel*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpKernel*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpKernel*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpKernel*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpKernel*>, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpRegistrationData const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpRegistrationData const*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpRegistrationData const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpRegistrationData const*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpRegistrationData const*>, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpRegistrationData const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpRegistrationData const*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpRegistrationData const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpRegistrationData const*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable()
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpSegment::Item*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpSegment::Item*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpSegment::Item*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpSegment::Item*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpSegment::Item*>, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpSegment::Item*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpSegment::Item*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::erase(std::__detail::_Node_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpSegment::Item*>, false, true>)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpSegment::Item*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpSegment::Item*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::SessionFactory*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::SessionFactory*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::SessionFactory*>, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Status>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Status> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Status>, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Status>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Status> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable()
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Tensor> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Tensor> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Tensor>, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Tensor> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::clear()
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Tensor> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::count(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Tensor> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable()
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::TensorShape>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::TensorShape> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::TensorShape>, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::TensorStore::TensorAndKey>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::TensorStore::TensorAndKey> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::TensorStore::TensorAndKey>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::TensorStore::TensorAndKey> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::TensorStore::TensorAndKey>, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::checkpoint::TensorSliceSet*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::checkpoint::TensorSliceSet*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::checkpoint::TensorSliceSet*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::checkpoint::TensorSliceSet*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::checkpoint::TensorSliceSet*>, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::checkpoint::TensorSliceSet*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::checkpoint::TensorSliceSet*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::clear()
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::checkpoint::TensorSliceSet*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::checkpoint::TensorSliceSet*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::checkpoint::TensorSliceSet::SliceInfo>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::checkpoint::TensorSliceSet::SliceInfo> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::checkpoint::TensorSliceSet::SliceInfo>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::checkpoint::TensorSliceSet::SliceInfo> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::checkpoint::TensorSliceSet::SliceInfo>, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::checkpoint::TensorSliceSet::SliceInfo>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::checkpoint::TensorSliceSet::SliceInfo> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long long>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long long> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long long>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long long> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long long>, true>*)
 W std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long long>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long long> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
 W std::_Hashtable<std::pair<tensorflow::VariantDeviceCopyDirection, tensorflow::StringPiece>, std::pair<std::pair<tensorflow::VariantDeviceCopyDirection, tensorflow::StringPiece> const, std::function<tensorflow::Status (tensorflow::Variant const&, tensorflow::Variant*, std::function<tensorflow::Status (tensorflow::Tensor const&, tensorflow::Tensor*)>)> >, std::allocator<std::pair<std::pair<tensorflow::VariantDeviceCopyDirection, tensorflow::StringPiece> const, std::function<tensorflow::Status (tensorflow::Variant const&, tensorflow::Variant*, std::function<tensorflow::Status (tensorflow::Tensor const&, tensorflow::Tensor*)>)> > >, std::__detail::_Select1st, std::equal_to<std::pair<tensorflow::VariantDeviceCopyDirection, tensorflow::StringPiece> >, tensorflow::UnaryVariantOpRegistry::PairHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::pair<tensorflow::VariantDeviceCopyDirection, tensorflow::StringPiece> const&, unsigned long) const
 W std::_Hashtable<std::pair<tensorflow::VariantDeviceCopyDirection, tensorflow::StringPiece>, std::pair<std::pair<tensorflow::VariantDeviceCopyDirection, tensorflow::StringPiece> const, std::function<tensorflow::Status (tensorflow::Variant const&, tensorflow::Variant*, std::function<tensorflow::Status (tensorflow::Tensor const&, tensorflow::Tensor*)>)> >, std::allocator<std::pair<std::pair<tensorflow::VariantDeviceCopyDirection, tensorflow::StringPiece> const, std::function<tensorflow::Status (tensorflow::Variant const&, tensorflow::Variant*, std::function<tensorflow::Status (tensorflow::Tensor const&, tensorflow::Tensor*)>)> > >, std::__detail::_Select1st, std::equal_to<std::pair<tensorflow::VariantDeviceCopyDirection, tensorflow::StringPiece> >, tensorflow::UnaryVariantOpRegistry::PairHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::pair<tensorflow::VariantDeviceCopyDirection, tensorflow::StringPiece> const, std::function<tensorflow::Status (tensorflow::Variant const&, tensorflow::Variant*, std::function<tensorflow::Status (tensorflow::Tensor const&, tensorflow::Tensor*)>)> >, true>*)
 W std::_Hashtable<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::pair<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, tensorflow::ResourceBase*>, std::allocator<std::pair<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, tensorflow::ResourceBase*> >, std::__detail::_Select1st, tensorflow::ResourceMgr::KeyEqual, tensorflow::ResourceMgr::KeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&, unsigned long) const
 W std::_Hashtable<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::pair<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, tensorflow::ResourceBase*>, std::allocator<std::pair<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, tensorflow::ResourceBase*> >, std::__detail::_Select1st, tensorflow::ResourceMgr::KeyEqual, tensorflow::ResourceMgr::KeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, tensorflow::ResourceBase*>, true>*)
 W std::_Hashtable<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::pair<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, tensorflow::ResourceBase*>, std::allocator<std::pair<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, tensorflow::ResourceBase*> >, std::__detail::_Select1st, tensorflow::ResourceMgr::KeyEqual, tensorflow::ResourceMgr::KeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::erase(std::__detail::_Node_const_iterator<std::pair<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, tensorflow::ResourceBase*>, false, true>)
 W std::_Hashtable<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::pair<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, tensorflow::ResourceBase*>, std::allocator<std::pair<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, tensorflow::ResourceBase*> >, std::__detail::_Select1st, tensorflow::ResourceMgr::KeyEqual, tensorflow::ResourceMgr::KeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable()
 W std::_Hashtable<std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::pair<std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece> const, std::function<tensorflow::Status (tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)> >, std::allocator<std::pair<std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece> const, std::function<tensorflow::Status (tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)> > >, std::__detail::_Select1st, std::equal_to<std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece> >, tensorflow::UnaryVariantOpRegistry::TupleHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece> const&, unsigned long) const
 W std::_Hashtable<std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::pair<std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece> const, std::function<tensorflow::Status (tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)> >, std::allocator<std::pair<std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece> const, std::function<tensorflow::Status (tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)> > >, std::__detail::_Select1st, std::equal_to<std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece> >, tensorflow::UnaryVariantOpRegistry::TupleHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece> const, std::function<tensorflow::Status (tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)> >, true>*)
 W std::_Hashtable<std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::pair<std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece> const, std::function<tensorflow::Status (tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*)> >, std::allocator<std::pair<std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece> const, std::function<tensorflow::Status (tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*)> > >, std::__detail::_Select1st, std::equal_to<std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece> >, tensorflow::UnaryVariantOpRegistry::TupleHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece> const&, unsigned long) const
 W std::_Hashtable<std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::pair<std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece> const, std::function<tensorflow::Status (tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*)> >, std::allocator<std::pair<std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece> const, std::function<tensorflow::Status (tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*)> > >, std::__detail::_Select1st, std::equal_to<std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece> >, tensorflow::UnaryVariantOpRegistry::TupleHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece> const, std::function<tensorflow::Status (tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*)> >, true>*)
 W std::_Hashtable<tensorflow::Device*, std::pair<tensorflow::Device* const, std::unique_ptr<tensorflow::FunctionLibraryRuntime, std::default_delete<tensorflow::FunctionLibraryRuntime> > >, std::allocator<std::pair<tensorflow::Device* const, std::unique_ptr<tensorflow::FunctionLibraryRuntime, std::default_delete<tensorflow::FunctionLibraryRuntime> > > >, std::__detail::_Select1st, std::equal_to<tensorflow::Device*>, std::hash<tensorflow::Device*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<tensorflow::Device* const, std::unique_ptr<tensorflow::FunctionLibraryRuntime, std::default_delete<tensorflow::FunctionLibraryRuntime> > >, false>*)
 W std::_Hashtable<tensorflow::Endpoint, std::pair<tensorflow::Endpoint const, tensorflow::MemoryType>, std::allocator<std::pair<tensorflow::Endpoint const, tensorflow::MemoryType> >, std::__detail::_Select1st, tensorflow::EndpointEq, tensorflow::EndpointHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, tensorflow::Endpoint const&, unsigned long) const
 W std::_Hashtable<tensorflow::Endpoint, std::pair<tensorflow::Endpoint const, tensorflow::MemoryType>, std::allocator<std::pair<tensorflow::Endpoint const, tensorflow::MemoryType> >, std::__detail::_Select1st, tensorflow::EndpointEq, tensorflow::EndpointHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<tensorflow::Endpoint const, tensorflow::MemoryType>, true>*)
 W std::_Hashtable<tensorflow::Endpoint, std::pair<tensorflow::Endpoint const, tensorflow::MemoryType>, std::allocator<std::pair<tensorflow::Endpoint const, tensorflow::MemoryType> >, std::__detail::_Select1st, tensorflow::EndpointEq, tensorflow::EndpointHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(tensorflow::Endpoint const&) const
 W std::_Hashtable<tensorflow::Endpoint, std::pair<tensorflow::Endpoint const, tensorflow::MemoryType>, std::allocator<std::pair<tensorflow::Endpoint const, tensorflow::MemoryType> >, std::__detail::_Select1st, tensorflow::EndpointEq, tensorflow::EndpointHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::~_Hashtable()
 W std::_Hashtable<tensorflow::Endpoint, std::pair<tensorflow::Endpoint const, tensorflow::Node*>, std::allocator<std::pair<tensorflow::Endpoint const, tensorflow::Node*> >, std::__detail::_Select1st, tensorflow::EndpointEq, tensorflow::EndpointHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, tensorflow::Endpoint const&, unsigned long) const
 W std::_Hashtable<tensorflow::Endpoint, std::pair<tensorflow::Endpoint const, tensorflow::Node*>, std::allocator<std::pair<tensorflow::Endpoint const, tensorflow::Node*> >, std::__detail::_Select1st, tensorflow::EndpointEq, tensorflow::EndpointHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<tensorflow::Endpoint const, tensorflow::Node*>, true>*)
 W std::_Hashtable<tensorflow::FunctionDef const*, std::pair<tensorflow::FunctionDef const* const, std::unique_ptr<tensorflow::Graph const, std::default_delete<tensorflow::Graph const> > >, std::allocator<std::pair<tensorflow::FunctionDef const* const, std::unique_ptr<tensorflow::Graph const, std::default_delete<tensorflow::Graph const> > > >, std::__detail::_Select1st, std::equal_to<tensorflow::FunctionDef const*>, std::hash<tensorflow::FunctionDef const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<tensorflow::FunctionDef const* const, std::unique_ptr<tensorflow::Graph const, std::default_delete<tensorflow::Graph const> > >, false>*)
 W std::_Hashtable<tensorflow::Graph const*, std::pair<tensorflow::Graph const* const, tensorflow::CostModel*>, std::allocator<std::pair<tensorflow::Graph const* const, tensorflow::CostModel*> >, std::__detail::_Select1st, std::equal_to<tensorflow::Graph const*>, std::hash<tensorflow::Graph const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<tensorflow::Graph const* const, tensorflow::CostModel*>, false>*)
 W std::_Hashtable<tensorflow::Graph const*, std::pair<tensorflow::Graph const* const, tensorflow::CostModel*>, std::allocator<std::pair<tensorflow::Graph const* const, tensorflow::CostModel*> >, std::__detail::_Select1st, std::equal_to<tensorflow::Graph const*>, std::hash<tensorflow::Graph const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(tensorflow::Graph const* const&)
 W std::_Hashtable<tensorflow::Node const*, std::pair<tensorflow::Node const* const, std::unique_ptr<tensorflow::ExtendedInferenceContext, std::default_delete<tensorflow::ExtendedInferenceContext> > >, std::allocator<std::pair<tensorflow::Node const* const, std::unique_ptr<tensorflow::ExtendedInferenceContext, std::default_delete<tensorflow::ExtendedInferenceContext> > > >, std::__detail::_Select1st, std::equal_to<tensorflow::Node const*>, std::hash<tensorflow::Node const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<tensorflow::Node const* const, std::unique_ptr<tensorflow::ExtendedInferenceContext, std::default_delete<tensorflow::ExtendedInferenceContext> > >, false>*)
 W std::_Hashtable<tensorflow::Node const*, std::pair<tensorflow::Node const* const, std::unique_ptr<tensorflow::ExtendedInferenceContext, std::default_delete<tensorflow::ExtendedInferenceContext> > >, std::allocator<std::pair<tensorflow::Node const* const, std::unique_ptr<tensorflow::ExtendedInferenceContext, std::default_delete<tensorflow::ExtendedInferenceContext> > > >, std::__detail::_Select1st, std::equal_to<tensorflow::Node const*>, std::hash<tensorflow::Node const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(tensorflow::Node const* const&)
 W std::_Hashtable<tensorflow::Node const*, std::pair<tensorflow::Node const* const, std::unique_ptr<tensorflow::ExtendedInferenceContext, std::default_delete<tensorflow::ExtendedInferenceContext> > >, std::allocator<std::pair<tensorflow::Node const* const, std::unique_ptr<tensorflow::ExtendedInferenceContext, std::default_delete<tensorflow::ExtendedInferenceContext> > > >, std::__detail::_Select1st, std::equal_to<tensorflow::Node const*>, std::hash<tensorflow::Node const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(tensorflow::Node const* const&) const
 W std::_Hashtable<tensorflow::Node const*, std::pair<tensorflow::Node const* const, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> > >, std::allocator<std::pair<tensorflow::Node const* const, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> > > >, std::__detail::_Select1st, std::equal_to<tensorflow::Node const*>, std::hash<tensorflow::Node const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<tensorflow::Node const* const, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> > >, false>*)
 W std::_Hashtable<tensorflow::Node const*, std::pair<tensorflow::Node const* const, tensorflow::gtl::FlatSet<tensorflow::Node*, tensorflow::hash<tensorflow::Node*>, std::equal_to<tensorflow::Node*> > >, std::allocator<std::pair<tensorflow::Node const* const, tensorflow::gtl::FlatSet<tensorflow::Node*, tensorflow::hash<tensorflow::Node*>, std::equal_to<tensorflow::Node*> > > >, std::__detail::_Select1st, std::equal_to<tensorflow::Node const*>, std::hash<tensorflow::Node const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<tensorflow::Node const* const, tensorflow::gtl::FlatSet<tensorflow::Node*, tensorflow::hash<tensorflow::Node*>, std::equal_to<tensorflow::Node*> > >, false>*)
 W std::_Hashtable<tensorflow::Node const*, std::pair<tensorflow::Node const* const, tensorflow::gtl::FlatSet<tensorflow::Node*, tensorflow::hash<tensorflow::Node*>, std::equal_to<tensorflow::Node*> > >, std::allocator<std::pair<tensorflow::Node const* const, tensorflow::gtl::FlatSet<tensorflow::Node*, tensorflow::hash<tensorflow::Node*>, std::equal_to<tensorflow::Node*> > > >, std::__detail::_Select1st, std::equal_to<tensorflow::Node const*>, std::hash<tensorflow::Node const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear()
 W std::_Hashtable<tensorflow::Node const*, tensorflow::Node const*, std::allocator<tensorflow::Node const*>, std::__detail::_Identity, std::equal_to<tensorflow::Node const*>, std::hash<tensorflow::Node const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<tensorflow::Node const*, false>*)
 W std::_Hashtable<tensorflow::Node const*, tensorflow::Node const*, std::allocator<tensorflow::Node const*>, std::__detail::_Identity, std::equal_to<tensorflow::Node const*>, std::hash<tensorflow::Node const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::~_Hashtable()
 W std::_Hashtable<tensorflow::Node*, std::pair<tensorflow::Node* const, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> > >, std::allocator<std::pair<tensorflow::Node* const, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> > > >, std::__detail::_Select1st, std::equal_to<tensorflow::Node*>, std::hash<tensorflow::Node*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<tensorflow::Node* const, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> > >, false>*)
 W std::_Hashtable<tensorflow::Node*, std::pair<tensorflow::Node* const, tensorflow::Node*>, std::allocator<std::pair<tensorflow::Node* const, tensorflow::Node*> >, std::__detail::_Select1st, std::equal_to<tensorflow::Node*>, std::hash<tensorflow::Node*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<tensorflow::Node* const, tensorflow::Node*>, false>*)
 W std::_Hashtable<tensorflow::Node*, tensorflow::Node*, std::allocator<tensorflow::Node*>, std::__detail::_Identity, std::equal_to<tensorflow::Node*>, std::hash<tensorflow::Node*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<tensorflow::Node*, false>*)
 W std::_Hashtable<tensorflow::NodeDef const*, std::pair<tensorflow::NodeDef const* const, int>, std::allocator<std::pair<tensorflow::NodeDef const* const, int> >, std::__detail::_Select1st, std::equal_to<tensorflow::NodeDef const*>, std::hash<tensorflow::NodeDef const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<tensorflow::NodeDef const* const, int>, false>*)
 W std::_Hashtable<tensorflow::NodeDef const*, std::pair<tensorflow::NodeDef const* const, long long>, std::allocator<std::pair<tensorflow::NodeDef const* const, long long> >, std::__detail::_Select1st, std::equal_to<tensorflow::NodeDef const*>, std::hash<tensorflow::NodeDef const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<tensorflow::NodeDef const* const, long long>, false>*)
 W std::_Hashtable<tensorflow::NodeDef const*, std::pair<tensorflow::NodeDef const* const, long long>, std::allocator<std::pair<tensorflow::NodeDef const* const, long long> >, std::__detail::_Select1st, std::equal_to<tensorflow::NodeDef const*>, std::hash<tensorflow::NodeDef const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable()
 W std::_Hashtable<tensorflow::NodeDef const*, tensorflow::NodeDef const*, std::allocator<tensorflow::NodeDef const*>, std::__detail::_Identity, std::equal_to<tensorflow::NodeDef const*>, std::hash<tensorflow::NodeDef const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<tensorflow::NodeDef const*, false>*)
 W std::_Hashtable<tensorflow::NodeDef const*, tensorflow::NodeDef const*, std::allocator<tensorflow::NodeDef const*>, std::__detail::_Identity, std::equal_to<tensorflow::NodeDef const*>, std::hash<tensorflow::NodeDef const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&)
 W std::_Hashtable<tensorflow::NodeDef const*, tensorflow::NodeDef const*, std::allocator<tensorflow::NodeDef const*>, std::__detail::_Identity, std::equal_to<tensorflow::NodeDef const*>, std::hash<tensorflow::NodeDef const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::~_Hashtable()
 W std::_Hashtable<tensorflow::NodeDef*, std::pair<tensorflow::NodeDef* const, int>, std::allocator<std::pair<tensorflow::NodeDef* const, int> >, std::__detail::_Select1st, std::equal_to<tensorflow::NodeDef*>, std::hash<tensorflow::NodeDef*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<tensorflow::NodeDef* const, int>, false>*)
 W std::_Hashtable<tensorflow::NodeDef*, std::pair<tensorflow::NodeDef* const, int>, std::allocator<std::pair<tensorflow::NodeDef* const, int> >, std::__detail::_Select1st, std::equal_to<tensorflow::NodeDef*>, std::hash<tensorflow::NodeDef*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&)
 W std::_Hashtable<tensorflow::NodeDef*, std::pair<tensorflow::NodeDef* const, int>, std::allocator<std::pair<tensorflow::NodeDef* const, int> >, std::__detail::_Select1st, std::equal_to<tensorflow::NodeDef*>, std::hash<tensorflow::NodeDef*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable()
 W std::_Hashtable<tensorflow::NodeOut, std::pair<tensorflow::NodeOut const, std::vector<tensorflow::NodeOut, std::allocator<tensorflow::NodeOut> > >, std::allocator<std::pair<tensorflow::NodeOut const, std::vector<tensorflow::NodeOut, std::allocator<tensorflow::NodeOut> > > >, std::__detail::_Select1st, tensorflow::NodeOutEq, tensorflow::NodeOutHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, tensorflow::NodeOut const&, unsigned long) const
 W std::_Hashtable<tensorflow::NodeOut, std::pair<tensorflow::NodeOut const, std::vector<tensorflow::NodeOut, std::allocator<tensorflow::NodeOut> > >, std::allocator<std::pair<tensorflow::NodeOut const, std::vector<tensorflow::NodeOut, std::allocator<tensorflow::NodeOut> > > >, std::__detail::_Select1st, tensorflow::NodeOutEq, tensorflow::NodeOutHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::clear()
 W std::_Hashtable<tensorflow::NodeOut, std::pair<tensorflow::NodeOut const, std::vector<tensorflow::NodeOut, std::allocator<tensorflow::NodeOut> > >, std::allocator<std::pair<tensorflow::NodeOut const, std::vector<tensorflow::NodeOut, std::allocator<tensorflow::NodeOut> > > >, std::__detail::_Select1st, tensorflow::NodeOutEq, tensorflow::NodeOutHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(tensorflow::NodeOut const&)
 W std::_Hashtable<tensorflow::StringPiece, std::pair<tensorflow::StringPiece const, std::function<bool (tensorflow::Variant*)> >, std::allocator<std::pair<tensorflow::StringPiece const, std::function<bool (tensorflow::Variant*)> > >, std::__detail::_Select1st, std::equal_to<tensorflow::StringPiece>, tensorflow::StringPieceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, tensorflow::StringPiece const&, unsigned long) const
 W std::_Hashtable<tensorflow::StringPiece, std::pair<tensorflow::StringPiece const, std::function<bool (tensorflow::Variant*)> >, std::allocator<std::pair<tensorflow::StringPiece const, std::function<bool (tensorflow::Variant*)> > >, std::__detail::_Select1st, std::equal_to<tensorflow::StringPiece>, tensorflow::StringPieceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<tensorflow::StringPiece const, std::function<bool (tensorflow::Variant*)> >, true>*)
 W std::_Hashtable<tensorflow::StringPiece, std::pair<tensorflow::StringPiece const, std::function<tensorflow::Status (tensorflow::Variant const&, tensorflow::TensorShape*)> >, std::allocator<std::pair<tensorflow::StringPiece const, std::function<tensorflow::Status (tensorflow::Variant const&, tensorflow::TensorShape*)> > >, std::__detail::_Select1st, std::equal_to<tensorflow::StringPiece>, tensorflow::StringPieceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, tensorflow::StringPiece const&, unsigned long) const
 W std::_Hashtable<tensorflow::StringPiece, std::pair<tensorflow::StringPiece const, std::function<tensorflow::Status (tensorflow::Variant const&, tensorflow::TensorShape*)> >, std::allocator<std::pair<tensorflow::StringPiece const, std::function<tensorflow::Status (tensorflow::Variant const&, tensorflow::TensorShape*)> > >, std::__detail::_Select1st, std::equal_to<tensorflow::StringPiece>, tensorflow::StringPieceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<tensorflow::StringPiece const, std::function<tensorflow::Status (tensorflow::Variant const&, tensorflow::TensorShape*)> >, true>*)
 W std::_Hashtable<tensorflow::StringPiece, std::pair<tensorflow::StringPiece const, tensorflow::Device*>, std::allocator<std::pair<tensorflow::StringPiece const, tensorflow::Device*> >, std::__detail::_Select1st, std::equal_to<tensorflow::StringPiece>, tensorflow::StringPieceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, tensorflow::StringPiece const&, unsigned long) const
 W std::_Hashtable<tensorflow::StringPiece, std::pair<tensorflow::StringPiece const, tensorflow::Device*>, std::allocator<std::pair<tensorflow::StringPiece const, tensorflow::Device*> >, std::__detail::_Select1st, std::equal_to<tensorflow::StringPiece>, tensorflow::StringPieceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<tensorflow::StringPiece const, tensorflow::Device*>, true>*)
 W std::_Hashtable<tensorflow::StringPiece, std::pair<tensorflow::StringPiece const, tensorflow::Node const*>, std::allocator<std::pair<tensorflow::StringPiece const, tensorflow::Node const*> >, std::__detail::_Select1st, std::equal_to<tensorflow::StringPiece>, tensorflow::StringPieceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<tensorflow::StringPiece const, tensorflow::Node const*>, true>*)
 W std::_Hashtable<tensorflow::StringPiece, std::pair<tensorflow::StringPiece const, tensorflow::Node*>, std::allocator<std::pair<tensorflow::StringPiece const, tensorflow::Node*> >, std::__detail::_Select1st, std::equal_to<tensorflow::StringPiece>, tensorflow::StringPieceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, tensorflow::StringPiece const&, unsigned long) const
 W std::_Hashtable<tensorflow::StringPiece, std::pair<tensorflow::StringPiece const, tensorflow::Node*>, std::allocator<std::pair<tensorflow::StringPiece const, tensorflow::Node*> >, std::__detail::_Select1st, std::equal_to<tensorflow::StringPiece>, tensorflow::StringPieceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<tensorflow::StringPiece const, tensorflow::Node*>, true>*)
 W std::_Hashtable<tensorflow::StringPiece, std::pair<tensorflow::StringPiece const, tensorflow::Node*>, std::allocator<std::pair<tensorflow::StringPiece const, tensorflow::Node*> >, std::__detail::_Select1st, std::equal_to<tensorflow::StringPiece>, tensorflow::StringPieceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)
 W std::_Hashtable<tensorflow::StringPiece, std::pair<tensorflow::StringPiece const, tensorflow::Node*>, std::allocator<std::pair<tensorflow::StringPiece const, tensorflow::Node*> >, std::__detail::_Select1st, std::equal_to<tensorflow::StringPiece>, tensorflow::StringPieceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::count(tensorflow::StringPiece const&) const
 W std::_Hashtable<tensorflow::StringPiece, std::pair<tensorflow::StringPiece const, tensorflow::Node*>, std::allocator<std::pair<tensorflow::StringPiece const, tensorflow::Node*> >, std::__detail::_Select1st, std::equal_to<tensorflow::StringPiece>, tensorflow::StringPieceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(tensorflow::StringPiece const&)
 W std::_Hashtable<tensorflow::StringPiece, tensorflow::StringPiece, std::allocator<tensorflow::StringPiece>, std::__detail::_Identity, std::equal_to<tensorflow::StringPiece>, tensorflow::StringPieceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_find_before_node(unsigned long, tensorflow::StringPiece const&, unsigned long) const
 W std::_Hashtable<tensorflow::StringPiece, tensorflow::StringPiece, std::allocator<tensorflow::StringPiece>, std::__detail::_Identity, std::equal_to<tensorflow::StringPiece>, tensorflow::StringPieceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::find(tensorflow::StringPiece const&)
 W std::_Hashtable<tensorflow::StringPiece, tensorflow::StringPiece, std::allocator<tensorflow::StringPiece>, std::__detail::_Identity, std::equal_to<tensorflow::StringPiece>, tensorflow::StringPieceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable()
 W std::_Hashtable<tensorflow::TensorReference, tensorflow::TensorReference, std::allocator<tensorflow::TensorReference>, std::__detail::_Identity, tensorflow::UniqueTensorReferences::TensorReferenceEqualFn, tensorflow::UniqueTensorReferences::TensorReferenceHashFn, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)
 W std::_Hashtable<tensorflow::TensorReference, tensorflow::TensorReference, std::allocator<tensorflow::TensorReference>, std::__detail::_Identity, tensorflow::UniqueTensorReferences::TensorReferenceEqualFn, tensorflow::UniqueTensorReferences::TensorReferenceHashFn, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::clear()
 W std::_Hashtable<tensorflow::TensorReference, tensorflow::TensorReference, std::allocator<tensorflow::TensorReference>, std::__detail::_Identity, tensorflow::UniqueTensorReferences::TensorReferenceEqualFn, tensorflow::UniqueTensorReferences::TensorReferenceHashFn, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::~_Hashtable()
 W std::_Hashtable<unsigned long long, std::pair<unsigned long long const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<unsigned long long const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<unsigned long long const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, false>*)
 W std::_Hashtable<unsigned long long, std::pair<unsigned long long const, tensorflow::FunctionLibraryRuntimeImpl::Item*>, std::allocator<std::pair<unsigned long long const, tensorflow::FunctionLibraryRuntimeImpl::Item*> >, std::__detail::_Select1st, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<unsigned long long const, tensorflow::FunctionLibraryRuntimeImpl::Item*>, false>*)
 W std::_Hashtable<unsigned long long, std::pair<unsigned long long const, tensorflow::ProcessFunctionLibraryRuntime::FunctionData>, std::allocator<std::pair<unsigned long long const, tensorflow::ProcessFunctionLibraryRuntime::FunctionData> >, std::__detail::_Select1st, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<unsigned long long const, tensorflow::ProcessFunctionLibraryRuntime::FunctionData>, false>*)
 W std::_Hashtable<unsigned long, std::pair<unsigned long const, int>, std::allocator<std::pair<unsigned long const, int> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<unsigned long const, int>, false>*)
 W std::_Hashtable<unsigned long, std::pair<unsigned long const, int>, std::allocator<std::pair<unsigned long const, int> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear()
 W std::_Hashtable<unsigned long, std::pair<unsigned long const, int>, std::allocator<std::pair<unsigned long const, int> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(unsigned long const&)
 W std::_Hashtable<unsigned long, std::pair<unsigned long const, int>, std::allocator<std::pair<unsigned long const, int> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable()
 W std::_Hashtable<unsigned long, std::pair<unsigned long const, tensorflow::Node*>, std::allocator<std::pair<unsigned long const, tensorflow::Node*> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<unsigned long const, tensorflow::Node*>, false>*)
 W std::_Hashtable<void*, std::pair<void* const, tensorflow::TrackingAllocator::Chunk>, std::allocator<std::pair<void* const, tensorflow::TrackingAllocator::Chunk> >, std::__detail::_Select1st, std::equal_to<void*>, std::hash<void*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<void* const, tensorflow::TrackingAllocator::Chunk>, false>*)
 W std::_Hashtable<void*, std::pair<void* const, tensorflow::TrackingAllocator::Chunk>, std::allocator<std::pair<void* const, tensorflow::TrackingAllocator::Chunk> >, std::__detail::_Select1st, std::equal_to<void*>, std::hash<void*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::erase(std::__detail::_Node_const_iterator<std::pair<void* const, tensorflow::TrackingAllocator::Chunk>, false, false>)
 W std::_Hashtable<void*, std::pair<void* const, tensorflow::TrackingAllocator::Chunk>, std::allocator<std::pair<void* const, tensorflow::TrackingAllocator::Chunk> >, std::__detail::_Select1st, std::equal_to<void*>, std::hash<void*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(void* const&)
 W std::_Rb_tree<char const*, std::pair<char const* const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<char const* const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<char const*>, std::allocator<std::pair<char const* const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_erase(std::_Rb_tree_node<std::pair<char const* const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)
 W std::_Rb_tree<char const*, std::pair<char const* const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<char const* const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<char const*>, std::allocator<std::pair<char const* const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<char const* const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, char const* const&)
 W std::_Rb_tree<char const*, std::pair<char const* const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<char const* const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<char const*>, std::allocator<std::pair<char const* const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_insert_unique_pos(char const* const&)
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_erase(std::_Rb_tree_node<int>*)
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<int>, int const&)
 W std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_get_insert_unique_pos(int const&)
 W std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, int> >*)
 W std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<int const, int> >, int const&)
 W std::_Rb_tree<int, std::pair<int const, int>, std::_Select1st<std::pair<int const, int> >, std::less<int>, std::allocator<std::pair<int const, int> > >::_M_get_insert_unique_pos(int const&)
 W std::_Rb_tree<int, std::pair<int const, perftools::gputools::ExecutorCache::Entry>, std::_Select1st<std::pair<int const, perftools::gputools::ExecutorCache::Entry> >, std::less<int>, std::allocator<std::pair<int const, perftools::gputools::ExecutorCache::Entry> > >::_M_erase(std::_Rb_tree_node<std::pair<int const, perftools::gputools::ExecutorCache::Entry> >*)
 W std::_Rb_tree<int, std::pair<int const, perftools::gputools::ExecutorCache::Entry>, std::_Select1st<std::pair<int const, perftools::gputools::ExecutorCache::Entry> >, std::less<int>, std::allocator<std::pair<int const, perftools::gputools::ExecutorCache::Entry> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<int const, perftools::gputools::ExecutorCache::Entry> >, int const&)
 W std::_Rb_tree<int, std::pair<int const, perftools::gputools::ExecutorCache::Entry>, std::_Select1st<std::pair<int const, perftools::gputools::ExecutorCache::Entry> >, std::less<int>, std::allocator<std::pair<int const, perftools::gputools::ExecutorCache::Entry> > >::_M_get_insert_unique_pos(int const&)
 W std::_Rb_tree<int, std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<int>, std::allocator<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_erase(std::_Rb_tree_node<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)
 W std::_Rb_tree<int, std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<int>, std::allocator<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, int const&)
 W std::_Rb_tree<int, std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<int>, std::allocator<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_insert_unique_pos(int const&)
 W std::_Rb_tree<int, std::pair<int const, std::vector<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> >, std::allocator<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> > > > >, std::_Select1st<std::pair<int const, std::vector<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> >, std::allocator<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> > > > > >, std::less<int>, std::allocator<std::pair<int const, std::vector<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> >, std::allocator<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> > > > > > >::_M_erase(std::_Rb_tree_node<std::pair<int const, std::vector<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> >, std::allocator<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> > > > > >*)
 W std::_Rb_tree<int, std::pair<int const, std::vector<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> >, std::allocator<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> > > > >, std::_Select1st<std::pair<int const, std::vector<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> >, std::allocator<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> > > > > >, std::less<int>, std::allocator<std::pair<int const, std::vector<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> >, std::allocator<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> > > > > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<int const, std::vector<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> >, std::allocator<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> > > > > >, int const&)
 W std::_Rb_tree<int, std::pair<int const, std::vector<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> >, std::allocator<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> > > > >, std::_Select1st<std::pair<int const, std::vector<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> >, std::allocator<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> > > > > >, std::less<int>, std::allocator<std::pair<int const, std::vector<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> >, std::allocator<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> > > > > > >::_M_get_insert_unique_pos(int const&)
 W std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_M_erase(std::_Rb_tree_node<long long>*)
 W std::_Rb_tree<long long, std::pair<long long const, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::_Select1st<std::pair<long long const, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, std::less<long long>, std::allocator<std::pair<long long const, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >::_M_erase(std::_Rb_tree_node<std::pair<long long const, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >*)
 W std::_Rb_tree<long long, std::pair<long long const, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::_Select1st<std::pair<long long const, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, std::less<long long>, std::allocator<std::pair<long long const, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<long long const, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, long long const&)
 W std::_Rb_tree<long long, std::pair<long long const, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::_Select1st<std::pair<long long const, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >, std::less<long long>, std::allocator<std::pair<long long const, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > > >::_M_get_insert_unique_pos(long long const&)
 W std::_Rb_tree<perftools::gputools::DeviceMemoryBase, std::pair<perftools::gputools::DeviceMemoryBase const, perftools::gputools::internal::TemporaryMemoryRecord>, std::_Select1st<std::pair<perftools::gputools::DeviceMemoryBase const, perftools::gputools::internal::TemporaryMemoryRecord> >, std::less<perftools::gputools::DeviceMemoryBase>, std::allocator<std::pair<perftools::gputools::DeviceMemoryBase const, perftools::gputools::internal::TemporaryMemoryRecord> > >::_M_erase(std::_Rb_tree_node<std::pair<perftools::gputools::DeviceMemoryBase const, perftools::gputools::internal::TemporaryMemoryRecord> >*)
 W std::_Rb_tree<perftools::gputools::DeviceMemoryBase, std::pair<perftools::gputools::DeviceMemoryBase const, perftools::gputools::internal::TemporaryMemoryRecord>, std::_Select1st<std::pair<perftools::gputools::DeviceMemoryBase const, perftools::gputools::internal::TemporaryMemoryRecord> >, std::less<perftools::gputools::DeviceMemoryBase>, std::allocator<std::pair<perftools::gputools::DeviceMemoryBase const, perftools::gputools::internal::TemporaryMemoryRecord> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<perftools::gputools::DeviceMemoryBase const, perftools::gputools::internal::TemporaryMemoryRecord> >, perftools::gputools::DeviceMemoryBase const&)
 W std::_Rb_tree<perftools::gputools::DeviceMemoryBase, std::pair<perftools::gputools::DeviceMemoryBase const, perftools::gputools::internal::TemporaryMemoryRecord>, std::_Select1st<std::pair<perftools::gputools::DeviceMemoryBase const, perftools::gputools::internal::TemporaryMemoryRecord> >, std::less<perftools::gputools::DeviceMemoryBase>, std::allocator<std::pair<perftools::gputools::DeviceMemoryBase const, perftools::gputools::internal::TemporaryMemoryRecord> > >::_M_get_insert_unique_pos(perftools::gputools::DeviceMemoryBase const&)
 W std::_Rb_tree<perftools::gputools::PlatformKind, std::pair<perftools::gputools::PlatformKind const, void*>, std::_Select1st<std::pair<perftools::gputools::PlatformKind const, void*> >, std::less<perftools::gputools::PlatformKind>, std::allocator<std::pair<perftools::gputools::PlatformKind const, void*> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<perftools::gputools::PlatformKind const, void*> >, perftools::gputools::PlatformKind const&)
 W std::_Rb_tree<perftools::gputools::PlatformKind, std::pair<perftools::gputools::PlatformKind const, void*>, std::_Select1st<std::pair<perftools::gputools::PlatformKind const, void*> >, std::less<perftools::gputools::PlatformKind>, std::allocator<std::pair<perftools::gputools::PlatformKind const, void*> > >::_M_get_insert_unique_pos(perftools::gputools::PlatformKind const&)
 W std::_Rb_tree<perftools::gputools::TraceListener*, perftools::gputools::TraceListener*, std::_Identity<perftools::gputools::TraceListener*>, std::less<perftools::gputools::TraceListener*>, std::allocator<perftools::gputools::TraceListener*> >::_M_erase(std::_Rb_tree_node<perftools::gputools::TraceListener*>*)
 W std::_Rb_tree<perftools::gputools::TraceListener*, perftools::gputools::TraceListener*, std::_Identity<perftools::gputools::TraceListener*>, std::less<perftools::gputools::TraceListener*>, std::allocator<perftools::gputools::TraceListener*> >::erase(perftools::gputools::TraceListener* const&)
 W std::_Rb_tree<re2::Regexp*, std::pair<re2::Regexp* const, int>, std::_Select1st<std::pair<re2::Regexp* const, int> >, std::less<re2::Regexp*>, std::allocator<std::pair<re2::Regexp* const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<re2::Regexp* const, int> >*)
 W std::_Rb_tree<re2::Regexp*, std::pair<re2::Regexp* const, int>, std::_Select1st<std::pair<re2::Regexp* const, int> >, std::less<re2::Regexp*>, std::allocator<std::pair<re2::Regexp* const, int> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<re2::Regexp* const, int> >, re2::Regexp* const&)
 W std::_Rb_tree<re2::Regexp*, std::pair<re2::Regexp* const, int>, std::_Select1st<std::pair<re2::Regexp* const, int> >, std::less<re2::Regexp*>, std::allocator<std::pair<re2::Regexp* const, int> > >::_M_get_insert_unique_pos(re2::Regexp* const&)
 W std::_Rb_tree<re2::Regexp*, std::pair<re2::Regexp* const, int>, std::_Select1st<std::pair<re2::Regexp* const, int> >, std::less<re2::Regexp*>, std::allocator<std::pair<re2::Regexp* const, int> > >::erase(re2::Regexp* const&)
 W std::_Rb_tree<re2::RuneRange, re2::RuneRange, std::_Identity<re2::RuneRange>, re2::RuneRangeLess, std::allocator<re2::RuneRange> >::_M_erase(std::_Rb_tree_node<re2::RuneRange>*)
 W std::_Rb_tree<re2::RuneRange, re2::RuneRange, std::_Identity<re2::RuneRange>, re2::RuneRangeLess, std::allocator<re2::RuneRange> >::_M_erase_aux(std::_Rb_tree_const_iterator<re2::RuneRange>)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::_Identity<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_erase(std::_Rb_tree_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >*)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::_Identity<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::_Identity<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::equal_range(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::_Identity<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::erase(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::_Identity<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >*)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long long>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long long> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long long> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long long> >*)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long long>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long long> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long long> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long long> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long long>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long long> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long long> > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, perftools::gputools::Platform*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, perftools::gputools::Platform*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, perftools::gputools::Platform*> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, perftools::gputools::Platform*> >*)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, perftools::gputools::Platform*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, perftools::gputools::Platform*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, perftools::gputools::Platform*> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, perftools::gputools::Platform*> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, perftools::gputools::Platform*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, perftools::gputools::Platform*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, perftools::gputools::Platform*> > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, perftools::gputools::Platform*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, perftools::gputools::Platform*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, perftools::gputools::Platform*> > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, re2::Prefilter*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, re2::Prefilter*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, re2::Prefilter*> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, re2::Prefilter*> >*)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, re2::Prefilter*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, re2::Prefilter*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, re2::Prefilter*> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, re2::Prefilter*> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, re2::Prefilter*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, re2::Prefilter*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, re2::Prefilter*> > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::operator=(std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&&)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<unsigned long, unsigned long> >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<unsigned long, unsigned long> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<unsigned long, unsigned long> > > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<unsigned long, unsigned long> > >*)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<unsigned long, unsigned long> >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<unsigned long, unsigned long> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<unsigned long, unsigned long> > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<unsigned long, unsigned long> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<unsigned long, unsigned long> >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<unsigned long, unsigned long> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<unsigned long, unsigned long> > > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<void const*, int> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<void const*, int> > > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<void const*, int> > >*)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<void const*, int> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<void const*, int> > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<void const*, int> > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<void const*, int> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<void const*, int> > > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::set<long long, std::less<long long>, std::allocator<long long> > > >*)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::monitoring::MetricDescriptor, std::default_delete<tensorflow::monitoring::MetricDescriptor> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::monitoring::MetricDescriptor, std::default_delete<tensorflow::monitoring::MetricDescriptor> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::monitoring::MetricDescriptor, std::default_delete<tensorflow::monitoring::MetricDescriptor> > > > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::monitoring::MetricDescriptor, std::default_delete<tensorflow::monitoring::MetricDescriptor> > > >*)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::monitoring::PointSet, std::default_delete<tensorflow::monitoring::PointSet> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::monitoring::PointSet, std::default_delete<tensorflow::monitoring::PointSet> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::monitoring::PointSet, std::default_delete<tensorflow::monitoring::PointSet> > > > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::monitoring::PointSet, std::default_delete<tensorflow::monitoring::PointSet> > > >*)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::AttrValue>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::AttrValue> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::AttrValue> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::AttrValue> >*)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::AttrValue>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::AttrValue> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::AttrValue> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::AttrValue> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::AttrValue>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::AttrValue> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::AttrValue> > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::BundleEntryProto>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::BundleEntryProto> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::BundleEntryProto> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::BundleEntryProto> >*)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::BundleEntryProto>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::BundleEntryProto> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::BundleEntryProto> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::BundleEntryProto> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::BundleEntryProto>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::BundleEntryProto> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::BundleEntryProto> > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::BundleEntryProto>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::BundleEntryProto> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::BundleEntryProto> > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::DeviceStepStats*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::DeviceStepStats*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::DeviceStepStats*> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::DeviceStepStats*> >*)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::DeviceStepStats*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::DeviceStepStats*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::DeviceStepStats*> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::DeviceStepStats*> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::DeviceStepStats*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::DeviceStepStats*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::DeviceStepStats*> > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef const*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef const*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef const*> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef const*> >*)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef const*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef const*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef const*> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef const*> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef const*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef const*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef const*> > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*> >*)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*> > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::StatSummarizer::Detail>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::StatSummarizer::Detail> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::StatSummarizer::Detail> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::StatSummarizer::Detail> >*)
 W std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::WhileContext>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::WhileContext> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::WhileContext> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::WhileContext> >*)
 W std::_Rb_tree<std::pair<int, int>, std::pair<std::pair<int, int> const, bool>, std::_Select1st<std::pair<std::pair<int, int> const, bool> >, std::less<std::pair<int, int> >, std::allocator<std::pair<std::pair<int, int> const, bool> > >::_M_erase(std::_Rb_tree_node<std::pair<std::pair<int, int> const, bool> >*)
 W std::_Rb_tree<std::pair<int, int>, std::pair<std::pair<int, int> const, bool>, std::_Select1st<std::pair<std::pair<int, int> const, bool> >, std::less<std::pair<int, int> >, std::allocator<std::pair<std::pair<int, int> const, bool> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::pair<int, int> const, bool> >, std::pair<int, int> const&)
 W std::_Rb_tree<std::pair<int, int>, std::pair<std::pair<int, int> const, bool>, std::_Select1st<std::pair<std::pair<int, int> const, bool> >, std::less<std::pair<int, int> >, std::allocator<std::pair<std::pair<int, int> const, bool> > >::_M_get_insert_unique_pos(std::pair<int, int> const&)
 W std::_Rb_tree<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::pair<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> const, std::pair<void const*, int> > >, std::less<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> >, std::allocator<std::pair<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> const, std::pair<void const*, int> > > >::_M_erase(std::_Rb_tree_node<std::pair<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> const, std::pair<void const*, int> > >*)
 W std::_Rb_tree<std::pair<tensorflow::Node*, int>, std::pair<std::pair<tensorflow::Node*, int> const, tensorflow::Node*>, std::_Select1st<std::pair<std::pair<tensorflow::Node*, int> const, tensorflow::Node*> >, std::less<std::pair<tensorflow::Node*, int> >, std::allocator<std::pair<std::pair<tensorflow::Node*, int> const, tensorflow::Node*> > >::_M_erase(std::_Rb_tree_node<std::pair<std::pair<tensorflow::Node*, int> const, tensorflow::Node*> >*)
 W std::_Rb_tree<std::tuple<int, int>, std::pair<std::tuple<int, int> const, char const*>, std::_Select1st<std::pair<std::tuple<int, int> const, char const*> >, bool (*)(std::tuple<int, int> const&, std::tuple<int, int> const&), std::allocator<std::pair<std::tuple<int, int> const, char const*> > >::_M_erase(std::_Rb_tree_node<std::pair<std::tuple<int, int> const, char const*> >*)
 W std::_Rb_tree<std::tuple<int, int>, std::pair<std::tuple<int, int> const, char const*>, std::_Select1st<std::pair<std::tuple<int, int> const, char const*> >, bool (*)(std::tuple<int, int> const&, std::tuple<int, int> const&), std::allocator<std::pair<std::tuple<int, int> const, char const*> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::tuple<int, int> const, char const*> >, std::tuple<int, int> const&)
 W std::_Rb_tree<std::tuple<int, int>, std::pair<std::tuple<int, int> const, char const*>, std::_Select1st<std::pair<std::tuple<int, int> const, char const*> >, bool (*)(std::tuple<int, int> const&, std::tuple<int, int> const&), std::allocator<std::pair<std::tuple<int, int> const, char const*> > >::_M_get_insert_unique_pos(std::tuple<int, int> const&)
 W std::_Rb_tree<std::tuple<int, int>, std::pair<std::tuple<int, int> const, char const*>, std::_Select1st<std::pair<std::tuple<int, int> const, char const*> >, bool (*)(std::tuple<int, int> const&, std::tuple<int, int> const&), std::allocator<std::pair<std::tuple<int, int> const, char const*> > >::_M_insert_node(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node<std::pair<std::tuple<int, int> const, char const*> >*)
 W std::_Rb_tree<std::tuple<int, int>, std::pair<std::tuple<int, int> const, char const*>, std::_Select1st<std::pair<std::tuple<int, int> const, char const*> >, bool (*)(std::tuple<int, int> const&, std::tuple<int, int> const&), std::allocator<std::pair<std::tuple<int, int> const, char const*> > >::find(std::tuple<int, int> const&) const
 W std::_Rb_tree<tensorflow::Edge const*, tensorflow::Edge const*, std::_Identity<tensorflow::Edge const*>, std::less<tensorflow::Edge const*>, std::allocator<tensorflow::Edge const*> >::_M_erase(std::_Rb_tree_node<tensorflow::Edge const*>*)
 W std::_Rb_tree<tensorflow::Edge const*, tensorflow::Edge const*, std::_Identity<tensorflow::Edge const*>, std::less<tensorflow::Edge const*>, std::allocator<tensorflow::Edge const*> >::erase(tensorflow::Edge const* const&)
 W std::_Rb_tree<tensorflow::NodeDef*, tensorflow::NodeDef*, std::_Identity<tensorflow::NodeDef*>, std::less<tensorflow::NodeDef*>, std::allocator<tensorflow::NodeDef*> >::_M_erase(std::_Rb_tree_node<tensorflow::NodeDef*>*)
 W std::_Rb_tree<tensorflow::NodeDef*, tensorflow::NodeDef*, std::_Identity<tensorflow::NodeDef*>, std::less<tensorflow::NodeDef*>, std::allocator<tensorflow::NodeDef*> >::erase(tensorflow::NodeDef* const&)
 W std::_Rb_tree<tensorflow::OptimizationPassRegistry::Grouping, std::pair<tensorflow::OptimizationPassRegistry::Grouping const, std::map<int, std::vector<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> >, std::allocator<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> > > >, std::less<int>, std::allocator<std::pair<int const, std::vector<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> >, std::allocator<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> > > > > > > >, std::_Select1st<std::pair<tensorflow::OptimizationPassRegistry::Grouping const, std::map<int, std::vector<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> >, std::allocator<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> > > >, std::less<int>, std::allocator<std::pair<int const, std::vector<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> >, std::allocator<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> > > > > > > > >, std::less<tensorflow::OptimizationPassRegistry::Grouping>, std::allocator<std::pair<tensorflow::OptimizationPassRegistry::Grouping const, std::map<int, std::vector<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> >, std::allocator<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> > > >, std::less<int>, std::allocator<std::pair<int const, std::vector<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> >, std::allocator<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> > > > > > > > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<tensorflow::OptimizationPassRegistry::Grouping const, std::map<int, std::vector<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> >, std::allocator<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> > > >, std::less<int>, std::allocator<std::pair<int const, std::vector<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> >, std::allocator<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> > > > > > > > >, tensorflow::OptimizationPassRegistry::Grouping const&)
 W std::_Rb_tree<tensorflow::OptimizationPassRegistry::Grouping, std::pair<tensorflow::OptimizationPassRegistry::Grouping const, std::map<int, std::vector<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> >, std::allocator<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> > > >, std::less<int>, std::allocator<std::pair<int const, std::vector<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> >, std::allocator<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> > > > > > > >, std::_Select1st<std::pair<tensorflow::OptimizationPassRegistry::Grouping const, std::map<int, std::vector<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> >, std::allocator<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> > > >, std::less<int>, std::allocator<std::pair<int const, std::vector<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> >, std::allocator<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> > > > > > > > >, std::less<tensorflow::OptimizationPassRegistry::Grouping>, std::allocator<std::pair<tensorflow::OptimizationPassRegistry::Grouping const, std::map<int, std::vector<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> >, std::allocator<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> > > >, std::less<int>, std::allocator<std::pair<int const, std::vector<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> >, std::allocator<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> > > > > > > > > >::_M_get_insert_unique_pos(tensorflow::OptimizationPassRegistry::Grouping const&)
 W std::_Rb_tree<tensorflow::StringPiece, std::pair<tensorflow::StringPiece const, tensorflow::monitoring::CollectionRegistry::CollectionInfo>, std::_Select1st<std::pair<tensorflow::StringPiece const, tensorflow::monitoring::CollectionRegistry::CollectionInfo> >, std::less<tensorflow::StringPiece>, std::allocator<std::pair<tensorflow::StringPiece const, tensorflow::monitoring::CollectionRegistry::CollectionInfo> > >::_M_erase(std::_Rb_tree_node<std::pair<tensorflow::StringPiece const, tensorflow::monitoring::CollectionRegistry::CollectionInfo> >*)
 W std::_Rb_tree<tensorflow::StringPiece, std::pair<tensorflow::StringPiece const, tensorflow::monitoring::CollectionRegistry::CollectionInfo>, std::_Select1st<std::pair<tensorflow::StringPiece const, tensorflow::monitoring::CollectionRegistry::CollectionInfo> >, std::less<tensorflow::StringPiece>, std::allocator<std::pair<tensorflow::StringPiece const, tensorflow::monitoring::CollectionRegistry::CollectionInfo> > >::equal_range(tensorflow::StringPiece const&)
 W std::_Rb_tree<tensorflow::TensorId, std::pair<tensorflow::TensorId const, tensorflow::TensorId>, std::_Select1st<std::pair<tensorflow::TensorId const, tensorflow::TensorId> >, std::less<tensorflow::TensorId>, std::allocator<std::pair<tensorflow::TensorId const, tensorflow::TensorId> > >::_M_erase(std::_Rb_tree_node<std::pair<tensorflow::TensorId const, tensorflow::TensorId> >*)
 W std::_Rb_tree<tensorflow::TensorId, std::pair<tensorflow::TensorId const, tensorflow::TensorId>, std::_Select1st<std::pair<tensorflow::TensorId const, tensorflow::TensorId> >, std::less<tensorflow::TensorId>, std::allocator<std::pair<tensorflow::TensorId const, tensorflow::TensorId> > >::find(tensorflow::TensorId const&) const
 W std::_Rb_tree<tensorflow::TensorId, tensorflow::TensorId, std::_Identity<tensorflow::TensorId>, std::less<tensorflow::TensorId>, std::allocator<tensorflow::TensorId> >::_M_erase(std::_Rb_tree_node<tensorflow::TensorId>*)
 W std::_Rb_tree<tensorflow::TensorId, tensorflow::TensorId, std::_Identity<tensorflow::TensorId>, std::less<tensorflow::TensorId>, std::allocator<tensorflow::TensorId> >::find(tensorflow::TensorId const&) const
 W std::_Rb_tree<unsigned long const, std::pair<unsigned long const, tensorflow::PoolAllocator::PtrRecord*>, std::_Select1st<std::pair<unsigned long const, tensorflow::PoolAllocator::PtrRecord*> >, std::less<unsigned long const>, std::allocator<std::pair<unsigned long const, tensorflow::PoolAllocator::PtrRecord*> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, tensorflow::PoolAllocator::PtrRecord*> >*)
 W std::_Rb_tree<unsigned long, std::pair<unsigned long const, int>, std::_Select1st<std::pair<unsigned long const, int> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned long const, int> >*)
 W std::_Rb_tree<unsigned long, std::pair<unsigned long const, int>, std::_Select1st<std::pair<unsigned long const, int> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, int> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<unsigned long const, int> >, unsigned long const&)
 W std::_Rb_tree<unsigned long, std::pair<unsigned long const, int>, std::_Select1st<std::pair<unsigned long const, int> >, std::less<unsigned long>, std::allocator<std::pair<unsigned long const, int> > >::_M_get_insert_unique_pos(unsigned long const&)
 W std::_Rb_tree<unsigned long, unsigned long, std::_Identity<unsigned long>, tensorflow::BFCAllocator::Bin::ChunkComparator, std::allocator<unsigned long> >::_M_erase(std::_Rb_tree_node<unsigned long>*)
 W std::_Rb_tree<unsigned long, unsigned long, std::_Identity<unsigned long>, tensorflow::BFCAllocator::Bin::ChunkComparator, std::allocator<unsigned long> >::equal_range(unsigned long const&)
 W std::_Rb_tree<void*, std::pair<void* const, perftools::gputools::AllocRecord>, std::_Select1st<std::pair<void* const, perftools::gputools::AllocRecord> >, std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::AllocRecord> > >::_M_erase(std::_Rb_tree_node<std::pair<void* const, perftools::gputools::AllocRecord> >*)
 W std::_Rb_tree<void*, std::pair<void* const, perftools::gputools::AllocRecord>, std::_Select1st<std::pair<void* const, perftools::gputools::AllocRecord> >, std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::AllocRecord> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<void* const, perftools::gputools::AllocRecord> >, void* const&)
 W std::_Rb_tree<void*, std::pair<void* const, perftools::gputools::AllocRecord>, std::_Select1st<std::pair<void* const, perftools::gputools::AllocRecord> >, std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::AllocRecord> > >::_M_get_insert_unique_pos(void* const&)
 W std::_Rb_tree<void*, std::pair<void* const, perftools::gputools::AllocRecord>, std::_Select1st<std::pair<void* const, perftools::gputools::AllocRecord> >, std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::AllocRecord> > >::erase(void* const&)
 W std::_Rb_tree<void*, std::pair<void* const, perftools::gputools::Platform*>, std::_Select1st<std::pair<void* const, perftools::gputools::Platform*> >, std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::Platform*> > >::_M_erase(std::_Rb_tree_node<std::pair<void* const, perftools::gputools::Platform*> >*)
 W std::_Rb_tree<void*, std::pair<void* const, perftools::gputools::PluginRegistry::DefaultFactories>, std::_Select1st<std::pair<void* const, perftools::gputools::PluginRegistry::DefaultFactories> >, std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::PluginRegistry::DefaultFactories> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<void* const, perftools::gputools::PluginRegistry::DefaultFactories> >, void* const&)
 W std::_Rb_tree<void*, std::pair<void* const, perftools::gputools::PluginRegistry::DefaultFactories>, std::_Select1st<std::pair<void* const, perftools::gputools::PluginRegistry::DefaultFactories> >, std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::PluginRegistry::DefaultFactories> > >::_M_get_insert_unique_pos(void* const&)
 W std::_Rb_tree<void*, std::pair<void* const, perftools::gputools::PluginRegistry::PluginFactories>, std::_Select1st<std::pair<void* const, perftools::gputools::PluginRegistry::PluginFactories> >, std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::PluginRegistry::PluginFactories> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<void* const, perftools::gputools::PluginRegistry::PluginFactories> >, void* const&)
 W std::_Rb_tree<void*, std::pair<void* const, perftools::gputools::PluginRegistry::PluginFactories>, std::_Select1st<std::pair<void* const, perftools::gputools::PluginRegistry::PluginFactories> >, std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::PluginRegistry::PluginFactories> > >::_M_get_insert_unique_pos(void* const&)
 W std::_Rb_tree<void*, std::pair<void* const, perftools::gputools::blas::BlasSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>, std::_Select1st<std::pair<void* const, perftools::gputools::blas::BlasSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> >, std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::blas::BlasSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> > >::_M_erase(std::_Rb_tree_node<std::pair<void* const, perftools::gputools::blas::BlasSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> >*)
 W std::_Rb_tree<void*, std::pair<void* const, perftools::gputools::blas::BlasSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>, std::_Select1st<std::pair<void* const, perftools::gputools::blas::BlasSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> >, std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::blas::BlasSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<void* const, perftools::gputools::blas::BlasSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> >, void* const&)
 W std::_Rb_tree<void*, std::pair<void* const, perftools::gputools::blas::BlasSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>, std::_Select1st<std::pair<void* const, perftools::gputools::blas::BlasSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> >, std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::blas::BlasSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> > >::_M_get_insert_unique_pos(void* const&)
 W std::_Rb_tree<void*, std::pair<void* const, perftools::gputools::dnn::DnnSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>, std::_Select1st<std::pair<void* const, perftools::gputools::dnn::DnnSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> >, std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::dnn::DnnSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> > >::_M_erase(std::_Rb_tree_node<std::pair<void* const, perftools::gputools::dnn::DnnSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> >*)
 W std::_Rb_tree<void*, std::pair<void* const, perftools::gputools::dnn::DnnSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>, std::_Select1st<std::pair<void* const, perftools::gputools::dnn::DnnSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> >, std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::dnn::DnnSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<void* const, perftools::gputools::dnn::DnnSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> >, void* const&)
 W std::_Rb_tree<void*, std::pair<void* const, perftools::gputools::dnn::DnnSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>, std::_Select1st<std::pair<void* const, perftools::gputools::dnn::DnnSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> >, std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::dnn::DnnSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> > >::_M_get_insert_unique_pos(void* const&)
 W std::_Rb_tree<void*, std::pair<void* const, perftools::gputools::fft::FftSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>, std::_Select1st<std::pair<void* const, perftools::gputools::fft::FftSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> >, std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::fft::FftSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> > >::_M_erase(std::_Rb_tree_node<std::pair<void* const, perftools::gputools::fft::FftSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> >*)
 W std::_Rb_tree<void*, std::pair<void* const, perftools::gputools::fft::FftSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>, std::_Select1st<std::pair<void* const, perftools::gputools::fft::FftSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> >, std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::fft::FftSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<void* const, perftools::gputools::fft::FftSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> >, void* const&)
 W std::_Rb_tree<void*, std::pair<void* const, perftools::gputools::fft::FftSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>, std::_Select1st<std::pair<void* const, perftools::gputools::fft::FftSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> >, std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::fft::FftSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> > >::_M_get_insert_unique_pos(void* const&)
 W std::_Rb_tree<void*, std::pair<void* const, perftools::gputools::rng::RngSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>, std::_Select1st<std::pair<void* const, perftools::gputools::rng::RngSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> >, std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::rng::RngSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> > >::_M_erase(std::_Rb_tree_node<std::pair<void* const, perftools::gputools::rng::RngSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> >*)
 W std::_Rb_tree<void*, std::pair<void* const, perftools::gputools::rng::RngSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>, std::_Select1st<std::pair<void* const, perftools::gputools::rng::RngSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> >, std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::rng::RngSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<void* const, perftools::gputools::rng::RngSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> >, void* const&)
 W std::_Rb_tree<void*, std::pair<void* const, perftools::gputools::rng::RngSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>, std::_Select1st<std::pair<void* const, perftools::gputools::rng::RngSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> >, std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::rng::RngSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> > >::_M_get_insert_unique_pos(void* const&)
 W std::_Rb_tree<void*, std::pair<void* const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<void* const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<void*>, std::allocator<std::pair<void* const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<void* const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, void* const&)
 W std::_Rb_tree<void*, std::pair<void* const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<void* const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<void*>, std::allocator<std::pair<void* const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_get_insert_unique_pos(void* const&)
 W std::_Rb_tree_iterator<std::pair<char const* const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::_Rb_tree<char const*, std::pair<char const* const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<char const* const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<char const*>, std::allocator<std::pair<char const* const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<char const*&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<char const* const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::piecewise_construct_t const&, std::tuple<char const*&&>&&, std::tuple<>&&)
 W std::_Rb_tree_iterator<std::pair<int const, perftools::gputools::ExecutorCache::Entry> > std::_Rb_tree<int, std::pair<int const, perftools::gputools::ExecutorCache::Entry>, std::_Select1st<std::pair<int const, perftools::gputools::ExecutorCache::Entry> >, std::less<int>, std::allocator<std::pair<int const, perftools::gputools::ExecutorCache::Entry> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, perftools::gputools::ExecutorCache::Entry> >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&)
 W std::_Rb_tree_iterator<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::_Rb_tree<int, std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<int>, std::allocator<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::piecewise_construct_t const&, std::tuple<int&&>&&, std::tuple<>&&)
 W std::_Rb_tree_iterator<std::pair<re2::Regexp* const, int> > std::_Rb_tree<re2::Regexp*, std::pair<re2::Regexp* const, int>, std::_Select1st<std::pair<re2::Regexp* const, int> >, std::less<re2::Regexp*>, std::allocator<std::pair<re2::Regexp* const, int> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<re2::Regexp*&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<re2::Regexp* const, int> >, std::piecewise_construct_t const&, std::tuple<re2::Regexp*&&>&&, std::tuple<>&&)
 W std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>&&, std::tuple<>&&)
 W std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long long> > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long long>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long long> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long long> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, long long> >, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>&&, std::tuple<>&&)
 W std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, perftools::gputools::Platform*> > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, perftools::gputools::Platform*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, perftools::gputools::Platform*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, perftools::gputools::Platform*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, perftools::gputools::Platform*> >, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>&&, std::tuple<>&&)
 W std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, re2::Prefilter*> > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, re2::Prefilter*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, re2::Prefilter*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, re2::Prefilter*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, re2::Prefilter*> >, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>&&, std::tuple<>&&)
 W std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>&&, std::tuple<>&&)
 W std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<unsigned long, unsigned long> > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<unsigned long, unsigned long> >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<unsigned long, unsigned long> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<unsigned long, unsigned long> > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<unsigned long, unsigned long> > >, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>&&, std::tuple<>&&)
 W std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<void const*, int> > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<void const*, int> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<void const*, int> > > >::_M_insert_<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<void const*, int> > const&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<void const*, int> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<void const*, int> > > >::_Alloc_node>(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<void const*, int> > const&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<void const*, int> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<void const*, int> > > >::_Alloc_node&)
 W std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::set<long long, std::less<long long>, std::allocator<long long> > > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::set<long long, std::less<long long>, std::allocator<long long> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::set<long long, std::less<long long>, std::allocator<long long> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::set<long long, std::less<long long>, std::allocator<long long> > > >, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>&&, std::tuple<>&&)
 W std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::AttrValue> > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::AttrValue>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::AttrValue> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::AttrValue> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::AttrValue> >, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>&&, std::tuple<>&&)
 W std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::BundleEntryProto> > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::BundleEntryProto>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::BundleEntryProto> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::BundleEntryProto> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::BundleEntryProto> >, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>&&, std::tuple<>&&)
 W std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::DeviceStepStats*> > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::DeviceStepStats*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::DeviceStepStats*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::DeviceStepStats*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::DeviceStepStats*> >, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>&&, std::tuple<>&&)
 W std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef const*> > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef const*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef const*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef const*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef const*> >, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>&&, std::tuple<>&&)
 W std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*> > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*> >, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>&&, std::tuple<>&&)
 W std::_Rb_tree_iterator<std::pair<void* const, perftools::gputools::PluginRegistry::DefaultFactories> > std::_Rb_tree<void*, std::pair<void* const, perftools::gputools::PluginRegistry::DefaultFactories>, std::_Select1st<std::pair<void* const, perftools::gputools::PluginRegistry::DefaultFactories> >, std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::PluginRegistry::DefaultFactories> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void* const, perftools::gputools::PluginRegistry::DefaultFactories> >, std::piecewise_construct_t const&, std::tuple<void* const&>&&, std::tuple<>&&)
 W std::_Rb_tree_iterator<std::pair<void* const, perftools::gputools::PluginRegistry::PluginFactories> > std::_Rb_tree<void*, std::pair<void* const, perftools::gputools::PluginRegistry::PluginFactories>, std::_Select1st<std::pair<void* const, perftools::gputools::PluginRegistry::PluginFactories> >, std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::PluginRegistry::PluginFactories> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void* const, perftools::gputools::PluginRegistry::PluginFactories> >, std::piecewise_construct_t const&, std::tuple<void* const&>&&, std::tuple<>&&)
 W std::_Rb_tree_iterator<std::pair<void* const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > std::_Rb_tree<void*, std::pair<void* const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<void* const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<void*>, std::allocator<std::pair<void* const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<void* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<void* const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::piecewise_construct_t const&, std::tuple<void* const&>&&, std::tuple<>&&)
 W std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >* std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_copy<std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node>(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const*, std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_Alloc_node&)
 W std::_Rb_tree_node<std::pair<tensorflow::TensorId const, tensorflow::TensorId> >* std::_Rb_tree<tensorflow::TensorId, std::pair<tensorflow::TensorId const, tensorflow::TensorId>, std::_Select1st<std::pair<tensorflow::TensorId const, tensorflow::TensorId> >, std::less<tensorflow::TensorId>, std::allocator<std::pair<tensorflow::TensorId const, tensorflow::TensorId> > >::_M_copy<std::_Rb_tree<tensorflow::TensorId, std::pair<tensorflow::TensorId const, tensorflow::TensorId>, std::_Select1st<std::pair<tensorflow::TensorId const, tensorflow::TensorId> >, std::less<tensorflow::TensorId>, std::allocator<std::pair<tensorflow::TensorId const, tensorflow::TensorId> > >::_Alloc_node>(std::_Rb_tree_node<std::pair<tensorflow::TensorId const, tensorflow::TensorId> > const*, std::_Rb_tree_node<std::pair<tensorflow::TensorId const, tensorflow::TensorId> >*, std::_Rb_tree<tensorflow::TensorId, std::pair<tensorflow::TensorId const, tensorflow::TensorId>, std::_Select1st<std::pair<tensorflow::TensorId const, tensorflow::TensorId> >, std::less<tensorflow::TensorId>, std::allocator<std::pair<tensorflow::TensorId const, tensorflow::TensorId> > >::_Alloc_node&)
 W std::_Rb_tree_node<std::pair<void* const, perftools::gputools::AllocRecord> >* std::_Rb_tree<void*, std::pair<void* const, perftools::gputools::AllocRecord>, std::_Select1st<std::pair<void* const, perftools::gputools::AllocRecord> >, std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::AllocRecord> > >::_M_copy<std::_Rb_tree<void*, std::pair<void* const, perftools::gputools::AllocRecord>, std::_Select1st<std::pair<void* const, perftools::gputools::AllocRecord> >, std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::AllocRecord> > >::_Reuse_or_alloc_node>(std::_Rb_tree_node<std::pair<void* const, perftools::gputools::AllocRecord> > const*, std::_Rb_tree_node<std::pair<void* const, perftools::gputools::AllocRecord> >*, std::_Rb_tree<void*, std::pair<void* const, perftools::gputools::AllocRecord>, std::_Select1st<std::pair<void* const, perftools::gputools::AllocRecord> >, std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::AllocRecord> > >::_Reuse_or_alloc_node&)
 W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_destroy()
 W std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release()
 W std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<std::function<void ()> ()> >, std::allocator<std::thread::_Impl<std::_Bind_simple<std::function<void ()> ()> > >, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
 W std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<std::function<void ()> ()> >, std::allocator<std::thread::_Impl<std::_Bind_simple<std::function<void ()> ()> > >, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
 W std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<std::function<void ()> ()> >, std::allocator<std::thread::_Impl<std::_Bind_simple<std::function<void ()> ()> > >, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
 W std::_Sp_counted_ptr_inplace<std::thread::_Impl<std::_Bind_simple<std::function<void ()> ()> >, std::allocator<std::thread::_Impl<std::_Bind_simple<std::function<void ()> ()> > >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
 W std::_Sp_counted_ptr_inplace<tensorflow::NodeProperties, std::allocator<tensorflow::NodeProperties>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
 W std::_Sp_counted_ptr_inplace<tensorflow::NodeProperties, std::allocator<tensorflow::NodeProperties>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
 W std::_Sp_counted_ptr_inplace<tensorflow::NodeProperties, std::allocator<tensorflow::NodeProperties>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
 W std::_Sp_counted_ptr_inplace<tensorflow::NodeProperties, std::allocator<tensorflow::NodeProperties>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
 W std::_Sp_counted_ptr_inplace<tensorflow::Notification, std::allocator<tensorflow::Notification>, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
 W std::_Sp_counted_ptr_inplace<tensorflow::Notification, std::allocator<tensorflow::Notification>, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
 W std::_Sp_counted_ptr_inplace<tensorflow::Notification, std::allocator<tensorflow::Notification>, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
 W std::_Sp_counted_ptr_inplace<tensorflow::Notification, std::allocator<tensorflow::Notification>, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
 W std::_Temporary_buffer<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::_Temporary_buffer(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > tensorflow::io::JoinPath<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const* const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > tensorflow::io::JoinPath<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > tensorflow::str_util::Join<std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > tensorflow::strings::StrCat<>(tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > tensorflow::strings::StrCat<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, char const* const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > tensorflow::strings::StrCat<long>(tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, long const&)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > tensorflow::strings::StrCat<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > tensorflow::strings::StrCat<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char [2]>(tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const (&) [2])
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > tensorflow::strings::StrCat<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char [3], std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const (&) [3], std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > tensorflow::strings::StrCat<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const* const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > tensorflow::strings::StrCat<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const* const&)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > tensorflow::strings::StrCat<unsigned long>(tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, unsigned long const&)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >& tensorflow::gtl::FlatMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::IndexOp<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__move_merge<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, __gnu_cxx::__ops::_Iter_less_iter)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::Allocator::Allocate<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(unsigned long, tensorflow::AllocationAttributes const&)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<bool, bool>(bool const&, bool const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<char*, char*>(char* const&, char* const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<decltype(nullptr), perftools::gputools::StreamExecutor*>(decltype(nullptr) const&, perftools::gputools::StreamExecutor* const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<decltype(nullptr), tensorflow::TensorBuffer*>(decltype(nullptr) const&, tensorflow::TensorBuffer* const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<double, double>(double const&, double const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<int, int>(int const&, int const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<int, long long>(int const&, long long const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<int, long>(int const&, long const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<int, tensorflow::Graph::{unnamed type#1}>(int const&, tensorflow::Graph::{unnamed type#1} const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<int, unsigned long long>(int const&, unsigned long long const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<int, unsigned long>(int const&, unsigned long const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<long long, int>(long long const&, int const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<long long, long long>(long long const&, long long const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<long long, unsigned int>(long long const&, unsigned int const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<long, int>(long const&, int const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<signed char*, signed char*>(signed char* const&, signed char* const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char [1]>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const (&) [1], char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char [5]>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const (&) [5], char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StringPiece>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::StringPiece const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<std::function<tensorflow::Status (tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)>*, decltype(nullptr)>(std::function<tensorflow::Status (tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)>* const&, decltype(nullptr) const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<tensorflow::BFCAllocator::Bin*, tensorflow::BFCAllocator::Bin*>(tensorflow::BFCAllocator::Bin* const&, tensorflow::BFCAllocator::Bin* const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<tensorflow::DataType, tensorflow::DataType>(tensorflow::DataType const&, tensorflow::DataType const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<tensorflow::Edge const*, tensorflow::Edge*>(tensorflow::Edge const* const&, tensorflow::Edge* const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<tensorflow::StringPiece, char const*>(tensorflow::StringPiece const&, char const* const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<tensorflow::Variant*, tensorflow::Variant*>(tensorflow::Variant* const&, tensorflow::Variant* const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<tensorflow::checkpoint::TensorSliceSet const*, decltype(nullptr)>(tensorflow::checkpoint::TensorSliceSet const* const&, decltype(nullptr) const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<tensorflow::gtl::IntType<tensorflow::Bytes_tag_, long long>, tensorflow::gtl::IntType<tensorflow::Bytes_tag_, long long> >(tensorflow::gtl::IntType<tensorflow::Bytes_tag_, long long> const&, tensorflow::gtl::IntType<tensorflow::Bytes_tag_, long long> const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<tensorflow::sparse::GroupIterable*, tensorflow::sparse::GroupIterable*>(tensorflow::sparse::GroupIterable* const&, tensorflow::sparse::GroupIterable* const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<unsigned char, int>(unsigned char const&, int const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<unsigned int, unsigned int>(unsigned int const&, unsigned int const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<unsigned int, unsigned long>(unsigned int const&, unsigned long const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<unsigned long long, unsigned long long>(unsigned long long const&, unsigned long long const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<unsigned long long, unsigned long>(unsigned long long const&, unsigned long const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<unsigned long, int>(unsigned long const&, int const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<unsigned long, unsigned int>(unsigned long const&, unsigned int const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<unsigned long, unsigned long>(unsigned long const&, unsigned long const&, char const*)
 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* tensorflow::internal::MakeCheckOpString<void*, void*>(void* const&, void* const&, char const*)
 W std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::~basic_stringbuf()
 W std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, true> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>&&, std::tuple<>&&)
 W std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unordered_map<tensorflow::NodeDef*, int, std::hash<tensorflow::NodeDef*>, std::equal_to<tensorflow::NodeDef*>, std::allocator<std::pair<tensorflow::NodeDef* const, int> > > >, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unordered_map<tensorflow::NodeDef*, int, std::hash<tensorflow::NodeDef*>, std::equal_to<tensorflow::NodeDef*>, std::allocator<std::pair<tensorflow::NodeDef* const, int> > > >, true> > >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>&&, std::tuple<>&&)
 W std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece> const, std::function<tensorflow::Status (tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)> >, true> > >::_M_allocate_buckets(unsigned long)
 W std::__detail::_Map_base<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int const&)
 W std::__detail::_Map_base<int, std::pair<int const, tensorflow::io::InputBuffer*>, std::allocator<std::pair<int const, tensorflow::io::InputBuffer*> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](int&&)
 W std::__detail::_Map_base<re2::DFA::State*, std::pair<re2::DFA::State* const, int>, std::allocator<std::pair<re2::DFA::State* const, int> >, std::__detail::_Select1st, std::equal_to<re2::DFA::State*>, std::hash<re2::DFA::State*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](re2::DFA::State* const&)
 W std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<tensorflow::Status (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::checkpoint::TensorSliceReader::Table**), tensorflow::checkpoint::TensorSliceReader*> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<tensorflow::Status (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::checkpoint::TensorSliceReader::Table**), tensorflow::checkpoint::TensorSliceReader*> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::set<tensorflow::NodeDef*, std::less<tensorflow::NodeDef*>, std::allocator<tensorflow::NodeDef*> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::set<tensorflow::NodeDef*, std::less<tensorflow::NodeDef*>, std::allocator<tensorflow::NodeDef*> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::ExtendedInferenceContext, std::default_delete<tensorflow::ExtendedInferenceContext> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::ExtendedInferenceContext, std::default_delete<tensorflow::ExtendedInferenceContext> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unordered_map<tensorflow::NodeDef*, int, std::hash<tensorflow::NodeDef*>, std::equal_to<tensorflow::NodeDef*>, std::allocator<std::pair<tensorflow::NodeDef* const, int> > > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unordered_map<tensorflow::NodeDef*, int, std::hash<tensorflow::NodeDef*>, std::equal_to<tensorflow::NodeDef*>, std::allocator<std::pair<tensorflow::NodeDef* const, int> > > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<std::unique_ptr<tensorflow::NodeExecStatsWrapper, std::default_delete<tensorflow::NodeExecStatsWrapper> >, std::allocator<std::unique_ptr<tensorflow::NodeExecStatsWrapper, std::default_delete<tensorflow::NodeExecStatsWrapper> > > > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<std::unique_ptr<tensorflow::NodeExecStatsWrapper, std::default_delete<tensorflow::NodeExecStatsWrapper> >, std::allocator<std::unique_ptr<tensorflow::NodeExecStatsWrapper, std::default_delete<tensorflow::NodeExecStatsWrapper> > > > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<tensorflow::NodeDef const*, std::allocator<tensorflow::NodeDef const*> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<tensorflow::NodeDef const*, std::allocator<tensorflow::NodeDef const*> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::GraphDef>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::GraphDef> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Node*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Node*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef const*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef const*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
 W std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
 W std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeExecStats>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeExecStats> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpKernel*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpKernel*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Status>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Status> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Tensor> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::__detail::_Map_base<tensorflow::Device*, std::pair<tensorflow::Device* const, std::unique_ptr<tensorflow::FunctionLibraryRuntime, std::default_delete<tensorflow::FunctionLibraryRuntime> > >, std::allocator<std::pair<tensorflow::Device* const, std::unique_ptr<tensorflow::FunctionLibraryRuntime, std::default_delete<tensorflow::FunctionLibraryRuntime> > > >, std::__detail::_Select1st, std::equal_to<tensorflow::Device*>, std::hash<tensorflow::Device*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](tensorflow::Device* const&)
 W std::__detail::_Map_base<tensorflow::Endpoint, std::pair<tensorflow::Endpoint const, tensorflow::MemoryType>, std::allocator<std::pair<tensorflow::Endpoint const, tensorflow::MemoryType> >, std::__detail::_Select1st, tensorflow::EndpointEq, tensorflow::EndpointHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](tensorflow::Endpoint&&)
 W std::__detail::_Map_base<tensorflow::Node const*, std::pair<tensorflow::Node const* const, std::unique_ptr<tensorflow::ExtendedInferenceContext, std::default_delete<tensorflow::ExtendedInferenceContext> > >, std::allocator<std::pair<tensorflow::Node const* const, std::unique_ptr<tensorflow::ExtendedInferenceContext, std::default_delete<tensorflow::ExtendedInferenceContext> > > >, std::__detail::_Select1st, std::equal_to<tensorflow::Node const*>, std::hash<tensorflow::Node const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](tensorflow::Node const* const&)
 W std::__detail::_Map_base<tensorflow::Node const*, std::pair<tensorflow::Node const* const, tensorflow::gtl::FlatSet<tensorflow::Node*, tensorflow::hash<tensorflow::Node*>, std::equal_to<tensorflow::Node*> > >, std::allocator<std::pair<tensorflow::Node const* const, tensorflow::gtl::FlatSet<tensorflow::Node*, tensorflow::hash<tensorflow::Node*>, std::equal_to<tensorflow::Node*> > > >, std::__detail::_Select1st, std::equal_to<tensorflow::Node const*>, std::hash<tensorflow::Node const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](tensorflow::Node const*&&)
 W std::__detail::_Map_base<tensorflow::Node*, std::pair<tensorflow::Node* const, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> > >, std::allocator<std::pair<tensorflow::Node* const, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> > > >, std::__detail::_Select1st, std::equal_to<tensorflow::Node*>, std::hash<tensorflow::Node*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](tensorflow::Node* const&)
 W std::__detail::_Map_base<tensorflow::Node*, std::pair<tensorflow::Node* const, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> > >, std::allocator<std::pair<tensorflow::Node* const, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> > > >, std::__detail::_Select1st, std::equal_to<tensorflow::Node*>, std::hash<tensorflow::Node*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](tensorflow::Node*&&)
 W std::__detail::_Map_base<tensorflow::Node*, std::pair<tensorflow::Node* const, tensorflow::Node*>, std::allocator<std::pair<tensorflow::Node* const, tensorflow::Node*> >, std::__detail::_Select1st, std::equal_to<tensorflow::Node*>, std::hash<tensorflow::Node*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](tensorflow::Node* const&)
 W std::__detail::_Map_base<tensorflow::NodeDef const*, std::pair<tensorflow::NodeDef const* const, int>, std::allocator<std::pair<tensorflow::NodeDef const* const, int> >, std::__detail::_Select1st, std::equal_to<tensorflow::NodeDef const*>, std::hash<tensorflow::NodeDef const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](tensorflow::NodeDef const* const&)
 W std::__detail::_Map_base<tensorflow::NodeDef const*, std::pair<tensorflow::NodeDef const* const, long long>, std::allocator<std::pair<tensorflow::NodeDef const* const, long long> >, std::__detail::_Select1st, std::equal_to<tensorflow::NodeDef const*>, std::hash<tensorflow::NodeDef const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](tensorflow::NodeDef const*&&)
 W std::__detail::_Map_base<tensorflow::StringPiece, std::pair<tensorflow::StringPiece const, tensorflow::Device*>, std::allocator<std::pair<tensorflow::StringPiece const, tensorflow::Device*> >, std::__detail::_Select1st, std::equal_to<tensorflow::StringPiece>, tensorflow::StringPieceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](tensorflow::StringPiece&&)
 W std::__detail::_Map_base<tensorflow::StringPiece, std::pair<tensorflow::StringPiece const, tensorflow::Node const*>, std::allocator<std::pair<tensorflow::StringPiece const, tensorflow::Node const*> >, std::__detail::_Select1st, std::equal_to<tensorflow::StringPiece>, tensorflow::StringPieceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](tensorflow::StringPiece const&)
 W std::__detail::_Map_base<tensorflow::StringPiece, std::pair<tensorflow::StringPiece const, tensorflow::Node*>, std::allocator<std::pair<tensorflow::StringPiece const, tensorflow::Node*> >, std::__detail::_Select1st, std::equal_to<tensorflow::StringPiece>, tensorflow::StringPieceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](tensorflow::StringPiece&&)
 W std::__detail::_Map_base<unsigned long long, std::pair<unsigned long long const, tensorflow::FunctionLibraryRuntimeImpl::Item*>, std::allocator<std::pair<unsigned long long const, tensorflow::FunctionLibraryRuntimeImpl::Item*> >, std::__detail::_Select1st, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](unsigned long long const&)
 W std::__detail::_Map_base<unsigned long long, std::pair<unsigned long long const, tensorflow::ProcessFunctionLibraryRuntime::FunctionData>, std::allocator<std::pair<unsigned long long const, tensorflow::ProcessFunctionLibraryRuntime::FunctionData> >, std::__detail::_Select1st, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](unsigned long long const&)
 W std::__detail::_Map_base<unsigned long, std::pair<unsigned long const, tensorflow::Node*>, std::allocator<std::pair<unsigned long const, tensorflow::Node*> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](unsigned long const&)
 W std::ctype<char>::do_widen(char) const
 W std::deque<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_pop_front_aux()
 W std::deque<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~deque()
 W std::deque<tensorflow::EventMgr::InUse, std::allocator<tensorflow::EventMgr::InUse> >::_M_pop_front_aux()
 W std::function<perftools::gputools::internal::StreamExecutorInterface* (perftools::gputools::PluginConfig const&)>::~function()
 W std::function<void ()>::function(std::function<void ()> const&)
 W std::function<void (perftools::gputools::StreamExecutor*)>::function(std::function<void (perftools::gputools::StreamExecutor*)> const&)
 W std::function<void (std::function<void ()>)>::operator=(std::function<void (std::function<void ()>)> const&)
 W std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
 W std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~map()
 W std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::BundleEntryProto, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::BundleEntryProto> > >::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::operator()()
 W std::pair<std::_Rb_tree_iterator<int>, bool> std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique<int const&>(int const&)
 W std::pair<std::_Rb_tree_iterator<long long>, bool> std::_Rb_tree<long long, long long, std::_Identity<long long>, std::less<long long>, std::allocator<long long> >::_M_insert_unique<long long const&>(long long const&)
 W std::pair<std::_Rb_tree_iterator<perftools::gputools::TraceListener*>, bool> std::_Rb_tree<perftools::gputools::TraceListener*, perftools::gputools::TraceListener*, std::_Identity<perftools::gputools::TraceListener*>, std::less<perftools::gputools::TraceListener*>, std::allocator<perftools::gputools::TraceListener*> >::_M_insert_unique<perftools::gputools::TraceListener* const&>(perftools::gputools::TraceListener* const&)
 W std::pair<std::_Rb_tree_iterator<re2::RuneRange>, bool> std::_Rb_tree<re2::RuneRange, re2::RuneRange, std::_Identity<re2::RuneRange>, re2::RuneRangeLess, std::allocator<re2::RuneRange> >::_M_insert_unique<re2::RuneRange const&>(re2::RuneRange const&)
 W std::pair<std::_Rb_tree_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, bool> std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::_Identity<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_insert_unique<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
 W std::pair<std::_Rb_tree_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, bool> std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::_Identity<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_insert_unique<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W std::pair<std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<void const*, int> > >, bool> std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<void const*, int> >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<void const*, int> > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<void const*, int> > > >::_M_insert_unique<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<void const*, int> > const&>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<void const*, int> > const&)
 W std::pair<std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::monitoring::MetricDescriptor, std::default_delete<tensorflow::monitoring::MetricDescriptor> > > >, bool> std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::monitoring::MetricDescriptor, std::default_delete<tensorflow::monitoring::MetricDescriptor> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::monitoring::MetricDescriptor, std::default_delete<tensorflow::monitoring::MetricDescriptor> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::monitoring::MetricDescriptor, std::default_delete<tensorflow::monitoring::MetricDescriptor> > > > >::_M_insert_unique<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::unique_ptr<tensorflow::monitoring::MetricDescriptor, std::default_delete<tensorflow::monitoring::MetricDescriptor> > > >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::unique_ptr<tensorflow::monitoring::MetricDescriptor, std::default_delete<tensorflow::monitoring::MetricDescriptor> > >&&)
 W std::pair<std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::monitoring::PointSet, std::default_delete<tensorflow::monitoring::PointSet> > > >, bool> std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::monitoring::PointSet, std::default_delete<tensorflow::monitoring::PointSet> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::monitoring::PointSet, std::default_delete<tensorflow::monitoring::PointSet> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::monitoring::PointSet, std::default_delete<tensorflow::monitoring::PointSet> > > > >::_M_insert_unique<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::unique_ptr<tensorflow::monitoring::PointSet, std::default_delete<tensorflow::monitoring::PointSet> > > >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::unique_ptr<tensorflow::monitoring::PointSet, std::default_delete<tensorflow::monitoring::PointSet> > >&&)
 W std::pair<std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::StatSummarizer::Detail> >, bool> std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::StatSummarizer::Detail>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::StatSummarizer::Detail> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::StatSummarizer::Detail> > >::_M_emplace_unique<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, tensorflow::StatSummarizer::Detail>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, tensorflow::StatSummarizer::Detail&&)
 W std::pair<std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::WhileContext> >, bool> std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::WhileContext>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::WhileContext> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::WhileContext> > >::_M_insert_unique<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::WhileContext> >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::WhileContext>&&)
 W std::pair<std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, bool> std::_Rb_tree<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::_Identity<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::less<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_insert_unique<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&)
 W std::pair<std::_Rb_tree_iterator<std::pair<std::array<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, 0ul> const, tensorflow::monitoring::CounterCell> >, bool> std::_Rb_tree<std::array<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, 0ul>, std::pair<std::array<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, 0ul> const, tensorflow::monitoring::CounterCell>, std::_Select1st<std::pair<std::array<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, 0ul> const, tensorflow::monitoring::CounterCell> >, std::less<std::array<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, 0ul> >, std::allocator<std::pair<std::array<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, 0ul> const, tensorflow::monitoring::CounterCell> > >::_M_emplace_unique<std::piecewise_construct_t const&, std::tuple<std::array<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, 0ul> const&>, std::tuple<int&&> >(std::piecewise_construct_t const&, std::tuple<std::array<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, 0ul> const&>&&, std::tuple<int&&>&&)
 W std::pair<std::_Rb_tree_iterator<std::pair<std::pair<tensorflow::Node*, int> const, tensorflow::Node*> >, bool> std::_Rb_tree<std::pair<tensorflow::Node*, int>, std::pair<std::pair<tensorflow::Node*, int> const, tensorflow::Node*>, std::_Select1st<std::pair<std::pair<tensorflow::Node*, int> const, tensorflow::Node*> >, std::less<std::pair<tensorflow::Node*, int> >, std::allocator<std::pair<std::pair<tensorflow::Node*, int> const, tensorflow::Node*> > >::_M_insert_unique<std::pair<std::pair<tensorflow::Node*, int> const, tensorflow::Node*> const&>(std::pair<std::pair<tensorflow::Node*, int> const, tensorflow::Node*> const&)
 W std::pair<std::_Rb_tree_iterator<std::pair<tensorflow::StringPiece const, tensorflow::monitoring::CollectionRegistry::CollectionInfo> >, bool> std::_Rb_tree<tensorflow::StringPiece, std::pair<tensorflow::StringPiece const, tensorflow::monitoring::CollectionRegistry::CollectionInfo>, std::_Select1st<std::pair<tensorflow::StringPiece const, tensorflow::monitoring::CollectionRegistry::CollectionInfo> >, std::less<tensorflow::StringPiece>, std::allocator<std::pair<tensorflow::StringPiece const, tensorflow::monitoring::CollectionRegistry::CollectionInfo> > >::_M_insert_unique<std::pair<tensorflow::StringPiece const, tensorflow::monitoring::CollectionRegistry::CollectionInfo> const&>(std::pair<tensorflow::StringPiece const, tensorflow::monitoring::CollectionRegistry::CollectionInfo> const&)
 W std::pair<std::_Rb_tree_iterator<std::pair<void* const, perftools::gputools::Platform*> >, bool> std::_Rb_tree<void*, std::pair<void* const, perftools::gputools::Platform*>, std::_Select1st<std::pair<void* const, perftools::gputools::Platform*> >, std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::Platform*> > >::_M_insert_unique<std::pair<void*, perftools::gputools::Platform*> >(std::pair<void*, perftools::gputools::Platform*>&&)
 W std::pair<std::_Rb_tree_iterator<tensorflow::Edge const*>, bool> std::_Rb_tree<tensorflow::Edge const*, tensorflow::Edge const*, std::_Identity<tensorflow::Edge const*>, std::less<tensorflow::Edge const*>, std::allocator<tensorflow::Edge const*> >::_M_insert_unique<tensorflow::Edge const* const&>(tensorflow::Edge const* const&)
 W std::pair<std::_Rb_tree_iterator<tensorflow::NodeDef*>, bool> std::_Rb_tree<tensorflow::NodeDef*, tensorflow::NodeDef*, std::_Identity<tensorflow::NodeDef*>, std::less<tensorflow::NodeDef*>, std::allocator<tensorflow::NodeDef*> >::_M_insert_unique<tensorflow::NodeDef* const&>(tensorflow::NodeDef* const&)
 W std::pair<std::_Rb_tree_iterator<tensorflow::TensorId>, bool> std::_Rb_tree<tensorflow::TensorId, tensorflow::TensorId, std::_Identity<tensorflow::TensorId>, std::less<tensorflow::TensorId>, std::allocator<tensorflow::TensorId> >::_M_insert_unique<tensorflow::TensorId const&>(tensorflow::TensorId const&)
 W std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>::~pair()
 W std::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, bool> std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > const&, std::integral_constant<bool, true>)
 W std::pair<std::__detail::_Node_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true, true>, bool> std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > > const&, std::integral_constant<bool, true>)
 W std::pair<std::__detail::_Node_iterator<std::pair<re2::DFA::State* const, int>, false, false>, bool> std::_Hashtable<re2::DFA::State*, std::pair<re2::DFA::State* const, int>, std::allocator<std::pair<re2::DFA::State* const, int> >, std::__detail::_Select1st, std::equal_to<re2::DFA::State*>, std::hash<re2::DFA::State*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<re2::DFA::State*&, int>(std::integral_constant<bool, true>, re2::DFA::State*&, int&&)
 W std::pair<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, false, true>, bool> std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_emplace<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long> >(std::integral_constant<bool, true>, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long>&&)
 W std::pair<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, false, true>, bool> std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, true> > > >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, true> > > const&, std::integral_constant<bool, true>)
 W std::pair<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::FileSystem, std::default_delete<tensorflow::FileSystem> > >, false, true>, bool> std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::FileSystem, std::default_delete<tensorflow::FileSystem> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::FileSystem, std::default_delete<tensorflow::FileSystem> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_emplace<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::unique_ptr<tensorflow::FileSystem, std::default_delete<tensorflow::FileSystem> > >(std::integral_constant<bool, true>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::unique_ptr<tensorflow::FileSystem, std::default_delete<tensorflow::FileSystem> >&&)
 W std::pair<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::MemmappedFileSystem::FileRegion>, false, true>, bool> std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::MemmappedFileSystem::FileRegion>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::MemmappedFileSystem::FileRegion> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_emplace<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::MemmappedFileSystem::FileRegion> >(std::integral_constant<bool, true>, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::MemmappedFileSystem::FileRegion>&&)
 W std::pair<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef*>, false, true>, bool> std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_emplace<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::NodeDef*&>(std::integral_constant<bool, true>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::NodeDef*&)
 W std::pair<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeExecStats>, false, true>, bool> std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeExecStats>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeExecStats> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_emplace<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, tensorflow::NodeExecStats const&>(std::integral_constant<bool, true>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, tensorflow::NodeExecStats const&)
 W std::pair<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::SessionFactory*>, false, true>, bool> std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::SessionFactory*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::SessionFactory*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::SessionFactory*> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::SessionFactory*>, true> > > >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::SessionFactory*> const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::SessionFactory*>, true> > > const&, std::integral_constant<bool, true>)
 W std::pair<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::checkpoint::TensorSliceSet*>, false, true>, bool> std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::checkpoint::TensorSliceSet*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::checkpoint::TensorSliceSet*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_emplace<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::checkpoint::TensorSliceSet*> >(std::integral_constant<bool, true>, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::checkpoint::TensorSliceSet*>&&)
 W std::pair<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::checkpoint::TensorSliceSet::SliceInfo>, false, true>, bool> std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::checkpoint::TensorSliceSet::SliceInfo>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::checkpoint::TensorSliceSet::SliceInfo> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_emplace<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::checkpoint::TensorSliceSet::SliceInfo> >(std::integral_constant<bool, true>, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::checkpoint::TensorSliceSet::SliceInfo>&&)
 W std::pair<std::__detail::_Node_iterator<std::pair<std::pair<tensorflow::VariantDeviceCopyDirection, tensorflow::StringPiece> const, std::function<tensorflow::Status (tensorflow::Variant const&, tensorflow::Variant*, std::function<tensorflow::Status (tensorflow::Tensor const&, tensorflow::Tensor*)>)> >, false, true>, bool> std::_Hashtable<std::pair<tensorflow::VariantDeviceCopyDirection, tensorflow::StringPiece>, std::pair<std::pair<tensorflow::VariantDeviceCopyDirection, tensorflow::StringPiece> const, std::function<tensorflow::Status (tensorflow::Variant const&, tensorflow::Variant*, std::function<tensorflow::Status (tensorflow::Tensor const&, tensorflow::Tensor*)>)> >, std::allocator<std::pair<std::pair<tensorflow::VariantDeviceCopyDirection, tensorflow::StringPiece> const, std::function<tensorflow::Status (tensorflow::Variant const&, tensorflow::Variant*, std::function<tensorflow::Status (tensorflow::Tensor const&, tensorflow::Tensor*)>)> > >, std::__detail::_Select1st, std::equal_to<std::pair<tensorflow::VariantDeviceCopyDirection, tensorflow::StringPiece> >, tensorflow::UnaryVariantOpRegistry::PairHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_emplace<std::pair<std::pair<tensorflow::VariantDeviceCopyDirection, tensorflow::StringPiece>, std::function<tensorflow::Status (tensorflow::Variant const&, tensorflow::Variant*, std::function<tensorflow::Status (tensorflow::Tensor const&, tensorflow::Tensor*)>)> > >(std::integral_constant<bool, true>, std::pair<std::pair<tensorflow::VariantDeviceCopyDirection, tensorflow::StringPiece>, std::function<tensorflow::Status (tensorflow::Variant const&, tensorflow::Variant*, std::function<tensorflow::Status (tensorflow::Tensor const&, tensorflow::Tensor*)>)> >&&)
 W std::pair<std::__detail::_Node_iterator<std::pair<std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece> const, std::function<tensorflow::Status (tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)> >, false, true>, bool> std::_Hashtable<std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::pair<std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece> const, std::function<tensorflow::Status (tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)> >, std::allocator<std::pair<std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece> const, std::function<tensorflow::Status (tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)> > >, std::__detail::_Select1st, std::equal_to<std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece> >, tensorflow::UnaryVariantOpRegistry::TupleHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_emplace<std::pair<std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status (tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)> > >(std::integral_constant<bool, true>, std::pair<std::tuple<tensorflow::VariantBinaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status (tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant const&, tensorflow::Variant*)> >&&)
 W std::pair<std::__detail::_Node_iterator<std::pair<std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece> const, std::function<tensorflow::Status (tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*)> >, false, true>, bool> std::_Hashtable<std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::pair<std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece> const, std::function<tensorflow::Status (tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*)> >, std::allocator<std::pair<std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece> const, std::function<tensorflow::Status (tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*)> > >, std::__detail::_Select1st, std::equal_to<std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece> >, tensorflow::UnaryVariantOpRegistry::TupleHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_emplace<std::pair<std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status (tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*)> > >(std::integral_constant<bool, true>, std::pair<std::tuple<tensorflow::VariantUnaryOp, tensorflow::StringPiece, tensorflow::StringPiece>, std::function<tensorflow::Status (tensorflow::OpKernelContext*, tensorflow::Variant const&, tensorflow::Variant*)> >&&)
 W std::pair<std::__detail::_Node_iterator<std::pair<tensorflow::StringPiece const, std::function<bool (tensorflow::Variant*)> >, false, true>, bool> std::_Hashtable<tensorflow::StringPiece, std::pair<tensorflow::StringPiece const, std::function<bool (tensorflow::Variant*)> >, std::allocator<std::pair<tensorflow::StringPiece const, std::function<bool (tensorflow::Variant*)> > >, std::__detail::_Select1st, std::equal_to<tensorflow::StringPiece>, tensorflow::StringPieceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_emplace<std::pair<tensorflow::StringPiece, std::function<bool (tensorflow::Variant*)> > >(std::integral_constant<bool, true>, std::pair<tensorflow::StringPiece, std::function<bool (tensorflow::Variant*)> >&&)
 W std::pair<std::__detail::_Node_iterator<std::pair<tensorflow::StringPiece const, std::function<tensorflow::Status (tensorflow::Variant const&, tensorflow::TensorShape*)> >, false, true>, bool> std::_Hashtable<tensorflow::StringPiece, std::pair<tensorflow::StringPiece const, std::function<tensorflow::Status (tensorflow::Variant const&, tensorflow::TensorShape*)> >, std::allocator<std::pair<tensorflow::StringPiece const, std::function<tensorflow::Status (tensorflow::Variant const&, tensorflow::TensorShape*)> > >, std::__detail::_Select1st, std::equal_to<tensorflow::StringPiece>, tensorflow::StringPieceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_emplace<std::pair<tensorflow::StringPiece, std::function<tensorflow::Status (tensorflow::Variant const&, tensorflow::TensorShape*)> > >(std::integral_constant<bool, true>, std::pair<tensorflow::StringPiece, std::function<tensorflow::Status (tensorflow::Variant const&, tensorflow::TensorShape*)> >&&)
 W std::pair<std::__detail::_Node_iterator<tensorflow::Node*, true, false>, bool> std::_Hashtable<tensorflow::Node*, tensorflow::Node*, std::allocator<tensorflow::Node*>, std::__detail::_Identity, std::equal_to<tensorflow::Node*>, std::hash<tensorflow::Node*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<tensorflow::Node*, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<tensorflow::Node*, false> > > >(tensorflow::Node*&&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<tensorflow::Node*, false> > > const&, std::integral_constant<bool, true>)
 W std::pair<std::__detail::_Node_iterator<tensorflow::TensorReference, true, true>, bool> std::_Hashtable<tensorflow::TensorReference, tensorflow::TensorReference, std::allocator<tensorflow::TensorReference>, std::__detail::_Identity, tensorflow::UniqueTensorReferences::TensorReferenceEqualFn, tensorflow::UniqueTensorReferences::TensorReferenceHashFn, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<tensorflow::TensorReference&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<tensorflow::TensorReference, true> > > >(tensorflow::TensorReference&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<tensorflow::TensorReference, true> > > const&, std::integral_constant<bool, true>)
 W std::reverse_iterator<char const*> std::__find_if<std::reverse_iterator<char const*>, __gnu_cxx::__ops::_Iter_equals_iter<std::reverse_iterator<char const*> > >(std::reverse_iterator<char const*>, std::reverse_iterator<char const*>, __gnu_cxx::__ops::_Iter_equals_iter<std::reverse_iterator<char const*> >, std::random_access_iterator_tag)
 W std::thread::_Impl<std::_Bind_simple<std::function<void ()> ()> >::_M_run()
 W std::thread::_Impl<std::_Bind_simple<std::function<void ()> ()> >::~_Impl()
 W std::unique_lock<std::mutex>::unlock()
 W std::unique_ptr<perftools::gputools::DeviceDescription, std::default_delete<perftools::gputools::DeviceDescription> >::~unique_ptr()
 W std::unique_ptr<perftools::gputools::StreamExecutor, std::default_delete<perftools::gputools::StreamExecutor> >::~unique_ptr()
 W std::unique_ptr<tensorflow::thread::ThreadPool, std::default_delete<tensorflow::thread::ThreadPool> >::~unique_ptr()
 W std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, double, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double> > >::~unordered_map()
 W std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> > >::~unordered_map()
 W std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >::~unordered_set()
 W std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~unordered_set()
 W std::vector<bool, std::allocator<bool> >::_M_fill_insert(std::_Bit_iterator, unsigned long, bool)
 W std::vector<bool, std::allocator<bool> >::_M_insert_aux(std::_Bit_iterator, bool)
 W std::vector<char const*, std::allocator<char const*> >::_M_default_append(unsigned long)
 W std::vector<float, std::allocator<float> >::resize(unsigned long)
 W std::vector<int, std::allocator<int> >::_M_default_append(unsigned long)
 W std::vector<int, std::allocator<int> >::_M_fill_assign(unsigned long, int const&)
 W std::vector<int, std::allocator<int> >::_M_fill_insert(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, unsigned long, int const&)
 W std::vector<int, std::allocator<int> >::reserve(unsigned long)
 W std::vector<int, std::allocator<int> >::resize(unsigned long)
 W std::vector<long long, std::allocator<long long> >::operator=(std::vector<long long, std::allocator<long long> > const&)
 W std::vector<re2::Prefilter*, std::allocator<re2::Prefilter*> >::_M_default_append(unsigned long)
 W std::vector<re2::PrefilterTree::Entry, std::allocator<re2::PrefilterTree::Entry> >::_M_default_append(unsigned long)
 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > tensorflow::str_util::Split<tensorflow::str_util::AllowEmpty>(tensorflow::StringPiece, tensorflow::StringPiece, tensorflow::str_util::AllowEmpty)
 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > tensorflow::str_util::Split<tensorflow::str_util::SkipEmpty>(tensorflow::StringPiece, tensorflow::StringPiece, tensorflow::str_util::SkipEmpty)
 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_default_append(unsigned long)
 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator=(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
 W std::vector<std::pair<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::vector(std::initializer_list<std::pair<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::pair<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
 W std::vector<std::pair<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::~vector()
 W std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*> > >::_M_shrink_to_fit()
 W std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > >::operator=(std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > > const&)
 W std::vector<std::pair<std::unique_ptr<perftools::gputools::Stream, std::default_delete<perftools::gputools::Stream> >, bool>, std::allocator<std::pair<std::unique_ptr<perftools::gputools::Stream, std::default_delete<perftools::gputools::Stream> >, bool> > >::~vector()
 W std::vector<std::unique_ptr<std::vector<tensorflow::shape_inference::ShapeAndType, std::allocator<tensorflow::shape_inference::ShapeAndType> >, std::default_delete<std::vector<tensorflow::shape_inference::ShapeAndType, std::allocator<tensorflow::shape_inference::ShapeAndType> > > >, std::allocator<std::unique_ptr<std::vector<tensorflow::shape_inference::ShapeAndType, std::allocator<tensorflow::shape_inference::ShapeAndType> >, std::default_delete<std::vector<tensorflow::shape_inference::ShapeAndType, std::allocator<tensorflow::shape_inference::ShapeAndType> > > > > >::_M_default_append(unsigned long)
 W std::vector<std::unique_ptr<tensorflow::checkpoint::TensorSliceReader::Table, std::default_delete<tensorflow::checkpoint::TensorSliceReader::Table> >, std::allocator<std::unique_ptr<tensorflow::checkpoint::TensorSliceReader::Table, std::default_delete<tensorflow::checkpoint::TensorSliceReader::Table> > > >::_M_default_append(unsigned long)
 W std::vector<tensorflow::AllocatorAttributes, std::allocator<tensorflow::AllocatorAttributes> >::vector(std::vector<tensorflow::AllocatorAttributes, std::allocator<tensorflow::AllocatorAttributes> > const&)
 W std::vector<tensorflow::BFCAllocator::Chunk, std::allocator<tensorflow::BFCAllocator::Chunk> >::_M_default_append(unsigned long)
 W std::vector<tensorflow::ControlFlowInfo, std::allocator<tensorflow::ControlFlowInfo> >::_M_default_append(unsigned long)
 W std::vector<tensorflow::CostModel::MemUsage, std::allocator<tensorflow::CostModel::MemUsage> >::_M_default_append(unsigned long)
 W std::vector<tensorflow::CostModel::MemUsage, std::allocator<tensorflow::CostModel::MemUsage> >::reserve(unsigned long)
 W std::vector<tensorflow::DataType, std::allocator<tensorflow::DataType> >::reserve(unsigned long)
 W std::vector<tensorflow::DeviceAttributes, std::allocator<tensorflow::DeviceAttributes> >::reserve(unsigned long)
 W std::vector<tensorflow::DeviceType, std::allocator<tensorflow::DeviceType> >::_M_fill_insert(__gnu_cxx::__normal_iterator<tensorflow::DeviceType*, std::vector<tensorflow::DeviceType, std::allocator<tensorflow::DeviceType> > >, unsigned long, tensorflow::DeviceType const&)
 W std::vector<tensorflow::Edge const*, std::allocator<tensorflow::Edge const*> >::_M_fill_insert(__gnu_cxx::__normal_iterator<tensorflow::Edge const**, std::vector<tensorflow::Edge const*, std::allocator<tensorflow::Edge const*> > >, unsigned long, tensorflow::Edge const* const&)
 W std::vector<tensorflow::Node const*, std::allocator<tensorflow::Node const*> >::_M_default_append(unsigned long)
 W std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> >::operator=(std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> > const&)
 W std::vector<tensorflow::NodeBuilder::NodeOut, std::allocator<tensorflow::NodeBuilder::NodeOut> >::operator=(std::vector<tensorflow::NodeBuilder::NodeOut, std::allocator<tensorflow::NodeBuilder::NodeOut> > const&)
 W std::vector<tensorflow::NodeOut, std::allocator<tensorflow::NodeOut> >::reserve(unsigned long)
 W std::vector<tensorflow::QueueRunnerDef, std::allocator<tensorflow::QueueRunnerDef> >::operator=(std::vector<tensorflow::QueueRunnerDef, std::allocator<tensorflow::QueueRunnerDef> > const&)
 W std::vector<tensorflow::Status, std::allocator<tensorflow::Status> >::_M_default_append(unsigned long)
 W std::vector<tensorflow::Status, std::allocator<tensorflow::Status> >::_M_fill_insert(__gnu_cxx::__normal_iterator<tensorflow::Status*, std::vector<tensorflow::Status, std::allocator<tensorflow::Status> > >, unsigned long, tensorflow::Status const&)
 W std::vector<tensorflow::Tensor const*, std::allocator<tensorflow::Tensor const*> >::_M_default_append(unsigned long)
 W std::vector<tensorflow::Tensor const*, std::allocator<tensorflow::Tensor const*> >::operator=(std::vector<tensorflow::Tensor const*, std::allocator<tensorflow::Tensor const*> > const&)
 W std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >::_M_default_append(unsigned long)
 W std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >::reserve(unsigned long)
 W std::vector<tensorflow::TensorDescription, std::allocator<tensorflow::TensorDescription> >::_M_default_append(unsigned long)
 W std::vector<tensorflow::TensorId, std::allocator<tensorflow::TensorId> >::push_back(tensorflow::TensorId const&)
 W std::vector<tensorflow::TensorSlice, std::allocator<tensorflow::TensorSlice> >::reserve(unsigned long)
 W std::vector<tensorflow::core::Arena::AllocatedBlock, std::allocator<tensorflow::core::Arena::AllocatedBlock> >::_M_default_append(unsigned long)
 W std::vector<tensorflow::gtl::InlinedVector<int, 2>, std::allocator<tensorflow::gtl::InlinedVector<int, 2> > >::_M_default_append(unsigned long)
 W std::vector<tensorflow::gtl::InlinedVector<int, 4>, std::allocator<tensorflow::gtl::InlinedVector<int, 4> > >::_M_default_append(unsigned long)
 W std::vector<tensorflow::gtl::InlinedVector<long long, 2>, std::allocator<tensorflow::gtl::InlinedVector<long long, 2> > >::_M_default_append(unsigned long)
 W std::vector<tensorflow::gtl::InlinedVector<tensorflow::gtl::IntType<tensorflow::Bytes_tag_, long long>, 2>, std::allocator<tensorflow::gtl::InlinedVector<tensorflow::gtl::IntType<tensorflow::Bytes_tag_, long long>, 2> > >::_M_default_append(unsigned long)
 W std::vector<tensorflow::gtl::IntType<tensorflow::Microseconds_tag_, long long>, std::allocator<tensorflow::gtl::IntType<tensorflow::Microseconds_tag_, long long> > >::_M_default_append(unsigned long)
 W std::vector<tensorflow::gtl::IntType<tensorflow::Microseconds_tag_, long long>, std::allocator<tensorflow::gtl::IntType<tensorflow::Microseconds_tag_, long long> > >::reserve(unsigned long)
 W std::vector<tensorflow::shape_inference::DimensionHandle, std::allocator<tensorflow::shape_inference::DimensionHandle> >::reserve(unsigned long)
 W std::vector<tensorflow::shape_inference::ShapeAndType, std::allocator<tensorflow::shape_inference::ShapeAndType> >::operator=(std::vector<tensorflow::shape_inference::ShapeAndType, std::allocator<tensorflow::shape_inference::ShapeAndType> > const&)
 W std::vector<tensorflow::shape_inference::ShapeHandle, std::allocator<tensorflow::shape_inference::ShapeHandle> >::_M_default_append(unsigned long)
 W std::vector<tensorflow::shape_inference::ShapeHandle, std::allocator<tensorflow::shape_inference::ShapeHandle> >::operator=(std::vector<tensorflow::shape_inference::ShapeHandle, std::allocator<tensorflow::shape_inference::ShapeHandle> > const&)
 W std::vector<unsigned char, std::allocator<unsigned char> >::_M_fill_insert(__gnu_cxx::__normal_iterator<unsigned char*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned long, unsigned char const&)
 W tensorflow::AllocationDescription::GetArena() const
 W tensorflow::AllocationDescription::GetCachedSize() const
 W tensorflow::AllocationDescription::GetMaybeArenaPointer() const
 W tensorflow::AllocationDescription::New() const
 W tensorflow::AllocationRecord::GetArena() const
 W tensorflow::AllocationRecord::GetCachedSize() const
 W tensorflow::AllocationRecord::GetMaybeArenaPointer() const
 W tensorflow::AllocationRecord::New() const
 W tensorflow::Allocator::AllocateRaw(unsigned long, unsigned long, tensorflow::AllocationAttributes const&)
 W tensorflow::Allocator::AllocatedSize(void*)
 W tensorflow::Allocator::AllocatedSizeSlow(void*)
 W tensorflow::Allocator::AllocationId(void*)
 W tensorflow::Allocator::GetStats(tensorflow::AllocatorStats*)
 W tensorflow::Allocator::RequestedSize(void*)
 W tensorflow::Allocator::RunResourceCtor(tensorflow::ResourceHandle*, unsigned long)
 W tensorflow::Allocator::RunResourceDtor(tensorflow::ResourceHandle*, unsigned long)
 W tensorflow::Allocator::RunStringCtor(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned long)
 W tensorflow::Allocator::RunStringDtor(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned long)
 W tensorflow::Allocator::RunVariantCtor(tensorflow::Variant*, unsigned long)
 W tensorflow::Allocator::RunVariantDtor(tensorflow::Variant*, unsigned long)
 W tensorflow::Allocator::ShouldAllocateEmptyTensors()
 W tensorflow::Allocator::TracksAllocationSizes()
 W tensorflow::AllocatorMemoryUsed::GetArena() const
 W tensorflow::AllocatorMemoryUsed::GetCachedSize() const
 W tensorflow::AllocatorMemoryUsed::GetMaybeArenaPointer() const
 W tensorflow::AllocatorMemoryUsed::New() const
 W tensorflow::AllocatorWrapper::AllocateRaw(unsigned long, unsigned long)
 W tensorflow::AllocatorWrapper::AllocateRaw(unsigned long, unsigned long, tensorflow::AllocationAttributes const&)
 W tensorflow::AllocatorWrapper::AllocatedSize(void*)
 W tensorflow::AllocatorWrapper::AllocatedSizeSlow(void*)
 W tensorflow::AllocatorWrapper::AllocationId(void*)
 W tensorflow::AllocatorWrapper::DeallocateRaw(void*)
 W tensorflow::AllocatorWrapper::Name[abi:cxx11]()
 W tensorflow::AllocatorWrapper::RequestedSize(void*)
 W tensorflow::AllocatorWrapper::ShouldAllocateEmptyTensors()
 W tensorflow::AllocatorWrapper::TracksAllocationSizes()
 W tensorflow::AllocatorWrapper::~AllocatorWrapper()
 W tensorflow::ApiDef::GetArena() const
 W tensorflow::ApiDef::GetCachedSize() const
 W tensorflow::ApiDef::GetMaybeArenaPointer() const
 W tensorflow::ApiDef::New() const
 W tensorflow::ApiDef_Arg::GetArena() const
 W tensorflow::ApiDef_Arg::GetCachedSize() const
 W tensorflow::ApiDef_Arg::GetMaybeArenaPointer() const
 W tensorflow::ApiDef_Arg::New() const
 W tensorflow::ApiDef_Attr::GetArena() const
 W tensorflow::ApiDef_Attr::GetCachedSize() const
 W tensorflow::ApiDef_Attr::GetMaybeArenaPointer() const
 W tensorflow::ApiDef_Attr::New() const
 W tensorflow::ApiDef_Endpoint::GetArena() const
 W tensorflow::ApiDef_Endpoint::GetCachedSize() const
 W tensorflow::ApiDef_Endpoint::GetMaybeArenaPointer() const
 W tensorflow::ApiDef_Endpoint::New() const
 W tensorflow::ApiDefs::GetArena() const
 W tensorflow::ApiDefs::GetCachedSize() const
 W tensorflow::ApiDefs::GetMaybeArenaPointer() const
 W tensorflow::ApiDefs::New() const
 W tensorflow::AssetFileDef::GetArena() const
 W tensorflow::AssetFileDef::GetCachedSize() const
 W tensorflow::AssetFileDef::GetMaybeArenaPointer() const
 W tensorflow::AssetFileDef::New() const
 W tensorflow::AsyncOpKernel::AsAsync()
 W tensorflow::AsyncOpKernel::IsExpensive()
 W tensorflow::AttrValue::GetArena() const
 W tensorflow::AttrValue::GetCachedSize() const
 W tensorflow::AttrValue::GetMaybeArenaPointer() const
 W tensorflow::AttrValue::New() const
 W tensorflow::AttrValue::mutable_func()
 W tensorflow::AttrValue::mutable_list()
 W tensorflow::AttrValue::mutable_shape()
 W tensorflow::AttrValue::mutable_tensor()
 W tensorflow::AttrValue_ListValue::GetArena() const
 W tensorflow::AttrValue_ListValue::GetCachedSize() const
 W tensorflow::AttrValue_ListValue::GetMaybeArenaPointer() const
 W tensorflow::AttrValue_ListValue::New() const
 W tensorflow::AutoParallelOptions::GetArena() const
 W tensorflow::AutoParallelOptions::GetCachedSize() const
 W tensorflow::AutoParallelOptions::GetMaybeArenaPointer() const
 W tensorflow::AutoParallelOptions::New() const
 W tensorflow::AvailableDeviceInfo::GetArena() const
 W tensorflow::AvailableDeviceInfo::GetCachedSize() const
 W tensorflow::AvailableDeviceInfo::GetMaybeArenaPointer() const
 W tensorflow::AvailableDeviceInfo::New() const
 W tensorflow::BFCAllocator::AddFreeVisitor(std::function<void (void*, unsigned long)>)
 W tensorflow::BFCAllocator::Chunk::DebugString[abi:cxx11](tensorflow::BFCAllocator*, bool)
 W tensorflow::BFCAllocator::Name[abi:cxx11]()
 W tensorflow::BasicCPUAllocator::Alloc(unsigned long, unsigned long)
 W tensorflow::BasicCPUAllocator::Free(void*, unsigned long)
 W tensorflow::BasicCPUAllocator::~BasicCPUAllocator()
 W tensorflow::BenchmarkEntries::GetArena() const
 W tensorflow::BenchmarkEntries::GetCachedSize() const
 W tensorflow::BenchmarkEntries::GetMaybeArenaPointer() const
 W tensorflow::BenchmarkEntries::New() const
 W tensorflow::BenchmarkEntry::BenchmarkEntry_ExtrasEntry::~BenchmarkEntry_ExtrasEntry()
 W tensorflow::BenchmarkEntry::GetArena() const
 W tensorflow::BenchmarkEntry::GetCachedSize() const
 W tensorflow::BenchmarkEntry::GetMaybeArenaPointer() const
 W tensorflow::BenchmarkEntry::New() const
 W tensorflow::BuildConfiguration::GetArena() const
 W tensorflow::BuildConfiguration::GetCachedSize() const
 W tensorflow::BuildConfiguration::GetMaybeArenaPointer() const
 W tensorflow::BuildConfiguration::New() const
 W tensorflow::BundleEntryProto::GetArena() const
 W tensorflow::BundleEntryProto::GetCachedSize() const
 W tensorflow::BundleEntryProto::GetMaybeArenaPointer() const
 W tensorflow::BundleEntryProto::New() const
 W tensorflow::BundleHeaderProto::GetArena() const
 W tensorflow::BundleHeaderProto::GetCachedSize() const
 W tensorflow::BundleHeaderProto::GetMaybeArenaPointer() const
 W tensorflow::BundleHeaderProto::New() const
 W tensorflow::BytesList::GetArena() const
 W tensorflow::BytesList::GetCachedSize() const
 W tensorflow::BytesList::GetMaybeArenaPointer() const
 W tensorflow::BytesList::New() const
 W tensorflow::CPUAllocator::AllocateRaw(unsigned long, unsigned long)
 W tensorflow::CPUAllocator::AllocatedSizeSlow(void*)
 W tensorflow::CPUAllocator::DeallocateRaw(void*)
 W tensorflow::CPUAllocator::GetStats(tensorflow::AllocatorStats*)
 W tensorflow::CPUAllocator::Name[abi:cxx11]()
 W tensorflow::CPUAllocator::~CPUAllocator()
 W tensorflow::CPUInfo::CPUInfo_CacheSizeEntry::~CPUInfo_CacheSizeEntry()
 W tensorflow::CPUInfo::GetArena() const
 W tensorflow::CPUInfo::GetCachedSize() const
 W tensorflow::CPUInfo::GetMaybeArenaPointer() const
 W tensorflow::CPUInfo::New() const
 W tensorflow::CUDAHostAllocator::Alloc(unsigned long, unsigned long)
 W tensorflow::CUDAHostAllocator::Free(void*, unsigned long)
 W tensorflow::CUDAHostAllocator::~CUDAHostAllocator()
 W tensorflow::CallOp::ComputeAsync(tensorflow::OpKernelContext*, std::function<void ()>)
 W tensorflow::CallOp::ComputeAsync(tensorflow::OpKernelContext*, std::function<void ()>)::{lambda(tensorflow::Status const&)#1}::operator()(tensorflow::Status const&) const
 W tensorflow::CallOp::~CallOp()
 W tensorflow::ClusterDef::GetArena() const
 W tensorflow::ClusterDef::GetCachedSize() const
 W tensorflow::ClusterDef::GetMaybeArenaPointer() const
 W tensorflow::ClusterDef::New() const
 W tensorflow::CollectionDef::GetArena() const
 W tensorflow::CollectionDef::GetCachedSize() const
 W tensorflow::CollectionDef::GetMaybeArenaPointer() const
 W tensorflow::CollectionDef::New() const
 W tensorflow::CollectionDef::mutable_any_list()
 W tensorflow::CollectionDef::mutable_bytes_list()
 W tensorflow::CollectionDef::mutable_float_list()
 W tensorflow::CollectionDef::mutable_int64_list()
 W tensorflow::CollectionDef::mutable_node_list()
 W tensorflow::CollectionDef_AnyList::GetArena() const
 W tensorflow::CollectionDef_AnyList::GetCachedSize() const
 W tensorflow::CollectionDef_AnyList::GetMaybeArenaPointer() const
 W tensorflow::CollectionDef_AnyList::New() const
 W tensorflow::CollectionDef_BytesList::GetArena() const
 W tensorflow::CollectionDef_BytesList::GetCachedSize() const
 W tensorflow::CollectionDef_BytesList::GetMaybeArenaPointer() const
 W tensorflow::CollectionDef_BytesList::New() const
 W tensorflow::CollectionDef_FloatList::GetArena() const
 W tensorflow::CollectionDef_FloatList::GetCachedSize() const
 W tensorflow::CollectionDef_FloatList::GetMaybeArenaPointer() const
 W tensorflow::CollectionDef_FloatList::New() const
 W tensorflow::CollectionDef_Int64List::GetArena() const
 W tensorflow::CollectionDef_Int64List::GetCachedSize() const
 W tensorflow::CollectionDef_Int64List::GetMaybeArenaPointer() const
 W tensorflow::CollectionDef_Int64List::New() const
 W tensorflow::CollectionDef_NodeList::GetArena() const
 W tensorflow::CollectionDef_NodeList::GetCachedSize() const
 W tensorflow::CollectionDef_NodeList::GetMaybeArenaPointer() const
 W tensorflow::CollectionDef_NodeList::New() const
 W tensorflow::CommitId::GetArena() const
 W tensorflow::CommitId::GetCachedSize() const
 W tensorflow::CommitId::GetMaybeArenaPointer() const
 W tensorflow::CommitId::New() const
 W tensorflow::CondContextDef::GetArena() const
 W tensorflow::CondContextDef::GetCachedSize() const
 W tensorflow::CondContextDef::GetMaybeArenaPointer() const
 W tensorflow::CondContextDef::New() const
 W tensorflow::ConfigProto::ConfigProto_DeviceCountEntry::~ConfigProto_DeviceCountEntry()
 W tensorflow::ConfigProto::GetArena() const
 W tensorflow::ConfigProto::GetCachedSize() const
 W tensorflow::ConfigProto::GetMaybeArenaPointer() const
 W tensorflow::ConfigProto::New() const
 W tensorflow::CopyTensor::Registration::Registration(tensorflow::DeviceType, tensorflow::DeviceType, void (*)(tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>))
 W tensorflow::CostGraphDef::GetArena() const
 W tensorflow::CostGraphDef::GetCachedSize() const
 W tensorflow::CostGraphDef::GetMaybeArenaPointer() const
 W tensorflow::CostGraphDef::New() const
 W tensorflow::CostGraphDef_Node::GetArena() const
 W tensorflow::CostGraphDef_Node::GetCachedSize() const
 W tensorflow::CostGraphDef_Node::GetMaybeArenaPointer() const
 W tensorflow::CostGraphDef_Node::New() const
 W tensorflow::CostGraphDef_Node_InputInfo::GetArena() const
 W tensorflow::CostGraphDef_Node_InputInfo::GetCachedSize() const
 W tensorflow::CostGraphDef_Node_InputInfo::GetMaybeArenaPointer() const
 W tensorflow::CostGraphDef_Node_InputInfo::New() const
 W tensorflow::CostGraphDef_Node_OutputInfo::GetArena() const
 W tensorflow::CostGraphDef_Node_OutputInfo::GetCachedSize() const
 W tensorflow::CostGraphDef_Node_OutputInfo::GetMaybeArenaPointer() const
 W tensorflow::CostGraphDef_Node_OutputInfo::New() const
 W tensorflow::DebugOptions::GetArena() const
 W tensorflow::DebugOptions::GetCachedSize() const
 W tensorflow::DebugOptions::GetMaybeArenaPointer() const
 W tensorflow::DebugOptions::New() const
 W tensorflow::DebugTensorWatch::GetArena() const
 W tensorflow::DebugTensorWatch::GetCachedSize() const
 W tensorflow::DebugTensorWatch::GetMaybeArenaPointer() const
 W tensorflow::DebugTensorWatch::New() const
 W tensorflow::DebuggedSourceFile::GetArena() const
 W tensorflow::DebuggedSourceFile::GetCachedSize() const
 W tensorflow::DebuggedSourceFile::GetMaybeArenaPointer() const
 W tensorflow::DebuggedSourceFile::New() const
 W tensorflow::DebuggedSourceFiles::GetArena() const
 W tensorflow::DebuggedSourceFiles::GetCachedSize() const
 W tensorflow::DebuggedSourceFiles::GetMaybeArenaPointer() const
 W tensorflow::DebuggedSourceFiles::New() const
 W tensorflow::Device::Compute(tensorflow::OpKernel*, tensorflow::OpKernelContext*)
 W tensorflow::Device::ComputeAsync(tensorflow::AsyncOpKernel*, tensorflow::OpKernelContext*, std::function<void ()>)
 W tensorflow::Device::ConsumeListOfAccessedTensors(tensorflow::DeviceContext*, tensorflow::gtl::InlinedVector<tensorflow::TensorReference, 4> const&)
 W tensorflow::Device::FillContextMap(tensorflow::Graph const*, std::vector<tensorflow::DeviceContext*, std::allocator<tensorflow::DeviceContext*> >*)
 W tensorflow::Device::MaybeRewriteGraph(std::unique_ptr<tensorflow::Graph, std::default_delete<tensorflow::Graph> >*)
 W tensorflow::Device::attributes() const
 W tensorflow::Device::name[abi:cxx11]() const
 W tensorflow::Device::resource_manager()
 W tensorflow::DeviceAttributes::GetArena() const
 W tensorflow::DeviceAttributes::GetCachedSize() const
 W tensorflow::DeviceAttributes::GetMaybeArenaPointer() const
 W tensorflow::DeviceAttributes::New() const
 W tensorflow::DeviceBase::GetAllocator(tensorflow::AllocatorAttributes)
 W tensorflow::DeviceBase::GetStepAllocator(tensorflow::AllocatorAttributes, tensorflow::ResourceMgr*)
 W tensorflow::DeviceBase::MakeGpuDevice()
 W tensorflow::DeviceBase::MakeTensorFromProto(tensorflow::TensorProto const&, tensorflow::AllocatorAttributes, tensorflow::Tensor*)
 W tensorflow::DeviceBase::ReinitializeGpuDevice(tensorflow::OpKernelContext*, tensorflow::PerOpGpuDevice*, tensorflow::DeviceContext*, tensorflow::Allocator*)
 W tensorflow::DeviceBase::RequiresRecordingAccessedTensors() const
 W tensorflow::DeviceBase::UnderlyingDevice()
 W tensorflow::DeviceBase::UnderlyingDevice() const
 W tensorflow::DeviceBase::eigen_cpu_device()
 W tensorflow::DeviceBase::tensorflow_cpu_worker_threads() const
 W tensorflow::DeviceBase::tensorflow_device_thread_pool()
 W tensorflow::DeviceBase::tensorflow_gpu_device_info() const
 W tensorflow::DeviceContext::CopyCPUTensorToDevice(tensorflow::Tensor const*, tensorflow::Device*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>) const
 W tensorflow::DeviceContext::CopyDeviceTensorToCPU(tensorflow::Tensor const*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)
 W tensorflow::DeviceContext::MaintainLifetimeOnStream(tensorflow::Tensor const*, perftools::gputools::Stream*) const
 W tensorflow::DeviceContext::stream() const
 W tensorflow::DeviceContext::~DeviceContext()
 W tensorflow::DeviceLocality::GetArena() const
 W tensorflow::DeviceLocality::GetCachedSize() const
 W tensorflow::DeviceLocality::GetMaybeArenaPointer() const
 W tensorflow::DeviceLocality::New() const
 W tensorflow::DeviceNameUtils::ParsedName::~ParsedName()
 W tensorflow::DeviceProperties::DeviceProperties_EnvironmentEntry::~DeviceProperties_EnvironmentEntry()
 W tensorflow::DeviceProperties::GetArena() const
 W tensorflow::DeviceProperties::GetCachedSize() const
 W tensorflow::DeviceProperties::GetMaybeArenaPointer() const
 W tensorflow::DeviceProperties::New() const
 W tensorflow::DeviceStepStats::GetArena() const
 W tensorflow::DeviceStepStats::GetCachedSize() const
 W tensorflow::DeviceStepStats::GetMaybeArenaPointer() const
 W tensorflow::DeviceStepStats::New() const
 W tensorflow::EdgeSet::end() const
 W tensorflow::EigenThreadPoolWrapper::CurrentThreadId() const
 W tensorflow::EigenThreadPoolWrapper::NumThreads() const
 W tensorflow::EigenThreadPoolWrapper::Schedule(std::function<void ()>)
 W tensorflow::EigenThreadPoolWrapper::~EigenThreadPoolWrapper()
 W tensorflow::EntryValue::GetArena() const
 W tensorflow::EntryValue::GetCachedSize() const
 W tensorflow::EntryValue::GetMaybeArenaPointer() const
 W tensorflow::EntryValue::New() const
 W tensorflow::Env::NowMicros()
 W tensorflow::Env::NowSeconds()
 W tensorflow::EnvTime::NowSeconds()
 W tensorflow::EnvWrapper::FormatLibraryFileName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W tensorflow::EnvWrapper::GetFileSystemForFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::FileSystem**)
 W tensorflow::EnvWrapper::GetRegisteredFileSystemSchemes(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)
 W tensorflow::EnvWrapper::GetSymbolFromLibrary(void*, char const*, void**)
 W tensorflow::EnvWrapper::LoadLibrary(char const*, void**)
 W tensorflow::EnvWrapper::MatchPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W tensorflow::EnvWrapper::NowMicros()
 W tensorflow::EnvWrapper::RegisterFileSystem(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::FileSystem* ()>)
 W tensorflow::EnvWrapper::SchedClosure(std::function<void ()>)
 W tensorflow::EnvWrapper::SchedClosureAfter(long long, std::function<void ()>)
 W tensorflow::EnvWrapper::SleepForMicroseconds(long long)
 W tensorflow::EnvWrapper::StartThread(tensorflow::ThreadOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<void ()>)
 W tensorflow::Event::GetArena() const
 W tensorflow::Event::GetCachedSize() const
 W tensorflow::Event::GetMaybeArenaPointer() const
 W tensorflow::Event::New() const
 W tensorflow::Example::GetArena() const
 W tensorflow::Example::GetCachedSize() const
 W tensorflow::Example::GetMaybeArenaPointer() const
 W tensorflow::Example::New() const
 W tensorflow::ExampleParserConfiguration::ExampleParserConfiguration_FeatureMapEntry::~ExampleParserConfiguration_FeatureMapEntry()
 W tensorflow::ExampleParserConfiguration::GetArena() const
 W tensorflow::ExampleParserConfiguration::GetCachedSize() const
 W tensorflow::ExampleParserConfiguration::GetMaybeArenaPointer() const
 W tensorflow::ExampleParserConfiguration::New() const
 W tensorflow::Executor::Args::~Args()
 W tensorflow::Feature* tensorflow::GetFeature<tensorflow::Example>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Example*)
 W tensorflow::Feature::GetArena() const
 W tensorflow::Feature::GetCachedSize() const
 W tensorflow::Feature::GetMaybeArenaPointer() const
 W tensorflow::Feature::New() const
 W tensorflow::Feature::mutable_bytes_list()
 W tensorflow::Feature::mutable_float_list()
 W tensorflow::Feature::mutable_int64_list()
 W tensorflow::FeatureConfiguration::GetArena() const
 W tensorflow::FeatureConfiguration::GetCachedSize() const
 W tensorflow::FeatureConfiguration::GetMaybeArenaPointer() const
 W tensorflow::FeatureConfiguration::New() const
 W tensorflow::FeatureConfiguration::mutable_fixed_len_feature()
 W tensorflow::FeatureConfiguration::mutable_var_len_feature()
 W tensorflow::FeatureList::GetArena() const
 W tensorflow::FeatureList::GetCachedSize() const
 W tensorflow::FeatureList::GetMaybeArenaPointer() const
 W tensorflow::FeatureList::New() const
 W tensorflow::FeatureLists::FeatureLists_FeatureListEntry::~FeatureLists_FeatureListEntry()
 W tensorflow::FeatureLists::GetArena() const
 W tensorflow::FeatureLists::GetCachedSize() const
 W tensorflow::FeatureLists::GetMaybeArenaPointer() const
 W tensorflow::FeatureLists::New() const
 W tensorflow::Features::Features_FeatureEntry::~Features_FeatureEntry()
 W tensorflow::Features::GetArena() const
 W tensorflow::Features::GetCachedSize() const
 W tensorflow::Features::GetMaybeArenaPointer() const
 W tensorflow::Features::New() const
 W tensorflow::FileSystemRegistryImpl::~FileSystemRegistryImpl()
 W tensorflow::FixedLenFeatureProto::GetArena() const
 W tensorflow::FixedLenFeatureProto::GetCachedSize() const
 W tensorflow::FixedLenFeatureProto::GetMaybeArenaPointer() const
 W tensorflow::FixedLenFeatureProto::New() const
 W tensorflow::FloatList::GetArena() const
 W tensorflow::FloatList::GetCachedSize() const
 W tensorflow::FloatList::GetMaybeArenaPointer() const
 W tensorflow::FloatList::New() const
 W tensorflow::FunctionCallFrame::num_args() const
 W tensorflow::FunctionCallFrame::num_retvals() const
 W tensorflow::FunctionDef::FunctionDef_AttrEntry::~FunctionDef_AttrEntry()
 W tensorflow::FunctionDef::FunctionDef_RetEntry::~FunctionDef_RetEntry()
 W tensorflow::FunctionDef::GetArena() const
 W tensorflow::FunctionDef::GetCachedSize() const
 W tensorflow::FunctionDef::GetMaybeArenaPointer() const
 W tensorflow::FunctionDef::New() const
 W tensorflow::FunctionDefLibrary::GetArena() const
 W tensorflow::FunctionDefLibrary::GetCachedSize() const
 W tensorflow::FunctionDefLibrary::GetMaybeArenaPointer() const
 W tensorflow::FunctionDefLibrary::New() const
 W tensorflow::FunctionLibraryRuntime::Options::~Options()
 W tensorflow::FunctionLibraryRuntimeImpl::GetFunctionLibraryDefinition() const
 W tensorflow::FunctionLibraryRuntimeImpl::Item::~Item()
 W tensorflow::FunctionLibraryRuntimeImpl::device()
 W tensorflow::FunctionLibraryRuntimeImpl::env()
 W tensorflow::FunctionLibraryRuntimeImpl::graph_def_version()
 W tensorflow::GPUBFCAllocator::~GPUBFCAllocator()
 W tensorflow::GPUDebugAllocator::Name[abi:cxx11]()
 W tensorflow::GPUDeviceContext::MaintainLifetimeOnStream(tensorflow::Tensor const*, perftools::gputools::Stream*) const
 W tensorflow::GPUDeviceContext::stream() const
 W tensorflow::GPUDeviceContext::~GPUDeviceContext()
 W tensorflow::GPUInfo::GetArena() const
 W tensorflow::GPUInfo::GetCachedSize() const
 W tensorflow::GPUInfo::GetMaybeArenaPointer() const
 W tensorflow::GPUInfo::New() const
 W tensorflow::GPUMemAllocator::Alloc(unsigned long, unsigned long)
 W tensorflow::GPUMemAllocator::Free(void*, unsigned long)
 W tensorflow::GPUMemAllocator::~GPUMemAllocator()
 W tensorflow::GPUNanResetAllocator::Name[abi:cxx11]()
 W tensorflow::GPUOptions::GetArena() const
 W tensorflow::GPUOptions::GetCachedSize() const
 W tensorflow::GPUOptions::GetMaybeArenaPointer() const
 W tensorflow::GPUOptions::New() const
 W tensorflow::GPUcudaMallocAllocator::Name[abi:cxx11]()
 W tensorflow::GetTensorSpatialDimIndex(int, tensorflow::TensorFormat, int)
 W tensorflow::GpuManagedAllocator::Name[abi:cxx11]()
 W tensorflow::GpuManagedAllocator::~GpuManagedAllocator()
 W tensorflow::GradientDef::GetArena() const
 W tensorflow::GradientDef::GetCachedSize() const
 W tensorflow::GradientDef::GetMaybeArenaPointer() const
 W tensorflow::GradientDef::New() const
 W tensorflow::GraphDef::GetArena() const
 W tensorflow::GraphDef::GetCachedSize() const
 W tensorflow::GraphDef::GetMaybeArenaPointer() const
 W tensorflow::GraphDef::New() const
 W tensorflow::GraphOptions::GetArena() const
 W tensorflow::GraphOptions::GetCachedSize() const
 W tensorflow::GraphOptions::GetMaybeArenaPointer() const
 W tensorflow::GraphOptions::New() const
 W tensorflow::GraphTransferInfo::GetArena() const
 W tensorflow::GraphTransferInfo::GetCachedSize() const
 W tensorflow::GraphTransferInfo::GetMaybeArenaPointer() const
 W tensorflow::GraphTransferInfo::New() const
 W tensorflow::GraphTransferInfo_ConstNodeInfo::GetArena() const
 W tensorflow::GraphTransferInfo_ConstNodeInfo::GetCachedSize() const
 W tensorflow::GraphTransferInfo_ConstNodeInfo::GetMaybeArenaPointer() const
 W tensorflow::GraphTransferInfo_ConstNodeInfo::New() const
 W tensorflow::GraphTransferInfo_GraphInputNodeInfo::GetArena() const
 W tensorflow::GraphTransferInfo_GraphInputNodeInfo::GetCachedSize() const
 W tensorflow::GraphTransferInfo_GraphInputNodeInfo::GetMaybeArenaPointer() const
 W tensorflow::GraphTransferInfo_GraphInputNodeInfo::New() const
 W tensorflow::GraphTransferInfo_GraphOutputNodeInfo::GetArena() const
 W tensorflow::GraphTransferInfo_GraphOutputNodeInfo::GetCachedSize() const
 W tensorflow::GraphTransferInfo_GraphOutputNodeInfo::GetMaybeArenaPointer() const
 W tensorflow::GraphTransferInfo_GraphOutputNodeInfo::New() const
 W tensorflow::GraphTransferInfo_NodeInfo::GetArena() const
 W tensorflow::GraphTransferInfo_NodeInfo::GetCachedSize() const
 W tensorflow::GraphTransferInfo_NodeInfo::GetMaybeArenaPointer() const
 W tensorflow::GraphTransferInfo_NodeInfo::New() const
 W tensorflow::GraphTransferInfo_NodeInput::GetArena() const
 W tensorflow::GraphTransferInfo_NodeInput::GetCachedSize() const
 W tensorflow::GraphTransferInfo_NodeInput::GetMaybeArenaPointer() const
 W tensorflow::GraphTransferInfo_NodeInput::New() const
 W tensorflow::GraphTransferInfo_NodeInputInfo::GetArena() const
 W tensorflow::GraphTransferInfo_NodeInputInfo::GetCachedSize() const
 W tensorflow::GraphTransferInfo_NodeInputInfo::GetMaybeArenaPointer() const
 W tensorflow::GraphTransferInfo_NodeInputInfo::New() const
 W tensorflow::GraphTransferInfo_NodeOutputInfo::GetArena() const
 W tensorflow::GraphTransferInfo_NodeOutputInfo::GetCachedSize() const
 W tensorflow::GraphTransferInfo_NodeOutputInfo::GetMaybeArenaPointer() const
 W tensorflow::GraphTransferInfo_NodeOutputInfo::New() const
 W tensorflow::HistogramProto::GetArena() const
 W tensorflow::HistogramProto::GetCachedSize() const
 W tensorflow::HistogramProto::GetMaybeArenaPointer() const
 W tensorflow::HistogramProto::New() const
 W tensorflow::Int64List::GetArena() const
 W tensorflow::Int64List::GetCachedSize() const
 W tensorflow::Int64List::GetMaybeArenaPointer() const
 W tensorflow::Int64List::New() const
 W tensorflow::IteratorStateMetadata::GetArena() const
 W tensorflow::IteratorStateMetadata::GetCachedSize() const
 W tensorflow::IteratorStateMetadata::GetMaybeArenaPointer() const
 W tensorflow::IteratorStateMetadata::New() const
 W tensorflow::JobDef::GetArena() const
 W tensorflow::JobDef::GetCachedSize() const
 W tensorflow::JobDef::GetMaybeArenaPointer() const
 W tensorflow::JobDef::JobDef_TasksEntry::~JobDef_TasksEntry()
 W tensorflow::JobDef::New() const
 W tensorflow::KernelDef::GetArena() const
 W tensorflow::KernelDef::GetCachedSize() const
 W tensorflow::KernelDef::GetMaybeArenaPointer() const
 W tensorflow::KernelDef::New() const
 W tensorflow::KernelDef_AttrConstraint::GetArena() const
 W tensorflow::KernelDef_AttrConstraint::GetCachedSize() const
 W tensorflow::KernelDef_AttrConstraint::GetMaybeArenaPointer() const
 W tensorflow::KernelDef_AttrConstraint::New() const
 W tensorflow::LocalDevice::EigenThreadPoolInfo::EigenThreadPoolInfo(tensorflow::SessionOptions const&)
 W tensorflow::LocalPosixFileSystem::TranslateName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
 W tensorflow::LocalPosixFileSystem::~LocalPosixFileSystem()
 W tensorflow::LocalRendezvousImpl::RecvAsync(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, std::function<void (tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)>)
 W tensorflow::LocalRendezvousImpl::Send(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)
 W tensorflow::LocalRendezvousImpl::StartAbort(tensorflow::Status const&)
 W tensorflow::LocalRendezvousImpl::~LocalRendezvousImpl()
 W tensorflow::LogMessage::GetArena() const
 W tensorflow::LogMessage::GetCachedSize() const
 W tensorflow::LogMessage::GetMaybeArenaPointer() const
 W tensorflow::LogMessage::New() const
 W tensorflow::MachineConfiguration::GetArena() const
 W tensorflow::MachineConfiguration::GetCachedSize() const
 W tensorflow::MachineConfiguration::GetMaybeArenaPointer() const
 W tensorflow::MachineConfiguration::New() const
 W tensorflow::MemmappedEnv::~MemmappedEnv()
 W tensorflow::MemmappedFileSystem::~MemmappedFileSystem()
 W tensorflow::MemmappedFileSystemDirectory::GetArena() const
 W tensorflow::MemmappedFileSystemDirectory::GetCachedSize() const
 W tensorflow::MemmappedFileSystemDirectory::GetMaybeArenaPointer() const
 W tensorflow::MemmappedFileSystemDirectory::New() const
 W tensorflow::MemmappedFileSystemDirectoryElement::GetArena() const
 W tensorflow::MemmappedFileSystemDirectoryElement::GetCachedSize() const
 W tensorflow::MemmappedFileSystemDirectoryElement::GetMaybeArenaPointer() const
 W tensorflow::MemmappedFileSystemDirectoryElement::New() const
 W tensorflow::MemoryInfo::GetArena() const
 W tensorflow::MemoryInfo::GetCachedSize() const
 W tensorflow::MemoryInfo::GetMaybeArenaPointer() const
 W tensorflow::MemoryInfo::New() const
 W tensorflow::MemoryLogRawAllocation::GetArena() const
 W tensorflow::MemoryLogRawAllocation::GetCachedSize() const
 W tensorflow::MemoryLogRawAllocation::GetMaybeArenaPointer() const
 W tensorflow::MemoryLogRawAllocation::New() const
 W tensorflow::MemoryLogRawDeallocation::GetArena() const
 W tensorflow::MemoryLogRawDeallocation::GetCachedSize() const
 W tensorflow::MemoryLogRawDeallocation::GetMaybeArenaPointer() const
 W tensorflow::MemoryLogRawDeallocation::New() const
 W tensorflow::MemoryLogStep::GetArena() const
 W tensorflow::MemoryLogStep::GetCachedSize() const
 W tensorflow::MemoryLogStep::GetMaybeArenaPointer() const
 W tensorflow::MemoryLogStep::New() const
 W tensorflow::MemoryLogTensorAllocation::GetArena() const
 W tensorflow::MemoryLogTensorAllocation::GetCachedSize() const
 W tensorflow::MemoryLogTensorAllocation::GetMaybeArenaPointer() const
 W tensorflow::MemoryLogTensorAllocation::New() const
 W tensorflow::MemoryLogTensorDeallocation::GetArena() const
 W tensorflow::MemoryLogTensorDeallocation::GetCachedSize() const
 W tensorflow::MemoryLogTensorDeallocation::GetMaybeArenaPointer() const
 W tensorflow::MemoryLogTensorDeallocation::New() const
 W tensorflow::MemoryLogTensorOutput::GetArena() const
 W tensorflow::MemoryLogTensorOutput::GetCachedSize() const
 W tensorflow::MemoryLogTensorOutput::GetMaybeArenaPointer() const
 W tensorflow::MemoryLogTensorOutput::New() const
 W tensorflow::MemoryStats::GetArena() const
 W tensorflow::MemoryStats::GetCachedSize() const
 W tensorflow::MemoryStats::GetMaybeArenaPointer() const
 W tensorflow::MemoryStats::New() const
 W tensorflow::MetaGraphDef::GetArena() const
 W tensorflow::MetaGraphDef::GetCachedSize() const
 W tensorflow::MetaGraphDef::GetMaybeArenaPointer() const
 W tensorflow::MetaGraphDef::MetaGraphDef_CollectionDefEntry::~MetaGraphDef_CollectionDefEntry()
 W tensorflow::MetaGraphDef::MetaGraphDef_SignatureDefEntry::~MetaGraphDef_SignatureDefEntry()
 W tensorflow::MetaGraphDef::New() const
 W tensorflow::MetaGraphDef_MetaInfoDef::GetArena() const
 W tensorflow::MetaGraphDef_MetaInfoDef::GetCachedSize() const
 W tensorflow::MetaGraphDef_MetaInfoDef::GetMaybeArenaPointer() const
 W tensorflow::MetaGraphDef_MetaInfoDef::New() const
 W tensorflow::NameAttrList::GetArena() const
 W tensorflow::NameAttrList::GetCachedSize() const
 W tensorflow::NameAttrList::GetMaybeArenaPointer() const
 W tensorflow::NameAttrList::NameAttrList_AttrEntry::~NameAttrList_AttrEntry()
 W tensorflow::NameAttrList::New() const
 W tensorflow::NamedDevice::GetArena() const
 W tensorflow::NamedDevice::GetCachedSize() const
 W tensorflow::NamedDevice::GetMaybeArenaPointer() const
 W tensorflow::NamedDevice::New() const
 W tensorflow::NamedTensorProto::GetArena() const
 W tensorflow::NamedTensorProto::GetCachedSize() const
 W tensorflow::NamedTensorProto::GetMaybeArenaPointer() const
 W tensorflow::NamedTensorProto::New() const
 W tensorflow::NodeBuilder::~NodeBuilder()
 W tensorflow::NodeDef::GetArena() const
 W tensorflow::NodeDef::GetCachedSize() const
 W tensorflow::NodeDef::GetMaybeArenaPointer() const
 W tensorflow::NodeDef::New() const
 W tensorflow::NodeDef::NodeDef_AttrEntry::~NodeDef_AttrEntry()
 W tensorflow::NodeDefBuilder::~NodeDefBuilder()
 W tensorflow::NodeExecStats::GetArena() const
 W tensorflow::NodeExecStats::GetCachedSize() const
 W tensorflow::NodeExecStats::GetMaybeArenaPointer() const
 W tensorflow::NodeExecStats::New() const
 W tensorflow::NodeOutput::GetArena() const
 W tensorflow::NodeOutput::GetCachedSize() const
 W tensorflow::NodeOutput::GetMaybeArenaPointer() const
 W tensorflow::NodeOutput::New() const
 W tensorflow::NoopRounder::RoundUp(unsigned long)
 W tensorflow::NoopRounder::~NoopRounder()
 W tensorflow::NullFileSystem::CreateDir(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W tensorflow::NullFileSystem::DeleteDir(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W tensorflow::NullFileSystem::DeleteFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W tensorflow::NullFileSystem::FileExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W tensorflow::NullFileSystem::GetChildren(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)
 W tensorflow::NullFileSystem::GetFileSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long long*)
 W tensorflow::NullFileSystem::NewAppendableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<tensorflow::WritableFile, std::default_delete<tensorflow::WritableFile> >*)
 W tensorflow::NullFileSystem::NewRandomAccessFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<tensorflow::RandomAccessFile, std::default_delete<tensorflow::RandomAccessFile> >*)
 W tensorflow::NullFileSystem::NewReadOnlyMemoryRegionFromFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<tensorflow::ReadOnlyMemoryRegion, std::default_delete<tensorflow::ReadOnlyMemoryRegion> >*)
 W tensorflow::NullFileSystem::NewWritableFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unique_ptr<tensorflow::WritableFile, std::default_delete<tensorflow::WritableFile> >*)
 W tensorflow::NullFileSystem::RenameFile(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W tensorflow::NullFileSystem::Stat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::FileStatistics*)
 W tensorflow::NullFileSystem::~NullFileSystem()
 W tensorflow::OpDef::GetArena() const
 W tensorflow::OpDef::GetCachedSize() const
 W tensorflow::OpDef::GetMaybeArenaPointer() const
 W tensorflow::OpDef::New() const
 W tensorflow::OpDef_ArgDef::GetArena() const
 W tensorflow::OpDef_ArgDef::GetCachedSize() const
 W tensorflow::OpDef_ArgDef::GetMaybeArenaPointer() const
 W tensorflow::OpDef_ArgDef::New() const
 W tensorflow::OpDef_AttrDef::GetArena() const
 W tensorflow::OpDef_AttrDef::GetCachedSize() const
 W tensorflow::OpDef_AttrDef::GetMaybeArenaPointer() const
 W tensorflow::OpDef_AttrDef::New() const
 W tensorflow::OpDeprecation::GetArena() const
 W tensorflow::OpDeprecation::GetCachedSize() const
 W tensorflow::OpDeprecation::GetMaybeArenaPointer() const
 W tensorflow::OpDeprecation::New() const
 W tensorflow::OpKernel::AsAsync()
 W tensorflow::OpKernel::IsExpensive()
 W tensorflow::OpList::GetArena() const
 W tensorflow::OpList::GetCachedSize() const
 W tensorflow::OpList::GetMaybeArenaPointer() const
 W tensorflow::OpList::New() const
 W tensorflow::OptimizerOptions::GetArena() const
 W tensorflow::OptimizerOptions::GetCachedSize() const
 W tensorflow::OptimizerOptions::GetMaybeArenaPointer() const
 W tensorflow::OptimizerOptions::New() const
 W tensorflow::PendingCounts::PendingCounts(tensorflow::PendingCounts const&)
 W tensorflow::PendingCounts::pending(tensorflow::PendingCounts::Handle)
 W tensorflow::PlatformInfo::GetArena() const
 W tensorflow::PlatformInfo::GetCachedSize() const
 W tensorflow::PlatformInfo::GetMaybeArenaPointer() const
 W tensorflow::PlatformInfo::New() const
 W tensorflow::PoolAllocator::GetStats(tensorflow::AllocatorStats*)
 W tensorflow::PoolAllocator::Name[abi:cxx11]()
 W tensorflow::PosixFileSystem::~PosixFileSystem()
 W tensorflow::PosixRandomAccessFile::Read(unsigned long long, unsigned long, tensorflow::StringPiece*, char*) const
 W tensorflow::PosixRandomAccessFile::~PosixRandomAccessFile()
 W tensorflow::PosixReadOnlyMemoryRegion::data()
 W tensorflow::PosixReadOnlyMemoryRegion::length()
 W tensorflow::PosixReadOnlyMemoryRegion::~PosixReadOnlyMemoryRegion()
 W tensorflow::PosixWritableFile::Append(tensorflow::StringPiece const&)
 W tensorflow::PosixWritableFile::Close()
 W tensorflow::PosixWritableFile::Flush()
 W tensorflow::PosixWritableFile::Sync()
 W tensorflow::PosixWritableFile::~PosixWritableFile()
 W tensorflow::QueueRunnerDef::GetArena() const
 W tensorflow::QueueRunnerDef::GetCachedSize() const
 W tensorflow::QueueRunnerDef::GetMaybeArenaPointer() const
 W tensorflow::QueueRunnerDef::New() const
 W tensorflow::RPCOptions::GetArena() const
 W tensorflow::RPCOptions::GetCachedSize() const
 W tensorflow::RPCOptions::GetMaybeArenaPointer() const
 W tensorflow::RPCOptions::New() const
 W tensorflow::ReaderBaseState::GetArena() const
 W tensorflow::ReaderBaseState::GetCachedSize() const
 W tensorflow::ReaderBaseState::GetMaybeArenaPointer() const
 W tensorflow::ReaderBaseState::New() const
 W tensorflow::ReffedStatusCallback::~ReffedStatusCallback()
 W tensorflow::RemoteFusedGraphExecuteInfo::GetArena() const
 W tensorflow::RemoteFusedGraphExecuteInfo::GetCachedSize() const
 W tensorflow::RemoteFusedGraphExecuteInfo::GetMaybeArenaPointer() const
 W tensorflow::RemoteFusedGraphExecuteInfo::New() const
 W tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::GetArena() const
 W tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::GetCachedSize() const
 W tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::GetMaybeArenaPointer() const
 W tensorflow::RemoteFusedGraphExecuteInfo_TensorShapeTypeProto::New() const
 W tensorflow::RenamedDevice::Compute(tensorflow::OpKernel*, tensorflow::OpKernelContext*)
 W tensorflow::RenamedDevice::ComputeAsync(tensorflow::AsyncOpKernel*, tensorflow::OpKernelContext*, std::function<void ()>)
 W tensorflow::RenamedDevice::ConsumeListOfAccessedTensors(tensorflow::DeviceContext*, tensorflow::gtl::InlinedVector<tensorflow::TensorReference, 4> const&)
 W tensorflow::RenamedDevice::FillContextMap(tensorflow::Graph const*, std::vector<tensorflow::DeviceContext*, std::allocator<tensorflow::DeviceContext*> >*)
 W tensorflow::RenamedDevice::GetAllocator(tensorflow::AllocatorAttributes)
 W tensorflow::RenamedDevice::GetStepAllocator(tensorflow::AllocatorAttributes, tensorflow::ResourceMgr*)
 W tensorflow::RenamedDevice::MakeGpuDevice()
 W tensorflow::RenamedDevice::MakeTensorFromProto(tensorflow::TensorProto const&, tensorflow::AllocatorAttributes, tensorflow::Tensor*)
 W tensorflow::RenamedDevice::MaybeRewriteGraph(std::unique_ptr<tensorflow::Graph, std::default_delete<tensorflow::Graph> >*)
 W tensorflow::RenamedDevice::ReinitializeGpuDevice(tensorflow::OpKernelContext*, tensorflow::PerOpGpuDevice*, tensorflow::DeviceContext*, tensorflow::Allocator*)
 W tensorflow::RenamedDevice::RequiresRecordingAccessedTensors() const
 W tensorflow::RenamedDevice::Sync()
 W tensorflow::RenamedDevice::UnderlyingDevice()
 W tensorflow::RenamedDevice::UnderlyingDevice() const
 W tensorflow::RenamedDevice::eigen_cpu_device()
 W tensorflow::RenamedDevice::resource_manager()
 W tensorflow::RenamedDevice::tensorflow_cpu_worker_threads() const
 W tensorflow::RenamedDevice::tensorflow_gpu_device_info() const
 W tensorflow::ResourceBase::MemoryUsed() const
 W tensorflow::ResourceHandle* tensorflow::Allocator::Allocate<tensorflow::ResourceHandle>(unsigned long, tensorflow::AllocationAttributes const&)
 W tensorflow::ResourceHandleProto::GetArena() const
 W tensorflow::ResourceHandleProto::GetCachedSize() const
 W tensorflow::ResourceHandleProto::GetMaybeArenaPointer() const
 W tensorflow::ResourceHandleProto::New() const
 W tensorflow::RewriterConfig::GetArena() const
 W tensorflow::RewriterConfig::GetCachedSize() const
 W tensorflow::RewriterConfig::GetMaybeArenaPointer() const
 W tensorflow::RewriterConfig::New() const
 W tensorflow::RunConfiguration::GetArena() const
 W tensorflow::RunConfiguration::GetCachedSize() const
 W tensorflow::RunConfiguration::GetMaybeArenaPointer() const
 W tensorflow::RunConfiguration::New() const
 W tensorflow::RunMetadata::GetArena() const
 W tensorflow::RunMetadata::GetCachedSize() const
 W tensorflow::RunMetadata::GetMaybeArenaPointer() const
 W tensorflow::RunMetadata::New() const
 W tensorflow::RunOptions::GetArena() const
 W tensorflow::RunOptions::GetCachedSize() const
 W tensorflow::RunOptions::GetMaybeArenaPointer() const
 W tensorflow::RunOptions::New() const
 W tensorflow::SaveSliceInfoDef::GetArena() const
 W tensorflow::SaveSliceInfoDef::GetCachedSize() const
 W tensorflow::SaveSliceInfoDef::GetMaybeArenaPointer() const
 W tensorflow::SaveSliceInfoDef::New() const
 W tensorflow::SavedModel::GetArena() const
 W tensorflow::SavedModel::GetCachedSize() const
 W tensorflow::SavedModel::GetMaybeArenaPointer() const
 W tensorflow::SavedModel::New() const
 W tensorflow::SavedSlice::GetArena() const
 W tensorflow::SavedSlice::GetCachedSize() const
 W tensorflow::SavedSlice::GetMaybeArenaPointer() const
 W tensorflow::SavedSlice::New() const
 W tensorflow::SavedSliceMeta::GetArena() const
 W tensorflow::SavedSliceMeta::GetCachedSize() const
 W tensorflow::SavedSliceMeta::GetMaybeArenaPointer() const
 W tensorflow::SavedSliceMeta::New() const
 W tensorflow::SavedTensorSliceMeta::GetArena() const
 W tensorflow::SavedTensorSliceMeta::GetCachedSize() const
 W tensorflow::SavedTensorSliceMeta::GetMaybeArenaPointer() const
 W tensorflow::SavedTensorSliceMeta::New() const
 W tensorflow::SavedTensorSlices::GetArena() const
 W tensorflow::SavedTensorSlices::GetCachedSize() const
 W tensorflow::SavedTensorSlices::GetMaybeArenaPointer() const
 W tensorflow::SavedTensorSlices::New() const
 W tensorflow::SaverDef::GetArena() const
 W tensorflow::SaverDef::GetCachedSize() const
 W tensorflow::SaverDef::GetMaybeArenaPointer() const
 W tensorflow::SaverDef::New() const
 W tensorflow::SequenceExample::GetArena() const
 W tensorflow::SequenceExample::GetCachedSize() const
 W tensorflow::SequenceExample::GetMaybeArenaPointer() const
 W tensorflow::SequenceExample::New() const
 W tensorflow::ServerDef::GetArena() const
 W tensorflow::ServerDef::GetCachedSize() const
 W tensorflow::ServerDef::GetMaybeArenaPointer() const
 W tensorflow::ServerDef::New() const
 W tensorflow::Session::Close(tensorflow::RunOptions const&)
 W tensorflow::Session::Create(tensorflow::RunOptions const&, tensorflow::GraphDef const&)
 W tensorflow::Session::Extend(tensorflow::RunOptions const&, tensorflow::GraphDef const&)
 W tensorflow::Session::LocalDeviceManager(tensorflow::DeviceMgr const**)
 W tensorflow::SessionFactory::Reset(tensorflow::SessionOptions const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
 W tensorflow::SessionLog::GetArena() const
 W tensorflow::SessionLog::GetCachedSize() const
 W tensorflow::SessionLog::GetMaybeArenaPointer() const
 W tensorflow::SessionLog::New() const
 W tensorflow::SignatureDef::GetArena() const
 W tensorflow::SignatureDef::GetCachedSize() const
 W tensorflow::SignatureDef::GetMaybeArenaPointer() const
 W tensorflow::SignatureDef::New() const
 W tensorflow::SignatureDef::SignatureDef_InputsEntry::~SignatureDef_InputsEntry()
 W tensorflow::SignatureDef::SignatureDef_OutputsEntry::~SignatureDef_OutputsEntry()
 W tensorflow::Status (**std::function<tensorflow::Status (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::checkpoint::TensorSliceReader::Table**)>::target<tensorflow::Status (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::checkpoint::TensorSliceReader::Table**)>())(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::checkpoint::TensorSliceReader::Table**)
 W tensorflow::Status perftools::gputools::PluginRegistry::RegisterFactoryInternal<perftools::gputools::blas::BlasSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, perftools::gputools::blas::BlasSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*), std::map<void*, perftools::gputools::blas::BlasSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*), std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::blas::BlasSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> > >*)
 W tensorflow::Status perftools::gputools::PluginRegistry::RegisterFactoryInternal<perftools::gputools::dnn::DnnSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, perftools::gputools::dnn::DnnSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*), std::map<void*, perftools::gputools::dnn::DnnSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*), std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::dnn::DnnSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> > >*)
 W tensorflow::Status perftools::gputools::PluginRegistry::RegisterFactoryInternal<perftools::gputools::fft::FftSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, perftools::gputools::fft::FftSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*), std::map<void*, perftools::gputools::fft::FftSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*), std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::fft::FftSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> > >*)
 W tensorflow::Status perftools::gputools::PluginRegistry::RegisterFactoryInternal<perftools::gputools::rng::RngSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)>(void*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, perftools::gputools::rng::RngSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*), std::map<void*, perftools::gputools::rng::RngSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*), std::less<void*>, std::allocator<std::pair<void* const, perftools::gputools::rng::RngSupport* (*)(perftools::gputools::internal::StreamExecutorInterface*)> > >*)
 W tensorflow::Status tensorflow::FunctionLibraryDefinition::GetAttr<bool>(tensorflow::Node const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool*) const
 W tensorflow::Status tensorflow::FunctionLibraryDefinition::GetAttr<bool>(tensorflow::NodeDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool*) const
 W tensorflow::Status tensorflow::FunctionLibraryDefinition::GetAttr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(tensorflow::Node const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const
 W tensorflow::Status tensorflow::FunctionLibraryDefinition::GetAttr<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(tensorflow::NodeDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const
 W tensorflow::Status tensorflow::LookupResource<tensorflow::lookup::LookupInterface>(tensorflow::OpKernelContext*, tensorflow::ResourceHandle const&, tensorflow::lookup::LookupInterface**)
 W tensorflow::Status tensorflow::MakeShapeHelper<int, tensorflow::PartialTensorShape>(int const*, long long, tensorflow::PartialTensorShape*)
 W tensorflow::Status tensorflow::MakeShapeHelper<int, tensorflow::TensorShape>(int const*, long long, tensorflow::TensorShape*)
 W tensorflow::Status tensorflow::MakeShapeHelper<long long, tensorflow::PartialTensorShape>(long long const*, long long, tensorflow::PartialTensorShape*)
 W tensorflow::Status tensorflow::MakeShapeHelper<long long, tensorflow::TensorShape>(long long const*, long long, tensorflow::TensorShape*)
 W tensorflow::Status tensorflow::ResourceMgr::Lookup<tensorflow::lookup::LookupInterface>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::lookup::LookupInterface**) const
 W tensorflow::Status tensorflow::errors::Aborted<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, unsigned long long, char const*, unsigned long>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, unsigned long long, char const*, unsigned long)
 W tensorflow::Status tensorflow::errors::AlreadyExists<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*)
 W tensorflow::Status tensorflow::errors::Cancelled<char const*>(char const*)
 W tensorflow::Status tensorflow::errors::DataLoss<char const*, int, char const*>(char const*, int, char const*)
 W tensorflow::Status tensorflow::errors::DataLoss<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
 W tensorflow::Status tensorflow::errors::DataLoss<char const*, tensorflow::StringPiece, char const*, long, char const*, unsigned long>(char const*, tensorflow::StringPiece, char const*, long, char const*, unsigned long)
 W tensorflow::Status tensorflow::errors::DataLoss<char const*, tensorflow::StringPiece, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, tensorflow::StringPiece, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 W tensorflow::Status tensorflow::errors::DataLoss<char const*, unsigned long long>(char const*, unsigned long long)
 W tensorflow::Status tensorflow::errors::DataLoss<char const*, unsigned long, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, unsigned long, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 W tensorflow::Status tensorflow::errors::DataLoss<char const*, unsigned long, char const*, unsigned long, char const*>(char const*, unsigned long, char const*, unsigned long, char const*)
 W tensorflow::Status tensorflow::errors::DataLoss<char const*>(char const*)
 W tensorflow::Status tensorflow::errors::FailedPrecondition<char const*, int, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(char const*, int, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
 W tensorflow::Status tensorflow::errors::FailedPrecondition<char const*>(char const*)
 W tensorflow::Status tensorflow::errors::Internal<char const*, char const*, int, char const*, int, char const*>(char const*, char const*, int, char const*, int, char const*)
 W tensorflow::Status tensorflow::errors::Internal<char const*, int, char const*, int, char const*>(char const*, int, char const*, int, char const*)
 W tensorflow::Status tensorflow::errors::Internal<char const*, int, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, int, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 W tensorflow::Status tensorflow::errors::Internal<char const*, int, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, unsigned long, char const*>(char const*, int, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, unsigned long, char const*)
 W tensorflow::Status tensorflow::errors::Internal<char const*, int>(char const*, int)
 W tensorflow::Status tensorflow::errors::Internal<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 W tensorflow::Status tensorflow::errors::Internal<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 W tensorflow::Status tensorflow::errors::Internal<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 W tensorflow::Status tensorflow::errors::Internal<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
 W tensorflow::Status tensorflow::errors::Internal<char const*, tensorflow::MemoryType, char const*, tensorflow::MemoryType>(char const*, tensorflow::MemoryType, char const*, tensorflow::MemoryType)
 W tensorflow::Status tensorflow::errors::Internal<char const*, tensorflow::StringPiece>(char const*, tensorflow::StringPiece)
 W tensorflow::Status tensorflow::errors::Internal<char const*, unsigned long, char const*, unsigned long, char const*>(char const*, unsigned long, char const*, unsigned long, char const*)
 W tensorflow::Status tensorflow::errors::Internal<char const*, unsigned long, char const*>(char const*, unsigned long, char const*)
 W tensorflow::Status tensorflow::errors::Internal<char const*>(char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, char const*, int, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, int, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, char const*, int, char const*, int, char const*, char const*, char const*, char const*, char const*>(char const*, char const*, int, char const*, int, char const*, char const*, char const*, char const*, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, char const*, int, char const*, int, char const*, char const*, char const*>(char const*, char const*, int, char const*, int, char const*, char const*, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, char const*, int, char const*>(char const*, char const*, int, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, char const*, unsigned long, char const*, unsigned long>(char const*, char const*, unsigned long, char const*, unsigned long)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, int, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int, char const*>(char const*, int, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, int, char const*, int, char const*>(char const*, int, char const*, int, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, int, char const*, int>(char const*, int, char const*, int)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, int, char const*, long long, char const*, long long, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(char const*, int, char const*, long long, char const*, long long, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, int, char const*, long long, char const*>(char const*, int, char const*, long long, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, int, char const*, long long>(char const*, int, char const*, long long)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, int, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int, char const*>(char const*, int, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, int, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(char const*, int, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, int, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(char const*, int, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, int, char const*, tensorflow::StringPiece, char const*, int, char const*>(char const*, int, char const*, tensorflow::StringPiece, char const*, int, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, int, char const*, unsigned long, char const*>(char const*, int, char const*, unsigned long, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, int, char const*, unsigned long>(char const*, int, char const*, unsigned long)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, int, char const*>(char const*, int, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, int>(char const*, int)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, long long, char const*, int, char const*, int, char const*>(char const*, long long, char const*, int, char const*, int, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, long long, char const*, int, char const*>(char const*, long long, char const*, int, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, long long, char const*, int>(char const*, long long, char const*, int)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, long long, char const*, long long, char const*, long long, char const*, long long, char const*, int, char const*>(char const*, long long, char const*, long long, char const*, long long, char const*, long long, char const*, int, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, long long, char const*, long long, char const*>(char const*, long long, char const*, long long, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, long long, char const*, long long>(char const*, long long, char const*, long long)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, long long, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, long long, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, long long, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, long long, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, long long, char const*, unsigned long, char const*>(char const*, long long, char const*, unsigned long, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, long long, char const*>(char const*, long long, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, long long>(char const*, long long)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*, char const*, int, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*, char const*, int, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*, char const*, int, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*, char const*, int, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int, char const*, char const*, char const*, unsigned long, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int, char const*, char const*, char const*, unsigned long, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int, char const*, tensorflow::StringPiece, char const*, int, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int, char const*, tensorflow::StringPiece, char const*, int, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, long long, char const*, long long>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, long long, char const*, long long)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, long long, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, long long, char const*, unsigned long>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, long long, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, long long, char const*, unsigned long)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, long long, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, long long, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, unsigned long, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, unsigned long, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, unsigned long, char const*, int, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, unsigned long, char const*, int, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, tensorflow::StringPiece, char const*, unsigned long, char const*, tensorflow::StringPiece>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, tensorflow::StringPiece, char const*, unsigned long, char const*, tensorflow::StringPiece)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, unsigned long, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, unsigned long, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, unsigned long, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, unsigned long, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, tensorflow::DataType, char const*, tensorflow::DataType, char const*, tensorflow::DataType, char const*, tensorflow::DataType, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, tensorflow::DataType, char const*, tensorflow::DataType, char const*, tensorflow::DataType, char const*, tensorflow::DataType, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, tensorflow::DataType, char const*, tensorflow::DataType>(char const*, tensorflow::DataType, char const*, tensorflow::DataType)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, tensorflow::DataType, char const*>(char const*, tensorflow::DataType, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, tensorflow::DataType>(char const*, tensorflow::DataType)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, tensorflow::StringPiece, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(char const*, tensorflow::StringPiece, char const*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, tensorflow::StringPiece, char const*, long, char const*>(char const*, tensorflow::StringPiece, char const*, long, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, tensorflow::StringPiece, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(char const*, tensorflow::StringPiece, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, tensorflow::StringPiece, char const*>(char const*, tensorflow::StringPiece, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, tensorflow::StringPiece>(char const*, tensorflow::StringPiece)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, unsigned int, char const*, unsigned int, char const*, unsigned int, char const*, unsigned short, char const*>(char const*, unsigned int, char const*, unsigned int, char const*, unsigned int, char const*, unsigned short, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, unsigned int, char const*, unsigned short>(char const*, unsigned int, char const*, unsigned short)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, unsigned long, char const*, int, char const*>(char const*, unsigned long, char const*, int, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, unsigned long, char const*, unsigned long, char const*>(char const*, unsigned long, char const*, unsigned long, char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, unsigned long, char const*, unsigned long>(char const*, unsigned long, char const*, unsigned long)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, unsigned long>(char const*, unsigned long)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*, unsigned short>(char const*, unsigned short)
 W tensorflow::Status tensorflow::errors::InvalidArgument<char const*>(char const*)
 W tensorflow::Status tensorflow::errors::InvalidArgument<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 W tensorflow::Status tensorflow::errors::InvalidArgument<unsigned long, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(unsigned long, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 W tensorflow::Status tensorflow::errors::NotFound<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 W tensorflow::Status tensorflow::errors::NotFound<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*, char const*)
 W tensorflow::Status tensorflow::errors::NotFound<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, char const*)
 W tensorflow::Status tensorflow::errors::NotFound<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 W tensorflow::Status tensorflow::errors::NotFound<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
 W tensorflow::Status tensorflow::errors::NotFound<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
 W tensorflow::Status tensorflow::errors::NotFound<char const*>(char const*)
 W tensorflow::Status tensorflow::errors::NotFound<char*>(char*)
 W tensorflow::Status tensorflow::errors::NotFound<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
 W tensorflow::Status tensorflow::errors::OutOfRange<char const*, long long, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(char const*, long long, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 W tensorflow::Status tensorflow::errors::OutOfRange<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int, char const*, char const*, int>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int, char const*, char const*, int)
 W tensorflow::Status tensorflow::errors::OutOfRange<char const*>(char const*)
 W tensorflow::Status tensorflow::errors::ResourceExhausted<char const*, unsigned long, char const*, char const*, unsigned int, char const*>(char const*, unsigned long, char const*, char const*, unsigned int, char const*)
 W tensorflow::Status tensorflow::errors::ResourceExhausted<char const*>(char const*)
 W tensorflow::Status tensorflow::errors::Unimplemented<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int, char const*, int, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, int, char const*, int, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
 W tensorflow::Status tensorflow::errors::Unimplemented<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, unsigned int, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, unsigned int, char const*)
 W tensorflow::Status tensorflow::errors::Unimplemented<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
 W tensorflow::Status tensorflow::errors::Unimplemented<char const*>(char const*)
 W tensorflow::Status tensorflow::internal::ValidateDeviceAndType<tensorflow::lookup::LookupInterface>(tensorflow::OpKernelContext*, tensorflow::ResourceHandle const&)
 W tensorflow::Status tensorflow::shape_inference::ReductionShapeHelper<long long>(tensorflow::Tensor const*, int, std::set<long long, std::less<long long>, std::allocator<long long> >&)
 W tensorflow::Status::Status(tensorflow::Status const&)
 W tensorflow::StepStats::GetArena() const
 W tensorflow::StepStats::GetCachedSize() const
 W tensorflow::StepStats::GetMaybeArenaPointer() const
 W tensorflow::StepStats::New() const
 W tensorflow::StringPiece::Consume(tensorflow::StringPiece)
 W tensorflow::SubBuffer<Eigen::QInt16>::FillAllocationDescription(tensorflow::AllocationDescription*) const
 W tensorflow::SubBuffer<Eigen::QInt16>::SubBuffer(tensorflow::TensorBuffer*, long long, long long)
 W tensorflow::SubBuffer<Eigen::QInt16>::data() const
 W tensorflow::SubBuffer<Eigen::QInt16>::root_buffer()
 W tensorflow::SubBuffer<Eigen::QInt16>::size() const
 W tensorflow::SubBuffer<Eigen::QInt16>::~SubBuffer()
 W tensorflow::SubBuffer<Eigen::QInt32>::FillAllocationDescription(tensorflow::AllocationDescription*) const
 W tensorflow::SubBuffer<Eigen::QInt32>::SubBuffer(tensorflow::TensorBuffer*, long long, long long)
 W tensorflow::SubBuffer<Eigen::QInt32>::data() const
 W tensorflow::SubBuffer<Eigen::QInt32>::root_buffer()
 W tensorflow::SubBuffer<Eigen::QInt32>::size() const
 W tensorflow::SubBuffer<Eigen::QInt32>::~SubBuffer()
 W tensorflow::SubBuffer<Eigen::QInt8>::FillAllocationDescription(tensorflow::AllocationDescription*) const
 W tensorflow::SubBuffer<Eigen::QInt8>::SubBuffer(tensorflow::TensorBuffer*, long long, long long)
 W tensorflow::SubBuffer<Eigen::QInt8>::data() const
 W tensorflow::SubBuffer<Eigen::QInt8>::root_buffer()
 W tensorflow::SubBuffer<Eigen::QInt8>::size() const
 W tensorflow::SubBuffer<Eigen::QInt8>::~SubBuffer()
 W tensorflow::SubBuffer<Eigen::QUInt16>::FillAllocationDescription(tensorflow::AllocationDescription*) const
 W tensorflow::SubBuffer<Eigen::QUInt16>::SubBuffer(tensorflow::TensorBuffer*, long long, long long)
 W tensorflow::SubBuffer<Eigen::QUInt16>::data() const
 W tensorflow::SubBuffer<Eigen::QUInt16>::root_buffer()
 W tensorflow::SubBuffer<Eigen::QUInt16>::size() const
 W tensorflow::SubBuffer<Eigen::QUInt16>::~SubBuffer()
 W tensorflow::SubBuffer<Eigen::QUInt8>::FillAllocationDescription(tensorflow::AllocationDescription*) const
 W tensorflow::SubBuffer<Eigen::QUInt8>::SubBuffer(tensorflow::TensorBuffer*, long long, long long)
 W tensorflow::SubBuffer<Eigen::QUInt8>::data() const
 W tensorflow::SubBuffer<Eigen::QUInt8>::root_buffer()
 W tensorflow::SubBuffer<Eigen::QUInt8>::size() const
 W tensorflow::SubBuffer<Eigen::QUInt8>::~SubBuffer()
 W tensorflow::SubBuffer<Eigen::half>::FillAllocationDescription(tensorflow::AllocationDescription*) const
 W tensorflow::SubBuffer<Eigen::half>::SubBuffer(tensorflow::TensorBuffer*, long long, long long)
 W tensorflow::SubBuffer<Eigen::half>::data() const
 W tensorflow::SubBuffer<Eigen::half>::root_buffer()
 W tensorflow::SubBuffer<Eigen::half>::size() const
 W tensorflow::SubBuffer<Eigen::half>::~SubBuffer()
 W tensorflow::SubBuffer<bool>::FillAllocationDescription(tensorflow::AllocationDescription*) const
 W tensorflow::SubBuffer<bool>::SubBuffer(tensorflow::TensorBuffer*, long long, long long)
 W tensorflow::SubBuffer<bool>::data() const
 W tensorflow::SubBuffer<bool>::root_buffer()
 W tensorflow::SubBuffer<bool>::size() const
 W tensorflow::SubBuffer<bool>::~SubBuffer()
 W tensorflow::SubBuffer<double>::FillAllocationDescription(tensorflow::AllocationDescription*) const
 W tensorflow::SubBuffer<double>::SubBuffer(tensorflow::TensorBuffer*, long long, long long)
 W tensorflow::SubBuffer<double>::data() const
 W tensorflow::SubBuffer<double>::root_buffer()
 W tensorflow::SubBuffer<double>::size() const
 W tensorflow::SubBuffer<double>::~SubBuffer()
 W tensorflow::SubBuffer<float>::FillAllocationDescription(tensorflow::AllocationDescription*) const
 W tensorflow::SubBuffer<float>::SubBuffer(tensorflow::TensorBuffer*, long long, long long)
 W tensorflow::SubBuffer<float>::data() const
 W tensorflow::SubBuffer<float>::root_buffer()
 W tensorflow::SubBuffer<float>::size() const
 W tensorflow::SubBuffer<float>::~SubBuffer()
 W tensorflow::SubBuffer<int>::FillAllocationDescription(tensorflow::AllocationDescription*) const
 W tensorflow::SubBuffer<int>::SubBuffer(tensorflow::TensorBuffer*, long long, long long)
 W tensorflow::SubBuffer<int>::data() const
 W tensorflow::SubBuffer<int>::root_buffer()
 W tensorflow::SubBuffer<int>::size() const
 W tensorflow::SubBuffer<int>::~SubBuffer()
 W tensorflow::SubBuffer<long long>::FillAllocationDescription(tensorflow::AllocationDescription*) const
 W tensorflow::SubBuffer<long long>::SubBuffer(tensorflow::TensorBuffer*, long long, long long)
 W tensorflow::SubBuffer<long long>::data() const
 W tensorflow::SubBuffer<long long>::root_buffer()
 W tensorflow::SubBuffer<long long>::size() const
 W tensorflow::SubBuffer<long long>::~SubBuffer()
 W tensorflow::SubBuffer<short>::FillAllocationDescription(tensorflow::AllocationDescription*) const
 W tensorflow::SubBuffer<short>::SubBuffer(tensorflow::TensorBuffer*, long long, long long)
 W tensorflow::SubBuffer<short>::data() const
 W tensorflow::SubBuffer<short>::root_buffer()
 W tensorflow::SubBuffer<short>::size() const
 W tensorflow::SubBuffer<short>::~SubBuffer()
 W tensorflow::SubBuffer<signed char>::FillAllocationDescription(tensorflow::AllocationDescription*) const
 W tensorflow::SubBuffer<signed char>::SubBuffer(tensorflow::TensorBuffer*, long long, long long)
 W tensorflow::SubBuffer<signed char>::data() const
 W tensorflow::SubBuffer<signed char>::root_buffer()
 W tensorflow::SubBuffer<signed char>::size() const
 W tensorflow::SubBuffer<signed char>::~SubBuffer()
 W tensorflow::SubBuffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::FillAllocationDescription(tensorflow::AllocationDescription*) const
 W tensorflow::SubBuffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::SubBuffer(tensorflow::TensorBuffer*, long long, long long)
 W tensorflow::SubBuffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::data() const
 W tensorflow::SubBuffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::root_buffer()
 W tensorflow::SubBuffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::size() const
 W tensorflow::SubBuffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~SubBuffer()
 W tensorflow::SubBuffer<std::complex<double> >::FillAllocationDescription(tensorflow::AllocationDescription*) const
 W tensorflow::SubBuffer<std::complex<double> >::SubBuffer(tensorflow::TensorBuffer*, long long, long long)
 W tensorflow::SubBuffer<std::complex<double> >::data() const
 W tensorflow::SubBuffer<std::complex<double> >::root_buffer()
 W tensorflow::SubBuffer<std::complex<double> >::size() const
 W tensorflow::SubBuffer<std::complex<double> >::~SubBuffer()
 W tensorflow::SubBuffer<std::complex<float> >::FillAllocationDescription(tensorflow::AllocationDescription*) const
 W tensorflow::SubBuffer<std::complex<float> >::SubBuffer(tensorflow::TensorBuffer*, long long, long long)
 W tensorflow::SubBuffer<std::complex<float> >::data() const
 W tensorflow::SubBuffer<std::complex<float> >::root_buffer()
 W tensorflow::SubBuffer<std::complex<float> >::size() const
 W tensorflow::SubBuffer<std::complex<float> >::~SubBuffer()
 W tensorflow::SubBuffer<tensorflow::ResourceHandle>::FillAllocationDescription(tensorflow::AllocationDescription*) const
 W tensorflow::SubBuffer<tensorflow::ResourceHandle>::SubBuffer(tensorflow::TensorBuffer*, long long, long long)
 W tensorflow::SubBuffer<tensorflow::ResourceHandle>::data() const
 W tensorflow::SubBuffer<tensorflow::ResourceHandle>::root_buffer()
 W tensorflow::SubBuffer<tensorflow::ResourceHandle>::size() const
 W tensorflow::SubBuffer<tensorflow::ResourceHandle>::~SubBuffer()
 W tensorflow::SubBuffer<tensorflow::Variant>::FillAllocationDescription(tensorflow::AllocationDescription*) const
 W tensorflow::SubBuffer<tensorflow::Variant>::SubBuffer(tensorflow::TensorBuffer*, long long, long long)
 W tensorflow::SubBuffer<tensorflow::Variant>::data() const
 W tensorflow::SubBuffer<tensorflow::Variant>::root_buffer()
 W tensorflow::SubBuffer<tensorflow::Variant>::size() const
 W tensorflow::SubBuffer<tensorflow::Variant>::~SubBuffer()
 W tensorflow::SubBuffer<tensorflow::bfloat16>::FillAllocationDescription(tensorflow::AllocationDescription*) const
 W tensorflow::SubBuffer<tensorflow::bfloat16>::SubBuffer(tensorflow::TensorBuffer*, long long, long long)
 W tensorflow::SubBuffer<tensorflow::bfloat16>::data() const
 W tensorflow::SubBuffer<tensorflow::bfloat16>::root_buffer()
 W tensorflow::SubBuffer<tensorflow::bfloat16>::size() const
 W tensorflow::SubBuffer<tensorflow::bfloat16>::~SubBuffer()
 W tensorflow::SubBuffer<unsigned char>::FillAllocationDescription(tensorflow::AllocationDescription*) const
 W tensorflow::SubBuffer<unsigned char>::SubBuffer(tensorflow::TensorBuffer*, long long, long long)
 W tensorflow::SubBuffer<unsigned char>::data() const
 W tensorflow::SubBuffer<unsigned char>::root_buffer()
 W tensorflow::SubBuffer<unsigned char>::size() const
 W tensorflow::SubBuffer<unsigned char>::~SubBuffer()
 W tensorflow::SubBuffer<unsigned int>::FillAllocationDescription(tensorflow::AllocationDescription*) const
 W tensorflow::SubBuffer<unsigned int>::SubBuffer(tensorflow::TensorBuffer*, long long, long long)
 W tensorflow::SubBuffer<unsigned int>::data() const
 W tensorflow::SubBuffer<unsigned int>::root_buffer()
 W tensorflow::SubBuffer<unsigned int>::size() const
 W tensorflow::SubBuffer<unsigned int>::~SubBuffer()
 W tensorflow::SubBuffer<unsigned long long>::FillAllocationDescription(tensorflow::AllocationDescription*) const
 W tensorflow::SubBuffer<unsigned long long>::SubBuffer(tensorflow::TensorBuffer*, long long, long long)
 W tensorflow::SubBuffer<unsigned long long>::data() const
 W tensorflow::SubBuffer<unsigned long long>::root_buffer()
 W tensorflow::SubBuffer<unsigned long long>::size() const
 W tensorflow::SubBuffer<unsigned long long>::~SubBuffer()
 W tensorflow::SubBuffer<unsigned short>::FillAllocationDescription(tensorflow::AllocationDescription*) const
 W tensorflow::SubBuffer<unsigned short>::SubBuffer(tensorflow::TensorBuffer*, long long, long long)
 W tensorflow::SubBuffer<unsigned short>::data() const
 W tensorflow::SubBuffer<unsigned short>::root_buffer()
 W tensorflow::SubBuffer<unsigned short>::size() const
 W tensorflow::SubBuffer<unsigned short>::~SubBuffer()
 W tensorflow::Summary::GetArena() const
 W tensorflow::Summary::GetCachedSize() const
 W tensorflow::Summary::GetMaybeArenaPointer() const
 W tensorflow::Summary::New() const
 W tensorflow::SummaryDescription::GetArena() const
 W tensorflow::SummaryDescription::GetCachedSize() const
 W tensorflow::SummaryDescription::GetMaybeArenaPointer() const
 W tensorflow::SummaryDescription::New() const
 W tensorflow::SummaryMetadata::GetArena() const
 W tensorflow::SummaryMetadata::GetCachedSize() const
 W tensorflow::SummaryMetadata::GetMaybeArenaPointer() const
 W tensorflow::SummaryMetadata::New() const
 W tensorflow::SummaryMetadata_PluginData::GetArena() const
 W tensorflow::SummaryMetadata_PluginData::GetCachedSize() const
 W tensorflow::SummaryMetadata_PluginData::GetMaybeArenaPointer() const
 W tensorflow::SummaryMetadata_PluginData::New() const
 W tensorflow::Summary_Audio::GetArena() const
 W tensorflow::Summary_Audio::GetCachedSize() const
 W tensorflow::Summary_Audio::GetMaybeArenaPointer() const
 W tensorflow::Summary_Audio::New() const
 W tensorflow::Summary_Image::GetArena() const
 W tensorflow::Summary_Image::GetCachedSize() const
 W tensorflow::Summary_Image::GetMaybeArenaPointer() const
 W tensorflow::Summary_Image::New() const
 W tensorflow::Summary_Value::GetArena() const
 W tensorflow::Summary_Value::GetCachedSize() const
 W tensorflow::Summary_Value::GetMaybeArenaPointer() const
 W tensorflow::Summary_Value::New() const
 W tensorflow::TTypes<Eigen::QInt32, 1ul, long>::Tensor tensorflow::Tensor::shaped<Eigen::QInt32, 1ul>(tensorflow::gtl::ArraySlice<long long>)
 W tensorflow::TTypes<Eigen::QInt8, 1ul, long>::Tensor tensorflow::Tensor::shaped<Eigen::QInt8, 1ul>(tensorflow::gtl::ArraySlice<long long>)
 W tensorflow::TTypes<Eigen::QUInt8, 1ul, long>::Tensor tensorflow::Tensor::shaped<Eigen::QUInt8, 1ul>(tensorflow::gtl::ArraySlice<long long>)
 W tensorflow::TTypes<bool, 1ul, long>::Tensor tensorflow::Tensor::shaped<bool, 1ul>(tensorflow::gtl::ArraySlice<long long>)
 W tensorflow::TTypes<double, 1ul, long>::Tensor tensorflow::Tensor::shaped<double, 1ul>(tensorflow::gtl::ArraySlice<long long>)
 W tensorflow::TTypes<float, 1ul, long>::ConstTensor tensorflow::Tensor::shaped<float, 1ul>(tensorflow::gtl::ArraySlice<long long>) const
 W tensorflow::TTypes<float, 1ul, long>::Tensor tensorflow::Tensor::shaped<float, 1ul>(tensorflow::gtl::ArraySlice<long long>)
 W tensorflow::TTypes<int, 1, long>::Scalar tensorflow::Tensor::scalar<int>()
 W tensorflow::TTypes<int, 1ul, long>::ConstTensor tensorflow::Tensor::shaped<int, 1ul>(tensorflow::gtl::ArraySlice<long long>) const
 W tensorflow::TTypes<int, 1ul, long>::Tensor tensorflow::Tensor::shaped<int, 1ul>(tensorflow::gtl::ArraySlice<long long>)
 W tensorflow::TTypes<long long, 1ul, long>::ConstTensor tensorflow::Tensor::shaped<long long, 1ul>(tensorflow::gtl::ArraySlice<long long>) const
 W tensorflow::TTypes<long long, 1ul, long>::Tensor tensorflow::Tensor::shaped<long long, 1ul>(tensorflow::gtl::ArraySlice<long long>)
 W tensorflow::TTypes<long long, 1ul, long>::Tensor tensorflow::Tensor::tensor<long long, 1ul>()
 W tensorflow::TTypes<long long, 2ul, long>::Tensor tensorflow::Tensor::tensor<long long, 2ul>()
 W tensorflow::TTypes<short, 1ul, long>::Tensor tensorflow::Tensor::shaped<short, 1ul>(tensorflow::gtl::ArraySlice<long long>)
 W tensorflow::TTypes<signed char, 1ul, long>::Tensor tensorflow::Tensor::shaped<signed char, 1ul>(tensorflow::gtl::ArraySlice<long long>)
 W tensorflow::TTypes<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, 1ul, long>::ConstTensor tensorflow::Tensor::shaped<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, 1ul>(tensorflow::gtl::ArraySlice<long long>) const
 W tensorflow::TTypes<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, 1ul, long>::Tensor tensorflow::Tensor::shaped<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, 1ul>(tensorflow::gtl::ArraySlice<long long>)
 W tensorflow::TTypes<std::complex<double>, 1ul, long>::Tensor tensorflow::Tensor::shaped<std::complex<double>, 1ul>(tensorflow::gtl::ArraySlice<long long>)
 W tensorflow::TTypes<std::complex<float>, 1ul, long>::Tensor tensorflow::Tensor::shaped<std::complex<float>, 1ul>(tensorflow::gtl::ArraySlice<long long>)
 W tensorflow::TTypes<tensorflow::ResourceHandle, 1ul, long>::ConstTensor tensorflow::Tensor::shaped<tensorflow::ResourceHandle, 1ul>(tensorflow::gtl::ArraySlice<long long>) const
 W tensorflow::TTypes<tensorflow::Variant, 1ul, long>::ConstTensor tensorflow::Tensor::shaped<tensorflow::Variant, 1ul>(tensorflow::gtl::ArraySlice<long long>) const
 W tensorflow::TTypes<tensorflow::Variant, 1ul, long>::Tensor tensorflow::Tensor::shaped<tensorflow::Variant, 1ul>(tensorflow::gtl::ArraySlice<long long>)
 W tensorflow::TTypes<unsigned char, 1ul, long>::Tensor tensorflow::Tensor::shaped<unsigned char, 1ul>(tensorflow::gtl::ArraySlice<long long>)
 W tensorflow::TaggedRunMetadata::GetArena() const
 W tensorflow::TaggedRunMetadata::GetCachedSize() const
 W tensorflow::TaggedRunMetadata::GetMaybeArenaPointer() const
 W tensorflow::TaggedRunMetadata::New() const
 W tensorflow::TensorBuffer::OwnsMemory() const
 W tensorflow::TensorDescription::GetArena() const
 W tensorflow::TensorDescription::GetCachedSize() const
 W tensorflow::TensorDescription::GetMaybeArenaPointer() const
 W tensorflow::TensorDescription::New() const
 W tensorflow::TensorId::ToString[abi:cxx11]() const
 W tensorflow::TensorInfo::GetArena() const
 W tensorflow::TensorInfo::GetCachedSize() const
 W tensorflow::TensorInfo::GetMaybeArenaPointer() const
 W tensorflow::TensorInfo::New() const
 W tensorflow::TensorInfo::mutable_coo_sparse()
 W tensorflow::TensorInfo_CooSparse::GetArena() const
 W tensorflow::TensorInfo_CooSparse::GetCachedSize() const
 W tensorflow::TensorInfo_CooSparse::GetMaybeArenaPointer() const
 W tensorflow::TensorInfo_CooSparse::New() const
 W tensorflow::TensorProto::GetArena() const
 W tensorflow::TensorProto::GetCachedSize() const
 W tensorflow::TensorProto::GetMaybeArenaPointer() const
 W tensorflow::TensorProto::New() const
 W tensorflow::TensorProto::mutable_tensor_content[abi:cxx11]()
 W tensorflow::TensorShapeBase<tensorflow::PartialTensorShape>::AddDim(long long)
 W tensorflow::TensorShapeBase<tensorflow::PartialTensorShape>::AppendShape(tensorflow::TensorShapeBase<tensorflow::PartialTensorShape> const&)
 W tensorflow::TensorShapeBase<tensorflow::PartialTensorShape>::AsProto(tensorflow::TensorShapeProto*) const
 W tensorflow::TensorShapeBase<tensorflow::PartialTensorShape>::InsertDim(int, long long)
 W tensorflow::TensorShapeBase<tensorflow::PartialTensorShape>::IsFullyDefined() const
 W tensorflow::TensorShapeBase<tensorflow::PartialTensorShape>::IsValid(tensorflow::TensorShapeProto const&)
 W tensorflow::TensorShapeBase<tensorflow::PartialTensorShape>::IsValidShape(tensorflow::TensorShapeProto const&)
 W tensorflow::TensorShapeBase<tensorflow::PartialTensorShape>::MaxDimensions()
 W tensorflow::TensorShapeBase<tensorflow::PartialTensorShape>::RecomputeNumElements()
 W tensorflow::TensorShapeBase<tensorflow::PartialTensorShape>::RemoveDim(int)
 W tensorflow::TensorShapeBase<tensorflow::PartialTensorShape>::RemoveDimRange(int, int)
 W tensorflow::TensorShapeBase<tensorflow::PartialTensorShape>::RemoveLastDims(int)
 W tensorflow::TensorShapeBase<tensorflow::PartialTensorShape>::TensorShapeBase()
 W tensorflow::TensorShapeBase<tensorflow::PartialTensorShape>::TensorShapeBase(std::initializer_list<long long>)
 W tensorflow::TensorShapeBase<tensorflow::PartialTensorShape>::TensorShapeBase(tensorflow::TensorShapeProto const&)
 W tensorflow::TensorShapeBase<tensorflow::PartialTensorShape>::TensorShapeBase(tensorflow::gtl::ArraySlice<long long>)
 W tensorflow::TensorShapeBase<tensorflow::PartialTensorShape>::UnsafeAddDim(long long, long long)
 W tensorflow::TensorShapeBase<tensorflow::PartialTensorShape>::begin() const
 W tensorflow::TensorShapeBase<tensorflow::PartialTensorShape>::dim_size(int) const
 W tensorflow::TensorShapeBase<tensorflow::PartialTensorShape>::dim_sizes() const
 W tensorflow::TensorShapeBase<tensorflow::PartialTensorShape>::dims() const
 W tensorflow::TensorShapeBase<tensorflow::PartialTensorShape>::end() const
 W tensorflow::TensorShapeBase<tensorflow::PartialTensorShape>::set_dim(int, long long)
 W tensorflow::TensorShapeBase<tensorflow::PartialTensorShape>::unknown_rank() const
 W tensorflow::TensorShapeBase<tensorflow::TensorShape>::AddDim(long long)
 W tensorflow::TensorShapeBase<tensorflow::TensorShape>::AppendShape(tensorflow::TensorShapeBase<tensorflow::TensorShape> const&)
 W tensorflow::TensorShapeBase<tensorflow::TensorShape>::AsProto(tensorflow::TensorShapeProto*) const
 W tensorflow::TensorShapeBase<tensorflow::TensorShape>::InsertDim(int, long long)
 W tensorflow::TensorShapeBase<tensorflow::TensorShape>::IsFullyDefined() const
 W tensorflow::TensorShapeBase<tensorflow::TensorShape>::IsValid(tensorflow::TensorShapeProto const&)
 W tensorflow::TensorShapeBase<tensorflow::TensorShape>::IsValidShape(tensorflow::TensorShapeProto const&)
 W tensorflow::TensorShapeBase<tensorflow::TensorShape>::MaxDimensions()
 W tensorflow::TensorShapeBase<tensorflow::TensorShape>::RecomputeNumElements()
 W tensorflow::TensorShapeBase<tensorflow::TensorShape>::RemoveDim(int)
 W tensorflow::TensorShapeBase<tensorflow::TensorShape>::RemoveDimRange(int, int)
 W tensorflow::TensorShapeBase<tensorflow::TensorShape>::RemoveLastDims(int)
 W tensorflow::TensorShapeBase<tensorflow::TensorShape>::TensorShapeBase()
 W tensorflow::TensorShapeBase<tensorflow::TensorShape>::TensorShapeBase(std::initializer_list<long long>)
 W tensorflow::TensorShapeBase<tensorflow::TensorShape>::TensorShapeBase(tensorflow::TensorShapeProto const&)
 W tensorflow::TensorShapeBase<tensorflow::TensorShape>::TensorShapeBase(tensorflow::gtl::ArraySlice<long long>)
 W tensorflow::TensorShapeBase<tensorflow::TensorShape>::UnsafeAddDim(long long, long long)
 W tensorflow::TensorShapeBase<tensorflow::TensorShape>::begin() const
 W tensorflow::TensorShapeBase<tensorflow::TensorShape>::dim_size(int) const
 W tensorflow::TensorShapeBase<tensorflow::TensorShape>::dim_sizes() const
 W tensorflow::TensorShapeBase<tensorflow::TensorShape>::dims() const
 W tensorflow::TensorShapeBase<tensorflow::TensorShape>::end() const
 W tensorflow::TensorShapeBase<tensorflow::TensorShape>::set_dim(int, long long)
 W tensorflow::TensorShapeBase<tensorflow::TensorShape>::unknown_rank() const
 W tensorflow::TensorShapeProto::GetArena() const
 W tensorflow::TensorShapeProto::GetCachedSize() const
 W tensorflow::TensorShapeProto::GetMaybeArenaPointer() const
 W tensorflow::TensorShapeProto::New() const
 W tensorflow::TensorShapeProto_Dim::GetArena() const
 W tensorflow::TensorShapeProto_Dim::GetCachedSize() const
 W tensorflow::TensorShapeProto_Dim::GetMaybeArenaPointer() const
 W tensorflow::TensorShapeProto_Dim::New() const
 W tensorflow::TensorSlice::~TensorSlice()
 W tensorflow::TensorSliceProto::GetArena() const
 W tensorflow::TensorSliceProto::GetCachedSize() const
 W tensorflow::TensorSliceProto::GetMaybeArenaPointer() const
 W tensorflow::TensorSliceProto::New() const
 W tensorflow::TensorSliceProto_Extent::GetArena() const
 W tensorflow::TensorSliceProto_Extent::GetCachedSize() const
 W tensorflow::TensorSliceProto_Extent::GetMaybeArenaPointer() const
 W tensorflow::TensorSliceProto_Extent::New() const
 W tensorflow::TestResults::GetArena() const
 W tensorflow::TestResults::GetCachedSize() const
 W tensorflow::TestResults::GetMaybeArenaPointer() const
 W tensorflow::TestResults::New() const
 W tensorflow::ThreadPoolDevice::Sync()
 W tensorflow::ThreadPoolDeviceFactory::CreateDevices(tensorflow::SessionOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> >*)
 W tensorflow::ThreadPoolDeviceFactory::~ThreadPoolDeviceFactory()
 W tensorflow::ThreadPoolOptionProto::GetArena() const
 W tensorflow::ThreadPoolOptionProto::GetCachedSize() const
 W tensorflow::ThreadPoolOptionProto::GetMaybeArenaPointer() const
 W tensorflow::ThreadPoolOptionProto::New() const
 W tensorflow::TrackingAllocator::AllocateRaw(unsigned long, unsigned long)
 W tensorflow::TrackingAllocator::Name[abi:cxx11]()
 W tensorflow::TrackingAllocator::~TrackingAllocator()
 W tensorflow::TrackingVisitableAllocator::AddAllocVisitor(std::function<void (void*, unsigned long)>)
 W tensorflow::TrackingVisitableAllocator::AddFreeVisitor(std::function<void (void*, unsigned long)>)
 W tensorflow::TrackingVisitableAllocator::AllocateRaw(unsigned long, unsigned long)
 W tensorflow::TrackingVisitableAllocator::DeallocateRaw(void*)
 W tensorflow::TrackingVisitableAllocator::Name[abi:cxx11]()
 W tensorflow::TrackingVisitableAllocator::~TrackingVisitableAllocator()
 W tensorflow::ValuesDef::GetArena() const
 W tensorflow::ValuesDef::GetCachedSize() const
 W tensorflow::ValuesDef::GetMaybeArenaPointer() const
 W tensorflow::ValuesDef::New() const
 W tensorflow::ValuesDef::ValuesDef_ExternalValuesEntry::~ValuesDef_ExternalValuesEntry()
 W tensorflow::VarLenFeatureProto::GetArena() const
 W tensorflow::VarLenFeatureProto::GetCachedSize() const
 W tensorflow::VarLenFeatureProto::GetMaybeArenaPointer() const
 W tensorflow::VarLenFeatureProto::New() const
 W tensorflow::VariableDef::GetArena() const
 W tensorflow::VariableDef::GetCachedSize() const
 W tensorflow::VariableDef::GetMaybeArenaPointer() const
 W tensorflow::VariableDef::New() const
 W tensorflow::Variant* tensorflow::Allocator::Allocate<tensorflow::Variant>(unsigned long, tensorflow::AllocationAttributes const&)
 W tensorflow::Variant::Value<bool>::Clone() const
 W tensorflow::Variant::Value<bool>::DebugString() const
 W tensorflow::Variant::Value<bool>::Decode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W tensorflow::Variant::Value<bool>::Decode(tensorflow::VariantTensorData const&)
 W tensorflow::Variant::Value<bool>::Encode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const
 W tensorflow::Variant::Value<bool>::Encode(tensorflow::VariantTensorData*) const
 W tensorflow::Variant::Value<bool>::RawPtr()
 W tensorflow::Variant::Value<bool>::RawPtr() const
 W tensorflow::Variant::Value<bool>::TypeId() const
 W tensorflow::Variant::Value<bool>::TypeName() const
 W tensorflow::Variant::Value<bool>::~Value()
 W tensorflow::Variant::Value<double>::Clone() const
 W tensorflow::Variant::Value<double>::DebugString() const
 W tensorflow::Variant::Value<double>::Decode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W tensorflow::Variant::Value<double>::Decode(tensorflow::VariantTensorData const&)
 W tensorflow::Variant::Value<double>::Encode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const
 W tensorflow::Variant::Value<double>::Encode(tensorflow::VariantTensorData*) const
 W tensorflow::Variant::Value<double>::RawPtr()
 W tensorflow::Variant::Value<double>::RawPtr() const
 W tensorflow::Variant::Value<double>::TypeId() const
 W tensorflow::Variant::Value<double>::TypeName() const
 W tensorflow::Variant::Value<double>::~Value()
 W tensorflow::Variant::Value<float>::Clone() const
 W tensorflow::Variant::Value<float>::DebugString() const
 W tensorflow::Variant::Value<float>::Decode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W tensorflow::Variant::Value<float>::Decode(tensorflow::VariantTensorData const&)
 W tensorflow::Variant::Value<float>::Encode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const
 W tensorflow::Variant::Value<float>::Encode(tensorflow::VariantTensorData*) const
 W tensorflow::Variant::Value<float>::RawPtr()
 W tensorflow::Variant::Value<float>::RawPtr() const
 W tensorflow::Variant::Value<float>::TypeId() const
 W tensorflow::Variant::Value<float>::TypeName() const
 W tensorflow::Variant::Value<float>::~Value()
 W tensorflow::Variant::Value<int>::Clone() const
 W tensorflow::Variant::Value<int>::DebugString() const
 W tensorflow::Variant::Value<int>::Decode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W tensorflow::Variant::Value<int>::Decode(tensorflow::VariantTensorData const&)
 W tensorflow::Variant::Value<int>::Encode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const
 W tensorflow::Variant::Value<int>::Encode(tensorflow::VariantTensorData*) const
 W tensorflow::Variant::Value<int>::RawPtr()
 W tensorflow::Variant::Value<int>::RawPtr() const
 W tensorflow::Variant::Value<int>::TypeId() const
 W tensorflow::Variant::Value<int>::TypeName() const
 W tensorflow::Variant::Value<int>::~Value()
 W tensorflow::Variant::Value<tensorflow::Tensor>::Clone() const
 W tensorflow::Variant::Value<tensorflow::Tensor>::DebugString() const
 W tensorflow::Variant::Value<tensorflow::Tensor>::Decode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W tensorflow::Variant::Value<tensorflow::Tensor>::Decode(tensorflow::VariantTensorData const&)
 W tensorflow::Variant::Value<tensorflow::Tensor>::Encode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const
 W tensorflow::Variant::Value<tensorflow::Tensor>::Encode(tensorflow::VariantTensorData*) const
 W tensorflow::Variant::Value<tensorflow::Tensor>::RawPtr()
 W tensorflow::Variant::Value<tensorflow::Tensor>::RawPtr() const
 W tensorflow::Variant::Value<tensorflow::Tensor>::TypeId() const
 W tensorflow::Variant::Value<tensorflow::Tensor>::TypeName() const
 W tensorflow::Variant::Value<tensorflow::Tensor>::~Value()
 W tensorflow::Variant::Value<tensorflow::VariantTensorDataProto>::Clone() const
 W tensorflow::Variant::Value<tensorflow::VariantTensorDataProto>::DebugString() const
 W tensorflow::Variant::Value<tensorflow::VariantTensorDataProto>::Decode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W tensorflow::Variant::Value<tensorflow::VariantTensorDataProto>::Decode(tensorflow::VariantTensorData const&)
 W tensorflow::Variant::Value<tensorflow::VariantTensorDataProto>::Encode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) const
 W tensorflow::Variant::Value<tensorflow::VariantTensorDataProto>::Encode(tensorflow::VariantTensorData*) const
 W tensorflow::Variant::Value<tensorflow::VariantTensorDataProto>::RawPtr()
 W tensorflow::Variant::Value<tensorflow::VariantTensorDataProto>::RawPtr() const
 W tensorflow::Variant::Value<tensorflow::VariantTensorDataProto>::TypeId() const
 W tensorflow::Variant::Value<tensorflow::VariantTensorDataProto>::TypeName() const
 W tensorflow::Variant::Value<tensorflow::VariantTensorDataProto>::~Value()
 W tensorflow::VariantTensorDataProto::GetArena() const
 W tensorflow::VariantTensorDataProto::GetCachedSize() const
 W tensorflow::VariantTensorDataProto::GetMaybeArenaPointer() const
 W tensorflow::VariantTensorDataProto::New() const
 W tensorflow::VersionDef::GetArena() const
 W tensorflow::VersionDef::GetCachedSize() const
 W tensorflow::VersionDef::GetMaybeArenaPointer() const
 W tensorflow::VersionDef::New() const
 W tensorflow::WhileContextDef::GetArena() const
 W tensorflow::WhileContextDef::GetCachedSize() const
 W tensorflow::WhileContextDef::GetMaybeArenaPointer() const
 W tensorflow::WhileContextDef::New() const
 W tensorflow::checkpoint::TensorSliceWriter::~TensorSliceWriter()
 W tensorflow::core::RefCounted::Unref() const
 W tensorflow::core::RefCounted::~RefCounted()
 W tensorflow::gtl::FlatMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::value_type::second_type const& tensorflow::gtl::FindWithDefault<tensorflow::gtl::FlatMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(tensorflow::gtl::FlatMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, tensorflow::gtl::FlatMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::value_type::first_type const&, tensorflow::gtl::FlatMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::value_type::second_type const&)
 W tensorflow::gtl::InlinedVector<int, 2>::erase(int*, int*)
 W tensorflow::gtl::InlinedVector<int, 4>::erase(int*, int*)
 W tensorflow::gtl::InlinedVector<long long, 4>::erase(long long*, long long*)
 W tensorflow::gtl::InlinedVector<long long, 4>::operator=(tensorflow::gtl::InlinedVector<long long, 4> const&)
 W tensorflow::gtl::InlinedVector<long long, 8>::erase(long long*, long long*)
 W tensorflow::gtl::InlinedVector<long long, 8>::insert(long long*, long long const&)
 W tensorflow::gtl::InlinedVector<tensorflow::AllocRecord, 4>::swap(tensorflow::gtl::InlinedVector<tensorflow::AllocRecord, 4>&)
 W tensorflow::gtl::InlinedVector<tensorflow::DataType, 4>::operator=(tensorflow::gtl::InlinedVector<tensorflow::DataType, 4> const&)
 W tensorflow::gtl::InlinedVector<tensorflow::DeviceType, 4>::operator=(tensorflow::gtl::InlinedVector<tensorflow::DeviceType, 4> const&)
 W tensorflow::gtl::internal::FlatRep<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::gtl::FlatMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::Bucket, tensorflow::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::Init(unsigned long)
 W tensorflow::gtl::internal::FlatRep<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::gtl::FlatMap<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::unique_ptr<tensorflow::FunctionLibraryDefinition::FunctionDefAndOpRegistration, std::default_delete<tensorflow::FunctionLibraryDefinition::FunctionDefAndOpRegistration> >, tensorflow::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::Bucket, tensorflow::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::Init(unsigned long)
 W tensorflow::internal::Check_LTImpl[abi:cxx11](int, unsigned long, char const*)
 W tensorflow::io::RandomAccessInputStream::Reset()
 W tensorflow::io::RecordReader::~RecordReader()
 W tensorflow::io::SequentialRecordReader::~SequentialRecordReader()
 W tensorflow::io::SnappyInputBuffer::~SnappyInputBuffer()
 W tensorflow::lookup::InitializableLookupTable::ExportValues(tensorflow::OpKernelContext*)
 W tensorflow::lookup::InitializableLookupTable::GetInitializableLookupTable()
 W tensorflow::lookup::InitializableLookupTable::ImportValues(tensorflow::OpKernelContext*, tensorflow::Tensor const&, tensorflow::Tensor const&)
 W tensorflow::lookup::InitializableLookupTable::Insert(tensorflow::OpKernelContext*, tensorflow::Tensor const&, tensorflow::Tensor const&)
 W tensorflow::lookup::InitializableLookupTable::key_shape() const
 W tensorflow::lookup::InitializableLookupTable::value_shape() const
 W tensorflow::lookup::LookupInterface::DebugString[abi:cxx11]()
 W tensorflow::lookup::LookupInterface::GetInitializableLookupTable()
 W tensorflow::monitoring::Counter<0>* tensorflow::monitoring::Counter<0>::New<char const (&) [75], char const (&) [45]>(char const (&) [75], char const (&) [45])
 W tensorflow::monitoring::CounterCell* tensorflow::monitoring::Counter<0>::GetCell<>()
 W tensorflow::monitoring::MetricCollector<(tensorflow::monitoring::MetricKind)1, long long, 0> tensorflow::monitoring::MetricCollectorGetter::Get<(tensorflow::monitoring::MetricKind)1, long long, 0>(tensorflow::monitoring::MetricDef<(tensorflow::monitoring::MetricKind)1, long long, 0> const*)
 W tensorflow::port::Tracing::Engine::StartTracing(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, bool)
 W tensorflow::profile_utils::CpuUtils::DefaultCpuUtilsHelper::CalculateCpuFrequency()
 W tensorflow::profile_utils::CpuUtils::DefaultCpuUtilsHelper::EnableClockCycleProfiling(bool)
 W tensorflow::profile_utils::CpuUtils::DefaultCpuUtilsHelper::GetCurrentClockCycle()
 W tensorflow::profile_utils::CpuUtils::DefaultCpuUtilsHelper::ResetClockCycle()
 W tensorflow::profile_utils::CpuUtils::DefaultCpuUtilsHelper::~DefaultCpuUtilsHelper()
 W tensorflow::shape_inference::InferenceContext::Dim(tensorflow::shape_inference::ShapeHandle, long long)
 W tensorflow::shape_inference::InferenceContext::DimKnownRank(tensorflow::shape_inference::ShapeHandle, long long)
 W tensorflow::shape_inference::InferenceContext::set_output_handle_shapes_and_types(int, std::vector<tensorflow::shape_inference::ShapeAndType, std::allocator<tensorflow::shape_inference::ShapeAndType> > const&)
 W tensorflow::strings::ProtoSpaceAndComments(tensorflow::strings::Scanner*)
 W tensorflow::strings::ProtoTextOutput::AppendFieldAndValue(char const*, tensorflow::StringPiece)
 W tensorflow::strings::ProtoTextOutput::AppendString(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W tensorflow::strings::ProtoTextOutput::CloseNestedMessage()
 W tensorflow::strings::ProtoTextOutput::OpenNestedMessage(char const*)
 W tensorflow::strings::Scanner::Matches(tensorflow::strings::Scanner::CharClass, char)
 W tensorflow::strings::Scanner::One(tensorflow::strings::Scanner::CharClass)
 W tensorflow::table::Block::Iter::Next()
 W tensorflow::table::Block::Iter::Seek(tensorflow::StringPiece const&)
 W tensorflow::table::Block::Iter::SeekToFirst()
 W tensorflow::table::Block::Iter::Valid() const
 W tensorflow::table::Block::Iter::key() const
 W tensorflow::table::Block::Iter::status() const
 W tensorflow::table::Block::Iter::value() const
 W tensorflow::table::Block::Iter::~Iter()
 W tensorflow::thread::ThreadPool::Impl::ParallelFor(long long, long long, std::function<void (long long, long long)>)
 W tensorflow::thread::ThreadPool::Impl::~Impl()
 W tensorflow::variant_op_registry_fn_registration::UnaryVariantBinaryOpRegistration<bool>::UnaryVariantBinaryOpRegistration(tensorflow::VariantBinaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, bool const&, bool const&, bool*)> const&)
 W tensorflow::variant_op_registry_fn_registration::UnaryVariantBinaryOpRegistration<double>::UnaryVariantBinaryOpRegistration(tensorflow::VariantBinaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, double const&, double const&, double*)> const&)
 W tensorflow::variant_op_registry_fn_registration::UnaryVariantBinaryOpRegistration<float>::UnaryVariantBinaryOpRegistration(tensorflow::VariantBinaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, float const&, float const&, float*)> const&)
 W tensorflow::variant_op_registry_fn_registration::UnaryVariantBinaryOpRegistration<int>::UnaryVariantBinaryOpRegistration(tensorflow::VariantBinaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, int const&, int const&, int*)> const&)
 W tensorflow::variant_op_registry_fn_registration::UnaryVariantDecodeRegistration<bool>::UnaryVariantDecodeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W tensorflow::variant_op_registry_fn_registration::UnaryVariantDecodeRegistration<double>::UnaryVariantDecodeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W tensorflow::variant_op_registry_fn_registration::UnaryVariantDecodeRegistration<float>::UnaryVariantDecodeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W tensorflow::variant_op_registry_fn_registration::UnaryVariantDecodeRegistration<int>::UnaryVariantDecodeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W tensorflow::variant_op_registry_fn_registration::UnaryVariantDecodeRegistration<tensorflow::Tensor>::UnaryVariantDecodeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W tensorflow::variant_op_registry_fn_registration::UnaryVariantShapeRegistration<bool>::UnaryVariantShapeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (bool const&, tensorflow::TensorShape*)> const&)
 W tensorflow::variant_op_registry_fn_registration::UnaryVariantShapeRegistration<double>::UnaryVariantShapeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (double const&, tensorflow::TensorShape*)> const&)
 W tensorflow::variant_op_registry_fn_registration::UnaryVariantShapeRegistration<float>::UnaryVariantShapeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (float const&, tensorflow::TensorShape*)> const&)
 W tensorflow::variant_op_registry_fn_registration::UnaryVariantShapeRegistration<int>::UnaryVariantShapeRegistration(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (int const&, tensorflow::TensorShape*)> const&)
 W tensorflow::variant_op_registry_fn_registration::UnaryVariantUnaryOpRegistration<bool>::UnaryVariantUnaryOpRegistration(tensorflow::VariantUnaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, bool const&, bool*)> const&)
 W tensorflow::variant_op_registry_fn_registration::UnaryVariantUnaryOpRegistration<double>::UnaryVariantUnaryOpRegistration(tensorflow::VariantUnaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, double const&, double*)> const&)
 W tensorflow::variant_op_registry_fn_registration::UnaryVariantUnaryOpRegistration<float>::UnaryVariantUnaryOpRegistration(tensorflow::VariantUnaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, float const&, float*)> const&)
 W tensorflow::variant_op_registry_fn_registration::UnaryVariantUnaryOpRegistration<int>::UnaryVariantUnaryOpRegistration(tensorflow::VariantUnaryOp, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<tensorflow::Status (tensorflow::OpKernelContext*, int const&, int*)> const&)
 W unsigned long long highwayhash::ComputeHash<highwayhash::SipHashStateT<1, 3> >(highwayhash::SipHashStateT<1, 3>::Key const&, char const*, unsigned long long)
 W unsigned long long highwayhash::ComputeHash<highwayhash::SipHashStateT<2, 4> >(highwayhash::SipHashStateT<2, 4>::Key const&, char const*, unsigned long long)
 W void absl::base_internal::CallOnceImpl<void (&)()>(std::atomic<unsigned int>*, absl::base_internal::SchedulingMode, void (&)())
 W void absl::base_internal::LowLevelCallOnce<void (&)()>(absl::once_flag*, void (&)())
 W void std::_Destroy_aux<false>::__destroy<tensorflow::gtl::InlinedVector<int, 2>*>(tensorflow::gtl::InlinedVector<int, 2>*, tensorflow::gtl::InlinedVector<int, 2>*)
 W void std::_Destroy_aux<false>::__destroy<tensorflow::gtl::InlinedVector<int, 4>*>(tensorflow::gtl::InlinedVector<int, 4>*, tensorflow::gtl::InlinedVector<int, 4>*)
 W void std::__adjust_heap<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, int, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, long, int, __gnu_cxx::__ops::_Iter_less_iter)
 W void std::__adjust_heap<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, long, long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, __gnu_cxx::__ops::_Iter_less_iter)
 W void std::__adjust_heap<__gnu_cxx::__normal_iterator<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::StatSummarizer::Detail> const*>*, std::vector<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::StatSummarizer::Detail> const*>, std::allocator<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::StatSummarizer::Detail> const*> > > >, long, std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::StatSummarizer::Detail> const*>, __gnu_cxx::__ops::_Iter_comp_iter<std::less<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::StatSummarizer::Detail> const*> > > >(__gnu_cxx::__normal_iterator<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::StatSummarizer::Detail> const*>*, std::vector<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::StatSummarizer::Detail> const*>, std::allocator<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::StatSummarizer::Detail> const*> > > >, long, long, std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::StatSummarizer::Detail> const*>, __gnu_cxx::__ops::_Iter_comp_iter<std::less<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::StatSummarizer::Detail> const*> > >)
 W void std::__adjust_heap<__gnu_cxx::__normal_iterator<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> >*, std::vector<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> >, std::allocator<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> > > > >, long, std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> > > > >(__gnu_cxx::__normal_iterator<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> >*, std::vector<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> >, std::allocator<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> > > > >, long, long, std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> > > >)
 W void std::__adjust_heap<__gnu_cxx::__normal_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*>*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*> > > >, long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*>, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*>*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*> > > >, long, long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*>, __gnu_cxx::__ops::_Iter_less_iter)
 W void std::__adjust_heap<__gnu_cxx::__normal_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*>*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*> > > >, long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*>, __gnu_cxx::__ops::_Iter_comp_iter<std::less<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*> > > >(__gnu_cxx::__normal_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*>*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*> > > >, long, long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*>, __gnu_cxx::__ops::_Iter_comp_iter<std::less<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*> > >)
 W void std::__adjust_heap<__gnu_cxx::__normal_iterator<tensorflow::DeviceType*, std::vector<tensorflow::DeviceType, std::allocator<tensorflow::DeviceType> > >, long, tensorflow::DeviceType, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(tensorflow::DeviceType const&, tensorflow::DeviceType const&)> >(__gnu_cxx::__normal_iterator<tensorflow::DeviceType*, std::vector<tensorflow::DeviceType, std::allocator<tensorflow::DeviceType> > >, long, long, tensorflow::DeviceType, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(tensorflow::DeviceType const&, tensorflow::DeviceType const&)>)
 W void std::__adjust_heap<__gnu_cxx::__normal_iterator<tensorflow::Node const**, std::vector<tensorflow::Node const*, std::allocator<tensorflow::Node const*> > >, long, tensorflow::Node const*, __gnu_cxx::__ops::_Iter_comp_iter<std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> > >(__gnu_cxx::__normal_iterator<tensorflow::Node const**, std::vector<tensorflow::Node const*, std::allocator<tensorflow::Node const*> > >, long, long, tensorflow::Node const*, __gnu_cxx::__ops::_Iter_comp_iter<std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> >)
 W void std::__adjust_heap<__gnu_cxx::__normal_iterator<tensorflow::Node**, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> > >, long, tensorflow::Node*, __gnu_cxx::__ops::_Iter_comp_iter<std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> > >(__gnu_cxx::__normal_iterator<tensorflow::Node**, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> > >, long, long, tensorflow::Node*, __gnu_cxx::__ops::_Iter_comp_iter<std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> >)
 W void std::__adjust_heap<int*, long, int, __gnu_cxx::__ops::_Iter_less_iter>(int*, long, long, int, __gnu_cxx::__ops::_Iter_less_iter)
 W void std::__adjust_heap<re2::SparseArray<int>::IndexValue*, long, re2::SparseArray<int>::IndexValue, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(re2::SparseArray<int>::IndexValue const&, re2::SparseArray<int>::IndexValue const&)> >(re2::SparseArray<int>::IndexValue*, long, long, re2::SparseArray<int>::IndexValue, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(re2::SparseArray<int>::IndexValue const&, re2::SparseArray<int>::IndexValue const&)>)
 W void std::__adjust_heap<std::pair<tensorflow::Node*, int>*, long, std::pair<tensorflow::Node*, int>, __gnu_cxx::__ops::_Iter_less_iter>(std::pair<tensorflow::Node*, int>*, long, long, std::pair<tensorflow::Node*, int>, __gnu_cxx::__ops::_Iter_less_iter)
 W void std::__adjust_heap<tensorflow::Node**, long, tensorflow::Node*, __gnu_cxx::__ops::_Iter_less_iter>(tensorflow::Node**, long, long, tensorflow::Node*, __gnu_cxx::__ops::_Iter_less_iter)
 W void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<tensorflow::Node const**, std::vector<tensorflow::Node const*, std::allocator<tensorflow::Node const*> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> > >(__gnu_cxx::__normal_iterator<tensorflow::Node const**, std::vector<tensorflow::Node const*, std::allocator<tensorflow::Node const*> > >, __gnu_cxx::__normal_iterator<tensorflow::Node const**, std::vector<tensorflow::Node const*, std::allocator<tensorflow::Node const*> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> >)
 W void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<tensorflow::Node**, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> > >(__gnu_cxx::__normal_iterator<tensorflow::Node**, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> > >, __gnu_cxx::__normal_iterator<tensorflow::Node**, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> >)
 W void std::__heap_select<__gnu_cxx::__normal_iterator<tensorflow::Node const**, std::vector<tensorflow::Node const*, std::allocator<tensorflow::Node const*> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> > >(__gnu_cxx::__normal_iterator<tensorflow::Node const**, std::vector<tensorflow::Node const*, std::allocator<tensorflow::Node const*> > >, __gnu_cxx::__normal_iterator<tensorflow::Node const**, std::vector<tensorflow::Node const*, std::allocator<tensorflow::Node const*> > >, __gnu_cxx::__normal_iterator<tensorflow::Node const**, std::vector<tensorflow::Node const*, std::allocator<tensorflow::Node const*> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> >)
 W void std::__heap_select<__gnu_cxx::__normal_iterator<tensorflow::Node**, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> > >(__gnu_cxx::__normal_iterator<tensorflow::Node**, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> > >, __gnu_cxx::__normal_iterator<tensorflow::Node**, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> > >, __gnu_cxx::__normal_iterator<tensorflow::Node**, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> >)
 W void std::__heap_select<re2::SparseArray<int>::IndexValue*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(re2::SparseArray<int>::IndexValue const&, re2::SparseArray<int>::IndexValue const&)> >(re2::SparseArray<int>::IndexValue*, re2::SparseArray<int>::IndexValue*, re2::SparseArray<int>::IndexValue*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(re2::SparseArray<int>::IndexValue const&, re2::SparseArray<int>::IndexValue const&)>)
 W void std::__inplace_stable_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter)
 W void std::__inplace_stable_sort<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter)
 W void std::__insertion_sort<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__ops::_Iter_less_iter)
 W void std::__insertion_sort<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter)
 W void std::__insertion_sort<__gnu_cxx::__normal_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*>*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*> > > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*>*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*> > > >, __gnu_cxx::__normal_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*>*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*> > > >, __gnu_cxx::__ops::_Iter_less_iter)
 W void std::__insertion_sort<__gnu_cxx::__normal_iterator<tensorflow::DeviceType*, std::vector<tensorflow::DeviceType, std::allocator<tensorflow::DeviceType> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(tensorflow::DeviceType const&, tensorflow::DeviceType const&)> >(__gnu_cxx::__normal_iterator<tensorflow::DeviceType*, std::vector<tensorflow::DeviceType, std::allocator<tensorflow::DeviceType> > >, __gnu_cxx::__normal_iterator<tensorflow::DeviceType*, std::vector<tensorflow::DeviceType, std::allocator<tensorflow::DeviceType> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(tensorflow::DeviceType const&, tensorflow::DeviceType const&)>)
 W void std::__insertion_sort<__gnu_cxx::__normal_iterator<tensorflow::Node const**, std::vector<tensorflow::Node const*, std::allocator<tensorflow::Node const*> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> > >(__gnu_cxx::__normal_iterator<tensorflow::Node const**, std::vector<tensorflow::Node const*, std::allocator<tensorflow::Node const*> > >, __gnu_cxx::__normal_iterator<tensorflow::Node const**, std::vector<tensorflow::Node const*, std::allocator<tensorflow::Node const*> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> >)
 W void std::__insertion_sort<__gnu_cxx::__normal_iterator<tensorflow::Node**, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> > >(__gnu_cxx::__normal_iterator<tensorflow::Node**, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> > >, __gnu_cxx::__normal_iterator<tensorflow::Node**, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> >)
 W void std::__insertion_sort<re2::SparseArray<int>::IndexValue*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(re2::SparseArray<int>::IndexValue const&, re2::SparseArray<int>::IndexValue const&)> >(re2::SparseArray<int>::IndexValue*, re2::SparseArray<int>::IndexValue*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(re2::SparseArray<int>::IndexValue const&, re2::SparseArray<int>::IndexValue const&)>)
 W void std::__introselect<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter)
 W void std::__introsort_loop<__gnu_cxx::__normal_iterator<tensorflow::DeviceType*, std::vector<tensorflow::DeviceType, std::allocator<tensorflow::DeviceType> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(tensorflow::DeviceType const&, tensorflow::DeviceType const&)> >(__gnu_cxx::__normal_iterator<tensorflow::DeviceType*, std::vector<tensorflow::DeviceType, std::allocator<tensorflow::DeviceType> > >, __gnu_cxx::__normal_iterator<tensorflow::DeviceType*, std::vector<tensorflow::DeviceType, std::allocator<tensorflow::DeviceType> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(tensorflow::DeviceType const&, tensorflow::DeviceType const&)>)
 W void std::__introsort_loop<__gnu_cxx::__normal_iterator<tensorflow::Node const**, std::vector<tensorflow::Node const*, std::allocator<tensorflow::Node const*> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> > >(__gnu_cxx::__normal_iterator<tensorflow::Node const**, std::vector<tensorflow::Node const*, std::allocator<tensorflow::Node const*> > >, __gnu_cxx::__normal_iterator<tensorflow::Node const**, std::vector<tensorflow::Node const*, std::allocator<tensorflow::Node const*> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> >)
 W void std::__introsort_loop<__gnu_cxx::__normal_iterator<tensorflow::Node**, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> > >(__gnu_cxx::__normal_iterator<tensorflow::Node**, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> > >, __gnu_cxx::__normal_iterator<tensorflow::Node**, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> >)
 W void std::__introsort_loop<re2::SparseArray<int>::IndexValue*, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(re2::SparseArray<int>::IndexValue const&, re2::SparseArray<int>::IndexValue const&)> >(re2::SparseArray<int>::IndexValue*, re2::SparseArray<int>::IndexValue*, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(re2::SparseArray<int>::IndexValue const&, re2::SparseArray<int>::IndexValue const&)>)
 W void std::__make_heap<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter)
 W void std::__make_heap<__gnu_cxx::__normal_iterator<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> >*, std::vector<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> >, std::allocator<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> > > > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> > > > >(__gnu_cxx::__normal_iterator<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> >*, std::vector<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> >, std::allocator<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> > > > >, __gnu_cxx::__normal_iterator<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> >*, std::vector<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> >, std::allocator<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> > > > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> > > >)
 W void std::__make_heap<__gnu_cxx::__normal_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*>*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*> > > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*>*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*> > > >, __gnu_cxx::__normal_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*>*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*> > > >, __gnu_cxx::__ops::_Iter_less_iter)
 W void std::__make_heap<__gnu_cxx::__normal_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*>*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*> > > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*> > > >(__gnu_cxx::__normal_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*>*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*> > > >, __gnu_cxx::__normal_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*>*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*> > > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*> > >)
 W void std::__make_heap<__gnu_cxx::__normal_iterator<tensorflow::DeviceType*, std::vector<tensorflow::DeviceType, std::allocator<tensorflow::DeviceType> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(tensorflow::DeviceType const&, tensorflow::DeviceType const&)> >(__gnu_cxx::__normal_iterator<tensorflow::DeviceType*, std::vector<tensorflow::DeviceType, std::allocator<tensorflow::DeviceType> > >, __gnu_cxx::__normal_iterator<tensorflow::DeviceType*, std::vector<tensorflow::DeviceType, std::allocator<tensorflow::DeviceType> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(tensorflow::DeviceType const&, tensorflow::DeviceType const&)>)
 W void std::__merge_adaptive<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, int*, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, long, int*, long, __gnu_cxx::__ops::_Iter_less_iter)
 W void std::__merge_adaptive<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, long, long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, long, __gnu_cxx::__ops::_Iter_less_iter)
 W void std::__merge_without_buffer<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, long, __gnu_cxx::__ops::_Iter_less_iter)
 W void std::__merge_without_buffer<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, long, long, __gnu_cxx::__ops::_Iter_less_iter)
 W void std::__once_call_impl<std::_Bind_simple<void (*())()> >()
 W void std::__pop_heap<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter)
 W void std::__push_heap<__gnu_cxx::__normal_iterator<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::StatSummarizer::Detail> const*>*, std::vector<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::StatSummarizer::Detail> const*>, std::allocator<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::StatSummarizer::Detail> const*> > > >, long, std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::StatSummarizer::Detail> const*>, __gnu_cxx::__ops::_Iter_comp_val<std::less<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::StatSummarizer::Detail> const*> > > >(__gnu_cxx::__normal_iterator<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::StatSummarizer::Detail> const*>*, std::vector<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::StatSummarizer::Detail> const*>, std::allocator<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::StatSummarizer::Detail> const*> > > >, long, long, std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::StatSummarizer::Detail> const*>, __gnu_cxx::__ops::_Iter_comp_val<std::less<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::StatSummarizer::Detail> const*> > >)
 W void std::__push_heap<__gnu_cxx::__normal_iterator<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> >*, std::vector<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> >, std::allocator<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> > > > >, long, std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> >, __gnu_cxx::__ops::_Iter_comp_val<std::less<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> > > > >(__gnu_cxx::__normal_iterator<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> >*, std::vector<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> >, std::allocator<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> > > > >, long, long, std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> >, __gnu_cxx::__ops::_Iter_comp_val<std::less<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> > > >)
 W void std::__push_heap<__gnu_cxx::__normal_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*>*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*> > > >, long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*>, __gnu_cxx::__ops::_Iter_comp_val<std::less<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*> > > >(__gnu_cxx::__normal_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*>*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*> > > >, long, long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*>, __gnu_cxx::__ops::_Iter_comp_val<std::less<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*> > >)
 W void std::__stable_sort_adaptive<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int*, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int*, long, __gnu_cxx::__ops::_Iter_less_iter)
 W void std::__stable_sort_adaptive<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, long, __gnu_cxx::__ops::_Iter_less_iter)
 W void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Val_less_iter)
 W void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*>*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*> > > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*>*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*> > > >, __gnu_cxx::__ops::_Val_less_iter)
 W void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<tensorflow::DeviceType*, std::vector<tensorflow::DeviceType, std::allocator<tensorflow::DeviceType> > >, __gnu_cxx::__ops::_Val_comp_iter<bool (*)(tensorflow::DeviceType const&, tensorflow::DeviceType const&)> >(__gnu_cxx::__normal_iterator<tensorflow::DeviceType*, std::vector<tensorflow::DeviceType, std::allocator<tensorflow::DeviceType> > >, __gnu_cxx::__ops::_Val_comp_iter<bool (*)(tensorflow::DeviceType const&, tensorflow::DeviceType const&)>)
 W void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<tensorflow::Node const**, std::vector<tensorflow::Node const*, std::allocator<tensorflow::Node const*> > >, __gnu_cxx::__ops::_Val_comp_iter<std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> > >(__gnu_cxx::__normal_iterator<tensorflow::Node const**, std::vector<tensorflow::Node const*, std::allocator<tensorflow::Node const*> > >, __gnu_cxx::__ops::_Val_comp_iter<std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> >)
 W void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<tensorflow::Node**, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> > >, __gnu_cxx::__ops::_Val_comp_iter<std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> > >(__gnu_cxx::__normal_iterator<tensorflow::Node**, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> > >, __gnu_cxx::__ops::_Val_comp_iter<std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> >)
 W void std::call_once<void (&)()>(std::once_flag&, void (&)())
 W void std::deque<re2::DFA::State*, std::allocator<re2::DFA::State*> >::_M_push_back_aux<re2::DFA::State* const&>(re2::DFA::State* const&)
 W void std::deque<re2::WalkState<bool>, std::allocator<re2::WalkState<bool> > >::_M_push_back_aux<re2::WalkState<bool> >(re2::WalkState<bool>&&)
 W void std::deque<re2::WalkState<bool>, std::allocator<re2::WalkState<bool> > >::emplace_back<re2::WalkState<bool> >(re2::WalkState<bool>&&)
 W void std::deque<re2::WalkState<int>, std::allocator<re2::WalkState<int> > >::_M_push_back_aux<re2::WalkState<int> >(re2::WalkState<int>&&)
 W void std::deque<re2::WalkState<int>, std::allocator<re2::WalkState<int> > >::emplace_back<re2::WalkState<int> >(re2::WalkState<int>&&)
 W void std::deque<re2::WalkState<re2::Frag>, std::allocator<re2::WalkState<re2::Frag> > >::_M_push_back_aux<re2::WalkState<re2::Frag> >(re2::WalkState<re2::Frag>&&)
 W void std::deque<re2::WalkState<re2::Frag>, std::allocator<re2::WalkState<re2::Frag> > >::emplace_back<re2::WalkState<re2::Frag> >(re2::WalkState<re2::Frag>&&)
 W void std::deque<re2::WalkState<re2::Prefilter::Info*>, std::allocator<re2::WalkState<re2::Prefilter::Info*> > >::_M_push_back_aux<re2::WalkState<re2::Prefilter::Info*> >(re2::WalkState<re2::Prefilter::Info*>&&)
 W void std::deque<re2::WalkState<re2::Prefilter::Info*>, std::allocator<re2::WalkState<re2::Prefilter::Info*> > >::emplace_back<re2::WalkState<re2::Prefilter::Info*> >(re2::WalkState<re2::Prefilter::Info*>&&)
 W void std::deque<re2::WalkState<re2::Regexp*>, std::allocator<re2::WalkState<re2::Regexp*> > >::_M_push_back_aux<re2::WalkState<re2::Regexp*> >(re2::WalkState<re2::Regexp*>&&)
 W void std::deque<re2::WalkState<re2::Regexp*>, std::allocator<re2::WalkState<re2::Regexp*> > >::emplace_back<re2::WalkState<re2::Regexp*> >(re2::WalkState<re2::Regexp*>&&)
 W void std::deque<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_push_back_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
 W void std::deque<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_push_back_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W void std::deque<tensorflow::Edge const*, std::allocator<tensorflow::Edge const*> >::_M_push_back_aux<tensorflow::Edge const* const&>(tensorflow::Edge const* const&)
 W void std::deque<tensorflow::EventMgr::InUse, std::allocator<tensorflow::EventMgr::InUse> >::_M_push_back_aux<tensorflow::EventMgr::InUse const&>(tensorflow::EventMgr::InUse const&)
 W void std::deque<tensorflow::LocalRendezvousImpl::Item*, std::allocator<tensorflow::LocalRendezvousImpl::Item*> >::_M_push_back_aux<tensorflow::LocalRendezvousImpl::Item* const&>(tensorflow::LocalRendezvousImpl::Item* const&)
 W void std::deque<tensorflow::Node const*, std::allocator<tensorflow::Node const*> >::_M_push_back_aux<tensorflow::Node const* const&>(tensorflow::Node const* const&)
 W void std::deque<tensorflow::Node*, std::allocator<tensorflow::Node*> >::_M_push_back_aux<tensorflow::Node* const&>(tensorflow::Node* const&)
 W void std::deque<tensorflow::Node*, std::allocator<tensorflow::Node*> >::_M_push_back_aux<tensorflow::Node*>(tensorflow::Node*&&)
 W void std::vector<char const*, std::allocator<char const*> >::emplace_back<char const*>(char const*&&)
 W void std::vector<char*, std::allocator<char*> >::_M_emplace_back_aux<char* const&>(char* const&)
 W void std::vector<double, std::allocator<double> >::_M_emplace_back_aux<double>(double&&)
 W void std::vector<double, std::allocator<double> >::_M_range_insert<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > > >(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, std::forward_iterator_tag)
 W void std::vector<double, std::allocator<double> >::_M_range_insert<double const*>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, double const*, double const*, std::forward_iterator_tag)
 W void std::vector<double, std::allocator<double> >::emplace_back<double>(double&&)
 W void std::vector<int, std::allocator<int> >::_M_assign_aux<int*>(int*, int*, std::forward_iterator_tag)
 W void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int const&>(int const&)
 W void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&)
 W void std::vector<int, std::allocator<int> >::_M_insert_aux<int const&>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
 W void std::vector<int, std::allocator<int> >::_M_range_insert<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, std::forward_iterator_tag)
 W void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&)
 W void std::vector<long long, std::allocator<long long> >::_M_emplace_back_aux<long const&>(long const&)
 W void std::vector<long long, std::allocator<long long> >::_M_emplace_back_aux<long long const&>(long long const&)
 W void std::vector<perftools::gputools::Event*, std::allocator<perftools::gputools::Event*> >::_M_emplace_back_aux<perftools::gputools::Event*>(perftools::gputools::Event*&&)
 W void std::vector<png_text_struct, std::allocator<png_text_struct> >::_M_emplace_back_aux<png_text_struct const&>(png_text_struct const&)
 W void std::vector<re2::Prefilter*, std::allocator<re2::Prefilter*> >::_M_emplace_back_aux<re2::Prefilter* const&>(re2::Prefilter* const&)
 W void std::vector<re2::Prog::Inst, std::allocator<re2::Prog::Inst> >::_M_emplace_back_aux<>()
 W void std::vector<re2::Prog::Inst, std::allocator<re2::Prog::Inst> >::emplace_back<>()
 W void std::vector<re2::RE2*, std::allocator<re2::RE2*> >::_M_emplace_back_aux<re2::RE2* const&>(re2::RE2* const&)
 W void std::vector<re2::Regexp*, std::allocator<re2::Regexp*> >::_M_emplace_back_aux<re2::Regexp* const&>(re2::Regexp* const&)
 W void std::vector<re2::RuneRange, std::allocator<re2::RuneRange> >::emplace_back<re2::RuneRange>(re2::RuneRange&&)
 W void std::vector<snappy::SnappySinkAllocator::Datablock, std::allocator<snappy::SnappySinkAllocator::Datablock> >::_M_emplace_back_aux<snappy::SnappySinkAllocator::Datablock const&>(snappy::SnappySinkAllocator::Datablock const&)
 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*> >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*&&)
 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_emplace_back_aux<char const (&) [21]>(char const (&) [21])
 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_emplace_back_aux<char const*, unsigned long>(char const*&&, unsigned long&&)
 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_emplace_back_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_emplace_back_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::forward_iterator_tag)
 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<char const*, unsigned long>(char const*&&, unsigned long&&)
 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W void std::vector<std::function<tensorflow::Status (tensorflow::OpRegistrationData*)>, std::allocator<std::function<tensorflow::Status (tensorflow::OpRegistrationData*)> > >::_M_emplace_back_aux<std::function<tensorflow::Status (tensorflow::OpRegistrationData*)> const&>(std::function<tensorflow::Status (tensorflow::OpRegistrationData*)> const&)
 W void std::vector<std::function<void (void*, unsigned long)>, std::allocator<std::function<void (void*, unsigned long)> > >::_M_emplace_back_aux<std::function<void (void*, unsigned long)> const&>(std::function<void (void*, unsigned long)> const&)
 W void std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_M_emplace_back_aux<int&, int&>(int&, int&)
 W void std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_M_emplace_back_aux<std::pair<int, int> >(std::pair<int, int>&&)
 W void std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >::emplace_back<int&, int&>(int&, int&)
 W void std::vector<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::StatSummarizer::Detail> const*>, std::allocator<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::StatSummarizer::Detail> const*> > >::_M_emplace_back_aux<double, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::StatSummarizer::Detail> const*>(double&&, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::StatSummarizer::Detail> const*&&)
 W void std::vector<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> >, std::allocator<std::pair<long long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> > > >::_M_emplace_back_aux<long long const&, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long> >(long long const&, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, long long>&&)
 W void std::vector<std::pair<perftools::gputools::StreamExecutorConfig, std::unique_ptr<perftools::gputools::StreamExecutor, std::default_delete<perftools::gputools::StreamExecutor> > >, std::allocator<std::pair<perftools::gputools::StreamExecutorConfig, std::unique_ptr<perftools::gputools::StreamExecutor, std::default_delete<perftools::gputools::StreamExecutor> > > > >::_M_emplace_back_aux<perftools::gputools::StreamExecutorConfig const&, std::unique_ptr<perftools::gputools::StreamExecutor, std::default_delete<perftools::gputools::StreamExecutor> > >(perftools::gputools::StreamExecutorConfig const&, std::unique_ptr<perftools::gputools::StreamExecutor, std::default_delete<perftools::gputools::StreamExecutor> >&&)
 W void std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*> > >::_M_emplace_back_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, re2::Regexp*&)
 W void std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_emplace_back_aux<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&)
 W void std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::SessionFactory*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::SessionFactory*> > >::_M_emplace_back_aux<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::SessionFactory*> >(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::SessionFactory*>&&)
 W void std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*> > >::_M_emplace_back_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::StatSummarizer::Detail const*&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, tensorflow::StatSummarizer::Detail const*&)
 W void std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > >::_M_emplace_back_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Tensor&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Tensor&)
 W void std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Tensor&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Tensor&)
 W void std::vector<std::pair<std::unique_ptr<perftools::gputools::Stream, std::default_delete<perftools::gputools::Stream> >, bool>, std::allocator<std::pair<std::unique_ptr<perftools::gputools::Stream, std::default_delete<perftools::gputools::Stream> >, bool> > >::_M_emplace_back_aux<std::unique_ptr<perftools::gputools::Stream, std::default_delete<perftools::gputools::Stream> >, bool>(std::unique_ptr<perftools::gputools::Stream, std::default_delete<perftools::gputools::Stream> >&&, bool&&)
 W void std::vector<std::pair<tensorflow::Node*, int>, std::allocator<std::pair<tensorflow::Node*, int> > >::_M_emplace_back_aux<std::pair<tensorflow::Node*, int> >(std::pair<tensorflow::Node*, int>&&)
 W void std::vector<std::pair<tensorflow::Node*, int>, std::allocator<std::pair<tensorflow::Node*, int> > >::emplace_back<std::pair<tensorflow::Node*, int> >(std::pair<tensorflow::Node*, int>&&)
 W void std::vector<std::pair<tensorflow::Node*, tensorflow::FunctionBody const*>, std::allocator<std::pair<tensorflow::Node*, tensorflow::FunctionBody const*> > >::_M_emplace_back_aux<std::pair<tensorflow::Node*, tensorflow::FunctionBody const*> >(std::pair<tensorflow::Node*, tensorflow::FunctionBody const*>&&)
 W void std::vector<std::pair<tensorflow::NodeDef const*, long long>, std::allocator<std::pair<tensorflow::NodeDef const*, long long> > >::_M_emplace_back_aux<tensorflow::NodeDef const*&, long long&>(tensorflow::NodeDef const*&, long long&)
 W void std::vector<std::pair<tensorflow::TensorSlice, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<tensorflow::TensorSlice, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::_M_emplace_back_aux<std::pair<tensorflow::TensorSlice, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::pair<tensorflow::TensorSlice, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&)
 W void std::vector<std::pair<tensorflow::TensorSlice, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<tensorflow::TensorSlice, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >::emplace_back<std::pair<tensorflow::TensorSlice, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(std::pair<tensorflow::TensorSlice, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&&)
 W void std::vector<std::pair<tensorflow::shape_inference::DimensionHandle, tensorflow::shape_inference::DimensionHandle>, std::allocator<std::pair<tensorflow::shape_inference::DimensionHandle, tensorflow::shape_inference::DimensionHandle> > >::_M_emplace_back_aux<tensorflow::shape_inference::DimensionHandle&, tensorflow::shape_inference::DimensionHandle&>(tensorflow::shape_inference::DimensionHandle&, tensorflow::shape_inference::DimensionHandle&)
 W void std::vector<std::pair<tensorflow::shape_inference::DimensionHandle, tensorflow::shape_inference::DimensionHandle>, std::allocator<std::pair<tensorflow::shape_inference::DimensionHandle, tensorflow::shape_inference::DimensionHandle> > >::emplace_back<tensorflow::shape_inference::DimensionHandle&, tensorflow::shape_inference::DimensionHandle&>(tensorflow::shape_inference::DimensionHandle&, tensorflow::shape_inference::DimensionHandle&)
 W void std::vector<std::pair<tensorflow::shape_inference::ShapeHandle, tensorflow::shape_inference::ShapeHandle>, std::allocator<std::pair<tensorflow::shape_inference::ShapeHandle, tensorflow::shape_inference::ShapeHandle> > >::_M_emplace_back_aux<tensorflow::shape_inference::ShapeHandle&, tensorflow::shape_inference::ShapeHandle&>(tensorflow::shape_inference::ShapeHandle&, tensorflow::shape_inference::ShapeHandle&)
 W void std::vector<std::pair<tensorflow::shape_inference::ShapeHandle, tensorflow::shape_inference::ShapeHandle>, std::allocator<std::pair<tensorflow::shape_inference::ShapeHandle, tensorflow::shape_inference::ShapeHandle> > >::emplace_back<tensorflow::shape_inference::ShapeHandle&, tensorflow::shape_inference::ShapeHandle&>(tensorflow::shape_inference::ShapeHandle&, tensorflow::shape_inference::ShapeHandle&)
 W void std::vector<std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor*, tensorflow::Rendezvous::ParsedKey, tensorflow::AllocatorAttributes>, std::allocator<std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor*, tensorflow::Rendezvous::ParsedKey, tensorflow::AllocatorAttributes> > >::_M_emplace_back_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Tensor*, tensorflow::Rendezvous::ParsedKey&, tensorflow::AllocatorAttributes&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Tensor*&&, tensorflow::Rendezvous::ParsedKey&, tensorflow::AllocatorAttributes&)
 W void std::vector<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> >, std::allocator<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> > > >::_M_emplace_back_aux<std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> > >(std::unique_ptr<tensorflow::GraphOptimizationPass, std::default_delete<tensorflow::GraphOptimizationPass> >&&)
 W void std::vector<std::unique_ptr<tensorflow::NodeExecStatsWrapper, std::default_delete<tensorflow::NodeExecStatsWrapper> >, std::allocator<std::unique_ptr<tensorflow::NodeExecStatsWrapper, std::default_delete<tensorflow::NodeExecStatsWrapper> > > >::_M_emplace_back_aux<std::unique_ptr<tensorflow::NodeExecStatsWrapper, std::default_delete<tensorflow::NodeExecStatsWrapper> > >(std::unique_ptr<tensorflow::NodeExecStatsWrapper, std::default_delete<tensorflow::NodeExecStatsWrapper> >&&)
 W void std::vector<std::unique_ptr<tensorflow::monitoring::Point, std::default_delete<tensorflow::monitoring::Point> >, std::allocator<std::unique_ptr<tensorflow::monitoring::Point, std::default_delete<tensorflow::monitoring::Point> > > >::_M_emplace_back_aux<tensorflow::monitoring::Point*>(tensorflow::monitoring::Point*&&)
 W void std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_M_emplace_back_aux<>()
 W void std::vector<tensorflow::Allocator*, std::allocator<tensorflow::Allocator*> >::_M_emplace_back_aux<tensorflow::Allocator*>(tensorflow::Allocator*&&)
 W void std::vector<tensorflow::Allocator*, std::allocator<tensorflow::Allocator*> >::emplace_back<tensorflow::Allocator*>(tensorflow::Allocator*&&)
 W void std::vector<tensorflow::AllocatorRegistry::AllocatorRegistryEntry, std::allocator<tensorflow::AllocatorRegistry::AllocatorRegistryEntry> >::_M_emplace_back_aux<tensorflow::AllocatorRegistry::AllocatorRegistryEntry const&>(tensorflow::AllocatorRegistry::AllocatorRegistryEntry const&)
 W void std::vector<tensorflow::BFCAllocator::AllocationRegion, std::allocator<tensorflow::BFCAllocator::AllocationRegion> >::_M_insert_aux<tensorflow::BFCAllocator::AllocationRegion>(__gnu_cxx::__normal_iterator<tensorflow::BFCAllocator::AllocationRegion*, std::vector<tensorflow::BFCAllocator::AllocationRegion, std::allocator<tensorflow::BFCAllocator::AllocationRegion> > >, tensorflow::BFCAllocator::AllocationRegion&&)
 W void std::vector<tensorflow::DataType, std::allocator<tensorflow::DataType> >::_M_emplace_back_aux<tensorflow::DataType>(tensorflow::DataType&&)
 W void std::vector<tensorflow::DataType, std::allocator<tensorflow::DataType> >::emplace_back<tensorflow::DataType>(tensorflow::DataType&&)
 W void std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> >::_M_emplace_back_aux<tensorflow::Device* const&>(tensorflow::Device* const&)
 W void std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> >::_M_emplace_back_aux<tensorflow::Device*>(tensorflow::Device*&&)
 W void std::vector<tensorflow::DeviceAttributes, std::allocator<tensorflow::DeviceAttributes> >::_M_emplace_back_aux<tensorflow::DeviceAttributes const&>(tensorflow::DeviceAttributes const&)
 W void std::vector<tensorflow::DeviceType, std::allocator<tensorflow::DeviceType> >::_M_emplace_back_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 W void std::vector<tensorflow::Edge const*, std::allocator<tensorflow::Edge const*> >::_M_emplace_back_aux<tensorflow::Edge const* const&>(tensorflow::Edge const* const&)
 W void std::vector<tensorflow::Edge const*, std::allocator<tensorflow::Edge const*> >::_M_emplace_back_aux<tensorflow::Edge const*&>(tensorflow::Edge const*&)
 W void std::vector<tensorflow::Edge const*, std::allocator<tensorflow::Edge const*> >::emplace_back<tensorflow::Edge const*&>(tensorflow::Edge const*&)
 W void std::vector<tensorflow::Edge*, std::allocator<tensorflow::Edge*> >::_M_emplace_back_aux<tensorflow::Edge* const&>(tensorflow::Edge* const&)
 W void std::vector<tensorflow::FunctionDef const*, std::allocator<tensorflow::FunctionDef const*> >::_M_emplace_back_aux<tensorflow::FunctionDef const* const&>(tensorflow::FunctionDef const* const&)
 W void std::vector<tensorflow::NameAttrList, std::allocator<tensorflow::NameAttrList> >::_M_emplace_back_aux<tensorflow::NameAttrList const&>(tensorflow::NameAttrList const&)
 W void std::vector<tensorflow::Node const*, std::allocator<tensorflow::Node const*> >::_M_emplace_back_aux<tensorflow::Node const* const&>(tensorflow::Node const* const&)
 W void std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> >::_M_assign_aux<tensorflow::Node* const*>(tensorflow::Node* const*, tensorflow::Node* const*, std::forward_iterator_tag)
 W void std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> >::_M_emplace_back_aux<tensorflow::Node* const&>(tensorflow::Node* const&)
 W void std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> >::_M_emplace_back_aux<tensorflow::Node*&>(tensorflow::Node*&)
 W void std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> >::_M_emplace_back_aux<tensorflow::Node*>(tensorflow::Node*&&)
 W void std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> >::_M_range_insert<tensorflow::Node* const*>(__gnu_cxx::__normal_iterator<tensorflow::Node**, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> > >, tensorflow::Node* const*, tensorflow::Node* const*, std::forward_iterator_tag)
 W void std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> >::emplace_back<tensorflow::Node*&>(tensorflow::Node*&)
 W void std::vector<tensorflow::NodeBuilder::NodeOut, std::allocator<tensorflow::NodeBuilder::NodeOut> >::_M_emplace_back_aux<tensorflow::Node* const&, int const&>(tensorflow::Node* const&, int const&)
 W void std::vector<tensorflow::NodeBuilder::NodeOut, std::allocator<tensorflow::NodeBuilder::NodeOut> >::_M_emplace_back_aux<tensorflow::Node*&>(tensorflow::Node*&)
 W void std::vector<tensorflow::NodeBuilder::NodeOut, std::allocator<tensorflow::NodeBuilder::NodeOut> >::emplace_back<tensorflow::Node* const&, int const&>(tensorflow::Node* const&, int const&)
 W void std::vector<tensorflow::NodeBuilder::NodeOut, std::allocator<tensorflow::NodeBuilder::NodeOut> >::emplace_back<tensorflow::Node*&>(tensorflow::Node*&)
 W void std::vector<tensorflow::NodeDef const*, std::allocator<tensorflow::NodeDef const*> >::_M_emplace_back_aux<tensorflow::NodeDef const* const&>(tensorflow::NodeDef const* const&)
 W void std::vector<tensorflow::NodeDef const*, std::allocator<tensorflow::NodeDef const*> >::_M_emplace_back_aux<tensorflow::NodeDef const*>(tensorflow::NodeDef const*&&)
 W void std::vector<tensorflow::NodeDef const*, std::allocator<tensorflow::NodeDef const*> >::emplace_back<tensorflow::NodeDef const*>(tensorflow::NodeDef const*&&)
 W void std::vector<tensorflow::NodeDef*, std::allocator<tensorflow::NodeDef*> >::_M_emplace_back_aux<tensorflow::NodeDef* const&>(tensorflow::NodeDef* const&)
 W void std::vector<tensorflow::NodeDef, std::allocator<tensorflow::NodeDef> >::_M_emplace_back_aux<>()
 W void std::vector<tensorflow::NodeOut, std::allocator<tensorflow::NodeOut> >::_M_emplace_back_aux<tensorflow::NodeOut const&>(tensorflow::NodeOut const&)
 W void std::vector<tensorflow::NodeOut, std::allocator<tensorflow::NodeOut> >::_M_emplace_back_aux<tensorflow::NodeOut>(tensorflow::NodeOut&&)
 W void std::vector<tensorflow::NodeOut, std::allocator<tensorflow::NodeOut> >::emplace_back<tensorflow::NodeOut>(tensorflow::NodeOut&&)
 W void std::vector<tensorflow::OpDef, std::allocator<tensorflow::OpDef> >::_M_emplace_back_aux<tensorflow::OpDef const&>(tensorflow::OpDef const&)
 W void std::vector<tensorflow::PartialTensorShape, std::allocator<tensorflow::PartialTensorShape> >::_M_emplace_back_aux<tensorflow::PartialTensorShape const&>(tensorflow::PartialTensorShape const&)
 W void std::vector<tensorflow::PartialTensorShape, std::allocator<tensorflow::PartialTensorShape> >::_M_emplace_back_aux<tensorflow::PartialTensorShape>(tensorflow::PartialTensorShape&&)
 W void std::vector<tensorflow::StatSummarizer::Detail const*, std::allocator<tensorflow::StatSummarizer::Detail const*> >::_M_emplace_back_aux<tensorflow::StatSummarizer::Detail const* const&>(tensorflow::StatSummarizer::Detail const* const&)
 W void std::vector<tensorflow::Status, std::allocator<tensorflow::Status> >::_M_emplace_back_aux<tensorflow::Status const&>(tensorflow::Status const&)
 W void std::vector<tensorflow::StringPiece, std::allocator<tensorflow::StringPiece> >::_M_emplace_back_aux<tensorflow::StringPiece const&>(tensorflow::StringPiece const&)
 W void std::vector<tensorflow::StringPiece, std::allocator<tensorflow::StringPiece> >::_M_emplace_back_aux<tensorflow::StringPiece>(tensorflow::StringPiece&&)
 W void std::vector<tensorflow::StringPiece, std::allocator<tensorflow::StringPiece> >::emplace_back<tensorflow::StringPiece>(tensorflow::StringPiece&&)
 W void std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >::_M_emplace_back_aux<>()
 W void std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >::_M_emplace_back_aux<tensorflow::DataType, tensorflow::TensorShape&>(tensorflow::DataType&&, tensorflow::TensorShape&)
 W void std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >::_M_emplace_back_aux<tensorflow::DataType, tensorflow::TensorShape>(tensorflow::DataType&&, tensorflow::TensorShape&&)
 W void std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >::_M_emplace_back_aux<tensorflow::Tensor const&>(tensorflow::Tensor const&)
 W void std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >::_M_emplace_back_aux<tensorflow::Tensor&>(tensorflow::Tensor&)
 W void std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >::_M_emplace_back_aux<tensorflow::Tensor>(tensorflow::Tensor&&)
 W void std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >::emplace_back<tensorflow::DataType, tensorflow::TensorShape&>(tensorflow::DataType&&, tensorflow::TensorShape&)
 W void std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >::emplace_back<tensorflow::DataType, tensorflow::TensorShape>(tensorflow::DataType&&, tensorflow::TensorShape&&)
 W void std::vector<tensorflow::TensorId, std::allocator<tensorflow::TensorId> >::_M_emplace_back_aux<tensorflow::TensorId const&>(tensorflow::TensorId const&)
 W void std::vector<tensorflow::TensorShape, std::allocator<tensorflow::TensorShape> >::_M_emplace_back_aux<tensorflow::TensorShape>(tensorflow::TensorShape&&)
 W void std::vector<tensorflow::TensorShapeProto, std::allocator<tensorflow::TensorShapeProto> >::_M_emplace_back_aux<tensorflow::TensorShapeProto const&>(tensorflow::TensorShapeProto const&)
 W void std::vector<tensorflow::TensorSlice, std::allocator<tensorflow::TensorSlice> >::_M_emplace_back_aux<tensorflow::TensorSliceProto const&>(tensorflow::TensorSliceProto const&)
 W void std::vector<tensorflow::shape_inference::Dimension*, std::allocator<tensorflow::shape_inference::Dimension*> >::_M_emplace_back_aux<tensorflow::shape_inference::Dimension*>(tensorflow::shape_inference::Dimension*&&)
 W void std::vector<tensorflow::shape_inference::Dimension*, std::allocator<tensorflow::shape_inference::Dimension*> >::emplace_back<tensorflow::shape_inference::Dimension*>(tensorflow::shape_inference::Dimension*&&)
 W void std::vector<tensorflow::shape_inference::DimensionHandle, std::allocator<tensorflow::shape_inference::DimensionHandle> >::_M_emplace_back_aux<tensorflow::shape_inference::DimensionHandle const&>(tensorflow::shape_inference::DimensionHandle const&)
 W void std::vector<tensorflow::shape_inference::DimensionHandle, std::allocator<tensorflow::shape_inference::DimensionHandle> >::emplace_back<tensorflow::shape_inference::DimensionHandle>(tensorflow::shape_inference::DimensionHandle&&)
 W void std::vector<tensorflow::shape_inference::Shape*, std::allocator<tensorflow::shape_inference::Shape*> >::emplace_back<tensorflow::shape_inference::Shape*>(tensorflow::shape_inference::Shape*&&)
 W void std::vector<tensorflow::shape_inference::ShapeHandle, std::allocator<tensorflow::shape_inference::ShapeHandle> >::_M_emplace_back_aux<tensorflow::shape_inference::ShapeHandle>(tensorflow::shape_inference::ShapeHandle&&)
 W void std::vector<unsigned int, std::allocator<unsigned int> >::_M_emplace_back_aux<unsigned int>(unsigned int&&)
 W void std::vector<unsigned int, std::allocator<unsigned int> >::emplace_back<unsigned int>(unsigned int&&)
 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_emplace_back_aux<unsigned long>(unsigned long&&)
 W void std::vector<unsigned long, std::allocator<unsigned long> >::emplace_back<unsigned long>(unsigned long&&)
 W void tensorflow::EncodeVariant<bool>(bool const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 W void tensorflow::EncodeVariant<double>(double const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 W void tensorflow::EncodeVariant<float>(float const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 W void tensorflow::EncodeVariant<int>(int const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 W void tensorflow::Tensor::FillDimsAndValidateCompatibleShape<1ul>(tensorflow::gtl::ArraySlice<long long>, Eigen::array<long, 1ul>*) const
 W void tensorflow::Tensor::FillDimsAndValidateCompatibleShape<1ul>(tensorflow::gtl::ArraySlice<long long>, std::array<long, 1ul>*) const
 W void tensorflow::TensorSlice::FillIndicesAndSizes<8>(tensorflow::TensorShape const&, Eigen::DSizes<long, 8>*, Eigen::DSizes<long, 8>*) const
 W void tensorflow::errors::AppendToMessage<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(tensorflow::Status*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 W void tensorflow::errors::AppendToMessage<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(tensorflow::Status*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 W void tensorflow::errors::AppendToMessage<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(tensorflow::Status*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
 W void tensorflow::errors::AppendToMessage<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*>(tensorflow::Status*, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char const*)
 W void tensorflow::errors::AppendToMessage<char const*>(tensorflow::Status*, char const*)
 W void tensorflow::errors::AppendToMessage<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(tensorflow::Status*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
 W void tensorflow::gtl::InlinedVector<long long, 4>::emplace_back<long long>(long long&&)
 W void tensorflow::gtl::InlinedVector<tensorflow::AllocatorAttributes, 4>::Grow<&tensorflow::gtl::InlinedVector<tensorflow::AllocatorAttributes, 4>::Move, tensorflow::gtl::InlinedVector<tensorflow::AllocatorAttributes, 4>::Uninitialized>(unsigned long)
 W void tensorflow::gtl::InlinedVector<tensorflow::DataType, 4>::Grow<&tensorflow::gtl::InlinedVector<tensorflow::DataType, 4>::Move, tensorflow::gtl::InlinedVector<tensorflow::DataType, 4>::Uninitialized>(unsigned long)
 W void tensorflow::gtl::InlinedVector<tensorflow::DataType, 4>::emplace_back<tensorflow::DataType const&>(tensorflow::DataType const&)
 W void tensorflow::gtl::InlinedVector<tensorflow::DeviceContext*, 4>::Grow<&tensorflow::gtl::InlinedVector<tensorflow::DeviceContext*, 4>::Move, tensorflow::gtl::InlinedVector<tensorflow::DeviceContext*, 4>::Uninitialized>(unsigned long)
 W void tensorflow::gtl::InlinedVector<tensorflow::Node*, 4>::Resize<&tensorflow::gtl::InlinedVector<tensorflow::Node*, 4>::ValueInit>(unsigned long, tensorflow::Node* const*)
 W void tensorflow::gtl::InlinedVector<tensorflow::Node*, 4>::emplace_back<tensorflow::Node* const&>(tensorflow::Node* const&)
 W void tensorflow::gtl::InlinedVector<tensorflow::Node*, 8>::emplace_back<tensorflow::Node* const&>(tensorflow::Node* const&)
 W void tensorflow::gtl::InlinedVector<tensorflow::TensorValue, 4>::Grow<&tensorflow::gtl::InlinedVector<tensorflow::TensorValue, 4>::Move, tensorflow::gtl::InlinedVector<tensorflow::TensorValue, 4>::Uninitialized>(unsigned long)
 W void tensorflow::strings::ProtoTextOutput::AppendNumeric<int>(char const*, int)
 W void tensorflow::strings::ProtoTextOutput::AppendNumeric<long>(char const*, long)
 _ITM_deregisterTMCloneTable
 _ITM_registerTMCloneTable
 _Jv_RegisterClasses
 _Unwind_Resume
 __ctype_b_loc
 __cxa_allocate_exception
 __cxa_atexit
 __cxa_begin_catch
 __cxa_demangle
 __cxa_end_catch
 __cxa_finalize
 __cxa_free_exception
 __cxa_guard_abort
 __cxa_guard_acquire
 __cxa_guard_release
 __cxa_pure_virtual
 __cxa_rethrow
 __cxa_thread_atexit
 __cxa_throw
 __cxa_throw_bad_array_new_length
 __dynamic_cast
 __errno_location
 __fxstat
 __gmon_start__
 __gxx_personality_v0
 __isoc99_sscanf
 __longjmp_chk
 __memcpy_chk
 __memset_chk
 __once_proxy
 __poll_chk
 __pthread_key_create
 __rawmemchr
 __realpath_chk
 __register_atfork
 __sched_cpucount
 __sprintf_chk
 __stack_chk_fail
 __tls_get_addr
 __xstat
 _exit
 _setjmp
 a F_0_081
 a F_0_114
 a F_0_168
 a F_0_211
 a F_0_228
 a F_0_250
 a F_0_285
 a F_0_298
 a F_0_299
 a F_0_331
 a F_0_337
 a F_0_344
 a F_0_382
 a F_0_390
 a F_0_402
 a F_0_418
 a F_0_509
 a F_0_541
 a F_0_587
 a F_0_601
 a F_0_707
 a F_0_714
 a F_0_720
 a F_0_765
 a F_0_850
 a F_0_899
 a F_1_061
 a F_1_082
 a F_1_175
 a F_1_272
 a F_1_306
 a F_1_402
 a F_1_414
 a F_1_451
 a F_1_501
 a F_1_613
 a F_1_772
 a F_1_847
 a F_1_961
 a F_2_053
 a F_2_172
 a F_2_562
 a F_2_613
 a F_3_072
 a F_3_624
 abort
 access
 b SortRGBAxis
 b ValgrindSlowdown::slowdown
 b __cpu_model
 b __tls_guard
 b a0
 b absl::base_internal::(anonymous namespace)::init_thread_identity_key_once
 b absl::base_internal::(anonymous namespace)::pthread_key_initialized
 b absl::base_internal::(anonymous namespace)::thread_identity_pthread_key
 b absl::base_internal::adaptive_spin_count
 b absl::base_internal::delay_rand
 b absl::base_internal::init_system_info_once
 b absl::base_internal::num_cpus
 b arenas_lock
 b base_allocated
 b base_avail_szsnad
 b base_extent_sn_next
 b base_mapped
 b base_mtx
 b base_nodes
 b base_resident
 b bt2gctx_mtx
 b completed.7585
 b ctl_epoch
 b ctl_initialized
 b ctl_mtx
 b ctl_stats
 b decay_time_default
 b double tensorflow::(anonymous namespace)::locale_independent_strtonum<double>(char const*, char const**)::special_nums
 b dss_base
 b dss_exhausted
 b dss_max
 b float tensorflow::(anonymous namespace)::locale_independent_strtonum<float>(char const*, char const**)::special_nums
 b guard variable for double tensorflow::(anonymous namespace)::locale_independent_strtonum<double>(char const*, char const**)::special_nums
 b guard variable for float tensorflow::(anonymous namespace)::locale_independent_strtonum<float>(char const*, char const**)::special_nums
 b guard variable for perftools::gputools::GetPluginRegistryMutex()::mu
 b guard variable for perftools::gputools::internal::CachedDsoLoader::GetCublasDsoHandle()::result
 b guard variable for perftools::gputools::internal::CachedDsoLoader::GetCudnnDsoHandle()::result
 b guard variable for perftools::gputools::internal::CachedDsoLoader::GetCufftDsoHandle()::result
 b guard variable for perftools::gputools::internal::CachedDsoLoader::GetCurandDsoHandle()::result
 b guard variable for perftools::gputools::internal::CachedDsoLoader::GetLibcudaDsoHandle()::result
 b guard variable for perftools::gputools::internal::CachedDsoLoader::GetLibcuptiDsoHandle()::result
 b guard variable for perftools::gputools::internal::DsoLoader::GetRpaths()::rpaths
 b guard variable for perftools::gputools::internal::GetRpathMutex()::mu
 b guard variable for perftools::gputools::internal::MakeCUDAExecutorImplementation()::instance
 b guard variable for perftools::gputools::internal::MakeOpenCLExecutorImplementation()::instance
 b guard variable for tensorflow::(anonymous namespace)::GetCustomCreatorSingleton()::ccs
 b guard variable for tensorflow::(anonymous namespace)::IsGradientNode(tensorflow::Graph const*, tensorflow::Node const*)::tag
 b guard variable for tensorflow::(anonymous namespace)::MutableRegistry()::registry
 b guard variable for tensorflow::(anonymous namespace)::UniqueConstantId()::id
 b guard variable for tensorflow::(anonymous namespace)::device_factories()::factories
 b guard variable for tensorflow::(anonymous namespace)::get_device_factory_lock()::device_factory_lock
 b guard variable for tensorflow::(anonymous namespace)::get_session_factory_lock()::session_factory_lock
 b guard variable for tensorflow::(anonymous namespace)::session_factories()::factories
 b guard variable for tensorflow::AllocatorRegistry::Global()::global_allocator_registry
 b guard variable for tensorflow::AttrSlice::AttrSlice()::kEmptyAttrValueMap
 b guard variable for tensorflow::CheckOpDeprecation(tensorflow::OpDef const&, int)::mu
 b guard variable for tensorflow::CheckOpDeprecation(tensorflow::OpDef const&, int)::warned
 b guard variable for tensorflow::ComputePool(tensorflow::SessionOptions const&)::compute_pool
 b guard variable for tensorflow::Env::Default()::default_env
 b guard variable for tensorflow::EnvTime::Default()::default_env_time
 b guard variable for tensorflow::GlobalKernelRegistry()::global_kernel_registry
 b guard variable for tensorflow::LoadLibrary(char const*, void**, void const**, unsigned long*)::loaded_libs
 b guard variable for tensorflow::LoadLibrary(char const*, void**, void const**, unsigned long*)::mu
 b guard variable for tensorflow::LocalDevice::LocalDevice(tensorflow::SessionOptions const&, tensorflow::DeviceAttributes const&)::global_tp_info
 b guard variable for tensorflow::OpRegistry::Global()::global_op_registry
 b guard variable for tensorflow::OptimizationPassRegistry::Global()::global_optimization_registry
 b guard variable for tensorflow::Status::empty_string()::empty
 b guard variable for tensorflow::UnaryVariantOpRegistry::Global()::global_unary_variant_op_registry
 b guard variable for tensorflow::UnaryVariantOpRegistry::PersistentStringStorage()::string_storage
 b guard variable for tensorflow::cpu_allocator()::cpu_alloc
 b guard variable for tensorflow::crc32c::Extend(unsigned int, char const*, unsigned long)::can_accelerate
 b guard variable for tensorflow::example::(anonymous namespace)::FastParseSerializedExample(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, tensorflow::example::FastParseExampleConfig const&, tensorflow::PresizedCuckooMap<std::pair<unsigned long, tensorflow::example::(anonymous namespace)::Type> > const&, tensorflow::example::(anonymous namespace)::SeededHasher, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::vector<tensorflow::example::(anonymous namespace)::SparseBuffer, std::allocator<tensorflow::example::(anonymous namespace)::SparseBuffer> >*, std::vector<tensorflow::example::(anonymous namespace)::SparseBuffer, std::allocator<tensorflow::example::(anonymous namespace)::SparseBuffer> >*)::duplicated_dense_feature
 b guard variable for tensorflow::example::(anonymous namespace)::FastParseSerializedExample(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, tensorflow::example::FastParseExampleConfig const&, tensorflow::PresizedCuckooMap<std::pair<unsigned long, tensorflow::example::(anonymous namespace)::Type> > const&, tensorflow::example::(anonymous namespace)::SeededHasher, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::vector<tensorflow::example::(anonymous namespace)::SparseBuffer, std::allocator<tensorflow::example::(anonymous namespace)::SparseBuffer> >*, std::vector<tensorflow::example::(anonymous namespace)::SparseBuffer, std::allocator<tensorflow::example::(anonymous namespace)::SparseBuffer> >*)::duplicated_sparse_feature
 b guard variable for tensorflow::gradient::GetOpGradFactory()::factory
 b guard variable for tensorflow::histogram::InitDefaultBuckets()::default_bucket_limits
 b guard variable for tensorflow::internal::LogMessage::GenerateLogMessage()::env_time
 b guard variable for tensorflow::internal::LogMessage::MinVLogLevel()::min_vlog_level
 b guard variable for tensorflow::internal::LogMessage::~LogMessage()::min_log_level
 b guard variable for tensorflow::internal::PickUnusedPortOrDie()::chosen_ports
 b guard variable for tensorflow::io::UniqueId()::mu
 b guard variable for tensorflow::monitoring::CollectionRegistry::Default()::default_registry
 b guard variable for tensorflow::profile_utils::CpuUtils::GetCycleCounterFrequency()::cpu_frequency
 b guard variable for tensorflow::profile_utils::CpuUtils::GetMicroSecPerClock()::micro_sec_per_clock
 b guard variable for tensorflow::random::New64()::mu
 b guard variable for tensorflow::random::New64()::rng
 b guard variable for tensorflow::random::New64DefaultSeed()::mu
 b guard variable for tensorflow::random::New64DefaultSeed()::rng
 b lg_dirty_mult_default
 b malloc_initializer
 b malloc_slow_flags
 b mmap_flags
 b narenas_total
 b ncleanups
 b next_thr_uid
 b next_thr_uid_mtx
 b nsync::(anonymous namespace)::thread_specific
 b nsync::free_waiters
 b nsync::free_waiters_mu
 b nsync::nsync_debug_buf
 b nsync::once_sync
 b nsync::waiter_for_thread
 b os_overcommits
 b perftools::gputools::(anonymous namespace)::correlation_id_generator
 b perftools::gputools::(anonymous namespace)::plugin_id_value
 b perftools::gputools::GetPluginRegistryMutex()::mu
 b perftools::gputools::cuda::(anonymous namespace)::plugin_id_value
 b perftools::gputools::host::(anonymous namespace)::plugin_id_value
 b perftools::gputools::internal::CachedDsoLoader::GetCublasDsoHandle()::result
 b perftools::gputools::internal::CachedDsoLoader::GetCudnnDsoHandle()::result
 b perftools::gputools::internal::CachedDsoLoader::GetCufftDsoHandle()::result
 b perftools::gputools::internal::CachedDsoLoader::GetCurandDsoHandle()::result
 b perftools::gputools::internal::CachedDsoLoader::GetLibcudaDsoHandle()::result
 b perftools::gputools::internal::CachedDsoLoader::GetLibcuptiDsoHandle()::result
 b perftools::gputools::internal::DsoLoader::GetRpaths[abi:cxx11]()::rpaths
 b perftools::gputools::internal::GetRpathMutex()::mu
 b perftools::gputools::internal::MakeCUDAExecutorImplementation()::instance
 b perftools::gputools::internal::MakeOpenCLExecutorImplementation()::instance
 b prof_active_mtx
 b prof_dump_mtx
 b prof_dump_seq_mtx
 b prof_gdump_mtx
 b prof_thread_active_init
 b prof_thread_active_init_mtx
 b re2::RE2::Init(re2::StringPiece const&, re2::RE2::Options const&)::empty_once
 b re2::Regexp::Incref()::ref_once
 b re2::empty_group_names
 b re2::empty_named_groups
 b re2::empty_string
 b re2::ref_map
 b re2::ref_mutex
 b stack_nelms
 b std::__ioinit
 b tcaches_avail
 b tcaches_past
 b tdatas
 b tdatas_mtx
 b tensorflow::(anonymous namespace)::GetCustomCreatorSingleton()::ccs
 b tensorflow::(anonymous namespace)::IsGradientNode(tensorflow::Graph const*, tensorflow::Node const*)::tag
 b tensorflow::(anonymous namespace)::MutableRegistry()::registry
 b tensorflow::(anonymous namespace)::UniqueConstantId()::id
 b tensorflow::(anonymous namespace)::after_mask
 b tensorflow::(anonymous namespace)::before_mask
 b tensorflow::(anonymous namespace)::device_factories()::factories
 b tensorflow::(anonymous namespace)::get_device_factory_lock()::device_factory_lock
 b tensorflow::(anonymous namespace)::get_session_factory_lock()::session_factory_lock
 b tensorflow::(anonymous namespace)::kColocationAttrNameStringPiece
 b tensorflow::(anonymous namespace)::kColocationGroupPrefixStringPiece
 b tensorflow::(anonymous namespace)::kCostModelLogTag
 b tensorflow::(anonymous namespace)::kEmptyTensor
 b tensorflow::(anonymous namespace)::kKernelAttr
 b tensorflow::(anonymous namespace)::nodes_to_rewrite
 b tensorflow::(anonymous namespace)::session_factories()::factories
 b tensorflow::AllocatorRegistry::Global()::global_allocator_registry
 b tensorflow::AttrSlice::AttrSlice()::kEmptyAttrValueMap
 b tensorflow::BFCAllocator::AllocateRaw(unsigned long, unsigned long, tensorflow::AllocationAttributes const&)::log_counter
 b tensorflow::CheckOpDeprecation(tensorflow::OpDef const&, int)::mu
 b tensorflow::CheckOpDeprecation(tensorflow::OpDef const&, int)::warned
 b tensorflow::ComputePool(tensorflow::SessionOptions const&)::compute_pool
 b tensorflow::ContainerInfo::Init(tensorflow::ResourceMgr*, tensorflow::NodeDef const&, bool)::counter
 b tensorflow::Env::Default()::default_env
 b tensorflow::EnvTime::Default()::default_env_time
 b tensorflow::GetTensorName(tensorflow::Edge const*)::counter
 b tensorflow::GlobalKernelRegistry()::global_kernel_registry
 b tensorflow::LoadLibrary(char const*, void**, void const**, unsigned long*)::loaded_libs
 b tensorflow::LoadLibrary(char const*, void**, void const**, unsigned long*)::mu
 b tensorflow::LocalDevice::LocalDevice(tensorflow::SessionOptions const&, tensorflow::DeviceAttributes const&)::global_tp_info
 b tensorflow::OpRegistry::Global()::global_op_registry
 b tensorflow::OpRegistry::LookUp(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpRegistrationData const**) const::unregistered_before
 b tensorflow::OptimizationPassRegistry::Global()::global_optimization_registry
 b tensorflow::Status::empty_string[abi:cxx11]()::empty
 b tensorflow::UnaryVariantOpRegistry::Global()::global_unary_variant_op_registry
 b tensorflow::UnaryVariantOpRegistry::PersistentStringStorage[abi:cxx11]()::string_storage
 b tensorflow::cpu_allocator()::cpu_alloc
 b tensorflow::cpu_allocator_collect_full_stats
 b tensorflow::cpu_allocator_collect_stats
 b tensorflow::crc32c::Extend(unsigned int, char const*, unsigned long)::can_accelerate
 b tensorflow::error::protobuf_tensorflow_2fcore_2flib_2fcore_2ferror_5fcodes_2eproto::(anonymous namespace)::file_level_enum_descriptors
 b tensorflow::error::protobuf_tensorflow_2fcore_2flib_2fcore_2ferror_5fcodes_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::error::protobuf_tensorflow_2fcore_2flib_2fcore_2ferror_5fcodes_2eproto::AddDescriptors()::once
 b tensorflow::error::protobuf_tensorflow_2fcore_2flib_2fcore_2ferror_5fcodes_2eproto::InitDefaults()::once
 b tensorflow::example::(anonymous namespace)::FastParseSerializedExample(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, tensorflow::example::FastParseExampleConfig const&, tensorflow::PresizedCuckooMap<std::pair<unsigned long, tensorflow::example::(anonymous namespace)::Type> > const&, tensorflow::example::(anonymous namespace)::SeededHasher, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::vector<tensorflow::example::(anonymous namespace)::SparseBuffer, std::allocator<tensorflow::example::(anonymous namespace)::SparseBuffer> >*, std::vector<tensorflow::example::(anonymous namespace)::SparseBuffer, std::allocator<tensorflow::example::(anonymous namespace)::SparseBuffer> >*)::duplicated_dense_feature
 b tensorflow::example::(anonymous namespace)::FastParseSerializedExample(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, tensorflow::example::FastParseExampleConfig const&, tensorflow::PresizedCuckooMap<std::pair<unsigned long, tensorflow::example::(anonymous namespace)::Type> > const&, tensorflow::example::(anonymous namespace)::SeededHasher, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::vector<tensorflow::example::(anonymous namespace)::SparseBuffer, std::allocator<tensorflow::example::(anonymous namespace)::SparseBuffer> >*, std::vector<tensorflow::example::(anonymous namespace)::SparseBuffer, std::allocator<tensorflow::example::(anonymous namespace)::SparseBuffer> >*)::duplicated_sparse_feature
 b tensorflow::gradient::GetOpGradFactory[abi:cxx11]()::factory
 b tensorflow::histogram::InitDefaultBuckets()::default_bucket_limits
 b tensorflow::internal::LogMessage::GenerateLogMessage()::env_time
 b tensorflow::internal::LogMessage::MinVLogLevel()::min_vlog_level
 b tensorflow::internal::LogMessage::~LogMessage()::min_log_level
 b tensorflow::internal::PickUnusedPortOrDie()::chosen_ports
 b tensorflow::io::UniqueId()::id
 b tensorflow::io::UniqueId()::mu
 b tensorflow::kEmptyString
 b tensorflow::monitoring::CollectionRegistry::Default()::default_registry
 b tensorflow::port::(anonymous namespace)::cpuid
 b tensorflow::port::(anonymous namespace)::cpuid_once_flag
 b tensorflow::port::(anonymous namespace)::g_cpu_feature_guard_warn_once_flag
 b tensorflow::profile_utils::CpuUtils::GetCpuUtilsHelperSingletonInstance()::flag
 b tensorflow::profile_utils::CpuUtils::GetCycleCounterFrequency()::cpu_frequency
 b tensorflow::profile_utils::CpuUtils::GetMicroSecPerClock()::micro_sec_per_clock
 b tensorflow::profile_utils::cpu_utils_helper_instance_
 b tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fexample_2ffeature_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fexample_2ffeature_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fexample_2ffeature_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fexample_2ffeature_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fallocation_5fdescription_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fallocation_5fdescription_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fallocation_5fdescription_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fallocation_5fdescription_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto::(anonymous namespace)::file_level_enum_descriptors
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2ffunction_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2ffunction_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2ffunction_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2ffunction_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto::(anonymous namespace)::file_level_enum_descriptors
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fiterator_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fiterator_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fiterator_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fiterator_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2flog_5fmemory_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2flog_5fmemory_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2flog_5fmemory_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2flog_5fmemory_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2freader_5fbase_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2freader_5fbase_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2freader_5fbase_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2freader_5fbase_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto::(anonymous namespace)::file_level_enum_descriptors
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fsummary_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fsummary_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fsummary_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fsummary_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fslice_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fslice_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fslice_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fslice_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftypes_2eproto::(anonymous namespace)::file_level_enum_descriptors
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftypes_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftypes_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftypes_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fvariable_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fvariable_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fvariable_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fvariable_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fversions_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fversions_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fversions_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fframework_2fversions_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcluster_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcluster_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcluster_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcluster_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fconfig_2eproto::(anonymous namespace)::file_level_enum_descriptors
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fconfig_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fconfig_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fconfig_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fconfig_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fnamed_5ftensor_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fnamed_5ftensor_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fnamed_5ftensor_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fnamed_5ftensor_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fqueue_5frunner_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fqueue_5frunner_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fqueue_5frunner_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fqueue_5frunner_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto::(anonymous namespace)::file_level_enum_descriptors
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaved_5fmodel_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaved_5fmodel_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaved_5fmodel_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaved_5fmodel_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaver_2eproto::(anonymous namespace)::file_level_enum_descriptors
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaver_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaver_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaver_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaver_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::(anonymous namespace)::file_level_enum_descriptors
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensorflow_5fserver_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensorflow_5fserver_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensorflow_5fserver_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensorflow_5fserver_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2futil_2fevent_2eproto::(anonymous namespace)::file_level_enum_descriptors
 b tensorflow::protobuf_tensorflow_2fcore_2futil_2fevent_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2futil_2fevent_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2futil_2fevent_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2futil_2fevent_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2futil_2fmemmapped_5ffile_5fsystem_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2futil_2fmemmapped_5ffile_5fsystem_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2futil_2fmemmapped_5ffile_5fsystem_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2futil_2fmemmapped_5ffile_5fsystem_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2futil_2fsaved_5ftensor_5fslice_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2futil_2fsaved_5ftensor_5fslice_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2futil_2fsaved_5ftensor_5fslice_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2futil_2fsaved_5ftensor_5fslice_2eproto::InitDefaults()::once
 b tensorflow::protobuf_tensorflow_2fcore_2futil_2ftest_5flog_2eproto::(anonymous namespace)::file_level_enum_descriptors
 b tensorflow::protobuf_tensorflow_2fcore_2futil_2ftest_5flog_2eproto::(anonymous namespace)::file_level_metadata
 b tensorflow::protobuf_tensorflow_2fcore_2futil_2ftest_5flog_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()::once
 b tensorflow::protobuf_tensorflow_2fcore_2futil_2ftest_5flog_2eproto::AddDescriptors()::once
 b tensorflow::protobuf_tensorflow_2fcore_2futil_2ftest_5flog_2eproto::InitDefaults()::once
 b tensorflow::random::New64()::mu
 b tensorflow::random::New64()::rng
 b tensorflow::random::New64DefaultSeed()::mu
 b tensorflow::random::New64DefaultSeed()::rng
 b tensorflow::register_gpu_gpu_copy
 b tensorflow::register_unary_variant_op_decoder_fn_0
 b tensorflow::register_unary_variant_op_decoder_fn_10
 b tensorflow::register_unary_variant_op_decoder_fn_11
 b tensorflow::register_unary_variant_op_decoder_fn_12
 b tensorflow::register_unary_variant_op_decoder_fn_13
 b tensorflow::register_unary_variant_op_decoder_fn_14
 b tensorflow::register_unary_variant_op_decoder_fn_15
 b tensorflow::register_unary_variant_op_decoder_fn_4
 b tensorflow::register_unary_variant_op_decoder_fn_5
 b tensorflow::register_unary_variant_op_decoder_fn_6
 b tensorflow::register_unary_variant_op_decoder_fn_7
 b tensorflow::register_unary_variant_op_decoder_fn_8
 b tensorflow::register_unary_variant_op_decoder_fn_9
 b tensorflow::register_unary_variant_op_shape_registration_fn_0
 b tensorflow::register_unary_variant_op_shape_registration_fn_1
 b tensorflow::register_unary_variant_op_shape_registration_fn_2
 b tensorflow::register_unary_variant_op_shape_registration_fn_3
 bind
 calloc
 ceil
 ceilf
 clock_gettime
 close
 closedir
 cos
 d ._719
 d DW.ref.__gxx_personality_v0
 d RunningOnValgrind::running_on_valgrind
 d _DYNAMIC
 d _GLOBAL_OFFSET_TABLE_
 d __JCR_END__
 d __JCR_LIST__
 d __TMC_END__
 d __TMC_LIST__
 d __dso_handle
 d abort_hook
 d absl::base_internal::(anonymous namespace)::submit_profile_data
 d absl::base_internal::nominal_cpu_frequency
 d arena_i_node
 d arena_node
 d arenas_bin_i_node
 d arenas_bin_node
 d arenas_hchunk_i_node
 d arenas_hchunk_node
 d arenas_lrun_i_node
 d arenas_lrun_node
 d arenas_node
 d config_node
 d configuration_table
 d construction vtable for std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >-in-tensorflow::internal::LogMessage
 d construction vtable for std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >-in-tensorflow::internal::LogMessageFatal
 d construction vtable for std::ostream-in-tensorflow::internal::LogMessage
 d construction vtable for std::ostream-in-tensorflow::internal::LogMessageFatal
 d construction vtable for tensorflow::internal::LogMessage-in-tensorflow::internal::LogMessageFatal
 d dss_prec_default
 d init_lock
 d log_prefix_hook
 d malloc_init_state
 d malloc_slow
 d nsync::Xreader_type
 d nsync::Xwriter_type
 d nsync::cv_bit
 d nsync::mu_bit
 d nsync::waiter_flags_bit
 d opt_node
 d prof_node
 d re2::DFA::FastSearchLoop(re2::DFA::SearchParams*)::Searches
 d re2::any16
 d re2::any32
 d re2::anygroup
 d re2::dfa_should_bail_when_slow
 d re2::kErrorStrings
 d root_node
 d simd_huffman
 d simd_support
 d static_bl_desc
 d static_d_desc
 d static_l_desc
 d stats_arenas_i_bins_j_node
 d stats_arenas_i_bins_node
 d stats_arenas_i_hchunks_j_node
 d stats_arenas_i_hchunks_node
 d stats_arenas_i_huge_node
 d stats_arenas_i_large_node
 d stats_arenas_i_lruns_j_node
 d stats_arenas_i_lruns_node
 d stats_arenas_i_metadata_node
 d stats_arenas_i_node
 d stats_arenas_i_small_node
 d stats_arenas_node
 d stats_node
 d super_arena_i_node
 d super_arenas_bin_i_node
 d super_arenas_hchunk_i_node
 d super_arenas_lrun_i_node
 d super_root_node
 d super_stats_arenas_i_bins_j_node
 d super_stats_arenas_i_hchunks_j_node
 d super_stats_arenas_i_lruns_j_node
 d super_stats_arenas_i_node
 d tcache_node
 d tensorflow::kColors
 d tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fexample_2ffeature_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fframework_2fallocation_5fdescription_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fframework_2ffunction_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fframework_2fiterator_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fframework_2flog_5fmemory_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fframework_2freader_5fbase_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fframework_2fsummary_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fslice_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fframework_2fvariable_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fframework_2fversions_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcluster_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fconfig_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fnamed_5ftensor_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fqueue_5frunner_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaved_5fmodel_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaver_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensorflow_5fserver_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2futil_2fevent_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2futil_2fmemmapped_5ffile_5fsystem_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2futil_2fsaved_5ftensor_5fslice_2eproto::file_default_instances
 d tensorflow::protobuf_tensorflow_2fcore_2futil_2ftest_5flog_2eproto::file_default_instances
 d thread_node
 d thread_prof_node
 d thread_tcache_node
 d typeinfo for perftools::gputools::(anonymous namespace)::BlockOnThreadExecutor(tensorflow::thread::ThreadPool*)::{lambda()#1}
 d typeinfo for perftools::gputools::Stream::ThenEnqueueOnBackgroundThread(std::function<void (perftools::gputools::StreamExecutor*)>)::{lambda()#1}
 d typeinfo for perftools::gputools::host::HostExecutor::CreateStreamDependency(perftools::gputools::Stream*, perftools::gputools::Stream*)::{lambda()#1}
 d typeinfo for perftools::gputools::host::HostExecutor::MemZero(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, unsigned long long)::{lambda()#1}
 d typeinfo for perftools::gputools::host::HostExecutor::Memcpy(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, void const*, unsigned long long)::{lambda()#1}
 d typeinfo for perftools::gputools::host::HostExecutor::Memcpy(perftools::gputools::Stream*, void*, perftools::gputools::DeviceMemoryBase const&, unsigned long long)::{lambda()#1}
 d typeinfo for perftools::gputools::host::HostExecutor::MemcpyDeviceToDevice(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, perftools::gputools::DeviceMemoryBase const&, unsigned long long)::{lambda()#1}
 d typeinfo for perftools::gputools::host::HostExecutor::Memset(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, unsigned char, unsigned long long)::{lambda()#1}
 d typeinfo for perftools::gputools::host::HostExecutor::Memset32(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, unsigned int, unsigned long long)::{lambda()#1}
 d typeinfo for perftools::gputools::host::HostPlatform::GetExecutor(perftools::gputools::StreamExecutorConfig const&)::{lambda()#1}
 d typeinfo for perftools::gputools::host::HostStream::EnqueueTask(std::function<void ()>)::{lambda()#1}
 d typeinfo for perftools::gputools::host::HostTimer::Start(perftools::gputools::Stream*)::{lambda()#1}
 d typeinfo for perftools::gputools::host::HostTimer::Stop(perftools::gputools::Stream*)::{lambda()#1}
 d typeinfo for std::_Bind<std::_Mem_fn<void (tensorflow::(anonymous namespace)::ExecutorState::*)(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long)> (tensorflow::(anonymous namespace)::ExecutorState*, tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long)>
 d typeinfo for std::_Bind<tensorflow::(anonymous namespace)::CopyDeviceToDevice(void (*)(tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>), tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Tensor const&, tensorflow::Tensor*)#2} (tensorflow::(anonymous namespace)::CopyDeviceToDevice(void (*)(tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>), tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}, std::_Placeholder<1>, {lambda(tensorflow::Status const&)#1}<2>)>
 d typeinfo for std::_Bind<tensorflow::(anonymous namespace)::CopyDeviceToHost(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Tensor const&, tensorflow::Tensor*)#2} (tensorflow::(anonymous namespace)::CopyDeviceToHost(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}, std::_Placeholder<1>, {lambda(tensorflow::Status const&)#1}<2>)>
 d typeinfo for std::_Bind<tensorflow::(anonymous namespace)::CopyHostToDevice(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Tensor const&, tensorflow::Tensor*)#2} (tensorflow::(anonymous namespace)::CopyHostToDevice(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}, std::_Placeholder<1>, {lambda(tensorflow::Status const&)#1}<2>)>
 d typeinfo for std::_Bind<tensorflow::CopyTensor::ViaDMA(tensorflow::StringPiece, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status const&)#1} (std::function<void (tensorflow::Status const&)>, std::_Placeholder<1>)>
 d typeinfo for std::_Bind<tensorflow::CopyTensor::ViaDMA(tensorflow::StringPiece, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status)#2} (std::function<void (tensorflow::Status const&)>, std::_Placeholder<1>)>
 d typeinfo for std::_Bind<tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::CallFrameInterface*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status const&)#1} (std::function<void (tensorflow::Status const&)>, std::_Placeholder<1>)>
 d typeinfo for std::_Bind<tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::CallFrameInterface*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status const&)#2} (std::function<void (tensorflow::Status const&)>, std::_Placeholder<1>)>
 d typeinfo for std::_Maybe_get_result_type<std::_Mem_fn<void (tensorflow::(anonymous namespace)::ExecutorState::*)(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long)>, void>
 d typeinfo for std::_Maybe_get_result_type<tensorflow::(anonymous namespace)::CopyDeviceToDevice(void (*)(tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>), tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Tensor const&, tensorflow::Tensor*)#2}, void>
 d typeinfo for std::_Maybe_get_result_type<tensorflow::(anonymous namespace)::CopyDeviceToHost(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Tensor const&, tensorflow::Tensor*)#2}, void>
 d typeinfo for std::_Maybe_get_result_type<tensorflow::(anonymous namespace)::CopyHostToDevice(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Tensor const&, tensorflow::Tensor*)#2}, void>
 d typeinfo for std::_Maybe_get_result_type<tensorflow::CopyTensor::ViaDMA(tensorflow::StringPiece, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status const&)#1}, void>
 d typeinfo for std::_Maybe_get_result_type<tensorflow::CopyTensor::ViaDMA(tensorflow::StringPiece, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status)#2}, void>
 d typeinfo for std::_Maybe_get_result_type<tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::CallFrameInterface*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status const&)#1}, void>
 d typeinfo for std::_Maybe_get_result_type<tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::CallFrameInterface*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status const&)#2}, void>
 d typeinfo for std::_Weak_result_type<std::_Mem_fn<void (tensorflow::(anonymous namespace)::ExecutorState::*)(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long)> >
 d typeinfo for std::_Weak_result_type<tensorflow::(anonymous namespace)::CopyDeviceToDevice(void (*)(tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>), tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Tensor const&, tensorflow::Tensor*)#2}>
 d typeinfo for std::_Weak_result_type<tensorflow::(anonymous namespace)::CopyDeviceToHost(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Tensor const&, tensorflow::Tensor*)#2}>
 d typeinfo for std::_Weak_result_type<tensorflow::(anonymous namespace)::CopyHostToDevice(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Tensor const&, tensorflow::Tensor*)#2}>
 d typeinfo for std::_Weak_result_type<tensorflow::CopyTensor::ViaDMA(tensorflow::StringPiece, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status const&)#1}>
 d typeinfo for std::_Weak_result_type<tensorflow::CopyTensor::ViaDMA(tensorflow::StringPiece, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status)#2}>
 d typeinfo for std::_Weak_result_type<tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::CallFrameInterface*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status const&)#1}>
 d typeinfo for std::_Weak_result_type<tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::CallFrameInterface*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status const&)#2}>
 d typeinfo for std::_Weak_result_type_impl<std::_Mem_fn<void (tensorflow::(anonymous namespace)::ExecutorState::*)(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long)> >
 d typeinfo for std::_Weak_result_type_impl<tensorflow::(anonymous namespace)::CopyDeviceToDevice(void (*)(tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>), tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Tensor const&, tensorflow::Tensor*)#2}>
 d typeinfo for std::_Weak_result_type_impl<tensorflow::(anonymous namespace)::CopyDeviceToHost(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Tensor const&, tensorflow::Tensor*)#2}>
 d typeinfo for std::_Weak_result_type_impl<tensorflow::(anonymous namespace)::CopyHostToDevice(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Tensor const&, tensorflow::Tensor*)#2}>
 d typeinfo for std::_Weak_result_type_impl<tensorflow::CopyTensor::ViaDMA(tensorflow::StringPiece, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status const&)#1}>
 d typeinfo for std::_Weak_result_type_impl<tensorflow::CopyTensor::ViaDMA(tensorflow::StringPiece, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status)#2}>
 d typeinfo for std::_Weak_result_type_impl<tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::CallFrameInterface*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status const&)#1}>
 d typeinfo for std::_Weak_result_type_impl<tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::CallFrameInterface*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status const&)#2}>
 d typeinfo for tensorflow::(anonymous namespace)::AccumulateNV2RemovePass
 d typeinfo for tensorflow::(anonymous namespace)::Buffer<Eigen::QInt16>
 d typeinfo for tensorflow::(anonymous namespace)::Buffer<Eigen::QInt32>
 d typeinfo for tensorflow::(anonymous namespace)::Buffer<Eigen::QInt8>
 d typeinfo for tensorflow::(anonymous namespace)::Buffer<Eigen::QUInt16>
 d typeinfo for tensorflow::(anonymous namespace)::Buffer<Eigen::QUInt8>
 d typeinfo for tensorflow::(anonymous namespace)::Buffer<Eigen::half>
 d typeinfo for tensorflow::(anonymous namespace)::Buffer<bool>
 d typeinfo for tensorflow::(anonymous namespace)::Buffer<double>
 d typeinfo for tensorflow::(anonymous namespace)::Buffer<float>
 d typeinfo for tensorflow::(anonymous namespace)::Buffer<int>
 d typeinfo for tensorflow::(anonymous namespace)::Buffer<long long>
 d typeinfo for tensorflow::(anonymous namespace)::Buffer<short>
 d typeinfo for tensorflow::(anonymous namespace)::Buffer<signed char>
 d typeinfo for tensorflow::(anonymous namespace)::Buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >
 d typeinfo for tensorflow::(anonymous namespace)::Buffer<std::complex<double> >
 d typeinfo for tensorflow::(anonymous namespace)::Buffer<std::complex<float> >
 d typeinfo for tensorflow::(anonymous namespace)::Buffer<tensorflow::ResourceHandle>
 d typeinfo for tensorflow::(anonymous namespace)::Buffer<tensorflow::Variant>
 d typeinfo for tensorflow::(anonymous namespace)::Buffer<tensorflow::bfloat16>
 d typeinfo for tensorflow::(anonymous namespace)::Buffer<unsigned char>
 d typeinfo for tensorflow::(anonymous namespace)::Buffer<unsigned int>
 d typeinfo for tensorflow::(anonymous namespace)::Buffer<unsigned long long>
 d typeinfo for tensorflow::(anonymous namespace)::Buffer<unsigned short>
 d typeinfo for tensorflow::(anonymous namespace)::BufferBase
 d typeinfo for tensorflow::(anonymous namespace)::CopyDeviceToDevice(void (*)(tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>), tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}
 d typeinfo for tensorflow::(anonymous namespace)::CopyDeviceToHost(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}
 d typeinfo for tensorflow::(anonymous namespace)::CopyHostToDevice(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}
 d typeinfo for tensorflow::(anonymous namespace)::ExecutorImpl
 d typeinfo for tensorflow::(anonymous namespace)::ExecutorState::Finish()::{lambda()#1}
 d typeinfo for tensorflow::(anonymous namespace)::ExecutorState::Process(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long)::{lambda()#1}
 d typeinfo for tensorflow::(anonymous namespace)::ExecutorState::ScheduleReady(tensorflow::gtl::InlinedVector<tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, 8> const&, tensorflow::(anonymous namespace)::ExecutorState::TaggedNodeReadyQueue*)::{lambda()#1}
 d typeinfo for tensorflow::(anonymous namespace)::FileStream
 d typeinfo for tensorflow::(anonymous namespace)::FindConstantFoldableNodes(tensorflow::Graph const*, tensorflow::ConstantFoldingOptions const&, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> >*, std::unordered_map<tensorflow::Node const*, tensorflow::gtl::FlatSet<tensorflow::Node*, tensorflow::hash<tensorflow::Node*>, std::equal_to<tensorflow::Node*> >, std::hash<tensorflow::Node const*>, std::equal_to<tensorflow::Node const*>, std::allocator<std::pair<tensorflow::Node const* const, tensorflow::gtl::FlatSet<tensorflow::Node*, tensorflow::hash<tensorflow::Node*>, std::equal_to<tensorflow::Node*> > > > >*, std::unordered_map<tensorflow::Node const*, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >, std::hash<tensorflow::Node const*>, std::equal_to<tensorflow::Node const*>, std::allocator<std::pair<tensorflow::Node const* const, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> > > > >*)::{lambda(tensorflow::Node*)#1}
 d typeinfo for tensorflow::(anonymous namespace)::ForEach(int, int, std::function<void (int)> const&)::{lambda()#1}
 d typeinfo for tensorflow::(anonymous namespace)::NoOpStatsPublisher
 d typeinfo for tensorflow::(anonymous namespace)::OptimizeControlFlowColocation(tensorflow::Graph*)::{lambda(tensorflow::Node*)#1}
 d typeinfo for tensorflow::(anonymous namespace)::ParallelConcatRemovePass
 d typeinfo for tensorflow::(anonymous namespace)::PosixEnv
 d typeinfo for tensorflow::(anonymous namespace)::PosixEnv::SchedClosureAfter(long long, std::function<void ()>)::{lambda()#1}
 d typeinfo for tensorflow::(anonymous namespace)::PosixEnvTime
 d typeinfo for tensorflow::(anonymous namespace)::RandomAccessFileFromMemmapped
 d typeinfo for tensorflow::(anonymous namespace)::ReadOnlyMemoryRegionFromMemmapped
 d typeinfo for tensorflow::(anonymous namespace)::SimpleRendezvous
 d typeinfo for tensorflow::(anonymous namespace)::StdThread
 d typeinfo for tensorflow::AsyncOpKernel::Compute(tensorflow::OpKernelContext*)::{lambda()#1}
 d typeinfo for tensorflow::BFCAllocator::AllocateRaw(unsigned long, unsigned long)::{lambda(unsigned long, unsigned long, bool)#1}
 d typeinfo for tensorflow::EnsureMemoryTypes(tensorflow::DeviceType const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph*)::{lambda(tensorflow::Edge const*, tensorflow::MemoryType, tensorflow::MemoryType)#1}
 d typeinfo for tensorflow::EventMgr::StartPollingLoop()::{lambda()#1}
 d typeinfo for tensorflow::FileSystem::GetMatchingPaths(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)::{lambda(int)#1}
 d typeinfo for tensorflow::Flag::Flag(char const*, bool*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(bool)#1}
 d typeinfo for tensorflow::Flag::Flag(char const*, float*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(float)#1}
 d typeinfo for tensorflow::Flag::Flag(char const*, int*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(int)#1}
 d typeinfo for tensorflow::Flag::Flag(char const*, long long*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(long long)#1}
 d typeinfo for tensorflow::Flag::Flag(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}
 d typeinfo for tensorflow::FunctionLibraryRuntimeImpl::CreateItem(unsigned long long, tensorflow::FunctionLibraryRuntimeImpl::Item**)::{lambda(tensorflow::OpKernel*)#1}
 d typeinfo for tensorflow::FunctionLibraryRuntimeImpl::FunctionLibraryRuntimeImpl(tensorflow::DeviceMgr const*, tensorflow::Env*, tensorflow::Device*, int, tensorflow::FunctionLibraryDefinition const*, tensorflow::OptimizerOptions const&, std::function<tensorflow::Status (tensorflow::FunctionLibraryRuntime*, tensorflow::NodeDef const&, std::unique_ptr<tensorflow::OpKernel, std::default_delete<tensorflow::OpKernel> >*)>, tensorflow::ProcessFunctionLibraryRuntime*)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef const**)#1}
 d typeinfo for tensorflow::FunctionLibraryRuntimeImpl::FunctionLibraryRuntimeImpl(tensorflow::DeviceMgr const*, tensorflow::Env*, tensorflow::Device*, int, tensorflow::FunctionLibraryDefinition const*, tensorflow::OptimizerOptions const&, std::function<tensorflow::Status (tensorflow::FunctionLibraryRuntime*, tensorflow::NodeDef const&, std::unique_ptr<tensorflow::OpKernel, std::default_delete<tensorflow::OpKernel> >*)>, tensorflow::ProcessFunctionLibraryRuntime*)::{lambda(tensorflow::NodeDef const&, tensorflow::OpKernel**)#2}
 d typeinfo for tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::gtl::ArraySlice<tensorflow::Tensor>, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}
 d typeinfo for tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::gtl::ArraySlice<tensorflow::Tensor>, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#2}
 d typeinfo for tensorflow::FunctionLibraryRuntimeImpl::RunRemote(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::gtl::ArraySlice<tensorflow::Tensor>, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, tensorflow::Executor::Args*, tensorflow::FunctionLibraryRuntimeImpl::Item*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}
 d typeinfo for tensorflow::FunctionLibraryRuntimeImpl::RunRemote(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::gtl::ArraySlice<tensorflow::Tensor>, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, tensorflow::Executor::Args*, tensorflow::FunctionLibraryRuntimeImpl::Item*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}::operator()(tensorflow::Status const&) const::{lambda(tensorflow::Status const&)#1}
 d typeinfo for tensorflow::GPUUtil::Checksum(tensorflow::Device*, tensorflow::DeviceContext const*, tensorflow::Tensor const&)::{lambda(tensorflow::Status)#1}
 d typeinfo for tensorflow::GPUUtil::CopyCPUTensorToGPU(tensorflow::Tensor const*, tensorflow::DeviceContext const*, tensorflow::Device*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda()#1}
 d typeinfo for tensorflow::GPUUtil::CopyGPUTensorToCPU(tensorflow::Device*, tensorflow::DeviceContext const*, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda()#1}
 d typeinfo for tensorflow::GPUUtil::DeviceToDeviceCopy(tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda()#1}
 d typeinfo for tensorflow::GPUUtil::SetProtoFromGPU(tensorflow::Tensor const&, tensorflow::Device*, tensorflow::DeviceContext const*, tensorflow::TensorProto*, bool, std::function<void (tensorflow::Status const&)>)::{lambda()#1}
 d typeinfo for tensorflow::GetPostOrder(tensorflow::Graph const&, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> >*, std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> const&)::{lambda(tensorflow::Node*)#1}
 d typeinfo for tensorflow::GraphRunner::Run(tensorflow::Graph*, tensorflow::FunctionLibraryRuntime*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*)::{lambda(std::function<void ()>)#1}
 d typeinfo for tensorflow::GraphRunner::Run(tensorflow::Graph*, tensorflow::FunctionLibraryRuntime*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*)::{lambda(tensorflow::NodeDef const&, tensorflow::OpKernel**)#2}
 d typeinfo for tensorflow::GraphRunner::Run(tensorflow::Graph*, tensorflow::FunctionLibraryRuntime*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*)::{lambda(tensorflow::OpKernel*)#3}
 d typeinfo for tensorflow::InstantiateFunction(tensorflow::FunctionDef const&, tensorflow::AttrSlice, std::function<tensorflow::Status (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef const**)>, tensorflow::InstantiationResult*)::{lambda(tensorflow::StringPiece, tensorflow::AttrValue*)#1}
 d typeinfo for tensorflow::IntraProcessRendezvous::RecvAsync(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, std::function<void (tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)>)::{lambda(tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)#1}
 d typeinfo for tensorflow::IntraProcessRendezvous::RecvAsync(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, std::function<void (tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)>)::{lambda(tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)#1}::operator()(tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool) const::{lambda(tensorflow::Status const&)#1}
 d typeinfo for tensorflow::LoadLibrary(char const*, void**, void const**, unsigned long*)::{lambda(tensorflow::Status const&, tensorflow::OpDef const&)#1}
 d typeinfo for tensorflow::ProcessFunctionLibraryRuntime::ReceiveTensorsAsync(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long long, long long, tensorflow::DeviceContext*, std::vector<tensorflow::AllocatorAttributes, std::allocator<tensorflow::AllocatorAttributes> > const&, tensorflow::Rendezvous*, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::function<void (tensorflow::Status const&)> const&)::{lambda(tensorflow::Status const&)#1}
 d typeinfo for tensorflow::ProcessFunctionLibraryRuntime::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::gtl::ArraySlice<tensorflow::Tensor>, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}
 d typeinfo for tensorflow::RecvOutputsFromRendezvousAsync(tensorflow::Rendezvous*, tensorflow::DeviceContext*, std::vector<tensorflow::AllocatorAttributes, std::allocator<tensorflow::AllocatorAttributes> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::function<void (tensorflow::Status const&)> const&)::{lambda(tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)#1}
 d typeinfo for tensorflow::Rendezvous::Recv(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor*, bool*, long long)::{lambda(tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)#1}
 d typeinfo for tensorflow::ShapeRefiner::InferShapesForFunction(tensorflow::FunctionDef const*, bool, tensorflow::ExtendedInferenceContext*)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef const**)#1}
 d typeinfo for tensorflow::ShapeRefiner::InferShapesForFunction(tensorflow::FunctionDef const*, bool, tensorflow::ExtendedInferenceContext*)::{lambda(tensorflow::Node const*)#2}
 d typeinfo for tensorflow::Shard(int, tensorflow::thread::ThreadPool*, long long, long long, std::function<void (long long, long long)>)::{lambda()#1}
 d typeinfo for tensorflow::ToGraphDef(tensorflow::Graph const*, tensorflow::GraphDef*, bool)::{lambda(tensorflow::Node*)#1}
 d typeinfo for tensorflow::ValidateMemoryTypes(tensorflow::DeviceType const&, tensorflow::Graph const*)::{lambda(tensorflow::Edge const*, tensorflow::MemoryType, tensorflow::MemoryType)#1}
 d typeinfo for tensorflow::checkpoint::(anonymous namespace)::TableBuilder
 d typeinfo for tensorflow::checkpoint::(anonymous namespace)::TensorSliceReaderTable
 d typeinfo for tensorflow::example::(anonymous namespace)::ParallelFor(std::function<void (unsigned long)> const&, unsigned long, tensorflow::thread::ThreadPool*)::{lambda()#1}
 d typeinfo for tensorflow::example::FastParseExample(tensorflow::example::FastParseExampleConfig const&, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::thread::ThreadPool*, tensorflow::example::Result*)::{lambda(unsigned long)#3}
 d typeinfo for tensorflow::grappler::ExecuteWithTimeout(std::function<void ()>, long long, tensorflow::thread::ThreadPool*)::{lambda()#1}
 d typeinfo for tensorflow::lookup::(anonymous namespace)::TextFileLineIterator
 d typeinfo for tensorflow::monitoring::(anonymous namespace)::ExplicitBuckets
 d typeinfo for tensorflow::monitoring::(anonymous namespace)::ExponentialBuckets
 d typeinfo for tensorflow::register_op::OpDefBuilderReceiver::OpDefBuilderReceiver(tensorflow::register_op::OpDefBuilderWrapper<true> const&)::{lambda(tensorflow::OpRegistrationData*)#1}
 d typeinfo for tensorflow::str_util::SplitAndParseAsFloats(tensorflow::StringPiece, char, std::vector<float, std::allocator<float> >*)::{lambda(tensorflow::StringPiece, float*)#1}
 d typeinfo for tensorflow::table::(anonymous namespace)::EmptyIterator
 d typeinfo for tensorflow::table::(anonymous namespace)::TwoLevelIterator
 d typeinfo for tensorflow::thread::ThreadPool::ParallelForWithWorkerId(long long, long long, std::function<void (long long, long long, int)> const&)::{lambda(long long, long long)#1}
 d vtable for tensorflow::(anonymous namespace)::AccumulateNV2RemovePass
 d vtable for tensorflow::(anonymous namespace)::Buffer<Eigen::QInt16>
 d vtable for tensorflow::(anonymous namespace)::Buffer<Eigen::QInt32>
 d vtable for tensorflow::(anonymous namespace)::Buffer<Eigen::QInt8>
 d vtable for tensorflow::(anonymous namespace)::Buffer<Eigen::QUInt16>
 d vtable for tensorflow::(anonymous namespace)::Buffer<Eigen::QUInt8>
 d vtable for tensorflow::(anonymous namespace)::Buffer<Eigen::half>
 d vtable for tensorflow::(anonymous namespace)::Buffer<bool>
 d vtable for tensorflow::(anonymous namespace)::Buffer<double>
 d vtable for tensorflow::(anonymous namespace)::Buffer<float>
 d vtable for tensorflow::(anonymous namespace)::Buffer<int>
 d vtable for tensorflow::(anonymous namespace)::Buffer<long long>
 d vtable for tensorflow::(anonymous namespace)::Buffer<short>
 d vtable for tensorflow::(anonymous namespace)::Buffer<signed char>
 d vtable for tensorflow::(anonymous namespace)::Buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >
 d vtable for tensorflow::(anonymous namespace)::Buffer<std::complex<double> >
 d vtable for tensorflow::(anonymous namespace)::Buffer<std::complex<float> >
 d vtable for tensorflow::(anonymous namespace)::Buffer<tensorflow::ResourceHandle>
 d vtable for tensorflow::(anonymous namespace)::Buffer<tensorflow::Variant>
 d vtable for tensorflow::(anonymous namespace)::Buffer<tensorflow::bfloat16>
 d vtable for tensorflow::(anonymous namespace)::Buffer<unsigned char>
 d vtable for tensorflow::(anonymous namespace)::Buffer<unsigned int>
 d vtable for tensorflow::(anonymous namespace)::Buffer<unsigned long long>
 d vtable for tensorflow::(anonymous namespace)::Buffer<unsigned short>
 d vtable for tensorflow::(anonymous namespace)::ExecutorImpl
 d vtable for tensorflow::(anonymous namespace)::FileStream
 d vtable for tensorflow::(anonymous namespace)::NoOpStatsPublisher
 d vtable for tensorflow::(anonymous namespace)::ParallelConcatRemovePass
 d vtable for tensorflow::(anonymous namespace)::PosixEnv
 d vtable for tensorflow::(anonymous namespace)::PosixEnvTime
 d vtable for tensorflow::(anonymous namespace)::RandomAccessFileFromMemmapped
 d vtable for tensorflow::(anonymous namespace)::ReadOnlyMemoryRegionFromMemmapped
 d vtable for tensorflow::(anonymous namespace)::SimpleRendezvous
 d vtable for tensorflow::(anonymous namespace)::StdThread
 d vtable for tensorflow::checkpoint::(anonymous namespace)::TableBuilder
 d vtable for tensorflow::checkpoint::(anonymous namespace)::TensorSliceReaderTable
 d vtable for tensorflow::lookup::(anonymous namespace)::TextFileLineIterator
 d vtable for tensorflow::monitoring::(anonymous namespace)::ExplicitBuckets
 d vtable for tensorflow::monitoring::(anonymous namespace)::ExponentialBuckets
 d vtable for tensorflow::table::(anonymous namespace)::EmptyIterator
 d vtable for tensorflow::table::(anonymous namespace)::TwoLevelIterator
 dlerror
 dlopen
 dlsym
 dup2
 execv
 exit
 fclose
 fcntl
 fdopen
 fegetround
 ferror
 fesetround
 fflush
 fnmatch
 fopen
 fork
 fprintf
 fputc
 fread
 free
 fscanf
 fwrite
 getcwd
 getenv
 gethostname
 getpid
 getsockname
 gettimeofday
 gmtime
 isalnum
 isalpha
 isprint
 isspace
 isupper
 isxdigit
 kill
 localtime
 lseek
 madvise
 malloc
 memchr
 memcmp
 memcpy
 memmove
 memrchr
 memset
 mkdir
 mkstemp
 mkstemps
 mmap
 munmap
 nanosleep
 open
 opendir
 operator delete(void*)
 operator delete(void*, std::nothrow_t const&)
 operator delete[](void*)
 operator new(unsigned long)
 operator new(unsigned long, std::nothrow_t const&)
 operator new[](unsigned long)
 pclose
 perror
 pipe
 popen
 pow
 pread
 printf
 pthread_cond_timedwait
 pthread_create
 pthread_getaffinity_np
 pthread_getspecific
 pthread_key_create
 pthread_mutex_destroy
 pthread_mutex_init
 pthread_mutex_lock
 pthread_mutex_trylock
 pthread_mutex_unlock
 pthread_mutexattr_destroy
 pthread_mutexattr_init
 pthread_mutexattr_settype
 pthread_once
 pthread_rwlock_destroy
 pthread_rwlock_init
 pthread_rwlock_rdlock
 pthread_rwlock_unlock
 pthread_rwlock_wrlock
 pthread_self
 pthread_setspecific
 pthread_sigmask
 qsort
 r ._103
 r ._718
 r ._719
 r ._720
 r ._721
 r ._722
 r ._723
 r ._724
 r ._725
 r CSWTCH.13
 r CSWTCH.177
 r CSWTCH.208
 r CSWTCH.209
 r CSWTCH.236
 r CSWTCH.293
 r CodeMask
 r CodeMasks.4887
 r PB_CENTERJSAMP
 r PD_0_382
 r PD_0_541
 r PD_0_707
 r PD_1_082
 r PD_1_306
 r PD_1_414
 r PD_1_847
 r PD_DESCALE_P1
 r PD_DESCALE_P1_2
 r PD_DESCALE_P1_4
 r PD_DESCALE_P2
 r PD_DESCALE_P2_2
 r PD_DESCALE_P2_4
 r PD_M2_613
 r PD_ONEHALF
 r PD_ONEHALFM1_CJ
 r PD_RNDINT_MAGIC
 r PW_DESCALE_P2X
 r PW_EIGHT
 r PW_F0114_F0250
 r PW_F0299_F0337
 r PW_F0382
 r PW_F0402
 r PW_F0541
 r PW_F054_MF130
 r PW_F0707
 r PW_F085_MF072
 r PW_F106_MF217
 r PW_F1082
 r PW_F117_F078
 r PW_F1306
 r PW_F130_F054
 r PW_F1414
 r PW_F145_MF021
 r PW_F1847
 r PW_F184_MF076
 r PW_F256_F089
 r PW_F362_MF127
 r PW_MF008_MF041
 r PW_MF016_MF033
 r PW_MF0228
 r PW_MF0344_F0285
 r PW_MF050_MF256
 r PW_MF060_MF050
 r PW_MF060_MF089
 r PW_MF078_F117
 r PW_MF089_F060
 r PW_MF1613
 r PW_MF256_F050
 r PW_ONE
 r PW_SEVEN
 r PW_THREE
 r PW_TWO
 r __FRAME_END__
 r aanscalefactor.4700
 r aanscalefactor.4715
 r aanscales.4692
 r aanscales.4707
 r base_dist
 r base_dither_matrix
 r base_length
 r bits_ac_chrominance.4450
 r bits_ac_chrominance.4484
 r bits_ac_luminance.4448
 r bits_ac_luminance.4482
 r bits_dc_chrominance.4446
 r bits_dc_chrominance.4480
 r bits_dc_luminance.4444
 r bits_dc_luminance.4478
 r bl_order
 r c_scales
 r crc_table
 r dbase.4075
 r dext.4076
 r distfix.4129
 r distfix.4162
 r dither_matrix
 r extra_blbits
 r extra_dbits
 r extra_lbits
 r extra_pool_slop
 r first_pool_slop
 r fourbppswaptable
 r h_steps.11054
 r interval_invs.10007
 r jpeg_nbits_table
 r kTruncated
 r lbase.4073
 r lenfix.4128
 r lenfix.4161
 r lext.4074
 r mybuffer.4165
 r nsync::emit_c(nsync::emit_buf*, int)::suffix
 r onebppswaptable
 r order.4150
 r order.4190
 r perftools::gputools::Stream& perftools::gputools::Stream::ThenConvolveBackwardBiasImpl<Eigen::half>(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>*)::__func__
 r perftools::gputools::Stream& perftools::gputools::Stream::ThenConvolveBackwardBiasImpl<double>(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<double>*)::__func__
 r perftools::gputools::Stream& perftools::gputools::Stream::ThenConvolveBackwardBiasImpl<float>(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::BlockHostUntilDone()::__func__
 r perftools::gputools::Stream::Init()::__func__
 r perftools::gputools::Stream::InitTimer(perftools::gputools::Timer*)::__func__
 r perftools::gputools::Stream::InitWithTimer(perftools::gputools::Timer*)::__func__
 r perftools::gputools::Stream::Stream(perftools::gputools::StreamExecutor*)::__func__
 r perftools::gputools::Stream::Stream(perftools::gputools::StreamExecutor*, perftools::gputools::internal::StreamInterface*)::__func__
 r perftools::gputools::Stream::ThenActivateWithOptions(perftools::gputools::dnn::ActivationMode, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float>*, unsigned long long)::__func__
 r perftools::gputools::Stream::ThenBatchNormalizationBackward(perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, double, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenBatchNormalizationBackward(perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, double, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenBatchNormalizationForward(perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, double, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, bool, std::function<perftools::gputools::DeviceMemory<float> const& ()>, std::function<void ()>)::__func__
 r perftools::gputools::Stream::ThenBatchNormalizationForward(perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, double, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, bool, std::function<perftools::gputools::DeviceMemory<float> const& ()>, std::function<void ()>)::__func__
 r perftools::gputools::Stream::ThenBiasAdd(perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenBlasAsum(unsigned long long, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*)::__func__
 r perftools::gputools::Stream::ThenBlasAsum(unsigned long long, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenBlasAsum(unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<double>*)::__func__
 r perftools::gputools::Stream::ThenBlasAsum(unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenBlasAxpy(unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasAxpy(unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasAxpy(unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasAxpy(unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasCopy(unsigned long long, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasCopy(unsigned long long, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasCopy(unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasCopy(unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasDot(unsigned long long, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*)::__func__
 r perftools::gputools::Stream::ThenBlasDot(unsigned long long, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenBlasDotc(unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*)::__func__
 r perftools::gputools::Stream::ThenBlasDotc(unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*)::__func__
 r perftools::gputools::Stream::ThenBlasDotu(unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*)::__func__
 r perftools::gputools::Stream::ThenBlasDotu(unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*)::__func__
 r perftools::gputools::Stream::ThenBlasGbmv(perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double> const&, int, double, perftools::gputools::DeviceMemory<double>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasGbmv(perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float> const&, int, float, perftools::gputools::DeviceMemory<float>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasGbmv(perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasGbmv(perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasGemm(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double> const&, int, double, perftools::gputools::DeviceMemory<double>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasGemm(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<Eigen::half> const&, int, perftools::gputools::DeviceMemory<Eigen::half> const&, int, float, perftools::gputools::DeviceMemory<Eigen::half>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasGemm(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float> const&, int, float, perftools::gputools::DeviceMemory<float>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasGemm(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasGemm(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasGemmBatchedWithScratch(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, double, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<double>*> const&, int, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<double>*> const&, int, double, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<double>*> const&, int, int, perftools::gputools::ScratchAllocator*)::__func__
 r perftools::gputools::Stream::ThenBlasGemmBatchedWithScratch(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, float, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<float>*> const&, int, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<float>*> const&, int, float, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<float>*> const&, int, int, perftools::gputools::ScratchAllocator*)::__func__
 r perftools::gputools::Stream::ThenBlasGemmBatchedWithScratch(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, std::complex<double>, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<std::complex<double> >*> const&, int, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<std::complex<double> >*> const&, int, std::complex<double>, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<std::complex<double> >*> const&, int, int, perftools::gputools::ScratchAllocator*)::__func__
 r perftools::gputools::Stream::ThenBlasGemmBatchedWithScratch(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, std::complex<float>, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<std::complex<float> >*> const&, int, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<std::complex<float> >*> const&, int, std::complex<float>, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<std::complex<float> >*> const&, int, int, perftools::gputools::ScratchAllocator*)::__func__
 r perftools::gputools::Stream::ThenBlasGemmWithAlgorithm(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, Eigen::half const&, perftools::gputools::DeviceMemory<Eigen::half> const&, int, perftools::gputools::DeviceMemory<Eigen::half> const&, int, Eigen::half const&, perftools::gputools::DeviceMemory<Eigen::half>*, int, perftools::gputools::blas::ComputationType, long long, perftools::gputools::blas::ProfileResult*)::__func__
 r perftools::gputools::Stream::ThenBlasGemmWithAlgorithm(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double> const&, int, double, perftools::gputools::DeviceMemory<double>*, int, perftools::gputools::blas::ComputationType, long long, perftools::gputools::blas::ProfileResult*)::__func__
 r perftools::gputools::Stream::ThenBlasGemmWithAlgorithm(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float> const&, int, float, perftools::gputools::DeviceMemory<float>*, int, perftools::gputools::blas::ComputationType, long long, perftools::gputools::blas::ProfileResult*)::__func__
 r perftools::gputools::Stream::ThenBlasGemmWithAlgorithm(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, int, perftools::gputools::DeviceMemory<signed char> const&, int, perftools::gputools::DeviceMemory<signed char> const&, int, int, perftools::gputools::DeviceMemory<int>*, int, perftools::gputools::blas::ComputationType, long long, perftools::gputools::blas::ProfileResult*)::__func__
 r perftools::gputools::Stream::ThenBlasGemmWithAlgorithm(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> >*, int, perftools::gputools::blas::ComputationType, long long, perftools::gputools::blas::ProfileResult*)::__func__
 r perftools::gputools::Stream::ThenBlasGemmWithAlgorithm(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> >*, int, perftools::gputools::blas::ComputationType, long long, perftools::gputools::blas::ProfileResult*)::__func__
 r perftools::gputools::Stream::ThenBlasGemmWithProfiling(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double> const&, int, double, perftools::gputools::DeviceMemory<double>*, int, perftools::gputools::blas::ProfileResult*)::__func__
 r perftools::gputools::Stream::ThenBlasGemmWithProfiling(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<Eigen::half> const&, int, perftools::gputools::DeviceMemory<Eigen::half> const&, int, float, perftools::gputools::DeviceMemory<Eigen::half>*, int, perftools::gputools::blas::ProfileResult*)::__func__
 r perftools::gputools::Stream::ThenBlasGemmWithProfiling(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float> const&, int, float, perftools::gputools::DeviceMemory<float>*, int, perftools::gputools::blas::ProfileResult*)::__func__
 r perftools::gputools::Stream::ThenBlasGemmWithProfiling(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> >*, int, perftools::gputools::blas::ProfileResult*)::__func__
 r perftools::gputools::Stream::ThenBlasGemmWithProfiling(perftools::gputools::blas::Transpose, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> >*, int, perftools::gputools::blas::ProfileResult*)::__func__
 r perftools::gputools::Stream::ThenBlasGemv(perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double> const&, int, double, perftools::gputools::DeviceMemory<double>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasGemv(perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float> const&, int, float, perftools::gputools::DeviceMemory<float>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasGemv(perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasGemv(perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasGemvWithProfiling(perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double> const&, int, double, perftools::gputools::DeviceMemory<double>*, int, perftools::gputools::blas::ProfileResult*)::__func__
 r perftools::gputools::Stream::ThenBlasGemvWithProfiling(perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float> const&, int, float, perftools::gputools::DeviceMemory<float>*, int, perftools::gputools::blas::ProfileResult*)::__func__
 r perftools::gputools::Stream::ThenBlasGemvWithProfiling(perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> >*, int, perftools::gputools::blas::ProfileResult*)::__func__
 r perftools::gputools::Stream::ThenBlasGemvWithProfiling(perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> >*, int, perftools::gputools::blas::ProfileResult*)::__func__
 r perftools::gputools::Stream::ThenBlasGer(unsigned long long, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasGer(unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasGerc(unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasGerc(unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasGeru(unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasGeru(unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasHbmv(perftools::gputools::blas::UpperLower, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasHbmv(perftools::gputools::blas::UpperLower, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasHemm(perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasHemm(perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasHemv(perftools::gputools::blas::UpperLower, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasHemv(perftools::gputools::blas::UpperLower, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasHer(perftools::gputools::blas::UpperLower, unsigned long long, double, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasHer(perftools::gputools::blas::UpperLower, unsigned long long, float, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasHer2(perftools::gputools::blas::UpperLower, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasHer2(perftools::gputools::blas::UpperLower, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasHer2k(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, double, perftools::gputools::DeviceMemory<std::complex<double> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasHer2k(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, float, perftools::gputools::DeviceMemory<std::complex<float> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasHerk(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, double, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, double, perftools::gputools::DeviceMemory<std::complex<double> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasHerk(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, float, perftools::gputools::DeviceMemory<std::complex<float> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasHpmv(perftools::gputools::blas::UpperLower, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasHpmv(perftools::gputools::blas::UpperLower, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasHpr(perftools::gputools::blas::UpperLower, unsigned long long, double, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*)::__func__
 r perftools::gputools::Stream::ThenBlasHpr(perftools::gputools::blas::UpperLower, unsigned long long, float, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*)::__func__
 r perftools::gputools::Stream::ThenBlasHpr2(perftools::gputools::blas::UpperLower, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*)::__func__
 r perftools::gputools::Stream::ThenBlasHpr2(perftools::gputools::blas::UpperLower, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*)::__func__
 r perftools::gputools::Stream::ThenBlasIamax(unsigned long long, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<int>*)::__func__
 r perftools::gputools::Stream::ThenBlasIamax(unsigned long long, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<int>*)::__func__
 r perftools::gputools::Stream::ThenBlasIamax(unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<int>*)::__func__
 r perftools::gputools::Stream::ThenBlasIamax(unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<int>*)::__func__
 r perftools::gputools::Stream::ThenBlasIamin(unsigned long long, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<int>*)::__func__
 r perftools::gputools::Stream::ThenBlasIamin(unsigned long long, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<int>*)::__func__
 r perftools::gputools::Stream::ThenBlasIamin(unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<int>*)::__func__
 r perftools::gputools::Stream::ThenBlasIamin(unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<int>*)::__func__
 r perftools::gputools::Stream::ThenBlasNrm2(unsigned long long, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*)::__func__
 r perftools::gputools::Stream::ThenBlasNrm2(unsigned long long, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenBlasNrm2(unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<double>*)::__func__
 r perftools::gputools::Stream::ThenBlasNrm2(unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenBlasRot(unsigned long long, perftools::gputools::DeviceMemory<double>*, int, perftools::gputools::DeviceMemory<double>*, int, double, double)::__func__
 r perftools::gputools::Stream::ThenBlasRot(unsigned long long, perftools::gputools::DeviceMemory<float>*, int, perftools::gputools::DeviceMemory<float>*, int, float, float)::__func__
 r perftools::gputools::Stream::ThenBlasRot(unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> >*, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int, double, double)::__func__
 r perftools::gputools::Stream::ThenBlasRot(unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> >*, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int, float, float)::__func__
 r perftools::gputools::Stream::ThenBlasRotg(perftools::gputools::DeviceMemory<double>*, perftools::gputools::DeviceMemory<double>*, perftools::gputools::DeviceMemory<double>*, perftools::gputools::DeviceMemory<double>*)::__func__
 r perftools::gputools::Stream::ThenBlasRotg(perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenBlasRotg(perftools::gputools::DeviceMemory<std::complex<double> >*, perftools::gputools::DeviceMemory<std::complex<double> >*, perftools::gputools::DeviceMemory<double>*, perftools::gputools::DeviceMemory<std::complex<double> >*)::__func__
 r perftools::gputools::Stream::ThenBlasRotg(perftools::gputools::DeviceMemory<std::complex<float> >*, perftools::gputools::DeviceMemory<std::complex<float> >*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<std::complex<float> >*)::__func__
 r perftools::gputools::Stream::ThenBlasRotm(unsigned long long, perftools::gputools::DeviceMemory<double>*, int, perftools::gputools::DeviceMemory<double>*, int, perftools::gputools::DeviceMemory<double> const&)::__func__
 r perftools::gputools::Stream::ThenBlasRotm(unsigned long long, perftools::gputools::DeviceMemory<float>*, int, perftools::gputools::DeviceMemory<float>*, int, perftools::gputools::DeviceMemory<float> const&)::__func__
 r perftools::gputools::Stream::ThenBlasRotmg(perftools::gputools::DeviceMemory<double>*, perftools::gputools::DeviceMemory<double>*, perftools::gputools::DeviceMemory<double>*, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::DeviceMemory<double>*)::__func__
 r perftools::gputools::Stream::ThenBlasRotmg(perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float>*, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenBlasSbmv(perftools::gputools::blas::UpperLower, unsigned long long, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double> const&, int, double, perftools::gputools::DeviceMemory<double>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasSbmv(perftools::gputools::blas::UpperLower, unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float> const&, int, float, perftools::gputools::DeviceMemory<float>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasScal(unsigned long long, double, perftools::gputools::DeviceMemory<double>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasScal(unsigned long long, double, perftools::gputools::DeviceMemory<std::complex<double> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasScal(unsigned long long, float, perftools::gputools::DeviceMemory<float>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasScal(unsigned long long, float, perftools::gputools::DeviceMemory<std::complex<float> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasScal(unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasScal(unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasSpmv(perftools::gputools::blas::UpperLower, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::DeviceMemory<double> const&, int, double, perftools::gputools::DeviceMemory<double>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasSpmv(perftools::gputools::blas::UpperLower, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, int, float, perftools::gputools::DeviceMemory<float>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasSpr(perftools::gputools::blas::UpperLower, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*)::__func__
 r perftools::gputools::Stream::ThenBlasSpr(perftools::gputools::blas::UpperLower, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenBlasSpr2(perftools::gputools::blas::UpperLower, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*)::__func__
 r perftools::gputools::Stream::ThenBlasSpr2(perftools::gputools::blas::UpperLower, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenBlasSwap(unsigned long long, perftools::gputools::DeviceMemory<double>*, int, perftools::gputools::DeviceMemory<double>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasSwap(unsigned long long, perftools::gputools::DeviceMemory<float>*, int, perftools::gputools::DeviceMemory<float>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasSwap(unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> >*, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasSwap(unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> >*, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasSymm(perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, unsigned long long, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double> const&, int, double, perftools::gputools::DeviceMemory<double>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasSymm(perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float> const&, int, float, perftools::gputools::DeviceMemory<float>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasSymm(perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasSymm(perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasSymv(perftools::gputools::blas::UpperLower, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double> const&, int, double, perftools::gputools::DeviceMemory<double>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasSymv(perftools::gputools::blas::UpperLower, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float> const&, int, float, perftools::gputools::DeviceMemory<float>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasSyr(perftools::gputools::blas::UpperLower, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasSyr(perftools::gputools::blas::UpperLower, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasSyr2(perftools::gputools::blas::UpperLower, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasSyr2(perftools::gputools::blas::UpperLower, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasSyr2k(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double> const&, int, double, perftools::gputools::DeviceMemory<double>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasSyr2k(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float> const&, int, float, perftools::gputools::DeviceMemory<float>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasSyr2k(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasSyr2k(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasSyrk(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, double, perftools::gputools::DeviceMemory<double>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasSyrk(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, float, perftools::gputools::DeviceMemory<float>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasSyrk(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasSyrk(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasTbmv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasTbmv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasTbmv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasTbmv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasTbsv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasTbsv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasTbsv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasTbsv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasTpmv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::DeviceMemory<double>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasTpmv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasTpmv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, perftools::gputools::DeviceMemory<std::complex<double> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasTpmv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, perftools::gputools::DeviceMemory<std::complex<float> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasTpsv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::DeviceMemory<double>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasTpsv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasTpsv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, perftools::gputools::DeviceMemory<std::complex<double> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasTpsv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, perftools::gputools::DeviceMemory<std::complex<float> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasTrmm(perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasTrmm(perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasTrmm(perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasTrmm(perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasTrmv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasTrmv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasTrmv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasTrmv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasTrsm(perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, double, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasTrsm(perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, float, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasTrsm(perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, std::complex<double>, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasTrsm(perftools::gputools::blas::Side, perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, unsigned long long, std::complex<float>, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasTrsv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<double> const&, int, perftools::gputools::DeviceMemory<double>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasTrsv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<float> const&, int, perftools::gputools::DeviceMemory<float>*, int)::__func__
 r perftools::gputools::Stream::ThenBlasTrsv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<std::complex<double> > const&, int, perftools::gputools::DeviceMemory<std::complex<double> >*, int)::__func__
 r perftools::gputools::Stream::ThenBlasTrsv(perftools::gputools::blas::UpperLower, perftools::gputools::blas::Transpose, perftools::gputools::blas::Diagonal, unsigned long long, perftools::gputools::DeviceMemory<std::complex<float> > const&, int, perftools::gputools::DeviceMemory<std::complex<float> >*, int)::__func__
 r perftools::gputools::Stream::ThenConvolveBackwardDataWithAlgorithm(perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::ScratchAllocator*, perftools::gputools::dnn::AlgorithmConfig const&, perftools::gputools::dnn::ProfileResult*)::__func__
 r perftools::gputools::Stream::ThenConvolveBackwardDataWithAlgorithm(perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*, perftools::gputools::ScratchAllocator*, perftools::gputools::dnn::AlgorithmConfig const&, perftools::gputools::dnn::ProfileResult*)::__func__
 r perftools::gputools::Stream::ThenConvolveBackwardDataWithScratch(perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::ScratchAllocator*)::__func__
 r perftools::gputools::Stream::ThenConvolveBackwardDataWithScratch(perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*, perftools::gputools::ScratchAllocator*)::__func__
 r perftools::gputools::Stream::ThenConvolveBackwardFilterWithAlgorithm(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::ScratchAllocator*, perftools::gputools::dnn::AlgorithmConfig const&, perftools::gputools::dnn::ProfileResult*)::__func__
 r perftools::gputools::Stream::ThenConvolveBackwardFilterWithAlgorithm(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<float>*, perftools::gputools::ScratchAllocator*, perftools::gputools::dnn::AlgorithmConfig const&, perftools::gputools::dnn::ProfileResult*)::__func__
 r perftools::gputools::Stream::ThenConvolveBackwardFilterWithScratch(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::ScratchAllocator*)::__func__
 r perftools::gputools::Stream::ThenConvolveBackwardFilterWithScratch(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<float>*, perftools::gputools::ScratchAllocator*)::__func__
 r perftools::gputools::Stream::ThenConvolveQuantized(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<short> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenConvolveQuantized(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<signed char> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenConvolveWithAlgorithm(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::ScratchAllocator*, perftools::gputools::dnn::AlgorithmConfig const&, perftools::gputools::dnn::ProfileResult*)::__func__
 r perftools::gputools::Stream::ThenConvolveWithAlgorithm(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*, perftools::gputools::ScratchAllocator*, perftools::gputools::dnn::AlgorithmConfig const&, perftools::gputools::dnn::ProfileResult*)::__func__
 r perftools::gputools::Stream::ThenConvolveWithScratch(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::ScratchAllocator*)::__func__
 r perftools::gputools::Stream::ThenConvolveWithScratch(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*, perftools::gputools::ScratchAllocator*)::__func__
 r perftools::gputools::Stream::ThenCopyDevice2HostBuffer(perftools::gputools::DeviceMemory<float> const&, perftools::gputools::HostBuffer*)::__func__
 r perftools::gputools::Stream::ThenCopyHostBuffer2Device(perftools::gputools::HostBuffer*, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenDepthConcatenate(tensorflow::gtl::ArraySlice<perftools::gputools::dnn::BatchDescriptor>, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<float> const*>, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenDepthToSpace(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::DepthToSpaceLayout const&, int, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenDoHostCallback(std::function<void ()>)::__func__
 r perftools::gputools::Stream::ThenDoHostCallbackForTest(std::function<void ()>)::__func__
 r perftools::gputools::Stream::ThenElementwiseOperate(perftools::gputools::dnn::ElementwiseOperation, tensorflow::gtl::ArraySlice<perftools::gputools::dnn::BatchDescriptor>, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<float> const*>, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenElementwiseOperateScaledQuantized(perftools::gputools::dnn::ElementwiseOperation, tensorflow::gtl::ArraySlice<int>, int, tensorflow::gtl::ArraySlice<perftools::gputools::dnn::BatchDescriptor>, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<float> const*>, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenEnqueueOnBackgroundThread(std::function<void (perftools::gputools::StreamExecutor*)>)::__func__
 r perftools::gputools::Stream::ThenFft(perftools::gputools::fft::Plan*, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::DeviceMemory<std::complex<double> >*)::__func__
 r perftools::gputools::Stream::ThenFft(perftools::gputools::fft::Plan*, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<std::complex<float> >*)::__func__
 r perftools::gputools::Stream::ThenFft(perftools::gputools::fft::Plan*, perftools::gputools::DeviceMemory<std::complex<double> > const&, perftools::gputools::DeviceMemory<double>*)::__func__
 r perftools::gputools::Stream::ThenFft(perftools::gputools::fft::Plan*, perftools::gputools::DeviceMemory<std::complex<double> > const&, perftools::gputools::DeviceMemory<std::complex<double> >*)::__func__
 r perftools::gputools::Stream::ThenFft(perftools::gputools::fft::Plan*, perftools::gputools::DeviceMemory<std::complex<float> > const&, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenFft(perftools::gputools::fft::Plan*, perftools::gputools::DeviceMemory<std::complex<float> > const&, perftools::gputools::DeviceMemory<std::complex<float> >*)::__func__
 r perftools::gputools::Stream::ThenFusedConvolveWithAlgorithm(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, float, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, float, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::ActivationMode, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::ScratchAllocator*, perftools::gputools::dnn::AlgorithmConfig const&, perftools::gputools::dnn::ProfileResult*)::__func__
 r perftools::gputools::Stream::ThenFusedConvolveWithAlgorithm(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, float, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::DeviceMemory<float> const&, float, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::ActivationMode, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*, perftools::gputools::ScratchAllocator*, perftools::gputools::dnn::AlgorithmConfig const&, perftools::gputools::dnn::ProfileResult*)::__func__
 r perftools::gputools::Stream::ThenFusedConvolveWithAlgorithm(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<signed char> const&, float, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<signed char> const&, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::DeviceMemory<signed char> const&, float, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::ActivationMode, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<signed char>*, perftools::gputools::ScratchAllocator*, perftools::gputools::dnn::AlgorithmConfig const&, perftools::gputools::dnn::ProfileResult*)::__func__
 r perftools::gputools::Stream::ThenFusedConvolveWithScratch(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, float, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, float, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::ActivationMode, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>*, perftools::gputools::ScratchAllocator*)::__func__
 r perftools::gputools::Stream::ThenFusedConvolveWithScratch(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, float, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::DeviceMemory<float> const&, float, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::ActivationMode, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*, perftools::gputools::ScratchAllocator*)::__func__
 r perftools::gputools::Stream::ThenFusedConvolveWithScratch(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<signed char> const&, float, perftools::gputools::dnn::FilterDescriptor const&, perftools::gputools::DeviceMemory<signed char> const&, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::DeviceMemory<signed char> const&, float, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::ActivationMode, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<signed char>*, perftools::gputools::ScratchAllocator*)::__func__
 r perftools::gputools::Stream::ThenMatMul(perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenMatMulQuantized(perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<short> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenMatMulQuantized(perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<signed char> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenMemZero(perftools::gputools::DeviceMemoryBase*, unsigned long long)::__func__
 r perftools::gputools::Stream::ThenMemcpy(perftools::gputools::DeviceMemoryBase*, perftools::gputools::DeviceMemoryBase const&, unsigned long long)::__func__
 r perftools::gputools::Stream::ThenMemcpy(perftools::gputools::DeviceMemoryBase*, void const*, unsigned long long)::__func__
 r perftools::gputools::Stream::ThenMemcpy(void*, perftools::gputools::DeviceMemoryBase const&, unsigned long long)::__func__
 r perftools::gputools::Stream::ThenMemcpyD2HQuantized(perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::QuantizedActivationMode, void*, unsigned long long)::__func__
 r perftools::gputools::Stream::ThenMemcpyH2DQuantized(void const*, unsigned long long, perftools::gputools::dnn::QuantizedActivationMode, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenMemset32(perftools::gputools::DeviceMemoryBase*, unsigned int, unsigned long long)::__func__
 r perftools::gputools::Stream::ThenNormalize(perftools::gputools::dnn::NormalizeDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenNormalizeBackwardWithDimensions(perftools::gputools::dnn::NormalizeDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenNormalizeWithDimensions(perftools::gputools::dnn::NormalizeDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenPoolBackward(perftools::gputools::dnn::PoolingDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::DeviceMemory<Eigen::half>*)::__func__
 r perftools::gputools::Stream::ThenPoolBackward(perftools::gputools::dnn::PoolingDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::DeviceMemory<double>*)::__func__
 r perftools::gputools::Stream::ThenPoolBackward(perftools::gputools::dnn::PoolingDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenPoolForward(perftools::gputools::dnn::PoolingDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<Eigen::half>*)::__func__
 r perftools::gputools::Stream::ThenPoolForward(perftools::gputools::dnn::PoolingDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<double> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<double>*)::__func__
 r perftools::gputools::Stream::ThenPoolForward(perftools::gputools::dnn::PoolingDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenPopulateRandGaussian(double, double, perftools::gputools::DeviceMemory<double>*)::__func__
 r perftools::gputools::Stream::ThenPopulateRandGaussian(float, float, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenPopulateRandUniform(perftools::gputools::DeviceMemory<double>*)::__func__
 r perftools::gputools::Stream::ThenPopulateRandUniform(perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenPopulateRandUniform(perftools::gputools::DeviceMemory<std::complex<double> >*)::__func__
 r perftools::gputools::Stream::ThenPopulateRandUniform(perftools::gputools::DeviceMemory<std::complex<float> >*)::__func__
 r perftools::gputools::Stream::ThenRecordEvent(perftools::gputools::Event*)::__func__
 r perftools::gputools::Stream::ThenReshape(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenSeparableConvolve(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::FilterDescriptor const&, int, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::ConvolutionDescriptor const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenSetRngSeed(unsigned char const*, unsigned long long)::__func__
 r perftools::gputools::Stream::ThenSpaceConcatenate(tensorflow::gtl::ArraySlice<perftools::gputools::dnn::BatchDescriptor>, tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<float> const*>, perftools::gputools::DeviceMemory<float>*, perftools::gputools::dnn::SpaceConcatenateMode)::__func__
 r perftools::gputools::Stream::ThenSpaceToDepth(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, perftools::gputools::dnn::DepthToSpaceLayout const&, int, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenStartTimer(perftools::gputools::Timer*)::__func__
 r perftools::gputools::Stream::ThenStopTimer(perftools::gputools::Timer*)::__func__
 r perftools::gputools::Stream::ThenTransformTensor(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::dnn::DataType, perftools::gputools::DeviceMemoryBase const&, perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::dnn::DataType, float, perftools::gputools::DeviceMemoryBase*)::__func__
 r perftools::gputools::Stream::ThenWaitFor(perftools::gputools::Event*)::__func__
 r perftools::gputools::Stream::ThenWaitFor(perftools::gputools::Stream*)::__func__
 r perftools::gputools::Stream::ThenXYBroadcast(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, long long, long long, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenXYPad(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, long long, long long, long long, long long, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::ThenXYSlice(perftools::gputools::dnn::BatchDescriptor const&, perftools::gputools::DeviceMemory<float> const&, long long, long long, long long, long long, perftools::gputools::DeviceMemory<float>*)::__func__
 r perftools::gputools::Stream::~Stream()::__func__
 r png_digit
 r png_gamma_shift
 r re2::Adlam_range32
 r re2::Ahom_range32
 r re2::Anatolian_Hieroglyphs_range32
 r re2::Arabic_range16
 r re2::Arabic_range32
 r re2::Armenian_range16
 r re2::Avestan_range32
 r re2::Balinese_range16
 r re2::Bamum_range16
 r re2::Bamum_range32
 r re2::Bassa_Vah_range32
 r re2::Batak_range16
 r re2::Bengali_range16
 r re2::Bhaiksuki_range32
 r re2::Bopomofo_range16
 r re2::Brahmi_range32
 r re2::Braille_range16
 r re2::Buginese_range16
 r re2::Buhid_range16
 r re2::C_range16
 r re2::C_range32
 r re2::Canadian_Aboriginal_range16
 r re2::Carian_range32
 r re2::Caucasian_Albanian_range32
 r re2::Cc_range16
 r re2::Cf_range16
 r re2::Cf_range32
 r re2::Chakma_range32
 r re2::Cham_range16
 r re2::Cherokee_range16
 r re2::Co_range16
 r re2::Co_range32
 r re2::Common_range16
 r re2::Common_range32
 r re2::Coptic_range16
 r re2::Cs_range16
 r re2::Cuneiform_range32
 r re2::Cypriot_range32
 r re2::Cyrillic_range16
 r re2::Deseret_range32
 r re2::Devanagari_range16
 r re2::Duployan_range32
 r re2::Egyptian_Hieroglyphs_range32
 r re2::Elbasan_range32
 r re2::Ethiopic_range16
 r re2::Georgian_range16
 r re2::Glagolitic_range16
 r re2::Glagolitic_range32
 r re2::Gothic_range32
 r re2::Grantha_range32
 r re2::Greek_range16
 r re2::Greek_range32
 r re2::Gujarati_range16
 r re2::Gurmukhi_range16
 r re2::Han_range16
 r re2::Han_range32
 r re2::Hangul_range16
 r re2::Hanunoo_range16
 r re2::Hatran_range32
 r re2::Hebrew_range16
 r re2::Hiragana_range16
 r re2::Hiragana_range32
 r re2::Imperial_Aramaic_range32
 r re2::Inherited_range16
 r re2::Inherited_range32
 r re2::Inscriptional_Pahlavi_range32
 r re2::Inscriptional_Parthian_range32
 r re2::Javanese_range16
 r re2::Kaithi_range32
 r re2::Kannada_range16
 r re2::Katakana_range16
 r re2::Katakana_range32
 r re2::Kayah_Li_range16
 r re2::Kharoshthi_range32
 r re2::Khmer_range16
 r re2::Khojki_range32
 r re2::Khudawadi_range32
 r re2::L_range16
 r re2::L_range32
 r re2::Lao_range16
 r re2::Latin_range16
 r re2::Lepcha_range16
 r re2::Limbu_range16
 r re2::Linear_A_range32
 r re2::Linear_B_range32
 r re2::Lisu_range16
 r re2::Ll_range16
 r re2::Ll_range32
 r re2::Lm_range16
 r re2::Lm_range32
 r re2::Lo_range16
 r re2::Lo_range32
 r re2::Lt_range16
 r re2::Lu_range16
 r re2::Lu_range32
 r re2::Lycian_range32
 r re2::Lydian_range32
 r re2::M_range16
 r re2::M_range32
 r re2::Mahajani_range32
 r re2::Malayalam_range16
 r re2::Mandaic_range16
 r re2::Manichaean_range32
 r re2::Marchen_range32
 r re2::Masaram_Gondi_range32
 r re2::Mc_range16
 r re2::Mc_range32
 r re2::Me_range16
 r re2::Meetei_Mayek_range16
 r re2::Mende_Kikakui_range32
 r re2::Meroitic_Cursive_range32
 r re2::Meroitic_Hieroglyphs_range32
 r re2::Miao_range32
 r re2::Mn_range16
 r re2::Mn_range32
 r re2::Modi_range32
 r re2::Mongolian_range16
 r re2::Mongolian_range32
 r re2::Mro_range32
 r re2::Multani_range32
 r re2::Myanmar_range16
 r re2::N_range16
 r re2::N_range32
 r re2::Nabataean_range32
 r re2::Nd_range16
 r re2::Nd_range32
 r re2::New_Tai_Lue_range16
 r re2::Newa_range32
 r re2::Nko_range16
 r re2::Nl_range16
 r re2::Nl_range32
 r re2::No_range16
 r re2::No_range32
 r re2::Nushu_range32
 r re2::Ogham_range16
 r re2::Ol_Chiki_range16
 r re2::Old_Hungarian_range32
 r re2::Old_Italic_range32
 r re2::Old_North_Arabian_range32
 r re2::Old_Permic_range32
 r re2::Old_Persian_range32
 r re2::Old_South_Arabian_range32
 r re2::Old_Turkic_range32
 r re2::Oriya_range16
 r re2::Osage_range32
 r re2::Osmanya_range32
 r re2::P_range16
 r re2::P_range32
 r re2::Pahawh_Hmong_range32
 r re2::Palmyrene_range32
 r re2::Pau_Cin_Hau_range32
 r re2::Pc_range16
 r re2::Pd_range16
 r re2::Pe_range16
 r re2::Pf_range16
 r re2::Phags_Pa_range16
 r re2::Phoenician_range32
 r re2::Pi_range16
 r re2::Po_range16
 r re2::Po_range32
 r re2::Ps_range16
 r re2::Psalter_Pahlavi_range32
 r re2::Rejang_range16
 r re2::Runic_range16
 r re2::S_range16
 r re2::S_range32
 r re2::Samaritan_range16
 r re2::Saurashtra_range16
 r re2::Sc_range16
 r re2::Sharada_range32
 r re2::Shavian_range32
 r re2::Siddham_range32
 r re2::SignWriting_range32
 r re2::Sinhala_range16
 r re2::Sinhala_range32
 r re2::Sk_range16
 r re2::Sk_range32
 r re2::Sm_range16
 r re2::Sm_range32
 r re2::So_range16
 r re2::So_range32
 r re2::Sora_Sompeng_range32
 r re2::Soyombo_range32
 r re2::Sundanese_range16
 r re2::Syloti_Nagri_range16
 r re2::Syriac_range16
 r re2::Tagalog_range16
 r re2::Tagbanwa_range16
 r re2::Tai_Le_range16
 r re2::Tai_Tham_range16
 r re2::Tai_Viet_range16
 r re2::Takri_range32
 r re2::Tamil_range16
 r re2::Tangut_range32
 r re2::Telugu_range16
 r re2::Thaana_range16
 r re2::Thai_range16
 r re2::Tibetan_range16
 r re2::Tifinagh_range16
 r re2::Tirhuta_range32
 r re2::Ugaritic_range32
 r re2::Vai_range16
 r re2::Warang_Citi_range32
 r re2::Yi_range16
 r re2::Z_range16
 r re2::Zanabazar_Square_range32
 r re2::Zl_range16
 r re2::Zp_range16
 r re2::Zs_range16
 r re2::code1
 r re2::code10
 r re2::code11
 r re2::code12
 r re2::code13
 r re2::code14
 r re2::code15
 r re2::code16
 r re2::code17
 r re2::code2
 r re2::code3
 r re2::code4
 r re2::code5
 r re2::code6
 r re2::code7
 r re2::code8
 r re2::code9
 r re2::nullPatchList
 r re2::prog_80_10ffff
 r rgb_blue
 r rgb_green
 r rgb_pixelsize
 r rgb_red
 r short_months.6774
 r snappy::internal::char_table
 r snappy::internal::wordmask
 r static_dtree
 r static_ltree
 r std::piecewise_construct
 r std_chrominance_quant_tbl
 r std_luminance_quant_tbl
 r tensorflow::(anonymous namespace)::kArgOp
 r tensorflow::(anonymous namespace)::kBase64Bytes
 r tensorflow::(anonymous namespace)::kBase64UrlSafeChars
 r tensorflow::(anonymous namespace)::kMinTimeEstimate
 r tensorflow::(anonymous namespace)::kRetvalOp
 r tensorflow::core::FindFirstSet(unsigned int)::kLowestBitSet
 r tensorflow::crc32c::table0_
 r tensorflow::crc32c::table1_
 r tensorflow::crc32c::table2_
 r tensorflow::crc32c::table3_
 r tensorflow::error::protobuf_tensorflow_2fcore_2flib_2fcore_2ferror_5fcodes_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::hex_char
 r tensorflow::port::(anonymous namespace)::CPUIDInfo::Initialize()::__func__
 r tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fexample_2ffeature_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fexample_2ffeature_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fallocation_5fdescription_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fallocation_5fdescription_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2ffunction_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2ffunction_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fiterator_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fiterator_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2flog_5fmemory_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2flog_5fmemory_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2freader_5fbase_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2freader_5fbase_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fsummary_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fsummary_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fslice_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fslice_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftypes_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fvariable_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fvariable_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fversions_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fframework_2fversions_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcluster_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcluster_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fconfig_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fconfig_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fnamed_5ftensor_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fnamed_5ftensor_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fqueue_5frunner_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fqueue_5frunner_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaved_5fmodel_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaved_5fmodel_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaver_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaver_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensorflow_5fserver_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensorflow_5fserver_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2futil_2fevent_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2futil_2fevent_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2futil_2fmemmapped_5ffile_5fsystem_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2futil_2fmemmapped_5ffile_5fsystem_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2futil_2fsaved_5ftensor_5fslice_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2futil_2fsaved_5ftensor_5fslice_2eproto::schemas
 r tensorflow::protobuf_tensorflow_2fcore_2futil_2ftest_5flog_2eproto::(anonymous namespace)::AddDescriptorsImpl()::descriptor
 r tensorflow::protobuf_tensorflow_2fcore_2futil_2ftest_5flog_2eproto::schemas
 r tensorflow::str_util::hex_char
 r tensorflow::strings::AlphaNum::AlphaNum(tensorflow::strings::Hex)::hexdigits
 r tensorflow::strings::HumanReadableNumBytes[abi:cxx11](long long)::units
 r tensorflow::strings::HumanReadableNum[abi:cxx11](long long)::units
 r tensorflow::strings::kBitsToLength
 r tensorflow::strings::kColonSeparator
 r tensorflow::strings::kEscape1_Separator
 r tensorflow::strings::kLengthToHeaderBits
 r tensorflow::strings::kLengthToMask
 r tensorflow::wav::(anonymous namespace)::kDataChunkId
 r tensorflow::wav::(anonymous namespace)::kFormatChunkId
 r tensorflow::wav::(anonymous namespace)::kRiffChunkId
 r tensorflow::wav::(anonymous namespace)::kRiffType
 r twobppswaptable
 r typeinfo name for perftools::gputools::(anonymous namespace)::BlockOnThreadExecutor(tensorflow::thread::ThreadPool*)::{lambda()#1}
 r typeinfo name for perftools::gputools::Stream::ThenEnqueueOnBackgroundThread(std::function<void (perftools::gputools::StreamExecutor*)>)::{lambda()#1}
 r typeinfo name for perftools::gputools::host::HostExecutor::CreateStreamDependency(perftools::gputools::Stream*, perftools::gputools::Stream*)::{lambda()#1}
 r typeinfo name for perftools::gputools::host::HostExecutor::MemZero(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, unsigned long long)::{lambda()#1}
 r typeinfo name for perftools::gputools::host::HostExecutor::Memcpy(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, void const*, unsigned long long)::{lambda()#1}
 r typeinfo name for perftools::gputools::host::HostExecutor::Memcpy(perftools::gputools::Stream*, void*, perftools::gputools::DeviceMemoryBase const&, unsigned long long)::{lambda()#1}
 r typeinfo name for perftools::gputools::host::HostExecutor::MemcpyDeviceToDevice(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, perftools::gputools::DeviceMemoryBase const&, unsigned long long)::{lambda()#1}
 r typeinfo name for perftools::gputools::host::HostExecutor::Memset(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, unsigned char, unsigned long long)::{lambda()#1}
 r typeinfo name for perftools::gputools::host::HostExecutor::Memset32(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, unsigned int, unsigned long long)::{lambda()#1}
 r typeinfo name for perftools::gputools::host::HostPlatform::GetExecutor(perftools::gputools::StreamExecutorConfig const&)::{lambda()#1}
 r typeinfo name for perftools::gputools::host::HostStream::EnqueueTask(std::function<void ()>)::{lambda()#1}
 r typeinfo name for perftools::gputools::host::HostTimer::Start(perftools::gputools::Stream*)::{lambda()#1}
 r typeinfo name for perftools::gputools::host::HostTimer::Stop(perftools::gputools::Stream*)::{lambda()#1}
 r typeinfo name for std::_Bind<std::_Mem_fn<void (tensorflow::(anonymous namespace)::ExecutorState::*)(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long)> (tensorflow::(anonymous namespace)::ExecutorState*, tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long)>
 r typeinfo name for std::_Bind<tensorflow::(anonymous namespace)::CopyDeviceToDevice(void (*)(tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>), tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Tensor const&, tensorflow::Tensor*)#2} (tensorflow::(anonymous namespace)::CopyDeviceToDevice(void (*)(tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>), tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}, std::_Placeholder<1>, {lambda(tensorflow::Status const&)#1}<2>)>
 r typeinfo name for std::_Bind<tensorflow::(anonymous namespace)::CopyDeviceToHost(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Tensor const&, tensorflow::Tensor*)#2} (tensorflow::(anonymous namespace)::CopyDeviceToHost(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}, std::_Placeholder<1>, {lambda(tensorflow::Status const&)#1}<2>)>
 r typeinfo name for std::_Bind<tensorflow::(anonymous namespace)::CopyHostToDevice(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Tensor const&, tensorflow::Tensor*)#2} (tensorflow::(anonymous namespace)::CopyHostToDevice(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}, std::_Placeholder<1>, {lambda(tensorflow::Status const&)#1}<2>)>
 r typeinfo name for std::_Bind<tensorflow::CopyTensor::ViaDMA(tensorflow::StringPiece, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status const&)#1} (std::function<void (tensorflow::Status const&)>, std::_Placeholder<1>)>
 r typeinfo name for std::_Bind<tensorflow::CopyTensor::ViaDMA(tensorflow::StringPiece, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status)#2} (std::function<void (tensorflow::Status const&)>, std::_Placeholder<1>)>
 r typeinfo name for std::_Bind<tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::CallFrameInterface*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status const&)#1} (std::function<void (tensorflow::Status const&)>, std::_Placeholder<1>)>
 r typeinfo name for std::_Bind<tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::CallFrameInterface*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status const&)#2} (std::function<void (tensorflow::Status const&)>, std::_Placeholder<1>)>
 r typeinfo name for std::_Maybe_get_result_type<std::_Mem_fn<void (tensorflow::(anonymous namespace)::ExecutorState::*)(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long)>, void>
 r typeinfo name for std::_Maybe_get_result_type<tensorflow::(anonymous namespace)::CopyDeviceToDevice(void (*)(tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>), tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Tensor const&, tensorflow::Tensor*)#2}, void>
 r typeinfo name for std::_Maybe_get_result_type<tensorflow::(anonymous namespace)::CopyDeviceToHost(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Tensor const&, tensorflow::Tensor*)#2}, void>
 r typeinfo name for std::_Maybe_get_result_type<tensorflow::(anonymous namespace)::CopyHostToDevice(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Tensor const&, tensorflow::Tensor*)#2}, void>
 r typeinfo name for std::_Maybe_get_result_type<tensorflow::CopyTensor::ViaDMA(tensorflow::StringPiece, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status const&)#1}, void>
 r typeinfo name for std::_Maybe_get_result_type<tensorflow::CopyTensor::ViaDMA(tensorflow::StringPiece, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status)#2}, void>
 r typeinfo name for std::_Maybe_get_result_type<tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::CallFrameInterface*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status const&)#1}, void>
 r typeinfo name for std::_Maybe_get_result_type<tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::CallFrameInterface*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status const&)#2}, void>
 r typeinfo name for std::_Weak_result_type<std::_Mem_fn<void (tensorflow::(anonymous namespace)::ExecutorState::*)(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long)> >
 r typeinfo name for std::_Weak_result_type<tensorflow::(anonymous namespace)::CopyDeviceToDevice(void (*)(tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>), tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Tensor const&, tensorflow::Tensor*)#2}>
 r typeinfo name for std::_Weak_result_type<tensorflow::(anonymous namespace)::CopyDeviceToHost(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Tensor const&, tensorflow::Tensor*)#2}>
 r typeinfo name for std::_Weak_result_type<tensorflow::(anonymous namespace)::CopyHostToDevice(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Tensor const&, tensorflow::Tensor*)#2}>
 r typeinfo name for std::_Weak_result_type<tensorflow::CopyTensor::ViaDMA(tensorflow::StringPiece, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status const&)#1}>
 r typeinfo name for std::_Weak_result_type<tensorflow::CopyTensor::ViaDMA(tensorflow::StringPiece, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status)#2}>
 r typeinfo name for std::_Weak_result_type<tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::CallFrameInterface*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status const&)#1}>
 r typeinfo name for std::_Weak_result_type<tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::CallFrameInterface*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status const&)#2}>
 r typeinfo name for std::_Weak_result_type_impl<std::_Mem_fn<void (tensorflow::(anonymous namespace)::ExecutorState::*)(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long)> >
 r typeinfo name for std::_Weak_result_type_impl<tensorflow::(anonymous namespace)::CopyDeviceToDevice(void (*)(tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>), tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Tensor const&, tensorflow::Tensor*)#2}>
 r typeinfo name for std::_Weak_result_type_impl<tensorflow::(anonymous namespace)::CopyDeviceToHost(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Tensor const&, tensorflow::Tensor*)#2}>
 r typeinfo name for std::_Weak_result_type_impl<tensorflow::(anonymous namespace)::CopyHostToDevice(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Tensor const&, tensorflow::Tensor*)#2}>
 r typeinfo name for std::_Weak_result_type_impl<tensorflow::CopyTensor::ViaDMA(tensorflow::StringPiece, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status const&)#1}>
 r typeinfo name for std::_Weak_result_type_impl<tensorflow::CopyTensor::ViaDMA(tensorflow::StringPiece, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status)#2}>
 r typeinfo name for std::_Weak_result_type_impl<tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::CallFrameInterface*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status const&)#1}>
 r typeinfo name for std::_Weak_result_type_impl<tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::CallFrameInterface*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status const&)#2}>
 r typeinfo name for tensorflow::(anonymous namespace)::AccumulateNV2RemovePass
 r typeinfo name for tensorflow::(anonymous namespace)::Buffer<Eigen::QInt16>
 r typeinfo name for tensorflow::(anonymous namespace)::Buffer<Eigen::QInt32>
 r typeinfo name for tensorflow::(anonymous namespace)::Buffer<Eigen::QInt8>
 r typeinfo name for tensorflow::(anonymous namespace)::Buffer<Eigen::QUInt16>
 r typeinfo name for tensorflow::(anonymous namespace)::Buffer<Eigen::QUInt8>
 r typeinfo name for tensorflow::(anonymous namespace)::Buffer<Eigen::half>
 r typeinfo name for tensorflow::(anonymous namespace)::Buffer<bool>
 r typeinfo name for tensorflow::(anonymous namespace)::Buffer<double>
 r typeinfo name for tensorflow::(anonymous namespace)::Buffer<float>
 r typeinfo name for tensorflow::(anonymous namespace)::Buffer<int>
 r typeinfo name for tensorflow::(anonymous namespace)::Buffer<long long>
 r typeinfo name for tensorflow::(anonymous namespace)::Buffer<short>
 r typeinfo name for tensorflow::(anonymous namespace)::Buffer<signed char>
 r typeinfo name for tensorflow::(anonymous namespace)::Buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >
 r typeinfo name for tensorflow::(anonymous namespace)::Buffer<std::complex<double> >
 r typeinfo name for tensorflow::(anonymous namespace)::Buffer<std::complex<float> >
 r typeinfo name for tensorflow::(anonymous namespace)::Buffer<tensorflow::ResourceHandle>
 r typeinfo name for tensorflow::(anonymous namespace)::Buffer<tensorflow::Variant>
 r typeinfo name for tensorflow::(anonymous namespace)::Buffer<tensorflow::bfloat16>
 r typeinfo name for tensorflow::(anonymous namespace)::Buffer<unsigned char>
 r typeinfo name for tensorflow::(anonymous namespace)::Buffer<unsigned int>
 r typeinfo name for tensorflow::(anonymous namespace)::Buffer<unsigned long long>
 r typeinfo name for tensorflow::(anonymous namespace)::Buffer<unsigned short>
 r typeinfo name for tensorflow::(anonymous namespace)::BufferBase
 r typeinfo name for tensorflow::(anonymous namespace)::CopyDeviceToDevice(void (*)(tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>), tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}
 r typeinfo name for tensorflow::(anonymous namespace)::CopyDeviceToHost(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}
 r typeinfo name for tensorflow::(anonymous namespace)::CopyHostToDevice(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}
 r typeinfo name for tensorflow::(anonymous namespace)::ExecutorImpl
 r typeinfo name for tensorflow::(anonymous namespace)::ExecutorState::Finish()::{lambda()#1}
 r typeinfo name for tensorflow::(anonymous namespace)::ExecutorState::Process(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long)::{lambda()#1}
 r typeinfo name for tensorflow::(anonymous namespace)::ExecutorState::ScheduleReady(tensorflow::gtl::InlinedVector<tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, 8> const&, tensorflow::(anonymous namespace)::ExecutorState::TaggedNodeReadyQueue*)::{lambda()#1}
 r typeinfo name for tensorflow::(anonymous namespace)::FileStream
 r typeinfo name for tensorflow::(anonymous namespace)::FindConstantFoldableNodes(tensorflow::Graph const*, tensorflow::ConstantFoldingOptions const&, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> >*, std::unordered_map<tensorflow::Node const*, tensorflow::gtl::FlatSet<tensorflow::Node*, tensorflow::hash<tensorflow::Node*>, std::equal_to<tensorflow::Node*> >, std::hash<tensorflow::Node const*>, std::equal_to<tensorflow::Node const*>, std::allocator<std::pair<tensorflow::Node const* const, tensorflow::gtl::FlatSet<tensorflow::Node*, tensorflow::hash<tensorflow::Node*>, std::equal_to<tensorflow::Node*> > > > >*, std::unordered_map<tensorflow::Node const*, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >, std::hash<tensorflow::Node const*>, std::equal_to<tensorflow::Node const*>, std::allocator<std::pair<tensorflow::Node const* const, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> > > > >*)::{lambda(tensorflow::Node*)#1}
 r typeinfo name for tensorflow::(anonymous namespace)::ForEach(int, int, std::function<void (int)> const&)::{lambda()#1}
 r typeinfo name for tensorflow::(anonymous namespace)::NoOpStatsPublisher
 r typeinfo name for tensorflow::(anonymous namespace)::OptimizeControlFlowColocation(tensorflow::Graph*)::{lambda(tensorflow::Node*)#1}
 r typeinfo name for tensorflow::(anonymous namespace)::ParallelConcatRemovePass
 r typeinfo name for tensorflow::(anonymous namespace)::PosixEnv
 r typeinfo name for tensorflow::(anonymous namespace)::PosixEnv::SchedClosureAfter(long long, std::function<void ()>)::{lambda()#1}
 r typeinfo name for tensorflow::(anonymous namespace)::PosixEnvTime
 r typeinfo name for tensorflow::(anonymous namespace)::RandomAccessFileFromMemmapped
 r typeinfo name for tensorflow::(anonymous namespace)::ReadOnlyMemoryRegionFromMemmapped
 r typeinfo name for tensorflow::(anonymous namespace)::SimpleRendezvous
 r typeinfo name for tensorflow::(anonymous namespace)::StdThread
 r typeinfo name for tensorflow::AsyncOpKernel::Compute(tensorflow::OpKernelContext*)::{lambda()#1}
 r typeinfo name for tensorflow::BFCAllocator::AllocateRaw(unsigned long, unsigned long)::{lambda(unsigned long, unsigned long, bool)#1}
 r typeinfo name for tensorflow::EnsureMemoryTypes(tensorflow::DeviceType const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph*)::{lambda(tensorflow::Edge const*, tensorflow::MemoryType, tensorflow::MemoryType)#1}
 r typeinfo name for tensorflow::EventMgr::StartPollingLoop()::{lambda()#1}
 r typeinfo name for tensorflow::FileSystem::GetMatchingPaths(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)::{lambda(int)#1}
 r typeinfo name for tensorflow::Flag::Flag(char const*, bool*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(bool)#1}
 r typeinfo name for tensorflow::Flag::Flag(char const*, float*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(float)#1}
 r typeinfo name for tensorflow::Flag::Flag(char const*, int*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(int)#1}
 r typeinfo name for tensorflow::Flag::Flag(char const*, long long*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(long long)#1}
 r typeinfo name for tensorflow::Flag::Flag(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}
 r typeinfo name for tensorflow::FunctionLibraryRuntimeImpl::CreateItem(unsigned long long, tensorflow::FunctionLibraryRuntimeImpl::Item**)::{lambda(tensorflow::OpKernel*)#1}
 r typeinfo name for tensorflow::FunctionLibraryRuntimeImpl::FunctionLibraryRuntimeImpl(tensorflow::DeviceMgr const*, tensorflow::Env*, tensorflow::Device*, int, tensorflow::FunctionLibraryDefinition const*, tensorflow::OptimizerOptions const&, std::function<tensorflow::Status (tensorflow::FunctionLibraryRuntime*, tensorflow::NodeDef const&, std::unique_ptr<tensorflow::OpKernel, std::default_delete<tensorflow::OpKernel> >*)>, tensorflow::ProcessFunctionLibraryRuntime*)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef const**)#1}
 r typeinfo name for tensorflow::FunctionLibraryRuntimeImpl::FunctionLibraryRuntimeImpl(tensorflow::DeviceMgr const*, tensorflow::Env*, tensorflow::Device*, int, tensorflow::FunctionLibraryDefinition const*, tensorflow::OptimizerOptions const&, std::function<tensorflow::Status (tensorflow::FunctionLibraryRuntime*, tensorflow::NodeDef const&, std::unique_ptr<tensorflow::OpKernel, std::default_delete<tensorflow::OpKernel> >*)>, tensorflow::ProcessFunctionLibraryRuntime*)::{lambda(tensorflow::NodeDef const&, tensorflow::OpKernel**)#2}
 r typeinfo name for tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::gtl::ArraySlice<tensorflow::Tensor>, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}
 r typeinfo name for tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::gtl::ArraySlice<tensorflow::Tensor>, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#2}
 r typeinfo name for tensorflow::FunctionLibraryRuntimeImpl::RunRemote(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::gtl::ArraySlice<tensorflow::Tensor>, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, tensorflow::Executor::Args*, tensorflow::FunctionLibraryRuntimeImpl::Item*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}
 r typeinfo name for tensorflow::FunctionLibraryRuntimeImpl::RunRemote(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::gtl::ArraySlice<tensorflow::Tensor>, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, tensorflow::Executor::Args*, tensorflow::FunctionLibraryRuntimeImpl::Item*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}::operator()(tensorflow::Status const&) const::{lambda(tensorflow::Status const&)#1}
 r typeinfo name for tensorflow::GPUUtil::Checksum(tensorflow::Device*, tensorflow::DeviceContext const*, tensorflow::Tensor const&)::{lambda(tensorflow::Status)#1}
 r typeinfo name for tensorflow::GPUUtil::CopyCPUTensorToGPU(tensorflow::Tensor const*, tensorflow::DeviceContext const*, tensorflow::Device*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda()#1}
 r typeinfo name for tensorflow::GPUUtil::CopyGPUTensorToCPU(tensorflow::Device*, tensorflow::DeviceContext const*, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda()#1}
 r typeinfo name for tensorflow::GPUUtil::DeviceToDeviceCopy(tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda()#1}
 r typeinfo name for tensorflow::GPUUtil::SetProtoFromGPU(tensorflow::Tensor const&, tensorflow::Device*, tensorflow::DeviceContext const*, tensorflow::TensorProto*, bool, std::function<void (tensorflow::Status const&)>)::{lambda()#1}
 r typeinfo name for tensorflow::GetPostOrder(tensorflow::Graph const&, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> >*, std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> const&)::{lambda(tensorflow::Node*)#1}
 r typeinfo name for tensorflow::GraphRunner::Run(tensorflow::Graph*, tensorflow::FunctionLibraryRuntime*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*)::{lambda(std::function<void ()>)#1}
 r typeinfo name for tensorflow::GraphRunner::Run(tensorflow::Graph*, tensorflow::FunctionLibraryRuntime*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*)::{lambda(tensorflow::NodeDef const&, tensorflow::OpKernel**)#2}
 r typeinfo name for tensorflow::GraphRunner::Run(tensorflow::Graph*, tensorflow::FunctionLibraryRuntime*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*)::{lambda(tensorflow::OpKernel*)#3}
 r typeinfo name for tensorflow::InstantiateFunction(tensorflow::FunctionDef const&, tensorflow::AttrSlice, std::function<tensorflow::Status (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef const**)>, tensorflow::InstantiationResult*)::{lambda(tensorflow::StringPiece, tensorflow::AttrValue*)#1}
 r typeinfo name for tensorflow::IntraProcessRendezvous::RecvAsync(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, std::function<void (tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)>)::{lambda(tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)#1}
 r typeinfo name for tensorflow::IntraProcessRendezvous::RecvAsync(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, std::function<void (tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)>)::{lambda(tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)#1}::operator()(tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool) const::{lambda(tensorflow::Status const&)#1}
 r typeinfo name for tensorflow::LoadLibrary(char const*, void**, void const**, unsigned long*)::{lambda(tensorflow::Status const&, tensorflow::OpDef const&)#1}
 r typeinfo name for tensorflow::ProcessFunctionLibraryRuntime::ReceiveTensorsAsync(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long long, long long, tensorflow::DeviceContext*, std::vector<tensorflow::AllocatorAttributes, std::allocator<tensorflow::AllocatorAttributes> > const&, tensorflow::Rendezvous*, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::function<void (tensorflow::Status const&)> const&)::{lambda(tensorflow::Status const&)#1}
 r typeinfo name for tensorflow::ProcessFunctionLibraryRuntime::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::gtl::ArraySlice<tensorflow::Tensor>, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}
 r typeinfo name for tensorflow::RecvOutputsFromRendezvousAsync(tensorflow::Rendezvous*, tensorflow::DeviceContext*, std::vector<tensorflow::AllocatorAttributes, std::allocator<tensorflow::AllocatorAttributes> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::function<void (tensorflow::Status const&)> const&)::{lambda(tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)#1}
 r typeinfo name for tensorflow::Rendezvous::Recv(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor*, bool*, long long)::{lambda(tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)#1}
 r typeinfo name for tensorflow::ShapeRefiner::InferShapesForFunction(tensorflow::FunctionDef const*, bool, tensorflow::ExtendedInferenceContext*)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef const**)#1}
 r typeinfo name for tensorflow::ShapeRefiner::InferShapesForFunction(tensorflow::FunctionDef const*, bool, tensorflow::ExtendedInferenceContext*)::{lambda(tensorflow::Node const*)#2}
 r typeinfo name for tensorflow::Shard(int, tensorflow::thread::ThreadPool*, long long, long long, std::function<void (long long, long long)>)::{lambda()#1}
 r typeinfo name for tensorflow::ToGraphDef(tensorflow::Graph const*, tensorflow::GraphDef*, bool)::{lambda(tensorflow::Node*)#1}
 r typeinfo name for tensorflow::ValidateMemoryTypes(tensorflow::DeviceType const&, tensorflow::Graph const*)::{lambda(tensorflow::Edge const*, tensorflow::MemoryType, tensorflow::MemoryType)#1}
 r typeinfo name for tensorflow::checkpoint::(anonymous namespace)::TableBuilder
 r typeinfo name for tensorflow::checkpoint::(anonymous namespace)::TensorSliceReaderTable
 r typeinfo name for tensorflow::example::(anonymous namespace)::ParallelFor(std::function<void (unsigned long)> const&, unsigned long, tensorflow::thread::ThreadPool*)::{lambda()#1}
 r typeinfo name for tensorflow::example::FastParseExample(tensorflow::example::FastParseExampleConfig const&, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::thread::ThreadPool*, tensorflow::example::Result*)::{lambda(unsigned long)#3}
 r typeinfo name for tensorflow::grappler::ExecuteWithTimeout(std::function<void ()>, long long, tensorflow::thread::ThreadPool*)::{lambda()#1}
 r typeinfo name for tensorflow::lookup::(anonymous namespace)::TextFileLineIterator
 r typeinfo name for tensorflow::monitoring::(anonymous namespace)::ExplicitBuckets
 r typeinfo name for tensorflow::monitoring::(anonymous namespace)::ExponentialBuckets
 r typeinfo name for tensorflow::register_op::OpDefBuilderReceiver::OpDefBuilderReceiver(tensorflow::register_op::OpDefBuilderWrapper<true> const&)::{lambda(tensorflow::OpRegistrationData*)#1}
 r typeinfo name for tensorflow::str_util::SplitAndParseAsFloats(tensorflow::StringPiece, char, std::vector<float, std::allocator<float> >*)::{lambda(tensorflow::StringPiece, float*)#1}
 r typeinfo name for tensorflow::table::(anonymous namespace)::EmptyIterator
 r typeinfo name for tensorflow::table::(anonymous namespace)::TwoLevelIterator
 r typeinfo name for tensorflow::thread::ThreadPool::ParallelForWithWorkerId(long long, long long, std::function<void (long long, long long, int)> const&)::{lambda(long long, long long)#1}
 r uninitialized_hooks.10548
 r val_ac_chrominance.4451
 r val_ac_chrominance.4485
 r val_ac_luminance.4449
 r val_ac_luminance.4483
 r val_dc_chrominance.4447
 r val_dc_chrominance.4481
 r val_dc_luminance.4445
 r val_dc_luminance.4479
 rand
 read
 readdir
 readlink
 realloc
 rename
 rmdir
 roundf
 sbrk
 sched_getaffinity
 sched_yield
 secure_getenv
 setsockopt
 sigaction
 sigemptyset
 sigfillset
 sincos
 snprintf
 socket
 sprintf
 sqrt
 sscanf
 std::_Hash_bytes(void const*, unsigned long, unsigned long)
 std::_Rb_tree_decrement(std::_Rb_tree_node_base const*)
 std::_Rb_tree_decrement(std::_Rb_tree_node_base*)
 std::_Rb_tree_increment(std::_Rb_tree_node_base const*)
 std::_Rb_tree_increment(std::_Rb_tree_node_base*)
 std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
 std::_Rb_tree_rebalance_for_erase(std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)
 std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >::~basic_ostringstream()
 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned long)
 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct(unsigned long, char)
 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long&, unsigned long)
 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned long, unsigned long)
 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned long, unsigned long, char const*, unsigned long)
 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long)
 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned long, unsigned long, unsigned long, char)
 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::assign(char const*)
 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(unsigned long, unsigned long, char const*) const
 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned long, unsigned long) const
 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char, unsigned long) const
 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find_first_not_of(char const*, unsigned long, unsigned long) const
 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find_first_of(char const*, unsigned long, unsigned long) const
 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find_last_of(char const*, unsigned long, unsigned long) const
 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned long)
 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::resize(unsigned long, char)
 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char, unsigned long) const
 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::swap(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
 std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >::_M_sync(char*, unsigned long, unsigned long)
 std::__detail::_Prime_rehash_policy::_M_need_rehash(unsigned long, unsigned long, unsigned long) const
 std::__detail::_Prime_rehash_policy::_M_next_bkt(unsigned long) const
 std::__once_call
 std::__once_callable
 std::__throw_bad_alloc()
 std::__throw_bad_cast()
 std::__throw_bad_function_call()
 std::__throw_length_error(char const*)
 std::__throw_logic_error(char const*)
 std::__throw_out_of_range(char const*)
 std::__throw_out_of_range_fmt(char const*, ...)
 std::__throw_system_error(int)
 std::basic_ios<char, std::char_traits<char> >::clear(std::_Ios_Iostate)
 std::basic_ios<char, std::char_traits<char> >::imbue(std::locale const&)
 std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*)
 std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char)
 std::basic_istream<char, std::char_traits<char> >& std::operator>><char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
 std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)
 std::basic_ostream<char, std::char_traits<char> >& std::operator<< <double, char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, std::complex<double> const&)
 std::basic_ostream<char, std::char_traits<char> >& std::operator<< <float, char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, std::complex<float> const&)
 std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*)
 std::cerr
 std::chrono::_V2::system_clock::now()
 std::condition_variable::condition_variable()
 std::condition_variable::notify_all()
 std::condition_variable::notify_one()
 std::condition_variable::wait(std::unique_lock<std::mutex>&)
 std::condition_variable::~condition_variable()
 std::ctype<char> const& std::use_facet<std::ctype<char> >(std::locale const&)
 std::ctype<char>::_M_widen_init() const
 std::exception::~exception()
 std::ios_base::Init::Init()
 std::ios_base::Init::~Init()
 std::ios_base::ios_base()
 std::ios_base::~ios_base()
 std::istream& std::istream::_M_extract<double>(double&)
 std::istream& std::istream::_M_extract<float>(float&)
 std::istream& std::istream::_M_extract<long long>(long long&)
 std::istream::read(char*, long)
 std::istream::tellg()
 std::locale::classic()
 std::locale::locale()
 std::locale::~locale()
 std::nothrow
 std::ostream& std::ostream::_M_insert<bool>(bool)
 std::ostream& std::ostream::_M_insert<double>(double)
 std::ostream& std::ostream::_M_insert<long long>(long long)
 std::ostream& std::ostream::_M_insert<long>(long)
 std::ostream& std::ostream::_M_insert<unsigned long long>(unsigned long long)
 std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)
 std::ostream& std::ostream::_M_insert<void const*>(void const*)
 std::ostream::flush()
 std::ostream::operator<<(int)
 std::ostream::operator<<(short)
 std::ostream::put(char)
 std::ostream::write(char const*, long)
 std::random_device::_M_fini()
 std::random_device::_M_getval()
 std::random_device::_M_init(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 std::terminate()
 std::thread::_M_start_thread(std::shared_ptr<std::thread::_Impl_base>, void (*)())
 std::thread::detach()
 std::thread::hardware_concurrency()
 std::thread::join()
 stderr
 strchr
 strcmp
 strcpy
 strdup
 strerror
 strerror_r
 strftime
 strlen
 strncmp
 strncpy
 strpbrk
 strtod
 strtof
 strtok
 strtol
 strtoll
 strtoul
 strtoull
 syscall
 t (anonymous namespace)::DoRawLog(char**, int*, char const*, ...)
 t (anonymous namespace)::RawLogVA(absl::LogSeverity, char const*, int, char const*, __va_list_tag*)
 t ..@16..CHECKBUF47_END
 t ..@17..EMIT_BYTE_END
 t ..@18..EMIT_BYTE_END
 t ..@19..EMIT_BYTE_END
 t ..@20..EMIT_BYTE_END
 t ..@21..EMIT_BYTE_END
 t ..@22..EMIT_BYTE_END
 t ..@25..CHECKBUF47_END
 t ..@26..EMIT_BYTE_END
 t ..@27..EMIT_BYTE_END
 t ..@28..EMIT_BYTE_END
 t ..@29..EMIT_BYTE_END
 t ..@30..EMIT_BYTE_END
 t ..@31..EMIT_BYTE_END
 t ..@36..CHECKBUF47_END
 t ..@37..EMIT_BYTE_END
 t ..@38..EMIT_BYTE_END
 t ..@39..EMIT_BYTE_END
 t ..@40..EMIT_BYTE_END
 t ..@41..EMIT_BYTE_END
 t ..@42..EMIT_BYTE_END
 t ..@44..CHECKBUF31_END
 t ..@45..EMIT_BYTE_END
 t ..@46..EMIT_BYTE_END
 t ..@47..EMIT_BYTE_END
 t ..@48..EMIT_BYTE_END
 t ..@52..CHECKBUF47_END
 t ..@53..EMIT_BYTE_END
 t ..@54..EMIT_BYTE_END
 t ..@55..EMIT_BYTE_END
 t ..@56..EMIT_BYTE_END
 t ..@57..EMIT_BYTE_END
 t ..@58..EMIT_BYTE_END
 t DGifDecompressInput
 t DGifDecompressLine
 t DGifGetWord
 t EGifBufferedOutput
 t EGifBufferedOutput.part.0
 t EGifCompressLine
 t EGifCompressOutput
 t EGifWriteExtensions
 t Eigen::TensorMap<Eigen::Tensor<int const, 8, 1, long>, 0, Eigen::MakePointer> tensorflow::(anonymous namespace)::GetEigenTensorMapFromTensorShape<int const>(tensorflow::TensorShape const&, int const*) [clone .constprop.376]
 t InternalWrite
 t SortCmpRtn
 t _GLOBAL__sub_I_accumulate_n_optimizer.cc
 t _GLOBAL__sub_I_activation_mode.cc
 t _GLOBAL__sub_I_algorithm.cc
 t _GLOBAL__sub_I_allocation_description.pb.cc
 t _GLOBAL__sub_I_allocation_description.pb_text.cc
 t _GLOBAL__sub_I_allocator.cc
 t _GLOBAL__sub_I_allocator_registry.cc
 t _GLOBAL__sub_I_allocator_retry.cc
 t _GLOBAL__sub_I_any.cc
 t _GLOBAL__sub_I_any.pb.cc
 t _GLOBAL__sub_I_api.pb.cc
 t _GLOBAL__sub_I_api_def.pb.cc
 t _GLOBAL__sub_I_api_def.pb_text.cc
 t _GLOBAL__sub_I_arena.cc
 t _GLOBAL__sub_I_arenastring.cc
 t _GLOBAL__sub_I_atomicops_internals_x86_gcc.cc
 t _GLOBAL__sub_I_atomicops_internals_x86_msvc.cc
 t _GLOBAL__sub_I_attr_value.pb.cc
 t _GLOBAL__sub_I_attr_value.pb_text.cc
 t _GLOBAL__sub_I_attr_value_util.cc
 t _GLOBAL__sub_I_base64.cc
 t _GLOBAL__sub_I_bcast.cc
 t _GLOBAL__sub_I_bfc_allocator.cc
 t _GLOBAL__sub_I_bfloat16.cc
 t _GLOBAL__sub_I_block.cc
 t _GLOBAL__sub_I_block_builder.cc
 t _GLOBAL__sub_I_buffered_inputstream.cc
 t _GLOBAL__sub_I_build_graph_options.cc
 t _GLOBAL__sub_I_bytestream.cc
 t _GLOBAL__sub_I_cancellation.cc
 t _GLOBAL__sub_I_cluster.pb.cc
 t _GLOBAL__sub_I_cluster.pb_text.cc
 t _GLOBAL__sub_I_coded_stream.cc
 t _GLOBAL__sub_I_collection_registry.cc
 t _GLOBAL__sub_I_common.cc
 t _GLOBAL__sub_I_common_shape_fns.cc
 t _GLOBAL__sub_I_config.pb.cc
 t _GLOBAL__sub_I_config.pb_text.cc
 t _GLOBAL__sub_I_constant_folding.cc
 t _GLOBAL__sub_I_control_flow.cc
 t _GLOBAL__sub_I_control_flow.pb.cc
 t _GLOBAL__sub_I_copy_tensor.cc
 t _GLOBAL__sub_I_cost_graph.pb.cc
 t _GLOBAL__sub_I_cost_graph.pb_text.cc
 t _GLOBAL__sub_I_costmodel.cc
 t _GLOBAL__sub_I_costmodel_manager.cc
 t _GLOBAL__sub_I_cpu_feature_guard.cc
 t _GLOBAL__sub_I_cuda_platform_id.cc
 t _GLOBAL__sub_I_datapiece.cc
 t _GLOBAL__sub_I_debug.pb.cc
 t _GLOBAL__sub_I_debug.pb_text.cc
 t _GLOBAL__sub_I_debugger_state_interface.cc
 t _GLOBAL__sub_I_default_value_objectwriter.cc
 t _GLOBAL__sub_I_delimited_message_util.cc
 t _GLOBAL__sub_I_descriptor.cc
 t _GLOBAL__sub_I_descriptor.pb.cc
 t _GLOBAL__sub_I_descriptor_database.cc
 t _GLOBAL__sub_I_device.cc
 t _GLOBAL__sub_I_device_attributes.pb.cc
 t _GLOBAL__sub_I_device_attributes.pb_text.cc
 t _GLOBAL__sub_I_device_base.cc
 t _GLOBAL__sub_I_device_factory.cc
 t _GLOBAL__sub_I_device_mgr.cc
 t _GLOBAL__sub_I_device_name_utils.cc
 t _GLOBAL__sub_I_device_properties.pb.cc
 t _GLOBAL__sub_I_device_properties.pb_text.cc
 t _GLOBAL__sub_I_device_set.cc
 t _GLOBAL__sub_I_dnn.cc
 t _GLOBAL__sub_I_dso_loader.cc
 t _GLOBAL__sub_I_duration.pb.cc
 t _GLOBAL__sub_I_dynamic_message.cc
 t _GLOBAL__sub_I_empty.pb.cc
 t _GLOBAL__sub_I_env.cc
 t _GLOBAL__sub_I_env_var.cc
 t _GLOBAL__sub_I_equal_graph_def.cc
 t _GLOBAL__sub_I_error.cc
 t _GLOBAL__sub_I_error_codes.pb.cc
 t _GLOBAL__sub_I_error_codes.pb_text.cc
 t _GLOBAL__sub_I_error_listener.cc
 t _GLOBAL__sub_I_event.cc
 t _GLOBAL__sub_I_event.pb.cc
 t _GLOBAL__sub_I_events_writer.cc
 t _GLOBAL__sub_I_example.pb.cc
 t _GLOBAL__sub_I_example.pb_text.cc
 t _GLOBAL__sub_I_example_parser_configuration.pb.cc
 t _GLOBAL__sub_I_example_proto_fast_parsing.cc
 t _GLOBAL__sub_I_example_proto_helper.cc
 t _GLOBAL__sub_I_executor.cc
 t _GLOBAL__sub_I_executor_cache.cc
 t _GLOBAL__sub_I_extension_set.cc
 t _GLOBAL__sub_I_extension_set_heavy.cc
 t _GLOBAL__sub_I_feature.pb.cc
 t _GLOBAL__sub_I_feature.pb_text.cc
 t _GLOBAL__sub_I_feature_util.cc
 t _GLOBAL__sub_I_field_comparator.cc
 t _GLOBAL__sub_I_field_mask.pb.cc
 t _GLOBAL__sub_I_field_mask_util.cc
 t _GLOBAL__sub_I_field_mask_utility.cc
 t _GLOBAL__sub_I_file_system.cc
 t _GLOBAL__sub_I_format.cc
 t _GLOBAL__sub_I_function.cc
 t _GLOBAL__sub_I_function.pb.cc
 t _GLOBAL__sub_I_function.pb_text.cc
 t _GLOBAL__sub_I_generated_message_reflection.cc
 t _GLOBAL__sub_I_generated_message_table_driven.cc
 t _GLOBAL__sub_I_generated_message_table_driven_lite.cc
 t _GLOBAL__sub_I_generated_message_util.cc
 t _GLOBAL__sub_I_gpu_bfc_allocator.cc
 t _GLOBAL__sub_I_gpu_cudamalloc_allocator.cc
 t _GLOBAL__sub_I_gpu_debug_allocator.cc
 t _GLOBAL__sub_I_gpu_event_mgr.cc
 t _GLOBAL__sub_I_gpu_init.cc
 t _GLOBAL__sub_I_gpu_managed_allocator.cc
 t _GLOBAL__sub_I_gpu_stream_util.cc
 t _GLOBAL__sub_I_gpu_util.cc
 t _GLOBAL__sub_I_gpu_util_platform_specific.cc
 t _GLOBAL__sub_I_gradients.cc
 t _GLOBAL__sub_I_graph.cc
 t _GLOBAL__sub_I_graph.pb.cc
 t _GLOBAL__sub_I_graph.pb_text.cc
 t _GLOBAL__sub_I_graph_constructor.cc
 t _GLOBAL__sub_I_graph_def_builder.cc
 t _GLOBAL__sub_I_graph_def_util.cc
 t _GLOBAL__sub_I_graph_optimizer.cc
 t _GLOBAL__sub_I_graph_partition.cc
 t _GLOBAL__sub_I_graph_runner.cc
 t _GLOBAL__sub_I_graph_transfer_info.pb.cc
 t _GLOBAL__sub_I_graph_transfer_info.pb_text.cc
 t _GLOBAL__sub_I_grappler_item.cc
 t _GLOBAL__sub_I_group_iterator.cc
 t _GLOBAL__sub_I_guarded_philox_random.cc
 t _GLOBAL__sub_I_hash.cc
 t _GLOBAL__sub_I_histogram.cc
 t _GLOBAL__sub_I_host_gpu_executor.cc
 t _GLOBAL__sub_I_host_platform.cc
 t _GLOBAL__sub_I_host_platform_id.cc
 t _GLOBAL__sub_I_host_stream.cc
 t _GLOBAL__sub_I_host_timer.cc
 t _GLOBAL__sub_I_importer.cc
 t _GLOBAL__sub_I_initializable_lookup_table.cc
 t _GLOBAL__sub_I_inputbuffer.cc
 t _GLOBAL__sub_I_inputstream_interface.cc
 t _GLOBAL__sub_I_int128.cc
 t _GLOBAL__sub_I_iterator.cc
 t _GLOBAL__sub_I_iterator.pb.cc
 t _GLOBAL__sub_I_iterator.pb_text.cc
 t _GLOBAL__sub_I_json_escaping.cc
 t _GLOBAL__sub_I_json_objectwriter.cc
 t _GLOBAL__sub_I_json_stream_parser.cc
 t _GLOBAL__sub_I_json_util.cc
 t _GLOBAL__sub_I_kernel.cc
 t _GLOBAL__sub_I_kernel_def.pb.cc
 t _GLOBAL__sub_I_kernel_def.pb_text.cc
 t _GLOBAL__sub_I_kernel_def_builder.cc
 t _GLOBAL__sub_I_load_library.cc
 t _GLOBAL__sub_I_local_device.cc
 t _GLOBAL__sub_I_log_memory.cc
 t _GLOBAL__sub_I_log_memory.pb.cc
 t _GLOBAL__sub_I_log_memory.pb_text.cc
 t _GLOBAL__sub_I_lookup_interface.cc
 t _GLOBAL__sub_I_lookup_util.cc
 t _GLOBAL__sub_I_map_field.cc
 t _GLOBAL__sub_I_mathlimits.cc
 t _GLOBAL__sub_I_matmul_autotune.cc
 t _GLOBAL__sub_I_memmapped_file_system.cc
 t _GLOBAL__sub_I_memmapped_file_system.pb.cc
 t _GLOBAL__sub_I_memmapped_file_system.pb_text.cc
 t _GLOBAL__sub_I_memmapped_file_system_writer.cc
 t _GLOBAL__sub_I_memory_types.cc
 t _GLOBAL__sub_I_message.cc
 t _GLOBAL__sub_I_message_differencer.cc
 t _GLOBAL__sub_I_message_lite.cc
 t _GLOBAL__sub_I_meta_graph.pb.cc
 t _GLOBAL__sub_I_mirror_pad_mode.cc
 t _GLOBAL__sub_I_multi_platform_manager.cc
 t _GLOBAL__sub_I_named_tensor.pb.cc
 t _GLOBAL__sub_I_node_builder.cc
 t _GLOBAL__sub_I_node_def.pb.cc
 t _GLOBAL__sub_I_node_def.pb_text.cc
 t _GLOBAL__sub_I_node_def_builder.cc
 t _GLOBAL__sub_I_node_def_util.cc
 t _GLOBAL__sub_I_nsync_panic.cc
 t _GLOBAL__sub_I_object_writer.cc
 t _GLOBAL__sub_I_once.cc
 t _GLOBAL__sub_I_op.cc
 t _GLOBAL__sub_I_op_def.pb.cc
 t _GLOBAL__sub_I_op_def.pb_text.cc
 t _GLOBAL__sub_I_op_def_builder.cc
 t _GLOBAL__sub_I_op_def_util.cc
 t _GLOBAL__sub_I_op_kernel.cc
 t _GLOBAL__sub_I_op_segment.cc
 t _GLOBAL__sub_I_op_types.cc
 t _GLOBAL__sub_I_optimization_registry.cc
 t _GLOBAL__sub_I_optimizer_cse.cc
 t _GLOBAL__sub_I_padding.cc
 t _GLOBAL__sub_I_parallel_concat_optimizer.cc
 t _GLOBAL__sub_I_parser.cc
 t _GLOBAL__sub_I_path.cc
 t _GLOBAL__sub_I_placer.cc
 t _GLOBAL__sub_I_platform.cc
 t _GLOBAL__sub_I_plugin_registry.cc
 t _GLOBAL__sub_I_pool_allocator.cc
 t _GLOBAL__sub_I_posix_file_system.cc
 t _GLOBAL__sub_I_printer.cc
 t _GLOBAL__sub_I_process_function_library_runtime.cc
 t _GLOBAL__sub_I_process_state.cc
 t _GLOBAL__sub_I_process_util.cc
 t _GLOBAL__sub_I_proto_text_util.cc
 t _GLOBAL__sub_I_proto_writer.cc
 t _GLOBAL__sub_I_protobuf.cc
 t _GLOBAL__sub_I_protobuf_util.cc
 t _GLOBAL__sub_I_protostream_objectsource.cc
 t _GLOBAL__sub_I_protostream_objectwriter.cc
 t _GLOBAL__sub_I_quantize_training.cc
 t _GLOBAL__sub_I_queue_runner.pb.cc
 t _GLOBAL__sub_I_queue_runner.pb_text.cc
 t _GLOBAL__sub_I_random_inputstream.cc
 t _GLOBAL__sub_I_reader_base.pb.cc
 t _GLOBAL__sub_I_reader_base.pb_text.cc
 t _GLOBAL__sub_I_record_reader.cc
 t _GLOBAL__sub_I_record_writer.cc
 t _GLOBAL__sub_I_reflection_ops.cc
 t _GLOBAL__sub_I_remote_fused_graph_execute_info.pb.cc
 t _GLOBAL__sub_I_remote_fused_graph_execute_info.pb_text.cc
 t _GLOBAL__sub_I_renamed_device.cc
 t _GLOBAL__sub_I_rendezvous.cc
 t _GLOBAL__sub_I_rendezvous_mgr.cc
 t _GLOBAL__sub_I_rendezvous_util.cc
 t _GLOBAL__sub_I_repeated_field.cc
 t _GLOBAL__sub_I_resource_handle.cc
 t _GLOBAL__sub_I_resource_handle.pb.cc
 t _GLOBAL__sub_I_resource_handle.pb_text.cc
 t _GLOBAL__sub_I_resource_mgr.cc
 t _GLOBAL__sub_I_rewriter_config.pb.cc
 t _GLOBAL__sub_I_rewriter_config.pb_text.cc
 t _GLOBAL__sub_I_sampler.cc
 t _GLOBAL__sub_I_saved_model.pb.cc
 t _GLOBAL__sub_I_saved_tensor_slice.pb.cc
 t _GLOBAL__sub_I_saved_tensor_slice.pb_text.cc
 t _GLOBAL__sub_I_saved_tensor_slice_util.cc
 t _GLOBAL__sub_I_saver.pb.cc
 t _GLOBAL__sub_I_saver.pb_text.cc
 t _GLOBAL__sub_I_scratch_allocator.cc
 t _GLOBAL__sub_I_service.cc
 t _GLOBAL__sub_I_session.cc
 t _GLOBAL__sub_I_session_factory.cc
 t _GLOBAL__sub_I_session_options.cc
 t _GLOBAL__sub_I_session_state.cc
 t _GLOBAL__sub_I_shape_inference.cc
 t _GLOBAL__sub_I_shape_refiner.cc
 t _GLOBAL__sub_I_snappy_inputbuffer.cc
 t _GLOBAL__sub_I_snappy_outputbuffer.cc
 t _GLOBAL__sub_I_source_context.pb.cc
 t _GLOBAL__sub_I_spinlock.cc
 t _GLOBAL__sub_I_stat_summarizer.cc
 t _GLOBAL__sub_I_stats_publisher_interface.cc
 t _GLOBAL__sub_I_status.cc
 t _GLOBAL__sub_I_statusor.cc
 t _GLOBAL__sub_I_step_stats.pb.cc
 t _GLOBAL__sub_I_step_stats.pb_text.cc
 t _GLOBAL__sub_I_step_stats_collector.cc
 t _GLOBAL__sub_I_stream.cc
 t _GLOBAL__sub_I_stream_executor_internal.cc
 t _GLOBAL__sub_I_stream_executor_pimpl.cc
 t _GLOBAL__sub_I_strided_slice_op.cc
 t _GLOBAL__sub_I_stringpiece.cc
 t _GLOBAL__sub_I_stringprintf.cc
 t _GLOBAL__sub_I_strtod.cc
 t _GLOBAL__sub_I_struct.pb.cc
 t _GLOBAL__sub_I_structurally_valid.cc
 t _GLOBAL__sub_I_strutil.cc
 t _GLOBAL__sub_I_subgraph.cc
 t _GLOBAL__sub_I_substitute.cc
 t _GLOBAL__sub_I_summary.pb.cc
 t _GLOBAL__sub_I_summary.pb_text.cc
 t _GLOBAL__sub_I_table.cc
 t _GLOBAL__sub_I_table_builder.cc
 t _GLOBAL__sub_I_temporary_device_memory.cc
 t _GLOBAL__sub_I_temporary_memory_manager.cc
 t _GLOBAL__sub_I_tensor.cc
 t _GLOBAL__sub_I_tensor.pb.cc
 t _GLOBAL__sub_I_tensor.pb_text.cc
 t _GLOBAL__sub_I_tensor_bundle.cc
 t _GLOBAL__sub_I_tensor_bundle.pb.cc
 t _GLOBAL__sub_I_tensor_bundle.pb_text.cc
 t _GLOBAL__sub_I_tensor_coding.cc
 t _GLOBAL__sub_I_tensor_description.pb.cc
 t _GLOBAL__sub_I_tensor_description.pb_text.cc
 t _GLOBAL__sub_I_tensor_format.cc
 t _GLOBAL__sub_I_tensor_id.cc
 t _GLOBAL__sub_I_tensor_reference.cc
 t _GLOBAL__sub_I_tensor_shape.cc
 t _GLOBAL__sub_I_tensor_shape.pb.cc
 t _GLOBAL__sub_I_tensor_shape.pb_text.cc
 t _GLOBAL__sub_I_tensor_slice.cc
 t _GLOBAL__sub_I_tensor_slice.pb.cc
 t _GLOBAL__sub_I_tensor_slice.pb_text.cc
 t _GLOBAL__sub_I_tensor_slice_reader.cc
 t _GLOBAL__sub_I_tensor_slice_reader_cache.cc
 t _GLOBAL__sub_I_tensor_slice_set.cc
 t _GLOBAL__sub_I_tensor_slice_writer.cc
 t _GLOBAL__sub_I_tensor_util.cc
 t _GLOBAL__sub_I_tensorflow_server.pb.cc
 t _GLOBAL__sub_I_test_log.pb.cc
 t _GLOBAL__sub_I_text_format.cc
 t _GLOBAL__sub_I_threadpool.cc
 t _GLOBAL__sub_I_threadpool_device.cc
 t _GLOBAL__sub_I_threadpool_device_factory.cc
 t _GLOBAL__sub_I_time.cc
 t _GLOBAL__sub_I_time_util.cc
 t _GLOBAL__sub_I_timer.cc
 t _GLOBAL__sub_I_timestamp.pb.cc
 t _GLOBAL__sub_I_tokenizer.cc
 t _GLOBAL__sub_I_tracing.cc
 t _GLOBAL__sub_I_tracking_allocator.cc
 t _GLOBAL__sub_I_two_level_iterator.cc
 t _GLOBAL__sub_I_type.pb.cc
 t _GLOBAL__sub_I_type_info.cc
 t _GLOBAL__sub_I_type_info_test_helper.cc
 t _GLOBAL__sub_I_type_resolver_util.cc
 t _GLOBAL__sub_I_types.cc
 t _GLOBAL__sub_I_types.pb.cc
 t _GLOBAL__sub_I_types.pb_text.cc
 t _GLOBAL__sub_I_unique_tensor_references.cc
 t _GLOBAL__sub_I_unknown_field_set.cc
 t _GLOBAL__sub_I_use_cudnn.cc
 t _GLOBAL__sub_I_util.cc
 t _GLOBAL__sub_I_utility.cc
 t _GLOBAL__sub_I_utils.cc
 t _GLOBAL__sub_I_validate.cc
 t _GLOBAL__sub_I_variable.pb.cc
 t _GLOBAL__sub_I_variable.pb_text.cc
 t _GLOBAL__sub_I_variant.cc
 t _GLOBAL__sub_I_variant_coding.cc
 t _GLOBAL__sub_I_variant_op_registry.cc
 t _GLOBAL__sub_I_variant_tensor_data.cc
 t _GLOBAL__sub_I_versions.cc
 t _GLOBAL__sub_I_versions.pb.cc
 t _GLOBAL__sub_I_versions.pb_text.cc
 t _GLOBAL__sub_I_wav_io.cc
 t _GLOBAL__sub_I_while_context.cc
 t _GLOBAL__sub_I_wire_format.cc
 t _GLOBAL__sub_I_wire_format_lite.cc
 t _GLOBAL__sub_I_work_sharder.cc
 t _GLOBAL__sub_I_wrappers.pb.cc
 t _GLOBAL__sub_I_zero_copy_stream.cc
 t _GLOBAL__sub_I_zero_copy_stream_impl.cc
 t _GLOBAL__sub_I_zero_copy_stream_impl_lite.cc
 t _GLOBAL__sub_I_zlib_inputstream.cc
 t _GLOBAL__sub_I_zlib_outputbuffer.cc
 t __cpu_indicator_init
 t __do_global_dtors_aux
 t __do_global_dtors_aux_fini_array_entry
 t __frame_dummy_init_array_entry
 t __get_cpuid_output
 t __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > std::__lower_bound<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, __gnu_cxx::__ops::_Iter_less_val>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, __gnu_cxx::__ops::_Iter_less_val) [clone .isra.127]
 t __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > std::__upper_bound<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, __gnu_cxx::__ops::_Val_less_iter) [clone .isra.128]
 t __pthread_atfork
 t __static_initialization_and_destruction_0(int, int) [clone .constprop.334]
 t __static_initialization_and_destruction_0(int, int) [clone .constprop.358]
 t __udivti3
 t absl::base_internal::GetTimeTscPair()
 t absl::base_internal::InitializeSystemInfo()
 t absl::base_internal::ReadLongFromFile(char const*, long*) [clone .constprop.1]
 t absl::base_internal::ReadMonotonicClockNanos()
 t access_virt_barray
 t access_virt_sarray
 t adler32_combine64.localalias.1
 t alloc_barray
 t alloc_large
 t alloc_sarray
 t alloc_small
 t arena_avail_insert.isra.28
 t arena_avail_remove.isra.29
 t arena_bin_lower_run.isra.24
 t arena_bin_malloc_hard
 t arena_chunk_alloc
 t arena_chunk_discard
 t arena_i_chunk_hooks_ctl
 t arena_i_decay_ctl
 t arena_i_decay_time_ctl
 t arena_i_dss_ctl
 t arena_i_index
 t arena_i_lg_dirty_mult_ctl
 t arena_i_purge
 t arena_i_purge_ctl
 t arena_i_reset_ctl
 t arena_purge_to_limit
 t arena_run_dalloc
 t arena_run_first_best_fit
 t arena_run_heap_remove
 t arena_run_heap_remove_first
 t arena_run_split_large_helper.constprop.42
 t arena_run_split_remove
 t arena_run_split_small
 t arena_run_trim_tail
 t arenas_bin_i_index
 t arenas_bin_i_nregs_ctl
 t arenas_bin_i_run_size_ctl
 t arenas_bin_i_size_ctl
 t arenas_decay_time_ctl
 t arenas_extend_ctl
 t arenas_hchunk_i_index
 t arenas_hchunk_i_size_ctl
 t arenas_initialized_ctl
 t arenas_lg_dirty_mult_ctl
 t arenas_lrun_i_index
 t arenas_lrun_i_size_ctl
 t arenas_narenas_ctl
 t arenas_nbins_ctl
 t arenas_nhbins_ctl
 t arenas_nhchunks_ctl
 t arenas_nlruns_ctl
 t arenas_page_ctl
 t arenas_quantum_ctl
 t arenas_tcache_max_ctl
 t arith_decode
 t arith_encode
 t arith_encode.constprop.1
 t arith_encode.constprop.2
 t atexit
 t bi_flush
 t bi_windup
 t bool snappy::InternalUncompress<snappy::SnappyDecompressionValidator>(snappy::Source*, snappy::SnappyDecompressionValidator*) [clone .constprop.71]
 t bool snappy::InternalUncompressAllTags<snappy::SnappyScatteredWriter<snappy::SnappySinkAllocator> >(snappy::SnappyDecompressor*, snappy::SnappyScatteredWriter<snappy::SnappySinkAllocator>*, unsigned int)
 t bool std::__lexicographical_compare_impl<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, __gnu_cxx::__ops::_Iter_less_iter>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, __gnu_cxx::__ops::_Iter_less_iter) [clone .isra.404] [clone .constprop.455]
 t bool tensorflow::(anonymous namespace)::CopyDataFromTensorSliceToTensorSlice<Eigen::QInt32, Eigen::QInt32>(tensorflow::TensorShape const&, tensorflow::TensorSlice const&, tensorflow::TensorSlice const&, Eigen::QInt32 const*, Eigen::QInt32*) [clone .constprop.610]
 t bool tensorflow::(anonymous namespace)::CopyDataFromTensorSliceToTensorSlice<Eigen::QInt8, Eigen::QInt8>(tensorflow::TensorShape const&, tensorflow::TensorSlice const&, tensorflow::TensorSlice const&, Eigen::QInt8 const*, Eigen::QInt8*) [clone .constprop.618]
 t bool tensorflow::(anonymous namespace)::CopyDataFromTensorSliceToTensorSlice<Eigen::QUInt8, Eigen::QUInt8>(tensorflow::TensorShape const&, tensorflow::TensorSlice const&, tensorflow::TensorSlice const&, Eigen::QUInt8 const*, Eigen::QUInt8*) [clone .constprop.614]
 t bool tensorflow::(anonymous namespace)::CopyDataFromTensorSliceToTensorSlice<bool, bool>(tensorflow::TensorShape const&, tensorflow::TensorSlice const&, tensorflow::TensorSlice const&, bool const*, bool*) [clone .constprop.606]
 t bool tensorflow::(anonymous namespace)::CopyDataFromTensorSliceToTensorSlice<short, short>(tensorflow::TensorShape const&, tensorflow::TensorSlice const&, tensorflow::TensorSlice const&, short const*, short*) [clone .constprop.587]
 t bool tensorflow::(anonymous namespace)::CopyDataFromTensorSliceToTensorSlice<signed char, signed char>(tensorflow::TensorShape const&, tensorflow::TensorSlice const&, tensorflow::TensorSlice const&, signed char const*, signed char*) [clone .constprop.591]
 t bool tensorflow::(anonymous namespace)::CopyDataFromTensorSliceToTensorSlice<std::complex<double>, std::complex<double> >(tensorflow::TensorShape const&, tensorflow::TensorSlice const&, tensorflow::TensorSlice const&, std::complex<double> const*, std::complex<double>*) [clone .constprop.599]
 t bool tensorflow::(anonymous namespace)::CopyDataFromTensorSliceToTensorSlice<unsigned char, unsigned char>(tensorflow::TensorShape const&, tensorflow::TensorSlice const&, tensorflow::TensorSlice const&, unsigned char const*, unsigned char*) [clone .constprop.583]
 t bool tensorflow::example::(anonymous namespace)::parsed::Feature::ParseBytesList<tensorflow::gtl::InlinedVector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, 4> >(tensorflow::gtl::InlinedVector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, 4>*)
 t bool tensorflow::example::(anonymous namespace)::parsed::Feature::ParseFloatList<tensorflow::gtl::InlinedVector<float, 4> >(tensorflow::gtl::InlinedVector<float, 4>*)
 t bool tensorflow::example::(anonymous namespace)::parsed::Feature::ParseInt64List<tensorflow::gtl::InlinedVector<long long, 4> >(tensorflow::gtl::InlinedVector<long long, 4>*)
 t build_tree
 t build_ycc_rgb_table
 t chunk_alloc_default
 t chunk_commit_default
 t chunk_dalloc_default
 t chunk_decommit_default
 t chunk_merge_default
 t chunk_purge_default
 t chunk_record
 t chunk_recycle
 t chunk_split_default
 t chunks_rtree_node_alloc
 t cmyk_ycck_convert
 t color_quantize
 t color_quantize3
 t compress_block
 t compress_data
 t compress_first_pass
 t compress_output
 t config_cache_oblivious_ctl
 t config_debug_ctl
 t config_fill_ctl
 t config_lazy_lock_ctl
 t config_malloc_conf_ctl
 t config_munmap_ctl
 t config_prof_ctl
 t config_prof_libgcc_ctl
 t config_prof_libunwind_ctl
 t config_stats_ctl
 t config_tcache_ctl
 t config_tls_ctl
 t config_utrace_ctl
 t config_valgrind_ctl
 t config_xmalloc_ctl
 t consume_data
 t consume_markers
 t convsamp
 t convsamp_float
 t crc32_combine_
 t create_colorindex
 t ctl_grow
 t ctl_init
 t ctl_lookup
 t ctl_refresh
 t decode_mcu
 t decode_mcu_AC_first
 t decode_mcu_AC_refine
 t decode_mcu_DC_first
 t decode_mcu_DC_refine
 t decompress_data
 t decompress_onepass
 t decompress_smooth_data
 t deflate_fast
 t deflate_slow
 t deflate_stored
 t deregister_tm_clones
 t double tensorflow::(anonymous namespace)::locale_independent_strtonum<double>(char const*, char const**)
 t dummy_consume_data
 t emit_bits
 t emit_dht
 t emit_dqt
 t emit_eobrun
 t emit_message
 t emit_restart
 t emit_sof
 t empty_mem_output_buffer
 t empty_output_buffer
 t encode_mcu
 t encode_mcu_AC_first
 t encode_mcu_AC_refine
 t encode_mcu_DC_first
 t encode_mcu_DC_refine
 t encode_mcu_gather
 t encode_mcu_huff
 t epoch_ctl
 t error_exit
 t examine_app0
 t examine_app14.part.0
 t fill_input_buffer
 t fill_inverse_cmap
 t fill_mem_input_buffer
 t fill_window
 t finish_input_pass
 t finish_output_pass
 t finish_pass
 t finish_pass1
 t finish_pass2
 t finish_pass_1_quant
 t finish_pass_gather
 t finish_pass_gather_phuff
 t finish_pass_huff
 t finish_pass_master
 t finish_pass_phuff
 t float tensorflow::(anonymous namespace)::locale_independent_strtonum<float>(char const*, char const**)
 t flush_bits
 t flush_pending
 t format_message
 t forward_DCT
 t forward_DCT_float
 t frame_dummy
 t free_pool
 t fullsize_downsample
 t fullsize_smooth_downsample
 t fullsize_upsample
 t get_available_features
 t get_dht
 t get_interesting_appn
 t get_sof
 t gray_rgb565D_convert
 t gray_rgb565_convert
 t gray_rgb_convert
 t grayscale_convert
 t gz_avail
 t gz_comp
 t gz_decomp
 t gz_fetch
 t gz_init
 t gz_load
 t gz_look
 t gz_open
 t gz_skip
 t gz_zero
 t gzopen64.localalias.1
 t h1v2_fancy_upsample
 t h2v1_downsample
 t h2v1_fancy_upsample
 t h2v1_merged_upsample
 t h2v1_merged_upsample_565
 t h2v1_merged_upsample_565D
 t h2v1_upsample
 t h2v2_downsample
 t h2v2_fancy_upsample
 t h2v2_merged_upsample
 t h2v2_merged_upsample_565
 t h2v2_merged_upsample_565D
 t h2v2_smooth_downsample
 t h2v2_upsample
 t huge_ralloc_no_move_expand
 t init_destination
 t init_error_limit
 t init_mem_destination
 t init_mem_source
 t init_source
 t int tensorflow::GetTensorDimIndex<2>(tensorflow::TensorFormat, char) [clone .part.190]
 t int tensorflow::GetTensorDimIndex<3>(tensorflow::TensorFormat, char) [clone .part.189]
 t int* std::__unique<int*, __gnu_cxx::__ops::_Iter_equal_to_iter>(int*, int*, __gnu_cxx::__ops::_Iter_equal_to_iter) [clone .isra.131]
 t int_downsample
 t int_upsample
 t je_arena_choose.part.14
 t je_size2index_compute
 t jemalloc_constructor
 t jsimd_convsamp_float_sse2.convloop
 t jsimd_convsamp_sse2.convloop
 t jsimd_extbgr_gray_convert_sse2.column_ld1
 t jsimd_extbgr_gray_convert_sse2.column_ld16
 t jsimd_extbgr_gray_convert_sse2.column_ld2
 t jsimd_extbgr_gray_convert_sse2.column_ld32
 t jsimd_extbgr_gray_convert_sse2.column_ld4
 t jsimd_extbgr_gray_convert_sse2.column_ld8
 t jsimd_extbgr_gray_convert_sse2.columnloop
 t jsimd_extbgr_gray_convert_sse2.return
 t jsimd_extbgr_gray_convert_sse2.rgb_gray_cnv
 t jsimd_extbgr_gray_convert_sse2.rowloop
 t jsimd_extbgr_ycc_convert_sse2.column_ld1
 t jsimd_extbgr_ycc_convert_sse2.column_ld16
 t jsimd_extbgr_ycc_convert_sse2.column_ld2
 t jsimd_extbgr_ycc_convert_sse2.column_ld32
 t jsimd_extbgr_ycc_convert_sse2.column_ld4
 t jsimd_extbgr_ycc_convert_sse2.column_ld8
 t jsimd_extbgr_ycc_convert_sse2.columnloop
 t jsimd_extbgr_ycc_convert_sse2.return
 t jsimd_extbgr_ycc_convert_sse2.rgb_ycc_cnv
 t jsimd_extbgr_ycc_convert_sse2.rowloop
 t jsimd_extbgrx_gray_convert_sse2.column_ld1
 t jsimd_extbgrx_gray_convert_sse2.column_ld2
 t jsimd_extbgrx_gray_convert_sse2.column_ld4
 t jsimd_extbgrx_gray_convert_sse2.column_ld8
 t jsimd_extbgrx_gray_convert_sse2.columnloop
 t jsimd_extbgrx_gray_convert_sse2.return
 t jsimd_extbgrx_gray_convert_sse2.rgb_gray_cnv
 t jsimd_extbgrx_gray_convert_sse2.rowloop
 t jsimd_extbgrx_ycc_convert_sse2.column_ld1
 t jsimd_extbgrx_ycc_convert_sse2.column_ld2
 t jsimd_extbgrx_ycc_convert_sse2.column_ld4
 t jsimd_extbgrx_ycc_convert_sse2.column_ld8
 t jsimd_extbgrx_ycc_convert_sse2.columnloop
 t jsimd_extbgrx_ycc_convert_sse2.return
 t jsimd_extbgrx_ycc_convert_sse2.rgb_ycc_cnv
 t jsimd_extbgrx_ycc_convert_sse2.rowloop
 t jsimd_extrgb_gray_convert_sse2.column_ld1
 t jsimd_extrgb_gray_convert_sse2.column_ld16
 t jsimd_extrgb_gray_convert_sse2.column_ld2
 t jsimd_extrgb_gray_convert_sse2.column_ld32
 t jsimd_extrgb_gray_convert_sse2.column_ld4
 t jsimd_extrgb_gray_convert_sse2.column_ld8
 t jsimd_extrgb_gray_convert_sse2.columnloop
 t jsimd_extrgb_gray_convert_sse2.return
 t jsimd_extrgb_gray_convert_sse2.rgb_gray_cnv
 t jsimd_extrgb_gray_convert_sse2.rowloop
 t jsimd_extrgb_ycc_convert_sse2.column_ld1
 t jsimd_extrgb_ycc_convert_sse2.column_ld16
 t jsimd_extrgb_ycc_convert_sse2.column_ld2
 t jsimd_extrgb_ycc_convert_sse2.column_ld32
 t jsimd_extrgb_ycc_convert_sse2.column_ld4
 t jsimd_extrgb_ycc_convert_sse2.column_ld8
 t jsimd_extrgb_ycc_convert_sse2.columnloop
 t jsimd_extrgb_ycc_convert_sse2.return
 t jsimd_extrgb_ycc_convert_sse2.rgb_ycc_cnv
 t jsimd_extrgb_ycc_convert_sse2.rowloop
 t jsimd_extrgbx_gray_convert_sse2.column_ld1
 t jsimd_extrgbx_gray_convert_sse2.column_ld2
 t jsimd_extrgbx_gray_convert_sse2.column_ld4
 t jsimd_extrgbx_gray_convert_sse2.column_ld8
 t jsimd_extrgbx_gray_convert_sse2.columnloop
 t jsimd_extrgbx_gray_convert_sse2.return
 t jsimd_extrgbx_gray_convert_sse2.rgb_gray_cnv
 t jsimd_extrgbx_gray_convert_sse2.rowloop
 t jsimd_extrgbx_ycc_convert_sse2.column_ld1
 t jsimd_extrgbx_ycc_convert_sse2.column_ld2
 t jsimd_extrgbx_ycc_convert_sse2.column_ld4
 t jsimd_extrgbx_ycc_convert_sse2.column_ld8
 t jsimd_extrgbx_ycc_convert_sse2.columnloop
 t jsimd_extrgbx_ycc_convert_sse2.return
 t jsimd_extrgbx_ycc_convert_sse2.rgb_ycc_cnv
 t jsimd_extrgbx_ycc_convert_sse2.rowloop
 t jsimd_extxbgr_gray_convert_sse2.column_ld1
 t jsimd_extxbgr_gray_convert_sse2.column_ld2
 t jsimd_extxbgr_gray_convert_sse2.column_ld4
 t jsimd_extxbgr_gray_convert_sse2.column_ld8
 t jsimd_extxbgr_gray_convert_sse2.columnloop
 t jsimd_extxbgr_gray_convert_sse2.return
 t jsimd_extxbgr_gray_convert_sse2.rgb_gray_cnv
 t jsimd_extxbgr_gray_convert_sse2.rowloop
 t jsimd_extxbgr_ycc_convert_sse2.column_ld1
 t jsimd_extxbgr_ycc_convert_sse2.column_ld2
 t jsimd_extxbgr_ycc_convert_sse2.column_ld4
 t jsimd_extxbgr_ycc_convert_sse2.column_ld8
 t jsimd_extxbgr_ycc_convert_sse2.columnloop
 t jsimd_extxbgr_ycc_convert_sse2.return
 t jsimd_extxbgr_ycc_convert_sse2.rgb_ycc_cnv
 t jsimd_extxbgr_ycc_convert_sse2.rowloop
 t jsimd_extxrgb_gray_convert_sse2.column_ld1
 t jsimd_extxrgb_gray_convert_sse2.column_ld2
 t jsimd_extxrgb_gray_convert_sse2.column_ld4
 t jsimd_extxrgb_gray_convert_sse2.column_ld8
 t jsimd_extxrgb_gray_convert_sse2.columnloop
 t jsimd_extxrgb_gray_convert_sse2.return
 t jsimd_extxrgb_gray_convert_sse2.rgb_gray_cnv
 t jsimd_extxrgb_gray_convert_sse2.rowloop
 t jsimd_extxrgb_ycc_convert_sse2.column_ld1
 t jsimd_extxrgb_ycc_convert_sse2.column_ld2
 t jsimd_extxrgb_ycc_convert_sse2.column_ld4
 t jsimd_extxrgb_ycc_convert_sse2.column_ld8
 t jsimd_extxrgb_ycc_convert_sse2.columnloop
 t jsimd_extxrgb_ycc_convert_sse2.return
 t jsimd_extxrgb_ycc_convert_sse2.rgb_ycc_cnv
 t jsimd_extxrgb_ycc_convert_sse2.rowloop
 t jsimd_fdct_float_sse.columnloop
 t jsimd_fdct_float_sse.rowloop
 t jsimd_h2v1_downsample_sse2.columnloop
 t jsimd_h2v1_downsample_sse2.columnloop_r8
 t jsimd_h2v1_downsample_sse2.downsample
 t jsimd_h2v1_downsample_sse2.expand_end
 t jsimd_h2v1_downsample_sse2.expandloop
 t jsimd_h2v1_downsample_sse2.return
 t jsimd_h2v1_downsample_sse2.rowloop
 t jsimd_h2v1_extbgr_merged_upsample_sse2.Yloop_1st
 t jsimd_h2v1_extbgr_merged_upsample_sse2.Yloop_2nd
 t jsimd_h2v1_extbgr_merged_upsample_sse2.column_st1
 t jsimd_h2v1_extbgr_merged_upsample_sse2.column_st15
 t jsimd_h2v1_extbgr_merged_upsample_sse2.column_st16
 t jsimd_h2v1_extbgr_merged_upsample_sse2.column_st3
 t jsimd_h2v1_extbgr_merged_upsample_sse2.column_st32
 t jsimd_h2v1_extbgr_merged_upsample_sse2.column_st7
 t jsimd_h2v1_extbgr_merged_upsample_sse2.columnloop
 t jsimd_h2v1_extbgr_merged_upsample_sse2.endcolumn
 t jsimd_h2v1_extbgr_merged_upsample_sse2.out0
 t jsimd_h2v1_extbgr_merged_upsample_sse2.out1
 t jsimd_h2v1_extbgr_merged_upsample_sse2.return
 t jsimd_h2v1_extbgrx_merged_upsample_sse2.Yloop_1st
 t jsimd_h2v1_extbgrx_merged_upsample_sse2.Yloop_2nd
 t jsimd_h2v1_extbgrx_merged_upsample_sse2.column_st15
 t jsimd_h2v1_extbgrx_merged_upsample_sse2.column_st16
 t jsimd_h2v1_extbgrx_merged_upsample_sse2.column_st32
 t jsimd_h2v1_extbgrx_merged_upsample_sse2.column_st7
 t jsimd_h2v1_extbgrx_merged_upsample_sse2.columnloop
 t jsimd_h2v1_extbgrx_merged_upsample_sse2.endcolumn
 t jsimd_h2v1_extbgrx_merged_upsample_sse2.out0
 t jsimd_h2v1_extbgrx_merged_upsample_sse2.out1
 t jsimd_h2v1_extbgrx_merged_upsample_sse2.return
 t jsimd_h2v1_extrgb_merged_upsample_sse2.Yloop_1st
 t jsimd_h2v1_extrgb_merged_upsample_sse2.Yloop_2nd
 t jsimd_h2v1_extrgb_merged_upsample_sse2.column_st1
 t jsimd_h2v1_extrgb_merged_upsample_sse2.column_st15
 t jsimd_h2v1_extrgb_merged_upsample_sse2.column_st16
 t jsimd_h2v1_extrgb_merged_upsample_sse2.column_st3
 t jsimd_h2v1_extrgb_merged_upsample_sse2.column_st32
 t jsimd_h2v1_extrgb_merged_upsample_sse2.column_st7
 t jsimd_h2v1_extrgb_merged_upsample_sse2.columnloop
 t jsimd_h2v1_extrgb_merged_upsample_sse2.endcolumn
 t jsimd_h2v1_extrgb_merged_upsample_sse2.out0
 t jsimd_h2v1_extrgb_merged_upsample_sse2.out1
 t jsimd_h2v1_extrgb_merged_upsample_sse2.return
 t jsimd_h2v1_extrgbx_merged_upsample_sse2.Yloop_1st
 t jsimd_h2v1_extrgbx_merged_upsample_sse2.Yloop_2nd
 t jsimd_h2v1_extrgbx_merged_upsample_sse2.column_st15
 t jsimd_h2v1_extrgbx_merged_upsample_sse2.column_st16
 t jsimd_h2v1_extrgbx_merged_upsample_sse2.column_st32
 t jsimd_h2v1_extrgbx_merged_upsample_sse2.column_st7
 t jsimd_h2v1_extrgbx_merged_upsample_sse2.columnloop
 t jsimd_h2v1_extrgbx_merged_upsample_sse2.endcolumn
 t jsimd_h2v1_extrgbx_merged_upsample_sse2.out0
 t jsimd_h2v1_extrgbx_merged_upsample_sse2.out1
 t jsimd_h2v1_extrgbx_merged_upsample_sse2.return
 t jsimd_h2v1_extxbgr_merged_upsample_sse2.Yloop_1st
 t jsimd_h2v1_extxbgr_merged_upsample_sse2.Yloop_2nd
 t jsimd_h2v1_extxbgr_merged_upsample_sse2.column_st15
 t jsimd_h2v1_extxbgr_merged_upsample_sse2.column_st16
 t jsimd_h2v1_extxbgr_merged_upsample_sse2.column_st32
 t jsimd_h2v1_extxbgr_merged_upsample_sse2.column_st7
 t jsimd_h2v1_extxbgr_merged_upsample_sse2.columnloop
 t jsimd_h2v1_extxbgr_merged_upsample_sse2.endcolumn
 t jsimd_h2v1_extxbgr_merged_upsample_sse2.out0
 t jsimd_h2v1_extxbgr_merged_upsample_sse2.out1
 t jsimd_h2v1_extxbgr_merged_upsample_sse2.return
 t jsimd_h2v1_extxrgb_merged_upsample_sse2.Yloop_1st
 t jsimd_h2v1_extxrgb_merged_upsample_sse2.Yloop_2nd
 t jsimd_h2v1_extxrgb_merged_upsample_sse2.column_st15
 t jsimd_h2v1_extxrgb_merged_upsample_sse2.column_st16
 t jsimd_h2v1_extxrgb_merged_upsample_sse2.column_st32
 t jsimd_h2v1_extxrgb_merged_upsample_sse2.column_st7
 t jsimd_h2v1_extxrgb_merged_upsample_sse2.columnloop
 t jsimd_h2v1_extxrgb_merged_upsample_sse2.endcolumn
 t jsimd_h2v1_extxrgb_merged_upsample_sse2.out0
 t jsimd_h2v1_extxrgb_merged_upsample_sse2.out1
 t jsimd_h2v1_extxrgb_merged_upsample_sse2.return
 t jsimd_h2v1_fancy_upsample_sse2.columnloop
 t jsimd_h2v1_fancy_upsample_sse2.columnloop_last
 t jsimd_h2v1_fancy_upsample_sse2.return
 t jsimd_h2v1_fancy_upsample_sse2.rowloop
 t jsimd_h2v1_fancy_upsample_sse2.skip
 t jsimd_h2v1_fancy_upsample_sse2.upsample
 t jsimd_h2v1_merged_upsample_sse2.Yloop_1st
 t jsimd_h2v1_merged_upsample_sse2.Yloop_2nd
 t jsimd_h2v1_merged_upsample_sse2.column_st1
 t jsimd_h2v1_merged_upsample_sse2.column_st15
 t jsimd_h2v1_merged_upsample_sse2.column_st16
 t jsimd_h2v1_merged_upsample_sse2.column_st3
 t jsimd_h2v1_merged_upsample_sse2.column_st32
 t jsimd_h2v1_merged_upsample_sse2.column_st7
 t jsimd_h2v1_merged_upsample_sse2.columnloop
 t jsimd_h2v1_merged_upsample_sse2.endcolumn
 t jsimd_h2v1_merged_upsample_sse2.out0
 t jsimd_h2v1_merged_upsample_sse2.out1
 t jsimd_h2v1_merged_upsample_sse2.return
 t jsimd_h2v1_upsample_sse2.columnloop
 t jsimd_h2v1_upsample_sse2.nextrow
 t jsimd_h2v1_upsample_sse2.return
 t jsimd_h2v1_upsample_sse2.rowloop
 t jsimd_h2v2_downsample_sse2.columnloop
 t jsimd_h2v2_downsample_sse2.columnloop_r8
 t jsimd_h2v2_downsample_sse2.downsample
 t jsimd_h2v2_downsample_sse2.expand_end
 t jsimd_h2v2_downsample_sse2.expandloop
 t jsimd_h2v2_downsample_sse2.return
 t jsimd_h2v2_downsample_sse2.rowloop
 t jsimd_h2v2_fancy_upsample_sse2.columnloop
 t jsimd_h2v2_fancy_upsample_sse2.columnloop_last
 t jsimd_h2v2_fancy_upsample_sse2.return
 t jsimd_h2v2_fancy_upsample_sse2.rowloop
 t jsimd_h2v2_fancy_upsample_sse2.skip
 t jsimd_h2v2_fancy_upsample_sse2.upsample
 t jsimd_h2v2_upsample_sse2.columnloop
 t jsimd_h2v2_upsample_sse2.nextrow
 t jsimd_h2v2_upsample_sse2.return
 t jsimd_h2v2_upsample_sse2.rowloop
 t jsimd_huff_encode_one_block_sse2.BLOOP
 t jsimd_huff_encode_one_block_sse2.BRLOOP
 t jsimd_huff_encode_one_block_sse2.EFN
 t jsimd_huff_encode_one_block_sse2.ELOOP
 t jsimd_huff_encode_one_block_sse2.ERLOOP
 t jsimd_idct_4x4_sse2.columnDCT
 t jsimd_idct_4x4_sse2.column_end
 t jsimd_idct_float_sse2.columnDCT
 t jsimd_idct_float_sse2.columnloop
 t jsimd_idct_float_sse2.nextcolumn
 t jsimd_idct_float_sse2.rowloop
 t jsimd_idct_ifast_sse2.columnDCT
 t jsimd_idct_ifast_sse2.column_end
 t jsimd_idct_islow_sse2.columnDCT
 t jsimd_idct_islow_sse2.column_end
 t jsimd_quantize_float_sse2.quantloop
 t jsimd_quantize_sse2.quantloop
 t jsimd_rgb_gray_convert_sse2.column_ld1
 t jsimd_rgb_gray_convert_sse2.column_ld16
 t jsimd_rgb_gray_convert_sse2.column_ld2
 t jsimd_rgb_gray_convert_sse2.column_ld32
 t jsimd_rgb_gray_convert_sse2.column_ld4
 t jsimd_rgb_gray_convert_sse2.column_ld8
 t jsimd_rgb_gray_convert_sse2.columnloop
 t jsimd_rgb_gray_convert_sse2.return
 t jsimd_rgb_gray_convert_sse2.rgb_gray_cnv
 t jsimd_rgb_gray_convert_sse2.rowloop
 t jsimd_rgb_ycc_convert_sse2.column_ld1
 t jsimd_rgb_ycc_convert_sse2.column_ld16
 t jsimd_rgb_ycc_convert_sse2.column_ld2
 t jsimd_rgb_ycc_convert_sse2.column_ld32
 t jsimd_rgb_ycc_convert_sse2.column_ld4
 t jsimd_rgb_ycc_convert_sse2.column_ld8
 t jsimd_rgb_ycc_convert_sse2.columnloop
 t jsimd_rgb_ycc_convert_sse2.return
 t jsimd_rgb_ycc_convert_sse2.rgb_ycc_cnv
 t jsimd_rgb_ycc_convert_sse2.rowloop
 t jsimd_ycc_extbgr_convert_sse2.column_st1
 t jsimd_ycc_extbgr_convert_sse2.column_st15
 t jsimd_ycc_extbgr_convert_sse2.column_st16
 t jsimd_ycc_extbgr_convert_sse2.column_st3
 t jsimd_ycc_extbgr_convert_sse2.column_st32
 t jsimd_ycc_extbgr_convert_sse2.column_st7
 t jsimd_ycc_extbgr_convert_sse2.columnloop
 t jsimd_ycc_extbgr_convert_sse2.nextrow
 t jsimd_ycc_extbgr_convert_sse2.out0
 t jsimd_ycc_extbgr_convert_sse2.out1
 t jsimd_ycc_extbgr_convert_sse2.return
 t jsimd_ycc_extbgr_convert_sse2.rowloop
 t jsimd_ycc_extbgrx_convert_sse2.column_st15
 t jsimd_ycc_extbgrx_convert_sse2.column_st16
 t jsimd_ycc_extbgrx_convert_sse2.column_st32
 t jsimd_ycc_extbgrx_convert_sse2.column_st7
 t jsimd_ycc_extbgrx_convert_sse2.columnloop
 t jsimd_ycc_extbgrx_convert_sse2.nextrow
 t jsimd_ycc_extbgrx_convert_sse2.out0
 t jsimd_ycc_extbgrx_convert_sse2.out1
 t jsimd_ycc_extbgrx_convert_sse2.return
 t jsimd_ycc_extbgrx_convert_sse2.rowloop
 t jsimd_ycc_extrgb_convert_sse2.column_st1
 t jsimd_ycc_extrgb_convert_sse2.column_st15
 t jsimd_ycc_extrgb_convert_sse2.column_st16
 t jsimd_ycc_extrgb_convert_sse2.column_st3
 t jsimd_ycc_extrgb_convert_sse2.column_st32
 t jsimd_ycc_extrgb_convert_sse2.column_st7
 t jsimd_ycc_extrgb_convert_sse2.columnloop
 t jsimd_ycc_extrgb_convert_sse2.nextrow
 t jsimd_ycc_extrgb_convert_sse2.out0
 t jsimd_ycc_extrgb_convert_sse2.out1
 t jsimd_ycc_extrgb_convert_sse2.return
 t jsimd_ycc_extrgb_convert_sse2.rowloop
 t jsimd_ycc_extrgbx_convert_sse2.column_st15
 t jsimd_ycc_extrgbx_convert_sse2.column_st16
 t jsimd_ycc_extrgbx_convert_sse2.column_st32
 t jsimd_ycc_extrgbx_convert_sse2.column_st7
 t jsimd_ycc_extrgbx_convert_sse2.columnloop
 t jsimd_ycc_extrgbx_convert_sse2.nextrow
 t jsimd_ycc_extrgbx_convert_sse2.out0
 t jsimd_ycc_extrgbx_convert_sse2.out1
 t jsimd_ycc_extrgbx_convert_sse2.return
 t jsimd_ycc_extrgbx_convert_sse2.rowloop
 t jsimd_ycc_extxbgr_convert_sse2.column_st15
 t jsimd_ycc_extxbgr_convert_sse2.column_st16
 t jsimd_ycc_extxbgr_convert_sse2.column_st32
 t jsimd_ycc_extxbgr_convert_sse2.column_st7
 t jsimd_ycc_extxbgr_convert_sse2.columnloop
 t jsimd_ycc_extxbgr_convert_sse2.nextrow
 t jsimd_ycc_extxbgr_convert_sse2.out0
 t jsimd_ycc_extxbgr_convert_sse2.out1
 t jsimd_ycc_extxbgr_convert_sse2.return
 t jsimd_ycc_extxbgr_convert_sse2.rowloop
 t jsimd_ycc_extxrgb_convert_sse2.column_st15
 t jsimd_ycc_extxrgb_convert_sse2.column_st16
 t jsimd_ycc_extxrgb_convert_sse2.column_st32
 t jsimd_ycc_extxrgb_convert_sse2.column_st7
 t jsimd_ycc_extxrgb_convert_sse2.columnloop
 t jsimd_ycc_extxrgb_convert_sse2.nextrow
 t jsimd_ycc_extxrgb_convert_sse2.out0
 t jsimd_ycc_extxrgb_convert_sse2.out1
 t jsimd_ycc_extxrgb_convert_sse2.return
 t jsimd_ycc_extxrgb_convert_sse2.rowloop
 t jsimd_ycc_rgb_convert_sse2.column_st1
 t jsimd_ycc_rgb_convert_sse2.column_st15
 t jsimd_ycc_rgb_convert_sse2.column_st16
 t jsimd_ycc_rgb_convert_sse2.column_st3
 t jsimd_ycc_rgb_convert_sse2.column_st32
 t jsimd_ycc_rgb_convert_sse2.column_st7
 t jsimd_ycc_rgb_convert_sse2.columnloop
 t jsimd_ycc_rgb_convert_sse2.nextrow
 t jsimd_ycc_rgb_convert_sse2.out0
 t jsimd_ycc_rgb_convert_sse2.out1
 t jsimd_ycc_rgb_convert_sse2.return
 t jsimd_ycc_rgb_convert_sse2.rowloop
 t lg_prof_sample_ctl
 t long long*& tensorflow::internal::CheckNotNull<long long*&>(char const*, int, char const*, long long*&) [clone .part.107] [clone .constprop.109]
 t longest_match
 t malloc_conf_init
 t malloc_init_hard
 t malloc_init_hard_a0_locked
 t merged_1v_upsample
 t merged_2v_upsample
 t new_color_map_1_quant
 t new_color_map_2_quant
 t next_marker
 t noop_convert
 t noop_upsample
 t nsync::(anonymous namespace)::per_thread::~per_thread()
 t nsync::counter_dequeue(void*, nsync::nsync_waiter_s*)
 t nsync::counter_enqueue(void*, nsync::nsync_waiter_s*)
 t nsync::counter_ready_time(void*, nsync::nsync_waiter_s*)
 t nsync::cv_dequeue(void*, nsync::nsync_waiter_s*)
 t nsync::cv_enqueue(void*, nsync::nsync_waiter_s*)
 t nsync::cv_ready_time(void*, nsync::nsync_waiter_s*)
 t nsync::emit_c(nsync::emit_buf*, int)
 t nsync::emit_cv_state(nsync::emit_buf*, nsync::nsync_cv_s_*, int, int) [clone .constprop.0]
 t nsync::emit_mu_state(nsync::emit_buf*, nsync::nsync_mu_s_*, int, int) [clone .constprop.1]
 t nsync::emit_print(nsync::emit_buf*, char const*, ...)
 t nsync::emit_waiters(nsync::emit_buf*, nsync::nsync_dll_element_s_*)
 t nsync::emit_word(nsync::emit_buf*, nsync::bit_name const*, unsigned int)
 t nsync::mu_release_spinlock(nsync::nsync_mu_s_*)
 t nsync::no_children(void const*)
 t nsync::note_dequeue(void*, nsync::nsync_waiter_s*)
 t nsync::note_enqueue(void*, nsync::nsync_waiter_s*)
 t nsync::note_notify_child(nsync::nsync_note_s_*, nsync::nsync_note_s_*)
 t nsync::note_ready_time(void*, nsync::nsync_waiter_s*)
 t nsync::notify(nsync::nsync_note_s_*)
 t nsync::nsync_run_once_impl(std::atomic<unsigned int>*, nsync::once_sync_s*, void (*)(), void (*)(void*), void*)
 t nsync::void_mu_lock(void*)
 t nsync::void_mu_unlock(void*)
 t nsync::waiter_destroy(void*)
 t nsync::wake_waiters(nsync::nsync_dll_element_s_*, int)
 t null_convert
 t null_method
 t opt_abort_ctl
 t opt_decay_time_ctl
 t opt_dss_ctl
 t opt_junk_ctl
 t opt_lg_chunk_ctl
 t opt_lg_dirty_mult_ctl
 t opt_lg_prof_interval_ctl
 t opt_lg_prof_sample_ctl
 t opt_lg_tcache_max_ctl
 t opt_narenas_ctl
 t opt_prof_accum_ctl
 t opt_prof_active_ctl
 t opt_prof_ctl
 t opt_prof_final_ctl
 t opt_prof_gdump_ctl
 t opt_prof_leak_ctl
 t opt_prof_prefix_ctl
 t opt_prof_thread_active_init_ctl
 t opt_purge_ctl
 t opt_quarantine_ctl
 t opt_redzone_ctl
 t opt_stats_print_ctl
 t opt_tcache_ctl
 t opt_utrace_ctl
 t opt_xmalloc_ctl
 t opt_zero_ctl
 t output_message
 t output_pass_setup
 t pass2_fs_dither
 t pass2_no_dither
 t pass_startup
 t per_scan_setup
 t perftools::gputools::(anonymous namespace)::BlockOnThreadExecutor(tensorflow::thread::ThreadPool*)
 t perftools::gputools::(anonymous namespace)::CallStr(char const*, perftools::gputools::Stream*, std::vector<std::pair<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >)
 t perftools::gputools::(anonymous namespace)::StackTraceIfVLOG10()
 t perftools::gputools::(anonymous namespace)::StreamExecutorImplementationFromPlatformKind(perftools::gputools::PlatformKind, perftools::gputools::PluginConfig const&)
 t perftools::gputools::(anonymous namespace)::ToVlogString(int)
 t perftools::gputools::(anonymous namespace)::ToVlogString(long long)
 t perftools::gputools::(anonymous namespace)::ToVlogString(perftools::gputools::dnn::DataType)
 t perftools::gputools::(anonymous namespace)::ToVlogString(unsigned long long)
 t perftools::gputools::(anonymous namespace)::ToVlogString(void const*)
 t perftools::gputools::GetPluginRegistryMutex()
 t perftools::gputools::MultiKernelLoaderSpec::AddCudaCompressedPtxInMemory(std::initializer_list<std::tuple<int, int, tensorflow::StringPiece> >, tensorflow::StringPiece) [clone .part.67]
 t perftools::gputools::MultiKernelLoaderSpec::AddCudaPtxInMemory(std::initializer_list<std::tuple<int, int, tensorflow::StringPiece> >, tensorflow::StringPiece) [clone .part.66]
 t perftools::gputools::Stream::parent() const [clone .isra.108] [clone .part.109]
 t perftools::gputools::dnn::DataLayoutString[abi:cxx11](perftools::gputools::dnn::DataLayout) [clone .part.85]
 t perftools::gputools::dnn::FilterLayoutString[abi:cxx11](perftools::gputools::dnn::FilterLayout) [clone .part.86]
 t perftools::gputools::host::HostExecutor::CreateStreamDependency(perftools::gputools::Stream*, perftools::gputools::Stream*)::{lambda()#1}::operator()() const
 t perftools::gputools::host::InitializeHostPlatform()
 t perftools::gputools::internal::GetRpathMutex()
 t png_format_buffer
 t png_inflate
 t png_set_palette_to_rgb.localalias.1
 t png_text_compress.part.0
 t png_write_compressed_data_out
 t post_process_1pass
 t post_process_2pass
 t post_process_prepass
 t pqdownheap
 t pre_process_context
 t pre_process_data
 t prepare_for_output_pass
 t prepare_for_pass
 t prescan_quantize
 t process_data_context_main
 t process_data_crank_post
 t process_data_simple_main
 t process_restart
 t prof_active_ctl
 t prof_dump_ctl
 t prof_gdump_ctl
 t prof_interval_ctl
 t prof_reset_ctl
 t prof_tdata_destroy_locked
 t prof_tdata_reset_iter
 t prof_thread_active_init_ctl
 t pthread_atfork
 t quantize
 t quantize3_ord_dither
 t quantize_float
 t quantize_fs_dither
 t quantize_ord_dither
 t re2::AddFoldedRange(re2::CharClassBuilder*, int, int, int)
 t re2::AddQ(re2::SparseSetT<void>*, int) [clone .part.33] [clone .constprop.66]
 t re2::AddUGroup(re2::CharClassBuilder*, re2::UGroup const*, int, re2::Regexp::ParseFlags)
 t re2::AppendCCChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, int)
 t re2::AppendCCRange(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, int, int)
 t re2::AppendLiteral(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, int, bool)
 t re2::CanBeEmptyString(re2::Regexp*)
 t re2::ChildArgsChanged(re2::Regexp*, re2::Regexp**)
 t re2::Compiler::ShortVisit(re2::Regexp*, re2::Frag) [clone .localalias.111]
 t re2::CopyIn(std::set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)
 t re2::FilteredRE2::RegexpsGivenStrings(std::vector<int, std::allocator<int> > const&, std::vector<int, std::allocator<int> >*) [clone .localalias.64]
 t re2::FlattenedProgToString(re2::Prog*, int)
 t re2::IsAnchorEnd(re2::Regexp**, int)
 t re2::IsAnchorStart(re2::Regexp**, int)
 t re2::IsMatch(re2::Prog*, re2::Prog::Inst*)
 t re2::IsValidUTF8(re2::StringPiece const&, re2::RegexpStatus*)
 t re2::LookupGroup(re2::StringPiece const&, re2::UGroup const*, int)
 t re2::ParseEscape(re2::StringPiece*, int*, re2::RegexpStatus*, int)
 t re2::ParseInteger(re2::StringPiece*, int*)
 t re2::Prefilter::Info::AnyMatch() [clone .localalias.108]
 t re2::Prefilter::Info::Walker::ShortVisit(re2::Regexp*, re2::Prefilter::Info*) [clone .localalias.109]
 t re2::ProgToString(re2::Prog*, re2::SparseSetT<void>*) [clone .constprop.142]
 t re2::RE2::ReverseProg() const::{lambda(re2::RE2 const*)#1}::operator()(re2::RE2 const*) const [clone .isra.129]
 t re2::SparseArray<int>::has_index(int) const [clone .part.47]
 t re2::SparseArray<re2::NFA::Thread*>::has_index(int) const [clone .part.41]
 t re2::SparseSetT<void>::contains(int) const [clone .part.43]
 t re2::StringAppendV(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, char const*, __va_list_tag*)
 t re2::StringPieceToRune(int*, re2::StringPiece*, re2::RegexpStatus*)
 t re2::TerminateNumber(char*, unsigned long, char const*, unsigned long*, bool)
 t re2::ToLowerRune(int) [clone .part.10]
 t re2::TopEqual(re2::Regexp*, re2::Regexp*)
 t re2::UnHex(int)
 t re2::parse_double_float(char const*, unsigned long, bool, void*)
 t re2::trunc(re2::StringPiece const&)
 t read_markers
 t read_restart_marker
 t realize_virt_arrays
 t register_tm_clones
 t request_virt_barray
 t request_virt_sarray
 t reset_error_mgr
 t reset_input_controller
 t reset_marker_reader
 t rgb_gray_convert
 t rgb_rgb565D_convert
 t rgb_rgb565_convert
 t rgb_rgb_convert
 t rgb_ycc_convert
 t rgb_ycc_start
 t rtree_delete_subtree
 t save_marker
 t scan_tree
 t select_scan_parameters
 t self_destruct
 t send_tree
 t sep_downsample
 t sep_upsample
 t skip_input_data
 t skip_variable
 t start_input_pass
 t start_output_pass
 t start_pass
 t start_pass_1_quant
 t start_pass_2_quant
 t start_pass_coef
 t start_pass_dcolor
 t start_pass_downsample
 t start_pass_dpost
 t start_pass_fdctmgr
 t start_pass_huff
 t start_pass_huff_decoder
 t start_pass_main
 t start_pass_merged_upsample
 t start_pass_phuff
 t start_pass_phuff_decoder
 t start_pass_prep
 t start_pass_upsample
 t stats_active_ctl
 t stats_allocated_ctl
 t stats_arena_print
 t stats_arenas_i_bins_j_curregs_ctl
 t stats_arenas_i_bins_j_curruns_ctl
 t stats_arenas_i_bins_j_index
 t stats_arenas_i_bins_j_ndalloc_ctl
 t stats_arenas_i_bins_j_nfills_ctl
 t stats_arenas_i_bins_j_nflushes_ctl
 t stats_arenas_i_bins_j_nmalloc_ctl
 t stats_arenas_i_bins_j_nrequests_ctl
 t stats_arenas_i_bins_j_nreruns_ctl
 t stats_arenas_i_bins_j_nruns_ctl
 t stats_arenas_i_decay_time_ctl
 t stats_arenas_i_dss_ctl
 t stats_arenas_i_hchunks_j_curhchunks_ctl
 t stats_arenas_i_hchunks_j_index
 t stats_arenas_i_hchunks_j_ndalloc_ctl
 t stats_arenas_i_hchunks_j_nmalloc_ctl
 t stats_arenas_i_hchunks_j_nrequests_ctl
 t stats_arenas_i_huge_allocated_ctl
 t stats_arenas_i_huge_ndalloc_ctl
 t stats_arenas_i_huge_nmalloc_ctl
 t stats_arenas_i_huge_nrequests_ctl
 t stats_arenas_i_index
 t stats_arenas_i_large_allocated_ctl
 t stats_arenas_i_large_ndalloc_ctl
 t stats_arenas_i_large_nmalloc_ctl
 t stats_arenas_i_large_nrequests_ctl
 t stats_arenas_i_lg_dirty_mult_ctl
 t stats_arenas_i_lruns_j_curruns_ctl
 t stats_arenas_i_lruns_j_index
 t stats_arenas_i_lruns_j_ndalloc_ctl
 t stats_arenas_i_lruns_j_nmalloc_ctl
 t stats_arenas_i_lruns_j_nrequests_ctl
 t stats_arenas_i_mapped_ctl
 t stats_arenas_i_metadata_allocated_ctl
 t stats_arenas_i_metadata_mapped_ctl
 t stats_arenas_i_nmadvise_ctl
 t stats_arenas_i_npurge_ctl
 t stats_arenas_i_nthreads_ctl
 t stats_arenas_i_pactive_ctl
 t stats_arenas_i_pdirty_ctl
 t stats_arenas_i_purged_ctl
 t stats_arenas_i_retained_ctl
 t stats_arenas_i_small_allocated_ctl
 t stats_arenas_i_small_ndalloc_ctl
 t stats_arenas_i_small_nmalloc_ctl
 t stats_arenas_i_small_nrequests_ctl
 t stats_cactive_ctl
 t stats_general_print
 t stats_mapped_ctl
 t stats_metadata_ctl
 t stats_print_atexit
 t stats_resident_ctl
 t stats_retained_ctl
 t std::_Function_base::_Base_manager<perftools::gputools::(anonymous namespace)::BlockOnThreadExecutor(tensorflow::thread::ThreadPool*)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<perftools::gputools::(anonymous namespace)::BlockOnThreadExecutor(tensorflow::thread::ThreadPool*)::{lambda()#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<perftools::gputools::Stream::ThenEnqueueOnBackgroundThread(std::function<void (perftools::gputools::StreamExecutor*)>)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<perftools::gputools::Stream::ThenEnqueueOnBackgroundThread(std::function<void (perftools::gputools::StreamExecutor*)>)::{lambda()#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<perftools::gputools::host::HostExecutor::CreateStreamDependency(perftools::gputools::Stream*, perftools::gputools::Stream*)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<perftools::gputools::host::HostExecutor::CreateStreamDependency(perftools::gputools::Stream*, perftools::gputools::Stream*)::{lambda()#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<perftools::gputools::host::HostExecutor::MemZero(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, unsigned long long)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<perftools::gputools::host::HostExecutor::MemZero(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, unsigned long long)::{lambda()#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<perftools::gputools::host::HostExecutor::Memcpy(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, void const*, unsigned long long)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<perftools::gputools::host::HostExecutor::Memcpy(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, void const*, unsigned long long)::{lambda()#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<perftools::gputools::host::HostExecutor::Memcpy(perftools::gputools::Stream*, void*, perftools::gputools::DeviceMemoryBase const&, unsigned long long)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<perftools::gputools::host::HostExecutor::Memcpy(perftools::gputools::Stream*, void*, perftools::gputools::DeviceMemoryBase const&, unsigned long long)::{lambda()#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<perftools::gputools::host::HostExecutor::MemcpyDeviceToDevice(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, perftools::gputools::DeviceMemoryBase const&, unsigned long long)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<perftools::gputools::host::HostExecutor::MemcpyDeviceToDevice(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, perftools::gputools::DeviceMemoryBase const&, unsigned long long)::{lambda()#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<perftools::gputools::host::HostExecutor::Memset(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, unsigned char, unsigned long long)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<perftools::gputools::host::HostExecutor::Memset(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, unsigned char, unsigned long long)::{lambda()#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<perftools::gputools::host::HostExecutor::Memset32(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, unsigned int, unsigned long long)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<perftools::gputools::host::HostExecutor::Memset32(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, unsigned int, unsigned long long)::{lambda()#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<perftools::gputools::host::HostPlatform::GetExecutor(perftools::gputools::StreamExecutorConfig const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<perftools::gputools::host::HostPlatform::GetExecutor(perftools::gputools::StreamExecutorConfig const&)::{lambda()#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<perftools::gputools::host::HostStream::EnqueueTask(std::function<void ()>)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<perftools::gputools::host::HostStream::EnqueueTask(std::function<void ()>)::{lambda()#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<perftools::gputools::host::HostTimer::Start(perftools::gputools::Stream*)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<perftools::gputools::host::HostTimer::Start(perftools::gputools::Stream*)::{lambda()#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<perftools::gputools::host::HostTimer::Stop(perftools::gputools::Stream*)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<perftools::gputools::host::HostTimer::Stop(perftools::gputools::Stream*)::{lambda()#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<std::_Bind<std::_Mem_fn<void (tensorflow::(anonymous namespace)::ExecutorState::*)(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long)> (tensorflow::(anonymous namespace)::ExecutorState*, tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long)> >::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<std::_Bind<tensorflow::(anonymous namespace)::CopyDeviceToDevice(void (*)(tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>), tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Tensor const&, tensorflow::Tensor*)#2} (tensorflow::(anonymous namespace)::CopyDeviceToDevice(void (*)(tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>), tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}, std::_Placeholder<1>, {lambda(tensorflow::Status const&)#1}<2>)> >::_M_manager(std::_Any_data&, std::_Bind<tensorflow::(anonymous namespace)::CopyDeviceToDevice(void (*)(tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>), tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Tensor const&, tensorflow::Tensor*)#2} (tensorflow::(anonymous namespace)::CopyDeviceToDevice(void (*)(tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>), tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}, std::_Placeholder<1>, {lambda(tensorflow::Status const&)#1}<2>)> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<std::_Bind<tensorflow::(anonymous namespace)::CopyDeviceToHost(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Tensor const&, tensorflow::Tensor*)#2} (tensorflow::(anonymous namespace)::CopyDeviceToHost(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}, std::_Placeholder<1>, {lambda(tensorflow::Status const&)#1}<2>)> >::_M_manager(std::_Any_data&, std::_Bind<tensorflow::(anonymous namespace)::CopyDeviceToHost(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Tensor const&, tensorflow::Tensor*)#2} (tensorflow::(anonymous namespace)::CopyDeviceToHost(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}, std::_Placeholder<1>, {lambda(tensorflow::Status const&)#1}<2>)> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<std::_Bind<tensorflow::(anonymous namespace)::CopyHostToDevice(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Tensor const&, tensorflow::Tensor*)#2} (tensorflow::(anonymous namespace)::CopyHostToDevice(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}, std::_Placeholder<1>, {lambda(tensorflow::Status const&)#1}<2>)> >::_M_manager(std::_Any_data&, std::_Bind<tensorflow::(anonymous namespace)::CopyHostToDevice(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Tensor const&, tensorflow::Tensor*)#2} (tensorflow::(anonymous namespace)::CopyHostToDevice(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}, std::_Placeholder<1>, {lambda(tensorflow::Status const&)#1}<2>)> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<std::_Bind<tensorflow::CopyTensor::ViaDMA(tensorflow::StringPiece, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status const&)#1} (std::function<void (tensorflow::Status const&)>, std::_Placeholder<1>)> >::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<std::_Bind<tensorflow::CopyTensor::ViaDMA(tensorflow::StringPiece, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status const&)#1} (std::function<void (tensorflow::Status const&)>, std::_Placeholder<1>)> > const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<std::_Bind<tensorflow::CopyTensor::ViaDMA(tensorflow::StringPiece, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status)#2} (std::function<void (tensorflow::Status const&)>, std::_Placeholder<1>)> >::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<std::_Bind<tensorflow::CopyTensor::ViaDMA(tensorflow::StringPiece, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status)#2} (std::function<void (tensorflow::Status const&)>, std::_Placeholder<1>)> > const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<std::_Bind<tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::CallFrameInterface*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status const&)#1} (std::function<void (tensorflow::Status const&)>, std::_Placeholder<1>)> >::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<std::_Bind<tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::CallFrameInterface*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status const&)#1} (std::function<void (tensorflow::Status const&)>, std::_Placeholder<1>)> > const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<std::_Bind<tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::CallFrameInterface*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status const&)#2} (std::function<void (tensorflow::Status const&)>, std::_Placeholder<1>)> >::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<std::_Bind<tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::CallFrameInterface*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status const&)#2} (std::function<void (tensorflow::Status const&)>, std::_Placeholder<1>)> > const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::(anonymous namespace)::CopyDeviceToDevice(void (*)(tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>), tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::(anonymous namespace)::CopyDeviceToDevice(void (*)(tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>), tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::(anonymous namespace)::CopyDeviceToHost(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::(anonymous namespace)::CopyDeviceToHost(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::(anonymous namespace)::CopyHostToDevice(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::(anonymous namespace)::CopyHostToDevice(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::(anonymous namespace)::ExecutorState::Finish()::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::(anonymous namespace)::ExecutorState::Finish()::{lambda()#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::(anonymous namespace)::ExecutorState::Process(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::(anonymous namespace)::ExecutorState::Process(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long)::{lambda()#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::(anonymous namespace)::ExecutorState::ScheduleReady(tensorflow::gtl::InlinedVector<tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, 8> const&, tensorflow::(anonymous namespace)::ExecutorState::TaggedNodeReadyQueue*)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::(anonymous namespace)::ExecutorState::ScheduleReady(tensorflow::gtl::InlinedVector<tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, 8> const&, tensorflow::(anonymous namespace)::ExecutorState::TaggedNodeReadyQueue*)::{lambda()#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::(anonymous namespace)::FindConstantFoldableNodes(tensorflow::Graph const*, tensorflow::ConstantFoldingOptions const&, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> >*, std::unordered_map<tensorflow::Node const*, tensorflow::gtl::FlatSet<tensorflow::Node*, tensorflow::hash<tensorflow::Node*>, std::equal_to<tensorflow::Node*> >, std::hash<tensorflow::Node const*>, std::equal_to<tensorflow::Node const*>, std::allocator<std::pair<tensorflow::Node const* const, tensorflow::gtl::FlatSet<tensorflow::Node*, tensorflow::hash<tensorflow::Node*>, std::equal_to<tensorflow::Node*> > > > >*, std::unordered_map<tensorflow::Node const*, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >, std::hash<tensorflow::Node const*>, std::equal_to<tensorflow::Node const*>, std::allocator<std::pair<tensorflow::Node const* const, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> > > > >*)::{lambda(tensorflow::Node*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::(anonymous namespace)::FindConstantFoldableNodes(tensorflow::Graph const*, tensorflow::ConstantFoldingOptions const&, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> >*, std::unordered_map<tensorflow::Node const*, tensorflow::gtl::FlatSet<tensorflow::Node*, tensorflow::hash<tensorflow::Node*>, std::equal_to<tensorflow::Node*> >, std::hash<tensorflow::Node const*>, std::equal_to<tensorflow::Node const*>, std::allocator<std::pair<tensorflow::Node const* const, tensorflow::gtl::FlatSet<tensorflow::Node*, tensorflow::hash<tensorflow::Node*>, std::equal_to<tensorflow::Node*> > > > >*, std::unordered_map<tensorflow::Node const*, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >, std::hash<tensorflow::Node const*>, std::equal_to<tensorflow::Node const*>, std::allocator<std::pair<tensorflow::Node const* const, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> > > > >*)::{lambda(tensorflow::Node*)#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::(anonymous namespace)::ForEach(int, int, std::function<void (int)> const&)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::(anonymous namespace)::ForEach(int, int, std::function<void (int)> const&)::{lambda()#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::(anonymous namespace)::OptimizeControlFlowColocation(tensorflow::Graph*)::{lambda(tensorflow::Node*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::(anonymous namespace)::OptimizeControlFlowColocation(tensorflow::Graph*)::{lambda(tensorflow::Node*)#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::(anonymous namespace)::PosixEnv::SchedClosureAfter(long long, std::function<void ()>)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::(anonymous namespace)::PosixEnv::SchedClosureAfter(long long, std::function<void ()>)::{lambda()#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::AsyncOpKernel::Compute(tensorflow::OpKernelContext*)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::AsyncOpKernel::Compute(tensorflow::OpKernelContext*)::{lambda()#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::BFCAllocator::AllocateRaw(unsigned long, unsigned long)::{lambda(unsigned long, unsigned long, bool)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::BFCAllocator::AllocateRaw(unsigned long, unsigned long)::{lambda(unsigned long, unsigned long, bool)#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::EnsureMemoryTypes(tensorflow::DeviceType const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph*)::{lambda(tensorflow::Edge const*, tensorflow::MemoryType, tensorflow::MemoryType)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::EnsureMemoryTypes(tensorflow::DeviceType const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph*)::{lambda(tensorflow::Edge const*, tensorflow::MemoryType, tensorflow::MemoryType)#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::EventMgr::StartPollingLoop()::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::EventMgr::StartPollingLoop()::{lambda()#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::FileSystem::GetMatchingPaths(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)::{lambda(int)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::FileSystem::GetMatchingPaths(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)::{lambda(int)#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::Flag::Flag(char const*, bool*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(bool)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::Flag::Flag(char const*, bool*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(bool)#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::Flag::Flag(char const*, float*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(float)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::Flag::Flag(char const*, float*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(float)#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::Flag::Flag(char const*, int*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(int)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::Flag::Flag(char const*, int*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(int)#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::Flag::Flag(char const*, long long*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(long long)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::Flag::Flag(char const*, long long*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(long long)#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::Flag::Flag(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::Flag::Flag(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::FunctionLibraryRuntimeImpl::CreateItem(unsigned long long, tensorflow::FunctionLibraryRuntimeImpl::Item**)::{lambda(tensorflow::OpKernel*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::FunctionLibraryRuntimeImpl::CreateItem(unsigned long long, tensorflow::FunctionLibraryRuntimeImpl::Item**)::{lambda(tensorflow::OpKernel*)#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::FunctionLibraryRuntimeImpl::FunctionLibraryRuntimeImpl(tensorflow::DeviceMgr const*, tensorflow::Env*, tensorflow::Device*, int, tensorflow::FunctionLibraryDefinition const*, tensorflow::OptimizerOptions const&, std::function<tensorflow::Status (tensorflow::FunctionLibraryRuntime*, tensorflow::NodeDef const&, std::unique_ptr<tensorflow::OpKernel, std::default_delete<tensorflow::OpKernel> >*)>, tensorflow::ProcessFunctionLibraryRuntime*)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef const**)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::FunctionLibraryRuntimeImpl::FunctionLibraryRuntimeImpl(tensorflow::DeviceMgr const*, tensorflow::Env*, tensorflow::Device*, int, tensorflow::FunctionLibraryDefinition const*, tensorflow::OptimizerOptions const&, std::function<tensorflow::Status (tensorflow::FunctionLibraryRuntime*, tensorflow::NodeDef const&, std::unique_ptr<tensorflow::OpKernel, std::default_delete<tensorflow::OpKernel> >*)>, tensorflow::ProcessFunctionLibraryRuntime*)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef const**)#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::FunctionLibraryRuntimeImpl::FunctionLibraryRuntimeImpl(tensorflow::DeviceMgr const*, tensorflow::Env*, tensorflow::Device*, int, tensorflow::FunctionLibraryDefinition const*, tensorflow::OptimizerOptions const&, std::function<tensorflow::Status (tensorflow::FunctionLibraryRuntime*, tensorflow::NodeDef const&, std::unique_ptr<tensorflow::OpKernel, std::default_delete<tensorflow::OpKernel> >*)>, tensorflow::ProcessFunctionLibraryRuntime*)::{lambda(tensorflow::NodeDef const&, tensorflow::OpKernel**)#2}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::FunctionLibraryRuntimeImpl::FunctionLibraryRuntimeImpl(tensorflow::DeviceMgr const*, tensorflow::Env*, tensorflow::Device*, int, tensorflow::FunctionLibraryDefinition const*, tensorflow::OptimizerOptions const&, std::function<tensorflow::Status (tensorflow::FunctionLibraryRuntime*, tensorflow::NodeDef const&, std::unique_ptr<tensorflow::OpKernel, std::default_delete<tensorflow::OpKernel> >*)>, tensorflow::ProcessFunctionLibraryRuntime*)::{lambda(tensorflow::NodeDef const&, tensorflow::OpKernel**)#2}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::gtl::ArraySlice<tensorflow::Tensor>, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::gtl::ArraySlice<tensorflow::Tensor>, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::gtl::ArraySlice<tensorflow::Tensor>, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#2}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::gtl::ArraySlice<tensorflow::Tensor>, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#2}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::FunctionLibraryRuntimeImpl::RunRemote(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::gtl::ArraySlice<tensorflow::Tensor>, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, tensorflow::Executor::Args*, tensorflow::FunctionLibraryRuntimeImpl::Item*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}::operator()(tensorflow::Status const&) const::{lambda(tensorflow::Status const&)#1}>::_M_manager(std::_Any_data&, tensorflow::FunctionLibraryRuntimeImpl::RunRemote(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::gtl::ArraySlice<tensorflow::Tensor>, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, tensorflow::Executor::Args*, tensorflow::FunctionLibraryRuntimeImpl::Item*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}::operator()(tensorflow::Status const&) const::{lambda(tensorflow::Status const&)#1} const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::FunctionLibraryRuntimeImpl::RunRemote(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::gtl::ArraySlice<tensorflow::Tensor>, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, tensorflow::Executor::Args*, tensorflow::FunctionLibraryRuntimeImpl::Item*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::FunctionLibraryRuntimeImpl::RunRemote(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::gtl::ArraySlice<tensorflow::Tensor>, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, tensorflow::Executor::Args*, tensorflow::FunctionLibraryRuntimeImpl::Item*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::GPUUtil::Checksum(tensorflow::Device*, tensorflow::DeviceContext const*, tensorflow::Tensor const&)::{lambda(tensorflow::Status)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::GPUUtil::Checksum(tensorflow::Device*, tensorflow::DeviceContext const*, tensorflow::Tensor const&)::{lambda(tensorflow::Status)#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::GPUUtil::CopyCPUTensorToGPU(tensorflow::Tensor const*, tensorflow::DeviceContext const*, tensorflow::Device*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::GPUUtil::CopyCPUTensorToGPU(tensorflow::Tensor const*, tensorflow::DeviceContext const*, tensorflow::Device*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda()#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::GPUUtil::CopyGPUTensorToCPU(tensorflow::Device*, tensorflow::DeviceContext const*, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::GPUUtil::CopyGPUTensorToCPU(tensorflow::Device*, tensorflow::DeviceContext const*, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda()#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::GPUUtil::DeviceToDeviceCopy(tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::GPUUtil::DeviceToDeviceCopy(tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda()#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::GPUUtil::SetProtoFromGPU(tensorflow::Tensor const&, tensorflow::Device*, tensorflow::DeviceContext const*, tensorflow::TensorProto*, bool, std::function<void (tensorflow::Status const&)>)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::GPUUtil::SetProtoFromGPU(tensorflow::Tensor const&, tensorflow::Device*, tensorflow::DeviceContext const*, tensorflow::TensorProto*, bool, std::function<void (tensorflow::Status const&)>)::{lambda()#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::GetPostOrder(tensorflow::Graph const&, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> >*, std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> const&)::{lambda(tensorflow::Node*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::GetPostOrder(tensorflow::Graph const&, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> >*, std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> const&)::{lambda(tensorflow::Node*)#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::GraphRunner::Run(tensorflow::Graph*, tensorflow::FunctionLibraryRuntime*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*)::{lambda(std::function<void ()>)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::GraphRunner::Run(tensorflow::Graph*, tensorflow::FunctionLibraryRuntime*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*)::{lambda(std::function<void ()>)#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::GraphRunner::Run(tensorflow::Graph*, tensorflow::FunctionLibraryRuntime*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*)::{lambda(tensorflow::NodeDef const&, tensorflow::OpKernel**)#2}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::GraphRunner::Run(tensorflow::Graph*, tensorflow::FunctionLibraryRuntime*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*)::{lambda(tensorflow::NodeDef const&, tensorflow::OpKernel**)#2}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::GraphRunner::Run(tensorflow::Graph*, tensorflow::FunctionLibraryRuntime*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*)::{lambda(tensorflow::OpKernel*)#3}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::GraphRunner::Run(tensorflow::Graph*, tensorflow::FunctionLibraryRuntime*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*)::{lambda(tensorflow::OpKernel*)#3}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::InstantiateFunction(tensorflow::FunctionDef const&, tensorflow::AttrSlice, std::function<tensorflow::Status (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef const**)>, tensorflow::InstantiationResult*)::{lambda(tensorflow::StringPiece, tensorflow::AttrValue*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::InstantiateFunction(tensorflow::FunctionDef const&, tensorflow::AttrSlice, std::function<tensorflow::Status (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef const**)>, tensorflow::InstantiationResult*)::{lambda(tensorflow::StringPiece, tensorflow::AttrValue*)#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::IntraProcessRendezvous::RecvAsync(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, std::function<void (tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)>)::{lambda(tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)#1}::operator()(tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool) const::{lambda(tensorflow::Status const&)#1}>::_M_manager(std::_Any_data&, tensorflow::IntraProcessRendezvous::RecvAsync(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, std::function<void (tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)>)::{lambda(tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)#1}::operator()(tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool) const::{lambda(tensorflow::Status const&)#1} const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::IntraProcessRendezvous::RecvAsync(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, std::function<void (tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)>)::{lambda(tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::IntraProcessRendezvous::RecvAsync(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, std::function<void (tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)>)::{lambda(tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::LoadLibrary(char const*, void**, void const**, unsigned long*)::{lambda(tensorflow::Status const&, tensorflow::OpDef const&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::LoadLibrary(char const*, void**, void const**, unsigned long*)::{lambda(tensorflow::Status const&, tensorflow::OpDef const&)#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::ProcessFunctionLibraryRuntime::ReceiveTensorsAsync(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long long, long long, tensorflow::DeviceContext*, std::vector<tensorflow::AllocatorAttributes, std::allocator<tensorflow::AllocatorAttributes> > const&, tensorflow::Rendezvous*, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::function<void (tensorflow::Status const&)> const&)::{lambda(tensorflow::Status const&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::ProcessFunctionLibraryRuntime::ReceiveTensorsAsync(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long long, long long, tensorflow::DeviceContext*, std::vector<tensorflow::AllocatorAttributes, std::allocator<tensorflow::AllocatorAttributes> > const&, tensorflow::Rendezvous*, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::function<void (tensorflow::Status const&)> const&)::{lambda(tensorflow::Status const&)#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::ProcessFunctionLibraryRuntime::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::gtl::ArraySlice<tensorflow::Tensor>, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::ProcessFunctionLibraryRuntime::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::gtl::ArraySlice<tensorflow::Tensor>, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::RecvOutputsFromRendezvousAsync(tensorflow::Rendezvous*, tensorflow::DeviceContext*, std::vector<tensorflow::AllocatorAttributes, std::allocator<tensorflow::AllocatorAttributes> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::function<void (tensorflow::Status const&)> const&)::{lambda(tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::RecvOutputsFromRendezvousAsync(tensorflow::Rendezvous*, tensorflow::DeviceContext*, std::vector<tensorflow::AllocatorAttributes, std::allocator<tensorflow::AllocatorAttributes> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::function<void (tensorflow::Status const&)> const&)::{lambda(tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::Rendezvous::Recv(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor*, bool*, long long)::{lambda(tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::Rendezvous::Recv(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor*, bool*, long long)::{lambda(tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::ShapeRefiner::InferShapesForFunction(tensorflow::FunctionDef const*, bool, tensorflow::ExtendedInferenceContext*)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef const**)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::ShapeRefiner::InferShapesForFunction(tensorflow::FunctionDef const*, bool, tensorflow::ExtendedInferenceContext*)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef const**)#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::ShapeRefiner::InferShapesForFunction(tensorflow::FunctionDef const*, bool, tensorflow::ExtendedInferenceContext*)::{lambda(tensorflow::Node const*)#2}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::ShapeRefiner::InferShapesForFunction(tensorflow::FunctionDef const*, bool, tensorflow::ExtendedInferenceContext*)::{lambda(tensorflow::Node const*)#2}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::Shard(int, tensorflow::thread::ThreadPool*, long long, long long, std::function<void (long long, long long)>)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::Shard(int, tensorflow::thread::ThreadPool*, long long, long long, std::function<void (long long, long long)>)::{lambda()#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::ToGraphDef(tensorflow::Graph const*, tensorflow::GraphDef*, bool)::{lambda(tensorflow::Node*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::ToGraphDef(tensorflow::Graph const*, tensorflow::GraphDef*, bool)::{lambda(tensorflow::Node*)#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::ValidateMemoryTypes(tensorflow::DeviceType const&, tensorflow::Graph const*)::{lambda(tensorflow::Edge const*, tensorflow::MemoryType, tensorflow::MemoryType)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::ValidateMemoryTypes(tensorflow::DeviceType const&, tensorflow::Graph const*)::{lambda(tensorflow::Edge const*, tensorflow::MemoryType, tensorflow::MemoryType)#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::example::(anonymous namespace)::ParallelFor(std::function<void (unsigned long)> const&, unsigned long, tensorflow::thread::ThreadPool*)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::example::(anonymous namespace)::ParallelFor(std::function<void (unsigned long)> const&, unsigned long, tensorflow::thread::ThreadPool*)::{lambda()#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::example::FastParseExample(tensorflow::example::FastParseExampleConfig const&, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::thread::ThreadPool*, tensorflow::example::Result*)::{lambda(unsigned long)#3}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::example::FastParseExample(tensorflow::example::FastParseExampleConfig const&, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::thread::ThreadPool*, tensorflow::example::Result*)::{lambda(unsigned long)#3}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::grappler::ExecuteWithTimeout(std::function<void ()>, long long, tensorflow::thread::ThreadPool*)::{lambda()#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::grappler::ExecuteWithTimeout(std::function<void ()>, long long, tensorflow::thread::ThreadPool*)::{lambda()#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::register_op::OpDefBuilderReceiver::OpDefBuilderReceiver(tensorflow::register_op::OpDefBuilderWrapper<true> const&)::{lambda(tensorflow::OpRegistrationData*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::register_op::OpDefBuilderReceiver::OpDefBuilderReceiver(tensorflow::register_op::OpDefBuilderWrapper<true> const&)::{lambda(tensorflow::OpRegistrationData*)#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::str_util::SplitAndParseAsFloats(tensorflow::StringPiece, char, std::vector<float, std::allocator<float> >*)::{lambda(tensorflow::StringPiece, float*)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::str_util::SplitAndParseAsFloats(tensorflow::StringPiece, char, std::vector<float, std::allocator<float> >*)::{lambda(tensorflow::StringPiece, float*)#1}> const&, std::_Manager_operation)
 t std::_Function_base::_Base_manager<tensorflow::thread::ThreadPool::ParallelForWithWorkerId(long long, long long, std::function<void (long long, long long, int)> const&)::{lambda(long long, long long)#1}>::_M_manager(std::_Any_data&, std::_Function_base::_Base_manager<tensorflow::thread::ThreadPool::ParallelForWithWorkerId(long long, long long, std::function<void (long long, long long, int)> const&)::{lambda(long long, long long)#1}> const&, std::_Manager_operation)
 t std::_Function_handler<bool (bool), tensorflow::Flag::Flag(char const*, bool*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(bool)#1}>::_M_invoke(std::_Any_data const&, bool&&)
 t std::_Function_handler<bool (float), tensorflow::Flag::Flag(char const*, float*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(float)#1}>::_M_invoke(std::_Any_data const&, float&&)
 t std::_Function_handler<bool (int), tensorflow::Flag::Flag(char const*, int*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(int)#1}>::_M_invoke(std::_Any_data const&, int&&)
 t std::_Function_handler<bool (long long), tensorflow::Flag::Flag(char const*, long long*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(long long)#1}>::_M_invoke(std::_Any_data const&, long long&&)
 t std::_Function_handler<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrValue*), tensorflow::InstantiateFunction(tensorflow::FunctionDef const&, tensorflow::AttrSlice, std::function<tensorflow::Status (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef const**)>, tensorflow::InstantiationResult*)::{lambda(tensorflow::StringPiece, tensorflow::AttrValue*)#1}>::_M_invoke(std::_Any_data const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::AttrValue*&&)
 t std::_Function_handler<bool (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >), tensorflow::Flag::Flag(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)#1}>::_M_invoke(std::_Any_data const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
 t std::_Function_handler<bool (tensorflow::StringPiece, float*), tensorflow::str_util::SplitAndParseAsFloats(tensorflow::StringPiece, char, std::vector<float, std::allocator<float> >*)::{lambda(tensorflow::StringPiece, float*)#1}>::_M_invoke(std::_Any_data const&, tensorflow::StringPiece&&, float*&&)
 t std::_Function_handler<perftools::gputools::port::StatusOr<std::unique_ptr<perftools::gputools::StreamExecutor, std::default_delete<perftools::gputools::StreamExecutor> > > (), perftools::gputools::host::HostPlatform::GetExecutor(perftools::gputools::StreamExecutorConfig const&)::{lambda()#1}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<tensorflow::Status (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef const**), tensorflow::FunctionLibraryRuntimeImpl::FunctionLibraryRuntimeImpl(tensorflow::DeviceMgr const*, tensorflow::Env*, tensorflow::Device*, int, tensorflow::FunctionLibraryDefinition const*, tensorflow::OptimizerOptions const&, std::function<tensorflow::Status (tensorflow::FunctionLibraryRuntime*, tensorflow::NodeDef const&, std::unique_ptr<tensorflow::OpKernel, std::default_delete<tensorflow::OpKernel> >*)>, tensorflow::ProcessFunctionLibraryRuntime*)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef const**)#1}>::_M_invoke(std::_Any_data const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef const**&&)
 t std::_Function_handler<tensorflow::Status (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef const**), tensorflow::ShapeRefiner::InferShapesForFunction(tensorflow::FunctionDef const*, bool, tensorflow::ExtendedInferenceContext*)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef const**)#1}>::_M_invoke(std::_Any_data const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef const**&&)
 t std::_Function_handler<tensorflow::Status (tensorflow::Edge const*, tensorflow::MemoryType, tensorflow::MemoryType), tensorflow::EnsureMemoryTypes(tensorflow::DeviceType const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Graph*)::{lambda(tensorflow::Edge const*, tensorflow::MemoryType, tensorflow::MemoryType)#1}>::_M_invoke(std::_Any_data const&, tensorflow::Edge const*&&, tensorflow::MemoryType&&, tensorflow::Edge const*&&)
 t std::_Function_handler<tensorflow::Status (tensorflow::Edge const*, tensorflow::MemoryType, tensorflow::MemoryType), tensorflow::ValidateMemoryTypes(tensorflow::DeviceType const&, tensorflow::Graph const*)::{lambda(tensorflow::Edge const*, tensorflow::MemoryType, tensorflow::MemoryType)#1}>::_M_invoke(std::_Any_data const&, tensorflow::Edge const*&&, tensorflow::MemoryType&&, tensorflow::Edge const*&&)
 t std::_Function_handler<tensorflow::Status (tensorflow::NodeDef const&, tensorflow::OpKernel**), tensorflow::FunctionLibraryRuntimeImpl::FunctionLibraryRuntimeImpl(tensorflow::DeviceMgr const*, tensorflow::Env*, tensorflow::Device*, int, tensorflow::FunctionLibraryDefinition const*, tensorflow::OptimizerOptions const&, std::function<tensorflow::Status (tensorflow::FunctionLibraryRuntime*, tensorflow::NodeDef const&, std::unique_ptr<tensorflow::OpKernel, std::default_delete<tensorflow::OpKernel> >*)>, tensorflow::ProcessFunctionLibraryRuntime*)::{lambda(tensorflow::NodeDef const&, tensorflow::OpKernel**)#2}>::_M_invoke(std::_Any_data const&, tensorflow::NodeDef const&, tensorflow::OpKernel**&&)
 t std::_Function_handler<tensorflow::Status (tensorflow::NodeDef const&, tensorflow::OpKernel**), tensorflow::GraphRunner::Run(tensorflow::Graph*, tensorflow::FunctionLibraryRuntime*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*)::{lambda(tensorflow::NodeDef const&, tensorflow::OpKernel**)#2}>::_M_invoke(std::_Any_data const&, tensorflow::NodeDef const&, tensorflow::OpKernel**&&)
 t std::_Function_handler<tensorflow::Status (tensorflow::OpRegistrationData*), tensorflow::register_op::OpDefBuilderReceiver::OpDefBuilderReceiver(tensorflow::register_op::OpDefBuilderWrapper<true> const&)::{lambda(tensorflow::OpRegistrationData*)#1}>::_M_invoke(std::_Any_data const&, tensorflow::OpRegistrationData*&&)
 t std::_Function_handler<tensorflow::Status (tensorflow::Status const&, tensorflow::OpDef const&), tensorflow::LoadLibrary(char const*, void**, void const**, unsigned long*)::{lambda(tensorflow::Status const&, tensorflow::OpDef const&)#1}>::_M_invoke(std::_Any_data const&, tensorflow::Status const&, tensorflow::OpDef const&)
 t std::_Function_handler<tensorflow::Status (tensorflow::Tensor const&, tensorflow::Tensor*), std::_Bind<tensorflow::(anonymous namespace)::CopyDeviceToDevice(void (*)(tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>), tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Tensor const&, tensorflow::Tensor*)#2} (tensorflow::(anonymous namespace)::CopyDeviceToDevice(void (*)(tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>), tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}, std::_Placeholder<1>, {lambda(tensorflow::Status const&)#1}<2>)> >::_M_invoke(std::_Any_data const&, tensorflow::Tensor const&, tensorflow::Tensor*&&)
 t std::_Function_handler<tensorflow::Status (tensorflow::Tensor const&, tensorflow::Tensor*), std::_Bind<tensorflow::(anonymous namespace)::CopyDeviceToHost(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Tensor const&, tensorflow::Tensor*)#2} (tensorflow::(anonymous namespace)::CopyDeviceToHost(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}, std::_Placeholder<1>, {lambda(tensorflow::Status const&)#1}<2>)> >::_M_invoke(std::_Any_data const&, tensorflow::Tensor const&, tensorflow::Tensor*&&)
 t std::_Function_handler<tensorflow::Status (tensorflow::Tensor const&, tensorflow::Tensor*), std::_Bind<tensorflow::(anonymous namespace)::CopyHostToDevice(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Tensor const&, tensorflow::Tensor*)#2} (tensorflow::(anonymous namespace)::CopyHostToDevice(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}, std::_Placeholder<1>, {lambda(tensorflow::Status const&)#1}<2>)> >::_M_invoke(std::_Any_data const&, tensorflow::Tensor const&, tensorflow::Tensor*&&)
 t std::_Function_handler<void (), perftools::gputools::(anonymous namespace)::BlockOnThreadExecutor(tensorflow::thread::ThreadPool*)::{lambda()#1}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<void (), perftools::gputools::Stream::ThenEnqueueOnBackgroundThread(std::function<void (perftools::gputools::StreamExecutor*)>)::{lambda()#1}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<void (), perftools::gputools::host::HostExecutor::CreateStreamDependency(perftools::gputools::Stream*, perftools::gputools::Stream*)::{lambda()#1}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<void (), perftools::gputools::host::HostExecutor::MemZero(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, unsigned long long)::{lambda()#1}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<void (), perftools::gputools::host::HostExecutor::Memcpy(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, void const*, unsigned long long)::{lambda()#1}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<void (), perftools::gputools::host::HostExecutor::Memcpy(perftools::gputools::Stream*, void*, perftools::gputools::DeviceMemoryBase const&, unsigned long long)::{lambda()#1}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<void (), perftools::gputools::host::HostExecutor::MemcpyDeviceToDevice(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, perftools::gputools::DeviceMemoryBase const&, unsigned long long)::{lambda()#1}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<void (), perftools::gputools::host::HostExecutor::Memset(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, unsigned char, unsigned long long)::{lambda()#1}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<void (), perftools::gputools::host::HostExecutor::Memset32(perftools::gputools::Stream*, perftools::gputools::DeviceMemoryBase*, unsigned int, unsigned long long)::{lambda()#1}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<void (), perftools::gputools::host::HostStream::EnqueueTask(std::function<void ()>)::{lambda()#1}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<void (), perftools::gputools::host::HostTimer::Start(perftools::gputools::Stream*)::{lambda()#1}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<void (), perftools::gputools::host::HostTimer::Stop(perftools::gputools::Stream*)::{lambda()#1}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<void (), std::_Bind<std::_Mem_fn<void (tensorflow::(anonymous namespace)::ExecutorState::*)(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long)> (tensorflow::(anonymous namespace)::ExecutorState*, tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long)> >::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<void (), tensorflow::(anonymous namespace)::ExecutorState::Finish()::{lambda()#1}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<void (), tensorflow::(anonymous namespace)::ExecutorState::Process(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long)::{lambda()#1}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<void (), tensorflow::(anonymous namespace)::ExecutorState::ScheduleReady(tensorflow::gtl::InlinedVector<tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, 8> const&, tensorflow::(anonymous namespace)::ExecutorState::TaggedNodeReadyQueue*)::{lambda()#1}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<void (), tensorflow::(anonymous namespace)::ForEach(int, int, std::function<void (int)> const&)::{lambda()#1}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<void (), tensorflow::(anonymous namespace)::PosixEnv::SchedClosureAfter(long long, std::function<void ()>)::{lambda()#1}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<void (), tensorflow::AsyncOpKernel::Compute(tensorflow::OpKernelContext*)::{lambda()#1}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<void (), tensorflow::EventMgr::StartPollingLoop()::{lambda()#1}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<void (), tensorflow::GPUUtil::CopyCPUTensorToGPU(tensorflow::Tensor const*, tensorflow::DeviceContext const*, tensorflow::Device*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda()#1}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<void (), tensorflow::GPUUtil::CopyGPUTensorToCPU(tensorflow::Device*, tensorflow::DeviceContext const*, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda()#1}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<void (), tensorflow::GPUUtil::DeviceToDeviceCopy(tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda()#1}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<void (), tensorflow::GPUUtil::SetProtoFromGPU(tensorflow::Tensor const&, tensorflow::Device*, tensorflow::DeviceContext const*, tensorflow::TensorProto*, bool, std::function<void (tensorflow::Status const&)>)::{lambda()#1}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<void (), tensorflow::Shard(int, tensorflow::thread::ThreadPool*, long long, long long, std::function<void (long long, long long)>)::{lambda()#1}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<void (), tensorflow::example::(anonymous namespace)::ParallelFor(std::function<void (unsigned long)> const&, unsigned long, tensorflow::thread::ThreadPool*)::{lambda()#1}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<void (), tensorflow::grappler::ExecuteWithTimeout(std::function<void ()>, long long, tensorflow::thread::ThreadPool*)::{lambda()#1}>::_M_invoke(std::_Any_data const&)
 t std::_Function_handler<void (int), tensorflow::FileSystem::GetMatchingPaths(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*)::{lambda(int)#1}>::_M_invoke(std::_Any_data const&, int&&)
 t std::_Function_handler<void (long long, long long), tensorflow::thread::ThreadPool::ParallelForWithWorkerId(long long, long long, std::function<void (long long, long long, int)> const&)::{lambda(long long, long long)#1}>::_M_invoke(std::_Any_data const&, long long&&, std::_Any_data const&)
 t std::_Function_handler<void (std::function<void ()>), tensorflow::GraphRunner::Run(tensorflow::Graph*, tensorflow::FunctionLibraryRuntime*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*)::{lambda(std::function<void ()>)#1}>::_M_invoke(std::_Any_data const&, std::function<void ()>&&)
 t std::_Function_handler<void (tensorflow::Node*), tensorflow::(anonymous namespace)::FindConstantFoldableNodes(tensorflow::Graph const*, tensorflow::ConstantFoldingOptions const&, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> >*, std::unordered_map<tensorflow::Node const*, tensorflow::gtl::FlatSet<tensorflow::Node*, tensorflow::hash<tensorflow::Node*>, std::equal_to<tensorflow::Node*> >, std::hash<tensorflow::Node const*>, std::equal_to<tensorflow::Node const*>, std::allocator<std::pair<tensorflow::Node const* const, tensorflow::gtl::FlatSet<tensorflow::Node*, tensorflow::hash<tensorflow::Node*>, std::equal_to<tensorflow::Node*> > > > >*, std::unordered_map<tensorflow::Node const*, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >, std::hash<tensorflow::Node const*>, std::equal_to<tensorflow::Node const*>, std::allocator<std::pair<tensorflow::Node const* const, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> > > > >*)::{lambda(tensorflow::Node*)#1}>::_M_invoke(std::_Any_data const&, tensorflow::Node*&&)
 t std::_Function_handler<void (tensorflow::Node*), tensorflow::(anonymous namespace)::OptimizeControlFlowColocation(tensorflow::Graph*)::{lambda(tensorflow::Node*)#1}>::_M_invoke(std::_Any_data const&, tensorflow::Node*&&)
 t std::_Function_handler<void (tensorflow::Node*), tensorflow::GetPostOrder(tensorflow::Graph const&, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> >*, std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> const&)::{lambda(tensorflow::Node*)#1}>::_M_invoke(std::_Any_data const&, tensorflow::Node*&&)
 t std::_Function_handler<void (tensorflow::Node*), tensorflow::ShapeRefiner::InferShapesForFunction(tensorflow::FunctionDef const*, bool, tensorflow::ExtendedInferenceContext*)::{lambda(tensorflow::Node const*)#2}>::_M_invoke(std::_Any_data const&, tensorflow::Node*&&)
 t std::_Function_handler<void (tensorflow::Node*), tensorflow::ToGraphDef(tensorflow::Graph const*, tensorflow::GraphDef*, bool)::{lambda(tensorflow::Node*)#1}>::_M_invoke(std::_Any_data const&, tensorflow::Node*&&)
 t std::_Function_handler<void (tensorflow::OpKernel*), tensorflow::FunctionLibraryRuntimeImpl::CreateItem(unsigned long long, tensorflow::FunctionLibraryRuntimeImpl::Item**)::{lambda(tensorflow::OpKernel*)#1}>::_M_invoke(std::_Any_data const&, tensorflow::OpKernel*&&)
 t std::_Function_handler<void (tensorflow::OpKernel*), tensorflow::GraphRunner::Run(tensorflow::Graph*, tensorflow::FunctionLibraryRuntime*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*)::{lambda(tensorflow::OpKernel*)#3}>::_M_invoke(std::_Any_data const&, tensorflow::OpKernel*&&)
 t std::_Function_handler<void (tensorflow::Status const&), std::_Bind<tensorflow::CopyTensor::ViaDMA(tensorflow::StringPiece, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status const&)#1} (std::function<void (tensorflow::Status const&)>, std::_Placeholder<1>)> >::_M_invoke(std::_Any_data const&, tensorflow::Status const&)
 t std::_Function_handler<void (tensorflow::Status const&), std::_Bind<tensorflow::CopyTensor::ViaDMA(tensorflow::StringPiece, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status)#2} (std::function<void (tensorflow::Status const&)>, std::_Placeholder<1>)> >::_M_invoke(std::_Any_data const&, tensorflow::Status const&)
 t std::_Function_handler<void (tensorflow::Status const&), std::_Bind<tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::CallFrameInterface*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status const&)#1} (std::function<void (tensorflow::Status const&)>, std::_Placeholder<1>)> >::_M_invoke(std::_Any_data const&, tensorflow::Status const&)
 t std::_Function_handler<void (tensorflow::Status const&), std::_Bind<tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::CallFrameInterface*, std::function<void (tensorflow::Status const&)>)::{lambda(std::function<void (tensorflow::Status const&)>, tensorflow::Status const&)#2} (std::function<void (tensorflow::Status const&)>, std::_Placeholder<1>)> >::_M_invoke(std::_Any_data const&, tensorflow::Status const&)
 t std::_Function_handler<void (tensorflow::Status const&), tensorflow::(anonymous namespace)::CopyDeviceToDevice(void (*)(tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>), tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}>::_M_invoke(std::_Any_data const&, tensorflow::Status const&)
 t std::_Function_handler<void (tensorflow::Status const&), tensorflow::(anonymous namespace)::CopyDeviceToHost(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}>::_M_invoke(std::_Any_data const&, tensorflow::Status const&)
 t std::_Function_handler<void (tensorflow::Status const&), tensorflow::(anonymous namespace)::CopyHostToDevice(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}>::_M_invoke(std::_Any_data const&, tensorflow::Status const&)
 t std::_Function_handler<void (tensorflow::Status const&), tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::gtl::ArraySlice<tensorflow::Tensor>, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}>::_M_invoke(std::_Any_data const&, tensorflow::Status const&)
 t std::_Function_handler<void (tensorflow::Status const&), tensorflow::FunctionLibraryRuntimeImpl::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::gtl::ArraySlice<tensorflow::Tensor>, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#2}>::_M_invoke(std::_Any_data const&, tensorflow::Status const&)
 t std::_Function_handler<void (tensorflow::Status const&), tensorflow::FunctionLibraryRuntimeImpl::RunRemote(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::gtl::ArraySlice<tensorflow::Tensor>, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, tensorflow::Executor::Args*, tensorflow::FunctionLibraryRuntimeImpl::Item*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}::operator()(tensorflow::Status const&) const::{lambda(tensorflow::Status const&)#1}>::_M_invoke(std::_Any_data const&, tensorflow::Status const&)
 t std::_Function_handler<void (tensorflow::Status const&), tensorflow::FunctionLibraryRuntimeImpl::RunRemote(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::gtl::ArraySlice<tensorflow::Tensor>, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, tensorflow::Executor::Args*, tensorflow::FunctionLibraryRuntimeImpl::Item*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}>::_M_invoke(std::_Any_data const&, tensorflow::Status const&)
 t std::_Function_handler<void (tensorflow::Status const&), tensorflow::GPUUtil::Checksum(tensorflow::Device*, tensorflow::DeviceContext const*, tensorflow::Tensor const&)::{lambda(tensorflow::Status)#1}>::_M_invoke(std::_Any_data const&, tensorflow::Status const&)
 t std::_Function_handler<void (tensorflow::Status const&), tensorflow::IntraProcessRendezvous::RecvAsync(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, std::function<void (tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)>)::{lambda(tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)#1}::operator()(tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool) const::{lambda(tensorflow::Status const&)#1}>::_M_invoke(std::_Any_data const&, tensorflow::Status const&)
 t std::_Function_handler<void (tensorflow::Status const&), tensorflow::ProcessFunctionLibraryRuntime::ReceiveTensorsAsync(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long long, long long, tensorflow::DeviceContext*, std::vector<tensorflow::AllocatorAttributes, std::allocator<tensorflow::AllocatorAttributes> > const&, tensorflow::Rendezvous*, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::function<void (tensorflow::Status const&)> const&)::{lambda(tensorflow::Status const&)#1}>::_M_invoke(std::_Any_data const&, tensorflow::Status const&)
 t std::_Function_handler<void (tensorflow::Status const&), tensorflow::ProcessFunctionLibraryRuntime::Run(tensorflow::FunctionLibraryRuntime::Options const&, unsigned long long, tensorflow::gtl::ArraySlice<tensorflow::Tensor>, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::function<void (tensorflow::Status const&)>)::{lambda(tensorflow::Status const&)#1}>::_M_invoke(std::_Any_data const&, tensorflow::Status const&)
 t std::_Function_handler<void (tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool), tensorflow::IntraProcessRendezvous::RecvAsync(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, std::function<void (tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)>)::{lambda(tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)#1}>::_M_invoke(std::_Any_data const&, tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool&&)
 t std::_Function_handler<void (tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool), tensorflow::RecvOutputsFromRendezvousAsync(tensorflow::Rendezvous*, tensorflow::DeviceContext*, std::vector<tensorflow::AllocatorAttributes, std::allocator<tensorflow::AllocatorAttributes> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::function<void (tensorflow::Status const&)> const&)::{lambda(tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)#1}>::_M_invoke(std::_Any_data const&, tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool&&)
 t std::_Function_handler<void (tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool), tensorflow::Rendezvous::Recv(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor*, bool*, long long)::{lambda(tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)#1}>::_M_invoke(std::_Any_data const&, tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool&&)
 t std::_Function_handler<void (unsigned long), tensorflow::example::FastParseExample(tensorflow::example::FastParseExampleConfig const&, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::gtl::ArraySlice<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::thread::ThreadPool*, tensorflow::example::Result*)::{lambda(unsigned long)#3}>::_M_invoke(std::_Any_data const&, unsigned long&&)
 t std::_Function_handler<void* (unsigned long, unsigned long, bool), tensorflow::BFCAllocator::AllocateRaw(unsigned long, unsigned long)::{lambda(unsigned long, unsigned long, bool)#1}>::_M_invoke(std::_Any_data const&, unsigned long&&, std::_Any_data const&, bool&&)
 t std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node(unsigned long, int const&, unsigned long) const [clone .isra.264]
 t std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node(unsigned long, int const&, unsigned long) const [clone .isra.41]
 t std::_Hashtable<int, std::pair<int const, tensorflow::DeviceStepStats const*>, std::allocator<std::pair<int const, tensorflow::DeviceStepStats const*> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, int const&, unsigned long) const [clone .isra.343]
 t std::_Hashtable<re2::DFA::State*, std::pair<re2::DFA::State* const, int>, std::allocator<std::pair<re2::DFA::State* const, int> >, std::__detail::_Select1st, std::equal_to<re2::DFA::State*>, std::hash<re2::DFA::State*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, re2::DFA::State* const&, unsigned long) const [clone .isra.203]
 t std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Identity, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_erase(std::integral_constant<bool, true>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.141]
 t std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::set<tensorflow::NodeDef*, std::less<tensorflow::NodeDef*>, std::allocator<tensorflow::NodeDef*> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::set<tensorflow::NodeDef*, std::less<tensorflow::NodeDef*>, std::allocator<tensorflow::NodeDef*> > > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_erase(std::integral_constant<bool, true>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .isra.266]
 t std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::(anonymous namespace)::ControlLoop>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::(anonymous namespace)::ControlLoop> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 t std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::(anonymous namespace)::FactoryItem>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::(anonymous namespace)::FactoryItem> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const
 t std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::(anonymous namespace)::FactoryItem>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::(anonymous namespace)::FactoryItem> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::(anonymous namespace)::Library>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::(anonymous namespace)::Library> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long) const [clone .constprop.127]
 t std::_Hashtable<std::pair<int, int>, std::pair<std::pair<int, int> const, tensorflow::MemoryType>, std::allocator<std::pair<std::pair<int, int> const, tensorflow::MemoryType> >, std::__detail::_Select1st, std::equal_to<std::pair<int, int> >, tensorflow::(anonymous namespace)::PairIntHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, std::pair<int, int> const&, unsigned long) const
 t std::_Hashtable<std::pair<int, int>, std::pair<std::pair<int, int> const, tensorflow::MemoryType>, std::allocator<std::pair<std::pair<int, int> const, tensorflow::MemoryType> >, std::__detail::_Select1st, std::equal_to<std::pair<int, int> >, tensorflow::(anonymous namespace)::PairIntHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::clear()
 t std::_Hashtable<std::pair<int, int>, std::pair<std::pair<int, int> const, tensorflow::MemoryType>, std::allocator<std::pair<std::pair<int, int> const, tensorflow::MemoryType> >, std::__detail::_Select1st, std::equal_to<std::pair<int, int> >, tensorflow::(anonymous namespace)::PairIntHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(std::pair<int, int> const&) const
 t std::_Hashtable<tensorflow::(anonymous namespace)::DupRecvKey, std::pair<tensorflow::(anonymous namespace)::DupRecvKey const, tensorflow::(anonymous namespace)::RecvInfo>, std::allocator<std::pair<tensorflow::(anonymous namespace)::DupRecvKey const, tensorflow::(anonymous namespace)::RecvInfo> >, std::__detail::_Select1st, tensorflow::(anonymous namespace)::DupRecvKeyEq, tensorflow::(anonymous namespace)::DupRecvKeyHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, tensorflow::(anonymous namespace)::DupRecvKey const&, unsigned long) const [clone .constprop.634]
 t std::_Hashtable<tensorflow::Device*, std::pair<tensorflow::Device* const, std::unique_ptr<tensorflow::FunctionLibraryRuntime, std::default_delete<tensorflow::FunctionLibraryRuntime> > >, std::allocator<std::pair<tensorflow::Device* const, std::unique_ptr<tensorflow::FunctionLibraryRuntime, std::default_delete<tensorflow::FunctionLibraryRuntime> > > >, std::__detail::_Select1st, std::equal_to<tensorflow::Device*>, std::hash<tensorflow::Device*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, tensorflow::Device* const&, unsigned long) const [clone .isra.164]
 t std::_Hashtable<tensorflow::FunctionDef const*, std::pair<tensorflow::FunctionDef const* const, std::unique_ptr<tensorflow::Graph const, std::default_delete<tensorflow::Graph const> > >, std::allocator<std::pair<tensorflow::FunctionDef const* const, std::unique_ptr<tensorflow::Graph const, std::default_delete<tensorflow::Graph const> > > >, std::__detail::_Select1st, std::equal_to<tensorflow::FunctionDef const*>, std::hash<tensorflow::FunctionDef const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, tensorflow::FunctionDef const* const&, unsigned long) const [clone .isra.572]
 t std::_Hashtable<tensorflow::Graph const*, std::pair<tensorflow::Graph const* const, tensorflow::CostModel*>, std::allocator<std::pair<tensorflow::Graph const* const, tensorflow::CostModel*> >, std::__detail::_Select1st, std::equal_to<tensorflow::Graph const*>, std::hash<tensorflow::Graph const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, tensorflow::Graph const* const&, unsigned long) const [clone .isra.108]
 t std::_Hashtable<tensorflow::Node const*, std::pair<tensorflow::Node const* const, std::unique_ptr<tensorflow::ExtendedInferenceContext, std::default_delete<tensorflow::ExtendedInferenceContext> > >, std::allocator<std::pair<tensorflow::Node const* const, std::unique_ptr<tensorflow::ExtendedInferenceContext, std::default_delete<tensorflow::ExtendedInferenceContext> > > >, std::__detail::_Select1st, std::equal_to<tensorflow::Node const*>, std::hash<tensorflow::Node const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_erase(std::integral_constant<bool, true>, tensorflow::Node const* const&) [clone .isra.569]
 t std::_Hashtable<tensorflow::Node const*, std::pair<tensorflow::Node const* const, std::unique_ptr<tensorflow::ExtendedInferenceContext, std::default_delete<tensorflow::ExtendedInferenceContext> > >, std::allocator<std::pair<tensorflow::Node const* const, std::unique_ptr<tensorflow::ExtendedInferenceContext, std::default_delete<tensorflow::ExtendedInferenceContext> > > >, std::__detail::_Select1st, std::equal_to<tensorflow::Node const*>, std::hash<tensorflow::Node const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, tensorflow::Node const* const&, unsigned long) const [clone .isra.567]
 t std::_Hashtable<tensorflow::Node const*, std::pair<tensorflow::Node const* const, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> > >, std::allocator<std::pair<tensorflow::Node const* const, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> > > >, std::__detail::_Select1st, std::equal_to<tensorflow::Node const*>, std::hash<tensorflow::Node const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, tensorflow::Node const* const&, unsigned long) const [clone .isra.311]
 t std::_Hashtable<tensorflow::Node const*, std::pair<tensorflow::Node const* const, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> > >, std::allocator<std::pair<tensorflow::Node const* const, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> > > >, std::__detail::_Select1st, std::equal_to<tensorflow::Node const*>, std::hash<tensorflow::Node const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::count(tensorflow::Node const* const&) const [clone .isra.313]
 t std::_Hashtable<tensorflow::Node const*, std::pair<tensorflow::Node const* const, tensorflow::gtl::FlatSet<tensorflow::Node*, tensorflow::hash<tensorflow::Node*>, std::equal_to<tensorflow::Node*> > >, std::allocator<std::pair<tensorflow::Node const* const, tensorflow::gtl::FlatSet<tensorflow::Node*, tensorflow::hash<tensorflow::Node*>, std::equal_to<tensorflow::Node*> > > >, std::__detail::_Select1st, std::equal_to<tensorflow::Node const*>, std::hash<tensorflow::Node const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::count(tensorflow::Node const* const&) const [clone .isra.305]
 t std::_Hashtable<tensorflow::Node*, std::pair<tensorflow::Node* const, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> > >, std::allocator<std::pair<tensorflow::Node* const, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> > > >, std::__detail::_Select1st, std::equal_to<tensorflow::Node*>, std::hash<tensorflow::Node*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, tensorflow::Node* const&, unsigned long) const [clone .isra.325]
 t std::_Hashtable<tensorflow::Node*, tensorflow::Node*, std::allocator<tensorflow::Node*>, std::__detail::_Identity, std::equal_to<tensorflow::Node*>, std::hash<tensorflow::Node*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node(unsigned long, tensorflow::Node* const&, unsigned long) const [clone .isra.268]
 t std::_Hashtable<tensorflow::NodeDef*, std::pair<tensorflow::NodeDef* const, int>, std::allocator<std::pair<tensorflow::NodeDef* const, int> >, std::__detail::_Select1st, std::equal_to<tensorflow::NodeDef*>, std::hash<tensorflow::NodeDef*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, tensorflow::NodeDef* const&, unsigned long) const [clone .isra.308]
 t std::_Hashtable<tensorflow::StringPiece, std::pair<tensorflow::StringPiece const, tensorflow::(anonymous namespace)::GraphConstructor::NodeInfo>, std::allocator<std::pair<tensorflow::StringPiece const, tensorflow::(anonymous namespace)::GraphConstructor::NodeInfo> >, std::__detail::_Select1st, std::equal_to<tensorflow::StringPiece>, tensorflow::StringPieceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, tensorflow::StringPiece const&, unsigned long) const [clone .constprop.686]
 t std::_Hashtable<tensorflow::StringPiece, std::pair<tensorflow::StringPiece const, tensorflow::(anonymous namespace)::GraphConstructor::NodeInfo>, std::allocator<std::pair<tensorflow::StringPiece const, tensorflow::(anonymous namespace)::GraphConstructor::NodeInfo> >, std::__detail::_Select1st, std::equal_to<tensorflow::StringPiece>, tensorflow::StringPieceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<tensorflow::StringPiece const, tensorflow::(anonymous namespace)::GraphConstructor::NodeInfo>, true>*) [clone .constprop.677]
 t std::_Hashtable<tensorflow::StringPiece, std::pair<tensorflow::StringPiece const, tensorflow::(anonymous namespace)::GraphConstructor::NodeInfo>, std::allocator<std::pair<tensorflow::StringPiece const, tensorflow::(anonymous namespace)::GraphConstructor::NodeInfo> >, std::__detail::_Select1st, std::equal_to<tensorflow::StringPiece>, tensorflow::StringPieceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(tensorflow::StringPiece const&) [clone .constprop.685]
 t std::_Hashtable<tensorflow::StringPiece, std::pair<tensorflow::StringPiece const, tensorflow::StepStatsCollector::BuildCostModel(tensorflow::CostModelManager*, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Graph const*, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Graph const*> > > const&)::DeviceStats>, std::allocator<std::pair<tensorflow::StringPiece const, tensorflow::StepStatsCollector::BuildCostModel(tensorflow::CostModelManager*, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Graph const*, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Graph const*> > > const&)::DeviceStats> >, std::__detail::_Select1st, std::equal_to<tensorflow::StringPiece>, tensorflow::StringPieceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_find_before_node(unsigned long, tensorflow::StringPiece const&, unsigned long) const
 t std::_Hashtable<tensorflow::StringPiece, std::pair<tensorflow::StringPiece const, tensorflow::StepStatsCollector::BuildCostModel(tensorflow::CostModelManager*, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Graph const*, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Graph const*> > > const&)::DeviceStats>, std::allocator<std::pair<tensorflow::StringPiece const, tensorflow::StepStatsCollector::BuildCostModel(tensorflow::CostModelManager*, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Graph const*, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Graph const*> > > const&)::DeviceStats> >, std::__detail::_Select1st, std::equal_to<tensorflow::StringPiece>, tensorflow::StringPieceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::find(tensorflow::StringPiece const&)
 t std::_Hashtable<unsigned long long, std::pair<unsigned long long const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<unsigned long long const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::__detail::_Select1st, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, unsigned long long const&, unsigned long) const [clone .isra.199]
 t std::_Hashtable<unsigned long long, std::pair<unsigned long long const, tensorflow::FunctionLibraryRuntimeImpl::Item*>, std::allocator<std::pair<unsigned long long const, tensorflow::FunctionLibraryRuntimeImpl::Item*> >, std::__detail::_Select1st, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, unsigned long long const&, unsigned long) const [clone .isra.396]
 t std::_Hashtable<unsigned long long, std::pair<unsigned long long const, tensorflow::FunctionLibraryRuntimeImpl::Item*>, std::allocator<std::pair<unsigned long long const, tensorflow::FunctionLibraryRuntimeImpl::Item*> >, std::__detail::_Select1st, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::count(unsigned long long const&) const [clone .isra.394] [clone .constprop.468]
 t std::_Hashtable<unsigned long long, std::pair<unsigned long long const, tensorflow::ProcessFunctionLibraryRuntime::FunctionData>, std::allocator<std::pair<unsigned long long const, tensorflow::ProcessFunctionLibraryRuntime::FunctionData> >, std::__detail::_Select1st, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, unsigned long long const&, unsigned long) const [clone .isra.157]
 t std::_Hashtable<unsigned long long, std::pair<unsigned long long const, tensorflow::ProcessFunctionLibraryRuntime::FunctionData>, std::allocator<std::pair<unsigned long long const, tensorflow::ProcessFunctionLibraryRuntime::FunctionData> >, std::__detail::_Select1st, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::count(unsigned long long const&) const [clone .isra.155]
 t std::_Hashtable<unsigned long, std::pair<unsigned long const, int>, std::allocator<std::pair<unsigned long const, int> >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, unsigned long const&, unsigned long) const [clone .isra.103]
 t std::_Hashtable<void*, std::pair<void* const, tensorflow::TrackingAllocator::Chunk>, std::allocator<std::pair<void* const, tensorflow::TrackingAllocator::Chunk> >, std::__detail::_Select1st, std::equal_to<void*>, std::hash<void*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, void* const&, unsigned long) const [clone .isra.65]
 t std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::(anonymous namespace)::FunctionInstantiationHelper::NameInfoItem>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::(anonymous namespace)::FunctionInstantiationHelper::NameInfoItem> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::(anonymous namespace)::FunctionInstantiationHelper::NameInfoItem> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::(anonymous namespace)::FunctionInstantiationHelper::NameInfoItem> >*) [clone .constprop.594]
 t std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::(anonymous namespace)::FunctionInstantiationHelper::NameInfoItem>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::(anonymous namespace)::FunctionInstantiationHelper::NameInfoItem> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::(anonymous namespace)::FunctionInstantiationHelper::NameInfoItem> > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const [clone .constprop.605]
 t std::_Rb_tree<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::pair<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, tensorflow::(anonymous namespace)::AllocStats>, std::_Select1st<std::pair<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, tensorflow::(anonymous namespace)::AllocStats> >, std::less<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::pair<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, tensorflow::(anonymous namespace)::AllocStats> > >::_M_erase(std::_Rb_tree_node<std::pair<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, tensorflow::(anonymous namespace)::AllocStats> >*)
 t std::_Rb_tree<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::pair<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, tensorflow::(anonymous namespace)::AllocStats>, std::_Select1st<std::pair<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, tensorflow::(anonymous namespace)::AllocStats> >, std::less<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::pair<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, tensorflow::(anonymous namespace)::AllocStats> > >::_M_get_insert_unique_pos(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&)
 t std::_Rb_tree<tensorflow::Node*, std::pair<tensorflow::Node* const, tensorflow::ShapeRefiner::ExtractConstantSubgraph(tensorflow::Node*, tensorflow::Graph*, bool*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > >*)::NodeAndRecursed>, std::_Select1st<std::pair<tensorflow::Node* const, tensorflow::ShapeRefiner::ExtractConstantSubgraph(tensorflow::Node*, tensorflow::Graph*, bool*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > >*)::NodeAndRecursed> >, std::less<tensorflow::Node*>, std::allocator<std::pair<tensorflow::Node* const, tensorflow::ShapeRefiner::ExtractConstantSubgraph(tensorflow::Node*, tensorflow::Graph*, bool*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > >*)::NodeAndRecursed> > >::_M_erase(std::_Rb_tree_node<std::pair<tensorflow::Node* const, tensorflow::ShapeRefiner::ExtractConstantSubgraph(tensorflow::Node*, tensorflow::Graph*, bool*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > >*)::NodeAndRecursed> >*)
 t std::_Rb_tree<tensorflow::Node*, std::pair<tensorflow::Node* const, tensorflow::ShapeRefiner::ExtractConstantSubgraph(tensorflow::Node*, tensorflow::Graph*, bool*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > >*)::NodeAndRecursed>, std::_Select1st<std::pair<tensorflow::Node* const, tensorflow::ShapeRefiner::ExtractConstantSubgraph(tensorflow::Node*, tensorflow::Graph*, bool*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > >*)::NodeAndRecursed> >, std::less<tensorflow::Node*>, std::allocator<std::pair<tensorflow::Node* const, tensorflow::ShapeRefiner::ExtractConstantSubgraph(tensorflow::Node*, tensorflow::Graph*, bool*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > >*)::NodeAndRecursed> > >::_M_get_insert_unique_pos(tensorflow::Node* const&)
 t std::_Rb_tree_iterator<int> std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_<int&, std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node>(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, int&, std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node&) [clone .isra.931]
 t std::_Rb_tree_iterator<int> std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_<int, std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node>(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, int&&, std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node&) [clone .isra.934]
 t std::_Rb_tree_iterator<int> std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique_<int const&, std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node>(std::_Rb_tree_const_iterator<int>, int const&, std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node&) [clone .isra.620]
 t std::_Rb_tree_iterator<int> std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_M_insert_unique_<int&, std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node>(std::_Rb_tree_const_iterator<int>, int&, std::_Rb_tree<int, int, std::_Identity<int>, std::less<int>, std::allocator<int> >::_Alloc_node&) [clone .isra.932]
 t std::_Rb_tree_iterator<std::pair<tensorflow::Node* const, tensorflow::ShapeRefiner::ExtractConstantSubgraph(tensorflow::Node*, tensorflow::Graph*, bool*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > >*)::NodeAndRecursed> > std::_Rb_tree<tensorflow::Node*, std::pair<tensorflow::Node* const, tensorflow::ShapeRefiner::ExtractConstantSubgraph(tensorflow::Node*, tensorflow::Graph*, bool*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > >*)::NodeAndRecursed>, std::_Select1st<std::pair<tensorflow::Node* const, tensorflow::ShapeRefiner::ExtractConstantSubgraph(tensorflow::Node*, tensorflow::Graph*, bool*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > >*)::NodeAndRecursed> >, std::less<tensorflow::Node*>, std::allocator<std::pair<tensorflow::Node* const, tensorflow::ShapeRefiner::ExtractConstantSubgraph(tensorflow::Node*, tensorflow::Graph*, bool*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > >*)::NodeAndRecursed> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<tensorflow::Node* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<tensorflow::Node* const, tensorflow::ShapeRefiner::ExtractConstantSubgraph(tensorflow::Node*, tensorflow::Graph*, bool*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Tensor> > >*)::NodeAndRecursed> >, std::piecewise_construct_t const&, std::tuple<tensorflow::Node* const&>&&, std::tuple<>&&) [clone .isra.550]
 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > perftools::gputools::(anonymous namespace)::ToVlogString<double>(std::complex<double> const&)
 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > perftools::gputools::(anonymous namespace)::ToVlogString<float>(std::complex<float> const&)
 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > perftools::gputools::(anonymous namespace)::ToVlogString<perftools::gputools::DeviceMemory<double>*>(tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<double>*>)
 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > perftools::gputools::(anonymous namespace)::ToVlogString<perftools::gputools::DeviceMemory<float> const*>(tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<float> const*>)
 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > perftools::gputools::(anonymous namespace)::ToVlogString<perftools::gputools::DeviceMemory<float>*>(tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<float>*>)
 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > perftools::gputools::(anonymous namespace)::ToVlogString<perftools::gputools::DeviceMemory<std::complex<double> >*>(tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<std::complex<double> >*>)
 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > perftools::gputools::(anonymous namespace)::ToVlogString<perftools::gputools::DeviceMemory<std::complex<float> >*>(tensorflow::gtl::ArraySlice<perftools::gputools::DeviceMemory<std::complex<float> >*>)
 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > perftools::gputools::(anonymous namespace)::ToVlogString<perftools::gputools::dnn::BatchDescriptor>(tensorflow::gtl::ArraySlice<perftools::gputools::dnn::BatchDescriptor>)
 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::transform<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const* const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, tensorflow::FeatureDenseCopy(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::DataType const&, tensorflow::TensorShape const&, tensorflow::Feature const&, tensorflow::Tensor*)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*)#1}>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const* const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, tensorflow::FeatureDenseCopy(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::DataType const&, tensorflow::TensorShape const&, tensorflow::Feature const&, tensorflow::Tensor*)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*)#1}, tensorflow::FeatureDenseCopy(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::DataType const&, tensorflow::TensorShape const&, tensorflow::Feature const&, tensorflow::Tensor*)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*)#1}) [clone .isra.110]
 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::transform<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const* const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, tensorflow::FeatureSparseCopy(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::DataType const&, tensorflow::Feature const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*)#1}>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const* const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, tensorflow::FeatureSparseCopy(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::DataType const&, tensorflow::Feature const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*)#1}, tensorflow::FeatureSparseCopy(unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::DataType const&, tensorflow::Feature const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*)#1}) [clone .isra.112]
 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*& tensorflow::internal::CheckNotNull<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*&>(char const*, int, char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*&) [clone .part.64] [clone .constprop.66]
 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.114]
 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.171]
 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.173]
 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.188]
 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.209]
 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.29]
 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.389]
 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.409]
 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.43]
 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.77]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_allocate_buckets(unsigned long) [clone .isra.257]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<re2::DFA::State*, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.208]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.116]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.141]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.169]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.195]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.206]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.221]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.293]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.588]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.609]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.889]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.90]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<char const* const, void (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.165]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, tensorflow::DeviceStepStats const*>, false> > >::_M_allocate_buckets(unsigned long) [clone .isra.324]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<int const, tensorflow::io::InputBuffer*>, false> > >::_M_allocate_buckets(unsigned long) [clone .isra.561]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<re2::DFA::State* const, int>, false> > >::_M_allocate_buckets(unsigned long) [clone .isra.209]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, double>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.96]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.97]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.136]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.142]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.292]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.350]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.353]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.559]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.264]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.535]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.611]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::function<tensorflow::Status (tensorflow::AttrSlice const&, tensorflow::FunctionDef*)> >, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.537]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<int, int> >, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.186]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<int, int> >, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.337]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::set<tensorflow::NodeDef*, std::less<tensorflow::NodeDef*>, std::allocator<tensorflow::NodeDef*> > >, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.347]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::ExtendedInferenceContext, std::default_delete<tensorflow::ExtendedInferenceContext> > >, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.582]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::ExtendedInferenceContext, std::default_delete<tensorflow::ExtendedInferenceContext> > >, true> > >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::ExtendedInferenceContext, std::default_delete<tensorflow::ExtendedInferenceContext> > >, true>*) [clone .isra.460]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<tensorflow::FileSystem, std::default_delete<tensorflow::FileSystem> > >, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.161]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unordered_map<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, tensorflow::ResourceBase*, tensorflow::ResourceMgr::KeyHash, tensorflow::ResourceMgr::KeyEqual, std::allocator<std::pair<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, tensorflow::ResourceBase*> > >*>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.206]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unordered_map<tensorflow::NodeDef*, int, std::hash<tensorflow::NodeDef*>, std::equal_to<tensorflow::NodeDef*>, std::allocator<std::pair<tensorflow::NodeDef* const, int> > > >, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.349]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.163]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<std::unique_ptr<tensorflow::NodeExecStatsWrapper, std::default_delete<tensorflow::NodeExecStatsWrapper> >, std::allocator<std::unique_ptr<tensorflow::NodeExecStatsWrapper, std::default_delete<tensorflow::NodeExecStatsWrapper> > > > >, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.307]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<tensorflow::NodeDef const*, std::allocator<tensorflow::NodeDef const*> > >, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.563]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::(anonymous namespace)::ControlLoop>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.570]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::(anonymous namespace)::Library>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.118]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::AttrValue>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.192]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::DataType>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.357]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::GraphDef>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.582]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::KernelRegistration>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.190]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Node*>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.219]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Node*>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.568]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Node::NodeClass>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.294]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef const*>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.167]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef const*>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.208]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef const*>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.584]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeDef*>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.346]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::NodeExecStats>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.303]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.335]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpKernel*>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.88]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpSegment::Item*>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.90]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Status>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.165]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Tensor>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.586]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Tensor>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.82]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::TensorShape>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.355]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::TensorStore::TensorAndKey>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.83]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::checkpoint::TensorSliceSet*>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.147]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::checkpoint::TensorSliceSet::SliceInfo>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.145]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long long>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.174]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::pair<int, int> const, tensorflow::MemoryType>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.573]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::pair<tensorflow::VariantDeviceCopyDirection, tensorflow::StringPiece> const, std::function<tensorflow::Status (tensorflow::Variant const&, tensorflow::Variant*, std::function<tensorflow::Status (tensorflow::Tensor const&, tensorflow::Tensor*)>)> >, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.299]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::pair<unsigned long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const, tensorflow::ResourceBase*>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.208]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<tensorflow::(anonymous namespace)::DupRecvKey const, tensorflow::(anonymous namespace)::RecvInfo>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.576]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<tensorflow::Device* const, std::unique_ptr<tensorflow::FunctionLibraryRuntime, std::default_delete<tensorflow::FunctionLibraryRuntime> > >, false> > >::_M_allocate_buckets(unsigned long) [clone .isra.169]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<tensorflow::Endpoint const, tensorflow::MemoryType>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.160]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<tensorflow::Endpoint const, tensorflow::Node*>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.162]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<tensorflow::FunctionDef const* const, std::unique_ptr<tensorflow::Graph const, std::default_delete<tensorflow::Graph const> > >, false> > >::_M_allocate_buckets(unsigned long) [clone .isra.577]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<tensorflow::Node const* const, std::unique_ptr<tensorflow::ExtendedInferenceContext, std::default_delete<tensorflow::ExtendedInferenceContext> > >, false> > >::_M_allocate_buckets(unsigned long) [clone .isra.580]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<tensorflow::Node const* const, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> > >, false> > >::_M_allocate_buckets(unsigned long) [clone .isra.342]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<tensorflow::Node const* const, tensorflow::gtl::FlatSet<tensorflow::Node*, tensorflow::hash<tensorflow::Node*>, std::equal_to<tensorflow::Node*> > >, false> > >::_M_allocate_buckets(unsigned long) [clone .isra.347]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<tensorflow::Node* const, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> > >, false> > >::_M_allocate_buckets(unsigned long) [clone .isra.345]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<tensorflow::Node* const, tensorflow::Node*>, false> > >::_M_allocate_buckets(unsigned long) [clone .isra.613]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<tensorflow::NodeDef const* const, int>, false> > >::_M_allocate_buckets(unsigned long) [clone .isra.567]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<tensorflow::NodeDef const* const, long long>, false> > >::_M_allocate_buckets(unsigned long) [clone .isra.565]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<tensorflow::NodeDef* const, int>, false> > >::_M_allocate_buckets(unsigned long) [clone .isra.348]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<tensorflow::NodeOut const, std::vector<tensorflow::NodeOut, std::allocator<tensorflow::NodeOut> > >, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.259]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<tensorflow::StringPiece const, std::function<bool (tensorflow::Variant*)> >, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.297]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<tensorflow::StringPiece const, std::function<tensorflow::Status (tensorflow::Variant const&, tensorflow::TensorShape*)> >, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.295]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<tensorflow::StringPiece const, tensorflow::(anonymous namespace)::GraphConstructor::NodeInfo>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.605]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<tensorflow::StringPiece const, tensorflow::Device*>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.134]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<tensorflow::StringPiece const, tensorflow::Node const*>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.262]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<tensorflow::StringPiece const, tensorflow::Node*>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.178]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<tensorflow::StringPiece const, tensorflow::Node*>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.305]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<tensorflow::StringPiece const, tensorflow::Node*>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.601]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<tensorflow::StringPiece const, tensorflow::StepStatsCollector::BuildCostModel(tensorflow::CostModelManager*, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::Graph const*, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::Graph const*> > > const&)::DeviceStats>, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.231]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned long long const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, false> > >::_M_allocate_buckets(unsigned long) [clone .isra.204]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned long long const, tensorflow::FunctionLibraryRuntimeImpl::Item*>, false> > >::_M_allocate_buckets(unsigned long) [clone .isra.434]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<unsigned long long const, tensorflow::ProcessFunctionLibraryRuntime::FunctionData>, false> > >::_M_allocate_buckets(unsigned long) [clone .isra.171]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<tensorflow::Node const*, false> > >::_M_allocate_buckets(unsigned long) [clone .isra.180]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<tensorflow::Node const*, false> > >::_M_allocate_buckets(unsigned long) [clone .isra.437]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<tensorflow::Node const*, false> > >::_M_allocate_buckets(unsigned long) [clone .isra.579]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<tensorflow::Node*, false> > >::_M_allocate_buckets(unsigned long) [clone .isra.258]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<tensorflow::NodeDef const*, false> > >::_M_allocate_buckets(unsigned long) [clone .isra.207]
 t std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<tensorflow::StringPiece, true> > >::_M_allocate_buckets(unsigned long) [clone .isra.603]
 t std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::(anonymous namespace)::ControlLoop>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::(anonymous namespace)::ControlLoop> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::(anonymous namespace)::Library>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::(anonymous namespace)::Library> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&) [clone .constprop.126]
 t std::__detail::_Map_base<std::pair<int, int>, std::pair<std::pair<int, int> const, tensorflow::MemoryType>, std::allocator<std::pair<std::pair<int, int> const, tensorflow::MemoryType> >, std::__detail::_Select1st, std::equal_to<std::pair<int, int> >, tensorflow::(anonymous namespace)::PairIntHash, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](std::pair<int, int>&&)
 t std::__detail::_Map_base<tensorflow::StringPiece, std::pair<tensorflow::StringPiece const, tensorflow::(anonymous namespace)::GraphConstructor::NodeInfo>, std::allocator<std::pair<tensorflow::StringPiece const, tensorflow::(anonymous namespace)::GraphConstructor::NodeInfo> >, std::__detail::_Select1st, std::equal_to<tensorflow::StringPiece>, tensorflow::StringPieceHasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>::operator[](tensorflow::StringPiece&&) [clone .constprop.676]
 t std::basic_ostream<char, std::char_traits<char> >& std::operator<< <std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*) [clone .part.3] [clone .constprop.11]
 t std::default_delete<tensorflow::Status::State>::operator()(tensorflow::Status::State*) const [clone .isra.106]
 t std::default_delete<tensorflow::Status::State>::operator()(tensorflow::Status::State*) const [clone .isra.109]
 t std::default_delete<tensorflow::Status::State>::operator()(tensorflow::Status::State*) const [clone .isra.120]
 t std::default_delete<tensorflow::Status::State>::operator()(tensorflow::Status::State*) const [clone .isra.132]
 t std::default_delete<tensorflow::Status::State>::operator()(tensorflow::Status::State*) const [clone .isra.140]
 t std::default_delete<tensorflow::Status::State>::operator()(tensorflow::Status::State*) const [clone .isra.155]
 t std::default_delete<tensorflow::Status::State>::operator()(tensorflow::Status::State*) const [clone .isra.160]
 t std::default_delete<tensorflow::Status::State>::operator()(tensorflow::Status::State*) const [clone .isra.17]
 t std::default_delete<tensorflow::Status::State>::operator()(tensorflow::Status::State*) const [clone .isra.190]
 t std::default_delete<tensorflow::Status::State>::operator()(tensorflow::Status::State*) const [clone .isra.23]
 t std::default_delete<tensorflow::Status::State>::operator()(tensorflow::Status::State*) const [clone .isra.27]
 t std::default_delete<tensorflow::Status::State>::operator()(tensorflow::Status::State*) const [clone .isra.303]
 t std::default_delete<tensorflow::Status::State>::operator()(tensorflow::Status::State*) const [clone .isra.325]
 t std::default_delete<tensorflow::Status::State>::operator()(tensorflow::Status::State*) const [clone .isra.32]
 t std::default_delete<tensorflow::Status::State>::operator()(tensorflow::Status::State*) const [clone .isra.331]
 t std::default_delete<tensorflow::Status::State>::operator()(tensorflow::Status::State*) const [clone .isra.335]
 t std::default_delete<tensorflow::Status::State>::operator()(tensorflow::Status::State*) const [clone .isra.368]
 t std::default_delete<tensorflow::Status::State>::operator()(tensorflow::Status::State*) const [clone .isra.382]
 t std::default_delete<tensorflow::Status::State>::operator()(tensorflow::Status::State*) const [clone .isra.38]
 t std::default_delete<tensorflow::Status::State>::operator()(tensorflow::Status::State*) const [clone .isra.39]
 t std::default_delete<tensorflow::Status::State>::operator()(tensorflow::Status::State*) const [clone .isra.41]
 t std::default_delete<tensorflow::Status::State>::operator()(tensorflow::Status::State*) const [clone .isra.49]
 t std::default_delete<tensorflow::Status::State>::operator()(tensorflow::Status::State*) const [clone .isra.52]
 t std::default_delete<tensorflow::Status::State>::operator()(tensorflow::Status::State*) const [clone .isra.58]
 t std::default_delete<tensorflow::Status::State>::operator()(tensorflow::Status::State*) const [clone .isra.59]
 t std::default_delete<tensorflow::Status::State>::operator()(tensorflow::Status::State*) const [clone .isra.65]
 t std::default_delete<tensorflow::Status::State>::operator()(tensorflow::Status::State*) const [clone .isra.66]
 t std::default_delete<tensorflow::Status::State>::operator()(tensorflow::Status::State*) const [clone .isra.67]
 t std::default_delete<tensorflow::Status::State>::operator()(tensorflow::Status::State*) const [clone .isra.72]
 t std::default_delete<tensorflow::Status::State>::operator()(tensorflow::Status::State*) const [clone .isra.84]
 t std::pair<std::__detail::_Node_iterator<std::pair<tensorflow::Node const* const, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> > >, false, false>, bool> std::_Hashtable<tensorflow::Node const*, std::pair<tensorflow::Node const* const, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> > >, std::allocator<std::pair<tensorflow::Node const* const, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> > > >, std::__detail::_Select1st, std::equal_to<tensorflow::Node const*>, std::hash<tensorflow::Node const*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert<std::pair<tensorflow::Node const* const, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> > > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<tensorflow::Node const* const, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> > >, false> > > >(std::pair<tensorflow::Node const* const, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> > > const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<std::pair<tensorflow::Node const* const, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> > >, false> > > const&, std::integral_constant<bool, true>) [clone .isra.344]
 t std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::(anonymous namespace)::Library, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::(anonymous namespace)::Library> > >::~unordered_map()
 t std::vector<tensorflow::example::(anonymous namespace)::SparseBuffer, std::allocator<tensorflow::example::(anonymous namespace)::SparseBuffer> >::_M_default_append(unsigned long)
 t tcache_create_ctl
 t tcache_destroy
 t tcache_destroy_ctl
 t tcache_flush_ctl
 t tctx_tree_remove
 t tdata_tree_iter_recurse
 t tdata_tree_iter_start
 t tdata_tree_remove.constprop.18
 t tensorflow::(anonymous namespace)::(anonymous namespace)::UpdatePendingCountAndReady(std::vector<tensorflow::gtl::InlinedVector<int, 4>, std::allocator<tensorflow::gtl::InlinedVector<int, 4> > > const&, int, std::vector<int, std::allocator<int> >*, std::vector<int, std::allocator<int> >*) [clone .constprop.674]
 t tensorflow::(anonymous namespace)::AccumulateNV2RemovePass::Run(tensorflow::GraphOptimizationPassOptions const&)
 t tensorflow::(anonymous namespace)::AccumulateNV2RemovePass::rewriteNode(tensorflow::Node*, tensorflow::Graph*) [clone .isra.92] [clone .constprop.94]
 t tensorflow::(anonymous namespace)::AccumulateNV2RemovePass::~AccumulateNV2RemovePass()
 t tensorflow::(anonymous namespace)::AddArgToSig(tensorflow::NodeDef const&, tensorflow::OpDef_ArgDef const&, tensorflow::gtl::InlinedVector<tensorflow::DataType, 4>*) [clone .constprop.349]
 t tensorflow::(anonymous namespace)::AddComma(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool*) [clone .part.38]
 t tensorflow::(anonymous namespace)::AddControlFlow(tensorflow::PartitionOptions const&, tensorflow::Graph*, tensorflow::(anonymous namespace)::GraphInfo*) [clone .constprop.645]
 t tensorflow::(anonymous namespace)::AddControlFlowInfo(tensorflow::Node const*, tensorflow::Node const*, std::vector<tensorflow::ControlFlowInfo, std::allocator<tensorflow::ControlFlowInfo> >*)
 t tensorflow::(anonymous namespace)::AddInput(tensorflow::NodeDef*, tensorflow::StringPiece, int)
 t tensorflow::(anonymous namespace)::AddName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, bool, tensorflow::OpDef_ArgDef const&) [clone .part.39]
 t tensorflow::(anonymous namespace)::AddNodeToTargets(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::unordered_map<tensorflow::StringPiece, tensorflow::Node*, tensorflow::StringPieceHasher, std::equal_to<tensorflow::StringPiece>, std::allocator<std::pair<tensorflow::StringPiece const, tensorflow::Node*> > > const&, std::unordered_set<tensorflow::Node const*, std::hash<tensorflow::Node const*>, std::equal_to<tensorflow::Node const*>, std::allocator<tensorflow::Node const*> >*)
 t tensorflow::(anonymous namespace)::AddPrefixes(tensorflow::StringPiece, std::unordered_set<tensorflow::StringPiece, tensorflow::StringPieceHasher, std::equal_to<tensorflow::StringPiece>, std::allocator<tensorflow::StringPiece> >*)
 t tensorflow::(anonymous namespace)::AddRestoreVariableSubgraphs(tensorflow::Graph*, tensorflow::Node*, std::vector<tensorflow::Edge const*, std::allocator<tensorflow::Edge const*> > const&, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> > const&) [clone .constprop.243]
 t tensorflow::(anonymous namespace)::AllowedStr(tensorflow::OpDef_AttrDef const&)
 t tensorflow::(anonymous namespace)::AllowedStringValue(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpDef_AttrDef const&) [clone .constprop.208]
 t tensorflow::(anonymous namespace)::AllowedTypeValue(tensorflow::DataType, tensorflow::OpDef_AttrDef const&) [clone .constprop.209]
 t tensorflow::(anonymous namespace)::AttrError(tensorflow::StringPiece, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::(anonymous namespace)::Buffer<Eigen::QInt16>::Buffer(tensorflow::Allocator*, long long) [clone .constprop.477]
 t tensorflow::(anonymous namespace)::Buffer<Eigen::QInt16>::data() const
 t tensorflow::(anonymous namespace)::Buffer<Eigen::QInt16>::size() const
 t tensorflow::(anonymous namespace)::Buffer<Eigen::QInt16>::~Buffer()
 t tensorflow::(anonymous namespace)::Buffer<Eigen::QInt32>::Buffer(tensorflow::Allocator*, long long) [clone .constprop.483]
 t tensorflow::(anonymous namespace)::Buffer<Eigen::QInt32>::data() const
 t tensorflow::(anonymous namespace)::Buffer<Eigen::QInt32>::size() const
 t tensorflow::(anonymous namespace)::Buffer<Eigen::QInt32>::~Buffer()
 t tensorflow::(anonymous namespace)::Buffer<Eigen::QInt8>::data() const
 t tensorflow::(anonymous namespace)::Buffer<Eigen::QInt8>::size() const
 t tensorflow::(anonymous namespace)::Buffer<Eigen::QInt8>::~Buffer()
 t tensorflow::(anonymous namespace)::Buffer<Eigen::QUInt16>::Buffer(tensorflow::Allocator*, long long) [clone .constprop.479]
 t tensorflow::(anonymous namespace)::Buffer<Eigen::QUInt16>::data() const
 t tensorflow::(anonymous namespace)::Buffer<Eigen::QUInt16>::size() const
 t tensorflow::(anonymous namespace)::Buffer<Eigen::QUInt16>::~Buffer()
 t tensorflow::(anonymous namespace)::Buffer<Eigen::QUInt8>::data() const
 t tensorflow::(anonymous namespace)::Buffer<Eigen::QUInt8>::size() const
 t tensorflow::(anonymous namespace)::Buffer<Eigen::QUInt8>::~Buffer()
 t tensorflow::(anonymous namespace)::Buffer<Eigen::half>::Buffer(tensorflow::Allocator*, long long) [clone .constprop.473]
 t tensorflow::(anonymous namespace)::Buffer<Eigen::half>::data() const
 t tensorflow::(anonymous namespace)::Buffer<Eigen::half>::size() const
 t tensorflow::(anonymous namespace)::Buffer<Eigen::half>::~Buffer()
 t tensorflow::(anonymous namespace)::Buffer<bool>::data() const
 t tensorflow::(anonymous namespace)::Buffer<bool>::size() const
 t tensorflow::(anonymous namespace)::Buffer<bool>::~Buffer()
 t tensorflow::(anonymous namespace)::Buffer<double>::Buffer(tensorflow::Allocator*, long long) [clone .constprop.505]
 t tensorflow::(anonymous namespace)::Buffer<double>::data() const
 t tensorflow::(anonymous namespace)::Buffer<double>::size() const
 t tensorflow::(anonymous namespace)::Buffer<double>::~Buffer()
 t tensorflow::(anonymous namespace)::Buffer<float>::Buffer(tensorflow::Allocator*, long long) [clone .constprop.507]
 t tensorflow::(anonymous namespace)::Buffer<float>::data() const
 t tensorflow::(anonymous namespace)::Buffer<float>::size() const
 t tensorflow::(anonymous namespace)::Buffer<float>::~Buffer()
 t tensorflow::(anonymous namespace)::Buffer<int>::Buffer(tensorflow::Allocator*, long long) [clone .constprop.503]
 t tensorflow::(anonymous namespace)::Buffer<int>::data() const
 t tensorflow::(anonymous namespace)::Buffer<int>::size() const
 t tensorflow::(anonymous namespace)::Buffer<int>::~Buffer()
 t tensorflow::(anonymous namespace)::Buffer<long long>::Buffer(tensorflow::Allocator*, long long) [clone .constprop.486]
 t tensorflow::(anonymous namespace)::Buffer<long long>::data() const
 t tensorflow::(anonymous namespace)::Buffer<long long>::size() const
 t tensorflow::(anonymous namespace)::Buffer<long long>::~Buffer()
 t tensorflow::(anonymous namespace)::Buffer<short>::Buffer(tensorflow::Allocator*, long long) [clone .constprop.494]
 t tensorflow::(anonymous namespace)::Buffer<short>::data() const
 t tensorflow::(anonymous namespace)::Buffer<short>::size() const
 t tensorflow::(anonymous namespace)::Buffer<short>::~Buffer()
 t tensorflow::(anonymous namespace)::Buffer<signed char>::data() const
 t tensorflow::(anonymous namespace)::Buffer<signed char>::size() const
 t tensorflow::(anonymous namespace)::Buffer<signed char>::~Buffer()
 t tensorflow::(anonymous namespace)::Buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::data() const
 t tensorflow::(anonymous namespace)::Buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::size() const
 t tensorflow::(anonymous namespace)::Buffer<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::~Buffer()
 t tensorflow::(anonymous namespace)::Buffer<std::complex<double> >::Buffer(tensorflow::Allocator*, long long) [clone .constprop.488]
 t tensorflow::(anonymous namespace)::Buffer<std::complex<double> >::data() const
 t tensorflow::(anonymous namespace)::Buffer<std::complex<double> >::size() const
 t tensorflow::(anonymous namespace)::Buffer<std::complex<double> >::~Buffer()
 t tensorflow::(anonymous namespace)::Buffer<std::complex<float> >::Buffer(tensorflow::Allocator*, long long) [clone .constprop.490]
 t tensorflow::(anonymous namespace)::Buffer<std::complex<float> >::data() const
 t tensorflow::(anonymous namespace)::Buffer<std::complex<float> >::size() const
 t tensorflow::(anonymous namespace)::Buffer<std::complex<float> >::~Buffer()
 t tensorflow::(anonymous namespace)::Buffer<tensorflow::ResourceHandle>::data() const
 t tensorflow::(anonymous namespace)::Buffer<tensorflow::ResourceHandle>::size() const
 t tensorflow::(anonymous namespace)::Buffer<tensorflow::ResourceHandle>::~Buffer()
 t tensorflow::(anonymous namespace)::Buffer<tensorflow::Variant>::data() const
 t tensorflow::(anonymous namespace)::Buffer<tensorflow::Variant>::size() const
 t tensorflow::(anonymous namespace)::Buffer<tensorflow::Variant>::~Buffer()
 t tensorflow::(anonymous namespace)::Buffer<tensorflow::bfloat16>::Buffer(tensorflow::Allocator*, long long) [clone .constprop.475]
 t tensorflow::(anonymous namespace)::Buffer<tensorflow::bfloat16>::data() const
 t tensorflow::(anonymous namespace)::Buffer<tensorflow::bfloat16>::size() const
 t tensorflow::(anonymous namespace)::Buffer<tensorflow::bfloat16>::~Buffer()
 t tensorflow::(anonymous namespace)::Buffer<unsigned char>::data() const
 t tensorflow::(anonymous namespace)::Buffer<unsigned char>::size() const
 t tensorflow::(anonymous namespace)::Buffer<unsigned char>::~Buffer()
 t tensorflow::(anonymous namespace)::Buffer<unsigned int>::Buffer(tensorflow::Allocator*, long long) [clone .constprop.498]
 t tensorflow::(anonymous namespace)::Buffer<unsigned int>::data() const
 t tensorflow::(anonymous namespace)::Buffer<unsigned int>::size() const
 t tensorflow::(anonymous namespace)::Buffer<unsigned int>::~Buffer()
 t tensorflow::(anonymous namespace)::Buffer<unsigned long long>::Buffer(tensorflow::Allocator*, long long) [clone .constprop.496]
 t tensorflow::(anonymous namespace)::Buffer<unsigned long long>::data() const
 t tensorflow::(anonymous namespace)::Buffer<unsigned long long>::size() const
 t tensorflow::(anonymous namespace)::Buffer<unsigned long long>::~Buffer()
 t tensorflow::(anonymous namespace)::Buffer<unsigned short>::Buffer(tensorflow::Allocator*, long long) [clone .constprop.500]
 t tensorflow::(anonymous namespace)::Buffer<unsigned short>::data() const
 t tensorflow::(anonymous namespace)::Buffer<unsigned short>::size() const
 t tensorflow::(anonymous namespace)::Buffer<unsigned short>::~Buffer()
 t tensorflow::(anonymous namespace)::BufferBase::FillAllocationDescription(tensorflow::AllocationDescription*) const
 t tensorflow::(anonymous namespace)::BufferBase::root_buffer()
 t tensorflow::(anonymous namespace)::CheckMask(perftools::gputools::StreamExecutor*, void*, long long*)
 t tensorflow::(anonymous namespace)::ColocationGraph::ColocateNodes(tensorflow::Node const&, int, tensorflow::Node const&, int) [clone .constprop.278]
 t tensorflow::(anonymous namespace)::ColocationGraph::FindRoot(int) [clone .constprop.281]
 t tensorflow::(anonymous namespace)::ColocationGraph::GetDevicesForNode(tensorflow::Node*, std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> >**) [clone .constprop.274]
 t tensorflow::(anonymous namespace)::ConnectVariablesToSaveOp(tensorflow::Graph*, tensorflow::Node*, std::vector<tensorflow::Edge const*, std::allocator<tensorflow::Edge const*> > const&, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> > const&) [clone .constprop.244]
 t tensorflow::(anonymous namespace)::ConsiderConstantFoldableNode(tensorflow::Node*, tensorflow::ConstantFoldingOptions const&, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> >*, std::unordered_map<tensorflow::Node const*, tensorflow::gtl::FlatSet<tensorflow::Node*, tensorflow::hash<tensorflow::Node*>, std::equal_to<tensorflow::Node*> >, std::hash<tensorflow::Node const*>, std::equal_to<tensorflow::Node const*>, std::allocator<std::pair<tensorflow::Node const* const, tensorflow::gtl::FlatSet<tensorflow::Node*, tensorflow::hash<tensorflow::Node*>, std::equal_to<tensorflow::Node*> > > > >*, std::unordered_map<tensorflow::Node const*, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >, std::hash<tensorflow::Node const*>, std::equal_to<tensorflow::Node const*>, std::allocator<std::pair<tensorflow::Node const* const, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> > > > >*, bool*)
 t tensorflow::(anonymous namespace)::ConsumeAttrName(tensorflow::StringPiece*, tensorflow::StringPiece*)
 t tensorflow::(anonymous namespace)::ConsumeDocNameColon(tensorflow::StringPiece*, tensorflow::StringPiece*)
 t tensorflow::(anonymous namespace)::ConsumeQuotedString(char, tensorflow::StringPiece*, tensorflow::StringPiece*)
 t tensorflow::(anonymous namespace)::CopyDeviceToHost(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>) [clone .constprop.147]
 t tensorflow::(anonymous namespace)::CopyHostToDevice(tensorflow::Tensor const*, tensorflow::Allocator*, tensorflow::Allocator*, tensorflow::StringPiece, tensorflow::Device*, tensorflow::Tensor*, tensorflow::DeviceContext*, std::function<void (tensorflow::Status const&)>) [clone .isra.139] [clone .constprop.149]
 t tensorflow::(anonymous namespace)::CorruptFileError(tensorflow::Status const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::(anonymous namespace)::DecodeThreeChars(char const*, char*)
 t tensorflow::(anonymous namespace)::ExecutorImpl::EnsureFrameInfo(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .constprop.444]
 t tensorflow::(anonymous namespace)::ExecutorImpl::ExecutorImpl(tensorflow::LocalExecutorParams const&, tensorflow::Graph const*) [clone .constprop.454]
 t tensorflow::(anonymous namespace)::ExecutorImpl::Initialize() [clone .constprop.436]
 t tensorflow::(anonymous namespace)::ExecutorImpl::RunAsync(tensorflow::Executor::Args const&, std::function<void (tensorflow::Status const&)>)
 t tensorflow::(anonymous namespace)::ExecutorImpl::~ExecutorImpl()
 t tensorflow::(anonymous namespace)::ExecutorState::DeleteFrame(tensorflow::(anonymous namespace)::ExecutorState::FrameState*, tensorflow::gtl::InlinedVector<tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, 8>*)
 t tensorflow::(anonymous namespace)::ExecutorState::Entry::Entry(tensorflow::(anonymous namespace)::ExecutorState::Entry const&)
 t tensorflow::(anonymous namespace)::ExecutorState::Finish()
 t tensorflow::(anonymous namespace)::ExecutorState::FrameState::ActivateLoopInvs(tensorflow::(anonymous namespace)::GraphView const*, long long, tensorflow::gtl::InlinedVector<tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, 8>*) [clone .constprop.432]
 t tensorflow::(anonymous namespace)::ExecutorState::FrameState::ActivateNexts(tensorflow::(anonymous namespace)::GraphView const*, long long, tensorflow::gtl::InlinedVector<tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, 8>*) [clone .constprop.431]
 t tensorflow::(anonymous namespace)::ExecutorState::FrameState::ActivateNodes(tensorflow::(anonymous namespace)::NodeItem const*, bool, long long, tensorflow::gtl::InlinedVector<tensorflow::(anonymous namespace)::ExecutorState::Entry, 4>*, tensorflow::gtl::InlinedVector<tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, 8>*)
 t tensorflow::(anonymous namespace)::ExecutorState::FrameState::CleanupIterations(tensorflow::(anonymous namespace)::GraphView const*, long long, tensorflow::gtl::InlinedVector<tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, 8>*) [clone .constprop.429]
 t tensorflow::(anonymous namespace)::ExecutorState::FrameState::IncrementIteration(tensorflow::(anonymous namespace)::GraphView const*, tensorflow::gtl::InlinedVector<tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, 8>*) [clone .constprop.430]
 t tensorflow::(anonymous namespace)::ExecutorState::FrameState::~FrameState()
 t tensorflow::(anonymous namespace)::ExecutorState::NodeDone(tensorflow::Status const&, tensorflow::Node const*, tensorflow::gtl::InlinedVector<tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, 8> const&, tensorflow::NodeExecStatsWrapper*, tensorflow::(anonymous namespace)::ExecutorState::TaggedNodeReadyQueue*)
 t tensorflow::(anonymous namespace)::ExecutorState::Process(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long)
 t tensorflow::(anonymous namespace)::ExecutorState::Process(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, long long)::{lambda()#1}::operator()() const
 t tensorflow::(anonymous namespace)::ExecutorState::ProcessOutputs(tensorflow::(anonymous namespace)::NodeItem const&, tensorflow::OpKernelContext*, tensorflow::gtl::InlinedVector<tensorflow::(anonymous namespace)::ExecutorState::Entry, 4>*, tensorflow::NodeExecStatsWrapper*)
 t tensorflow::(anonymous namespace)::ExecutorState::PropagateOutputs(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode const&, tensorflow::(anonymous namespace)::NodeItem const*, tensorflow::gtl::InlinedVector<tensorflow::(anonymous namespace)::ExecutorState::Entry, 4>*, tensorflow::gtl::InlinedVector<tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, 8>*)
 t tensorflow::(anonymous namespace)::ExecutorState::ScheduleReady(tensorflow::gtl::InlinedVector<tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, 8> const&, tensorflow::(anonymous namespace)::ExecutorState::TaggedNodeReadyQueue*) [clone .part.233]
 t tensorflow::(anonymous namespace)::FileStream::BackUp(int)
 t tensorflow::(anonymous namespace)::FileStream::ByteCount() const
 t tensorflow::(anonymous namespace)::FileStream::Next(void const**, int*)
 t tensorflow::(anonymous namespace)::FileStream::Skip(int)
 t tensorflow::(anonymous namespace)::FileStream::~FileStream()
 t tensorflow::(anonymous namespace)::FillAttrMap(tensorflow::OpDef const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpDef_AttrDef const*, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tensorflow::OpDef_AttrDef const*> > >*) [clone .constprop.203]
 t tensorflow::(anonymous namespace)::FillStringTensor(tensorflow::Tensor*, tensorflow::Tensor const&) [clone .constprop.245]
 t tensorflow::(anonymous namespace)::FilterSupportedDevices(std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> > const&, tensorflow::gtl::InlinedVector<tensorflow::DeviceType, 4> const&)
 t tensorflow::(anonymous namespace)::FinalizeAttr(tensorflow::StringPiece, tensorflow::OpDef*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*) [clone .constprop.114]
 t tensorflow::(anonymous namespace)::FinalizeInputOrOutput(tensorflow::StringPiece, bool, tensorflow::OpDef*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*) [clone .constprop.111]
 t tensorflow::(anonymous namespace)::FindKernelRegistration(tensorflow::DeviceType const&, tensorflow::NodeDef const&, tensorflow::KernelRegistration const**, bool*) [clone .constprop.198]
 t tensorflow::(anonymous namespace)::FindType(tensorflow::Graph const*, tensorflow::Node const*, bool*, bool*, float*, float*) [clone .constprop.248]
 t tensorflow::(anonymous namespace)::FunctionInstantiationHelper::AddItem(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::(anonymous namespace)::FunctionInstantiationHelper::NameInfoItem const&) [clone .constprop.611]
 t tensorflow::(anonymous namespace)::FunctionInstantiationHelper::AddNode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .constprop.615]
 t tensorflow::(anonymous namespace)::FunctionInstantiationHelper::Name(int) const [clone .constprop.602]
 t tensorflow::(anonymous namespace)::GetCPUDevice(tensorflow::Env*) [clone .constprop.149]
 t tensorflow::(anonymous namespace)::GetCustomCreatorSingleton()
 t tensorflow::(anonymous namespace)::GetMaxPendingCounts(tensorflow::Node const*, unsigned long*, unsigned long*)
 t tensorflow::(anonymous namespace)::GetSetAttrs(tensorflow::FunctionDef const&) [clone .constprop.591]
 t tensorflow::(anonymous namespace)::GetStringBackingBuffer(tensorflow::Tensor const&)
 t tensorflow::(anonymous namespace)::GetTheOnlyDataEdge(tensorflow::EdgeSet const&)
 t tensorflow::(anonymous namespace)::GraphConstructor::Construct(tensorflow::(anonymous namespace)::GraphConstructor::Options const&, tensorflow::gtl::ArraySlice<tensorflow::NodeDef const*>, tensorflow::VersionDef const*, tensorflow::FunctionDefLibrary const*, tensorflow::Graph*, tensorflow::ShapeRefiner*, std::vector<std::pair<tensorflow::Node*, int>, std::allocator<std::pair<tensorflow::Node*, int> > >*, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> >*, std::vector<tensorflow::TensorId, std::allocator<tensorflow::TensorId> >*) [clone .constprop.642]
 t tensorflow::(anonymous namespace)::GraphConstructor::Convert() [clone .constprop.654]
 t tensorflow::(anonymous namespace)::GraphConstructor::FindUniqueName(tensorflow::StringPiece) [clone .constprop.664]
 t tensorflow::(anonymous namespace)::GraphConstructor::MakeEdge(tensorflow::Node*, int, tensorflow::Node*, int) [clone .isra.401] [clone .constprop.696]
 t tensorflow::(anonymous namespace)::GraphConstructor::NameExistsInGraph(tensorflow::StringPiece) [clone .constprop.665]
 t tensorflow::(anonymous namespace)::GraphConstructor::RemapNodeDefInputs(tensorflow::NodeDef*, std::vector<bool, std::allocator<bool> >*) [clone .constprop.656]
 t tensorflow::(anonymous namespace)::GraphView::NodeItemBytes(tensorflow::Node const*) [clone .isra.210]
 t tensorflow::(anonymous namespace)::InOutError(bool, tensorflow::StringPiece, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::(anonymous namespace)::InTypeList(tensorflow::DataType, tensorflow::AttrValue const&) [clone .constprop.200]
 t tensorflow::(anonymous namespace)::InitMask(perftools::gputools::StreamExecutor*, void*, long long*)
 t tensorflow::(anonymous namespace)::InitMask(perftools::gputools::StreamExecutor*, void*, long long*) [clone .part.67]
 t tensorflow::(anonymous namespace)::IsFullSlice(tensorflow::TensorSlice const&, tensorflow::TensorShape const&)
 t tensorflow::(anonymous namespace)::IsGeneratorNode(tensorflow::Node const*)
 t tensorflow::(anonymous namespace)::IsValidNodeName(tensorflow::StringPiece, bool)
 t tensorflow::(anonymous namespace)::LogUnexpectedSize(long long, long long)
 t tensorflow::(anonymous namespace)::MakeInitializedEMAVariable(tensorflow::Graph*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::Node*, tensorflow::Node*, std::vector<tensorflow::Node*, std::allocator<tensorflow::Node*> >*, tensorflow::Node**) [clone .constprop.239]
 t tensorflow::(anonymous namespace)::MatchSignatureHelper(tensorflow::gtl::ArraySlice<tensorflow::DataType>, tensorflow::gtl::ArraySlice<tensorflow::DataType>, tensorflow::gtl::ArraySlice<tensorflow::DataType>, tensorflow::gtl::ArraySlice<tensorflow::DataType>)
 t tensorflow::(anonymous namespace)::MemoryTypesHelper(std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<int, int>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::pair<int, int> > > > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*, tensorflow::gtl::InlinedVector<tensorflow::MemoryType, 4>*)
 t tensorflow::(anonymous namespace)::MinStr(tensorflow::OpDef_AttrDef const&)
 t tensorflow::(anonymous namespace)::MutableRegistry()
 t tensorflow::(anonymous namespace)::NeedSameDeviceSendRecv(tensorflow::Edge const*, tensorflow::(anonymous namespace)::GraphInfo const&)
 t tensorflow::(anonymous namespace)::NoOpStatsPublisher::GetProfileHandler(unsigned long long, long long, tensorflow::RunOptions const&)
 t tensorflow::(anonymous namespace)::NoOpStatsPublisher::PublishGraphProto(std::vector<tensorflow::GraphDef const*, std::allocator<tensorflow::GraphDef const*> > const&)
 t tensorflow::(anonymous namespace)::NoOpStatsPublisher::PublishStatsProto(tensorflow::StepStats const&)
 t tensorflow::(anonymous namespace)::NoOpStatsPublisher::~NoOpStatsPublisher()
 t tensorflow::(anonymous namespace)::ParallelConcatRemovePass::Run(tensorflow::GraphOptimizationPassOptions const&)
 t tensorflow::(anonymous namespace)::ParallelConcatRemovePass::~ParallelConcatRemovePass()
 t tensorflow::(anonymous namespace)::ParseBoolFlag(tensorflow::StringPiece, tensorflow::StringPiece, std::function<bool (bool)> const&, bool*)
 t tensorflow::(anonymous namespace)::ParseFloatFlag(tensorflow::StringPiece, tensorflow::StringPiece, std::function<bool (float)> const&, bool*)
 t tensorflow::(anonymous namespace)::ParseInt32Flag(tensorflow::StringPiece, tensorflow::StringPiece, std::function<bool (int)> const&, bool*)
 t tensorflow::(anonymous namespace)::ParseInt64Flag(tensorflow::StringPiece, tensorflow::StringPiece, std::function<bool (long long)> const&, bool*)
 t tensorflow::(anonymous namespace)::PosixEnv::FormatLibraryFileName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::(anonymous namespace)::PosixEnv::GetSymbolFromLibrary(void*, char const*, void**)
 t tensorflow::(anonymous namespace)::PosixEnv::LoadLibrary(char const*, void**)
 t tensorflow::(anonymous namespace)::PosixEnv::MatchPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::(anonymous namespace)::PosixEnv::SchedClosure(std::function<void ()>)
 t tensorflow::(anonymous namespace)::PosixEnv::SchedClosureAfter(long long, std::function<void ()>)
 t tensorflow::(anonymous namespace)::PosixEnv::SleepForMicroseconds(long long)
 t tensorflow::(anonymous namespace)::PosixEnv::StartThread(tensorflow::ThreadOptions const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::function<void ()>)
 t tensorflow::(anonymous namespace)::PosixEnv::~PosixEnv()
 t tensorflow::(anonymous namespace)::PosixEnvTime::NowMicros()
 t tensorflow::(anonymous namespace)::PosixEnvTime::~PosixEnvTime()
 t tensorflow::(anonymous namespace)::PrepareChunk(void*, unsigned long, unsigned long)
 t tensorflow::(anonymous namespace)::Print(tensorflow::AttrValue const&)
 t tensorflow::(anonymous namespace)::Print(tensorflow::FunctionDef const&)
 t tensorflow::(anonymous namespace)::Print(tensorflow::NodeDef const&)
 t tensorflow::(anonymous namespace)::Print(tensorflow::OpDef_ArgDef const&)
 t tensorflow::(anonymous namespace)::Print(tensorflow::gtl::ArraySlice<tensorflow::NodeDef const*>)
 t tensorflow::(anonymous namespace)::Print(tensorflow::gtl::ArraySlice<tensorflow::NodeDef const*>)::{lambda(tensorflow::NodeDef const*, tensorflow::NodeDef const*)#1}::operator()(tensorflow::NodeDef const*, tensorflow::NodeDef const*) const [clone .isra.555] [clone .constprop.597]
 t tensorflow::(anonymous namespace)::ProcessCompoundType(tensorflow::StringPiece, tensorflow::AttrValue*) [clone .constprop.115]
 t tensorflow::(anonymous namespace)::ProcessTargetEdges(tensorflow::Graph*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<tensorflow::(anonymous namespace)::EdgeToConvert, std::allocator<tensorflow::(anonymous namespace)::EdgeToConvert> > const&) [clone .constprop.235]
 t tensorflow::(anonymous namespace)::RandomAccessFileFromMemmapped::Read(unsigned long long, unsigned long, tensorflow::StringPiece*, char*) const
 t tensorflow::(anonymous namespace)::RandomAccessFileFromMemmapped::~RandomAccessFileFromMemmapped()
 t tensorflow::(anonymous namespace)::ReadOnlyMemoryRegionFromMemmapped::data()
 t tensorflow::(anonymous namespace)::ReadOnlyMemoryRegionFromMemmapped::length()
 t tensorflow::(anonymous namespace)::ReadOnlyMemoryRegionFromMemmapped::~ReadOnlyMemoryRegionFromMemmapped()
 t tensorflow::(anonymous namespace)::RegisteredFactoriesErrorMessageLocked()
 t tensorflow::(anonymous namespace)::RenderRegion(char*, unsigned long, unsigned long, unsigned long, void const*, void const*, unsigned long, char) [clone .constprop.162]
 t tensorflow::(anonymous namespace)::SessionOptionsToString(tensorflow::SessionOptions const&) [clone .constprop.86]
 t tensorflow::(anonymous namespace)::SetSendRecvAttrs(tensorflow::PartitionOptions const&, tensorflow::Edge const*, tensorflow::NodeDefBuilder*) [clone .constprop.657]
 t tensorflow::(anonymous namespace)::SetTimelineLabel(tensorflow::Node const*, tensorflow::NodeExecStatsWrapper*)
 t tensorflow::(anonymous namespace)::SimpleRendezvous::RecvAsync(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, std::function<void (tensorflow::Status const&, tensorflow::Rendezvous::Args const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)>)
 t tensorflow::(anonymous namespace)::SimpleRendezvous::Send(tensorflow::Rendezvous::ParsedKey const&, tensorflow::Rendezvous::Args const&, tensorflow::Tensor const&, bool)
 t tensorflow::(anonymous namespace)::SimpleRendezvous::StartAbort(tensorflow::Status const&)
 t tensorflow::(anonymous namespace)::SimpleRendezvous::~SimpleRendezvous()
 t tensorflow::(anonymous namespace)::StdThread::~StdThread()
 t tensorflow::(anonymous namespace)::SummarizeFunc(tensorflow::NameAttrList const&)
 t tensorflow::(anonymous namespace)::SummarizeString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::(anonymous namespace)::SummarizeTensor(tensorflow::TensorProto const&)
 t tensorflow::(anonymous namespace)::TimeEstimateForNode(tensorflow::CostModel*, tensorflow::Node*) [clone .isra.326]
 t tensorflow::(anonymous namespace)::UniqueConstantId()
 t tensorflow::(anonymous namespace)::device_factories()
 t tensorflow::(anonymous namespace)::get_device_factory_lock() [clone .part.38]
 t tensorflow::(anonymous namespace)::get_session_factory_lock() [clone .part.15]
 t tensorflow::(anonymous namespace)::nodestats::SetMemory(tensorflow::NodeExecStatsWrapper*, tensorflow::OpKernelContext*)
 t tensorflow::(anonymous namespace)::nodestats::SetOpEnd(tensorflow::NodeExecStatsWrapper*)
 t tensorflow::(anonymous namespace)::nodestats::SetOpStart(tensorflow::NodeExecStatsWrapper*)
 t tensorflow::(anonymous namespace)::nodestats::SetReferencedTensors(tensorflow::NodeExecStatsWrapper*, tensorflow::gtl::InlinedVector<tensorflow::TensorReference, 4> const&)
 t tensorflow::(anonymous namespace)::session_factories()
 t tensorflow::AddIdentity(tensorflow::Graph*, tensorflow::Endpoint) [clone .constprop.474]
 t tensorflow::AddNoOp(tensorflow::Graph*) [clone .constprop.475]
 t tensorflow::Allocator*& tensorflow::internal::CheckNotNull<tensorflow::Allocator*&>(char const*, int, char const*, tensorflow::Allocator*&) [clone .part.410] [clone .constprop.418]
 t tensorflow::Allocator*& tensorflow::internal::CheckNotNull<tensorflow::Allocator*&>(char const*, int, char const*, tensorflow::Allocator*&) [clone .part.43] [clone .constprop.44]
 t tensorflow::BFCAllocator::AllocateRaw(unsigned long, unsigned long, tensorflow::AllocationAttributes const&) [clone .part.158] [clone .constprop.160]
 t tensorflow::BFCAllocator::AllocatedSize(void*) [clone .part.155]
 t tensorflow::BFCAllocator::AllocationId(void*) [clone .part.156]
 t tensorflow::BFCAllocator::InsertFreeChunkIntoBin(unsigned long) [clone .part.152]
 t tensorflow::BFCAllocator::RegionManager::RegionFor(void const*) const [clone .part.151]
 t tensorflow::BFCAllocator::RemoveFreeChunkIterFromBin(std::set<unsigned long, tensorflow::BFCAllocator::Bin::ChunkComparator, std::allocator<unsigned long> >*, std::_Rb_tree_const_iterator<unsigned long> const&) [clone .part.153]
 t tensorflow::BFCAllocator::RequestedSize(void*) [clone .part.154]
 t tensorflow::ConsumeDeviceType(tensorflow::StringPiece*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 t tensorflow::DeviceBase::eigen_cpu_device() [clone .part.9]
 t tensorflow::DeviceBase::tensorflow_cpu_worker_threads() const [clone .part.10]
 t tensorflow::DeviceName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int, int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int) [clone .constprop.45]
 t tensorflow::DeviceTypeComparator(tensorflow::DeviceType const&, tensorflow::DeviceType const&)
 t tensorflow::EventsWriter::WriteSerializedEvent(tensorflow::StringPiece) [clone .part.33]
 t tensorflow::FillInputs(tensorflow::Node const*, tensorflow::gtl::InlinedVector<tensorflow::Node*, 4>*, tensorflow::gtl::InlinedVector<std::pair<tensorflow::Node*, int>, 4>*)
 t tensorflow::FunctionBody const*& tensorflow::internal::CheckNotNull<tensorflow::FunctionBody const*&>(char const*, int, char const*, tensorflow::FunctionBody const*&) [clone .part.455] [clone .constprop.467]
 t tensorflow::FunctionDefsEqual(tensorflow::FunctionDef const&, tensorflow::FunctionDef const&) [clone .part.582] [clone .constprop.589]
 t tensorflow::GPUUtil::CopyCPUTensorToGPU(tensorflow::Tensor const*, tensorflow::DeviceContext const*, tensorflow::Device*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda()#1}::operator()() const
 t tensorflow::GPUUtil::CopyGPUTensorToCPU(tensorflow::Device*, tensorflow::DeviceContext const*, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda()#1}::operator()() const
 t tensorflow::GPUUtil::DeviceToDeviceCopy(tensorflow::DeviceContext*, tensorflow::DeviceContext*, tensorflow::Device*, tensorflow::Device*, tensorflow::AllocatorAttributes, tensorflow::AllocatorAttributes, tensorflow::Tensor const*, tensorflow::Tensor*, std::function<void (tensorflow::Status const&)>)::{lambda()#1}::operator()() const
 t tensorflow::GPUUtil::SetProtoFromGPU(tensorflow::Tensor const&, tensorflow::Device*, tensorflow::DeviceContext const*, tensorflow::TensorProto*, bool, std::function<void (tensorflow::Status const&)>)::{lambda()#1}::operator()() const
 t tensorflow::GetBase(tensorflow::Tensor*) [clone .localalias.110]
 t tensorflow::GetTensorBatchDimIndex(int, tensorflow::TensorFormat) [clone .isra.185] [clone .part.186]
 t tensorflow::GraphDefBuilder::Options::UpdateStatus(tensorflow::Status const&) const [clone .part.81]
 t tensorflow::HasRefInput(tensorflow::Node const*)
 t tensorflow::IntraProcessRendezvous::StartAbort(tensorflow::Status const&) [clone .part.35]
 t tensorflow::IsFunction(tensorflow::GraphDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .constprop.184]
 t tensorflow::Key(tensorflow::StringPiece, tensorflow::DeviceType const&, tensorflow::StringPiece)
 t tensorflow::MultiplyWithoutOverflow(long long, long long) [clone .part.71]
 t tensorflow::Node* const& tensorflow::internal::CheckNotNull<tensorflow::Node* const&>(char const*, int, char const*, tensorflow::Node* const&) [clone .part.281] [clone .constprop.284]
 t tensorflow::NodeDef const*& tensorflow::internal::CheckNotNull<tensorflow::NodeDef const*&>(char const*, int, char const*, tensorflow::NodeDef const*&) [clone .part.341] [clone .constprop.343]
 t tensorflow::NodeDefBuilder::VerifyInputRef(tensorflow::OpDef_ArgDef const*, tensorflow::DataType) [clone .part.72] [clone .constprop.75]
 t tensorflow::NodeDefBuilder::VerifyInputType(tensorflow::OpDef_ArgDef const*, tensorflow::DataType, tensorflow::DataType) [clone .part.71] [clone .constprop.74]
 t tensorflow::OpRegistry::MustCallDeferred() const [clone .part.146] [clone .constprop.149]
 t tensorflow::OptimizerCSE::Equivalent(tensorflow::Node const*, tensorflow::Node const*, tensorflow::AttrSlice::Scratch*) [clone .part.134]
 t tensorflow::PersistentTensor::AccessTensor(tensorflow::OpKernelConstruction*) [clone .part.196]
 t tensorflow::Placer::LogDeviceAssignment(tensorflow::Node const*) const [clone .part.271]
 t tensorflow::PoolAllocator::AddAllocVisitor(std::function<void (void*, unsigned long)>) [clone .part.70]
 t tensorflow::PoolAllocator::AddFreeVisitor(std::function<void (void*, unsigned long)>) [clone .part.71]
 t tensorflow::PoolAllocator::AddToList(tensorflow::PoolAllocator::PtrRecord*) [clone .part.69]
 t tensorflow::ProcessMemoryTypes(tensorflow::DeviceType const&, tensorflow::Graph const*, std::function<tensorflow::Status (tensorflow::Edge const*, tensorflow::MemoryType, tensorflow::MemoryType)> const&) [clone .constprop.167]
 t tensorflow::ProcessState::ProcessState() [clone .part.117]
 t tensorflow::RemoveNewDefaultAttrsFromNodeDef(tensorflow::NodeDef*, tensorflow::OpRegistryInterface const&, tensorflow::OpRegistryInterface const&, std::set<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::less<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) [clone .constprop.185]
 t tensorflow::Status tensorflow::(anonymous namespace)::AddVariantPrimitiveType<bool>(tensorflow::OpKernelContext*, bool const&, bool const&, bool*)
 t tensorflow::Status tensorflow::(anonymous namespace)::AddVariantPrimitiveType<double>(tensorflow::OpKernelContext*, double const&, double const&, double*)
 t tensorflow::Status tensorflow::(anonymous namespace)::AddVariantPrimitiveType<float>(tensorflow::OpKernelContext*, float const&, float const&, float*)
 t tensorflow::Status tensorflow::(anonymous namespace)::AddVariantPrimitiveType<int>(tensorflow::OpKernelContext*, int const&, int const&, int*)
 t tensorflow::Status tensorflow::(anonymous namespace)::ScalarShape<bool>(bool const&, tensorflow::TensorShape*)
 t tensorflow::Status tensorflow::(anonymous namespace)::ScalarShape<double>(double const&, tensorflow::TensorShape*)
 t tensorflow::Status tensorflow::(anonymous namespace)::ScalarShape<float>(float const&, tensorflow::TensorShape*)
 t tensorflow::Status tensorflow::(anonymous namespace)::ScalarShape<int>(int const&, tensorflow::TensorShape*)
 t tensorflow::Status tensorflow::(anonymous namespace)::ZerosLikeVariantPrimitiveType<bool>(tensorflow::OpKernelContext*, bool const&, bool*)
 t tensorflow::Status tensorflow::(anonymous namespace)::ZerosLikeVariantPrimitiveType<double>(tensorflow::OpKernelContext*, double const&, double*)
 t tensorflow::Status tensorflow::(anonymous namespace)::ZerosLikeVariantPrimitiveType<float>(tensorflow::OpKernelContext*, float const&, float*)
 t tensorflow::Status tensorflow::(anonymous namespace)::ZerosLikeVariantPrimitiveType<int>(tensorflow::OpKernelContext*, int const&, int*)
 t tensorflow::Status tensorflow::wav::(anonymous namespace)::ReadValue<short>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, short*, int*)
 t tensorflow::Status tensorflow::wav::(anonymous namespace)::ReadValue<unsigned int>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int*, int*)
 t tensorflow::Status tensorflow::wav::(anonymous namespace)::ReadValue<unsigned short>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned short*, int*)
 t tensorflow::SubProcess::Communicate(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [clone .part.9] [clone .constprop.10]
 t tensorflow::SummarizeAttrsHelper(tensorflow::AttrSlice, tensorflow::StringPiece)
 t tensorflow::Tensor::FromProto(tensorflow::Allocator*, tensorflow::TensorProto const&) [clone .part.412] [clone .constprop.446]
 t tensorflow::TensorBuffer* tensorflow::(anonymous namespace)::FromProtoField<tensorflow::ResourceHandle>(tensorflow::Allocator*, tensorflow::TensorProto const&, long long) [clone .constprop.448]
 t tensorflow::TensorBuffer* tensorflow::(anonymous namespace)::FromProtoField<tensorflow::Variant>(tensorflow::Allocator*, tensorflow::TensorProto const&, long long) [clone .constprop.447]
 t tensorflow::TensorShapeBase<tensorflow::PartialTensorShape>::end() const [clone .part.72]
 t tensorflow::ThreadPoolDevice::GetAllocator(tensorflow::AllocatorAttributes) [clone .localalias.36]
 t tensorflow::ToGraphDef(tensorflow::Graph const*, tensorflow::GraphDef*, bool)::{lambda(tensorflow::Node*)#1}::operator()(tensorflow::Node*) const
 t tensorflow::ValidateArg(tensorflow::OpDef_ArgDef const&, tensorflow::OpDef const&, bool, std::set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >*) [clone .constprop.207]
 t tensorflow::checkpoint::(anonymous namespace)::TableBuilder::Add(tensorflow::StringPiece, tensorflow::StringPiece)
 t tensorflow::checkpoint::(anonymous namespace)::TableBuilder::Finish(long long*)
 t tensorflow::checkpoint::(anonymous namespace)::TableBuilder::~TableBuilder()
 t tensorflow::checkpoint::(anonymous namespace)::TensorSliceReaderTable::Get(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 t tensorflow::checkpoint::(anonymous namespace)::TensorSliceReaderTable::~TensorSliceReaderTable()
 t tensorflow::core::Arena::MakeNewBlock(unsigned int) [clone .part.25]
 t tensorflow::core::Arena::Reset() [clone .part.24]
 t tensorflow::error::protobuf_tensorflow_2fcore_2flib_2fcore_2ferror_5fcodes_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::error::protobuf_tensorflow_2fcore_2flib_2fcore_2ferror_5fcodes_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::error::protobuf_tensorflow_2fcore_2flib_2fcore_2ferror_5fcodes_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::error::protobuf_tensorflow_2fcore_2flib_2fcore_2ferror_5fcodes_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::example::(anonymous namespace)::CheckConfigDataType(tensorflow::DataType)
 t tensorflow::example::(anonymous namespace)::FastParseSerializedExample(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, tensorflow::example::FastParseExampleConfig const&, tensorflow::PresizedCuckooMap<std::pair<unsigned long, tensorflow::example::(anonymous namespace)::Type> > const&, tensorflow::example::(anonymous namespace)::SeededHasher, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::vector<tensorflow::example::(anonymous namespace)::SparseBuffer, std::allocator<tensorflow::example::(anonymous namespace)::SparseBuffer> >*, std::vector<tensorflow::example::(anonymous namespace)::SparseBuffer, std::allocator<tensorflow::example::(anonymous namespace)::SparseBuffer> >*)
 t tensorflow::example::(anonymous namespace)::FastParseSerializedExample(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, tensorflow::example::FastParseExampleConfig const&, tensorflow::PresizedCuckooMap<std::pair<unsigned long, tensorflow::example::(anonymous namespace)::Type> > const&, tensorflow::example::(anonymous namespace)::SeededHasher, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::vector<tensorflow::example::(anonymous namespace)::SparseBuffer, std::allocator<tensorflow::example::(anonymous namespace)::SparseBuffer> >*, std::vector<tensorflow::example::(anonymous namespace)::SparseBuffer, std::allocator<tensorflow::example::(anonymous namespace)::SparseBuffer> >*)::{lambda(tensorflow::StringPiece)#1}::operator()(tensorflow::StringPiece) const
 t tensorflow::example::(anonymous namespace)::FastParseSerializedExample(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, tensorflow::example::FastParseExampleConfig const&, tensorflow::PresizedCuckooMap<std::pair<unsigned long, tensorflow::example::(anonymous namespace)::Type> > const&, tensorflow::example::(anonymous namespace)::SeededHasher, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::vector<tensorflow::example::(anonymous namespace)::SparseBuffer, std::allocator<tensorflow::example::(anonymous namespace)::SparseBuffer> >*, std::vector<tensorflow::example::(anonymous namespace)::SparseBuffer, std::allocator<tensorflow::example::(anonymous namespace)::SparseBuffer> >*)::{lambda(unsigned long, tensorflow::StringPiece)#3}::operator()(unsigned long, tensorflow::StringPiece) const [clone .constprop.456]
 t tensorflow::example::(anonymous namespace)::FastParseSerializedExample(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, tensorflow::example::FastParseExampleConfig const&, tensorflow::PresizedCuckooMap<std::pair<unsigned long, tensorflow::example::(anonymous namespace)::Type> > const&, tensorflow::example::(anonymous namespace)::SeededHasher, std::vector<tensorflow::Tensor, std::allocator<tensorflow::Tensor> >*, std::vector<tensorflow::example::(anonymous namespace)::SparseBuffer, std::allocator<tensorflow::example::(anonymous namespace)::SparseBuffer> >*, std::vector<tensorflow::example::(anonymous namespace)::SparseBuffer, std::allocator<tensorflow::example::(anonymous namespace)::SparseBuffer> >*)::{lambda(unsigned long, tensorflow::StringPiece)#4}::operator()(unsigned long, tensorflow::StringPiece) const
 t tensorflow::example::(anonymous namespace)::ParseExample(tensorflow::StringPiece, std::vector<std::pair<tensorflow::StringPiece, tensorflow::example::(anonymous namespace)::parsed::Feature>, std::allocator<std::pair<tensorflow::StringPiece, tensorflow::example::(anonymous namespace)::parsed::Feature> > >*) [clone .constprop.458]
 t tensorflow::grappler::(anonymous namespace)::GetBoolAttr(tensorflow::NodeDef const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .constprop.100]
 t tensorflow::gtl::InlinedVector<tensorflow::(anonymous namespace)::ExecutorState::Entry, 4>::DiscardStorage()
 t tensorflow::gtl::InlinedVector<tensorflow::DataType, 4>::set_size_internal(unsigned long) [clone .part.199]
 t tensorflow::gtl::InlinedVector<tensorflow::Edge const*, 4>::set_size_internal(unsigned long) [clone .part.229]
 t tensorflow::internal::(anonymous namespace)::IsPortAvailable(int*, bool)
 t tensorflow::internal::(anonymous namespace)::LogLevelStrToInt(char const*)
 t tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::GraphTransferInfo_GraphOutputNodeInfo const&) [clone .localalias.106]
 t tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::MemoryLogTensorAllocation const&) [clone .part.62]
 t tensorflow::internal::AppendProtoDebugString(tensorflow::strings::ProtoTextOutput*, tensorflow::MemoryLogTensorOutput const&) [clone .part.63]
 t tensorflow::lookup::(anonymous namespace)::GetTableHandle(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::OpKernelContext*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 t tensorflow::lookup::(anonymous namespace)::TextFileLineIterator::Next()
 t tensorflow::lookup::(anonymous namespace)::TextFileLineIterator::Valid() const
 t tensorflow::lookup::(anonymous namespace)::TextFileLineIterator::keys() const
 t tensorflow::lookup::(anonymous namespace)::TextFileLineIterator::status() const
 t tensorflow::lookup::(anonymous namespace)::TextFileLineIterator::total_size() const
 t tensorflow::lookup::(anonymous namespace)::TextFileLineIterator::values() const
 t tensorflow::lookup::(anonymous namespace)::TextFileLineIterator::~TextFileLineIterator()
 t tensorflow::monitoring::(anonymous namespace)::ExplicitBuckets::ExplicitBuckets(std::vector<double, std::allocator<double> >)
 t tensorflow::monitoring::(anonymous namespace)::ExplicitBuckets::explicit_bounds() const
 t tensorflow::monitoring::(anonymous namespace)::ExplicitBuckets::~ExplicitBuckets()
 t tensorflow::monitoring::(anonymous namespace)::ExponentialBuckets::ComputeBucketLimits(double, double, int)
 t tensorflow::monitoring::(anonymous namespace)::ExponentialBuckets::explicit_bounds() const
 t tensorflow::monitoring::(anonymous namespace)::ExponentialBuckets::~ExponentialBuckets()
 t tensorflow::png::(anonymous namespace)::ErrorHandler(png_struct_def*, char const*)
 t tensorflow::png::(anonymous namespace)::StringReader(png_struct_def*, unsigned char*, unsigned long)
 t tensorflow::png::(anonymous namespace)::StringWriter(png_struct_def*, unsigned char*, unsigned long)
 t tensorflow::png::(anonymous namespace)::StringWriterFlush(png_struct_def*)
 t tensorflow::png::(anonymous namespace)::WarningHandler(png_struct_def*, char const*)
 t tensorflow::png::(anonymous namespace)::check_metadata_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .part.65]
 t tensorflow::port::(anonymous namespace)::CPUIDInfo::Initialize()
 t tensorflow::port::(anonymous namespace)::CPUIDInfo::Initialize() [clone .part.22]
 t tensorflow::port::(anonymous namespace)::CheckFeatureOrDie(tensorflow::port::CPUFeature, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [clone .part.33] [clone .constprop.35]
 t tensorflow::port::(anonymous namespace)::CheckIfFeatureUnused(tensorflow::port::CPUFeature, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) [clone .part.24] [clone .constprop.37]
 t tensorflow::port::InfoAboutUnusedCPUFeatures()::{lambda()#1}::operator()() const [clone .isra.30]
 t tensorflow::profile_utils::CpuUtils::GetCpuUtilsHelperSingletonInstance()::{lambda()#1}::operator()() const [clone .isra.9]
 t tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fexample_2fexample_5fparser_5fconfiguration_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fexample_2ffeature_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fexample_2ffeature_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fexample_2ffeature_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fexample_2ffeature_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fallocation_5fdescription_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fallocation_5fdescription_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fallocation_5fdescription_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fallocation_5fdescription_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fapi_5fdef_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fattr_5fvalue_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fcost_5fgraph_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fdevice_5fattributes_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2ffunction_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2ffunction_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2ffunction_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2ffunction_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fgraph_5ftransfer_5finfo_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fiterator_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fiterator_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fiterator_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fiterator_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fkernel_5fdef_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2flog_5fmemory_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2flog_5fmemory_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2flog_5fmemory_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2flog_5fmemory_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fnode_5fdef_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fop_5fdef_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2freader_5fbase_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2freader_5fbase_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2freader_5fbase_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2freader_5fbase_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fremote_5ffused_5fgraph_5fexecute_5finfo_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fresource_5fhandle_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fstep_5fstats_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fsummary_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fsummary_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fsummary_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fsummary_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fdescription_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fshape_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fslice_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fslice_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fslice_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftensor_5fslice_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftypes_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftypes_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftypes_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2ftypes_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fvariable_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fvariable_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fvariable_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fvariable_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fversions_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fversions_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fversions_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fframework_2fversions_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcluster_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcluster_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcluster_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcluster_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fconfig_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fconfig_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fconfig_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fconfig_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fcontrol_5fflow_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdebug_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fdevice_5fproperties_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fmeta_5fgraph_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fnamed_5ftensor_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fnamed_5ftensor_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fnamed_5ftensor_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fnamed_5ftensor_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fqueue_5frunner_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fqueue_5frunner_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fqueue_5frunner_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fqueue_5frunner_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2frewriter_5fconfig_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaved_5fmodel_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaved_5fmodel_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaved_5fmodel_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaved_5fmodel_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaver_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaver_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaver_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2fsaver_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensor_5fbundle_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensorflow_5fserver_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensorflow_5fserver_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensorflow_5fserver_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2fprotobuf_2ftensorflow_5fserver_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2futil_2fevent_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2futil_2fevent_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2futil_2fevent_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2futil_2fevent_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2futil_2fmemmapped_5ffile_5fsystem_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2futil_2fmemmapped_5ffile_5fsystem_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2futil_2fmemmapped_5ffile_5fsystem_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2futil_2fmemmapped_5ffile_5fsystem_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2futil_2fsaved_5ftensor_5fslice_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2futil_2fsaved_5ftensor_5fslice_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2futil_2fsaved_5ftensor_5fslice_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2futil_2fsaved_5ftensor_5fslice_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::protobuf_tensorflow_2fcore_2futil_2ftest_5flog_2eproto::(anonymous namespace)::AddDescriptorsImpl()
 t tensorflow::protobuf_tensorflow_2fcore_2futil_2ftest_5flog_2eproto::(anonymous namespace)::protobuf_AssignDescriptors()
 t tensorflow::protobuf_tensorflow_2fcore_2futil_2ftest_5flog_2eproto::(anonymous namespace)::protobuf_AssignDescriptorsOnce()
 t tensorflow::protobuf_tensorflow_2fcore_2futil_2ftest_5flog_2eproto::(anonymous namespace)::protobuf_RegisterTypes(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 t tensorflow::random::(anonymous namespace)::InitRngWithRandomSeed()
 t tensorflow::random::UnbiasedUniform(tensorflow::random::SimplePhilox*, int)
 t tensorflow::shape_inference::Pool3DShape(tensorflow::shape_inference::InferenceContext*)::{lambda(char)#1}::operator()(char) const
 t tensorflow::str_util::(anonymous namespace)::CUnescapeInternal(tensorflow::StringPiece, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, unsigned long*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 t tensorflow::strings::(anonymous namespace)::SkipSpaces(tensorflow::StringPiece*)
 t tensorflow::strings::Append2(char*, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&)
 t tensorflow::strings::Append4(char*, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&, tensorflow::strings::AlphaNum const&)
 t tensorflow::table::(anonymous namespace)::EmptyIterator::Next()
 t tensorflow::table::(anonymous namespace)::EmptyIterator::Seek(tensorflow::StringPiece const&)
 t tensorflow::table::(anonymous namespace)::EmptyIterator::SeekToFirst()
 t tensorflow::table::(anonymous namespace)::EmptyIterator::Valid() const
 t tensorflow::table::(anonymous namespace)::EmptyIterator::key() const
 t tensorflow::table::(anonymous namespace)::EmptyIterator::status() const
 t tensorflow::table::(anonymous namespace)::EmptyIterator::value() const
 t tensorflow::table::(anonymous namespace)::EmptyIterator::~EmptyIterator()
 t tensorflow::table::(anonymous namespace)::TwoLevelIterator::InitDataBlock() [clone .constprop.25]
 t tensorflow::table::(anonymous namespace)::TwoLevelIterator::Next()
 t tensorflow::table::(anonymous namespace)::TwoLevelIterator::Seek(tensorflow::StringPiece const&)
 t tensorflow::table::(anonymous namespace)::TwoLevelIterator::SeekToFirst()
 t tensorflow::table::(anonymous namespace)::TwoLevelIterator::SetDataIterator(tensorflow::table::Iterator*) [clone .constprop.27]
 t tensorflow::table::(anonymous namespace)::TwoLevelIterator::SkipEmptyDataBlocksForward() [clone .constprop.24]
 t tensorflow::table::(anonymous namespace)::TwoLevelIterator::Valid() const
 t tensorflow::table::(anonymous namespace)::TwoLevelIterator::key() const
 t tensorflow::table::(anonymous namespace)::TwoLevelIterator::status() const
 t tensorflow::table::(anonymous namespace)::TwoLevelIterator::value() const
 t tensorflow::table::(anonymous namespace)::TwoLevelIterator::~TwoLevelIterator()
 t tensorflow::table::DeleteBlock(void*, void*)
 t tensorflow::wav::(anonymous namespace)::ExpectText(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int*) [clone .constprop.54]
 t term_destination
 t term_mem_destination
 t term_source
 t thread_allocated_ctl
 t thread_allocatedp_ctl
 t thread_arena_ctl
 t thread_deallocated_ctl
 t thread_deallocatedp_ctl
 t thread_prof_active_ctl
 t thread_prof_name_ctl
 t thread_tcache_enabled_ctl
 t thread_tcache_flush_ctl
 t update_box.isra.0
 t updatewindow
 t use_merged_upsample.part.0
 t validate_script
 t version_ctl
 t void const* tensorflow::Variant::get<void>() const [clone .localalias.15]
 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*>*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*> > > >, long, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*>, __gnu_cxx::__ops::_Iter_comp_iter<re2::RE2::Set::Compile()::{lambda(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*> const&, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*> const&)#1}> >(__gnu_cxx::__normal_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*>*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*> > > >, long, __gnu_cxx::__normal_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*>*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*> > > >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*>, __gnu_cxx::__ops::_Iter_comp_iter<re2::RE2::Set::Compile()::{lambda(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*> const&, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*> const&)#1}>) [clone .isra.57]
 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<tensorflow::(anonymous namespace)::PriorityTopoSortNode*, std::vector<tensorflow::(anonymous namespace)::PriorityTopoSortNode, std::allocator<tensorflow::(anonymous namespace)::PriorityTopoSortNode> > >, long, tensorflow::(anonymous namespace)::PriorityTopoSortNode, __gnu_cxx::__ops::_Iter_comp_iter<tensorflow::(anonymous namespace)::PriorityTopoSortNodeGreater> >(__gnu_cxx::__normal_iterator<tensorflow::(anonymous namespace)::PriorityTopoSortNode*, std::vector<tensorflow::(anonymous namespace)::PriorityTopoSortNode, std::allocator<tensorflow::(anonymous namespace)::PriorityTopoSortNode> > >, long, long, tensorflow::(anonymous namespace)::PriorityTopoSortNode, __gnu_cxx::__ops::_Iter_comp_iter<tensorflow::(anonymous namespace)::PriorityTopoSortNodeGreater>) [clone .isra.86]
 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<tensorflow::Device**, std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> > >, long, tensorflow::Device*, __gnu_cxx::__ops::_Iter_comp_iter<tensorflow::(anonymous namespace)::FilterSupportedDevices(std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> > const&, tensorflow::gtl::InlinedVector<tensorflow::DeviceType, 4> const&)::{lambda(tensorflow::Device const*, tensorflow::Device const*)#1}> >(__gnu_cxx::__normal_iterator<tensorflow::Device**, std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> > >, long, __gnu_cxx::__normal_iterator<tensorflow::Device**, std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> > >, tensorflow::Device*, __gnu_cxx::__ops::_Iter_comp_iter<tensorflow::(anonymous namespace)::FilterSupportedDevices(std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> > const&, tensorflow::gtl::InlinedVector<tensorflow::DeviceType, 4> const&)::{lambda(tensorflow::Device const*, tensorflow::Device const*)#1}>) [clone .isra.158] [clone .constprop.284]
 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<tensorflow::Edge const**, std::vector<tensorflow::Edge const*, std::allocator<tensorflow::Edge const*> > >, long, tensorflow::Edge const*, __gnu_cxx::__ops::_Iter_comp_iter<tensorflow::CostModel::AddToCostGraphDef(tensorflow::Graph const*, tensorflow::CostGraphDef*) const::{lambda(tensorflow::Edge const*, tensorflow::Edge const*)#1}> >(__gnu_cxx::__normal_iterator<tensorflow::Edge const**, std::vector<tensorflow::Edge const*, std::allocator<tensorflow::Edge const*> > >, long, __gnu_cxx::__normal_iterator<tensorflow::Edge const**, std::vector<tensorflow::Edge const*, std::allocator<tensorflow::Edge const*> > >, tensorflow::Edge const*, __gnu_cxx::__ops::_Iter_comp_iter<tensorflow::CostModel::AddToCostGraphDef(tensorflow::Graph const*, tensorflow::CostGraphDef*) const::{lambda(tensorflow::Edge const*, tensorflow::Edge const*)#1}>)
 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<tensorflow::NodeDef const**, std::vector<tensorflow::NodeDef const*, std::allocator<tensorflow::NodeDef const*> > >, long, tensorflow::NodeDef const*, __gnu_cxx::__ops::_Iter_comp_iter<tensorflow::(anonymous namespace)::Print(tensorflow::gtl::ArraySlice<tensorflow::NodeDef const*>)::{lambda(tensorflow::NodeDef const*, tensorflow::NodeDef const*)#1}> >(__gnu_cxx::__normal_iterator<tensorflow::NodeDef const**, std::vector<tensorflow::NodeDef const*, std::allocator<tensorflow::NodeDef const*> > >, long, __gnu_cxx::__normal_iterator<tensorflow::NodeDef const**, std::vector<tensorflow::NodeDef const*, std::allocator<tensorflow::NodeDef const*> > >, tensorflow::NodeDef const*, __gnu_cxx::__ops::_Iter_comp_iter<tensorflow::(anonymous namespace)::Print(tensorflow::gtl::ArraySlice<tensorflow::NodeDef const*>)::{lambda(tensorflow::NodeDef const*, tensorflow::NodeDef const*)#1}>) [clone .isra.559] [clone .constprop.595]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::forward_iterator_tag) [clone .isra.45]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.100]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.102]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.104]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.106]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.112]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.113]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.115]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.116]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.117]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.118]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.119]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.11]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.121]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.122]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.123]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.126]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.135]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.136]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.141]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.142]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.143]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.149]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.150]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.151]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.152]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.163]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.164]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.169]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.171]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.173]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.17]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.180]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.181]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.186]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.196]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.205]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.206]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.211]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.212]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.21]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.23]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.242]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.24]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.24] [clone .constprop.35]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.25]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.26]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.28]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.28] [clone .constprop.59]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.295]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.29]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.30]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.311]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.316]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.31]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.337]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.340]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.34]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.35]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.36]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.37]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.386]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.38]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.39]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.406]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.40]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.41]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.42]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.43]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.44]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.45]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.46]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.48]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.49]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.50]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.510]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.51]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.52]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.53]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.54]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.55]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.56]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.57]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.58]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.59]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.61]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.62]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.63]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.64]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.65]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.66]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.67]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.68]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.69]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.70]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.74]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.75]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.76]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.79]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.80]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.81]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.83]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.84]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.85]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.86]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.87]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.88]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.90]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.91]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.93]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.94]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.95]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.96]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.98]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.100]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.102]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.103]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.107]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.108]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.109]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.112]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.113]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.114]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.117]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.118]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.122]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.123]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.127]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.128]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.132]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.138]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.141]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.146]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.149]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.153]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.154]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.155]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.158]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.165]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.166]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.168]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.176]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.17]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.182]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.19]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.202]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.208]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.20]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.211]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.21]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.228]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.22]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.238]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.23]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.24]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.25]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.26]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.27]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.28]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.291]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.29]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.30]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.317]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.31]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.321]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.32]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.333]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.33]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.345]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.346]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.34]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.35]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.36]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.37]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.382]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.38]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.396]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.39]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.40]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.42]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.43]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.44]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.45]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.46]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.47]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.48]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.49]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.506]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.50]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.51]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.53]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.54]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.55]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.56]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.57]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.58]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.59]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.61]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.62]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.63]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.64]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.66]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.68]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.69]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.70]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.71]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.72]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.73]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.74]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.75]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.76]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.77]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.78]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.79]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.80]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.81]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.82]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.83]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.84]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.86]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.87]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.89]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.91]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.92]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.93]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.94]
 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.99]
 t void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__ops::_Iter_less_iter) [clone .isra.472]
 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*>*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*> > > >, __gnu_cxx::__ops::_Iter_comp_iter<re2::RE2::Set::Compile()::{lambda(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*> const&, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*> const&)#1}> >(__gnu_cxx::__normal_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*>*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*> > > >, __gnu_cxx::__ops::_Iter_comp_iter<re2::RE2::Set::Compile()::{lambda(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*> const&, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*> const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<re2::RE2::Set::Compile()::{lambda(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*> const&, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*> const&)#1}>) [clone .isra.88]
 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<tensorflow::Device**, std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> > >, __gnu_cxx::__ops::_Iter_comp_iter<tensorflow::(anonymous namespace)::FilterSupportedDevices(std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> > const&, tensorflow::gtl::InlinedVector<tensorflow::DeviceType, 4> const&)::{lambda(tensorflow::Device const*, tensorflow::Device const*)#1}> >(__gnu_cxx::__normal_iterator<tensorflow::Device**, std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> > >, __gnu_cxx::__ops::_Iter_comp_iter<tensorflow::(anonymous namespace)::FilterSupportedDevices(std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> > const&, tensorflow::gtl::InlinedVector<tensorflow::DeviceType, 4> const&)::{lambda(tensorflow::Device const*, tensorflow::Device const*)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<tensorflow::(anonymous namespace)::FilterSupportedDevices(std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> > const&, tensorflow::gtl::InlinedVector<tensorflow::DeviceType, 4> const&)::{lambda(tensorflow::Device const*, tensorflow::Device const*)#1}>) [clone .isra.239]
 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<tensorflow::Edge const**, std::vector<tensorflow::Edge const*, std::allocator<tensorflow::Edge const*> > >, __gnu_cxx::__ops::_Iter_comp_iter<tensorflow::CostModel::AddToCostGraphDef(tensorflow::Graph const*, tensorflow::CostGraphDef*) const::{lambda(tensorflow::Edge const*, tensorflow::Edge const*)#1}> >(__gnu_cxx::__normal_iterator<tensorflow::Edge const**, std::vector<tensorflow::Edge const*, std::allocator<tensorflow::Edge const*> > >, __gnu_cxx::__ops::_Iter_comp_iter<tensorflow::CostModel::AddToCostGraphDef(tensorflow::Graph const*, tensorflow::CostGraphDef*) const::{lambda(tensorflow::Edge const*, tensorflow::Edge const*)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<tensorflow::CostModel::AddToCostGraphDef(tensorflow::Graph const*, tensorflow::CostGraphDef*) const::{lambda(tensorflow::Edge const*, tensorflow::Edge const*)#1}>)
 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<tensorflow::NodeDef const**, std::vector<tensorflow::NodeDef const*, std::allocator<tensorflow::NodeDef const*> > >, __gnu_cxx::__ops::_Iter_comp_iter<tensorflow::(anonymous namespace)::Print(tensorflow::gtl::ArraySlice<tensorflow::NodeDef const*>)::{lambda(tensorflow::NodeDef const*, tensorflow::NodeDef const*)#1}> >(__gnu_cxx::__normal_iterator<tensorflow::NodeDef const**, std::vector<tensorflow::NodeDef const*, std::allocator<tensorflow::NodeDef const*> > >, __gnu_cxx::__ops::_Iter_comp_iter<tensorflow::(anonymous namespace)::Print(tensorflow::gtl::ArraySlice<tensorflow::NodeDef const*>)::{lambda(tensorflow::NodeDef const*, tensorflow::NodeDef const*)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<tensorflow::(anonymous namespace)::Print(tensorflow::gtl::ArraySlice<tensorflow::NodeDef const*>)::{lambda(tensorflow::NodeDef const*, tensorflow::NodeDef const*)#1}>) [clone .isra.571]
 t void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [clone .isra.186]
 t void std::__insertion_sort<int*, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, __gnu_cxx::__ops::_Iter_less_iter) [clone .isra.339]
 t void std::__insertion_sort<std::pair<tensorflow::Node*, int>*, __gnu_cxx::__ops::_Iter_less_iter>(std::pair<tensorflow::Node*, int>*, std::pair<tensorflow::Node*, int>*, __gnu_cxx::__ops::_Iter_less_iter) [clone .isra.110]
 t void std::__insertion_sort<tensorflow::Node**, __gnu_cxx::__ops::_Iter_less_iter>(tensorflow::Node**, tensorflow::Node**, __gnu_cxx::__ops::_Iter_less_iter) [clone .isra.106]
 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, long, __gnu_cxx::__ops::_Iter_less_iter) [clone .isra.188]
 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, long, __gnu_cxx::__ops::_Iter_less_iter) [clone .isra.195]
 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, long, __gnu_cxx::__ops::_Iter_less_iter) [clone .isra.201]
 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, long, __gnu_cxx::__ops::_Iter_less_iter) [clone .isra.249]
 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, long, __gnu_cxx::__ops::_Iter_less_iter) [clone .isra.311]
 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, long, __gnu_cxx::__ops::_Iter_less_iter) [clone .isra.502]
 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*>*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*> > > >, long, __gnu_cxx::__ops::_Iter_comp_iter<re2::RE2::Set::Compile()::{lambda(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*> const&, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*> const&)#1}> >(__gnu_cxx::__normal_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*>*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*> > > >, __gnu_cxx::__ops::_Iter_comp_iter<re2::RE2::Set::Compile()::{lambda(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*> const&, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*> const&)#1}>, long, __gnu_cxx::__ops::_Iter_comp_iter<re2::RE2::Set::Compile()::{lambda(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*> const&, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*> const&)#1}>)
 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*>*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*> > > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*>*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*> > > >, __gnu_cxx::__normal_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*>*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tensorflow::OpRegistrationData const*> > > >, long, __gnu_cxx::__ops::_Iter_less_iter) [clone .isra.136]
 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<tensorflow::Device**, std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<tensorflow::(anonymous namespace)::FilterSupportedDevices(std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> > const&, tensorflow::gtl::InlinedVector<tensorflow::DeviceType, 4> const&)::{lambda(tensorflow::Device const*, tensorflow::Device const*)#1}> >(__gnu_cxx::__normal_iterator<tensorflow::Device**, std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> > >, __gnu_cxx::__ops::_Iter_comp_iter<tensorflow::(anonymous namespace)::FilterSupportedDevices(std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> > const&, tensorflow::gtl::InlinedVector<tensorflow::DeviceType, 4> const&)::{lambda(tensorflow::Device const*, tensorflow::Device const*)#1}>, long, __gnu_cxx::__ops::_Iter_comp_iter<tensorflow::(anonymous namespace)::FilterSupportedDevices(std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> > const&, tensorflow::gtl::InlinedVector<tensorflow::DeviceType, 4> const&)::{lambda(tensorflow::Device const*, tensorflow::Device const*)#1}>)
 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<tensorflow::Edge const**, std::vector<tensorflow::Edge const*, std::allocator<tensorflow::Edge const*> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<tensorflow::CostModel::AddToCostGraphDef(tensorflow::Graph const*, tensorflow::CostGraphDef*) const::{lambda(tensorflow::Edge const*, tensorflow::Edge const*)#1}> >(__gnu_cxx::__normal_iterator<tensorflow::Edge const**, std::vector<tensorflow::Edge const*, std::allocator<tensorflow::Edge const*> > >, __gnu_cxx::__ops::_Iter_comp_iter<tensorflow::CostModel::AddToCostGraphDef(tensorflow::Graph const*, tensorflow::CostGraphDef*) const::{lambda(tensorflow::Edge const*, tensorflow::Edge const*)#1}>, long, __gnu_cxx::__ops::_Iter_comp_iter<tensorflow::CostModel::AddToCostGraphDef(tensorflow::Graph const*, tensorflow::CostGraphDef*) const::{lambda(tensorflow::Edge const*, tensorflow::Edge const*)#1}>)
 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<tensorflow::NodeDef const**, std::vector<tensorflow::NodeDef const*, std::allocator<tensorflow::NodeDef const*> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<tensorflow::(anonymous namespace)::Print(tensorflow::gtl::ArraySlice<tensorflow::NodeDef const*>)::{lambda(tensorflow::NodeDef const*, tensorflow::NodeDef const*)#1}> >(__gnu_cxx::__normal_iterator<tensorflow::NodeDef const**, std::vector<tensorflow::NodeDef const*, std::allocator<tensorflow::NodeDef const*> > >, __gnu_cxx::__ops::_Iter_comp_iter<tensorflow::(anonymous namespace)::Print(tensorflow::gtl::ArraySlice<tensorflow::NodeDef const*>)::{lambda(tensorflow::NodeDef const*, tensorflow::NodeDef const*)#1}>, long, __gnu_cxx::__ops::_Iter_comp_iter<tensorflow::(anonymous namespace)::Print(tensorflow::gtl::ArraySlice<tensorflow::NodeDef const*>)::{lambda(tensorflow::NodeDef const*, tensorflow::NodeDef const*)#1}>)
 t void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, long, __gnu_cxx::__ops::_Iter_less_iter) [clone .isra.199]
 t void std::__introsort_loop<int*, long, __gnu_cxx::__ops::_Iter_less_iter>(int*, int*, long, __gnu_cxx::__ops::_Iter_less_iter) [clone .isra.358]
 t void std::__introsort_loop<std::pair<tensorflow::Node*, int>*, long, __gnu_cxx::__ops::_Iter_less_iter>(std::pair<tensorflow::Node*, int>*, std::pair<tensorflow::Node*, int>*, long, __gnu_cxx::__ops::_Iter_less_iter) [clone .isra.132]
 t void std::__introsort_loop<tensorflow::Node**, long, __gnu_cxx::__ops::_Iter_less_iter>(tensorflow::Node**, tensorflow::Node**, long, __gnu_cxx::__ops::_Iter_less_iter) [clone .isra.123]
 t void std::__merge_sort_with_buffer<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int*, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int*, __gnu_cxx::__ops::_Iter_less_iter) [clone .isra.113]
 t void std::__merge_sort_with_buffer<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, __gnu_cxx::__ops::_Iter_less_iter) [clone .isra.155]
 t void std::__once_call_impl<std::_Bind_simple<re2::Prog::GetDFA(re2::Prog::MatchKind)::{lambda(re2::Prog*)#1} (re2::Prog*)> >()
 t void std::__once_call_impl<std::_Bind_simple<re2::Prog::GetDFA(re2::Prog::MatchKind)::{lambda(re2::Prog*)#2} (re2::Prog*)> >()
 t void std::__once_call_impl<std::_Bind_simple<re2::Prog::GetDFA(re2::Prog::MatchKind)::{lambda(re2::Prog*)#3} (re2::Prog*)> >()
 t void std::__once_call_impl<std::_Bind_simple<re2::Prog::first_byte()::{lambda(re2::Prog*)#1} (re2::Prog*)> >()
 t void std::__once_call_impl<std::_Bind_simple<re2::RE2::CapturingGroupNames() const::{lambda(re2::RE2 const*)#1} (re2::RE2 const*)> >()
 t void std::__once_call_impl<std::_Bind_simple<re2::RE2::Init(re2::StringPiece const&, re2::RE2::Options const&)::{lambda()#1} ()> >()
 t void std::__once_call_impl<std::_Bind_simple<re2::RE2::NamedCapturingGroups() const::{lambda(re2::RE2 const*)#1} (re2::RE2 const*)> >()
 t void std::__once_call_impl<std::_Bind_simple<re2::RE2::NumberOfCapturingGroups() const::{lambda(re2::RE2 const*)#1} (re2::RE2 const*)> >()
 t void std::__once_call_impl<std::_Bind_simple<re2::RE2::ReverseProg() const::{lambda(re2::RE2 const*)#1} (re2::RE2 const*)> >()
 t void std::__once_call_impl<std::_Bind_simple<re2::Regexp::Incref()::{lambda()#1} ()> >()
 t void std::__once_call_impl<std::_Bind_simple<tensorflow::port::InfoAboutUnusedCPUFeatures()::{lambda()#1} ()> >()
 t void std::__once_call_impl<std::_Bind_simple<tensorflow::profile_utils::CpuUtils::GetCpuUtilsHelperSingletonInstance()::{lambda()#1} ()> >()
 t void std::__push_heap<__gnu_cxx::__normal_iterator<tensorflow::(anonymous namespace)::PriorityTopoSortNode*, std::vector<tensorflow::(anonymous namespace)::PriorityTopoSortNode, std::allocator<tensorflow::(anonymous namespace)::PriorityTopoSortNode> > >, long, tensorflow::(anonymous namespace)::PriorityTopoSortNode, __gnu_cxx::__ops::_Iter_comp_val<tensorflow::(anonymous namespace)::PriorityTopoSortNodeGreater> >(__gnu_cxx::__normal_iterator<tensorflow::(anonymous namespace)::PriorityTopoSortNode*, std::vector<tensorflow::(anonymous namespace)::PriorityTopoSortNode, std::allocator<tensorflow::(anonymous namespace)::PriorityTopoSortNode> > >, long, long, tensorflow::(anonymous namespace)::PriorityTopoSortNode, __gnu_cxx::__ops::_Iter_comp_val<tensorflow::(anonymous namespace)::PriorityTopoSortNodeGreater>) [clone .isra.60]
 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*>*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*> > > >, __gnu_cxx::__ops::_Val_comp_iter<re2::RE2::Set::Compile()::{lambda(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*> const&, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*> const&)#1}> >(__gnu_cxx::__normal_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*>*, std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*> > > >, __gnu_cxx::__ops::_Val_comp_iter<re2::RE2::Set::Compile()::{lambda(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*> const&, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, re2::Regexp*> const&)#1}>) [clone .isra.75]
 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<tensorflow::Device**, std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> > >, __gnu_cxx::__ops::_Val_comp_iter<tensorflow::(anonymous namespace)::FilterSupportedDevices(std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> > const&, tensorflow::gtl::InlinedVector<tensorflow::DeviceType, 4> const&)::{lambda(tensorflow::Device const*, tensorflow::Device const*)#1}> >(__gnu_cxx::__normal_iterator<tensorflow::Device**, std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> > >, __gnu_cxx::__ops::_Val_comp_iter<tensorflow::(anonymous namespace)::FilterSupportedDevices(std::vector<tensorflow::Device*, std::allocator<tensorflow::Device*> > const&, tensorflow::gtl::InlinedVector<tensorflow::DeviceType, 4> const&)::{lambda(tensorflow::Device const*, tensorflow::Device const*)#1}>) [clone .isra.178]
 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<tensorflow::Edge const**, std::vector<tensorflow::Edge const*, std::allocator<tensorflow::Edge const*> > >, __gnu_cxx::__ops::_Val_comp_iter<tensorflow::CostModel::AddToCostGraphDef(tensorflow::Graph const*, tensorflow::CostGraphDef*) const::{lambda(tensorflow::Edge const*, tensorflow::Edge const*)#1}> >(__gnu_cxx::__normal_iterator<tensorflow::Edge const**, std::vector<tensorflow::Edge const*, std::allocator<tensorflow::Edge const*> > >, __gnu_cxx::__ops::_Val_comp_iter<tensorflow::CostModel::AddToCostGraphDef(tensorflow::Graph const*, tensorflow::CostGraphDef*) const::{lambda(tensorflow::Edge const*, tensorflow::Edge const*)#1}>)
 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<tensorflow::NodeDef const**, std::vector<tensorflow::NodeDef const*, std::allocator<tensorflow::NodeDef const*> > >, __gnu_cxx::__ops::_Val_comp_iter<tensorflow::(anonymous namespace)::Print(tensorflow::gtl::ArraySlice<tensorflow::NodeDef const*>)::{lambda(tensorflow::NodeDef const*, tensorflow::NodeDef const*)#1}> >(__gnu_cxx::__normal_iterator<tensorflow::NodeDef const**, std::vector<tensorflow::NodeDef const*, std::allocator<tensorflow::NodeDef const*> > >, __gnu_cxx::__ops::_Val_comp_iter<tensorflow::(anonymous namespace)::Print(tensorflow::gtl::ArraySlice<tensorflow::NodeDef const*>)::{lambda(tensorflow::NodeDef const*, tensorflow::NodeDef const*)#1}>) [clone .isra.569]
 t void std::__unguarded_linear_insert<std::pair<tensorflow::Node*, int>*, __gnu_cxx::__ops::_Val_less_iter>(std::pair<tensorflow::Node*, int>*, __gnu_cxx::__ops::_Val_less_iter) [clone .isra.77]
 t void std::vector<std::pair<tensorflow::Node const*, tensorflow::(anonymous namespace)::ExecutorState::Entry>, std::allocator<std::pair<tensorflow::Node const*, tensorflow::(anonymous namespace)::ExecutorState::Entry> > >::emplace_back<std::pair<tensorflow::Node const*, tensorflow::(anonymous namespace)::ExecutorState::Entry> >(std::pair<tensorflow::Node const*, tensorflow::(anonymous namespace)::ExecutorState::Entry>&&)
 t void std::vector<tensorflow::(anonymous namespace)::PriorityTopoSortNode, std::allocator<tensorflow::(anonymous namespace)::PriorityTopoSortNode> >::_M_emplace_back_aux<tensorflow::NodeDef const*&, long long const&>(tensorflow::NodeDef const*&, long long const&)
 t void std::vector<tensorflow::DFS(tensorflow::Graph const&, std::function<void (tensorflow::Node*)> const&, std::function<void (tensorflow::Node*)> const&, std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> const&)::Work, std::allocator<tensorflow::DFS(tensorflow::Graph const&, std::function<void (tensorflow::Node*)> const&, std::function<void (tensorflow::Node*)> const&, std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> const&)::Work> >::emplace_back<tensorflow::DFS(tensorflow::Graph const&, std::function<void (tensorflow::Node*)> const&, std::function<void (tensorflow::Node*)> const&, std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> const&)::Work>(tensorflow::DFS(tensorflow::Graph const&, std::function<void (tensorflow::Node*)> const&, std::function<void (tensorflow::Node*)> const&, std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> const&)::Work&&)
 t void std::vector<tensorflow::shape_inference::DimensionOrConstant, std::allocator<tensorflow::shape_inference::DimensionOrConstant> >::_M_range_initialize<tensorflow::shape_inference::DimensionOrConstant const*>(tensorflow::shape_inference::DimensionOrConstant const*, tensorflow::shape_inference::DimensionOrConstant const*, std::forward_iterator_tag) [clone .isra.143] [clone .constprop.192]
 t void std::vector<void tensorflow::(anonymous namespace)::ReverseDFSFromHelper<tensorflow::Node const*>(tensorflow::Graph const&, tensorflow::gtl::ArraySlice<tensorflow::Node const*>, std::function<void (tensorflow::Node const*)> const&, std::function<void (tensorflow::Node const*)> const&, std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> const&)::Work, std::allocator<void tensorflow::(anonymous namespace)::ReverseDFSFromHelper<tensorflow::Node const*>(tensorflow::Graph const&, tensorflow::gtl::ArraySlice<tensorflow::Node const*>, std::function<void (tensorflow::Node const*)> const&, std::function<void (tensorflow::Node const*)> const&, std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> const&)::Work> >::emplace_back<void tensorflow::(anonymous namespace)::ReverseDFSFromHelper<tensorflow::Node const*>(tensorflow::Graph const&, tensorflow::gtl::ArraySlice<tensorflow::Node const*>, std::function<void (tensorflow::Node const*)> const&, std::function<void (tensorflow::Node const*)> const&, std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> const&)::Work>(void tensorflow::(anonymous namespace)::ReverseDFSFromHelper<tensorflow::Node const*>(tensorflow::Graph const&, tensorflow::gtl::ArraySlice<tensorflow::Node const*>, std::function<void (tensorflow::Node const*)> const&, std::function<void (tensorflow::Node const*)> const&, std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> const&)::Work&&)
 t void std::vector<void tensorflow::(anonymous namespace)::ReverseDFSFromHelper<tensorflow::Node*>(tensorflow::Graph const&, tensorflow::gtl::ArraySlice<tensorflow::Node*>, std::function<void (tensorflow::Node*)> const&, std::function<void (tensorflow::Node*)> const&, std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> const&)::Work, std::allocator<void tensorflow::(anonymous namespace)::ReverseDFSFromHelper<tensorflow::Node*>(tensorflow::Graph const&, tensorflow::gtl::ArraySlice<tensorflow::Node*>, std::function<void (tensorflow::Node*)> const&, std::function<void (tensorflow::Node*)> const&, std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> const&)::Work> >::emplace_back<void tensorflow::(anonymous namespace)::ReverseDFSFromHelper<tensorflow::Node*>(tensorflow::Graph const&, tensorflow::gtl::ArraySlice<tensorflow::Node*>, std::function<void (tensorflow::Node*)> const&, std::function<void (tensorflow::Node*)> const&, std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> const&)::Work>(void tensorflow::(anonymous namespace)::ReverseDFSFromHelper<tensorflow::Node*>(tensorflow::Graph const&, tensorflow::gtl::ArraySlice<tensorflow::Node*>, std::function<void (tensorflow::Node*)> const&, std::function<void (tensorflow::Node*)> const&, std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> const&)::Work&&)
 t void tensorflow::(anonymous namespace)::AddAttr<int>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int const&, tensorflow::NodeDef*) [clone .constprop.620]
 t void tensorflow::(anonymous namespace)::AddAttr<tensorflow::DataType>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tensorflow::DataType const&, tensorflow::NodeDef*) [clone .constprop.619]
 t void tensorflow::(anonymous namespace)::Helper<Eigen::half>::Encode<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(tensorflow::TensorBuffer*, long long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) [clone .isra.130] [clone .constprop.417]
 t void tensorflow::(anonymous namespace)::OutputToLog<tensorflow::MemoryLogStep>(tensorflow::MemoryLogStep const&) [clone .constprop.44]
 t void tensorflow::(anonymous namespace)::OutputToLog<tensorflow::MemoryLogTensorAllocation>(tensorflow::MemoryLogTensorAllocation const&) [clone .constprop.43]
 t void tensorflow::(anonymous namespace)::OutputToLog<tensorflow::MemoryLogTensorDeallocation>(tensorflow::MemoryLogTensorDeallocation const&) [clone .constprop.42]
 t void tensorflow::(anonymous namespace)::OutputToLog<tensorflow::MemoryLogTensorOutput>(tensorflow::MemoryLogTensorOutput const&) [clone .constprop.41]
 t void tensorflow::(anonymous namespace)::PrintOneDim<Eigen::half const>(int, tensorflow::gtl::InlinedVector<long long, 4>, long long, int, Eigen::half const*, long long*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 t void tensorflow::(anonymous namespace)::PrintOneDim<bool const>(int, tensorflow::gtl::InlinedVector<long long, 4>, long long, int, bool const*, long long*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 t void tensorflow::(anonymous namespace)::PrintOneDim<double const>(int, tensorflow::gtl::InlinedVector<long long, 4>, long long, int, double const*, long long*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 t void tensorflow::(anonymous namespace)::PrintOneDim<float const>(int, tensorflow::gtl::InlinedVector<long long, 4>, long long, int, float const*, long long*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 t void tensorflow::(anonymous namespace)::PrintOneDim<int const>(int, tensorflow::gtl::InlinedVector<long long, 4>, long long, int, int const*, long long*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 t void tensorflow::(anonymous namespace)::PrintOneDim<long long const>(int, tensorflow::gtl::InlinedVector<long long, 4>, long long, int, long long const*, long long*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 t void tensorflow::(anonymous namespace)::PrintOneDim<short const>(int, tensorflow::gtl::InlinedVector<long long, 4>, long long, int, short const*, long long*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 t void tensorflow::(anonymous namespace)::PrintOneDim<signed char const>(int, tensorflow::gtl::InlinedVector<long long, 4>, long long, int, signed char const*, long long*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 t void tensorflow::(anonymous namespace)::PrintOneDim<unsigned char const>(int, tensorflow::gtl::InlinedVector<long long, 4>, long long, int, unsigned char const*, long long*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 t void tensorflow::(anonymous namespace)::PrintOneDim<unsigned int const>(int, tensorflow::gtl::InlinedVector<long long, 4>, long long, int, unsigned int const*, long long*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 t void tensorflow::(anonymous namespace)::PrintOneDim<unsigned long long const>(int, tensorflow::gtl::InlinedVector<long long, 4>, long long, int, unsigned long long const*, long long*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 t void tensorflow::(anonymous namespace)::PrintOneDim<unsigned short const>(int, tensorflow::gtl::InlinedVector<long long, 4>, long long, int, unsigned short const*, long long*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)
 t void tensorflow::(anonymous namespace)::ReverseDFSFromHelper<tensorflow::Node const*>(tensorflow::Graph const&, tensorflow::gtl::ArraySlice<tensorflow::Node const*>, std::function<void (tensorflow::Node const*)> const&, std::function<void (tensorflow::Node const*)> const&, std::function<bool (tensorflow::Node const*, tensorflow::Node const*)> const&) [clone .constprop.237]
 t void tensorflow::AppendTo<tensorflow::PartialTensorShape>(tensorflow::TensorShapeBase<tensorflow::PartialTensorShape> const&, tensorflow::gtl::InlinedVector<long long, 8>*) [clone .constprop.75]
 t void tensorflow::AppendTo<tensorflow::TensorShape>(tensorflow::TensorShapeBase<tensorflow::TensorShape> const&, tensorflow::gtl::InlinedVector<long long, 8>*) [clone .constprop.76]
 t void tensorflow::gtl::InlinedVector<tensorflow::(anonymous namespace)::ExecutorState::Entry, 4>::Grow<&tensorflow::gtl::InlinedVector<tensorflow::(anonymous namespace)::ExecutorState::Entry, 4>::Move, tensorflow::gtl::InlinedVector<tensorflow::(anonymous namespace)::ExecutorState::Entry, 4>::Uninitialized>(unsigned long)
 t void tensorflow::gtl::InlinedVector<tensorflow::(anonymous namespace)::ExecutorState::TaggedNode, 16>::emplace_back<tensorflow::(anonymous namespace)::ExecutorState::TaggedNode const&>(tensorflow::(anonymous namespace)::ExecutorState::TaggedNode const&)
 t write_file_header
 t write_file_trailer
 t write_frame_header
 t write_marker_byte
 t write_marker_header
 t write_scan_header
 t write_tables_only
 t wrtmessage
 t ycc_rgb565D_convert
 t ycc_rgb565_convert
 t ycc_rgb_convert
 t ycck_cmyk_convert
 time
 tolower
 toupper
 typeinfo for bool
 typeinfo for char
 typeinfo for double
 typeinfo for float
 typeinfo for int
 typeinfo for std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >
 typeinfo for std::exception
 typeinfo for std::ostream
 typeinfo for unsigned char
 typeinfo for void
 u Eigen::NonBlockingThreadPoolTempl<tensorflow::thread::EigenEnvironment>::GetPerThread()::per_thread_
 u guard variable for perftools::gputools::MultiPlatformManager::GetPlatformByIdMap()::instance
 u guard variable for perftools::gputools::MultiPlatformManager::GetPlatformMap()::instance
 u guard variable for perftools::gputools::MultiPlatformManager::GetPlatformsMutex()::platforms_mutex
 u perftools::gputools::MultiPlatformManager::GetPlatformByIdMap()::instance
 u perftools::gputools::MultiPlatformManager::GetPlatformMap[abi:cxx11]()::instance
 u perftools::gputools::MultiPlatformManager::GetPlatformsMutex()::platforms_mutex
 u perftools::gputools::port::HumanReadableNumBytes::ToString[abi:cxx11](long long)::units
 u void absl::base_internal::CallOnceImpl<void (&)()>(std::atomic<unsigned int>*, absl::base_internal::SchedulingMode, void (&)())::trans
 u void absl::base_internal::CallOnceImpl<void (&)(void (*)(void*)), void (*&)(void*)>(std::atomic<unsigned int>*, absl::base_internal::SchedulingMode, void (&)(void (*)(void*)), void (*&)(void*))::trans
 unlink
 vsnprintf
 vtable for __cxxabiv1::__class_type_info
 vtable for __cxxabiv1::__function_type_info
 vtable for __cxxabiv1::__pointer_type_info
 vtable for __cxxabiv1::__si_class_type_info
 vtable for __cxxabiv1::__vmi_class_type_info
 vtable for std::__cxx11::basic_istringstream<char, std::char_traits<char>, std::allocator<char> >
 vtable for std::__cxx11::basic_ostringstream<char, std::char_traits<char>, std::allocator<char> >
 vtable for std::__cxx11::basic_stringbuf<char, std::char_traits<char>, std::allocator<char> >
 vtable for std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >
 vtable for std::basic_ios<char, std::char_traits<char> >
 vtable for std::basic_streambuf<char, std::char_traits<char> >
 waitpid
 write
